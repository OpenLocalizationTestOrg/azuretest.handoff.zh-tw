<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Configuring Python with Azure App Service Web Apps</source>
          <target state="new">Configuring Python with Azure App Service Web Apps</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This tutorial describes options for authoring and configuring a basic Web server Gateway Interface (WSGI) compliant Python application on Azure App Service Web Apps.</source>
          <target state="new">This tutorial describes options for authoring and configuring a basic Web server Gateway Interface (WSGI) compliant Python application on Azure App Service Web Apps.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Configuring Python with Azure App Service Web Apps</source>
          <target state="new">Configuring Python with Azure App Service Web Apps</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial describes options for authoring and configuring a basic Web Server Gateway Interface (WSGI) compliant Python application on <bpt id="p1">[</bpt>Azure App Service Web Apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept>.</source>
          <target state="new">This tutorial describes options for authoring and configuring a basic Web Server Gateway Interface (WSGI) compliant Python application on <bpt id="p1">[</bpt>Azure App Service Web Apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept>.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It describes additional features of Git deployment, such as virtual environment and package installation using requirements.txt.</source>
          <target state="new">It describes additional features of Git deployment, such as virtual environment and package installation using requirements.txt.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Bottle, Django or Flask?</source>
          <target state="new">Bottle, Django or Flask?</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The Azure Marketplace contains templates for the Bottle, Django and Flask frameworks.</source>
          <target state="new">The Azure Marketplace contains templates for the Bottle, Django and Flask frameworks.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If you are developing your first web app in Azure App Service, or you are not familiar with Git, we recommend that you follow one of these tutorials, which include step-by-step instructions for building a working application from the gallery using Git deployment from Windows or Mac:</source>
          <target state="new">If you are developing your first web app in Azure App Service, or you are not familiar with Git, we recommend that you follow one of these tutorials, which include step-by-step instructions for building a working application from the gallery using Git deployment from Windows or Mac:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creating web apps with Bottle</source>
          <target state="new">Creating web apps with Bottle</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creating web apps with Django</source>
          <target state="new">Creating web apps with Django</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating web apps with Flask</source>
          <target state="new">Creating web apps with Flask</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Web app creation on Azure Preview Portal</source>
          <target state="new">Web app creation on Azure Preview Portal</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This tutorial assumes an existing Azure subscription and access to the Azure Preview Portal.</source>
          <target state="new">This tutorial assumes an existing Azure subscription and access to the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you do not have an existing web app, you can create one from the <bpt id="p1">[</bpt>Azure Preview Portal<ept id="p1">](https://portal.azure.com)</ept>.</source>
          <target state="new">If you do not have an existing web app, you can create one from the <bpt id="p1">[</bpt>Azure Preview Portal<ept id="p1">](https://portal.azure.com)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Click the NEW button in the bottom left corner, then click <bpt id="p1">**</bpt>Web + Mobile<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Web app<ept id="p2">**</ept>.</source>
          <target state="new">Click the NEW button in the bottom left corner, then click <bpt id="p1">**</bpt>Web + Mobile<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Web app<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Git Publishing</source>
          <target state="new">Git Publishing</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Configure Git publishing for your newly created web app by following the instructions at <bpt id="p1">[</bpt>Continuous deployment using GIT in Azure App Service<ept id="p1">](web-sites-publish-source-control.md)</ept>.</source>
          <target state="new">Configure Git publishing for your newly created web app by following the instructions at <bpt id="p1">[</bpt>Continuous deployment using GIT in Azure App Service<ept id="p1">](web-sites-publish-source-control.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This tutorial uses Git to create, manage, and publish our Python web app to Azure App Service.</source>
          <target state="new">This tutorial uses Git to create, manage, and publish our Python web app to Azure App Service.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Once Git publishing is set up, a Git repository will be created and associated with your web app.</source>
          <target state="new">Once Git publishing is set up, a Git repository will be created and associated with your web app.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The repository's URL will be displayed and can henceforth be used to push data from the local development environment to the cloud.</source>
          <target state="new">The repository's URL will be displayed and can henceforth be used to push data from the local development environment to the cloud.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To publish applications via Git, make sure a Git client is also installed and use the instructions provided to push your web app content to Azure App Service.</source>
          <target state="new">To publish applications via Git, make sure a Git client is also installed and use the instructions provided to push your web app content to Azure App Service.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Application Overview</source>
          <target state="new">Application Overview</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the next sections, the following files are created.</source>
          <target state="new">In the next sections, the following files are created.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>They should be placed in the root of the Git repository.</source>
          <target state="new">They should be placed in the root of the Git repository.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>WSGI Handler</source>
          <target state="new">WSGI Handler</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>WSGI is a Python standard described by <bpt id="p1">[</bpt>PEP 3333<ept id="p1">](http://www.python.org/dev/peps/pep-3333/)</ept> defining an interface between the web server and Python.</source>
          <target state="new">WSGI is a Python standard described by <bpt id="p1">[</bpt>PEP 3333<ept id="p1">](http://www.python.org/dev/peps/pep-3333/)</ept> defining an interface between the web server and Python.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It provides a standardized interface for writing various web applications and frameworks using Python.</source>
          <target state="new">It provides a standardized interface for writing various web applications and frameworks using Python.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Popular Python web frameworks today use WSGI.</source>
          <target state="new">Popular Python web frameworks today use WSGI.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Azure App Service Web Apps gives you support for any such frameworks; in addition, advanced users can even author their own as long as the custom handler follows the WSGI specification guidelines.</source>
          <target state="new">Azure App Service Web Apps gives you support for any such frameworks; in addition, advanced users can even author their own as long as the custom handler follows the WSGI specification guidelines.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Here's an example of an <ph id="ph1">`app.py`</ph> that defines a custom handler:</source>
          <target state="new">Here's an example of an <ph id="ph1">`app.py`</ph> that defines a custom handler:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can run this application locally with <ph id="ph1">`python app.py`</ph>, then browse to <ph id="ph2">`http://localhost:5555`</ph> in your web browser.</source>
          <target state="new">You can run this application locally with <ph id="ph1">`python app.py`</ph>, then browse to <ph id="ph2">`http://localhost:5555`</ph> in your web browser.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Virtual Environment</source>
          <target state="new">Virtual Environment</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Although the example app above doesn't require any external packages, it is likely that your application will require some.</source>
          <target state="new">Although the example app above doesn't require any external packages, it is likely that your application will require some.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To help manage external package dependencies, Azure Git deployment supports the creation of virtual environments.</source>
          <target state="new">To help manage external package dependencies, Azure Git deployment supports the creation of virtual environments.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When Azure detects a requirements.txt in the root of the repository, it automatically creates a virtual environment named <ph id="ph1">`env`</ph>.</source>
          <target state="new">When Azure detects a requirements.txt in the root of the repository, it automatically creates a virtual environment named <ph id="ph1">`env`</ph>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This only occurs on the first deployment, or during any deployment after the selected Python runtime has changed.</source>
          <target state="new">This only occurs on the first deployment, or during any deployment after the selected Python runtime has changed.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You will probably want to create a virtual environment locally for development, but don't include it in your Git repository.</source>
          <target state="new">You will probably want to create a virtual environment locally for development, but don't include it in your Git repository.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Package Management</source>
          <target state="new">Package Management</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Packages listed in requirements.txt will be installed automatically in the virtual environment using pip.</source>
          <target state="new">Packages listed in requirements.txt will be installed automatically in the virtual environment using pip.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This happens on every deployment, but pip will skip installation if a package is already installed.</source>
          <target state="new">This happens on every deployment, but pip will skip installation if a package is already installed.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Example <ph id="ph1">`requirements.txt`</ph>:</source>
          <target state="new">Example <ph id="ph1">`requirements.txt`</ph>:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Python Version</source>
          <target state="new">Python Version</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Example <ph id="ph1">`runtime.txt`</ph>:</source>
          <target state="new">Example <ph id="ph1">`runtime.txt`</ph>:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Web.config</source>
          <target state="new">Web.config</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You'll need to create a web.config file to specify how the server should handle requests.</source>
          <target state="new">You'll need to create a web.config file to specify how the server should handle requests.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Note that if you have a web.x.y.config file in your repository, where x.y matches the selected Python runtime, then Azure will automatically copy the appropriate file as web.config.</source>
          <target state="new">Note that if you have a web.x.y.config file in your repository, where x.y matches the selected Python runtime, then Azure will automatically copy the appropriate file as web.config.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following web.config examples rely on a virtual environment proxy script, which is described in the next section.</source>
          <target state="new">The following web.config examples rely on a virtual environment proxy script, which is described in the next section.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>They work with the WSGI handler used in the example <ph id="ph1">`app.py`</ph> above.</source>
          <target state="new">They work with the WSGI handler used in the example <ph id="ph1">`app.py`</ph> above.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example <ph id="ph1">`web.config`</ph> for Python 2.7:</source>
          <target state="new">Example <ph id="ph1">`web.config`</ph> for Python 2.7:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example <ph id="ph1">`web.config`</ph> for Python 3.4:</source>
          <target state="new">Example <ph id="ph1">`web.config`</ph> for Python 3.4:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Static files will be handled by the web server directly, without going through Python code, for improved performance.</source>
          <target state="new">Static files will be handled by the web server directly, without going through Python code, for improved performance.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the above examples, the location of the static files on disk should match the location in the URL.</source>
          <target state="new">In the above examples, the location of the static files on disk should match the location in the URL.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This means that a request for <ph id="ph1">`http://pythonapp.azurewebsites.net/static/site.css`</ph> will serve the file on disk at <ph id="ph2">`\static\site.css`</ph>.</source>
          <target state="new">This means that a request for <ph id="ph1">`http://pythonapp.azurewebsites.net/static/site.css`</ph> will serve the file on disk at <ph id="ph2">`\static\site.css`</ph>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It's possible configure the rule <ph id="ph1">`Static Files`</ph> to serve files from a location on disk that differs from the location in the URL.</source>
          <target state="new">It's possible configure the rule <ph id="ph1">`Static Files`</ph> to serve files from a location on disk that differs from the location in the URL.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the following rule definition, a request for <ph id="ph1">`http://pythonapp.azurewebsites.net/static/site.css`</ph> will serve the file on disk at <ph id="ph2">`\FlaskWebProject\static\site.css`</ph>, instead of <ph id="ph3">`\static\site.css`</ph>.</source>
          <target state="new">In the following rule definition, a request for <ph id="ph1">`http://pythonapp.azurewebsites.net/static/site.css`</ph> will serve the file on disk at <ph id="ph2">`\FlaskWebProject\static\site.css`</ph>, instead of <ph id="ph3">`\static\site.css`</ph>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`WSGI_ALT_VIRTUALENV_HANDLER`</ph> is where you specify the WSGI handler.</source>
          <target state="new"><ph id="ph1">`WSGI_ALT_VIRTUALENV_HANDLER`</ph> is where you specify the WSGI handler.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the above examples, it's <ph id="ph1">`app.wsgi_app`</ph> because the handler is a function named <ph id="ph2">`wsgi_app`</ph> in <ph id="ph3">`app.py`</ph> in the root folder.</source>
          <target state="new">In the above examples, it's <ph id="ph1">`app.wsgi_app`</ph> because the handler is a function named <ph id="ph2">`wsgi_app`</ph> in <ph id="ph3">`app.py`</ph> in the root folder.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PYTHONPATH`</ph> can be customized, but if you install all your dependencies in the virtual environment by specifying them in requirements.txt, you shouldn't need to change it.</source>
          <target state="new"><ph id="ph1">`PYTHONPATH`</ph> can be customized, but if you install all your dependencies in the virtual environment by specifying them in requirements.txt, you shouldn't need to change it.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Virtual Environment Proxy</source>
          <target state="new">Virtual Environment Proxy</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following script is used to retrieve the WSGI handler, activate the virtual environment and log errors.</source>
          <target state="new">The following script is used to retrieve the WSGI handler, activate the virtual environment and log errors.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>It is designed to be generic and used without modifications.</source>
          <target state="new">It is designed to be generic and used without modifications.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Contents of <ph id="ph1">`ptvs_virtualenv_proxy.py`</ph>:</source>
          <target state="new">Contents of <ph id="ph1">`ptvs_virtualenv_proxy.py`</ph>:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Customize Git deployment</source>
          <target state="new">Customize Git deployment</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Troubleshooting - Package Installation</source>
          <target state="new">Troubleshooting - Package Installation</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Troubleshooting - Virtual Environment</source>
          <target state="new">Troubleshooting - Virtual Environment</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id="p1">[</bpt>Try App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id="p1">[</bpt>Try App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>No credit cards required; no commitments.</source>
          <target state="new">No credit cards required; no commitments.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>What's changed</source>
          <target state="new">What's changed</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For a guide to the change from Websites to App Service see: <bpt id="p1">[</bpt>Azure App Service and Its Impact on Existing Azure Services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept></source>
          <target state="new">For a guide to the change from Websites to App Service see: <bpt id="p1">[</bpt>Azure App Service and Its Impact on Existing Azure Services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept></target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For a guide to the change of the old portal to the new portal see: <bpt id="p1">[</bpt>Reference for navigating the preview portal<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept></source>
          <target state="new">For a guide to the change of the old portal to the new portal see: <bpt id="p1">[</bpt>Reference for navigating the preview portal<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept></target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48e64011baea468bd243fbfb5fb371f0666cc7df</xliffext:olfilehash>
  </header>
</xliff>