<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs Rich Push</source>
          <target state="new">Azure Notification Hubs Rich Push</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to send rich push notifications to an iOS app from Azure.</source>
          <target state="new">Learn how to send rich push notifications to an iOS app from Azure.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Code samples written in Objective-C and C#.</source>
          <target state="new">Code samples written in Objective-C and C#.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs Rich Push</source>
          <target state="new">Azure Notification Hubs Rich Push</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In order to engage users with instant rich contents, an application might want to push beyond plain text.</source>
          <target state="new">In order to engage users with instant rich contents, an application might want to push beyond plain text.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>These notifications promote user interactions and  present content such as urls, sounds, images/coupons, and more.</source>
          <target state="new">These notifications promote user interactions and  present content such as urls, sounds, images/coupons, and more.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This tutorial builds on the <bpt id="p1">[</bpt>Notify Users<ept id="p1">](notification-hubs-aspnet-backend-ios-notify-users.md)</ept> topic, and shows how to send push notifications that incorporate payloads (for example, image).</source>
          <target state="new">This tutorial builds on the <bpt id="p1">[</bpt>Notify Users<ept id="p1">](notification-hubs-aspnet-backend-ios-notify-users.md)</ept> topic, and shows how to send push notifications that incorporate payloads (for example, image).</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This tutorial is compatible with iOS 7 &amp; 8.</source>
          <target state="new">This tutorial is compatible with iOS 7 &amp; 8.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>At a high level:</source>
          <target state="new">At a high level:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The app backend:</source>
          <target state="new">The app backend:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Stores the rich payload (in this case, image) in the backend database/local storage</source>
          <target state="new">Stores the rich payload (in this case, image) in the backend database/local storage</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Sends ID of this rich notification to the device</source>
          <target state="new">Sends ID of this rich notification to the device</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>App on the device:</source>
          <target state="new">App on the device:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Contacts the backend requesting the rich payload with the ID it receives</source>
          <target state="new">Contacts the backend requesting the rich payload with the ID it receives</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Sends users notifications on the device when data retrieval is complete, and shows the payload immediately when users tap to learn more</source>
          <target state="new">Sends users notifications on the device when data retrieval is complete, and shows the payload immediately when users tap to learn more</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>WebAPI Project</source>
          <target state="new">WebAPI Project</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open the <bpt id="p1">**</bpt>AppBackend<ept id="p1">**</ept> project that you created in the <bpt id="p2">[</bpt>Notify Users<ept id="p2">](notification-hubs-aspnet-backend-ios-notify-users.md)</ept> tutorial.</source>
          <target state="new">In Visual Studio, open the <bpt id="p1">**</bpt>AppBackend<ept id="p1">**</ept> project that you created in the <bpt id="p2">[</bpt>Notify Users<ept id="p2">](notification-hubs-aspnet-backend-ios-notify-users.md)</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Obtain an image you would like to notify users with, and put it in an <bpt id="p1">**</bpt>img<ept id="p1">**</ept> folder in your project directory.</source>
          <target state="new">Obtain an image you would like to notify users with, and put it in an <bpt id="p1">**</bpt>img<ept id="p1">**</ept> folder in your project directory.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Show All Files<ept id="p1">**</ept> in the Solution Explorer, and right-click the folder to <bpt id="p2">**</bpt>Include In Project<ept id="p2">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Show All Files<ept id="p1">**</ept> in the Solution Explorer, and right-click the folder to <bpt id="p2">**</bpt>Include In Project<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>With the image selected, change its Build Action in Properties window to <bpt id="p1">**</bpt>Embedded Resource<ept id="p1">**</ept>.</source>
          <target state="new">With the image selected, change its Build Action in Properties window to <bpt id="p1">**</bpt>Embedded Resource<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Notifications.cs<ept id="p1">**</ept>, add the following using statement:</source>
          <target state="new">In <bpt id="p1">**</bpt>Notifications.cs<ept id="p1">**</ept>, add the following using statement:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Update the whole <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> class with the following code.</source>
          <target state="new">Update the whole <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> class with the following code.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Be sure to replace the placeholders with your notification hub credentials and image file name.</source>
          <target state="new">Be sure to replace the placeholders with your notification hub credentials and image file name.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>  (optional) Refer to <bpt id="p1">[</bpt>How to embed and access resources by using Visual C#<ept id="p1">](http://support.microsoft.com/kb/319292)</ept> for more information on how to add and obtain project resources.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>  (optional) Refer to <bpt id="p1">[</bpt>How to embed and access resources by using Visual C#<ept id="p1">](http://support.microsoft.com/kb/319292)</ept> for more information on how to add and obtain project resources.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>NotificationsController.cs<ept id="p1">**</ept>, redefine <bpt id="p2">**</bpt>NotificationsController<ept id="p2">**</ept>  with the following snippets.</source>
          <target state="new">In <bpt id="p1">**</bpt>NotificationsController.cs<ept id="p1">**</ept>, redefine <bpt id="p2">**</bpt>NotificationsController<ept id="p2">**</ept>  with the following snippets.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This sends an initial silent rich notification id to device and allows client-side retrieval of image:</source>
          <target state="new">This sends an initial silent rich notification id to device and allows client-side retrieval of image:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Now we will re-deploy this app to an Azure Website in order to make it accessible from all devices.</source>
          <target state="new">Now we will re-deploy this app to an Azure Website in order to make it accessible from all devices.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Right-click on the <bpt id="p1">**</bpt>AppBackend<ept id="p1">**</ept> project and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
          <target state="new">Right-click on the <bpt id="p1">**</bpt>AppBackend<ept id="p1">**</ept> project and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Select Azure Website as your publish target.</source>
          <target state="new">Select Azure Website as your publish target.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Log in with your Azure account and select an existing or new Website, and make a note of the <bpt id="p1">**</bpt>destination URL<ept id="p1">**</ept> property in the <bpt id="p2">**</bpt>Connection<ept id="p2">**</ept> tab.</source>
          <target state="new">Log in with your Azure account and select an existing or new Website, and make a note of the <bpt id="p1">**</bpt>destination URL<ept id="p1">**</ept> property in the <bpt id="p2">**</bpt>Connection<ept id="p2">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>We will refer to this URL as your <bpt id="p1">*</bpt>backend endpoint<ept id="p1">*</ept> later in this tutorial.</source>
          <target state="new">We will refer to this URL as your <bpt id="p1">*</bpt>backend endpoint<ept id="p1">*</ept> later in this tutorial.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Modify the iOS project</source>
          <target state="new">Modify the iOS project</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Now that you have modified your app backend to send just the <bpt id="p1">*</bpt>id<ept id="p1">*</ept> of a notification, you will change your iOS app to handle that id and retrieve the rich message from your backend.</source>
          <target state="new">Now that you have modified your app backend to send just the <bpt id="p1">*</bpt>id<ept id="p1">*</ept> of a notification, you will change your iOS app to handle that id and retrieve the rich message from your backend.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Open your iOS project, and enable remote notifications by going to your main app target in the <bpt id="p1">**</bpt>Targets<ept id="p1">**</ept> section.</source>
          <target state="new">Open your iOS project, and enable remote notifications by going to your main app target in the <bpt id="p1">**</bpt>Targets<ept id="p1">**</ept> section.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Click on <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept>, turn on <bpt id="p2">**</bpt>Background Modes<ept id="p2">**</ept>, and check the <bpt id="p3">**</bpt>Remote Notifications<ept id="p3">**</ept> checkbox.</source>
          <target state="new">Click on <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept>, turn on <bpt id="p2">**</bpt>Background Modes<ept id="p2">**</ept>, and check the <bpt id="p3">**</bpt>Remote Notifications<ept id="p3">**</ept> checkbox.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Go to <bpt id="p1">**</bpt>Main.storyboard<ept id="p1">**</ept>, and make sure you have a View Controller (refered to as Home View Controller in this tutorial) from <bpt id="p2">[</bpt>Notify User<ept id="p2">](notification-hubs-aspnet-backend-ios-notify-users.md)</ept> tutorial.</source>
          <target state="new">Go to <bpt id="p1">**</bpt>Main.storyboard<ept id="p1">**</ept>, and make sure you have a View Controller (refered to as Home View Controller in this tutorial) from <bpt id="p2">[</bpt>Notify User<ept id="p2">](notification-hubs-aspnet-backend-ios-notify-users.md)</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">**</bpt>Navigation Controller<ept id="p1">**</ept> to your storyboard, and control-drag to Home View Controller to make it the <bpt id="p2">**</bpt>root view<ept id="p2">**</ept> of navigation.</source>
          <target state="new">Add a <bpt id="p1">**</bpt>Navigation Controller<ept id="p1">**</ept> to your storyboard, and control-drag to Home View Controller to make it the <bpt id="p2">**</bpt>root view<ept id="p2">**</ept> of navigation.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Make sure the <bpt id="p1">**</bpt>Is Initial View Controller<ept id="p1">**</ept> in Attributes inspector is selected for the Navigation Controller only.</source>
          <target state="new">Make sure the <bpt id="p1">**</bpt>Is Initial View Controller<ept id="p1">**</ept> in Attributes inspector is selected for the Navigation Controller only.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">**</bpt>View Controller<ept id="p1">**</ept> to storyboard and add an <bpt id="p2">**</bpt>Image View<ept id="p2">**</ept>.</source>
          <target state="new">Add a <bpt id="p1">**</bpt>View Controller<ept id="p1">**</ept> to storyboard and add an <bpt id="p2">**</bpt>Image View<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This is the page users will see once they choose to learn more by clicking on the notifiication.</source>
          <target state="new">This is the page users will see once they choose to learn more by clicking on the notifiication.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Your storyboard should look as follows:</source>
          <target state="new">Your storyboard should look as follows:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Click on the <bpt id="p1">**</bpt>Home View Controller<ept id="p1">**</ept> in storyboard, and make sure it has <bpt id="p2">**</bpt>homeViewController<ept id="p2">**</ept> as its <bpt id="p3">**</bpt>Custom Class<ept id="p3">**</ept> and <bpt id="p4">**</bpt>Storyboard ID<ept id="p4">**</ept> under the Identity inspector.</source>
          <target state="new">Click on the <bpt id="p1">**</bpt>Home View Controller<ept id="p1">**</ept> in storyboard, and make sure it has <bpt id="p2">**</bpt>homeViewController<ept id="p2">**</ept> as its <bpt id="p3">**</bpt>Custom Class<ept id="p3">**</ept> and <bpt id="p4">**</bpt>Storyboard ID<ept id="p4">**</ept> under the Identity inspector.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Do the same for Image View Controller as <bpt id="p1">**</bpt>imageViewController<ept id="p1">**</ept>.</source>
          <target state="new">Do the same for Image View Controller as <bpt id="p1">**</bpt>imageViewController<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Then, create a new View Controller class titled <bpt id="p1">**</bpt>imageViewController<ept id="p1">**</ept> to handle the UI you just created.</source>
          <target state="new">Then, create a new View Controller class titled <bpt id="p1">**</bpt>imageViewController<ept id="p1">**</ept> to handle the UI you just created.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>imageViewController.h<ept id="p1">**</ept>, add the following to the controller's interface declarations.</source>
          <target state="new">In <bpt id="p1">**</bpt>imageViewController.h<ept id="p1">**</ept>, add the following to the controller's interface declarations.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Make sure to control-drag from the storyboard image view to these properties to link the two:</source>
          <target state="new">Make sure to control-drag from the storyboard image view to these properties to link the two:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>imageViewController.m<ept id="p1">**</ept>, add the following at the end of <bpt id="p2">**</bpt>viewDidload<ept id="p2">**</ept>:</source>
          <target state="new">In <bpt id="p1">**</bpt>imageViewController.m<ept id="p1">**</ept>, add the following at the end of <bpt id="p2">**</bpt>viewDidload<ept id="p2">**</ept>:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>AppDelegate.m<ept id="p1">**</ept>, import the image controller you created:</source>
          <target state="new">In <bpt id="p1">**</bpt>AppDelegate.m<ept id="p1">**</ept>, import the image controller you created:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Add an interface section with the following declaration:</source>
          <target state="new">Add an interface section with the following declaration:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>AppDelegate<ept id="p1">**</ept>, make sure your app registers for silent notifications in <bpt id="p2">**</bpt>application: didFinishLaunchingWithOptions<ept id="p2">**</ept>:</source>
          <target state="new">In <bpt id="p1">**</bpt>AppDelegate<ept id="p1">**</ept>, make sure your app registers for silent notifications in <bpt id="p2">**</bpt>application: didFinishLaunchingWithOptions<ept id="p2">**</ept>:</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Subsitute in the following implementation for <bpt id="p1">**</bpt>application:didRegisterForRemoteNotificationsWithDeviceToken<ept id="p1">**</ept> to take the storyboard UI changes into account:</source>
          <target state="new">Subsitute in the following implementation for <bpt id="p1">**</bpt>application:didRegisterForRemoteNotificationsWithDeviceToken<ept id="p1">**</ept> to take the storyboard UI changes into account:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Then, add the following methods to <bpt id="p1">**</bpt>AppDelegate.m<ept id="p1">**</ept> to retrieve the image from your endpoint and send a local notification when retrieval is complete.</source>
          <target state="new">Then, add the following methods to <bpt id="p1">**</bpt>AppDelegate.m<ept id="p1">**</ept> to retrieve the image from your endpoint and send a local notification when retrieval is complete.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Make sure to substitute the placeholder <ph id="ph1">`{backend endpoint}`</ph> with your backend endpoint:</source>
          <target state="new">Make sure to substitute the placeholder <ph id="ph1">`{backend endpoint}`</ph> with your backend endpoint:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Handle the local notification above by opening up the image view controller in <bpt id="p1">**</bpt>AppDelegate.m<ept id="p1">**</ept> with the following methods:</source>
          <target state="new">Handle the local notification above by opening up the image view controller in <bpt id="p1">**</bpt>AppDelegate.m<ept id="p1">**</ept> with the following methods:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Run the Application</source>
          <target state="new">Run the Application</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In XCode, run the app on a physical iOS device (push notifications will not work in the simulator).</source>
          <target state="new">In XCode, run the app on a physical iOS device (push notifications will not work in the simulator).</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In the iOS app UI, enter a username and password of the same value for authentication and click <bpt id="p1">**</bpt>Log In<ept id="p1">**</ept>.</source>
          <target state="new">In the iOS app UI, enter a username and password of the same value for authentication and click <bpt id="p1">**</bpt>Log In<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Send push<ept id="p1">**</ept> and you should see an in-app alert.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Send push<ept id="p1">**</ept> and you should see an in-app alert.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you click on <bpt id="p1">**</bpt>More<ept id="p1">**</ept>, you will be brought to the image you chose to include in your app backend.</source>
          <target state="new">If you click on <bpt id="p1">**</bpt>More<ept id="p1">**</ept>, you will be brought to the image you chose to include in your app backend.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also click <bpt id="p1">**</bpt>Send push<ept id="p1">**</ept> and immediately press the home button of your device.</source>
          <target state="new">You can also click <bpt id="p1">**</bpt>Send push<ept id="p1">**</ept> and immediately press the home button of your device.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In a few moments, you will receive a push notification.</source>
          <target state="new">In a few moments, you will receive a push notification.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you tap on it or click More, you will be brought to your app and the rich image content.</source>
          <target state="new">If you tap on it or click More, you will be brought to your app and the rich image content.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e0a1a926cbcbbcbf4d2488ba3079783c08c05bf</xliffext:olfilehash>
  </header>
</xliff>