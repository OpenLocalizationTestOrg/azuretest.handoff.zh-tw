<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to use Notification Hubs with Python</source>
          <target state="new">How to use Notification Hubs with Python</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Azure Notification Hubs from a Python back-end.</source>
          <target state="new">Learn how to use Azure Notification Hubs from a Python back-end.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to use Notification Hubs from Python</source>
          <target state="new">How to use Notification Hubs from Python</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="new">Java</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>PHP</source>
          <target state="new">PHP</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="new">Python</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="new">Node.js</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can access all Notification Hubs features from a Java/PHP/Python/Ruby back-end using the Notification Hub REST interface as described in the MSDN topic <bpt id="p1">[</bpt>Notification Hubs REST APIs<ept id="p1">](http://msdn.microsoft.com/library/dn223264.aspx)</ept>.</source>
          <target state="new">You can access all Notification Hubs features from a Java/PHP/Python/Ruby back-end using the Notification Hub REST interface as described in the MSDN topic <bpt id="p1">[</bpt>Notification Hubs REST APIs<ept id="p1">](http://msdn.microsoft.com/library/dn223264.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This is a sample reference implementation for implementing the notification sends in Python and is not the officially supported Notifications Hub Python SDK.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This is a sample reference implementation for implementing the notification sends in Python and is not the officially supported Notifications Hub Python SDK.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This sample is written using Python 3.4.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This sample is written using Python 3.4.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this topic we show how to:</source>
          <target state="new">In this topic we show how to:</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Build a REST client for Notification Hubs features in Python.</source>
          <target state="new">Build a REST client for Notification Hubs features in Python.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Send notifications using the Python interface to the Notification Hub REST APIs.</source>
          <target state="new">Send notifications using the Python interface to the Notification Hub REST APIs.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Get a dump of the HTTP REST request/response for debugging/educational purpose.</source>
          <target state="new">Get a dump of the HTTP REST request/response for debugging/educational purpose.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can follow the <bpt id="p1">[</bpt>Get started tutorial<ept id="p1">](notification-hubs-windows-store-dotnet-get-started.md)</ept> for your mobile platform of choice, implementing the back-end portion in Python.</source>
          <target state="new">You can follow the <bpt id="p1">[</bpt>Get started tutorial<ept id="p1">](notification-hubs-windows-store-dotnet-get-started.md)</ept> for your mobile platform of choice, implementing the back-end portion in Python.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The scope of the sample is only limited to send notifications and it doesn't do any registration management.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The scope of the sample is only limited to send notifications and it doesn't do any registration management.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Client interface</source>
          <target state="new">Client interface</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The main client interface can provide the same methods that are available in the <bpt id="p1">[</bpt>.NET Notification Hubs SDK<ept id="p1">](http://msdn.microsoft.com/library/jj933431.aspx)</ept>.</source>
          <target state="new">The main client interface can provide the same methods that are available in the <bpt id="p1">[</bpt>.NET Notification Hubs SDK<ept id="p1">](http://msdn.microsoft.com/library/jj933431.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This will allow you to directly translate all the tutorials and samples currently available on this site, and contributed by the community on the internet.</source>
          <target state="new">This will allow you to directly translate all the tutorials and samples currently available on this site, and contributed by the community on the internet.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can find all the code available in the [Python REST wrapper sample].</source>
          <target state="new">You can find all the code available in the [Python REST wrapper sample].</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, to create a client:</source>
          <target state="new">For example, to create a client:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To send a Windows toast notification:</source>
          <target state="new">To send a Windows toast notification:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="new">Implementation</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you did not already, please follow our [Get started tutorial] up to the last section where you have to implement the back-end.</source>
          <target state="new">If you did not already, please follow our [Get started tutorial] up to the last section where you have to implement the back-end.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>All the details to implement a full REST wrapper can be found on <bpt id="p1">[</bpt>MSDN<ept id="p1">](http://msdn.microsoft.com/library/dn530746.aspx)</ept>.</source>
          <target state="new">All the details to implement a full REST wrapper can be found on <bpt id="p1">[</bpt>MSDN<ept id="p1">](http://msdn.microsoft.com/library/dn530746.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In this section we will describe the Python implementation of the main steps required to access Notification Hubs REST endpoints and send notifications</source>
          <target state="new">In this section we will describe the Python implementation of the main steps required to access Notification Hubs REST endpoints and send notifications</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Parse the connection string</source>
          <target state="new">Parse the connection string</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Generate the authorization token</source>
          <target state="new">Generate the authorization token</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Send a notification using HTTP REST API</source>
          <target state="new">Send a notification using HTTP REST API</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Parse the connection string</source>
          <target state="new">Parse the connection string</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Here is the main class implementing the client, whose constructor parses the connection string:</source>
          <target state="new">Here is the main class implementing the client, whose constructor parses the connection string:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Create security token</source>
          <target state="new">Create security token</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The details of the security token creation are available <bpt id="p1">[</bpt>here<ept id="p1">](http://msdn.microsoft.com/library/dn495627.aspx)</ept>.</source>
          <target state="new">The details of the security token creation are available <bpt id="p1">[</bpt>here<ept id="p1">](http://msdn.microsoft.com/library/dn495627.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following methods have to be added to the <bpt id="p1">**</bpt>NotificationHub<ept id="p1">**</ept> class to create the token based on the URI of the current request and the credentials extracted from the connection string.</source>
          <target state="new">The following methods have to be added to the <bpt id="p1">**</bpt>NotificationHub<ept id="p1">**</ept> class to create the token based on the URI of the current request and the credentials extracted from the connection string.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Send a notification using HTTP REST API</source>
          <target state="new">Send a notification using HTTP REST API</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>First, let use define a class representing a notification.</source>
          <target state="new">First, let use define a class representing a notification.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This class is a container for a native notification body or a set of properties in case of a template notification, a set of headers which contains format (native platform or template) and platform-specific properties (like Apple expiration property and WNS headers).</source>
          <target state="new">This class is a container for a native notification body or a set of properties in case of a template notification, a set of headers which contains format (native platform or template) and platform-specific properties (like Apple expiration property and WNS headers).</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Please refer to the <bpt id="p1">[</bpt>Notification Hubs REST APIs documentation<ept id="p1">](http://msdn.microsoft.com/library/dn495827.aspx)</ept> and the specific notification platforms' formats for all the options available.</source>
          <target state="new">Please refer to the <bpt id="p1">[</bpt>Notification Hubs REST APIs documentation<ept id="p1">](http://msdn.microsoft.com/library/dn495827.aspx)</ept> and the specific notification platforms' formats for all the options available.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Now with this class, we can write the send notification methods inside of the <bpt id="p1">**</bpt>NotificationHub<ept id="p1">**</ept> class.</source>
          <target state="new">Now with this class, we can write the send notification methods inside of the <bpt id="p1">**</bpt>NotificationHub<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The above methods send an HTTP POST request to the /messages endpoint of your notification hub, with the correct body and headers to send the notification.</source>
          <target state="new">The above methods send an HTTP POST request to the /messages endpoint of your notification hub, with the correct body and headers to send the notification.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Using debug property to enable detailed logging</source>
          <target state="new">Using debug property to enable detailed logging</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Enabling debug property while initializing the Notification Hub will write out detailed logging information about the HTTP request and response dump as well as detailed Notification message send outcome.</source>
          <target state="new">Enabling debug property while initializing the Notification Hub will write out detailed logging information about the HTTP request and response dump as well as detailed Notification message send outcome.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>We recently added this property called <bpt id="p1">[</bpt>Notification Hubs TestSend property<ept id="p1">](http://msdn.microsoft.com/library/microsoft.servicebus.notifications.notificationhubclient.enabletestsend.aspx)</ept></source>
          <target state="new">We recently added this property called <bpt id="p1">[</bpt>Notification Hubs TestSend property<ept id="p1">](http://msdn.microsoft.com/library/microsoft.servicebus.notifications.notificationhubclient.enabletestsend.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>which returns detailed information about the notification send outcome.</source>
          <target state="new">which returns detailed information about the notification send outcome.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To use it - initialize using the following:</source>
          <target state="new">To use it - initialize using the following:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The Notification Hub Send request HTTP URL gets appended with a "test" querystring as a result.</source>
          <target state="new">The Notification Hub Send request HTTP URL gets appended with a "test" querystring as a result.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="complete-tutorial"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Complete the tutorial</source>
          <target state="new"><ph id="ph1">&lt;a name="complete-tutorial"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Complete the tutorial</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Now you can complete the Get Started tutorial by sending the notification from a Python back-end.</source>
          <target state="new">Now you can complete the Get Started tutorial by sending the notification from a Python back-end.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Initialize your Notification Hubs client (substitute the connection string and hub name as instructed in the [Get started tutorial]):</source>
          <target state="new">Initialize your Notification Hubs client (substitute the connection string and hub name as instructed in the [Get started tutorial]):</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Then add the send code depending on your target mobile platform.</source>
          <target state="new">Then add the send code depending on your target mobile platform.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This sample also adds higher level methods to enable sending notifications based on the platform e.g. send_windows_notification for windows; send_apple_notification (for apple) etc.</source>
          <target state="new">This sample also adds higher level methods to enable sending notifications based on the platform e.g. send_windows_notification for windows; send_apple_notification (for apple) etc.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Windows Store and Windows Phone 8.1 (non-Silverlight)</source>
          <target state="new">Windows Store and Windows Phone 8.1 (non-Silverlight)</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Windows Phone 8.0 and 8.1 Silverlight</source>
          <target state="new">Windows Phone 8.0 and 8.1 Silverlight</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>iOS</source>
          <target state="new">iOS</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Android</source>
          <target state="new">Android</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Kindle Fire</source>
          <target state="new">Kindle Fire</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Baidu</source>
          <target state="new">Baidu</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Running your Python code should produce a notification appearing on your target device.</source>
          <target state="new">Running your Python code should produce a notification appearing on your target device.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="new">Examples:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Enabling debug property</source>
          <target state="new">Enabling debug property</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When you enable debug flag while initializing the NotificationHub then you will see detailed HTTP request and response dump as well as NotificationOutcome like the following where you can understand what HTTP headers are passed in the request and what HTTP response was received from the Notification Hub:</source>
          <target state="new">When you enable debug flag while initializing the NotificationHub then you will see detailed HTTP request and response dump as well as NotificationOutcome like the following where you can understand what HTTP headers are passed in the request and what HTTP response was received from the Notification Hub:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You will see detailed Notification Hub result e.g.</source>
          <target state="new">You will see detailed Notification Hub result e.g.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>when the message is successfully sent to the Push Notification Service.</source>
          <target state="new">when the message is successfully sent to the Push Notification Service.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If there were no targets found for any push notification then you are likely going to see the following in the response (which indicates that there were no registrations found to deliver the notification probably because the registrations had some mismatched tags)</source>
          <target state="new">If there were no targets found for any push notification then you are likely going to see the following in the response (which indicates that there were no registrations found to deliver the notification probably because the registrations had some mismatched tags)</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Broadcast toast notification to Windows</source>
          <target state="new">Broadcast toast notification to Windows</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Notice the headers that get sent out when you are sending a broadcast toast notification to Windows client.</source>
          <target state="new">Notice the headers that get sent out when you are sending a broadcast toast notification to Windows client.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Send notification specifying a tag (or tag expression)</source>
          <target state="new">Send notification specifying a tag (or tag expression)</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Notice the Tags HTTP header which gets added to the HTTP request (in the example below, we are sending the notification only to registrations with 'sports' payload)</source>
          <target state="new">Notice the Tags HTTP header which gets added to the HTTP request (in the example below, we are sending the notification only to registrations with 'sports' payload)</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Send notification specifying multiple tags</source>
          <target state="new">Send notification specifying multiple tags</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Notice how the Tags HTTP header changes when multiple tags are sent.</source>
          <target state="new">Notice how the Tags HTTP header changes when multiple tags are sent.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Templated notification</source>
          <target state="new">Templated notification</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Notice that the Format HTTP header changes and the payload body is sent as part of the HTTP request body:</source>
          <target state="new">Notice that the Format HTTP header changes and the payload body is sent as part of the HTTP request body:</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Client side - registered template</source>
          <target state="new">Client side - registered template</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Server side - sending the payload</source>
          <target state="new">Server side - sending the payload</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In this topic we showed how to create a simple Python REST client for Notification Hubs.</source>
          <target state="new">In this topic we showed how to create a simple Python REST client for Notification Hubs.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>From here you can:</source>
          <target state="new">From here you can:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Download the full [Python REST wrapper sample], which contains all the code above.</source>
          <target state="new">Download the full [Python REST wrapper sample], which contains all the code above.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Continue learning about Notification Hubs tagging feature in the [Breaking News tutorial]</source>
          <target state="new">Continue learning about Notification Hubs tagging feature in the [Breaking News tutorial]</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Continue learning about Notification Hubs Templates feature in the [Localizing News tutorial]</source>
          <target state="new">Continue learning about Notification Hubs Templates feature in the [Localizing News tutorial]</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a77aecbe7760f2ab178d722fb0a4b3988052e06</xliffext:olfilehash>
  </header>
</xliff>