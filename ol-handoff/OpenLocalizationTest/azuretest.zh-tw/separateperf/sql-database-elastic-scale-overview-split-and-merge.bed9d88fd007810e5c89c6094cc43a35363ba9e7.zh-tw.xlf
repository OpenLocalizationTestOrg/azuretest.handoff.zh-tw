<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Scaling using the elastic database split-merge tool</source>
          <target state="new">Scaling using the elastic database split-merge tool</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Explains how to manipulate shards and move data via a self-hosted service using elastic database APIs.</source>
          <target state="new">Explains how to manipulate shards and move data via a self-hosted service using elastic database APIs.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Scaling using the Elastic Database split-merge tool</source>
          <target state="new">Scaling using the Elastic Database split-merge tool</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you choose not to use the simple model of allocating separate databases for each shardlet (tenant), your application may need to flexibly redistribute data among databases when capacity needs fluctuate.</source>
          <target state="new">If you choose not to use the simple model of allocating separate databases for each shardlet (tenant), your application may need to flexibly redistribute data among databases when capacity needs fluctuate.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Elastic database tools includes a customer-hosted split-merge tool for rebalancing the data distribution and managing hotspots for sharded applications.</source>
          <target state="new">Elastic database tools includes a customer-hosted split-merge tool for rebalancing the data distribution and managing hotspots for sharded applications.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It builds on an underlying capability for moving shardlets on demand between different databases and integrates with shard map management to maintain consistent mappings.</source>
          <target state="new">It builds on an underlying capability for moving shardlets on demand between different databases and integrates with shard map management to maintain consistent mappings.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The split-merge tool manages scale-in and scale-out; you can add or remove databases from your shard set and use the split-merge tool to rebalance the distribution of shardlets among them.</source>
          <target state="new">The split-merge tool manages scale-in and scale-out; you can add or remove databases from your shard set and use the split-merge tool to rebalance the distribution of shardlets among them.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>(For term definitions, see <bpt id="p1">[</bpt>Elastic scale glossary<ept id="p1">](sql-database-elastic-scale-glossary.md)</ept>).</source>
          <target state="new">(For term definitions, see <bpt id="p1">[</bpt>Elastic scale glossary<ept id="p1">](sql-database-elastic-scale-glossary.md)</ept>).</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>What's new in split-merge</source>
          <target state="new">What's new in split-merge</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The most recent releases of the split-merge tool provides the following improvements:</source>
          <target state="new">The most recent releases of the split-merge tool provides the following improvements:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>.Net APIs are included to interface with split-merge – the web role is now optional</source>
          <target state="new">.Net APIs are included to interface with split-merge – the web role is now optional</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Date and time types are now supported for sharding keys</source>
          <target state="new">Date and time types are now supported for sharding keys</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>List shard maps are now supported.</source>
          <target state="new">List shard maps are now supported.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Range boundaries in requests can match more easily with ranges stored in the shard map.</source>
          <target state="new">Range boundaries in requests can match more easily with ranges stored in the shard map.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Multiple worker role instances are now supported to improve availability.</source>
          <target state="new">Multiple worker role instances are now supported to improve availability.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Credentials stored as part of your split-merge operation are now encrypted at rest.</source>
          <target state="new">Credentials stored as part of your split-merge operation are now encrypted at rest.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>How to upgrade</source>
          <target state="new">How to upgrade</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To upgrade to the latest version of split-merge, follow these steps:</source>
          <target state="new">To upgrade to the latest version of split-merge, follow these steps:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Download the latest version of the split-merge package from NuGet as described in <bpt id="p1">[</bpt>Download the split-merge packages<ept id="p1">](sql-database-elastic-scale-configure-deploy-split-and-merge.md#download-the-Split-Merge-packages)</ept>.</source>
          <target state="new">Download the latest version of the split-merge package from NuGet as described in <bpt id="p1">[</bpt>Download the split-merge packages<ept id="p1">](sql-database-elastic-scale-configure-deploy-split-and-merge.md#download-the-Split-Merge-packages)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Change your cloud service configuration file for your split-merge deployment to reflect the new configuration parameters.</source>
          <target state="new">Change your cloud service configuration file for your split-merge deployment to reflect the new configuration parameters.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A new required parameter is the information about the certificate used for encryption.</source>
          <target state="new">A new required parameter is the information about the certificate used for encryption.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An easy way to do this is to compare the new configuration template file from the download against your existing configuration.</source>
          <target state="new">An easy way to do this is to compare the new configuration template file from the download against your existing configuration.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Make sure you add the settings for “DataEncryptionPrimaryCertificateThumbprint” and “DataEncryptionPrimary” for both the web and the worker role.</source>
          <target state="new">Make sure you add the settings for “DataEncryptionPrimaryCertificateThumbprint” and “DataEncryptionPrimary” for both the web and the worker role.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Before deploying the update to Azure, ensure that all currently running split-merge operations have finished.</source>
          <target state="new">Before deploying the update to Azure, ensure that all currently running split-merge operations have finished.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can easily do this by querying the RequestStatus and PendingWorkflows tables in the split-merge metadata database for ongoing requests.</source>
          <target state="new">You can easily do this by querying the RequestStatus and PendingWorkflows tables in the split-merge metadata database for ongoing requests.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Update your existing cloud service deployment for split-merge in your Azure subscription with the new package and your updated service configuration file.</source>
          <target state="new">Update your existing cloud service deployment for split-merge in your Azure subscription with the new package and your updated service configuration file.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You do not need to provision a new metadata database for split-merge to upgrade.</source>
          <target state="new">You do not need to provision a new metadata database for split-merge to upgrade.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The new version will automatically upgrade your existing metadata database to the new version.</source>
          <target state="new">The new version will automatically upgrade your existing metadata database to the new version.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Scenarios for split-merge</source>
          <target state="new">Scenarios for split-merge</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Applications need to stretch flexibly beyond the limits of a single Azure SQL DB database, as illustrated by the following scenarios:</source>
          <target state="new">Applications need to stretch flexibly beyond the limits of a single Azure SQL DB database, as illustrated by the following scenarios:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Grow Capacity – Splitting Ranges<ept id="p1">**</ept>: The ability to grow aggregate capacity at the data tier addresses increasing capacity needs.</source>
          <target state="new"><bpt id="p1">**</bpt>Grow Capacity – Splitting Ranges<ept id="p1">**</ept>: The ability to grow aggregate capacity at the data tier addresses increasing capacity needs.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this scenario, the application provides the additional capacity by sharding the data and by distributing it across incrementally more databases until capacity needs are fulfilled.</source>
          <target state="new">In this scenario, the application provides the additional capacity by sharding the data and by distributing it across incrementally more databases until capacity needs are fulfilled.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The ‘split’ feature of the Elastic Scale split-merge Service addresses this scenario.</source>
          <target state="new">The ‘split’ feature of the Elastic Scale split-merge Service addresses this scenario.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Shrink Capacity – Merging Ranges<ept id="p1">**</ept>: Capacity fluctuates due to the seasonal nature of a business.</source>
          <target state="new"><bpt id="p1">**</bpt>Shrink Capacity – Merging Ranges<ept id="p1">**</ept>: Capacity fluctuates due to the seasonal nature of a business.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This scenario underlines the need to easily scale back to fewer scale units when business slows.</source>
          <target state="new">This scenario underlines the need to easily scale back to fewer scale units when business slows.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The ‘merge’ feature in the Elastic Scale split-merge Service covers this requirement.</source>
          <target state="new">The ‘merge’ feature in the Elastic Scale split-merge Service covers this requirement.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Manage Hotspots – Moving Shardlets<ept id="p1">**</ept>: With multiple tenants per database, the allocation of shardlets to shards can lead to capacity bottlenecks on some shards.</source>
          <target state="new"><bpt id="p1">**</bpt>Manage Hotspots – Moving Shardlets<ept id="p1">**</ept>: With multiple tenants per database, the allocation of shardlets to shards can lead to capacity bottlenecks on some shards.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This requires re-allocating shardlets or moving busy shardlets to new or less utilized shards.</source>
          <target state="new">This requires re-allocating shardlets or moving busy shardlets to new or less utilized shards.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the following, we will refer to any processing in the service along these capabilities as <bpt id="p1">**</bpt>split/merge/move<ept id="p1">**</ept> requests.</source>
          <target state="new">In the following, we will refer to any processing in the service along these capabilities as <bpt id="p1">**</bpt>split/merge/move<ept id="p1">**</ept> requests.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Figure 1: Conceptual Overview of split-merge</source>
          <target state="new">Figure 1: Conceptual Overview of split-merge</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: Not all <bpt id="p2">**</bpt>Grow Capacity<ept id="p2">**</ept> scenarios require the split-merge service.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: Not all <bpt id="p2">**</bpt>Grow Capacity<ept id="p2">**</ept> scenarios require the split-merge service.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example if you periodically create new shards in your environment to store new data with increasing sharding key values, you can use the Shard Map Management client APIs to direct new data ranges to newly created shards.</source>
          <target state="new">For example if you periodically create new shards in your environment to store new data with increasing sharding key values, you can use the Shard Map Management client APIs to direct new data ranges to newly created shards.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The split-merge service is needed only when existing data needs to be moved as well.</source>
          <target state="new">The split-merge service is needed only when existing data needs to be moved as well.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Concepts &amp; Key Features</source>
          <target state="new">Concepts &amp; Key Features</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Customer-Hosted Services<ept id="p1">**</ept>: The split-merge is delivered as a customer-hosted service.</source>
          <target state="new"><bpt id="p1">**</bpt>Customer-Hosted Services<ept id="p1">**</ept>: The split-merge is delivered as a customer-hosted service.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You must deploy and host the service in your Microsoft Azure subscription.</source>
          <target state="new">You must deploy and host the service in your Microsoft Azure subscription.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The package you download from NuGet contains a configuration template to complete with the information for your specific deployment.</source>
          <target state="new">The package you download from NuGet contains a configuration template to complete with the information for your specific deployment.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>split-merge tutorial<ept id="p1">](sql-database-elastic-scale-configure-deploy-split-and-merge.md)</ept> for details.</source>
          <target state="new">See the <bpt id="p1">[</bpt>split-merge tutorial<ept id="p1">](sql-database-elastic-scale-configure-deploy-split-and-merge.md)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Since the service runs in your Azure subscription, you can control and configure most security aspects of the service.</source>
          <target state="new">Since the service runs in your Azure subscription, you can control and configure most security aspects of the service.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default template includes the options to configure SSL, certificate-based client authentication, encryption for stored credentials, DoS guarding and IP restrictions.</source>
          <target state="new">The default template includes the options to configure SSL, certificate-based client authentication, encryption for stored credentials, DoS guarding and IP restrictions.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can find more information on the security aspects in the following document <bpt id="p1">[</bpt>split-merge security configuration<ept id="p1">](sql-database-elastic-scale-split-merge-security-configuration.md)</ept>.</source>
          <target state="new">You can find more information on the security aspects in the following document <bpt id="p1">[</bpt>split-merge security configuration<ept id="p1">](sql-database-elastic-scale-split-merge-security-configuration.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default deployed service runs with one worker and one web role.</source>
          <target state="new">The default deployed service runs with one worker and one web role.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Each uses the A1 VM size in Azure Cloud Services.</source>
          <target state="new">Each uses the A1 VM size in Azure Cloud Services.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>While you cannot modify these settings when deploying the package, you could change them after a successful deployment in the running cloud service, (through the Azure portal).</source>
          <target state="new">While you cannot modify these settings when deploying the package, you could change them after a successful deployment in the running cloud service, (through the Azure portal).</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Note that the worker role must not be configured for more than a single instance for technical reasons.</source>
          <target state="new">Note that the worker role must not be configured for more than a single instance for technical reasons.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Shard Map Integration<ept id="p1">**</ept>: The split-merge service interacts with the shard map of the application.</source>
          <target state="new"><bpt id="p1">**</bpt>Shard Map Integration<ept id="p1">**</ept>: The split-merge service interacts with the shard map of the application.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When using the split-merge service to split or merge ranges or to move shardlets between shards, the service automatically keeps the shard map up to date.</source>
          <target state="new">When using the split-merge service to split or merge ranges or to move shardlets between shards, the service automatically keeps the shard map up to date.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To do so, the service connects to the shard map manager database of the application and maintains ranges and mappings as split/merge/move requests progress.</source>
          <target state="new">To do so, the service connects to the shard map manager database of the application and maintains ranges and mappings as split/merge/move requests progress.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This ensures that the shard map always presents an up-to-date view when split-merge operations are going on.</source>
          <target state="new">This ensures that the shard map always presents an up-to-date view when split-merge operations are going on.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Split, merge and shardlet movement operations are implemented by moving a batch of shardlets from the source shard to the target shard.</source>
          <target state="new">Split, merge and shardlet movement operations are implemented by moving a batch of shardlets from the source shard to the target shard.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>During the shardlet movement operation the shardlets subject to the current batch are marked as offline in the shard map and are unavailable for data-dependent routing connections using the <bpt id="p1">**</bpt>OpenConnectionForKey<ept id="p1">**</ept> API.</source>
          <target state="new">During the shardlet movement operation the shardlets subject to the current batch are marked as offline in the shard map and are unavailable for data-dependent routing connections using the <bpt id="p1">**</bpt>OpenConnectionForKey<ept id="p1">**</ept> API.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Consistent Shardlet Connections<ept id="p1">**</ept>: When data movement starts for a new batch of shardlets, any shard-map provided data-dependent routing connections to the shard storing the shardlet are killed and subsequent connections from the shard map APIs to the these shardlets are blocked while the data movement is in progress in order to avoid inconsistencies.</source>
          <target state="new"><bpt id="p1">**</bpt>Consistent Shardlet Connections<ept id="p1">**</ept>: When data movement starts for a new batch of shardlets, any shard-map provided data-dependent routing connections to the shard storing the shardlet are killed and subsequent connections from the shard map APIs to the these shardlets are blocked while the data movement is in progress in order to avoid inconsistencies.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Connections to other shardlets on the same shard will also get killed, but will succeed again immediately on retry.</source>
          <target state="new">Connections to other shardlets on the same shard will also get killed, but will succeed again immediately on retry.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Once the batch is moved, the shardlets are marked online again for the target shard and the source data is removed from the source shard.</source>
          <target state="new">Once the batch is moved, the shardlets are marked online again for the target shard and the source data is removed from the source shard.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The service goes through these steps for every batch until all shardlets have been moved.</source>
          <target state="new">The service goes through these steps for every batch until all shardlets have been moved.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This will lead to several connection kill operations during the course of the complete split/merge/move operation.</source>
          <target state="new">This will lead to several connection kill operations during the course of the complete split/merge/move operation.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Managing Shardlet Availability<ept id="p1">**</ept>: Limiting the connection killing to the current batch of shardlets as discussed above restricts the scope of unavailability to one batch of shardlets at a time.</source>
          <target state="new"><bpt id="p1">**</bpt>Managing Shardlet Availability<ept id="p1">**</ept>: Limiting the connection killing to the current batch of shardlets as discussed above restricts the scope of unavailability to one batch of shardlets at a time.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This is preferred over an approach where the complete shard would remain offline for all its shardlets during the course of a split or merge operation.</source>
          <target state="new">This is preferred over an approach where the complete shard would remain offline for all its shardlets during the course of a split or merge operation.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The size of a batch, defined as the number of distinct shardlets to move at a time, is a configuration parameter.</source>
          <target state="new">The size of a batch, defined as the number of distinct shardlets to move at a time, is a configuration parameter.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It can be defined for each split and merge operation depending on the application’s availability and performance needs.</source>
          <target state="new">It can be defined for each split and merge operation depending on the application’s availability and performance needs.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Note that the range that is being locked in the shard map may be larger than the batch size specified.</source>
          <target state="new">Note that the range that is being locked in the shard map may be larger than the batch size specified.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This is because the service picks the range size such that the actual number of sharding key values in the data approximately matches the batch size.</source>
          <target state="new">This is because the service picks the range size such that the actual number of sharding key values in the data approximately matches the batch size.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This is important to remember in particular for sparsely populated sharding keys.</source>
          <target state="new">This is important to remember in particular for sparsely populated sharding keys.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Metadata Storage<ept id="p1">**</ept>: The split-merge service uses a database to maintain its status and to keep logs during request processing.</source>
          <target state="new"><bpt id="p1">**</bpt>Metadata Storage<ept id="p1">**</ept>: The split-merge service uses a database to maintain its status and to keep logs during request processing.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The user creates this database in their subscription and provides the connection string for it in the configuration file for the service deployment.</source>
          <target state="new">The user creates this database in their subscription and provides the connection string for it in the configuration file for the service deployment.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Administrators from the user’s organization can also connect to this database to review request progress and to investigate detailed information regarding potential failures.</source>
          <target state="new">Administrators from the user’s organization can also connect to this database to review request progress and to investigate detailed information regarding potential failures.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Sharding-Awareness<ept id="p1">**</ept>: The split-merge service differentiates between (1) sharded tables, (2) reference tables, and (3) normal tables.</source>
          <target state="new"><bpt id="p1">**</bpt>Sharding-Awareness<ept id="p1">**</ept>: The split-merge service differentiates between (1) sharded tables, (2) reference tables, and (3) normal tables.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The semantics of a split/merge/move operation depend on the type of the table used and are defined as follows:</source>
          <target state="new">The semantics of a split/merge/move operation depend on the type of the table used and are defined as follows:</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Sharded tables<ept id="p1">**</ept>: Split, merge, and move operations move shardlets from source to target shard.</source>
          <target state="new"><bpt id="p1">**</bpt>Sharded tables<ept id="p1">**</ept>: Split, merge, and move operations move shardlets from source to target shard.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>After successful completion of the overall request, those shardlets are no longer present on the source.</source>
          <target state="new">After successful completion of the overall request, those shardlets are no longer present on the source.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Note that the target tables need to exist on the target shard and must not contain data in the target range prior to processing of the operation.</source>
          <target state="new">Note that the target tables need to exist on the target shard and must not contain data in the target range prior to processing of the operation.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Reference tables<ept id="p1">**</ept>: For reference tables, the split, merge and move operations copy the data from the source to the target shard.</source>
          <target state="new"><bpt id="p1">**</bpt>Reference tables<ept id="p1">**</ept>: For reference tables, the split, merge and move operations copy the data from the source to the target shard.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Note, however, that no changes occur on the target shard for a given table if any row is already present in this table on the target.</source>
          <target state="new">Note, however, that no changes occur on the target shard for a given table if any row is already present in this table on the target.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The table has to be empty for any reference table copy operation to get processed.</source>
          <target state="new">The table has to be empty for any reference table copy operation to get processed.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Other Tables<ept id="p1">**</ept>: Other tables can be present on either the source or the target of a split and merge operation.</source>
          <target state="new"><bpt id="p1">**</bpt>Other Tables<ept id="p1">**</ept>: Other tables can be present on either the source or the target of a split and merge operation.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The split-merge service disregards these tables for any data movement or copy operations.</source>
          <target state="new">The split-merge service disregards these tables for any data movement or copy operations.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Note, however, that they can interfere with these operations in case of constraints.</source>
          <target state="new">Note, however, that they can interfere with these operations in case of constraints.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The information on reference vs. sharded tables is provided by the <bpt id="p1">**</bpt>SchemaInfo<ept id="p1">**</ept> APIs on the shard map.</source>
          <target state="new">The information on reference vs. sharded tables is provided by the <bpt id="p1">**</bpt>SchemaInfo<ept id="p1">**</ept> APIs on the shard map.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of these APIs on a given shard map manager object smm:</source>
          <target state="new">The following example illustrates the use of these APIs on a given shard map manager object smm:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The tables ‘region’ and ‘nation’ are defined as reference tables and will be copied with split/merge/move operations.</source>
          <target state="new">The tables ‘region’ and ‘nation’ are defined as reference tables and will be copied with split/merge/move operations.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>‘customer’ and ‘orders’ in turn are defined as sharded tables.</source>
          <target state="new">‘customer’ and ‘orders’ in turn are defined as sharded tables.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>C_CUSTKEY and O_CUSTKEY serve as the sharding key.</source>
          <target state="new">C_CUSTKEY and O_CUSTKEY serve as the sharding key.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Referential Integrity<ept id="p1">**</ept>: The split-merge service analyzes dependencies between tables and uses foreign key-primary key relationships to stage the operations for moving reference tables and shardlets.</source>
          <target state="new"><bpt id="p1">**</bpt>Referential Integrity<ept id="p1">**</ept>: The split-merge service analyzes dependencies between tables and uses foreign key-primary key relationships to stage the operations for moving reference tables and shardlets.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>In general, reference tables are copied first in dependency order, then shardlets are copied in order of their dependencies within each batch.</source>
          <target state="new">In general, reference tables are copied first in dependency order, then shardlets are copied in order of their dependencies within each batch.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This is necessary so that FK-PK constraints on the target shard are honored as the new data arrives.</source>
          <target state="new">This is necessary so that FK-PK constraints on the target shard are honored as the new data arrives.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Shard Map Consistency and Eventual Completion<ept id="p1">**</ept>: In the presence of failures, the split-merge service resumes operations after any outage and aims to complete any in progress requests.</source>
          <target state="new"><bpt id="p1">**</bpt>Shard Map Consistency and Eventual Completion<ept id="p1">**</ept>: In the presence of failures, the split-merge service resumes operations after any outage and aims to complete any in progress requests.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>However, there may be unrecoverable situations, e.g., when the target shard is lost or compromised beyond repair.</source>
          <target state="new">However, there may be unrecoverable situations, e.g., when the target shard is lost or compromised beyond repair.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Under those circumstances, some shardlets that were supposed to be moved may continue to reside on the source shard.</source>
          <target state="new">Under those circumstances, some shardlets that were supposed to be moved may continue to reside on the source shard.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The service ensures that shardlet mappings are only updated after the necessary data has been successfully copied to the target.</source>
          <target state="new">The service ensures that shardlet mappings are only updated after the necessary data has been successfully copied to the target.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Shardlets are only deleted on the source once all their data has been copied to the target and the corresponding mappings have been updated successfully.</source>
          <target state="new">Shardlets are only deleted on the source once all their data has been copied to the target and the corresponding mappings have been updated successfully.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The deletion operation happens in the background while the range is already online on the target shard.</source>
          <target state="new">The deletion operation happens in the background while the range is already online on the target shard.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The split-merge service always ensures correctness of the mappings stored in the shard map.</source>
          <target state="new">The split-merge service always ensures correctness of the mappings stored in the shard map.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Getting the Service Binaries</source>
          <target state="new">Getting the Service Binaries</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The service binaries for split-merge are provided through <bpt id="p1">[</bpt>Nuget<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.SqlDatabase.ElasticScale.Service.SplitMerge/)</ept>.</source>
          <target state="new">The service binaries for split-merge are provided through <bpt id="p1">[</bpt>Nuget<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.SqlDatabase.ElasticScale.Service.SplitMerge/)</ept>.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>See the step-by-step <bpt id="p1">[</bpt>Split-Merge tutorial<ept id="p1">](sql-database-elastic-scale-configure-deploy-split-and-merge.md)</ept> for more information about downloading the binaries.</source>
          <target state="new">See the step-by-step <bpt id="p1">[</bpt>Split-Merge tutorial<ept id="p1">](sql-database-elastic-scale-configure-deploy-split-and-merge.md)</ept> for more information about downloading the binaries.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The split-merge user interface</source>
          <target state="new">The split-merge user interface</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Besides its worker role, the split-merge service package also includes a web role that can be used to submit split-merge requests in an interactive way.</source>
          <target state="new">Besides its worker role, the split-merge service package also includes a web role that can be used to submit split-merge requests in an interactive way.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The main components of the user interface are as follows:</source>
          <target state="new">The main components of the user interface are as follows:</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Operation Type: The operation type is a radio button that controls the kind of operation performed by the service for this request.</source>
          <target state="new">Operation Type: The operation type is a radio button that controls the kind of operation performed by the service for this request.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You can choose between the split, merge and move scenarios discussed in Concepts and Key Features.</source>
          <target state="new">You can choose between the split, merge and move scenarios discussed in Concepts and Key Features.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In addition, you can also cancel a previously submitted operation.</source>
          <target state="new">In addition, you can also cancel a previously submitted operation.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can use split, merge and move requests for range shard maps.</source>
          <target state="new">You can use split, merge and move requests for range shard maps.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>List shard maps only support move operations.</source>
          <target state="new">List shard maps only support move operations.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Shard Map: The next section of request parameters cover information about the shard map and the database hosting your shard map.</source>
          <target state="new">Shard Map: The next section of request parameters cover information about the shard map and the database hosting your shard map.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>In particular, you need to provide the name of the Azure SQL Database server and database hosting the shardmap, credentials to connect to the shard map database, and finally the name of the shard map.</source>
          <target state="new">In particular, you need to provide the name of the Azure SQL Database server and database hosting the shardmap, credentials to connect to the shard map database, and finally the name of the shard map.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Currently, the operation only accepts a single set of credentials.</source>
          <target state="new">Currently, the operation only accepts a single set of credentials.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>These credentials need to have sufficient permissions to perform changes to the shard map as well as to the user data on the shards.</source>
          <target state="new">These credentials need to have sufficient permissions to perform changes to the shard map as well as to the user data on the shards.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Source Range (split and merge): A split and merge operation processes a range using its low and high key.</source>
          <target state="new">Source Range (split and merge): A split and merge operation processes a range using its low and high key.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To specify an operation with an unbounded high key value, check the “High key is max” check box and leave the high key field empty.</source>
          <target state="new">To specify an operation with an unbounded high key value, check the “High key is max” check box and leave the high key field empty.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The range key values that you specify do not need to precisely match a mapping and its boundaries in your shard map.</source>
          <target state="new">The range key values that you specify do not need to precisely match a mapping and its boundaries in your shard map.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If you do not specify any range boundaries at all the service will infer the closest range for you automatically.</source>
          <target state="new">If you do not specify any range boundaries at all the service will infer the closest range for you automatically.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>You can use the GetMappings.ps1 PowerShell script to retrieve the current mappings in a given shard map.</source>
          <target state="new">You can use the GetMappings.ps1 PowerShell script to retrieve the current mappings in a given shard map.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Split Source Behavior (split): For split operations, you also need to define at which point you want to split the source range.</source>
          <target state="new">Split Source Behavior (split): For split operations, you also need to define at which point you want to split the source range.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You do this by providing the sharding key where you want the split to occur.</source>
          <target state="new">You do this by providing the sharding key where you want the split to occur.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Use the radio button next to define whether you want the lower part of the range (excluding the split key) to move, or whether you want the upper part to move (including the split key).</source>
          <target state="new">Use the radio button next to define whether you want the lower part of the range (excluding the split key) to move, or whether you want the upper part to move (including the split key).</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Source Shardlet (move): Move operations are different from split or merge operations as they do not require a range to describe the source.</source>
          <target state="new">Source Shardlet (move): Move operations are different from split or merge operations as they do not require a range to describe the source.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A source for move is simply identified by the sharding key value that you plan to move.</source>
          <target state="new">A source for move is simply identified by the sharding key value that you plan to move.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Target Shard (split): Once you have provided the information on the source of your split operation, you need to define where you want the data to be copied to by providing the Azure SQL Db server and database name for the target.</source>
          <target state="new">Target Shard (split): Once you have provided the information on the source of your split operation, you need to define where you want the data to be copied to by providing the Azure SQL Db server and database name for the target.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Target Range (merge): Merge operations instead move shardlets to an existing shard.</source>
          <target state="new">Target Range (merge): Merge operations instead move shardlets to an existing shard.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>You identify the existing shard by providing the range boundaries of the existing range that you want to merge with.</source>
          <target state="new">You identify the existing shard by providing the range boundaries of the existing range that you want to merge with.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Batch Size: The batch size controls the number of shardlets that will go offline at a time during the data movement.</source>
          <target state="new">Batch Size: The batch size controls the number of shardlets that will go offline at a time during the data movement.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This is an integer value where you can use smaller values when you are sensitive to long periods of downtime for shardlets.</source>
          <target state="new">This is an integer value where you can use smaller values when you are sensitive to long periods of downtime for shardlets.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Larger values will increase the time that a given shardlet is offline but may improve performance.</source>
          <target state="new">Larger values will increase the time that a given shardlet is offline but may improve performance.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Operation Id (Cancel): If you have an ongoing operation that is no longer needed, you can cancel the operation by providing its operation ID in this field.</source>
          <target state="new">Operation Id (Cancel): If you have an ongoing operation that is no longer needed, you can cancel the operation by providing its operation ID in this field.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>You can retrieve the operation ID from the request status table (see Section 8.1) or from the output in the web browser where you submitted the request.</source>
          <target state="new">You can retrieve the operation ID from the request status table (see Section 8.1) or from the output in the web browser where you submitted the request.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Requirements and Limitations</source>
          <target state="new">Requirements and Limitations</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The current implementation of the split-merge service is subject to the following requirements and limitations:</source>
          <target state="new">The current implementation of the split-merge service is subject to the following requirements and limitations:</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Currently, the shards need to exist and be registered in the shard map before a split-merge operation on these shards can be performed.</source>
          <target state="new">Currently, the shards need to exist and be registered in the shard map before a split-merge operation on these shards can be performed.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The split-merge service currently does not create tables or any other database objects automatically as part of its operations.</source>
          <target state="new">The split-merge service currently does not create tables or any other database objects automatically as part of its operations.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This means that the schema for all sharded tables and reference tables need to exist on the target shard prior to any split/merge/move operation.</source>
          <target state="new">This means that the schema for all sharded tables and reference tables need to exist on the target shard prior to any split/merge/move operation.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Sharded tables in particular are required to be empty in the range where new shardlets are to be added by a split/merge/move operation.</source>
          <target state="new">Sharded tables in particular are required to be empty in the range where new shardlets are to be added by a split/merge/move operation.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Otherwise, the operation will fail the initial consistency check on the target shard.</source>
          <target state="new">Otherwise, the operation will fail the initial consistency check on the target shard.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Also note that reference data is only copied if the reference table is empty and that there are no consistency guarantees with regard to other concurrent write operations on the reference tables.</source>
          <target state="new">Also note that reference data is only copied if the reference table is empty and that there are no consistency guarantees with regard to other concurrent write operations on the reference tables.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>We recommend this: when running split/merge operations, no other write operations make changes to the reference tables.</source>
          <target state="new">We recommend this: when running split/merge operations, no other write operations make changes to the reference tables.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The service currently relies on row identity established by a unique index or key that includes the sharding key to improve performance and reliability for large shardlets.</source>
          <target state="new">The service currently relies on row identity established by a unique index or key that includes the sharding key to improve performance and reliability for large shardlets.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This allows the service to move data at an even finer granularity than just the sharding key value.</source>
          <target state="new">This allows the service to move data at an even finer granularity than just the sharding key value.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This helps to reduce the maximum amount of log space and locks that are required during the operation.</source>
          <target state="new">This helps to reduce the maximum amount of log space and locks that are required during the operation.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Consider creating a unique index or a primary key including the sharding key on a given table if you want to use that table with split/merge/move requests.</source>
          <target state="new">Consider creating a unique index or a primary key including the sharding key on a given table if you want to use that table with split/merge/move requests.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For performance reasons, the sharding key should be the leading column in the key or the index.</source>
          <target state="new">For performance reasons, the sharding key should be the leading column in the key or the index.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>During the course of request processing, some shardlet data may be present both on the source and the target shard.</source>
          <target state="new">During the course of request processing, some shardlet data may be present both on the source and the target shard.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This is currently necessary to protect against failures during the shardlet movement.</source>
          <target state="new">This is currently necessary to protect against failures during the shardlet movement.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>As explained above, the integration of split-merge with the Elastic Scale shard map ensures, that connections through the data dependent routing APIs using the <bpt id="p1">**</bpt>OpenConnectionForKey<ept id="p1">**</ept> method on the shard map do not see any inconsistent intermediate states.</source>
          <target state="new">As explained above, the integration of split-merge with the Elastic Scale shard map ensures, that connections through the data dependent routing APIs using the <bpt id="p1">**</bpt>OpenConnectionForKey<ept id="p1">**</ept> method on the shard map do not see any inconsistent intermediate states.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>However, when connecting to the source or the target shards without using the <bpt id="p1">**</bpt>OpenConnectionForKey<ept id="p1">**</ept> method, inconsistent intermediate states might be visible when split/merge/move requests are going on.</source>
          <target state="new">However, when connecting to the source or the target shards without using the <bpt id="p1">**</bpt>OpenConnectionForKey<ept id="p1">**</ept> method, inconsistent intermediate states might be visible when split/merge/move requests are going on.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>These connections may show partial or duplicate results depending on the timing or the shard underlying the connection.</source>
          <target state="new">These connections may show partial or duplicate results depending on the timing or the shard underlying the connection.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This limitation currently includes the connections made by Elastic Scale Multi-Shard-Queries.</source>
          <target state="new">This limitation currently includes the connections made by Elastic Scale Multi-Shard-Queries.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The metadata database for the split-merge service must not be shared between different roles.</source>
          <target state="new">The metadata database for the split-merge service must not be shared between different roles.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>For example, a role of the split-merge service running in staging needs to point to a different metadata database than the production role.</source>
          <target state="new">For example, a role of the split-merge service running in staging needs to point to a different metadata database than the production role.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Billing</source>
          <target state="new">Billing</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The split-merge service runs as a cloud service in your Microsoft Azure subscription.</source>
          <target state="new">The split-merge service runs as a cloud service in your Microsoft Azure subscription.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Therefore charges for cloud services apply to your instance of the service.</source>
          <target state="new">Therefore charges for cloud services apply to your instance of the service.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Unless you frequently perform split/merge/move operations, we recommend you delete your split-merge cloud service.</source>
          <target state="new">Unless you frequently perform split/merge/move operations, we recommend you delete your split-merge cloud service.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>That saves costs for running or deployed cloud service instances.</source>
          <target state="new">That saves costs for running or deployed cloud service instances.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>You can re-deploy and start your readily runnable configuration whenever you need to perform split or merge operations.</source>
          <target state="new">You can re-deploy and start your readily runnable configuration whenever you need to perform split or merge operations.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Monitoring</source>
          <target state="new">Monitoring</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Status Tables</source>
          <target state="new">Status Tables</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The split-merge Service provides the <bpt id="p1">**</bpt>RequestStatus<ept id="p1">**</ept> table in the metadata store database for monitoring of completed and ongoing requests.</source>
          <target state="new">The split-merge Service provides the <bpt id="p1">**</bpt>RequestStatus<ept id="p1">**</ept> table in the metadata store database for monitoring of completed and ongoing requests.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The table lists a row for each split-merge request that has been submitted to this instance of the split-merge service.</source>
          <target state="new">The table lists a row for each split-merge request that has been submitted to this instance of the split-merge service.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>It gives the following information for each request:</source>
          <target state="new">It gives the following information for each request:</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Timestamp<ept id="p1">**</ept>: The time and date when the request was started.</source>
          <target state="new"><bpt id="p1">**</bpt>Timestamp<ept id="p1">**</ept>: The time and date when the request was started.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>OperationId<ept id="p1">**</ept>: A GUID that uniquely identifies the request.</source>
          <target state="new"><bpt id="p1">**</bpt>OperationId<ept id="p1">**</ept>: A GUID that uniquely identifies the request.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>This request can also be used to cancel the operation while it is still ongoing.</source>
          <target state="new">This request can also be used to cancel the operation while it is still ongoing.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Status<ept id="p1">**</ept>: The current state of the request.</source>
          <target state="new"><bpt id="p1">**</bpt>Status<ept id="p1">**</ept>: The current state of the request.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>For ongoing requests, it also lists the current phase in which the request is.</source>
          <target state="new">For ongoing requests, it also lists the current phase in which the request is.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CancelRequest<ept id="p1">**</ept>: A flag that indicates whether the request has been cancelled.</source>
          <target state="new"><bpt id="p1">**</bpt>CancelRequest<ept id="p1">**</ept>: A flag that indicates whether the request has been cancelled.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Progress<ept id="p1">**</ept>: A percentage estimate of completion for the operation.</source>
          <target state="new"><bpt id="p1">**</bpt>Progress<ept id="p1">**</ept>: A percentage estimate of completion for the operation.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A value of 50 indicates that the operation is approximately 50% complete.</source>
          <target state="new">A value of 50 indicates that the operation is approximately 50% complete.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Details<ept id="p1">**</ept>: An XML value that provides a more detailed progress report.</source>
          <target state="new"><bpt id="p1">**</bpt>Details<ept id="p1">**</ept>: An XML value that provides a more detailed progress report.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The progress report is periodically updated as sets of rows are copied from source to target.</source>
          <target state="new">The progress report is periodically updated as sets of rows are copied from source to target.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>In case of failures or exceptions, this column also includes more detailed information about the failure.</source>
          <target state="new">In case of failures or exceptions, this column also includes more detailed information about the failure.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Azure Diagnostics</source>
          <target state="new">Azure Diagnostics</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The split-merge service uses Azure Diagnostics based on Azure SDK 2.5 for monitoring and diagnostics.</source>
          <target state="new">The split-merge service uses Azure Diagnostics based on Azure SDK 2.5 for monitoring and diagnostics.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>You control the diagnostics configuration as explained here: <bpt id="p1">[</bpt>Enabling Diagnostics in Azure Cloud Services and Virtual Machines<ept id="p1">](../cloud-services-dotnet-diagnostics.md)</ept>.</source>
          <target state="new">You control the diagnostics configuration as explained here: <bpt id="p1">[</bpt>Enabling Diagnostics in Azure Cloud Services and Virtual Machines<ept id="p1">](../cloud-services-dotnet-diagnostics.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The download package includes two diagnostics configurations – one for the web role and one for the worker role.</source>
          <target state="new">The download package includes two diagnostics configurations – one for the web role and one for the worker role.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>These diagnostics configurations for the service follow the guidance from <bpt id="p1">[</bpt>Cloud Service Fundamentals in Microsoft Azure<ept id="p1">](https://code.msdn.microsoft.com/windowsazure/Cloud-Service-Fundamentals-4ca72649)</ept>.</source>
          <target state="new">These diagnostics configurations for the service follow the guidance from <bpt id="p1">[</bpt>Cloud Service Fundamentals in Microsoft Azure<ept id="p1">](https://code.msdn.microsoft.com/windowsazure/Cloud-Service-Fundamentals-4ca72649)</ept>.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>It includes the definitions to log Performance Counters, IIS logs, Windows Event Logs, and split-merge application event logs.</source>
          <target state="new">It includes the definitions to log Performance Counters, IIS logs, Windows Event Logs, and split-merge application event logs.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Deploying Diagnostics</source>
          <target state="new">Deploying Diagnostics</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>To enable monitoring and diagnostics using the diagnostic configuration for the web and worker roles provided by the NuGet package, run the following commands using Azure PowerShell:</source>
          <target state="new">To enable monitoring and diagnostics using the diagnostic configuration for the web and worker roles provided by the NuGet package, run the following commands using Azure PowerShell:</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>You can find more information on how to configure and deploy diagnostics settings here: <bpt id="p1">[</bpt>Enabling Diagnostics in Azure Cloud Services and Virtual Machines<ept id="p1">](../cloud-services-dotnet-diagnostics.md)</ept>.</source>
          <target state="new">You can find more information on how to configure and deploy diagnostics settings here: <bpt id="p1">[</bpt>Enabling Diagnostics in Azure Cloud Services and Virtual Machines<ept id="p1">](../cloud-services-dotnet-diagnostics.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Retrieving diagnostics</source>
          <target state="new">Retrieving diagnostics</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>You can easily access your diagnostics from the Visual Studio Server Explorer in the Azure part of the Server Explorer tree.</source>
          <target state="new">You can easily access your diagnostics from the Visual Studio Server Explorer in the Azure part of the Server Explorer tree.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Open a Visual Studio instance, and in the menu bar click View, and Server Explorer.</source>
          <target state="new">Open a Visual Studio instance, and in the menu bar click View, and Server Explorer.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Click the Azure icon to connect to your Azure subscription.</source>
          <target state="new">Click the Azure icon to connect to your Azure subscription.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Then navigate to Azure -&gt; Storage -&gt;</source>
          <target state="new">Then navigate to Azure -&gt; Storage -&gt;</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>-&gt; Tables -&gt; WADLogsTable.</source>
          <target state="new">-&gt; Tables -&gt; WADLogsTable.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Browsing Storage Resources with Server Explorer<ept id="p1">](http://msdn.microsoft.com/library/azure/ff683677.aspx)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Browsing Storage Resources with Server Explorer<ept id="p1">](http://msdn.microsoft.com/library/azure/ff683677.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>WADLogsTable</source>
          <target state="new">WADLogsTable</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The WADLogsTable highlighted in the figure above contains the detailed events from the split-merge service’s application log.</source>
          <target state="new">The WADLogsTable highlighted in the figure above contains the detailed events from the split-merge service’s application log.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Note that the default configuration of the downloaded package is geared towards a production deployment.</source>
          <target state="new">Note that the default configuration of the downloaded package is geared towards a production deployment.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Therefore the interval at which logs and counters are pulled from the service instances is large (5 minutes).</source>
          <target state="new">Therefore the interval at which logs and counters are pulled from the service instances is large (5 minutes).</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>For test and development, lower the interval by adjusting the diagnostics settings of the web or the worker role to your needs.</source>
          <target state="new">For test and development, lower the interval by adjusting the diagnostics settings of the web or the worker role to your needs.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Right-click on the role in the Visual Studio Server Explorer (see above) and then adjust the Transfer Period in the dialog for the Diagnostics configuration settings:</source>
          <target state="new">Right-click on the role in the Visual Studio Server Explorer (see above) and then adjust the Transfer Period in the dialog for the Diagnostics configuration settings:</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="new">Configuration</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="new">Performance</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>In general, better performance is to be expected from the higher, more performant service tiers in Azure SQL Database.</source>
          <target state="new">In general, better performance is to be expected from the higher, more performant service tiers in Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Higher IO, CPU and memory allocations for the higher service tiers benefit the bulk copy and delete operations that the split-merge service uses.</source>
          <target state="new">Higher IO, CPU and memory allocations for the higher service tiers benefit the bulk copy and delete operations that the split-merge service uses.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>For that reason, increase the service tier just for those databases for a defined, limited period of time.</source>
          <target state="new">For that reason, increase the service tier just for those databases for a defined, limited period of time.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The service also performs validation queries as part of its normal operations.</source>
          <target state="new">The service also performs validation queries as part of its normal operations.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>These validation queries check for unexpected presence of data in the target range and ensure that any split/merge/move operation starts from a consistent state.</source>
          <target state="new">These validation queries check for unexpected presence of data in the target range and ensure that any split/merge/move operation starts from a consistent state.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>These queries all work over sharding key ranges defined by the scope of the operation and the batch size provided as part of the request definition.</source>
          <target state="new">These queries all work over sharding key ranges defined by the scope of the operation and the batch size provided as part of the request definition.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>These queries perform best when an index is present that has the sharding key as the leading column.</source>
          <target state="new">These queries perform best when an index is present that has the sharding key as the leading column.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>In addition, a uniqueness property with the sharding key as the leading column will allow the service to use an optimized approach that limits resource consumption in terms of log space and memory.</source>
          <target state="new">In addition, a uniqueness property with the sharding key as the leading column will allow the service to use an optimized approach that limits resource consumption in terms of log space and memory.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>This uniqueness property is required to move large data sizes (typically above 1GB).</source>
          <target state="new">This uniqueness property is required to move large data sizes (typically above 1GB).</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Best practices &amp; troubleshooting</source>
          <target state="new">Best practices &amp; troubleshooting</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Define a test tenant and exercise your most important split/merge/move operations with the test tenant across several shards.</source>
          <target state="new">Define a test tenant and exercise your most important split/merge/move operations with the test tenant across several shards.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Ensure that all metadata is defined correctly in your shard map and that the operations do not violate constraints or foreign keys.</source>
          <target state="new">Ensure that all metadata is defined correctly in your shard map and that the operations do not violate constraints or foreign keys.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Keep the test tenant data size above the maximum data size of your largest tenant to ensure you are not encountering data size related issues.</source>
          <target state="new">Keep the test tenant data size above the maximum data size of your largest tenant to ensure you are not encountering data size related issues.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>This helps you assess an upper bound on the time it takes to move a single tenant around.</source>
          <target state="new">This helps you assess an upper bound on the time it takes to move a single tenant around.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Make sure that your schema allows deletions.</source>
          <target state="new">Make sure that your schema allows deletions.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The split-merge service requires the ability to remove data from the source shard once the data has been successfully copied to the target.</source>
          <target state="new">The split-merge service requires the ability to remove data from the source shard once the data has been successfully copied to the target.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">**</bpt>delete triggers<ept id="p1">**</ept> can prevent the service from deleting the data on the source and may cause operations to fail.</source>
          <target state="new">For example, <bpt id="p1">**</bpt>delete triggers<ept id="p1">**</ept> can prevent the service from deleting the data on the source and may cause operations to fail.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The sharding key should be the leading column in your primary key or unique index definition.</source>
          <target state="new">The sharding key should be the leading column in your primary key or unique index definition.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>That ensures the best performance for the split or merge validation queries, and for the actual data movement and deletion operations which always operate on sharding key ranges.</source>
          <target state="new">That ensures the best performance for the split or merge validation queries, and for the actual data movement and deletion operations which always operate on sharding key ranges.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Collocate your split-merge service in the region and data center where your databases reside.</source>
          <target state="new">Collocate your split-merge service in the region and data center where your databases reside.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="new">References</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>split-merge tutorial</source>
          <target state="new">split-merge tutorial</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Elastic Scale Security Considerations</source>
          <target state="new">Elastic Scale Security Considerations</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5386c4e0b5f387bd95dc5dcd9700669a3074115c</xliffext:olfilehash>
  </header>
</xliff>