<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Starting a runbook in Azure Automation</source>
          <target state="new">Starting a runbook in Azure Automation</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Summarizes the different methods that can be used to start a runbook in Azure Automation and provides details on using both the Azure portal and Windows PowerShell.</source>
          <target state="new">Summarizes the different methods that can be used to start a runbook in Azure Automation and provides details on using both the Azure portal and Windows PowerShell.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Starting a runbook in Azure Automation</source>
          <target state="new">Starting a runbook in Azure Automation</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following table will help you determine the method to start a runbook in Azure Automation that is most suitable to your particular scenario.</source>
          <target state="new">The following table will help you determine the method to start a runbook in Azure Automation that is most suitable to your particular scenario.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article includes details on starting a runbook with the Azure portal and with Windows PowerShell.</source>
          <target state="new">This article includes details on starting a runbook with the Azure portal and with Windows PowerShell.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Details on the other methods are provided in other documentation that you can access from the links below.</source>
          <target state="new">Details on the other methods are provided in other documentation that you can access from the links below.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>METHOD</source>
          <target state="new">METHOD</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>CHARACTERISTICS</source>
          <target state="new">CHARACTERISTICS</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Azure portal</source>
          <target state="new">Azure portal</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Simplest method with interactive user interface.</source>
          <target state="new">Simplest method with interactive user interface.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Form to provide simple parameter values.</source>
          <target state="new">Form to provide simple parameter values.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Easily track job state.</source>
          <target state="new">Easily track job state.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Access authenticated with Azure logon.</source>
          <target state="new">Access authenticated with Azure logon.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows PowerShell</source>
          <target state="new">Windows PowerShell</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Call from command line with Windows PowerShell cmdlets.</source>
          <target state="new">Call from command line with Windows PowerShell cmdlets.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Can be included in automated solution with multiple steps.</source>
          <target state="new">Can be included in automated solution with multiple steps.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Request is authenticated with certificate or OAuth user principal / service  principal.</source>
          <target state="new">Request is authenticated with certificate or OAuth user principal / service  principal.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Provide simple and complex parameter values.</source>
          <target state="new">Provide simple and complex parameter values.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Track job state.</source>
          <target state="new">Track job state.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Client required to support PowerShell cmdlets.</source>
          <target state="new">Client required to support PowerShell cmdlets.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Azure Automation API</source>
          <target state="new">Azure Automation API</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Most flexible method but also most complex.</source>
          <target state="new">Most flexible method but also most complex.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Call from any custom code that can make HTTP requests.</source>
          <target state="new">Call from any custom code that can make HTTP requests.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Request authenticated with certificate, or Oauth user principal / service principal.</source>
          <target state="new">Request authenticated with certificate, or Oauth user principal / service principal.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Provide simple and complex parameter values.</source>
          <target state="new">Provide simple and complex parameter values.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Track job state.</source>
          <target state="new">Track job state.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Webhook</source>
          <target state="new">Webhook</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Start runbook from single HTTP request.</source>
          <target state="new">Start runbook from single HTTP request.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Authenticated with security token in URL.</source>
          <target state="new">Authenticated with security token in URL.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Client cannot override parameter values specified when webhook created.</source>
          <target state="new">Client cannot override parameter values specified when webhook created.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Runbook can define single parameter that is populated with the HTTP request details.</source>
          <target state="new">Runbook can define single parameter that is populated with the HTTP request details.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>No ability to track job state through webhook URL.</source>
          <target state="new">No ability to track job state through webhook URL.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Schedule</source>
          <target state="new">Schedule</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Automatically start runbook on hourly, daily, or weekly schedule.</source>
          <target state="new">Automatically start runbook on hourly, daily, or weekly schedule.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Manipulate schedule through Azure portal, PowerShell cmdlets, or Azure API.</source>
          <target state="new">Manipulate schedule through Azure portal, PowerShell cmdlets, or Azure API.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Provide parameter values to be used with schedule.</source>
          <target state="new">Provide parameter values to be used with schedule.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>From another runbook</source>
          <target state="new">From another runbook</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Use a runbook as an activity in another runbook</source>
          <target state="new">Use a runbook as an activity in another runbook</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Useful for functionality used by multiple runbooks.</source>
          <target state="new">Useful for functionality used by multiple runbooks.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Provide parameter values to child runbook and use output in parent runbook.</source>
          <target state="new">Provide parameter values to child runbook and use output in parent runbook.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Starting a runbook with the Azure portal</source>
          <target state="new">Starting a runbook with the Azure portal</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the Azure portal, select <bpt id="p1">**</bpt>Automation<ept id="p1">**</ept> and then then click the name of an automation account.</source>
          <target state="new">In the Azure portal, select <bpt id="p1">**</bpt>Automation<ept id="p1">**</ept> and then then click the name of an automation account.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Runbooks<ept id="p1">**</ept> tab.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Runbooks<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Select a runbook, and then click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>.</source>
          <target state="new">Select a runbook, and then click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the runbook has parameters, you will be prompted to provide values with a text box for each parameter.</source>
          <target state="new">If the runbook has parameters, you will be prompted to provide values with a text box for each parameter.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Runbook Parameters<ept id="p1">](#Runbook-parameters)</ept> below for further details on parameters.</source>
          <target state="new">See <bpt id="p1">[</bpt>Runbook Parameters<ept id="p1">](#Runbook-parameters)</ept> below for further details on parameters.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Either select <bpt id="p1">**</bpt>View Job<ept id="p1">**</ept> next to the <bpt id="p2">**</bpt>Starting<ept id="p2">**</ept> runbook message or select the <bpt id="p3">**</bpt>Jobs<ept id="p3">**</ept> tab for the runbook to view the runbook job’s status.</source>
          <target state="new">Either select <bpt id="p1">**</bpt>View Job<ept id="p1">**</ept> next to the <bpt id="p2">**</bpt>Starting<ept id="p2">**</ept> runbook message or select the <bpt id="p3">**</bpt>Jobs<ept id="p3">**</ept> tab for the runbook to view the runbook job’s status.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Starting a runbook with the Azure preview portal</source>
          <target state="new">Starting a runbook with the Azure preview portal</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>From your automation account, click the <bpt id="p1">**</bpt>Runbooks<ept id="p1">**</ept> part to open the <bpt id="p2">**</bpt>Runbooks<ept id="p2">**</ept> blade.</source>
          <target state="new">From your automation account, click the <bpt id="p1">**</bpt>Runbooks<ept id="p1">**</ept> part to open the <bpt id="p2">**</bpt>Runbooks<ept id="p2">**</ept> blade.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Click a runbook to open its <bpt id="p1">**</bpt>Runbook<ept id="p1">**</ept> blade.</source>
          <target state="new">Click a runbook to open its <bpt id="p1">**</bpt>Runbook<ept id="p1">**</ept> blade.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the runbook has no parameters, you will be prompted to confirm whether you want to start it.</source>
          <target state="new">If the runbook has no parameters, you will be prompted to confirm whether you want to start it.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If the runbook has parameters, the <bpt id="p1">**</bpt>Start Runbook<ept id="p1">**</ept> blade will be opened so you can provide parameter values.</source>
          <target state="new">If the runbook has parameters, the <bpt id="p1">**</bpt>Start Runbook<ept id="p1">**</ept> blade will be opened so you can provide parameter values.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Runbook Parameters<ept id="p1">](#Runbook-parameters)</ept> below for further details on parameters.</source>
          <target state="new">See <bpt id="p1">[</bpt>Runbook Parameters<ept id="p1">](#Runbook-parameters)</ept> below for further details on parameters.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Job<ept id="p1">**</ept> blade is opened so that you can track the job's status.</source>
          <target state="new">The <bpt id="p1">**</bpt>Job<ept id="p1">**</ept> blade is opened so that you can track the job's status.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Starting a runbook with Windows PowerShell</source>
          <target state="new">Starting a runbook with Windows PowerShell</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>Start-AzureAutomationRunbook<ept id="p1">](http://msdn.microsoft.com/library/azure/dn690259.aspx)</ept> to start a runbook with Windows PowerShell.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt>Start-AzureAutomationRunbook<ept id="p1">](http://msdn.microsoft.com/library/azure/dn690259.aspx)</ept> to start a runbook with Windows PowerShell.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following sample code starts a runbook called Test-Runbook.</source>
          <target state="new">The following sample code starts a runbook called Test-Runbook.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Start-AzureAutomationRunbook returns a job object that you can use to track its status once the runbook is started.</source>
          <target state="new">Start-AzureAutomationRunbook returns a job object that you can use to track its status once the runbook is started.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can then use this job object with <bpt id="p1">[</bpt>Get-AzureAutomationJob<ept id="p1">](http://msdn.microsoft.com/library/azure/dn690263.aspx)</ept> to determine the status of the job and <bpt id="p2">[</bpt>Get-AzureAutomationJobOutput<ept id="p2">](http://msdn.microsoft.com/library/azure/dn690268.aspx)</ept> to get its output.</source>
          <target state="new">You can then use this job object with <bpt id="p1">[</bpt>Get-AzureAutomationJob<ept id="p1">](http://msdn.microsoft.com/library/azure/dn690263.aspx)</ept> to determine the status of the job and <bpt id="p2">[</bpt>Get-AzureAutomationJobOutput<ept id="p2">](http://msdn.microsoft.com/library/azure/dn690268.aspx)</ept> to get its output.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following sample code starts a runbook called Test-Runbook, waits until it has completed, and then displays its output.</source>
          <target state="new">The following sample code starts a runbook called Test-Runbook, waits until it has completed, and then displays its output.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the runbook requires parameters, then you must provide them as a <bpt id="p1">[</bpt>hashtable<ept id="p1">](http://technet.microsoft.com/library/hh847780.aspx)</ept> where the key of the hashtable matches the parameter name and the value is the parameter value.</source>
          <target state="new">If the runbook requires parameters, then you must provide them as a <bpt id="p1">[</bpt>hashtable<ept id="p1">](http://technet.microsoft.com/library/hh847780.aspx)</ept> where the key of the hashtable matches the parameter name and the value is the parameter value.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following example shows how to start a runbook with two string parameters named FirstName and LastName, an integer named RepeatCount, and a boolean parameter named Show.</source>
          <target state="new">The following example shows how to start a runbook with two string parameters named FirstName and LastName, an integer named RepeatCount, and a boolean parameter named Show.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For additional information on parameters, see <bpt id="p1">[</bpt>Runbook Parameters<ept id="p1">](#Runbook-parameters)</ept> below.</source>
          <target state="new">For additional information on parameters, see <bpt id="p1">[</bpt>Runbook Parameters<ept id="p1">](#Runbook-parameters)</ept> below.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Runbook parameters</source>
          <target state="new">Runbook parameters</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When you start a runbook using the Azure Management Portal or Windows PowerShell, the instruction is sent through the Azure Automation web service.</source>
          <target state="new">When you start a runbook using the Azure Management Portal or Windows PowerShell, the instruction is sent through the Azure Automation web service.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This service does not support parameters with complex data types.</source>
          <target state="new">This service does not support parameters with complex data types.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If you need to provide a value for a complex parameter, then you must call it inline from another runbook as described in <bpt id="p1">[</bpt>Starting a Runbook from Another Runbook<ept id="p1">](http://msdn.microsoft.com/library/azure/dn857355.aspx)</ept>.</source>
          <target state="new">If you need to provide a value for a complex parameter, then you must call it inline from another runbook as described in <bpt id="p1">[</bpt>Starting a Runbook from Another Runbook<ept id="p1">](http://msdn.microsoft.com/library/azure/dn857355.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The Azure Automation web service will provide special functionality for parameters using certain data types as described in the following sections.</source>
          <target state="new">The Azure Automation web service will provide special functionality for parameters using certain data types as described in the following sections.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Named Values</source>
          <target state="new">Named Values</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the parameter is data type [object], then you can use the following JSON format to send it a list of named values: <bpt id="p1">*</bpt>{"Name1":Value1, "Name2":Value2, "Name3":Value3}<ept id="p1">*</ept>.</source>
          <target state="new">If the parameter is data type [object], then you can use the following JSON format to send it a list of named values: <bpt id="p1">*</bpt>{"Name1":Value1, "Name2":Value2, "Name3":Value3}<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>These values must be simple types.</source>
          <target state="new">These values must be simple types.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The runbook will receive the parameter as a <bpt id="p1">[</bpt>PSCustomObject<ept id="p1">](http://msdn.microsoft.com/library/azure/system.management.automation.pscustomobject(v=vs.85).aspx)</ept> with properties that correspond to each named value.</source>
          <target state="new">The runbook will receive the parameter as a <bpt id="p1">[</bpt>PSCustomObject<ept id="p1">](http://msdn.microsoft.com/library/azure/system.management.automation.pscustomobject(v=vs.85).aspx)</ept> with properties that correspond to each named value.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Consider the following test runbook that accepts a parameter called user.</source>
          <target state="new">Consider the following test runbook that accepts a parameter called user.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following text could be used for the user parameter.</source>
          <target state="new">The following text could be used for the user parameter.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This results in the following output.</source>
          <target state="new">This results in the following output.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="new">Arrays</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If the parameter is an array such as [array] or [string[]], then you can use the following JSON format to send it a list of values: <bpt id="p1">*</bpt>[Value1,Value2,Value3]<ept id="p1">*</ept>.</source>
          <target state="new">If the parameter is an array such as [array] or [string[]], then you can use the following JSON format to send it a list of values: <bpt id="p1">*</bpt>[Value1,Value2,Value3]<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>These values must be simple types.</source>
          <target state="new">These values must be simple types.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Consider the following test runbook that accepts a parameter called <bpt id="p1">*</bpt>user<ept id="p1">*</ept>.</source>
          <target state="new">Consider the following test runbook that accepts a parameter called <bpt id="p1">*</bpt>user<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following text could be used for the user parameter.</source>
          <target state="new">The following text could be used for the user parameter.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This results in the following output.</source>
          <target state="new">This results in the following output.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Credentials</source>
          <target state="new">Credentials</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If the parameter is data type <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept>, then you can provide the name of an Azure Automation <bpt id="p2">[</bpt>credential asset<ept id="p2">](http://msdn.microsoft.com/library/azure/dn940015.aspx)</ept>.</source>
          <target state="new">If the parameter is data type <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept>, then you can provide the name of an Azure Automation <bpt id="p2">[</bpt>credential asset<ept id="p2">](http://msdn.microsoft.com/library/azure/dn940015.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The runbook will retrieve the credential with the name that you specify.</source>
          <target state="new">The runbook will retrieve the credential with the name that you specify.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Consider the following test runbook that accepts a parameter called credential.</source>
          <target state="new">Consider the following test runbook that accepts a parameter called credential.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following text could be used for the user parameter assuming that there was a credential asset called <bpt id="p1">*</bpt>My Credential<ept id="p1">*</ept>.</source>
          <target state="new">The following text could be used for the user parameter assuming that there was a credential asset called <bpt id="p1">*</bpt>My Credential<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Assuming the username in the credential was <bpt id="p1">*</bpt>jsmith<ept id="p1">*</ept>, this results in the following output.</source>
          <target state="new">Assuming the username in the credential was <bpt id="p1">*</bpt>jsmith<ept id="p1">*</ept>, this results in the following output.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Starting a Runbook from Another Runbook<ept id="p1">](http://msdn.microsoft.com/library/azure/dn857355.aspx)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Starting a Runbook from Another Runbook<ept id="p1">](http://msdn.microsoft.com/library/azure/dn857355.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39bccffa9527777e5f36ed5f0a802906f50cc890</xliffext:olfilehash>
  </header>
</xliff>