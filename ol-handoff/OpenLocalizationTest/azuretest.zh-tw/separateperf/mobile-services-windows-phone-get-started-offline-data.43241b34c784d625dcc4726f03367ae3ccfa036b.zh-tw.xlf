<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using offline data in Mobile Services (Windows Phone) | Microsoft Azure</source>
          <target state="new">Using offline data in Mobile Services (Windows Phone) | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Azure Mobile Services with sync offline data in your Windows Phone application</source>
          <target state="new">Learn how to use Azure Mobile Services with sync offline data in your Windows Phone application</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Using offline data sync in Mobile Services</source>
          <target state="new">Using offline data sync in Mobile Services</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic shows you how to use use the offline capabilities of Azure Mobile Services.</source>
          <target state="new">This topic shows you how to use use the offline capabilities of Azure Mobile Services.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Azure Mobile Services offline features allow you to interact with a local database when you are in an offline scenario with your Mobile Service.</source>
          <target state="new">Azure Mobile Services offline features allow you to interact with a local database when you are in an offline scenario with your Mobile Service.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The offline features allow you to sync your local changes with the mobile service when you are online again.</source>
          <target state="new">The offline features allow you to sync your local changes with the mobile service when you are online again.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will update the app from the [Get Started with Data] tutorial to support the offline features of Azure Mobile Services.</source>
          <target state="new">In this tutorial, you will update the app from the [Get Started with Data] tutorial to support the offline features of Azure Mobile Services.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Then you will add data in a disconnected offline scenario, sync those items to the online database, and then log in to the Azure Management Portal to view changes to data made when running the app.</source>
          <target state="new">Then you will add data in a disconnected offline scenario, sync those items to the online database, and then log in to the Azure Management Portal to view changes to data made when running the app.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This tutorial is intended to help you better understand how Mobile Services enables you to use Azure to store and retrieve data in a Windows Phone app.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This tutorial is intended to help you better understand how Mobile Services enables you to use Azure to store and retrieve data in a Windows Phone app.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If this is your first experience with Mobile Services, consider first completing the [Get started with Mobile Services] and [Get Started with Data] tutorials.</source>
          <target state="new">If this is your first experience with Mobile Services, consider first completing the [Get started with Mobile Services] and [Get Started with Data] tutorials.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This tutorial walks you through these basic steps:</source>
          <target state="new">This tutorial walks you through these basic steps:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>[Update the app to support offline features]</source>
          <target state="new">[Update the app to support offline features]</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>[Test the app in an offline scenario]</source>
          <target state="new">[Test the app in an offline scenario]</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>[Update the app to reconnect your mobile service]</source>
          <target state="new">[Update the app to reconnect your mobile service]</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>[Test the app connected to the Mobile Service]</source>
          <target state="new">[Test the app connected to the Mobile Service]</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This tutorial requires the following:</source>
          <target state="new">This tutorial requires the following:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Visual Studio 2012</source>
          <target state="new">Visual Studio 2012</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>[Windows Phone 8 SDK]</source>
          <target state="new">[Windows Phone 8 SDK]</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Completion of the [Get Started with Data] tutorial.</source>
          <target state="new">Completion of the [Get Started with Data] tutorial.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>[Azure Mobile Services SDK version 1.3.0 (or later)][Mobile Services SDK Nuget]</source>
          <target state="new">[Azure Mobile Services SDK version 1.3.0 (or later)][Mobile Services SDK Nuget]</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>[Azure Mobile Services SQLite Store version 1.0.0 (or later)][SQLite store nuget]</source>
          <target state="new">[Azure Mobile Services SQLite Store version 1.0.0 (or later)][SQLite store nuget]</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>[SQLite for Windows Phone 8]</source>
          <target state="new">[SQLite for Windows Phone 8]</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> To complete this tutorial, you need a Azure account.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> To complete this tutorial, you need a Azure account.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you don't have an account, you can create a free trial account in just a couple of minutes.</source>
          <target state="new">If you don't have an account, you can create a free trial account in just a couple of minutes.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For details, see <ph id="ph1">&lt;a href="http://www.windowsazure.com/pricing/free-trial/?WT.mc_id=AE564AB28" target="_blank"&gt;</ph>Azure Free Trial<ph id="ph2">&lt;/a&gt;</ph>.</source>
          <target state="new">For details, see <ph id="ph1">&lt;a href="http://www.windowsazure.com/pricing/free-trial/?WT.mc_id=AE564AB28" target="_blank"&gt;</ph>Azure Free Trial<ph id="ph2">&lt;/a&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="enable-offline-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update the app to support offline features</source>
          <target state="new"><ph id="ph1">&lt;a name="enable-offline-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update the app to support offline features</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Azure Mobile Services offline features allow you to interact with a local database when you are in an offline scenario with your Mobile Service.</source>
          <target state="new">Azure Mobile Services offline features allow you to interact with a local database when you are in an offline scenario with your Mobile Service.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To use these features in your app, you initialize <ph id="ph1">`MobileServiceClient.SyncContext`</ph> to a local store.</source>
          <target state="new">To use these features in your app, you initialize <ph id="ph1">`MobileServiceClient.SyncContext`</ph> to a local store.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Then reference your table through the <ph id="ph1">`IMobileServiceSyncTable`</ph> interface.</source>
          <target state="new">Then reference your table through the <ph id="ph1">`IMobileServiceSyncTable`</ph> interface.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This section uses SQLite as the local store for the offline features.</source>
          <target state="new">This section uses SQLite as the local store for the offline features.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> You can skip this section and just download a version of the Getting Started project that already has offline support.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> You can skip this section and just download a version of the Getting Started project that already has offline support.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To download a project with offline support enabled, see [Getting Started Offline Sample for Windows Phone].</source>
          <target state="new">To download a project with offline support enabled, see [Getting Started Offline Sample for Windows Phone].</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Install SQLite for Windows Phone 8 projects.</source>
          <target state="new">Install SQLite for Windows Phone 8 projects.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can install it from this link, [SQLite for Windows Phone 8].</source>
          <target state="new">You can install it from this link, [SQLite for Windows Phone 8].</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you are using Internet Explorer, clicking the link to install SQLite may prompt you to download the .vsix as a .zip file.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you are using Internet Explorer, clicking the link to install SQLite may prompt you to download the .vsix as a .zip file.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Save the file to a location on your hard drive with the .vsix extension instead of .zip.</source>
          <target state="new">Save the file to a location on your hard drive with the .vsix extension instead of .zip.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The double click the .vsix file in Windows Explorer to run the installation.</source>
          <target state="new">The double click the .vsix file in Windows Explorer to run the installation.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In Visual Studio open the project that you completed in the [Get started with Mobile Services] or [Get Started with Data] tutorial.</source>
          <target state="new">In Visual Studio open the project that you completed in the [Get started with Mobile Services] or [Get Started with Data] tutorial.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right click <bpt id="p1">**</bpt>References<ept id="p1">**</ept> under the project and add a reference to <bpt id="p2">**</bpt>SQLite for Windows Phone<ept id="p2">**</ept> under <bpt id="p3">**</bpt>Windows Phone<ept id="p3">**</ept>&gt;<bpt id="p4">**</bpt>Extensions<ept id="p4">**</ept>.</source>
          <target state="new">In Solution Explorer, right click <bpt id="p1">**</bpt>References<ept id="p1">**</ept> under the project and add a reference to <bpt id="p2">**</bpt>SQLite for Windows Phone<ept id="p2">**</ept> under <bpt id="p3">**</bpt>Windows Phone<ept id="p3">**</ept>&gt;<bpt id="p4">**</bpt>Extensions<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The SQLite Runtime requires you to change the processor architecture of the project being built to <bpt id="p1">**</bpt>x86<ept id="p1">**</ept>, <bpt id="p2">**</bpt>x64<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>ARM<ept id="p3">**</ept>.</source>
          <target state="new">The SQLite Runtime requires you to change the processor architecture of the project being built to <bpt id="p1">**</bpt>x86<ept id="p1">**</ept>, <bpt id="p2">**</bpt>x64<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>ARM<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Any CPU<ept id="p1">**</ept> is not supported.</source>
          <target state="new"><bpt id="p1">**</bpt>Any CPU<ept id="p1">**</ept> is not supported.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Change the processor architecture to one of the supported settings that you want to test.</source>
          <target state="new">Change the processor architecture to one of the supported settings that you want to test.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In Solution Explorer for Visual Studio, right click your client app project and click <bpt id="p1">**</bpt>Manage Nuget Packages<ept id="p1">**</ept> to run NuGet Package Manager.</source>
          <target state="new">In Solution Explorer for Visual Studio, right click your client app project and click <bpt id="p1">**</bpt>Manage Nuget Packages<ept id="p1">**</ept> to run NuGet Package Manager.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Search for <bpt id="p1">**</bpt>SQLiteStore<ept id="p1">**</ept> to install the <bpt id="p2">**</bpt>WindowsAzure.MobileServices.SQLiteStore<ept id="p2">**</ept> package.</source>
          <target state="new">Search for <bpt id="p1">**</bpt>SQLiteStore<ept id="p1">**</ept> to install the <bpt id="p2">**</bpt>WindowsAzure.MobileServices.SQLiteStore<ept id="p2">**</ept> package.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In Solution Explorer for Visual Studio, open the MainPage.xaml.cs file.</source>
          <target state="new">In Solution Explorer for Visual Studio, open the MainPage.xaml.cs file.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Add the following using statements to the top of the file.</source>
          <target state="new">Add the following using statements to the top of the file.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In Mainpage.xaml.cs replace the declaration of <ph id="ph1">`todoTable`</ph> with a declaration of type <ph id="ph2">`IMobileServicesSyncTable`</ph> that is initialized by calling <ph id="ph3">`MobileServicesClient.GetSyncTable()`</ph>.</source>
          <target state="new">In Mainpage.xaml.cs replace the declaration of <ph id="ph1">`todoTable`</ph> with a declaration of type <ph id="ph2">`IMobileServicesSyncTable`</ph> that is initialized by calling <ph id="ph3">`MobileServicesClient.GetSyncTable()`</ph>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In MainPage.xaml.cs, update the <ph id="ph1">`TodoItem`</ph> class so that the class includes the <bpt id="p1">**</bpt>Version<ept id="p1">**</ept> system property as follows.</source>
          <target state="new">In MainPage.xaml.cs, update the <ph id="ph1">`TodoItem`</ph> class so that the class includes the <bpt id="p1">**</bpt>Version<ept id="p1">**</ept> system property as follows.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In MainPage.xaml.cs, update the <ph id="ph1">`OnNavigatedTo`</ph> event handler so that it is an <ph id="ph2">`async`</ph> method and initializes the client sync context with a SQLite store.</source>
          <target state="new">In MainPage.xaml.cs, update the <ph id="ph1">`OnNavigatedTo`</ph> event handler so that it is an <ph id="ph2">`async`</ph> method and initializes the client sync context with a SQLite store.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The SQLite store is created with a table that matches the schema of the mobile service table but it must contain the <bpt id="p1">**</bpt>Version<ept id="p1">**</ept> system property added in the previous step.</source>
          <target state="new">The SQLite store is created with a table that matches the schema of the mobile service table but it must contain the <bpt id="p1">**</bpt>Version<ept id="p1">**</ept> system property added in the previous step.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In Solution Explorer for Visual Studio, open the MainPage.xaml file.</source>
          <target state="new">In Solution Explorer for Visual Studio, open the MainPage.xaml file.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Find the button definition for the <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> button.</source>
          <target state="new">Find the button definition for the <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Replace it with the following stack panel defintion.</source>
          <target state="new">Replace it with the following stack panel defintion.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This code adds two button controls with click event handlers for <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Pull<ept id="p2">**</ept> operations.</source>
          <target state="new">This code adds two button controls with click event handlers for <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Pull<ept id="p2">**</ept> operations.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The buttons are horizontally where the refresh button is.</source>
          <target state="new">The buttons are horizontally where the refresh button is.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Save the file.</source>
          <target state="new">Save the file.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Also, change the text for the textblocks to match the following screenshot.</source>
          <target state="new">Also, change the text for the textblocks to match the following screenshot.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In MainPage.xaml.cs, add the button click event handlers for the <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Pull<ept id="p2">**</ept> buttons and save the file.</source>
          <target state="new">In MainPage.xaml.cs, add the button click event handlers for the <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Pull<ept id="p2">**</ept> buttons and save the file.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Don't run the app yet.</source>
          <target state="new">Don't run the app yet.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Press the <bpt id="p1">**</bpt>F7<ept id="p1">**</ept> key to rebuild the project.</source>
          <target state="new">Press the <bpt id="p1">**</bpt>F7<ept id="p1">**</ept> key to rebuild the project.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Verify no build errors occurred.</source>
          <target state="new">Verify no build errors occurred.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="test-offline-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Test the app in an offline scenario</source>
          <target state="new"><ph id="ph1">&lt;a name="test-offline-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Test the app in an offline scenario</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In this section, you break the app connection with the mobile service to simulate an offline scenario.</source>
          <target state="new">In this section, you break the app connection with the mobile service to simulate an offline scenario.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Then you will add some data items which will be held in the local store.</source>
          <target state="new">Then you will add some data items which will be held in the local store.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Notice that in this section the app should not be connected to any mobile service.</source>
          <target state="new">Notice that in this section the app should not be connected to any mobile service.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>So the <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Pull<ept id="p2">**</ept> buttons will throw exceptions if you test them.</source>
          <target state="new">So the <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Pull<ept id="p2">**</ept> buttons will throw exceptions if you test them.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the next section, you will connect this client app to the mobile service again to test the <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Pull<ept id="p2">**</ept> operations to sync the store with the mobile service database.</source>
          <target state="new">In the next section, you will connect this client app to the mobile service again to test the <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Pull<ept id="p2">**</ept> operations to sync the store with the mobile service database.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In Solution Explorer for Visual Studio, open App.xaml.cs.</source>
          <target state="new">In Solution Explorer for Visual Studio, open App.xaml.cs.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Change the initialization of the <bpt id="p1">**</bpt>MobileServiceClient<ept id="p1">**</ept> to a invalid address by replacing "<bpt id="p2">**</bpt>azure-mobile.net<ept id="p2">**</ept>" with "<bpt id="p3">**</bpt>azure-mobile.xxx<ept id="p3">**</ept>" for your URL.</source>
          <target state="new">Change the initialization of the <bpt id="p1">**</bpt>MobileServiceClient<ept id="p1">**</ept> to a invalid address by replacing "<bpt id="p2">**</bpt>azure-mobile.net<ept id="p2">**</ept>" with "<bpt id="p3">**</bpt>azure-mobile.xxx<ept id="p3">**</ept>" for your URL.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Then save the file.</source>
          <target state="new">Then save the file.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In Visual Studio, press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> to build and run the app.</source>
          <target state="new">In Visual Studio, press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> to build and run the app.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Enter a new todo item and click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</source>
          <target state="new">Enter a new todo item and click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The new todo items exist only in the local store until they can be pushed to the mobile service.</source>
          <target state="new">The new todo items exist only in the local store until they can be pushed to the mobile service.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The client app behaves as if its connected to the mobile service supporting all create, read, update, delete (CRUD) operations.</source>
          <target state="new">The client app behaves as if its connected to the mobile service supporting all create, read, update, delete (CRUD) operations.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Close the app and restart it to verify that the new items you created are persisted to the local store.</source>
          <target state="new">Close the app and restart it to verify that the new items you created are persisted to the local store.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="update-online-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update the app to reconnect your mobile service</source>
          <target state="new"><ph id="ph1">&lt;a name="update-online-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update the app to reconnect your mobile service</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In this section you reconnect the app to the mobile service.</source>
          <target state="new">In this section you reconnect the app to the mobile service.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This simulates the app moving from an offline state to an online state with the mobile service.</source>
          <target state="new">This simulates the app moving from an offline state to an online state with the mobile service.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In Solution Explorer for Visual Studio, open App.xaml.cs.</source>
          <target state="new">In Solution Explorer for Visual Studio, open App.xaml.cs.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Change the initialization of the <bpt id="p1">**</bpt>MobileServiceClient<ept id="p1">**</ept> back to the correct address by replacing "<bpt id="p2">**</bpt>azure-mobile.xxx<ept id="p2">**</ept>" with "<bpt id="p3">**</bpt>azure-mobile.net<ept id="p3">**</ept>" for your URL.</source>
          <target state="new">Change the initialization of the <bpt id="p1">**</bpt>MobileServiceClient<ept id="p1">**</ept> back to the correct address by replacing "<bpt id="p2">**</bpt>azure-mobile.xxx<ept id="p2">**</ept>" with "<bpt id="p3">**</bpt>azure-mobile.net<ept id="p3">**</ept>" for your URL.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Then save the file.</source>
          <target state="new">Then save the file.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="test-online-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Test the app connected to the mobile service</source>
          <target state="new"><ph id="ph1">&lt;a name="test-online-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Test the app connected to the mobile service</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In this section you will test push and pull operations to sync the local store with the mobile service database.</source>
          <target state="new">In this section you will test push and pull operations to sync the local store with the mobile service database.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In Visual Studio, press the <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> key to rebuild and run the app.</source>
          <target state="new">In Visual Studio, press the <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> key to rebuild and run the app.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Notice that the data looks the same as the offline scenario even though the app is now connected to the mobile service.</source>
          <target state="new">Notice that the data looks the same as the offline scenario even though the app is now connected to the mobile service.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This is because this app always works with the <ph id="ph1">`IMobileServiceSyncTable`</ph> that is pointed to the local store.</source>
          <target state="new">This is because this app always works with the <ph id="ph1">`IMobileServiceSyncTable`</ph> that is pointed to the local store.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Log into the Microsoft Azure Management portal and look at the database for your mobile service.</source>
          <target state="new">Log into the Microsoft Azure Management portal and look at the database for your mobile service.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If your service uses the JavaScript backend for mobile services, you can browse the data from the <bpt id="p1">**</bpt>Data<ept id="p1">**</ept> tab of the mobile service.</source>
          <target state="new">If your service uses the JavaScript backend for mobile services, you can browse the data from the <bpt id="p1">**</bpt>Data<ept id="p1">**</ept> tab of the mobile service.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If you are using the .NET backend for your mobile service, in Visual Studio go to <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>Azure<ept id="p2">**</ept> -&gt; <bpt id="p3">**</bpt>SQL Databases<ept id="p3">**</ept>.</source>
          <target state="new">If you are using the .NET backend for your mobile service, in Visual Studio go to <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>Azure<ept id="p2">**</ept> -&gt; <bpt id="p3">**</bpt>SQL Databases<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Right click your database and select <bpt id="p1">**</bpt>Open in SQL Server Object Explorer<ept id="p1">**</ept>.</source>
          <target state="new">Right click your database and select <bpt id="p1">**</bpt>Open in SQL Server Object Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Notice the data has not been synchronized between the database and the local store.</source>
          <target state="new">Notice the data has not been synchronized between the database and the local store.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In the app, press the <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> button.</source>
          <target state="new">In the app, press the <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This causes the app to call <ph id="ph1">`MobileServiceClient.SyncContext.PushAsync`</ph> and then <ph id="ph2">`RefreshTodoItems`</ph> to refresh the app with the items from the local store.</source>
          <target state="new">This causes the app to call <ph id="ph1">`MobileServiceClient.SyncContext.PushAsync`</ph> and then <ph id="ph2">`RefreshTodoItems`</ph> to refresh the app with the items from the local store.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This push operation results in the mobile service database receiving the data from the store.</source>
          <target state="new">This push operation results in the mobile service database receiving the data from the store.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>However, the local store does not receive the items from the mobile service database.</source>
          <target state="new">However, the local store does not receive the items from the mobile service database.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A push operation is executed off the <ph id="ph1">`MobileServiceClient.SyncContext`</ph> instead of the <ph id="ph2">`IMobileServicesSyncTable`</ph> and pushes changes on all tables associated with that sync context.</source>
          <target state="new">A push operation is executed off the <ph id="ph1">`MobileServiceClient.SyncContext`</ph> instead of the <ph id="ph2">`IMobileServicesSyncTable`</ph> and pushes changes on all tables associated with that sync context.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This is to cover scenarios where there are relationships between tables.</source>
          <target state="new">This is to cover scenarios where there are relationships between tables.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In the app a few new items to the local store.</source>
          <target state="new">In the app a few new items to the local store.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This time press the <bpt id="p1">**</bpt>Pull<ept id="p1">**</ept> button in the app.</source>
          <target state="new">This time press the <bpt id="p1">**</bpt>Pull<ept id="p1">**</ept> button in the app.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The app only calls <ph id="ph1">`IMobileServiceSyncTable.PullAsync()`</ph> and <ph id="ph2">`RefreshTodoItems`</ph>.</source>
          <target state="new">The app only calls <ph id="ph1">`IMobileServiceSyncTable.PullAsync()`</ph> and <ph id="ph2">`RefreshTodoItems`</ph>.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Notice that all the data from the mobile service database was pulled into the local store and shown in the app.</source>
          <target state="new">Notice that all the data from the mobile service database was pulled into the local store and shown in the app.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>However, also notice that all the data in the local store was still pushed to the mobile service database.</source>
          <target state="new">However, also notice that all the data in the local store was still pushed to the mobile service database.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This is because a <bpt id="p1">**</bpt>pull always does a push first<ept id="p1">**</ept>.</source>
          <target state="new">This is because a <bpt id="p1">**</bpt>pull always does a push first<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>In this example, we retrieve all records in the remote <ph id="ph1">`todoTable`</ph>, but it is also possible to filter records by passing a query.</source>
          <target state="new">In this example, we retrieve all records in the remote <ph id="ph1">`todoTable`</ph>, but it is also possible to filter records by passing a query.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The first parameter to <ph id="ph1">`PullAsync`</ph> is a query ID that is used for incremental sync, which uses the <ph id="ph2">`UpdatedAt`</ph> timestamp to get only records modified since the last sync.</source>
          <target state="new">The first parameter to <ph id="ph1">`PullAsync`</ph> is a query ID that is used for incremental sync, which uses the <ph id="ph2">`UpdatedAt`</ph> timestamp to get only records modified since the last sync.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The query ID should be a descriptive string that is unique for each logical query in your app.</source>
          <target state="new">The query ID should be a descriptive string that is unique for each logical query in your app.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To opt-out of incremental sync, pass <ph id="ph1">`null`</ph> as the query ID.</source>
          <target state="new">To opt-out of incremental sync, pass <ph id="ph1">`null`</ph> as the query ID.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This will retrieve all records on each pull operation, which is potentially inefficient.</source>
          <target state="new">This will retrieve all records on each pull operation, which is potentially inefficient.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> To support synchronization of deleted records with offline data sync, you should enable [Soft Delete].</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> To support synchronization of deleted records with offline data sync, you should enable [Soft Delete].</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Otherwise, you have to call <ph id="ph1">`IMobileServiceSyncTable.PurgeAsync()`</ph> to purge the local store.</source>
          <target state="new">Otherwise, you have to call <ph id="ph1">`IMobileServiceSyncTable.PurgeAsync()`</ph> to purge the local store.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>[Handling conflicts with offline support for Mobile Services]</source>
          <target state="new">[Handling conflicts with offline support for Mobile Services]</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>[Using Soft Delete in Mobile Services][Soft Delete]</source>
          <target state="new">[Using Soft Delete in Mobile Services][Soft Delete]</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b03e1780dd37f7736dcae2863a3a66e09f1d6882</xliffext:olfilehash>
  </header>
</xliff>