<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Custom SaaS connector ASP.NET API app in Azure App Service</source>
          <target state="new">Custom SaaS connector ASP.NET API app in Azure App Service</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to write code that connects to a SaaS platform from an API app and how to call the API app from a .NET client.</source>
          <target state="new">Learn how to write code that connects to a SaaS platform from an API app and how to call the API app from a .NET client.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Connect to a SaaS platform from an ASP.NET API app in Azure App Service</source>
          <target state="new">Connect to a SaaS platform from an ASP.NET API app in Azure App Service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This tutorial shows how to code and configure an <bpt id="p1">[</bpt>API app<ept id="p1">](app-service-api-apps-why-best-platform.md)</ept> that connects to a <bpt id="p2">[</bpt>Software-as-a-Service (SaaS) platform<ept id="p2">](../app-service/app-service-authentication-overview.md#obotosaas)</ept> using the <bpt id="p3">[</bpt>App Service API app SDK for .NET<ept id="p3">](http://www.nuget.org/packages/Microsoft.Azure.AppService.ApiApps.Service/)</ept>.</source>
          <target state="new">This tutorial shows how to code and configure an <bpt id="p1">[</bpt>API app<ept id="p1">](app-service-api-apps-why-best-platform.md)</ept> that connects to a <bpt id="p2">[</bpt>Software-as-a-Service (SaaS) platform<ept id="p2">](../app-service/app-service-authentication-overview.md#obotosaas)</ept> using the <bpt id="p3">[</bpt>App Service API app SDK for .NET<ept id="p3">](http://www.nuget.org/packages/Microsoft.Azure.AppService.ApiApps.Service/)</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The tutorial also shows how to call the API app from a .NET client by using the <bpt id="p1">[</bpt>App Service SDK for .NET<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.AppService)</ept>.</source>
          <target state="new">The tutorial also shows how to call the API app from a .NET client by using the <bpt id="p1">[</bpt>App Service SDK for .NET<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.AppService)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>At the end of the tutorial you'll have a .NET console app client that calls a .NET API app running in Azure App Service.</source>
          <target state="new">At the end of the tutorial you'll have a .NET console app client that calls a .NET API app running in Azure App Service.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The API app calls the Dropbox API and returns a list of files and folders in the user's Dropbox account.</source>
          <target state="new">The API app calls the Dropbox API and returns a list of files and folders in the user's Dropbox account.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>As an alternative to writing code that calls a SaaS API directly from a custom API app, you can call a prepackaged <bpt id="p1">[</bpt>connector API app<ept id="p1">](../app-service-logic/app-service-logic-what-are-biztalk-api-apps.md)</ept>.</source>
          <target state="new">As an alternative to writing code that calls a SaaS API directly from a custom API app, you can call a prepackaged <bpt id="p1">[</bpt>connector API app<ept id="p1">](../app-service-logic/app-service-logic-what-are-biztalk-api-apps.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information about how to do that, see <bpt id="p1">[</bpt>Deploy and configure a SaaS connector API app<ept id="p1">](app-service-api-connnect-your-app-to-saas-connector.md)</ept>.</source>
          <target state="new">For information about how to do that, see <bpt id="p1">[</bpt>Deploy and configure a SaaS connector API app<ept id="p1">](app-service-api-connnect-your-app-to-saas-connector.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The tutorial walks you through the following steps:</source>
          <target state="new">The tutorial walks you through the following steps:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create an API app project in Visual Studio.</source>
          <target state="new">Create an API app project in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Configure the <bpt id="p1">*</bpt>apiapp.json<ept id="p1">*</ept> file to enable the API app to connect to the Dropbox service.</source>
          <target state="new">Configure the <bpt id="p1">*</bpt>apiapp.json<ept id="p1">*</ept> file to enable the API app to connect to the Dropbox service.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add code that calls Dropbox and returns the results.</source>
          <target state="new">Add code that calls Dropbox and returns the results.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Create a new API app in Azure.</source>
          <target state="new">Create a new API app in Azure.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Deploy the project to the API app.</source>
          <target state="new">Deploy the project to the API app.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Configure the API app.</source>
          <target state="new">Configure the API app.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Configure the gateway.</source>
          <target state="new">Configure the gateway.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Create a test client.</source>
          <target state="new">Create a test client.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Run the test client.</source>
          <target state="new">Run the test client.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The tutorial makes these assumptions:</source>
          <target state="new">The tutorial makes these assumptions:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You have completed the <bpt id="p1">[</bpt>Create an API app<ept id="p1">](app-service-dotnet-create-api-app.md)</ept> and <bpt id="p2">[</bpt>Deploy an API app<ept id="p2">](app-service-dotnet-deploy-api-app.md)</ept> tutorials.</source>
          <target state="new">You have completed the <bpt id="p1">[</bpt>Create an API app<ept id="p1">](app-service-dotnet-create-api-app.md)</ept> and <bpt id="p2">[</bpt>Deploy an API app<ept id="p2">](app-service-dotnet-deploy-api-app.md)</ept> tutorials.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You have a basic understanding of the Azure App Service gateway architecture for authentication, as presented in <bpt id="p1">[</bpt>Authentication for API apps and mobile apps<ept id="p1">](app-service-authentication-overview.md)</ept>.</source>
          <target state="new">You have a basic understanding of the Azure App Service gateway architecture for authentication, as presented in <bpt id="p1">[</bpt>Authentication for API apps and mobile apps<ept id="p1">](app-service-authentication-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You know how to work with API apps in the Azure preview portal, as explained in <bpt id="p1">[</bpt>How to navigate to API app and gateway blades<ept id="p1">](app-service-api-manage-in-portal.md#navigate)</ept>.</source>
          <target state="new">You know how to work with API apps in the Azure preview portal, as explained in <bpt id="p1">[</bpt>How to navigate to API app and gateway blades<ept id="p1">](app-service-api-manage-in-portal.md#navigate)</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create the API app project</source>
          <target state="new">Create the API app project</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When the instructions direct you to enter a name for the project, enter <bpt id="p1">*</bpt>SimpleDropbox<ept id="p1">*</ept>.</source>
          <target state="new">When the instructions direct you to enter a name for the project, enter <bpt id="p1">*</bpt>SimpleDropbox<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Configure the <bpt id="p1">*</bpt>apiapp.json<ept id="p1">*</ept> file</source>
          <target state="new">Configure the <bpt id="p1">*</bpt>apiapp.json<ept id="p1">*</ept> file</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For an API app to make outgoing calls to a SaaS platform, the SaaS platform has to be specified in the <bpt id="p1">*</bpt>apiapp.json<ept id="p1">*</ept> file.</source>
          <target state="new">For an API app to make outgoing calls to a SaaS platform, the SaaS platform has to be specified in the <bpt id="p1">*</bpt>apiapp.json<ept id="p1">*</ept> file.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>apiapp.json<ept id="p1">*</ept> file and add an <ph id="ph1">`authentication`</ph> property as shown here (you'll also have to add a comma after the preceding property):</source>
          <target state="new">Open the <bpt id="p1">*</bpt>apiapp.json<ept id="p1">*</ept> file and add an <ph id="ph1">`authentication`</ph> property as shown here (you'll also have to add a comma after the preceding property):</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The complete apiapp.json file will resemble this example:</source>
          <target state="new">The complete apiapp.json file will resemble this example:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Save the file.</source>
          <target state="new">Save the file.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Setting the <ph id="ph1">`authentication`</ph> property has a couple effects:</source>
          <target state="new">Setting the <ph id="ph1">`authentication`</ph> property has a couple effects:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It causes the portal to display UI in the API app blade that enables you to enter the SaaS platform's client ID and client secret values.</source>
          <target state="new">It causes the portal to display UI in the API app blade that enables you to enter the SaaS platform's client ID and client secret values.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It enables the API app to retrieve the SaaS provider's access token from the gateway for use when calling the SaaS provider's API.</source>
          <target state="new">It enables the API app to retrieve the SaaS provider's access token from the gateway for use when calling the SaaS provider's API.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`authentication`</ph> property is an array, but this preview release doesn't support specifying multiple providers.</source>
          <target state="new">The <ph id="ph1">`authentication`</ph> property is an array, but this preview release doesn't support specifying multiple providers.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For a list of the supported platforms, see <bpt id="p1">[</bpt>Getting user consent to access other SaaS platforms<ept id="p1">](../app-service/app-service-authentication-overview.md#obotosaas)</ept>.</source>
          <target state="new">For a list of the supported platforms, see <bpt id="p1">[</bpt>Getting user consent to access other SaaS platforms<ept id="p1">](../app-service/app-service-authentication-overview.md#obotosaas)</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can also specify scopes, as in this example:</source>
          <target state="new">You can also specify scopes, as in this example:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Available scopes are defined by each SaaS provider and can be found in the provider's developer portal.</source>
          <target state="new">Available scopes are defined by each SaaS provider and can be found in the provider's developer portal.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Add Code that calls Dropbox</source>
          <target state="new">Add Code that calls Dropbox</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Install the <bpt id="p1">[</bpt>DropboxRestAPI<ept id="p1">](https://www.nuget.org/packages/DropboxRestAPI)</ept> NuGet package in the SimpleDropbox project.</source>
          <target state="new">Install the <bpt id="p1">[</bpt>DropboxRestAPI<ept id="p1">](https://www.nuget.org/packages/DropboxRestAPI)</ept> NuGet package in the SimpleDropbox project.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>NuGet Package Manager &gt; Package Manager Console<ept id="p2">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>NuGet Package Manager &gt; Package Manager Console<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Package Manager Console<ept id="p1">**</ept> window, enter this command:</source>
          <target state="new">In the <bpt id="p1">**</bpt>Package Manager Console<ept id="p1">**</ept> window, enter this command:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">*</bpt>Controllers\ValuesController.cs<ept id="p1">*</ept> and replace all of the code in the file with the following code.</source>
          <target state="new">Open <bpt id="p1">*</bpt>Controllers\ValuesController.cs<ept id="p1">*</ept> and replace all of the code in the file with the following code.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Before the client calls this method, the user has logged in to Dropbox and granted consent for the API app to access the user's Dropbox account.</source>
          <target state="new">Before the client calls this method, the user has logged in to Dropbox and granted consent for the API app to access the user's Dropbox account.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Dropbox acknowledges that consent by providing an access token to the App Service gateway.</source>
          <target state="new">Dropbox acknowledges that consent by providing an access token to the App Service gateway.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This code retrieves the token from the gateway and includes it in a call to the Dropbox API, as shown in steps 6 and 7 in the diagram below.</source>
          <target state="new">This code retrieves the token from the gateway and includes it in a call to the Dropbox API, as shown in steps 6 and 7 in the diagram below.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Build the project.</source>
          <target state="new">Build the project.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Create an API app in Azure</source>
          <target state="new">Create an API app in Azure</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In this section you use the Visual Studio <bpt id="p1">**</bpt>Publish Web<ept id="p1">**</ept> wizard to create an API app in Azure.</source>
          <target state="new">In this section you use the Visual Studio <bpt id="p1">**</bpt>Publish Web<ept id="p1">**</ept> wizard to create an API app in Azure.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Where the instructions direct you to enter a name for the API app, enter <bpt id="p1">*</bpt>SimpleDropbox<ept id="p1">*</ept>.</source>
          <target state="new">Where the instructions direct you to enter a name for the API app, enter <bpt id="p1">*</bpt>SimpleDropbox<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Deploy your code</source>
          <target state="new">Deploy your code</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You use the same <bpt id="p1">**</bpt>Publish Web<ept id="p1">**</ept> wizard to deploy your code to the new API app.</source>
          <target state="new">You use the same <bpt id="p1">**</bpt>Publish Web<ept id="p1">**</ept> wizard to deploy your code to the new API app.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Configure authentication for incoming calls</source>
          <target state="new">Configure authentication for incoming calls</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For Azure App Service to allow authenticated outgoing calls from the API app, the API app must also require that incoming calls come from authenticated users.</source>
          <target state="new">For Azure App Service to allow authenticated outgoing calls from the API app, the API app must also require that incoming calls come from authenticated users.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This is not a general OAuth 2.0 requirement but is a requirement of the App Service gateway architecture as it is currently implemented.</source>
          <target state="new">This is not a general OAuth 2.0 requirement but is a requirement of the App Service gateway architecture as it is currently implemented.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The screenshots in this section show a ContactsList API app, but the process is the same for the SimpleDropbox API app that you're creating in this tutorial.</source>
          <target state="new">The screenshots in this section show a ContactsList API app, but the process is the same for the SimpleDropbox API app that you're creating in this tutorial.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Configure the API app to require that incoming calls be authenticated</source>
          <target state="new">Configure the API app to require that incoming calls be authenticated</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Configure an identity provider in the gateway</source>
          <target state="new">Configure an identity provider in the gateway</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Configure authentication for outgoing calls</source>
          <target state="new">Configure authentication for outgoing calls</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To enable your API app to call the Dropbox API, you have to exchange settings between your API app and a Dropbox app that you create on the Dropbox developer site.</source>
          <target state="new">To enable your API app to call the Dropbox API, you have to exchange settings between your API app and a Dropbox app that you create on the Dropbox developer site.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Create a Dropbox app on the Dropbox.com site</source>
          <target state="new">Create a Dropbox app on the Dropbox.com site</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Exchange settings between Dropbox and your API app</source>
          <target state="new">Exchange settings between Dropbox and your API app</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following steps refer to a Dropbox connector API app, but the procedures and UI are the same for the SimpleDropbox API app that you're creating in this tutorial.</source>
          <target state="new">The following steps refer to a Dropbox connector API app, but the procedures and UI are the same for the SimpleDropbox API app that you're creating in this tutorial.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> If you don't see fields for the Dropbox client ID and client secret on the SimpleDropbox API app's <bpt id="p2">**</bpt>Authentication<ept id="p2">**</ept> blade as shown in the screenshot, make sure that you restarted the gateway as directed after deploying the API app project to the API app.</source>
          <target state="new"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> If you don't see fields for the Dropbox client ID and client secret on the SimpleDropbox API app's <bpt id="p2">**</bpt>Authentication<ept id="p2">**</ept> blade as shown in the screenshot, make sure that you restarted the gateway as directed after deploying the API app project to the API app.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The "dropbox" value in the <ph id="ph1">`authentication`</ph> property of the <bpt id="p1">*</bpt>apiapp.json<ept id="p1">*</ept> file that you deployed earlier is what triggers the portal to display these fields.</source>
          <target state="new">The "dropbox" value in the <ph id="ph1">`authentication`</ph> property of the <bpt id="p1">*</bpt>apiapp.json<ept id="p1">*</ept> file that you deployed earlier is what triggers the portal to display these fields.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Create a test client</source>
          <target state="new">Create a test client</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In this section you create a console app project that uses client code generated by Visual Studio to call the SimpleDropbox API app.</source>
          <target state="new">In this section you create a console app project that uses client code generated by Visual Studio to call the SimpleDropbox API app.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The console app instantiates a Windows Forms browser control to handle user interaction with the gateway and Dropbox login web pages.</source>
          <target state="new">The console app instantiates a Windows Forms browser control to handle user interaction with the gateway and Dropbox login web pages.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Create the project</source>
          <target state="new">Create the project</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In Visual Studio, create a console application project and name it <bpt id="p1">*</bpt>SimpleDropboxTest<ept id="p1">*</ept>.</source>
          <target state="new">In Visual Studio, create a console application project and name it <bpt id="p1">*</bpt>SimpleDropboxTest<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Set a reference to System.Windows.Forms.</source>
          <target state="new">Set a reference to System.Windows.Forms.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>References<ept id="p2">**</ept>, then click <bpt id="p3">**</bpt>Add Reference<ept id="p3">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>References<ept id="p2">**</ept>, then click <bpt id="p3">**</bpt>Add Reference<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Select the check box at the left of <bpt id="p1">**</bpt>System.Windows.Forms<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new">Select the check box at the left of <bpt id="p1">**</bpt>System.Windows.Forms<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The console application will use the Windows Forms assembly to instantiate a browser control when it needs to enable the user to log in to the gateway and to Dropbox.</source>
          <target state="new">The console application will use the Windows Forms assembly to instantiate a browser control when it needs to enable the user to log in to the gateway and to Dropbox.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Add generated client code</source>
          <target state="new">Add generated client code</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The screenshots in this section show a ContactsList project and API app, but for this tutorial select the SimpleDropboxTest project and SimpleDropbox API app.</source>
          <target state="new">The screenshots in this section show a ContactsList project and API app, but for this tutorial select the SimpleDropboxTest project and SimpleDropbox API app.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Add code to call the API app</source>
          <target state="new">Add code to call the API app</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">*</bpt>Program.cs<ept id="p1">*</ept> and replace the code in it with the following code.</source>
          <target state="new">Open <bpt id="p1">*</bpt>Program.cs<ept id="p1">*</ept> and replace the code in it with the following code.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Replace {gateway url} with the actual URL of your gateway.</source>
          <target state="new">Replace {gateway url} with the actual URL of your gateway.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can get the gateway URL from the <bpt id="p1">**</bpt>gateway<ept id="p1">**</ept> blade in the portal:</source>
          <target state="new">You can get the gateway URL from the <bpt id="p1">**</bpt>gateway<ept id="p1">**</ept> blade in the portal:</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>: Make sure the gateway URL begins with <ph id="ph1">`https://`</ph>, not <ph id="ph2">`http://`</ph>.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>: Make sure the gateway URL begins with <ph id="ph1">`https://`</ph>, not <ph id="ph2">`http://`</ph>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If you copy http:// from the portal, you have to change it to https:// when you paste it in the code.</source>
          <target state="new">If you copy http:// from the portal, you have to change it to https:// when you paste it in the code.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Explanation of the code</source>
          <target state="new">Explanation of the code</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This console application is designed to use a minimum amount of code to illustrate the steps that a client app has to go through.</source>
          <target state="new">This console application is designed to use a minimum amount of code to illustrate the steps that a client app has to go through.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A production application would not typically be a console application and would implement error handling and logging.</source>
          <target state="new">A production application would not typically be a console application and would implement error handling and logging.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Here's an overview of what the code is doing:</source>
          <target state="new">Here's an overview of what the code is doing:</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Opens a browser to the gateway login URL for the configured identity provider, in this case Azure Active Directory.</source>
          <target state="new">Opens a browser to the gateway login URL for the configured identity provider, in this case Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Handles expected response URL after user logs in:  extract user ID and Zumo token, provide them to App Service client object.</source>
          <target state="new">Handles expected response URL after user logs in:  extract user ID and Zumo token, provide them to App Service client object.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Uses App Service client object to retrieve a gateway URL that will redirect to the Dropbox  link for login and consent.</source>
          <target state="new">Uses App Service client object to retrieve a gateway URL that will redirect to the Dropbox  link for login and consent.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Step 1 in the diagram.</source>
          <target state="new">Step 1 in the diagram.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Opens a browser to the gateway consent URL.</source>
          <target state="new">Opens a browser to the gateway consent URL.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Browser gets redirected to Dropbox login and consent link.</source>
          <target state="new">Browser gets redirected to Dropbox login and consent link.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Step 2 in the diagram.</source>
          <target state="new">Step 2 in the diagram.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Closes browser after user logs and gives consent at Dropbox.com.</source>
          <target state="new">Closes browser after user logs and gives consent at Dropbox.com.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Step 3 in the diagram.</source>
          <target state="new">Step 3 in the diagram.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Calls the API app.</source>
          <target state="new">Calls the API app.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Step 5 in the diagram.</source>
          <target state="new">Step 5 in the diagram.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>(Step 4 happens behind the scenes between Dropbox.com and the gateway, steps 6 and 7 are done from the API app, not the client.)</source>
          <target state="new">(Step 4 happens behind the scenes between Dropbox.com and the gateway, steps 6 and 7 are done from the API app, not the client.)</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Additional notes:</source>
          <target state="new">Additional notes:</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`STAThread`</ph> attribute on the <ph id="ph2">`Main`</ph> method is required by the web browser control and is not related to setting up for or calling the API app.</source>
          <target state="new">The <ph id="ph1">`STAThread`</ph> attribute on the <ph id="ph2">`Main`</ph> method is required by the web browser control and is not related to setting up for or calling the API app.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The gateway login URL shown ends in <ph id="ph1">`/aad`</ph> for Azure Active Directory.</source>
          <target state="new">The gateway login URL shown ends in <ph id="ph1">`/aad`</ph> for Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Here are the values to use for the other providers:</source>
          <target state="new">Here are the values to use for the other providers:</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>"microsoftaccount"</source>
          <target state="new">"microsoftaccount"</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>"facebook"</source>
          <target state="new">"facebook"</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>"twitter"</source>
          <target state="new">"twitter"</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>"google"</source>
          <target state="new">"google"</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The second parameter for the <ph id="ph1">`GetConsentLinkAsync()`</ph> method is the callback URL that the consent server redirects to after the user logs in to Dropbox and gives consent to access the user's account.</source>
          <target state="new">The second parameter for the <ph id="ph1">`GetConsentLinkAsync()`</ph> method is the callback URL that the consent server redirects to after the user logs in to Dropbox and gives consent to access the user's account.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For this parameter you would normally specify the next web page that the user should go to in the client application.</source>
          <target state="new">For this parameter you would normally specify the next web page that the user should go to in the client application.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Since this demo code is in a console app, there is no application page to go to, and the code specifies the gateway URL just as a convenient landing page.</source>
          <target state="new">Since this demo code is in a console app, there is no application page to go to, and the code specifies the gateway URL just as a convenient landing page.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The client application should verify that it gets redirected to this URL and that there is no error message.</source>
          <target state="new">The client application should verify that it gets redirected to this URL and that there is no error message.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If the login/consent process fails, the redirect URL may contain an error message in the querystring.</source>
          <target state="new">If the login/consent process fails, the redirect URL may contain an error message in the querystring.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Troubleshooting<ept id="p1">](#troubleshooting)</ept> section.</source>
          <target state="new">For more information, see the <bpt id="p1">[</bpt>Troubleshooting<ept id="p1">](#troubleshooting)</ept> section.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="new">Test</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Run the SimpleDropboxTest console application.</source>
          <target state="new">Run the SimpleDropboxTest console application.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>In the first logon page, sign in using your Azure Active Directory credentials (or credentials for another identity provider such as Google or Twitter if that's what you configured in the gateway).</source>
          <target state="new">In the first logon page, sign in using your Azure Active Directory credentials (or credentials for another identity provider such as Google or Twitter if that's what you configured in the gateway).</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In the Dropbox.com login page, sign in using your Dropbox credentials.</source>
          <target state="new">In the Dropbox.com login page, sign in using your Dropbox credentials.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In the Dropbox consent page, give the application permission to access your data.</source>
          <target state="new">In the Dropbox consent page, give the application permission to access your data.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The console app then calls the API app and it returns a list of the files in your Dropbox account.</source>
          <target state="new">The console app then calls the API app and it returns a list of the files in your Dropbox account.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="new">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This section contains the following topics:</source>
          <target state="new">This section contains the following topics:</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>HTTP Error 405 after gateway login</source>
          <target state="new">HTTP Error 405 after gateway login</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>HTTP Error 400 instead of Dropbox login page</source>
          <target state="new">HTTP Error 400 instead of Dropbox login page</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>HTTP Error 403 when calling the API app</source>
          <target state="new">HTTP Error 403 when calling the API app</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="405"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> HTTP Error 405 after gateway login</source>
          <target state="new"><ph id="ph1">&lt;a id="405"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> HTTP Error 405 after gateway login</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If you get HTTP Error 405 when the code calls GetConsentLinkAsync, verify that you used https://, not http:// for the gateway URL.</source>
          <target state="new">If you get HTTP Error 405 when the code calls GetConsentLinkAsync, verify that you used https://, not http:// for the gateway URL.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The 405 method not allowed error is received because the client attempts to make a non-SSL HTTP POST request, the gateway redirects to <bpt id="p1">*</bpt>https://<ept id="p1">*</ept>, and the redirect causes a GET request.</source>
          <target state="new">The 405 method not allowed error is received because the client attempts to make a non-SSL HTTP POST request, the gateway redirects to <bpt id="p1">*</bpt>https://<ept id="p1">*</ept>, and the redirect causes a GET request.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The URL for retrieving a consent link only accepts POST requests.</source>
          <target state="new">The URL for retrieving a consent link only accepts POST requests.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="400"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>HTTP Error 400 instead of Dropbox login page</source>
          <target state="new"><ph id="ph1">&lt;a id="400"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>HTTP Error 400 instead of Dropbox login page</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Make sure that you have the correct <bpt id="p1">**</bpt>client ID<ept id="p1">**</ept> in the API app's <bpt id="p2">**</bpt>Authentication<ept id="p2">**</ept> blade, and make sure there are no leading or trailing spaces.</source>
          <target state="new">Make sure that you have the correct <bpt id="p1">**</bpt>client ID<ept id="p1">**</ept> in the API app's <bpt id="p2">**</bpt>Authentication<ept id="p2">**</ept> blade, and make sure there are no leading or trailing spaces.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="403"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> HTTP Error 403 when calling the API app</source>
          <target state="new"><ph id="ph1">&lt;a id="403"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> HTTP Error 403 when calling the API app</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Make sure that the <bpt id="p1">**</bpt>Access Level<ept id="p1">**</ept> of the API app is set to <bpt id="p2">**</bpt>Public (authenticated)<ept id="p2">**</ept>, not <bpt id="p3">**</bpt>Internal<ept id="p3">**</ept>.</source>
          <target state="new">Make sure that the <bpt id="p1">**</bpt>Access Level<ept id="p1">**</ept> of the API app is set to <bpt id="p2">**</bpt>Public (authenticated)<ept id="p2">**</ept>, not <bpt id="p3">**</bpt>Internal<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Make sure that you have the correct <bpt id="p1">**</bpt>client secret<ept id="p1">**</ept> in the API app's <bpt id="p2">**</bpt>Authentication<ept id="p2">**</ept> blade, and make sure there are no leading or trailing spaces.</source>
          <target state="new">Make sure that you have the correct <bpt id="p1">**</bpt>client secret<ept id="p1">**</ept> in the API app's <bpt id="p2">**</bpt>Authentication<ept id="p2">**</ept> blade, and make sure there are no leading or trailing spaces.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The redirect URL after Dropbox login may look like this example:</source>
          <target state="new">The redirect URL after Dropbox login may look like this example:</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If you remove the %3d%3d from the end of the <ph id="ph1">`error`</ph> querystring value, this is a valid base64 encoded string.</source>
          <target state="new">If you remove the %3d%3d from the end of the <ph id="ph1">`error`</ph> querystring value, this is a valid base64 encoded string.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Decode the string to get the error message:</source>
          <target state="new">Decode the string to get the error message:</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>You've seen how to code and configure an API app that connects to a SaaS platform.</source>
          <target state="new">You've seen how to code and configure an API app that connects to a SaaS platform.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For links to other tutorials about how to handle authentication in API apps, see <bpt id="p1">[</bpt>Authentication for API apps and mobile apps - Next steps<ept id="p1">](../app-service/app-service-authentication-overview.md#next-steps)</ept>.</source>
          <target state="new">For links to other tutorials about how to handle authentication in API apps, see <bpt id="p1">[</bpt>Authentication for API apps and mobile apps - Next steps<ept id="p1">](../app-service/app-service-authentication-overview.md#next-steps)</ept>.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48da03b567d1639d590aa3eab9b1f1267abddd83</xliffext:olfilehash>
  </header>
</xliff>