<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Windows Phone Silverlight Reach SDK Integration</source>
          <target state="new">Windows Phone Silverlight Reach SDK Integration</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to Integrate Azure Mobile Engagement Reach with Windows Phone Silverlight Apps</source>
          <target state="new">How to Integrate Azure Mobile Engagement Reach with Windows Phone Silverlight Apps</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows Phone Silverlight Reach SDK Integration</source>
          <target state="new">Windows Phone Silverlight Reach SDK Integration</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You must follow the integration procedure described in the <bpt id="p1">[</bpt>Windows Phone Silverlight Engagement SDK Integration<ept id="p1">](mobile-engagement-windows-phone-integrate-engagement.md)</ept> before following this guide.</source>
          <target state="new">You must follow the integration procedure described in the <bpt id="p1">[</bpt>Windows Phone Silverlight Engagement SDK Integration<ept id="p1">](mobile-engagement-windows-phone-integrate-engagement.md)</ept> before following this guide.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Embed the Engagement Reach SDK into your Windows Phone Silverlight project</source>
          <target state="new">Embed the Engagement Reach SDK into your Windows Phone Silverlight project</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You do not have anything to add.</source>
          <target state="new">You do not have anything to add.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`EngagementReach`</ph> references and resources are already in your project.</source>
          <target state="new"><ph id="ph1">`EngagementReach`</ph> references and resources are already in your project.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph>  You can customize images located in the <ph id="ph2">`Resources`</ph> folder of your project, especially the brand icon (that default to the Engagement icon).</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph>  You can customize images located in the <ph id="ph2">`Resources`</ph> folder of your project, especially the brand icon (that default to the Engagement icon).</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add the capabilities</source>
          <target state="new">Add the capabilities</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Engagement Reach SDK needs some additional capabilities.</source>
          <target state="new">The Engagement Reach SDK needs some additional capabilities.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Open your <ph id="ph1">`WMAppManifest.xml`</ph> file and be sure that the following capabilities are declared:</source>
          <target state="new">Open your <ph id="ph1">`WMAppManifest.xml`</ph> file and be sure that the following capabilities are declared:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The first one is used by the MPNS service to allow the display of toast notification.</source>
          <target state="new">The first one is used by the MPNS service to allow the display of toast notification.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The second one is used to embed a browser task into the SDK.</source>
          <target state="new">The second one is used to embed a browser task into the SDK.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Edit the <ph id="ph1">`WMAppManifest.xml`</ph> file and add inside the <ph id="ph2">`&lt;Capabilities /&gt;`</ph> tag :</source>
          <target state="new">Edit the <ph id="ph1">`WMAppManifest.xml`</ph> file and add inside the <ph id="ph2">`&lt;Capabilities /&gt;`</ph> tag :</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Enable the Microsoft Push Notification Service</source>
          <target state="new">Enable the Microsoft Push Notification Service</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In order to use the <bpt id="p1">**</bpt>Microsoft Push Notification Service<ept id="p1">**</ept> (referred as MPNS) your <ph id="ph1">`WMAppManifest.xml`</ph> file must have an <ph id="ph2">`&lt;App /&gt;`</ph> tag with a <ph id="ph3">`Publisher`</ph> attribute set to the name of your project.</source>
          <target state="new">In order to use the <bpt id="p1">**</bpt>Microsoft Push Notification Service<ept id="p1">**</ept> (referred as MPNS) your <ph id="ph1">`WMAppManifest.xml`</ph> file must have an <ph id="ph2">`&lt;App /&gt;`</ph> tag with a <ph id="ph3">`Publisher`</ph> attribute set to the name of your project.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initialize the Engagement Reach SDK</source>
          <target state="new">Initialize the Engagement Reach SDK</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Engagement configuration</source>
          <target state="new">Engagement configuration</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Engagement configuration is centralized in the <ph id="ph1">`Resources\EngagementConfiguration.xml`</ph> file of your project.</source>
          <target state="new">The Engagement configuration is centralized in the <ph id="ph1">`Resources\EngagementConfiguration.xml`</ph> file of your project.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Edit this file to specify reach configuration :</source>
          <target state="new">Edit this file to specify reach configuration :</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Optional<ept id="p1">*</ept>, indicate whether the native push (MPNS) is activated or not between <ph id="ph1">`&lt;enableNativePush&gt;`</ph> and <ph id="ph2">`&lt;/enableNativePush&gt;`</ph> tags, (<ph id="ph3">`true`</ph> by default).</source>
          <target state="new"><bpt id="p1">*</bpt>Optional<ept id="p1">*</ept>, indicate whether the native push (MPNS) is activated or not between <ph id="ph1">`&lt;enableNativePush&gt;`</ph> and <ph id="ph2">`&lt;/enableNativePush&gt;`</ph> tags, (<ph id="ph3">`true`</ph> by default).</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Optional<ept id="p1">*</ept>, indicate the name of the push channel between <ph id="ph1">`&lt;channelName&gt;`</ph> and <ph id="ph2">`&lt;/channelName&gt;`</ph> tags, provide the same that your application may currently use or leave it empty.</source>
          <target state="new"><bpt id="p1">*</bpt>Optional<ept id="p1">*</ept>, indicate the name of the push channel between <ph id="ph1">`&lt;channelName&gt;`</ph> and <ph id="ph2">`&lt;/channelName&gt;`</ph> tags, provide the same that your application may currently use or leave it empty.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you want to specify it at runtime instead, you can call the following method before the Engagement agent initialization :</source>
          <target state="new">If you want to specify it at runtime instead, you can call the following method before the Engagement agent initialization :</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> You can specify the name of the MPNS push channel of your application.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> You can specify the name of the MPNS push channel of your application.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>By default, Engagement creates a name based on the appId.</source>
          <target state="new">By default, Engagement creates a name based on the appId.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You have no need to specify the name yourself, except if you plan to use the push channel outside of Engagement.</source>
          <target state="new">You have no need to specify the name yourself, except if you plan to use the push channel outside of Engagement.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Engagement initialization</source>
          <target state="new">Engagement initialization</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Modify the <ph id="ph1">`App.xaml.cs`</ph>:</source>
          <target state="new">Modify the <ph id="ph1">`App.xaml.cs`</ph>:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Add to your <ph id="ph1">`using`</ph> statements :</source>
          <target state="new">Add to your <ph id="ph1">`using`</ph> statements :</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Insert <ph id="ph1">`EngagementReach.Instance.Init`</ph> just after <ph id="ph2">`EngagementAgent.Instance.Init`</ph> in <ph id="ph3">`Application_Launching`</ph> :</source>
          <target state="new">Insert <ph id="ph1">`EngagementReach.Instance.Init`</ph> just after <ph id="ph2">`EngagementAgent.Instance.Init`</ph> in <ph id="ph3">`Application_Launching`</ph> :</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Insert <ph id="ph1">`EngagementReach.Instance.OnActivated`</ph> in the <ph id="ph2">`Application_Activated`</ph> method :</source>
          <target state="new">Insert <ph id="ph1">`EngagementReach.Instance.OnActivated`</ph> in the <ph id="ph2">`Application_Activated`</ph> method :</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> The <ph id="ph2">`EngagementReach.Instance.Init`</ph> runs in a dedicated thread.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> The <ph id="ph2">`EngagementReach.Instance.Init`</ph> runs in a dedicated thread.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You do not have to do it yourself.</source>
          <target state="new">You do not have to do it yourself.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>App store submission considerations</source>
          <target state="new">App store submission considerations</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Microsoft imposes some rules when using the push notifications:</source>
          <target state="new">Microsoft imposes some rules when using the push notifications:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>From the Microsoft <bpt id="p1">[</bpt><ept id="p1">Application Policies]</ept> documentation, section 2.9:</source>
          <target state="new">From the Microsoft <bpt id="p1">[</bpt><ept id="p1">Application Policies]</ept> documentation, section 2.9:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You must ask the user to accept to receive push notifications.</source>
          <target state="new">You must ask the user to accept to receive push notifications.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Then, in your settings, add a way to disable the push notifications.</source>
          <target state="new">Then, in your settings, add a way to disable the push notifications.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The EngagementReach object provides two methods to manage the opt-in/opt-out, <ph id="ph1">`EnableNativePush()`</ph> and <ph id="ph2">`DisableNativePush()`</ph>.</source>
          <target state="new">The EngagementReach object provides two methods to manage the opt-in/opt-out, <ph id="ph1">`EnableNativePush()`</ph> and <ph id="ph2">`DisableNativePush()`</ph>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You could, for example, create an option in the settings with a toggle to disable or enable MPNS.</source>
          <target state="new">You could, for example, create an option in the settings with a toggle to disable or enable MPNS.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can also decide to deactivate MPNS through the Engagement configuration\&lt;windows-phone-sdk-reach-configuration\&gt;.</source>
          <target state="new">You can also decide to deactivate MPNS through the Engagement configuration\&lt;windows-phone-sdk-reach-configuration\&gt;.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>2.9.1) The application must first describe the notifications to be provided and <bpt id="p1">**</bpt>obtain the user’s express permission (opt-in)<ept id="p1">**</ept>, and <bpt id="p2">**</bpt>must provide a mechanism through which the user can opt out of receiving push notifications<ept id="p2">**</ept>.</source>
          <target state="new">2.9.1) The application must first describe the notifications to be provided and <bpt id="p1">**</bpt>obtain the user’s express permission (opt-in)<ept id="p1">**</ept>, and <bpt id="p2">**</bpt>must provide a mechanism through which the user can opt out of receiving push notifications<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>All notifications provided using the Microsoft Push Notification Service must be consistent with the description provided to the user and must comply with all applicable <bpt id="p1">[</bpt>Application Policies<ept id="p1">] [Content Policies]</ept> and <bpt id="p2">[</bpt><ept id="p2">Additional Requirements for Specific Application Types]</ept>.</source>
          <target state="new">All notifications provided using the Microsoft Push Notification Service must be consistent with the description provided to the user and must comply with all applicable <bpt id="p1">[</bpt>Application Policies<ept id="p1">] [Content Policies]</ept> and <bpt id="p2">[</bpt><ept id="p2">Additional Requirements for Specific Application Types]</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You should not use too many push notifications.</source>
          <target state="new">You should not use too many push notifications.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Engagement will handle notifications for you.</source>
          <target state="new">Engagement will handle notifications for you.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>2.9.2) The application and its use of the Microsoft Push Notification Service must not excessively use network capacity or bandwidth of the Microsoft Push Notification Service, or otherwise unduly burden a Windows Phone or other Microsoft device or service with excessive push notifications, as determined by Microsoft in its reasonable discretion, and must not harm or interfere with any Microsoft networks or servers or any third party servers or networks connected to the Microsoft Push Notification Service.</source>
          <target state="new">2.9.2) The application and its use of the Microsoft Push Notification Service must not excessively use network capacity or bandwidth of the Microsoft Push Notification Service, or otherwise unduly burden a Windows Phone or other Microsoft device or service with excessive push notifications, as determined by Microsoft in its reasonable discretion, and must not harm or interfere with any Microsoft networks or servers or any third party servers or networks connected to the Microsoft Push Notification Service.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Do not rely on MPNS to send criticals informations.</source>
          <target state="new">Do not rely on MPNS to send criticals informations.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Engagement uses MPNS, so this rule also applies for the campaigns created inside the Engagement front-end.</source>
          <target state="new">Engagement uses MPNS, so this rule also applies for the campaigns created inside the Engagement front-end.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>2.9.3) The Microsoft Push Notification Service may not be used to send notifications that are mission critical or otherwise could affect matters of life or death, including without limitation critical notifications related to a medical device or condition.</source>
          <target state="new">2.9.3) The Microsoft Push Notification Service may not be used to send notifications that are mission critical or otherwise could affect matters of life or death, including without limitation critical notifications related to a medical device or condition.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>MICROSOFT EXPRESSLY DISCLAIMS ANY WARRANTIES THAT THE USE OF THE MICROSOFT PUSH NOTIFICATION SERVICE OR DELIVERY OF MICROSOFT PUSH NOTIFICATION SERVICE NOTIFICATIONS WILL BE UNINTERRUPTED, ERROR FREE, OR OTHERWISE GUARANTEED TO OCCUR ON A REAL-TIME BASIS.</source>
          <target state="new">MICROSOFT EXPRESSLY DISCLAIMS ANY WARRANTIES THAT THE USE OF THE MICROSOFT PUSH NOTIFICATION SERVICE OR DELIVERY OF MICROSOFT PUSH NOTIFICATION SERVICE NOTIFICATIONS WILL BE UNINTERRUPTED, ERROR FREE, OR OTHERWISE GUARANTEED TO OCCUR ON A REAL-TIME BASIS.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>We cannot guarantee that your application will pass the validation process if you do not respect these recommendations.</source>
          <target state="new">We cannot guarantee that your application will pass the validation process if you do not respect these recommendations.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Handle datapush (optional)</source>
          <target state="new">Handle datapush (optional)</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you want your application to be able to receive Reach data pushes, you have to implement two events of the EngagementReach class:</source>
          <target state="new">If you want your application to be able to receive Reach data pushes, you have to implement two events of the EngagementReach class:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can see that the callback of each method returns a boolean.</source>
          <target state="new">You can see that the callback of each method returns a boolean.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Engagement sends a feedback to its back-end after dispatching the data push.</source>
          <target state="new">Engagement sends a feedback to its back-end after dispatching the data push.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the callback returns false, the <ph id="ph1">`exit`</ph> feedback will be send.</source>
          <target state="new">If the callback returns false, the <ph id="ph1">`exit`</ph> feedback will be send.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Otherwise, it will be <ph id="ph1">`action`</ph>.</source>
          <target state="new">Otherwise, it will be <ph id="ph1">`action`</ph>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If no callback is set for the events, the <ph id="ph1">`drop`</ph> feedback will be returned to Engagement.</source>
          <target state="new">If no callback is set for the events, the <ph id="ph1">`drop`</ph> feedback will be returned to Engagement.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.WARNING]</ph> Engagement is not able to receive multiples feedbacks for a data push.</source>
          <target state="new"><ph id="ph1">[AZURE.WARNING]</ph> Engagement is not able to receive multiples feedbacks for a data push.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you plan to set several handlers on an event, be aware that the feedback will correspond to the last one sent.</source>
          <target state="new">If you plan to set several handlers on an event, be aware that the feedback will correspond to the last one sent.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In this case, we recommend to always returns the same value to avoid having confusing feedback on the front-end.</source>
          <target state="new">In this case, we recommend to always returns the same value to avoid having confusing feedback on the front-end.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Customize UI (optional)</source>
          <target state="new">Customize UI (optional)</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>First step</source>
          <target state="new">First step</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>We allow you to customize the reach UI.</source>
          <target state="new">We allow you to customize the reach UI.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To do so, you have to create a subclass of the <ph id="ph1">`EngagementReachHandler`</ph> class.</source>
          <target state="new">To do so, you have to create a subclass of the <ph id="ph1">`EngagementReachHandler`</ph> class.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Sample Code :</source>
          <target state="new">Sample Code :</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Then, set the content of the <ph id="ph1">`EngagementReach.Instance.Handler`</ph> field with your custom object in your <ph id="ph2">`App.xaml.cs`</ph> class within the <ph id="ph3">`Application_Launching`</ph> method.</source>
          <target state="new">Then, set the content of the <ph id="ph1">`EngagementReach.Instance.Handler`</ph> field with your custom object in your <ph id="ph2">`App.xaml.cs`</ph> class within the <ph id="ph3">`Application_Launching`</ph> method.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Sample Code :</source>
          <target state="new">Sample Code :</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> By default, Engagement uses its own implementation of <ph id="ph2">`EngagementReachHandler`</ph>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> By default, Engagement uses its own implementation of <ph id="ph2">`EngagementReachHandler`</ph>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You don't have to create your own, and if you do so, you don't have to override every method.</source>
          <target state="new">You don't have to create your own, and if you do so, you don't have to override every method.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default behavior is to select the Engagement base object.</source>
          <target state="new">The default behavior is to select the Engagement base object.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="new">Layouts</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>By default, Reach will use the embedded resources of the DLL to display the notifications and pages.</source>
          <target state="new">By default, Reach will use the embedded resources of the DLL to display the notifications and pages.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>However, you can decide to use your own resources to reflect your brand in these components.</source>
          <target state="new">However, you can decide to use your own resources to reflect your brand in these components.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can override <ph id="ph1">`EngagementReachHandler`</ph> methods in your subclass to tell Engagement to use your layouts :</source>
          <target state="new">You can override <ph id="ph1">`EngagementReachHandler`</ph> methods in your subclass to tell Engagement to use your layouts :</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Sample Code :</source>
          <target state="new">Sample Code :</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> The <ph id="ph2">`CreateNotification`</ph> method can return null.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> The <ph id="ph2">`CreateNotification`</ph> method can return null.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The notification won't be displayed and the reach campaign will be dropped.</source>
          <target state="new">The notification won't be displayed and the reach campaign will be dropped.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To simplify your layout implementation, we also provide our own xaml which can serve as a basis for your code.</source>
          <target state="new">To simplify your layout implementation, we also provide our own xaml which can serve as a basis for your code.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>They are located in the Engagement SDK archive (/src/reach/).</source>
          <target state="new">They are located in the Engagement SDK archive (/src/reach/).</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.WARNING]</ph> The sources that we provide are the exact same ones that we use.</source>
          <target state="new"><ph id="ph1">[AZURE.WARNING]</ph> The sources that we provide are the exact same ones that we use.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>So if you want to modify them directly, don't forget to change the namespace and the name.</source>
          <target state="new">So if you want to modify them directly, don't forget to change the namespace and the name.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Notification position</source>
          <target state="new">Notification position</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>By default, an in-app notification is displayed at the bottom left side of the application.</source>
          <target state="new">By default, an in-app notification is displayed at the bottom left side of the application.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can change this behavior by overriding the <ph id="ph1">`GetNotificationPosition`</ph> method of the <ph id="ph2">`EngagementReachHandler`</ph> object.</source>
          <target state="new">You can change this behavior by overriding the <ph id="ph1">`GetNotificationPosition`</ph> method of the <ph id="ph2">`EngagementReachHandler`</ph> object.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Currently, you can choose between the <ph id="ph1">`BOTTOM`</ph> (default) and <ph id="ph2">`TOP`</ph> positions.</source>
          <target state="new">Currently, you can choose between the <ph id="ph1">`BOTTOM`</ph> (default) and <ph id="ph2">`TOP`</ph> positions.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Launch message</source>
          <target state="new">Launch message</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When a user clicks on a system notification (a toast), Engagement launches the app, load the content of the push messages, and display the page for the corresponding campaign.</source>
          <target state="new">When a user clicks on a system notification (a toast), Engagement launches the app, load the content of the push messages, and display the page for the corresponding campaign.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>There is a delay between the launch of the application and the display of the page (depending on the speed of your network).</source>
          <target state="new">There is a delay between the launch of the application and the display of the page (depending on the speed of your network).</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To indicate to the user that something is loading, you should provide a visual information, like a progress bar or a progress indicator.</source>
          <target state="new">To indicate to the user that something is loading, you should provide a visual information, like a progress bar or a progress indicator.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Engagement cannot handle that itself, but provides a few handlers for you.</source>
          <target state="new">Engagement cannot handle that itself, but provides a few handlers for you.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To implement the callback, do:</source>
          <target state="new">To implement the callback, do:</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You can set the callback in your <ph id="ph1">`Application_Launching`</ph> method of your <ph id="ph2">`App.xaml.cs`</ph> file, preferably before the <ph id="ph3">`EngagementReach.Instance.Init()`</ph> call.</source>
          <target state="new">You can set the callback in your <ph id="ph1">`Application_Launching`</ph> method of your <ph id="ph2">`App.xaml.cs`</ph> file, preferably before the <ph id="ph3">`EngagementReach.Instance.Init()`</ph> call.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> Each handler is called by the UI Thread.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> Each handler is called by the UI Thread.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You do not have to worry when using a MessageBox or something UI-related.</source>
          <target state="new">You do not have to worry when using a MessageBox or something UI-related.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbb5f53effbe3d26f3e9c408d715f86f7222b307</xliffext:olfilehash>
  </header>
</xliff>