<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Consume a Machine Learning web service | Microsoft Azure</source>
          <target state="new">Consume a Machine Learning web service | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Once a machine learning service is published, the RESTFul web service that is made available can be consumed either as request-response service or as a batch execution service.</source>
          <target state="new">Once a machine learning service is published, the RESTFul web service that is made available can be consumed either as request-response service or as a batch execution service.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to consume an Azure Machine Learning web service that has been published from a Machine Learning experiment</source>
          <target state="new">How to consume an Azure Machine Learning web service that has been published from a Machine Learning experiment</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="new">Introduction</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When published as a web service, Azure Machine Learning experiments provide a REST API that can be consumed by a wide range of devices and platforms.</source>
          <target state="new">When published as a web service, Azure Machine Learning experiments provide a REST API that can be consumed by a wide range of devices and platforms.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This is because the simple REST API accepts and responds with JSON formatted messages.</source>
          <target state="new">This is because the simple REST API accepts and responds with JSON formatted messages.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The Azure Machine Learning portal provides code that can be used to call the web service in R, C#, and Python.</source>
          <target state="new">The Azure Machine Learning portal provides code that can be used to call the web service in R, C#, and Python.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>But these services can be called with any programming language and from any device that satisfies three criteria:</source>
          <target state="new">But these services can be called with any programming language and from any device that satisfies three criteria:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Has a network connection</source>
          <target state="new">Has a network connection</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Has SSL capabilities to perform HTTPS requests</source>
          <target state="new">Has SSL capabilities to perform HTTPS requests</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Has the ability to parse JSON (by hand or support libraries)</source>
          <target state="new">Has the ability to parse JSON (by hand or support libraries)</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This means the services can be consumed from web applications, mobile applications, custom desktop applications and even from within Excel.</source>
          <target state="new">This means the services can be consumed from web applications, mobile applications, custom desktop applications and even from within Excel.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An Azure Machine Learning web service can be consumed in two different ways, either as a request-response service or as a batch execution service.</source>
          <target state="new">An Azure Machine Learning web service can be consumed in two different ways, either as a request-response service or as a batch execution service.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In each scenario the functionality is provided through the RESTFul web service that is made available for consumption once the experiment has been published.</source>
          <target state="new">In each scenario the functionality is provided through the RESTFul web service that is made available for consumption once the experiment has been published.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Deploying a Machine Learning web service in Azure with an Azure web service end-point, where the service is automatically scaled based on usage, you can avoid upfront and ongoing costs for hardware resources.</source>
          <target state="new">Deploying a Machine Learning web service in Azure with an Azure web service end-point, where the service is automatically scaled based on usage, you can avoid upfront and ongoing costs for hardware resources.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For information about how to create and publish an Azure Machine Learning web service, see <bpt id="p1">[</bpt>Publish an Azure Machine Learning web service<ept id="p1">][publish]</ept>.</source>
          <target state="new">For information about how to create and publish an Azure Machine Learning web service, see <bpt id="p1">[</bpt>Publish an Azure Machine Learning web service<ept id="p1">][publish]</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For a step-by-step walkthrough of creating a Machine Learning experiment and publishing it, see <bpt id="p1">[</bpt>Develop a predictive solution by using Azure Machine Learning<ept id="p1">][walkthrough]</ept>.</source>
          <target state="new">For a step-by-step walkthrough of creating a Machine Learning experiment and publishing it, see <bpt id="p1">[</bpt>Develop a predictive solution by using Azure Machine Learning<ept id="p1">][walkthrough]</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Request-Response Service (RRS)</source>
          <target state="new">Request-Response Service (RRS)</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A Request-Response Service (RRS) is a low-latency, highly scalable web service used to provide an interface to the stateless models that have been created and published from an Azure Machine Learning Studio experiment.</source>
          <target state="new">A Request-Response Service (RRS) is a low-latency, highly scalable web service used to provide an interface to the stateless models that have been created and published from an Azure Machine Learning Studio experiment.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>RRS accepts a single row of input parameters and generates a single row as output.</source>
          <target state="new">RRS accepts a single row of input parameters and generates a single row as output.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The output row can contain multiple columns.</source>
          <target state="new">The output row can contain multiple columns.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An example for RRS is validating the authenticity of an application.</source>
          <target state="new">An example for RRS is validating the authenticity of an application.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Hundreds to millions of installations of an application can be expected in this case.</source>
          <target state="new">Hundreds to millions of installations of an application can be expected in this case.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When the application starts up, it makes a call to the RRS service with the relevant input.</source>
          <target state="new">When the application starts up, it makes a call to the RRS service with the relevant input.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The application then receives a validation response from the service that either allows or blocks the application from performing.</source>
          <target state="new">The application then receives a validation response from the service that either allows or blocks the application from performing.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Batch Execution Service (BES)</source>
          <target state="new">Batch Execution Service (BES)</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A Batch Execution Service (BES) is a service that handles high volume, asynchronous, scoring of a batch of data records.</source>
          <target state="new">A Batch Execution Service (BES) is a service that handles high volume, asynchronous, scoring of a batch of data records.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The input for the BES contains a batch of records from a variety of sources, such as blobs, tables in Azure, SQL Azure, HDInsight (results of a Hive Query, for example), and HTTP sources.</source>
          <target state="new">The input for the BES contains a batch of records from a variety of sources, such as blobs, tables in Azure, SQL Azure, HDInsight (results of a Hive Query, for example), and HTTP sources.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The output for the BES contains the results of the scoring.</source>
          <target state="new">The output for the BES contains the results of the scoring.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Results are output to a file in Azure blob storage and data from the storage endpoint is returned in the response.</source>
          <target state="new">Results are output to a file in Azure blob storage and data from the storage endpoint is returned in the response.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A BES would be useful when responses are not needed immediately, such as for regularly scheduled scoring for individuals or internet of things (IOT) devices.</source>
          <target state="new">A BES would be useful when responses are not needed immediately, such as for regularly scheduled scoring for individuals or internet of things (IOT) devices.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="new">Examples</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To show how both RRS and BES work, we use an example Azure Web Service.</source>
          <target state="new">To show how both RRS and BES work, we use an example Azure Web Service.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This service would be used in an IOT (Internet Of Things) scenario.</source>
          <target state="new">This service would be used in an IOT (Internet Of Things) scenario.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To keep it simple, our device only sends up one value, <ph id="ph1">`cog_speed`</ph>, and gets a single answer back.</source>
          <target state="new">To keep it simple, our device only sends up one value, <ph id="ph1">`cog_speed`</ph>, and gets a single answer back.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>There are four pieces of information that are needed to call either the RRS or BES service.</source>
          <target state="new">There are four pieces of information that are needed to call either the RRS or BES service.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This information is readily available from the service pages in <bpt id="p1">[</bpt>Azure Machine Learning service pages<ept id="p1">](https://studio.azureml.net)</ept> once the experiment has been published.</source>
          <target state="new">This information is readily available from the service pages in <bpt id="p1">[</bpt>Azure Machine Learning service pages<ept id="p1">](https://studio.azureml.net)</ept> once the experiment has been published.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Click on the WEB SERVICES link at the left of the screen and you will see the published services.</source>
          <target state="new">Click on the WEB SERVICES link at the left of the screen and you will see the published services.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To find information about a specific service, there are API help page links for both RRS and BES.</source>
          <target state="new">To find information about a specific service, there are API help page links for both RRS and BES.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>service API Key<ept id="p1">**</ept>, available on the services main page</source>
          <target state="new">The <bpt id="p1">**</bpt>service API Key<ept id="p1">**</ept>, available on the services main page</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>service URI<ept id="p1">**</ept>, available on the API help page for the chosen service</source>
          <target state="new">The <bpt id="p1">**</bpt>service URI<ept id="p1">**</ept>, available on the API help page for the chosen service</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The expected <bpt id="p1">**</bpt>API request body<ept id="p1">**</ept>, available on the API help page for the chosen service</source>
          <target state="new">The expected <bpt id="p1">**</bpt>API request body<ept id="p1">**</ept>, available on the API help page for the chosen service</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The expected <bpt id="p1">**</bpt>API response body<ept id="p1">**</ept>, available on the API help page for the chosen service</source>
          <target state="new">The expected <bpt id="p1">**</bpt>API response body<ept id="p1">**</ept>, available on the API help page for the chosen service</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In the two examples below, the C# language is used to illustrate the code needed and the targeted platform is a Windows 8 desktop.</source>
          <target state="new">In the two examples below, the C# language is used to illustrate the code needed and the targeted platform is a Windows 8 desktop.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>RRS Example</source>
          <target state="new">RRS Example</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>On the API help page, aside from the URI, you will input and output definitions and code samples.</source>
          <target state="new">On the API help page, aside from the URI, you will input and output definitions and code samples.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The API input is called out, for this service specifically, and is the payload of the API call.</source>
          <target state="new">The API input is called out, for this service specifically, and is the payload of the API call.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Sample Request</source>
          <target state="new">Sample Request</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Similarly, the API response is also called out, again for this service specifically.</source>
          <target state="new">Similarly, the API response is also called out, again for this service specifically.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Sample Response</source>
          <target state="new">Sample Response</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Towards the bottom of the page you will find the code examples.</source>
          <target state="new">Towards the bottom of the page you will find the code examples.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Below is the code sample for the C# implementation</source>
          <target state="new">Below is the code sample for the C# implementation</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Sample Code</source>
          <target state="new">Sample Code</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>BES Example</source>
          <target state="new">BES Example</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>On the API help page, in addition to the URI, you will find information about several calls that are available.</source>
          <target state="new">On the API help page, in addition to the URI, you will find information about several calls that are available.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Unlike the RRS service, the BES service is asynchronous.</source>
          <target state="new">Unlike the RRS service, the BES service is asynchronous.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This means that the BES API is simply queuing up a job to be executed, and the caller polls the job's status to see when it has completed.</source>
          <target state="new">This means that the BES API is simply queuing up a job to be executed, and the caller polls the job's status to see when it has completed.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Here are the operations currently supported for batch jobs:</source>
          <target state="new">Here are the operations currently supported for batch jobs:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Create (submit) a batch job</source>
          <target state="new">Create (submit) a batch job</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Start this batch job</source>
          <target state="new">Start this batch job</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Get the status or result of the batch job</source>
          <target state="new">Get the status or result of the batch job</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Cancel a running batch job</source>
          <target state="new">Cancel a running batch job</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>1. Create a Batch Execution Job</source>
          <target state="new">1. Create a Batch Execution Job</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When creating a batch job for your Azure Machine Learning service endpoint, one can specify several parameters that will define this batch execution:</source>
          <target state="new">When creating a batch job for your Azure Machine Learning service endpoint, one can specify several parameters that will define this batch execution:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Input<ept id="p1">**</ept>: represents a blob reference to where the batch job's input is stored.</source>
          <target state="new"><bpt id="p1">**</bpt>Input<ept id="p1">**</ept>: represents a blob reference to where the batch job's input is stored.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GlobalParameters<ept id="p1">**</ept>: represents the set of global parameters one can define for their experiment.</source>
          <target state="new"><bpt id="p1">**</bpt>GlobalParameters<ept id="p1">**</ept>: represents the set of global parameters one can define for their experiment.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An Azure Machine Learning experiment can have both required and optional parameters that customize the service's execution, and the caller is expected to provide all required parameters, if applicable.</source>
          <target state="new">An Azure Machine Learning experiment can have both required and optional parameters that customize the service's execution, and the caller is expected to provide all required parameters, if applicable.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>These parameters are specified as a collection of key-value pairs.</source>
          <target state="new">These parameters are specified as a collection of key-value pairs.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Outputs<ept id="p1">**</ept>: if the service has defined one or more outputs, we allow the caller to redirect any of them to an Azure blob location of their choice.</source>
          <target state="new"><bpt id="p1">**</bpt>Outputs<ept id="p1">**</ept>: if the service has defined one or more outputs, we allow the caller to redirect any of them to an Azure blob location of their choice.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This will allow you to save the service's output(s) in a preferred location and under a predictable name, as otherwise the output blob name is randomly generated.</source>
          <target state="new">This will allow you to save the service's output(s) in a preferred location and under a predictable name, as otherwise the output blob name is randomly generated.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NOTE<ept id="p1">**</ept> that the service expects the output content, based on its type, to be saved as supported formats:</source>
          <target state="new"><bpt id="p1">**</bpt>NOTE<ept id="p1">**</ept> that the service expects the output content, based on its type, to be saved as supported formats:</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>data set outputs: can save as <bpt id="p1">**</bpt>.csv, .tsv, .arff<ept id="p1">**</ept></source>
          <target state="new">data set outputs: can save as <bpt id="p1">**</bpt>.csv, .tsv, .arff<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>trained model outputs: can save as <bpt id="p1">**</bpt>.ilearner<ept id="p1">**</ept></source>
          <target state="new">trained model outputs: can save as <bpt id="p1">**</bpt>.ilearner<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Output location overrides are specified as a collection of <bpt id="p1">*</bpt>&lt;output name, blob reference&gt;<ept id="p1">*</ept> pairs, where the <bpt id="p2">*</bpt>output name<ept id="p2">*</ept> is the user defined name for a specific output node (also shown on the service's API help page), and <bpt id="p3">*</bpt>blob reference<ept id="p3">*</ept> is a reference to an Azure blob location where the output is to be redirected to.</source>
          <target state="new">Output location overrides are specified as a collection of <bpt id="p1">*</bpt>&lt;output name, blob reference&gt;<ept id="p1">*</ept> pairs, where the <bpt id="p2">*</bpt>output name<ept id="p2">*</ept> is the user defined name for a specific output node (also shown on the service's API help page), and <bpt id="p3">*</bpt>blob reference<ept id="p3">*</ept> is a reference to an Azure blob location where the output is to be redirected to.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>All these job creation parameters can be optional depending on the nature of your service.</source>
          <target state="new">All these job creation parameters can be optional depending on the nature of your service.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For example, services with no input node defined, do not require passing in an <bpt id="p1">*</bpt>Input<ept id="p1">*</ept> parameter, and the output location override feature is completely optional, as outputs will otherwise be stored in the default storage account that was set up for your Azure Machine Learning workspace.</source>
          <target state="new">For example, services with no input node defined, do not require passing in an <bpt id="p1">*</bpt>Input<ept id="p1">*</ept> parameter, and the output location override feature is completely optional, as outputs will otherwise be stored in the default storage account that was set up for your Azure Machine Learning workspace.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Below, we show a sample request payload, as passed to the REST API, for a service where only the input information is passed in:</source>
          <target state="new">Below, we show a sample request payload, as passed to the REST API, for a service where only the input information is passed in:</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Sample Request</source>
          <target state="new">Sample Request</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The response to the batch job creation API is the unique job id that was associated to your job.</source>
          <target state="new">The response to the batch job creation API is the unique job id that was associated to your job.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This id is very important because it provides the only means for you to reference this job in the system for other operations.</source>
          <target state="new">This id is very important because it provides the only means for you to reference this job in the system for other operations.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Sample Response</source>
          <target state="new">Sample Response</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>2. Start a Batch Execution Job</source>
          <target state="new">2. Start a Batch Execution Job</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Creating a batch job only registers it within the system, and places it in a <bpt id="p1">*</bpt>Not started<ept id="p1">*</ept> state.</source>
          <target state="new">Creating a batch job only registers it within the system, and places it in a <bpt id="p1">*</bpt>Not started<ept id="p1">*</ept> state.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To actually schedule the job for execution, you will have to call the <bpt id="p1">**</bpt>start<ept id="p1">**</ept> API described on the service endpoint's API help page and provide the job id obtained when the job was created.</source>
          <target state="new">To actually schedule the job for execution, you will have to call the <bpt id="p1">**</bpt>start<ept id="p1">**</ept> API described on the service endpoint's API help page and provide the job id obtained when the job was created.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>3. Get the Status of a Batch Execution Job</source>
          <target state="new">3. Get the Status of a Batch Execution Job</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can poll the status of your asynchronous batch job at any time by passing the job's id to the GetJobStatus API.</source>
          <target state="new">You can poll the status of your asynchronous batch job at any time by passing the job's id to the GetJobStatus API.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The API response will contain an indicator of the job's current state, as well as the actual results of the batch job if this has completed successfully.</source>
          <target state="new">The API response will contain an indicator of the job's current state, as well as the actual results of the batch job if this has completed successfully.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In the case of an error, more information about the actual reasons behind the failure are returned in the <bpt id="p1">*</bpt>Details<ept id="p1">*</ept> property.</source>
          <target state="new">In the case of an error, more information about the actual reasons behind the failure are returned in the <bpt id="p1">*</bpt>Details<ept id="p1">*</ept> property.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Response Payload</source>
          <target state="new">Response Payload</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>StatusCode<ept id="p1">*</ept> can be one of the following:</source>
          <target state="new"><bpt id="p1">*</bpt>StatusCode<ept id="p1">*</ept> can be one of the following:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Not started</source>
          <target state="new">Not started</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Running</source>
          <target state="new">Running</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Failed</source>
          <target state="new">Failed</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Cancelled</source>
          <target state="new">Cancelled</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Finished</source>
          <target state="new">Finished</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Results<ept id="p1">*</ept> property is populated only if the job has completed successfully (it is <bpt id="p2">**</bpt>null<ept id="p2">**</ept> otherwise).</source>
          <target state="new">The <bpt id="p1">*</bpt>Results<ept id="p1">*</ept> property is populated only if the job has completed successfully (it is <bpt id="p2">**</bpt>null<ept id="p2">**</ept> otherwise).</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Upon the job's completion and if the service has at least one output node defined, the results will be returned as a collection of <bpt id="p1">*</bpt>[output name, blob reference]<ept id="p1">*</ept> pairs, where the blob reference is a SAS read-only reference to the blob containing the actual result.</source>
          <target state="new">Upon the job's completion and if the service has at least one output node defined, the results will be returned as a collection of <bpt id="p1">*</bpt>[output name, blob reference]<ept id="p1">*</ept> pairs, where the blob reference is a SAS read-only reference to the blob containing the actual result.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Sample Response</source>
          <target state="new">Sample Response</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>4. Cancel a Batch Execution Job</source>
          <target state="new">4. Cancel a Batch Execution Job</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A running batch job can be cancelled at any time by calling the designated CancelJob API and passing in the job's id.</source>
          <target state="new">A running batch job can be cancelled at any time by calling the designated CancelJob API and passing in the job's id.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This would be done for various reasons such as that the job is taking too long to complete.</source>
          <target state="new">This would be done for various reasons such as that the job is taking too long to complete.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">[</bpt>BES SDK<ept id="p1">](machine-learning-consume-web-services.md#batch-execution-service-sdk)</ept></source>
          <target state="new">Using the <bpt id="p1">[</bpt>BES SDK<ept id="p1">](machine-learning-consume-web-services.md#batch-execution-service-sdk)</ept></target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>BES SDK Nugget package<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.MachineLearning/)</ept> provides functions that simplify calling BES to score in batch mode.</source>
          <target state="new">The <bpt id="p1">[</bpt>BES SDK Nugget package<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.MachineLearning/)</ept> provides functions that simplify calling BES to score in batch mode.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To install the Nuget package, in Visual Studio, go to Tools, then select Nuget Package Manager, and click Package Manager Console.</source>
          <target state="new">To install the Nuget package, in Visual Studio, go to Tools, then select Nuget Package Manager, and click Package Manager Console.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>AzureML experiments that are published as web services can include web service input modules which means they expect the input to be provided through the web service call in the form of a reference to a blob location.</source>
          <target state="new">AzureML experiments that are published as web services can include web service input modules which means they expect the input to be provided through the web service call in the form of a reference to a blob location.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>There is also the option of not using a web service input module and using a Reader module instead.</source>
          <target state="new">There is also the option of not using a web service input module and using a Reader module instead.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In this case, the Reader typically would read from a SQL DB using a query at run time to get the data.</source>
          <target state="new">In this case, the Reader typically would read from a SQL DB using a query at run time to get the data.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Web service parameters can be used to dynamically point to other servers or tables, etc. The SDK supports both of these patterns.</source>
          <target state="new">Web service parameters can be used to dynamically point to other servers or tables, etc. The SDK supports both of these patterns.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The code sample below demonstrates how you can submit and monitor a batch job against an Azure Machine Learning service endpoint using the BES SDK.</source>
          <target state="new">The code sample below demonstrates how you can submit and monitor a batch job against an Azure Machine Learning service endpoint using the BES SDK.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Note the comments for details on the settings and calls.</source>
          <target state="new">Note the comments for details on the settings and calls.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Sample Code</source>
          <target state="new">Sample Code</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34d0efb70c4ba8b8beea0b9f1f2689308b2d3bf8</xliffext:olfilehash>
  </header>
</xliff>