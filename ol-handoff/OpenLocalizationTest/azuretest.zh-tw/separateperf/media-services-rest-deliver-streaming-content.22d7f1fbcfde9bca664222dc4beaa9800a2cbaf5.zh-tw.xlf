<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to Deliver Streaming Content from Media Services</source>
          <target state="new">How to Deliver Streaming Content from Media Services</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to create a locator that is used to build a streaming URL.</source>
          <target state="new">Learn how to create a locator that is used to build a streaming URL.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The code uses REST API.</source>
          <target state="new">The code uses REST API.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to: Deliver streaming content</source>
          <target state="new">How to: Deliver streaming content</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>.NET</source>
          <target state="new">.NET</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>REST</source>
          <target state="new">REST</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Portal</source>
          <target state="new">Portal</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can stream an adaptive bitrate MP4 set by creating an OnDemand streaming locator and building a streaming URL.</source>
          <target state="new">You can stream an adaptive bitrate MP4 set by creating an OnDemand streaming locator and building a streaming URL.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>encoding an asset<ept id="p1">](media-services-rest-encode-asset.md)</ept> topic shows how to encode into an adaptive bitrate MP4 set.</source>
          <target state="new">The <bpt id="p1">[</bpt>encoding an asset<ept id="p1">](media-services-rest-encode-asset.md)</ept> topic shows how to encode into an adaptive bitrate MP4 set.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If your content is encrypted, configure asset delivery policy (as described in <bpt id="p1">[</bpt>this<ept id="p1">](media-services-rest-configure-asset-delivery-policy.md)</ept> topic) before creating a locator.</source>
          <target state="new">If your content is encrypted, configure asset delivery policy (as described in <bpt id="p1">[</bpt>this<ept id="p1">](media-services-rest-configure-asset-delivery-policy.md)</ept> topic) before creating a locator.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also use an OnDemand streaming locator to build URLs that point to MP4 files that can be progressively downloaded.</source>
          <target state="new">You can also use an OnDemand streaming locator to build URLs that point to MP4 files that can be progressively downloaded.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This topic shows how to create an OnDemand streaming locator in order to publish your asset and build a Smooth, MPEG DASH, and HLS streaming URLs.</source>
          <target state="new">This topic shows how to create an OnDemand streaming locator in order to publish your asset and build a Smooth, MPEG DASH, and HLS streaming URLs.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It also shows hot to build progressive download URLs.</source>
          <target state="new">It also shows hot to build progressive download URLs.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>following<ept id="p1">](#types)</ept> section shows the enum types whose values are used in the REST calls.</source>
          <target state="new">The <bpt id="p1">[</bpt>following<ept id="p1">](#types)</ept> section shows the enum types whose values are used in the REST calls.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create an OnDemand streaming locator</source>
          <target state="new">Create an OnDemand streaming locator</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To create the OnDemand streaming locator and get URLs you need to do the following:</source>
          <target state="new">To create the OnDemand streaming locator and get URLs you need to do the following:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the content is encrypted, define an access policy.</source>
          <target state="new">If the content is encrypted, define an access policy.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create an OnDemand streaming locator.</source>
          <target state="new">Create an OnDemand streaming locator.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you plan to stream, get the streaming manifest file (.ism) in the asset.</source>
          <target state="new">If you plan to stream, get the streaming manifest file (.ism) in the asset.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Build URLs to the manifest file or MP4 files.</source>
          <target state="new">Build URLs to the manifest file or MP4 files.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Create an access policy</source>
          <target state="new">Create an access policy</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create an OnDemand streaming locator</source>
          <target state="new">Create an OnDemand streaming locator</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create the locator for the specified asset and asset policy.</source>
          <target state="new">Create the locator for the specified asset and asset policy.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Build streaming URLs</source>
          <target state="new">Build streaming URLs</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> value returned after the creation of the locator to build the Smooth, HLS, and MPEG DASH URLs.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> value returned after the creation of the locator to build the Smooth, HLS, and MPEG DASH URLs.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Smooth Streaming: <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> + manifest file name + "/manifest"</source>
          <target state="new">Smooth Streaming: <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> + manifest file name + "/manifest"</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="new">example:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>HLS: <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> + manifest file name + "/manifest(format=m3u8-aapl)"</source>
          <target state="new">HLS: <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> + manifest file name + "/manifest(format=m3u8-aapl)"</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="new">example:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>DASH: <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> + manifest file name + "/manifest(format=mpd-time-csf)"</source>
          <target state="new">DASH: <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> + manifest file name + "/manifest(format=mpd-time-csf)"</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="new">example:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Build progressive download URLs</source>
          <target state="new">Build progressive download URLs</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> value returned after the creation of the locator to build the progressive download URL.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> value returned after the creation of the locator to build the progressive download URL.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>URL: <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> + asset file mp4 name</source>
          <target state="new">URL: <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> + asset file mp4 name</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="new">example:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="types"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Enum types</source>
          <target state="new"><ph id="ph1">&lt;a id="types"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Enum types</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc216cd8c572c59b314298135816cf358515b2bc</xliffext:olfilehash>
  </header>
</xliff>