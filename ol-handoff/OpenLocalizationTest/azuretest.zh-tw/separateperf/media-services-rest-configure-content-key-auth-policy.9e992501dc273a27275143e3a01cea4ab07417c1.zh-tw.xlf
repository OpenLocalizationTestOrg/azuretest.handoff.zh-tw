<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Configure Content Key Authorization Policy using REST</source>
          <target state="new">Configure Content Key Authorization Policy using REST</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to configure an authorization policy for a content key.</source>
          <target state="new">Learn how to configure an authorization policy for a content key.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Dynamic encryption: Configure Content Key Authorization Policy</source>
          <target state="new">Dynamic encryption: Configure Content Key Authorization Policy</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overivew</source>
          <target state="new">Overivew</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Microsoft Azure Media Services enables you to deliver your content encrypted (dynamically) with Advanced Encryption Standard (AES) (using 128-bit encryption keys) and PlayReady DRM.</source>
          <target state="new">Microsoft Azure Media Services enables you to deliver your content encrypted (dynamically) with Advanced Encryption Standard (AES) (using 128-bit encryption keys) and PlayReady DRM.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Media Services also provides a service for delivering keys and PlayReady licenses to authorized clients.</source>
          <target state="new">Media Services also provides a service for delivering keys and PlayReady licenses to authorized clients.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you want for Media Services to encrypt an asset, you need to associate an encryption key (<bpt id="p1">**</bpt>CommonEncryption<ept id="p1">**</ept> or <bpt id="p2">**</bpt>EnvelopeEncryption<ept id="p2">**</ept>) with the asset (as described <bpt id="p3">[</bpt>here<ept id="p3">](media-services-rest-create-contentkey.md)</ept>) and also configure authorization policies for the key (as described in this article).</source>
          <target state="new">If you want for Media Services to encrypt an asset, you need to associate an encryption key (<bpt id="p1">**</bpt>CommonEncryption<ept id="p1">**</ept> or <bpt id="p2">**</bpt>EnvelopeEncryption<ept id="p2">**</ept>) with the asset (as described <bpt id="p3">[</bpt>here<ept id="p3">](media-services-rest-create-contentkey.md)</ept>) and also configure authorization policies for the key (as described in this article).</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Currently, you can encrypt the following streaming formats: HLS, MPEG DASH, and Smooth Streaming.</source>
          <target state="new">Currently, you can encrypt the following streaming formats: HLS, MPEG DASH, and Smooth Streaming.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You cannot encrypt HDS streaming format, or progressive downloads.</source>
          <target state="new">You cannot encrypt HDS streaming format, or progressive downloads.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When a stream is requested by a player, Media Services uses the specified key to dynamically encrypt your content using AES or PlayReady encryption.</source>
          <target state="new">When a stream is requested by a player, Media Services uses the specified key to dynamically encrypt your content using AES or PlayReady encryption.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To decrypt the stream, the player will request the key from the key delivery service.</source>
          <target state="new">To decrypt the stream, the player will request the key from the key delivery service.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To decide whether or not the user is authorized to get the key, the service evaluates the authorization policies that you specified for the key.</source>
          <target state="new">To decide whether or not the user is authorized to get the key, the service evaluates the authorization policies that you specified for the key.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Media Services supports multiple ways of authenticating users who make key requests.</source>
          <target state="new">Media Services supports multiple ways of authenticating users who make key requests.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The content key authorization policy could have one or more authorization restrictions: <bpt id="p1">**</bpt>open<ept id="p1">**</ept>, <bpt id="p2">**</bpt>token<ept id="p2">**</ept> restriction, or <bpt id="p3">**</bpt>IP<ept id="p3">**</ept> restriction.</source>
          <target state="new">The content key authorization policy could have one or more authorization restrictions: <bpt id="p1">**</bpt>open<ept id="p1">**</ept>, <bpt id="p2">**</bpt>token<ept id="p2">**</ept> restriction, or <bpt id="p3">**</bpt>IP<ept id="p3">**</ept> restriction.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The token restricted policy must be accompanied by a token issued by a Secure Token Service (STS).</source>
          <target state="new">The token restricted policy must be accompanied by a token issued by a Secure Token Service (STS).</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Media Services supports tokens in the <bpt id="p1">**</bpt>Simple Web Tokens<ept id="p1">**</ept> (<bpt id="p2">[</bpt>SWT<ept id="p2">](https://msdn.microsoft.com/library/gg185950.aspx#BKMK_2)</ept>) format and **JSON Web Token **(JWT) format.</source>
          <target state="new">Media Services supports tokens in the <bpt id="p1">**</bpt>Simple Web Tokens<ept id="p1">**</ept> (<bpt id="p2">[</bpt>SWT<ept id="p2">](https://msdn.microsoft.com/library/gg185950.aspx#BKMK_2)</ept>) format and **JSON Web Token **(JWT) format.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Media Services does not provide Secure Token Services.</source>
          <target state="new">Media Services does not provide Secure Token Services.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can create a custom STS or leverage Microsoft Azure ACS to issue tokens.</source>
          <target state="new">You can create a custom STS or leverage Microsoft Azure ACS to issue tokens.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The STS must be configured to create a token signed with the specified key and issue claims that you specified in the token restriction configuration (as described in this article).</source>
          <target state="new">The STS must be configured to create a token signed with the specified key and issue claims that you specified in the token restriction configuration (as described in this article).</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The Media Services key delivery service will return the encryption key to the client if the token is valid and the claims in the token match those configured for the content key.</source>
          <target state="new">The Media Services key delivery service will return the encryption key to the client if the token is valid and the claims in the token match those configured for the content key.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see</source>
          <target state="new">For more information, see</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>JWT token authenitcation</source>
          <target state="new">JWT token authenitcation</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Integrate Azure Media Services OWIN MVC based app with Azure Active Directory and restrict content key delivery based on JWT claims<ept id="p1">](http://www.gtrifonov.com/2015/01/24/mvc-owin-azure-media-services-ad-integration/)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Integrate Azure Media Services OWIN MVC based app with Azure Active Directory and restrict content key delivery based on JWT claims<ept id="p1">](http://www.gtrifonov.com/2015/01/24/mvc-owin-azure-media-services-ad-integration/)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Use Azure ACS to issue tokens<ept id="p1">](http://mingfeiy.com/acs-with-key-services)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Use Azure ACS to issue tokens<ept id="p1">](http://mingfeiy.com/acs-with-key-services)</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Some considerations apply:</source>
          <target state="new">Some considerations apply:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To be able to use dynamic packaging and dynamic encryption, you must make sure to have at least one  streaming reserved unit.</source>
          <target state="new">To be able to use dynamic packaging and dynamic encryption, you must make sure to have at least one  streaming reserved unit.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to Scale a Media Service<ept id="p1">](media-services-manage-origins.md#scale_streaming_endpoints)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>How to Scale a Media Service<ept id="p1">](media-services-manage-origins.md#scale_streaming_endpoints)</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Your asset must contain a set of adaptive bitrate MP4s or  adaptive bitrate Smooth Streaming files.</source>
          <target state="new">Your asset must contain a set of adaptive bitrate MP4s or  adaptive bitrate Smooth Streaming files.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Encode an asset<ept id="p1">](media-services-encode-asset.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Encode an asset<ept id="p1">](media-services-encode-asset.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Upload and encode your assets using <bpt id="p1">**</bpt>AssetCreationOptions.StorageEncrypted<ept id="p1">**</ept> option.</source>
          <target state="new">Upload and encode your assets using <bpt id="p1">**</bpt>AssetCreationOptions.StorageEncrypted<ept id="p1">**</ept> option.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you plan to have multiple content keys that require the same policy configuration, it is strongly recommended to create a single authorization policy and reuse it with multiple content keys.</source>
          <target state="new">If you plan to have multiple content keys that require the same policy configuration, it is strongly recommended to create a single authorization policy and reuse it with multiple content keys.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The Key Delivery service caches ContentKeyAuthorizationPolicy and its related objects (policy options and restrictions) for 15 minutes.</source>
          <target state="new">The Key Delivery service caches ContentKeyAuthorizationPolicy and its related objects (policy options and restrictions) for 15 minutes.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you create a ContentKeyAuthorizationPolicy and specify to use a “Token” restriction, then test it, and then update the policy to “Open” restriction, it will take roughly 15 minutes before the policy switches to the “Open” version of the policy.</source>
          <target state="new">If you create a ContentKeyAuthorizationPolicy and specify to use a “Token” restriction, then test it, and then update the policy to “Open” restriction, it will take roughly 15 minutes before the policy switches to the “Open” version of the policy.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you add or update your asset’s delivery policy, you must delete an existing locator (if any) and create a new locator.</source>
          <target state="new">If you add or update your asset’s delivery policy, you must delete an existing locator (if any) and create a new locator.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>AES-128 Dynamic Encryption</source>
          <target state="new">AES-128 Dynamic Encryption</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> When working with the Media Services REST API, the following considerations apply:</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> When working with the Media Services REST API, the following considerations apply:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.</source>
          <target state="new">When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Setup for Media Services REST API Development<ept id="p1">](media-services-rest-how-to-use.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Setup for Media Services REST API Development<ept id="p1">](media-services-rest-how-to-use.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.</source>
          <target state="new">After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You must make subsequent calls to the new URI as described in <bpt id="p1">[</bpt>Connecting to Media Services using REST API<ept id="p1">](media-services-rest-connect_programmatically.md)</ept>.</source>
          <target state="new">You must make subsequent calls to the new URI as described in <bpt id="p1">[</bpt>Connecting to Media Services using REST API<ept id="p1">](media-services-rest-connect_programmatically.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Open Restriction</source>
          <target state="new">Open Restriction</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Open restriction means the system will deliver the key to anyone who makes a key request.</source>
          <target state="new">Open restriction means the system will deliver the key to anyone who makes a key request.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This restriction might be useful for testing purposes.</source>
          <target state="new">This restriction might be useful for testing purposes.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following example creates an open authorization policy and adds it to the content key.</source>
          <target state="new">The following example creates an open authorization policy and adds it to the content key.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="ContentKeyAuthorizationPolicies"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create ContentKeyAuthorizationPolicies</source>
          <target state="new"><ph id="ph1">&lt;a id="ContentKeyAuthorizationPolicies"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create ContentKeyAuthorizationPolicies</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="ContentKeyAuthorizationPolicyOptions"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create ContentKeyAuthorizationPolicyOptions</source>
          <target state="new"><ph id="ph1">&lt;a id="ContentKeyAuthorizationPolicyOptions"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create ContentKeyAuthorizationPolicyOptions</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="LinkContentKeyAuthorizationPoliciesWithOptions"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Link ContentKeyAuthorizationPolicies with Options</source>
          <target state="new"><ph id="ph1">&lt;a id="LinkContentKeyAuthorizationPoliciesWithOptions"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Link ContentKeyAuthorizationPolicies with Options</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="AddAuthorizationPolicyToKey"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Add authorization policy to the content key</source>
          <target state="new"><ph id="ph1">&lt;a id="AddAuthorizationPolicyToKey"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Add authorization policy to the content key</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Token Restriction</source>
          <target state="new">Token Restriction</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This section describes how to create a content key authorization policy and associate it with the content key.</source>
          <target state="new">This section describes how to create a content key authorization policy and associate it with the content key.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The authorization policy describes what authorization requirements must be met to determine if the user is authorized to receive the key (for example, does the “verification key” list contain the key that the token was signed with).</source>
          <target state="new">The authorization policy describes what authorization requirements must be met to determine if the user is authorized to receive the key (for example, does the “verification key” list contain the key that the token was signed with).</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To configure the token restriction option, you need to use an XML to describe the token’s authorization requirements.</source>
          <target state="new">To configure the token restriction option, you need to use an XML to describe the token’s authorization requirements.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The token restriction configuration XML must conform to the following XML schema.</source>
          <target state="new">The token restriction configuration XML must conform to the following XML schema.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="schema"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Token restriction schema</source>
          <target state="new"><ph id="ph1">&lt;a id="schema"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Token restriction schema</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When configuring the <bpt id="p1">**</bpt>token<ept id="p1">**</ept> restricted policy, you must specify the primary** verification key**, <bpt id="p2">**</bpt>issuer<ept id="p2">**</ept> and <bpt id="p3">**</bpt>audience<ept id="p3">**</ept> parameters.</source>
          <target state="new">When configuring the <bpt id="p1">**</bpt>token<ept id="p1">**</ept> restricted policy, you must specify the primary** verification key**, <bpt id="p2">**</bpt>issuer<ept id="p2">**</ept> and <bpt id="p3">**</bpt>audience<ept id="p3">**</ept> parameters.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The **primary verification key **contains the key that the token was signed with, <bpt id="p1">**</bpt>issuer<ept id="p1">**</ept> is the secure token service that issues the token.</source>
          <target state="new">The **primary verification key **contains the key that the token was signed with, <bpt id="p1">**</bpt>issuer<ept id="p1">**</ept> is the secure token service that issues the token.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>audience<ept id="p1">**</ept> (sometimes called <bpt id="p2">**</bpt>scope<ept id="p2">**</ept>) describes the intent of the token or the resource the token authorizes access to.</source>
          <target state="new">The <bpt id="p1">**</bpt>audience<ept id="p1">**</ept> (sometimes called <bpt id="p2">**</bpt>scope<ept id="p2">**</ept>) describes the intent of the token or the resource the token authorizes access to.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The Media Services key delivery service validates that these values in the token match the values in the template.</source>
          <target state="new">The Media Services key delivery service validates that these values in the token match the values in the template.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following example creates an authorization policy with a token restriction.</source>
          <target state="new">The following example creates an authorization policy with a token restriction.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In this example, the client would have to present a token that contains: signing key (VerificationKey), a token issuer, and required claims.</source>
          <target state="new">In this example, the client would have to present a token that contains: signing key (VerificationKey), a token issuer, and required claims.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Create ContentKeyAuthorizationPolicies</source>
          <target state="new">Create ContentKeyAuthorizationPolicies</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Create the "Token Restriction Policy" as shown <bpt id="p1">[</bpt>here<ept id="p1">](#ContentKeyAuthorizationPolicies)</ept>.</source>
          <target state="new">Create the "Token Restriction Policy" as shown <bpt id="p1">[</bpt>here<ept id="p1">](#ContentKeyAuthorizationPolicies)</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Create ContentKeyAuthorizationPolicyOptions</source>
          <target state="new">Create ContentKeyAuthorizationPolicyOptions</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Link ContentKeyAuthorizationPolicies with Options</source>
          <target state="new">Link ContentKeyAuthorizationPolicies with Options</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Link ContentKeyAuthorizationPolicies with Options as shown <bpt id="p1">[</bpt>here<ept id="p1">](#ContentKeyAuthorizationPolicies)</ept>.</source>
          <target state="new">Link ContentKeyAuthorizationPolicies with Options as shown <bpt id="p1">[</bpt>here<ept id="p1">](#ContentKeyAuthorizationPolicies)</ept>.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Add authorization policy to the content key</source>
          <target state="new">Add authorization policy to the content key</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Add AuthorizationPolicy to the ContentKey as shown <bpt id="p1">[</bpt>here<ept id="p1">](#AddAuthorizationPolicyToKey)</ept>.</source>
          <target state="new">Add AuthorizationPolicy to the ContentKey as shown <bpt id="p1">[</bpt>here<ept id="p1">](#AddAuthorizationPolicyToKey)</ept>.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>PlayReady Dynamic Encryption</source>
          <target state="new">PlayReady Dynamic Encryption</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Media Services enables you to configure the rights and restrictions that you want for the PlayReady DRM runtime to enforce when a user is trying to play back protected content.</source>
          <target state="new">Media Services enables you to configure the rights and restrictions that you want for the PlayReady DRM runtime to enforce when a user is trying to play back protected content.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>When protecting your content with PlayReady, one of the things you need to specify in your authorization policy is an XML string that defines the <bpt id="p1">[</bpt>PlayReady license template<ept id="p1">](https://msdn.microsoft.com/library/azure/dn783459.aspx)</ept>.</source>
          <target state="new">When protecting your content with PlayReady, one of the things you need to specify in your authorization policy is an XML string that defines the <bpt id="p1">[</bpt>PlayReady license template<ept id="p1">](https://msdn.microsoft.com/library/azure/dn783459.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Open Restriction</source>
          <target state="new">Open Restriction</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Open restriction means the system will deliver the key to anyone who makes a key request.</source>
          <target state="new">Open restriction means the system will deliver the key to anyone who makes a key request.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This restriction might be useful for testing purposes.</source>
          <target state="new">This restriction might be useful for testing purposes.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following example creates an open authorization policy and adds it to the content key.</source>
          <target state="new">The following example creates an open authorization policy and adds it to the content key.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="ContentKeyAuthorizationPolicies2"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create ContentKeyAuthorizationPolicies</source>
          <target state="new"><ph id="ph1">&lt;a id="ContentKeyAuthorizationPolicies2"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create ContentKeyAuthorizationPolicies</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Create ContentKeyAuthorizationPolicyOptions</source>
          <target state="new">Create ContentKeyAuthorizationPolicyOptions</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Link ContentKeyAuthorizationPolicies with Options</source>
          <target state="new">Link ContentKeyAuthorizationPolicies with Options</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Link ContentKeyAuthorizationPolicies with Options as shown <bpt id="p1">[</bpt>here<ept id="p1">](#ContentKeyAuthorizationPolicies)</ept>.</source>
          <target state="new">Link ContentKeyAuthorizationPolicies with Options as shown <bpt id="p1">[</bpt>here<ept id="p1">](#ContentKeyAuthorizationPolicies)</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Add authorization policy to the content key</source>
          <target state="new">Add authorization policy to the content key</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Add AuthorizationPolicy to the ContentKey as shown <bpt id="p1">[</bpt>here<ept id="p1">](#AddAuthorizationPolicyToKey)</ept>.</source>
          <target state="new">Add AuthorizationPolicy to the ContentKey as shown <bpt id="p1">[</bpt>here<ept id="p1">](#AddAuthorizationPolicyToKey)</ept>.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Token Restriction</source>
          <target state="new">Token Restriction</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To configure the token restriction option, you need to use an XML to describe the token’s authorization requirements.</source>
          <target state="new">To configure the token restriction option, you need to use an XML to describe the token’s authorization requirements.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The token restriction configuration XML must conform to the XML schema shown in <bpt id="p1">[</bpt>this<ept id="p1">](#schema)</ept> section.</source>
          <target state="new">The token restriction configuration XML must conform to the XML schema shown in <bpt id="p1">[</bpt>this<ept id="p1">](#schema)</ept> section.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Create ContentKeyAuthorizationPolicies</source>
          <target state="new">Create ContentKeyAuthorizationPolicies</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Create ContentKeyAuthorizationPolicies as shown <bpt id="p1">[</bpt>here<ept id="p1">](#ContentKeyAuthorizationPolicies2)</ept>.</source>
          <target state="new">Create ContentKeyAuthorizationPolicies as shown <bpt id="p1">[</bpt>here<ept id="p1">](#ContentKeyAuthorizationPolicies2)</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Create ContentKeyAuthorizationPolicyOptions</source>
          <target state="new">Create ContentKeyAuthorizationPolicyOptions</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Link ContentKeyAuthorizationPolicies with Options</source>
          <target state="new">Link ContentKeyAuthorizationPolicies with Options</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Link ContentKeyAuthorizationPolicies with Options as shown <bpt id="p1">[</bpt>here<ept id="p1">](#ContentKeyAuthorizationPolicies)</ept>.</source>
          <target state="new">Link ContentKeyAuthorizationPolicies with Options as shown <bpt id="p1">[</bpt>here<ept id="p1">](#ContentKeyAuthorizationPolicies)</ept>.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Add authorization policy to the content key</source>
          <target state="new">Add authorization policy to the content key</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Add AuthorizationPolicy to the ContentKey as shown <bpt id="p1">[</bpt>here<ept id="p1">](#AddAuthorizationPolicyToKey)</ept>.</source>
          <target state="new">Add AuthorizationPolicy to the ContentKey as shown <bpt id="p1">[</bpt>here<ept id="p1">](#AddAuthorizationPolicyToKey)</ept>.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="types"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Types used when defining ContentKeyAuthorizationPolicy</source>
          <target state="new"><ph id="ph1">&lt;a id="types"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Types used when defining ContentKeyAuthorizationPolicy</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="ContentKeyRestrictionType"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ContentKeyRestrictionType</source>
          <target state="new"><ph id="ph1">&lt;a id="ContentKeyRestrictionType"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ContentKeyRestrictionType</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="ContentKeyDeliveryType"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ContentKeyDeliveryType</source>
          <target state="new"><ph id="ph1">&lt;a id="ContentKeyDeliveryType"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ContentKeyDeliveryType</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Now that you have configured content key's authorization policy, go to the <bpt id="p1">[</bpt>How to configure asset delivery policy<ept id="p1">](media-services-rest-configure-asset-delivery-policy.md)</ept> topic.</source>
          <target state="new">Now that you have configured content key's authorization policy, go to the <bpt id="p1">[</bpt>How to configure asset delivery policy<ept id="p1">](media-services-rest-configure-asset-delivery-policy.md)</ept> topic.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db9b05cc8d1bf20b689472f6492571736a3cb51d</xliffext:olfilehash>
  </header>
</xliff>