<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to use queue storage (C++) | Microsoft Azure</source>
          <target state="new">How to use queue storage (C++) | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use the queue storage service in Azure.</source>
          <target state="new">Learn how to use the queue storage service in Azure.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Samples are written in C++.</source>
          <target state="new">Samples are written in C++.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to use Queue Storage from C++</source>
          <target state="new">How to use Queue Storage from C++</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This guide will show you how to perform common scenarios using the Azure Queue storage service.</source>
          <target state="new">This guide will show you how to perform common scenarios using the Azure Queue storage service.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The samples are written in C++ and use the <bpt id="p1">[</bpt>Azure Storage Client Library for C++<ept id="p1">](https://github.com/Azure/azure-storage-cpp/blob/v1.0.0/README.md)</ept>.</source>
          <target state="new">The samples are written in C++ and use the <bpt id="p1">[</bpt>Azure Storage Client Library for C++<ept id="p1">](https://github.com/Azure/azure-storage-cpp/blob/v1.0.0/README.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The scenarios covered include <bpt id="p1">**</bpt>inserting<ept id="p1">**</ept>, <bpt id="p2">**</bpt>peeking<ept id="p2">**</ept>, <bpt id="p3">**</bpt>getting<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>deleting<ept id="p4">**</ept> queue messages, as well as <bpt id="p5">**</bpt>creating and deleting queues<ept id="p5">**</ept>.</source>
          <target state="new">The scenarios covered include <bpt id="p1">**</bpt>inserting<ept id="p1">**</ept>, <bpt id="p2">**</bpt>peeking<ept id="p2">**</ept>, <bpt id="p3">**</bpt>getting<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>deleting<ept id="p4">**</ept> queue messages, as well as <bpt id="p5">**</bpt>creating and deleting queues<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This guide targets the Azure Storage Client Library for C++ version 1.0.0 and above.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This guide targets the Azure Storage Client Library for C++ version 1.0.0 and above.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The recommended version is Storage Client Library 1.0.0, which is available via <bpt id="p1">[</bpt>NuGet<ept id="p1">](http://www.nuget.org/packages/wastorage)</ept> or <bpt id="p2">[</bpt>GitHub<ept id="p2">](https://github.com/)</ept>.</source>
          <target state="new">The recommended version is Storage Client Library 1.0.0, which is available via <bpt id="p1">[</bpt>NuGet<ept id="p1">](http://www.nuget.org/packages/wastorage)</ept> or <bpt id="p2">[</bpt>GitHub<ept id="p2">](https://github.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create a C++ application</source>
          <target state="new">Create a C++ application</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this guide, you will use storage features which can be run within a C++ application.</source>
          <target state="new">In this guide, you will use storage features which can be run within a C++ application.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To do so, you will need to install the Azure Storage Client Library for C++ and create an Azure storage account in your Azure subscription.</source>
          <target state="new">To do so, you will need to install the Azure Storage Client Library for C++ and create an Azure storage account in your Azure subscription.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To install the Azure Storage Client Library for C++, you can use the following methods:</source>
          <target state="new">To install the Azure Storage Client Library for C++, you can use the following methods:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Linux:<ept id="p1">**</ept> Follow the instructions given in the <bpt id="p2">[</bpt>Azure Storage Client Library for C++ README<ept id="p2">](https://github.com/Azure/azure-storage-cpp/blob/master/README.md)</ept> page.</source>
          <target state="new"><bpt id="p1">**</bpt>Linux:<ept id="p1">**</ept> Follow the instructions given in the <bpt id="p2">[</bpt>Azure Storage Client Library for C++ README<ept id="p2">](https://github.com/Azure/azure-storage-cpp/blob/master/README.md)</ept> page.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Windows:<ept id="p1">**</ept> In Visual Studio, click <bpt id="p2">**</bpt>Tools &gt; NuGet Package Manager &gt; Package Manager Console<ept id="p2">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Windows:<ept id="p1">**</ept> In Visual Studio, click <bpt id="p2">**</bpt>Tools &gt; NuGet Package Manager &gt; Package Manager Console<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Type the following command into the <bpt id="p1">[</bpt>NuGet Package Manager console<ept id="p1">](http://docs.nuget.org/docs/start-here/using-the-package-manager-console)</ept> and press <bpt id="p2">**</bpt>ENTER<ept id="p2">**</ept>.</source>
          <target state="new">Type the following command into the <bpt id="p1">[</bpt>NuGet Package Manager console<ept id="p1">](http://docs.nuget.org/docs/start-here/using-the-package-manager-console)</ept> and press <bpt id="p2">**</bpt>ENTER<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Configure your application to access Queue Storage</source>
          <target state="new">Configure your application to access Queue Storage</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Add the following include statements to the top of the C++ file where you want to use the Azure storage APIs to access queues:</source>
          <target state="new">Add the following include statements to the top of the C++ file where you want to use the Azure storage APIs to access queues:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Setup an Azure storage connection string</source>
          <target state="new">Setup an Azure storage connection string</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An Azure storage client uses a storage connection string to store endpoints and credentials for accessing data management services.</source>
          <target state="new">An Azure storage client uses a storage connection string to store endpoints and credentials for accessing data management services.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When running in a client application, you must provide the storage connection string in the following format, using the name of your storage account and the storage access key for the storage account listed in the Management Portal for the <bpt id="p1">*</bpt>AccountName<ept id="p1">*</ept> and <bpt id="p2">*</bpt>AccountKey<ept id="p2">*</ept> values.</source>
          <target state="new">When running in a client application, you must provide the storage connection string in the following format, using the name of your storage account and the storage access key for the storage account listed in the Management Portal for the <bpt id="p1">*</bpt>AccountName<ept id="p1">*</ept> and <bpt id="p2">*</bpt>AccountKey<ept id="p2">*</ept> values.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For information on storage accounts and access keys, see <bpt id="p1">[</bpt>About Azure Storage Accounts<ept id="p1">](storage-create-storage-account.md)</ept>.</source>
          <target state="new">For information on storage accounts and access keys, see <bpt id="p1">[</bpt>About Azure Storage Accounts<ept id="p1">](storage-create-storage-account.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example shows how you can declare a static field to hold the connection string:</source>
          <target state="new">This example shows how you can declare a static field to hold the connection string:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To test your application in your local Windows computer, you can use the Microsoft Azure <bpt id="p1">[</bpt>storage emulator<ept id="p1">](https://msdn.microsoft.com/library/azure/hh403989.aspx)</ept>  that is installed with the <bpt id="p2">[</bpt>Azure SDK<ept id="p2">](http://azure.microsoft.com/downloads/)</ept>.</source>
          <target state="new">To test your application in your local Windows computer, you can use the Microsoft Azure <bpt id="p1">[</bpt>storage emulator<ept id="p1">](https://msdn.microsoft.com/library/azure/hh403989.aspx)</ept>  that is installed with the <bpt id="p2">[</bpt>Azure SDK<ept id="p2">](http://azure.microsoft.com/downloads/)</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The storage emulator is a utility that simulates the Blob, Queue, and Table services available in Azure on your local development machine.</source>
          <target state="new">The storage emulator is a utility that simulates the Blob, Queue, and Table services available in Azure on your local development machine.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example shows how you can declare a static field to hold the connection string to your local storage emulator:</source>
          <target state="new">The following example shows how you can declare a static field to hold the connection string to your local storage emulator:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To start the Azure storage emulator, Select the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> button or press the <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept> key.</source>
          <target state="new">To start the Azure storage emulator, Select the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> button or press the <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept> key.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Begin typing <bpt id="p1">**</bpt>Azure Storage Emulator<ept id="p1">**</ept>, and select <bpt id="p2">**</bpt>Microsoft Azure Storage Emulator<ept id="p2">**</ept> from the list of applications.</source>
          <target state="new">Begin typing <bpt id="p1">**</bpt>Azure Storage Emulator<ept id="p1">**</ept>, and select <bpt id="p2">**</bpt>Microsoft Azure Storage Emulator<ept id="p2">**</ept> from the list of applications.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following samples assume that you have used one of these two methods to get the storage connection string.</source>
          <target state="new">The following samples assume that you have used one of these two methods to get the storage connection string.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Retrieve your connection string</source>
          <target state="new">Retrieve your connection string</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>cloud_storage_account<ept id="p1">**</ept> class to represent your Storage Account information.</source>
          <target state="new">You can use the <bpt id="p1">**</bpt>cloud_storage_account<ept id="p1">**</ept> class to represent your Storage Account information.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To retrieve your storage account information from the storage connection string, you can use the <bpt id="p1">**</bpt>parse<ept id="p1">**</ept> method.</source>
          <target state="new">To retrieve your storage account information from the storage connection string, you can use the <bpt id="p1">**</bpt>parse<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>How to: Create a queue</source>
          <target state="new">How to: Create a queue</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>cloud_queue_client<ept id="p1">**</ept> object lets you get reference objects for queues.</source>
          <target state="new">A <bpt id="p1">**</bpt>cloud_queue_client<ept id="p1">**</ept> object lets you get reference objects for queues.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following code creates a <bpt id="p1">**</bpt>cloud_queue_client<ept id="p1">**</ept> object.</source>
          <target state="new">The following code creates a <bpt id="p1">**</bpt>cloud_queue_client<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>cloud_queue_client<ept id="p1">**</ept> object to get a reference to the queue you want to use.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>cloud_queue_client<ept id="p1">**</ept> object to get a reference to the queue you want to use.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can create the queue if it doesn't exist.</source>
          <target state="new">You can create the queue if it doesn't exist.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>How to: Insert a message into a queue</source>
          <target state="new">How to: Insert a message into a queue</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To insert a message into an existing queue, first create a new <bpt id="p1">**</bpt>cloud_queue_message<ept id="p1">**</ept>.</source>
          <target state="new">To insert a message into an existing queue, first create a new <bpt id="p1">**</bpt>cloud_queue_message<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Next, call the <bpt id="p1">**</bpt>add_message<ept id="p1">**</ept> method.</source>
          <target state="new">Next, call the <bpt id="p1">**</bpt>add_message<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>cloud_queue_message<ept id="p1">**</ept> can be created from either a string or a <bpt id="p2">**</bpt>byte<ept id="p2">**</ept> array.</source>
          <target state="new">A <bpt id="p1">**</bpt>cloud_queue_message<ept id="p1">**</ept> can be created from either a string or a <bpt id="p2">**</bpt>byte<ept id="p2">**</ept> array.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Here is code which creates a queue (if it doesn't exist) and inserts the message 'Hello, World':</source>
          <target state="new">Here is code which creates a queue (if it doesn't exist) and inserts the message 'Hello, World':</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>How to: Peek at the next message</source>
          <target state="new">How to: Peek at the next message</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can peek at the message in the front of a queue without removing it from the queue by calling the <bpt id="p1">**</bpt>peek_message<ept id="p1">**</ept> method.</source>
          <target state="new">You can peek at the message in the front of a queue without removing it from the queue by calling the <bpt id="p1">**</bpt>peek_message<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>How to: Change the contents of a queued message</source>
          <target state="new">How to: Change the contents of a queued message</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can change the contents of a message in-place in the queue.</source>
          <target state="new">You can change the contents of a message in-place in the queue.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the message represents a work task, you could use this feature to update the status of the work task.</source>
          <target state="new">If the message represents a work task, you could use this feature to update the status of the work task.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following code updates the queue message with new contents, and sets the visibility timeout to extend another 60 seconds.</source>
          <target state="new">The following code updates the queue message with new contents, and sets the visibility timeout to extend another 60 seconds.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This saves the state of work associated with the message, and gives the client another minute to continue working on the message.</source>
          <target state="new">This saves the state of work associated with the message, and gives the client another minute to continue working on the message.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You could use this technique to track multi-step workflows on queue messages, without having to start over from the beginning if a processing step fails due to hardware or software failure.</source>
          <target state="new">You could use this technique to track multi-step workflows on queue messages, without having to start over from the beginning if a processing step fails due to hardware or software failure.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Typically, you would keep a retry count as well, and if the message is retried more than n times, you would delete it.</source>
          <target state="new">Typically, you would keep a retry count as well, and if the message is retried more than n times, you would delete it.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This protects against a message that triggers an application error each time it is processed.</source>
          <target state="new">This protects against a message that triggers an application error each time it is processed.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>How to: De-queue the next message</source>
          <target state="new">How to: De-queue the next message</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Your code de-queues a message from a queue in two steps.</source>
          <target state="new">Your code de-queues a message from a queue in two steps.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When you call <bpt id="p1">**</bpt>get_message<ept id="p1">**</ept>, you get the next message in a queue.</source>
          <target state="new">When you call <bpt id="p1">**</bpt>get_message<ept id="p1">**</ept>, you get the next message in a queue.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A message returned from <bpt id="p1">**</bpt>get_message<ept id="p1">**</ept> becomes invisible to any other code reading messages from this queue.</source>
          <target state="new">A message returned from <bpt id="p1">**</bpt>get_message<ept id="p1">**</ept> becomes invisible to any other code reading messages from this queue.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To finish removing the message from the queue, you must also call <bpt id="p1">**</bpt>delete_message<ept id="p1">**</ept>.</source>
          <target state="new">To finish removing the message from the queue, you must also call <bpt id="p1">**</bpt>delete_message<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</source>
          <target state="new">This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Your code calls <bpt id="p1">**</bpt>delete_message<ept id="p1">**</ept> right after the message has been processed.</source>
          <target state="new">Your code calls <bpt id="p1">**</bpt>delete_message<ept id="p1">**</ept> right after the message has been processed.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>How to: Leverage additional options for de-queuing messages</source>
          <target state="new">How to: Leverage additional options for de-queuing messages</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>There are two ways you can customize message retrieval from a queue.</source>
          <target state="new">There are two ways you can customize message retrieval from a queue.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>First, you can get a batch of messages (up to 32).</source>
          <target state="new">First, you can get a batch of messages (up to 32).</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Second, you can set a longer or shorter invisibility timeout, allowing your code more or less time to fully process each message.</source>
          <target state="new">Second, you can set a longer or shorter invisibility timeout, allowing your code more or less time to fully process each message.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following code example uses the <bpt id="p1">**</bpt>get_messages<ept id="p1">**</ept> method to get 20 messages in one call.</source>
          <target state="new">The following code example uses the <bpt id="p1">**</bpt>get_messages<ept id="p1">**</ept> method to get 20 messages in one call.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Then it processes each message using a <bpt id="p1">**</bpt>for<ept id="p1">**</ept> loop.</source>
          <target state="new">Then it processes each message using a <bpt id="p1">**</bpt>for<ept id="p1">**</ept> loop.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It also sets the invisibility timeout to five minutes for each message.</source>
          <target state="new">It also sets the invisibility timeout to five minutes for each message.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Note that the 5 minutes starts for all messages at the same time, so after 5 minutes have passed since the call to <bpt id="p1">**</bpt>get_messages<ept id="p1">**</ept>, any messages which have not been deleted will become visible again.</source>
          <target state="new">Note that the 5 minutes starts for all messages at the same time, so after 5 minutes have passed since the call to <bpt id="p1">**</bpt>get_messages<ept id="p1">**</ept>, any messages which have not been deleted will become visible again.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>How to: Get the queue length</source>
          <target state="new">How to: Get the queue length</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can get an estimate of the number of messages in a queue.</source>
          <target state="new">You can get an estimate of the number of messages in a queue.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>download_attributes<ept id="p1">**</ept> method asks the Queue service to retrieve the queue attributes, including the message count.</source>
          <target state="new">The <bpt id="p1">**</bpt>download_attributes<ept id="p1">**</ept> method asks the Queue service to retrieve the queue attributes, including the message count.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>approximate_message_count<ept id="p1">**</ept> method gets the approximate number of messages in the queue.</source>
          <target state="new">The <bpt id="p1">**</bpt>approximate_message_count<ept id="p1">**</ept> method gets the approximate number of messages in the queue.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>How to: Delete a queue</source>
          <target state="new">How to: Delete a queue</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To delete a queue and all the messages contained in it, call the <bpt id="p1">**</bpt>delete_queue_if_exists<ept id="p1">**</ept> method on the queue object.</source>
          <target state="new">To delete a queue and all the messages contained in it, call the <bpt id="p1">**</bpt>delete_queue_if_exists<ept id="p1">**</ept> method on the queue object.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Now that you've learned the basics of Queue storage, follow these links to learn more about Azure Storage.</source>
          <target state="new">Now that you've learned the basics of Queue storage, follow these links to learn more about Azure Storage.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>How to use Blob Storage from C++</source>
          <target state="new">How to use Blob Storage from C++</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>How to use Table Storage from C++</source>
          <target state="new">How to use Table Storage from C++</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>List Azure Storage Resources in C++</source>
          <target state="new">List Azure Storage Resources in C++</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Storage Client Library for C++ Reference</source>
          <target state="new">Storage Client Library for C++ Reference</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Azure Storage Documentation</source>
          <target state="new">Azure Storage Documentation</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db58890cac06d37d7c4a23aa7bf7e0e29a2faf3c</xliffext:olfilehash>
  </header>
</xliff>