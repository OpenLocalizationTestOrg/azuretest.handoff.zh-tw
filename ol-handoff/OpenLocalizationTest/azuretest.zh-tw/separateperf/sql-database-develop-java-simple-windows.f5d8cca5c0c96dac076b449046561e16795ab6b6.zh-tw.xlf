<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Connect to SQL Database by using Java with JDBC on Windows</source>
          <target state="new">Connect to SQL Database by using Java with JDBC on Windows</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Presents a Java code sample you can use to connect to Azure SQL Database.</source>
          <target state="new">Presents a Java code sample you can use to connect to Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The sample uses JDBC, and it runs on a Windows client computer.</source>
          <target state="new">The sample uses JDBC, and it runs on a Windows client computer.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Connect to SQL Database by using Java with JDBC on Windows</source>
          <target state="new">Connect to SQL Database by using Java with JDBC on Windows</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic presents a Java code sample that you can use to connect to Azure SQL Database.</source>
          <target state="new">This topic presents a Java code sample that you can use to connect to Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The Java sample relies on the Java Development Kit (JDK) version 1.8.</source>
          <target state="new">The Java sample relies on the Java Development Kit (JDK) version 1.8.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The sample connects to an Azure SQL Database by using the JDBC driver.</source>
          <target state="new">The sample connects to an Azure SQL Database by using the JDBC driver.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="new">Requirements</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft JDBC Driver for SQL Server - SQL JDBC 4<ept id="p1">](http://www.microsoft.com/download/details.aspx?displaylang=en&amp;id=11774)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Microsoft JDBC Driver for SQL Server - SQL JDBC 4<ept id="p1">](http://www.microsoft.com/download/details.aspx?displaylang=en&amp;id=11774)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Any operating system platform that runs <bpt id="p1">[</bpt>Java Development Kit 1.8<ept id="p1">](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)</ept>.</source>
          <target state="new">Any operating system platform that runs <bpt id="p1">[</bpt>Java Development Kit 1.8<ept id="p1">](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An existing database on SQL Azure.</source>
          <target state="new">An existing database on SQL Azure.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Get Started topic<ept id="p1">](sql-database-get-started.md)</ept> to learn how to create a sample database and retrieve your connection string.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Get Started topic<ept id="p1">](sql-database-get-started.md)</ept> to learn how to create a sample database and retrieve your connection string.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Test environment</source>
          <target state="new">Test environment</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Java code example in this topic assumes the following test table already exists in your Azure SQL Database database.</source>
          <target state="new">The Java code example in this topic assumes the following test table already exists in your Azure SQL Database database.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Connection string for your SQL Database</source>
          <target state="new">Connection string for your SQL Database</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The code sample creates a <ph id="ph1">`Connection`</ph> object by using a connection string.</source>
          <target state="new">The code sample creates a <ph id="ph1">`Connection`</ph> object by using a connection string.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can find the connection string by using the <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](http://portal.azure.com/)</ept>.</source>
          <target state="new">You can find the connection string by using the <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](http://portal.azure.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For details about finding the connection string, see <bpt id="p1">[</bpt>Create your first Azure SQL Database<ept id="p1">](sql-database-get-started.md)</ept>.</source>
          <target state="new">For details about finding the connection string, see <bpt id="p1">[</bpt>Create your first Azure SQL Database<ept id="p1">](sql-database-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Java code sample</source>
          <target state="new">Java code sample</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The section contains the bulk of the Java code sample.</source>
          <target state="new">The section contains the bulk of the Java code sample.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It has comments indicating where you would copy-and-paste the smaller Java segments that are presented in subsequent sections.</source>
          <target state="new">It has comments indicating where you would copy-and-paste the smaller Java segments that are presented in subsequent sections.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The sample in this section could compile and run even without the copy-and-pastes near the comments, but it would only connect and then end.</source>
          <target state="new">The sample in this section could compile and run even without the copy-and-pastes near the comments, but it would only connect and then end.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The comments you will find are the following:</source>
          <target state="new">The comments you will find are the following:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Here next is the bulk of the Java code sample.</source>
          <target state="new">Here next is the bulk of the Java code sample.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The sample includes the <ph id="ph1">`main`</ph> function of the <ph id="ph2">`SQLDatabaseTest`</ph> class.</source>
          <target state="new">The sample includes the <ph id="ph1">`main`</ph> function of the <ph id="ph2">`SQLDatabaseTest`</ph> class.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Of course, to actually run the preceding Java code sample, you would have to put your real values into the connection string to replace the placeholders:</source>
          <target state="new">Of course, to actually run the preceding Java code sample, you would have to put your real values into the connection string to replace the placeholders:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>your_server</source>
          <target state="new">your_server</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>your_database</source>
          <target state="new">your_database</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>your_user</source>
          <target state="new">your_user</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>your_password</source>
          <target state="new">your_password</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>INSERT two rows into the table</source>
          <target state="new">INSERT two rows into the table</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This Java segment issues a Transact-SQL INSERT statement to insert two rows into the Person table.</source>
          <target state="new">This Java segment issues a Transact-SQL INSERT statement to insert two rows into the Person table.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The general sequence is as follows:</source>
          <target state="new">The general sequence is as follows:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Generate a <ph id="ph1">`PreparedStatement`</ph> object by using the <ph id="ph2">`Connection`</ph> object.</source>
          <target state="new">Generate a <ph id="ph1">`PreparedStatement`</ph> object by using the <ph id="ph2">`Connection`</ph> object.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>We include the parameter <ph id="ph1">`Statement.RETURN_GENERATED_KEYS`</ph> so that later we can obtain the value that was automatically generated for the <bpt id="p1">**</bpt>id<ept id="p1">**</ept> key value.</source>
          <target state="new">We include the parameter <ph id="ph1">`Statement.RETURN_GENERATED_KEYS`</ph> so that later we can obtain the value that was automatically generated for the <bpt id="p1">**</bpt>id<ept id="p1">**</ept> key value.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`execute`</ph> method on the <ph id="ph2">`PreparedStatement`</ph> object.</source>
          <target state="new">Call the <ph id="ph1">`execute`</ph> method on the <ph id="ph2">`PreparedStatement`</ph> object.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Obtain the numeric value that was automatically generated for the primary key, by using the <ph id="ph1">`PreparedStatement`</ph> object.</source>
          <target state="new">Obtain the numeric value that was automatically generated for the primary key, by using the <ph id="ph1">`PreparedStatement`</ph> object.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This relates to the AUTO_INCREMENT specification on the <bpt id="p1">**</bpt>id<ept id="p1">**</ept> column in the Person table</source>
          <target state="new">This relates to the AUTO_INCREMENT specification on the <bpt id="p1">**</bpt>id<ept id="p1">**</ept> column in the Person table</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Copy-and-paste this short Java segment into the primary code sample where you see the comment <ph id="ph1">`// INSERT two rows into the table.`</ph>.</source>
          <target state="new">Copy-and-paste this short Java segment into the primary code sample where you see the comment <ph id="ph1">`// INSERT two rows into the table.`</ph>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>TRANSACTION and commit for an UPDATE</source>
          <target state="new">TRANSACTION and commit for an UPDATE</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following segment of Java code issues a Transact-SQL UPDATE statement to increase the <ph id="ph1">`age`</ph> value for every row in the person table.</source>
          <target state="new">The following segment of Java code issues a Transact-SQL UPDATE statement to increase the <ph id="ph1">`age`</ph> value for every row in the person table.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The general sequence is as follows:</source>
          <target state="new">The general sequence is as follows:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`setAutoCommit`</ph> method is called to prevent updates from being automatically committed in the database.</source>
          <target state="new">The <ph id="ph1">`setAutoCommit`</ph> method is called to prevent updates from being automatically committed in the database.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`executeUpdate`</ph> method is called to execute the UPDATE in the context of transaction.</source>
          <target state="new">The <ph id="ph1">`executeUpdate`</ph> method is called to execute the UPDATE in the context of transaction.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`commit`</ph> method is called to explicitly commit the transaction.</source>
          <target state="new">The <ph id="ph1">`commit`</ph> method is called to explicitly commit the transaction.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Copy-and-paste this short Java segment into the primary code sample where you see the comment <ph id="ph1">`// TRANSACTION and commit for an UPDATE.`</ph>.</source>
          <target state="new">Copy-and-paste this short Java segment into the primary code sample where you see the comment <ph id="ph1">`// TRANSACTION and commit for an UPDATE.`</ph>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>SELECT rows from a table</source>
          <target state="new">SELECT rows from a table</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This Java segment executes a Transact-SQL SELECT statement to see all the updated rows from the Person table.</source>
          <target state="new">This Java segment executes a Transact-SQL SELECT statement to see all the updated rows from the Person table.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The general sequence is as follows:</source>
          <target state="new">The general sequence is as follows:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Generate a <ph id="ph1">`Statement`</ph> object by using the <ph id="ph2">`Connection`</ph> object.</source>
          <target state="new">Generate a <ph id="ph1">`Statement`</ph> object by using the <ph id="ph2">`Connection`</ph> object.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Generate a <ph id="ph1">`ResultSet`</ph> object by using the <ph id="ph2">`Statement`</ph> object.</source>
          <target state="new">Generate a <ph id="ph1">`ResultSet`</ph> object by using the <ph id="ph2">`Statement`</ph> object.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Loop around a call to <ph id="ph1">`resultSet.next`</ph> to iterate through all the returned rows.</source>
          <target state="new">Loop around a call to <ph id="ph1">`resultSet.next`</ph> to iterate through all the returned rows.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Copy-and-paste this short Java segment into the primary code sample where you see the comment <ph id="ph1">`// SELECT rows from a table.`</ph>.</source>
          <target state="new">Copy-and-paste this short Java segment into the primary code sample where you see the comment <ph id="ph1">`// SELECT rows from a table.`</ph>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fc0117d02c467818fec4130c2fb91341de5a09d</xliffext:olfilehash>
  </header>
</xliff>