<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Redis Cache samples</source>
          <target state="new">Azure Redis Cache samples</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Azure Redis Cache</source>
          <target state="new">Learn how to use Azure Redis Cache</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Redis Cache samples</source>
          <target state="new">Azure Redis Cache samples</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic provides a list of Azure Redis Cache samples, covering scenarios such as connecting to a cache, reading and writing data to and from a cache, and using the ASP.NET Redis Cache providers.</source>
          <target state="new">This topic provides a list of Azure Redis Cache samples, covering scenarios such as connecting to a cache, reading and writing data to and from a cache, and using the ASP.NET Redis Cache providers.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Some of the samples are downloadable projects, and some provide step-by-step guidance and include code snippets but do not link to a downloadable project.</source>
          <target state="new">Some of the samples are downloadable projects, and some provide step-by-step guidance and include code snippets but do not link to a downloadable project.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Hello world samples</source>
          <target state="new">Hello world samples</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The samples in this section show the basics of connecting to an Azure Redis Cache instance and reading and writing data to the cache using a variety of languages and Redis clients.</source>
          <target state="new">The samples in this section show the basics of connecting to an Azure Redis Cache instance and reading and writing data to the cache using a variety of languages and Redis clients.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Hello world<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/HelloWorld)</ept> sample shows how to perform various cache operations using the <bpt id="p2">[</bpt>StackExchange.Redis<ept id="p2">](https://github.com/StackExchange/StackExchange.Redis)</ept> .NET client.</source>
          <target state="new">The <bpt id="p1">[</bpt>Hello world<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/HelloWorld)</ept> sample shows how to perform various cache operations using the <bpt id="p2">[</bpt>StackExchange.Redis<ept id="p2">](https://github.com/StackExchange/StackExchange.Redis)</ept> .NET client.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This sample shows how to:</source>
          <target state="new">This sample shows how to:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use various connection options</source>
          <target state="new">Use various connection options</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Read and write objects to and from the cache using synchronous and asynchronous operations</source>
          <target state="new">Read and write objects to and from the cache using synchronous and asynchronous operations</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use Redis MGET/MSET commands to return values of specified keys</source>
          <target state="new">Use Redis MGET/MSET commands to return values of specified keys</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Perform Redis transactional operations</source>
          <target state="new">Perform Redis transactional operations</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Work with Redis lists and sorted sets</source>
          <target state="new">Work with Redis lists and sorted sets</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Store .NET objects using JsonConvert serializers</source>
          <target state="new">Store .NET objects using JsonConvert serializers</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use Redis sets to implement tagging</source>
          <target state="new">Use Redis sets to implement tagging</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>StackExchange.Redis<ept id="p1">](https://github.com/StackExchange/StackExchange.Redis)</ept> documentation on github, and for more usage scenarios see the <bpt id="p2">[</bpt>StackExchange.Redis.Tests<ept id="p2">](https://github.com/StackExchange/StackExchange.Redis/tree/master/StackExchange.Redis.Tests)</ept> unit tests.</source>
          <target state="new">For more information, see the <bpt id="p1">[</bpt>StackExchange.Redis<ept id="p1">](https://github.com/StackExchange/StackExchange.Redis)</ept> documentation on github, and for more usage scenarios see the <bpt id="p2">[</bpt>StackExchange.Redis.Tests<ept id="p2">](https://github.com/StackExchange/StackExchange.Redis/tree/master/StackExchange.Redis.Tests)</ept> unit tests.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to use Azure Redis Cache with Python<ept id="p1">](cache-python-get-started.md)</ept> shows how to get started with Azure Redis Cache using Python and the <bpt id="p2">[</bpt>redis-py<ept id="p2">](https://github.com/andymccurdy/redis-py)</ept> client.</source>
          <target state="new"><bpt id="p1">[</bpt>How to use Azure Redis Cache with Python<ept id="p1">](cache-python-get-started.md)</ept> shows how to get started with Azure Redis Cache using Python and the <bpt id="p2">[</bpt>redis-py<ept id="p2">](https://github.com/andymccurdy/redis-py)</ept> client.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>PHP example<ept id="p1">](https://msdn.microsoft.com/library/azure/dn690470.aspx#PHPExample)</ept> shows you how to get started using Azure Redis Cache with PHP and the <bpt id="p2">[</bpt>predis<ept id="p2">](https://github.com/nrk/predis)</ept> client.</source>
          <target state="new">The <bpt id="p1">[</bpt>PHP example<ept id="p1">](https://msdn.microsoft.com/library/azure/dn690470.aspx#PHPExample)</ept> shows you how to get started using Azure Redis Cache with PHP and the <bpt id="p2">[</bpt>predis<ept id="p2">](https://github.com/nrk/predis)</ept> client.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Work with .NET objects in the cache<ept id="p1">](https://msdn.microsoft.com/library/azure/dn690521.aspx#Objects)</ept> shows you one way to serialize .NET objects so you can write them to and read them from an Azure Redis Cache instance.</source>
          <target state="new"><bpt id="p1">[</bpt>Work with .NET objects in the cache<ept id="p1">](https://msdn.microsoft.com/library/azure/dn690521.aspx#Objects)</ept> shows you one way to serialize .NET objects so you can write them to and read them from an Azure Redis Cache instance.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use Redis Cache as a Scale out Backplane for ASP.NET SignalR</source>
          <target state="new">Use Redis Cache as a Scale out Backplane for ASP.NET SignalR</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Use Redis Cache as a Scale out Backplane for ASP.NET SignalR<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/RedisAsSignalRBackplane)</ept> sample demonstrates how you can use Azure Redis Cache as a SignalR backplane.</source>
          <target state="new">The <bpt id="p1">[</bpt>Use Redis Cache as a Scale out Backplane for ASP.NET SignalR<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/RedisAsSignalRBackplane)</ept> sample demonstrates how you can use Azure Redis Cache as a SignalR backplane.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information about backplane, see <bpt id="p1">[</bpt>SignalR Scaleout with Redis<ept id="p1">](http://www.asp.net/signalr/overview/performance/scaleout-with-redis)</ept>.</source>
          <target state="new">For more information about backplane, see <bpt id="p1">[</bpt>SignalR Scaleout with Redis<ept id="p1">](http://www.asp.net/signalr/overview/performance/scaleout-with-redis)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Redis Cache customer query sample</source>
          <target state="new">Redis Cache customer query sample</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This sample demonstrates compares performance between accessing data from a cache and accessing data from persistence storage.</source>
          <target state="new">This sample demonstrates compares performance between accessing data from a cache and accessing data from persistence storage.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This sample has two projects.</source>
          <target state="new">This sample has two projects.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Demo how Redis Cache can improve performance by Caching data</source>
          <target state="new">Demo how Redis Cache can improve performance by Caching data</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Seed the Database and Cache for the demo</source>
          <target state="new">Seed the Database and Cache for the demo</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>ASP.NET Session State and Output Caching</source>
          <target state="new">ASP.NET Session State and Output Caching</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Use Azure Redis Cache to store ASP.NET SessionState and OutputCache<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/SessionState_OutputCaching)</ept> sample demonstrates how you to use Azure Redis Cache to store ASP.NET Session and Output Cache using the SessionState and OutputCache providers for Redis.</source>
          <target state="new">The <bpt id="p1">[</bpt>Use Azure Redis Cache to store ASP.NET SessionState and OutputCache<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/SessionState_OutputCaching)</ept> sample demonstrates how you to use Azure Redis Cache to store ASP.NET Session and Output Cache using the SessionState and OutputCache providers for Redis.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Manage Azure Redis Cache with MAML</source>
          <target state="new">Manage Azure Redis Cache with MAML</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Manage Azure Redis Cache using Azure Management Libraries<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/ManageCacheUsingMAML)</ept> sample demonstrates how can you use Azure Management Libraries to manage - (Create/ Update/ delete) your Cache.</source>
          <target state="new">The <bpt id="p1">[</bpt>Manage Azure Redis Cache using Azure Management Libraries<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/ManageCacheUsingMAML)</ept> sample demonstrates how can you use Azure Management Libraries to manage - (Create/ Update/ delete) your Cache.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Custom monitoring sample</source>
          <target state="new">Custom monitoring sample</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Access Redis Cache Monitoring data<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/CustomMonitoring)</ept> sample demonstrates how you can access monitoring data for your Azure Redis Cache outside of the Azure  preview portal.</source>
          <target state="new">The <bpt id="p1">[</bpt>Access Redis Cache Monitoring data<ept id="p1">](https://github.com/rustd/RedisSamples/tree/master/CustomMonitoring)</ept> sample demonstrates how you can access monitoring data for your Azure Redis Cache outside of the Azure  preview portal.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A Twitter-style clone written using PHP and Redis</source>
          <target state="new">A Twitter-style clone written using PHP and Redis</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Retwis<ept id="p1">](https://github.com/SyntaxC4-MSFT/retwis)</ept> sample is the Redis Hello World.</source>
          <target state="new">The <bpt id="p1">[</bpt>Retwis<ept id="p1">](https://github.com/SyntaxC4-MSFT/retwis)</ept> sample is the Redis Hello World.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It is a minimal Twitter-style social network clone written using Redis and PHP using the <bpt id="p1">[</bpt>Predis<ept id="p1">](https://github.com/nrk/predis)</ept> client.</source>
          <target state="new">It is a minimal Twitter-style social network clone written using Redis and PHP using the <bpt id="p1">[</bpt>Predis<ept id="p1">](https://github.com/nrk/predis)</ept> client.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The source code is designed to be very simple and at the same time to show different Redis data structures.</source>
          <target state="new">The source code is designed to be very simple and at the same time to show different Redis data structures.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Bandwidth monitor</source>
          <target state="new">Bandwidth monitor</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Bandwidth monitor<ept id="p1">](https://github.com/JonCole/SampleCode/tree/master/BandWidthMonitor)</ept> sample allows you to monitor the bandwidth used on the client.</source>
          <target state="new">The <bpt id="p1">[</bpt>Bandwidth monitor<ept id="p1">](https://github.com/JonCole/SampleCode/tree/master/BandWidthMonitor)</ept> sample allows you to monitor the bandwidth used on the client.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To measure the bandwidth, run the sample on the cache client machine, make calls to the cache, and observe the bandwidth reported by the bandwidth monitor sample.</source>
          <target state="new">To measure the bandwidth, run the sample on the cache client machine, make calls to the cache, and observe the bandwidth reported by the bandwidth monitor sample.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57cc804fff3ee7f6816d31181f18ab90ddbd03b0</xliffext:olfilehash>
  </header>
</xliff>