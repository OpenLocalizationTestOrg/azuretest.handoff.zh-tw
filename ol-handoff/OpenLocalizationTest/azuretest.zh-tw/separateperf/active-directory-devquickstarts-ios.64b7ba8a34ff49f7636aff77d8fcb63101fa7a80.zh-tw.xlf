<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure AD iOS Getting Started | Microsoft Azure</source>
          <target state="new">Azure AD iOS Getting Started | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to build an iOS application that integrates with Azure AD for sign in and calls Azure AD protected APIs using OAuth.</source>
          <target state="new">How to build an iOS application that integrates with Azure AD for sign in and calls Azure AD protected APIs using OAuth.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Integrate Azure AD into an iOS App</source>
          <target state="new">Integrate Azure AD into an iOS App</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure AD provides the Active Directory Authentication Library, or ADAL, for iOS clients that need to access protected resources.</source>
          <target state="new">Azure AD provides the Active Directory Authentication Library, or ADAL, for iOS clients that need to access protected resources.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>ADAL’s sole purpose in life is to make it easy for your app to get access tokens.</source>
          <target state="new">ADAL’s sole purpose in life is to make it easy for your app to get access tokens.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To demonstrate just how easy it is, here we’ll build a Objective C To-Do List application that:</source>
          <target state="new">To demonstrate just how easy it is, here we’ll build a Objective C To-Do List application that:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets access tokens for calling the Azure AD Graph API using the <bpt id="p1">[</bpt>OAuth 2.0 authentication protocol<ept id="p1">](https://msdn.microsoft.com/library/azure/dn645545.aspx)</ept>.</source>
          <target state="new">Gets access tokens for calling the Azure AD Graph API using the <bpt id="p1">[</bpt>OAuth 2.0 authentication protocol<ept id="p1">](https://msdn.microsoft.com/library/azure/dn645545.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Searches a directory for users with a given alias.</source>
          <target state="new">Searches a directory for users with a given alias.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To build the complete working application, you’ll need to:</source>
          <target state="new">To build the complete working application, you’ll need to:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Register your application with Azure AD.</source>
          <target state="new">Register your application with Azure AD.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Install &amp; Configure ADAL.</source>
          <target state="new">Install &amp; Configure ADAL.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use ADAL to get tokens from Azure AD.</source>
          <target state="new">Use ADAL to get tokens from Azure AD.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To get started, <bpt id="p1">[</bpt>download the app skeleton<ept id="p1">](https://github.com/AzureADQuickStarts/NativeClient-iOS/archive/skeleton.zip)</ept> or <bpt id="p2">[</bpt>download the completed sample<ept id="p2">](https://github.com/AzureADQuickStarts/NativeClient-iOS/archive/complete.zip)</ept>.</source>
          <target state="new">To get started, <bpt id="p1">[</bpt>download the app skeleton<ept id="p1">](https://github.com/AzureADQuickStarts/NativeClient-iOS/archive/skeleton.zip)</ept> or <bpt id="p2">[</bpt>download the completed sample<ept id="p2">](https://github.com/AzureADQuickStarts/NativeClient-iOS/archive/complete.zip)</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You'll also need an Azure AD tenant in which you can create users and register an application.</source>
          <target state="new">You'll also need an Azure AD tenant in which you can create users and register an application.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you don't already have a tenant, <bpt id="p1">[</bpt>learn how to get one<ept id="p1">](active-directory-howto-tenant.md)</ept>.</source>
          <target state="new">If you don't already have a tenant, <bpt id="p1">[</bpt>learn how to get one<ept id="p1">](active-directory-howto-tenant.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>1. Determine what your Redirect URI will be for iOS</source>
          <target state="new">1. Determine what your Redirect URI will be for iOS</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In order to securely launch your applications in certain SSO scenarios we require that you create a <bpt id="p1">**</bpt>Redirect URI<ept id="p1">**</ept> in a particular format.</source>
          <target state="new">In order to securely launch your applications in certain SSO scenarios we require that you create a <bpt id="p1">**</bpt>Redirect URI<ept id="p1">**</ept> in a particular format.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A Redirect URI is used to ensure that the tokens return to the correct application that asked for them.</source>
          <target state="new">A Redirect URI is used to ensure that the tokens return to the correct application that asked for them.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The iOS format for a Redirect URI is:</source>
          <target state="new">The iOS format for a Redirect URI is:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>aap-scheme<ept id="p1">**</ept> - This is registered in your XCode project.</source>
          <target state="new"><bpt id="p1">**</bpt>aap-scheme<ept id="p1">**</ept> - This is registered in your XCode project.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It is how other applications can call you.</source>
          <target state="new">It is how other applications can call you.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can find this under Info.plist -&gt; URL types -&gt; URL Identifier.</source>
          <target state="new">You can find this under Info.plist -&gt; URL types -&gt; URL Identifier.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You should create one if you don't already have one or more configured.</source>
          <target state="new">You should create one if you don't already have one or more configured.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>bundle-id<ept id="p1">**</ept> - This is the Bundle Identifier found under "identity" un your project settings in XCode.</source>
          <target state="new"><bpt id="p1">**</bpt>bundle-id<ept id="p1">**</ept> - This is the Bundle Identifier found under "identity" un your project settings in XCode.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An example for this QuickStart code would be: <bpt id="p1">***</bpt>msquickstart://com.microsoft.azureactivedirectory.samples.graph.QuickStart<ept id="p1">***</ept></source>
          <target state="new">An example for this QuickStart code would be: <bpt id="p1">***</bpt>msquickstart://com.microsoft.azureactivedirectory.samples.graph.QuickStart<ept id="p1">***</ept></target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>2. Register the DirectorySearcher Application</source>
          <target state="new">2. Register the DirectorySearcher Application</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To enable your app to get tokens, you'll first need to register it in your Azure AD tenant and grant it permission to access the Azure AD Graph API:</source>
          <target state="new">To enable your app to get tokens, you'll first need to register it in your Azure AD tenant and grant it permission to access the Azure AD Graph API:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Sign into the Azure Management Portal</source>
          <target state="new">Sign into the Azure Management Portal</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the left hand nav, click on <bpt id="p1">**</bpt>Active Directory<ept id="p1">**</ept></source>
          <target state="new">In the left hand nav, click on <bpt id="p1">**</bpt>Active Directory<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Select a tenant in which to register the application.</source>
          <target state="new">Select a tenant in which to register the application.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Applications<ept id="p1">**</ept> tab, and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> in the bottom drawer.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Applications<ept id="p1">**</ept> tab, and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> in the bottom drawer.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Follow the prompts and create a new <bpt id="p1">**</bpt>Native Client Application<ept id="p1">**</ept>.</source>
          <target state="new">Follow the prompts and create a new <bpt id="p1">**</bpt>Native Client Application<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> of the application will describe your application to end-users</source>
          <target state="new">The <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> of the application will describe your application to end-users</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Redirect Uri<ept id="p1">**</ept> is a scheme and string combination that Azure AD will use to return token responses.</source>
          <target state="new">The <bpt id="p1">**</bpt>Redirect Uri<ept id="p1">**</ept> is a scheme and string combination that Azure AD will use to return token responses.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Enter a value specific to your application based on the information above.</source>
          <target state="new">Enter a value specific to your application based on the information above.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Once you've completed registration, AAD will assign your app a unique client identifier.</source>
          <target state="new">Once you've completed registration, AAD will assign your app a unique client identifier.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You'll need this value in the next sections, so copy it from the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab.</source>
          <target state="new">You'll need this value in the next sections, so copy it from the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Also in <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab, locate the "Permissions to Other Applications" section.</source>
          <target state="new">Also in <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab, locate the "Permissions to Other Applications" section.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For the "Azure Active Directory" application, add the <bpt id="p1">**</bpt>Access Your Organization's Directory<ept id="p1">**</ept> permission under <bpt id="p2">**</bpt>Delegated Permissions<ept id="p2">**</ept>.</source>
          <target state="new">For the "Azure Active Directory" application, add the <bpt id="p1">**</bpt>Access Your Organization's Directory<ept id="p1">**</ept> permission under <bpt id="p2">**</bpt>Delegated Permissions<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This will enable your application to query the Graph API for users.</source>
          <target state="new">This will enable your application to query the Graph API for users.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>3. Install &amp; Configure ADAL</source>
          <target state="new">3. Install &amp; Configure ADAL</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Now that you have an application in Azure AD, you can install ADAL and write your identity-related code.</source>
          <target state="new">Now that you have an application in Azure AD, you can install ADAL and write your identity-related code.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In order for ADAL to be able to communicate with Azure AD, you need to provide it with some information about your app registration.</source>
          <target state="new">In order for ADAL to be able to communicate with Azure AD, you need to provide it with some information about your app registration.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Begin by adding ADAL to the DirectorySearcher project using Cocapods.</source>
          <target state="new">Begin by adding ADAL to the DirectorySearcher project using Cocapods.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Add the following to this podfile:</source>
          <target state="new">Add the following to this podfile:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Now load the podfile using cocoapods.</source>
          <target state="new">Now load the podfile using cocoapods.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This will create a new XCode Workspace you will load.</source>
          <target state="new">This will create a new XCode Workspace you will load.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the QuickStart project, open the plist file <ph id="ph1">`settings.plist`</ph>.</source>
          <target state="new">In the QuickStart project, open the plist file <ph id="ph1">`settings.plist`</ph>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Replace the values of the elements in the section to reflect the values you input into the Azure Portal.</source>
          <target state="new">Replace the values of the elements in the section to reflect the values you input into the Azure Portal.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Your code will reference these values whenever it uses ADAL.</source>
          <target state="new">Your code will reference these values whenever it uses ADAL.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`tenant`</ph> is the domain of your Azure AD tenant, e.g. contoso.onmicrosoft.com</source>
          <target state="new">The <ph id="ph1">`tenant`</ph> is the domain of your Azure AD tenant, e.g. contoso.onmicrosoft.com</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`clientId`</ph> is the clientId of your application you copied from the portal.</source>
          <target state="new">The <ph id="ph1">`clientId`</ph> is the clientId of your application you copied from the portal.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`redirectUri`</ph> is the redirect url you registered in the portal.</source>
          <target state="new">The <ph id="ph1">`redirectUri`</ph> is the redirect url you registered in the portal.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>4.  Use ADAL to Get Tokens from AAD</source>
          <target state="new">4.  Use ADAL to Get Tokens from AAD</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The basic principle behind ADAL is that whenever your app needs an access token, it simply calls a completionBlock <ph id="ph1">`+(void) getToken : `</ph>, and ADAL does the rest.</source>
          <target state="new">The basic principle behind ADAL is that whenever your app needs an access token, it simply calls a completionBlock <ph id="ph1">`+(void) getToken : `</ph>, and ADAL does the rest.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`QuickStart`</ph> project, open <ph id="ph2">`GraphAPICaller.m`</ph> and locate the <ph id="ph3">`// TODO: getToken for generic Web API flows. Returns a token with no additional parameters provided.`</ph> comment near the top.</source>
          <target state="new">In the <ph id="ph1">`QuickStart`</ph> project, open <ph id="ph2">`GraphAPICaller.m`</ph> and locate the <ph id="ph3">`// TODO: getToken for generic Web API flows. Returns a token with no additional parameters provided.`</ph> comment near the top.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This is where you pass ADAL the coordinates through a CompletionBlock to communicate with Azure AD and tell it how to cache tokens.</source>
          <target state="new">This is where you pass ADAL the coordinates through a CompletionBlock to communicate with Azure AD and tell it how to cache tokens.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Now we need to use this token to search for users in the graph.</source>
          <target state="new">Now we need to use this token to search for users in the graph.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Find the <ph id="ph1">`// TODO: implement SearchUsersList`</ph> commentThis method makes a GET request to the Azure AD Graph API to query for users whose UPN begins with the given search term.</source>
          <target state="new">Find the <ph id="ph1">`// TODO: implement SearchUsersList`</ph> commentThis method makes a GET request to the Azure AD Graph API to query for users whose UPN begins with the given search term.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>But in order to query the Graph API, you need to include an access_token in the <ph id="ph1">`Authorization`</ph> header of the request - this is where ADAL comes in.</source>
          <target state="new">But in order to query the Graph API, you need to include an access_token in the <ph id="ph1">`Authorization`</ph> header of the request - this is where ADAL comes in.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When your app requests a token by calling <ph id="ph1">`getToken(...)`</ph>, ADAL will attempt to return a token without asking the user for credentials.</source>
          <target state="new">When your app requests a token by calling <ph id="ph1">`getToken(...)`</ph>, ADAL will attempt to return a token without asking the user for credentials.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If ADAL determines that the user needs to sign in to get a token, it will display a login dialog, collect the user's credentials, and return a token upon successful authentication.</source>
          <target state="new">If ADAL determines that the user needs to sign in to get a token, it will display a login dialog, collect the user's credentials, and return a token upon successful authentication.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If ADAL is unable to return a token for any reason, it will throw an <ph id="ph1">`AdalException`</ph>.</source>
          <target state="new">If ADAL is unable to return a token for any reason, it will throw an <ph id="ph1">`AdalException`</ph>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Notice that the <ph id="ph1">`AuthenticationResult`</ph> object contains a <ph id="ph2">`tokenCacheStoreItem`</ph> object that can be used to collect information your app may need.</source>
          <target state="new">Notice that the <ph id="ph1">`AuthenticationResult`</ph> object contains a <ph id="ph2">`tokenCacheStoreItem`</ph> object that can be used to collect information your app may need.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In the QuickStart, <ph id="ph1">`tokenCacheStoreItem`</ph> is used to determine if authenitcation has already occurred.</source>
          <target state="new">In the QuickStart, <ph id="ph1">`tokenCacheStoreItem`</ph> is used to determine if authenitcation has already occurred.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Step 5: Build and Run the application</source>
          <target state="new">Step 5: Build and Run the application</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Congratulations!</source>
          <target state="new">Congratulations!</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You now have a working iOS application that has the ability to authenticate users, securely call Web APIs using OAuth 2.0, and get basic information about the user.</source>
          <target state="new">You now have a working iOS application that has the ability to authenticate users, securely call Web APIs using OAuth 2.0, and get basic information about the user.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you haven't already, now is the time to populate your tenant with some users.</source>
          <target state="new">If you haven't already, now is the time to populate your tenant with some users.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Run your QuickStart app, and sign in with one of those users.</source>
          <target state="new">Run your QuickStart app, and sign in with one of those users.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Search for other users based on their UPN.</source>
          <target state="new">Search for other users based on their UPN.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Close the app, and re-run it.</source>
          <target state="new">Close the app, and re-run it.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Notice how the user's session remains intact.</source>
          <target state="new">Notice how the user's session remains intact.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>ADAL makes it easy to incorporate all of these common identity features into your application.</source>
          <target state="new">ADAL makes it easy to incorporate all of these common identity features into your application.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It takes care of all the dirty work for you - cache management, OAuth protocol support, presenting the user with a login UI, refreshing expired tokens, and more.</source>
          <target state="new">It takes care of all the dirty work for you - cache management, OAuth protocol support, presenting the user with a login UI, refreshing expired tokens, and more.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>All you really need to know is a single API call, <ph id="ph1">`getToken`</ph>.</source>
          <target state="new">All you really need to know is a single API call, <ph id="ph1">`getToken`</ph>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For reference, the completed sample (without your configuration values) is provided <bpt id="p1">[</bpt>here<ept id="p1">](https://github.com/AzureADQuickStarts/NativeClient-iOS/archive/complete.zip)</ept>.</source>
          <target state="new">For reference, the completed sample (without your configuration values) is provided <bpt id="p1">[</bpt>here<ept id="p1">](https://github.com/AzureADQuickStarts/NativeClient-iOS/archive/complete.zip)</ept>.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can now move on to additional scenarios.</source>
          <target state="new">You can now move on to additional scenarios.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You may want to try:</source>
          <target state="new">You may want to try:</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Secure a Node.JS Web API with Azure AD &gt;&gt;</source>
          <target state="new">Secure a Node.JS Web API with Azure AD &gt;&gt;</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c8abd64858b4522a1065fff3d7500b562e1bf61</xliffext:olfilehash>
  </header>
</xliff>