<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Role Based Access Control in Mobile Services and Azure Active Directory (Windows Store) | Microsoft Azure</source>
          <target state="new">Role Based Access Control in Mobile Services and Azure Active Directory (Windows Store) | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to control access based on Azure Active Directory roles in your Windows Store application.</source>
          <target state="new">Learn how to control access based on Azure Active Directory roles in your Windows Store application.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Role Based Access Control in Mobile Services and Azure Active Directory</source>
          <target state="new">Role Based Access Control in Mobile Services and Azure Active Directory</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Roles-based access control (RBAC) is the practice of assigning permissions to roles that your users can hold, nicely defining boundaries on what certain classes of users can and cannot do.</source>
          <target state="new">Roles-based access control (RBAC) is the practice of assigning permissions to roles that your users can hold, nicely defining boundaries on what certain classes of users can and cannot do.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This tutorial will walk you through how to add basic RBAC to Azure Mobile Services.</source>
          <target state="new">This tutorial will walk you through how to add basic RBAC to Azure Mobile Services.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This tutorial will demonstrate role based access control, checking each user's membership to a Sales group defined in the Azure Active Directory (AAD).</source>
          <target state="new">This tutorial will demonstrate role based access control, checking each user's membership to a Sales group defined in the Azure Active Directory (AAD).</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The access check will be done with JavaScript in the mobile service backend using the <bpt id="p1">[</bpt><ept id="p1">Graph API]</ept> for Azure Active Directory.</source>
          <target state="new">The access check will be done with JavaScript in the mobile service backend using the <bpt id="p1">[</bpt><ept id="p1">Graph API]</ept> for Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Only users who belong to the Sales role will be allowed to query the data.</source>
          <target state="new">Only users who belong to the Sales role will be allowed to query the data.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The intent of this tutorial is to extend your knowledge of authentication to include authorization practices.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The intent of this tutorial is to extend your knowledge of authentication to include authorization practices.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It is expected that you first complete the <bpt id="p1">[</bpt><ept id="p1">Add authentication to your Mobile Service app]</ept> tutorial using the Azure Active Directory authentication provider.</source>
          <target state="new">It is expected that you first complete the <bpt id="p1">[</bpt><ept id="p1">Add authentication to your Mobile Service app]</ept> tutorial using the Azure Active Directory authentication provider.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This tutorial continues to update the TodoItem application used in the <bpt id="p1">[</bpt><ept id="p1">Add authentication to your Mobile Service app]</ept> tutorial.</source>
          <target state="new">This tutorial continues to update the TodoItem application used in the <bpt id="p1">[</bpt><ept id="p1">Add authentication to your Mobile Service app]</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This tutorial requires the following:</source>
          <target state="new">This tutorial requires the following:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013 running on Windows 8.1.</source>
          <target state="new">Visual Studio 2013 running on Windows 8.1.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Completion of the <bpt id="p1">[</bpt><ept id="p1">Add authentication to your Mobile Service app]</ept> tutorial using the Azure Active Directory authentication provider.</source>
          <target state="new">Completion of the <bpt id="p1">[</bpt><ept id="p1">Add authentication to your Mobile Service app]</ept> tutorial using the Azure Active Directory authentication provider.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Completion of the <bpt id="p1">[</bpt><ept id="p1">Store Server Scripts]</ept> tutorial to be familiar with using a Git repository to store server scripts.</source>
          <target state="new">Completion of the <bpt id="p1">[</bpt><ept id="p1">Store Server Scripts]</ept> tutorial to be familiar with using a Git repository to store server scripts.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Create a Sales group with membership</source>
          <target state="new">Create a Sales group with membership</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Generate a key for the Integrated Application</source>
          <target state="new">Generate a key for the Integrated Application</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>During the <bpt id="p1">[</bpt><ept id="p1">Add authentication to your Mobile Service app]</ept> tutorial, you created a registration for the integrated application when you completed the <bpt id="p2">[</bpt><ept id="p2">Register to use an Azure Active Directory Login]</ept> step.</source>
          <target state="new">During the <bpt id="p1">[</bpt><ept id="p1">Add authentication to your Mobile Service app]</ept> tutorial, you created a registration for the integrated application when you completed the <bpt id="p2">[</bpt><ept id="p2">Register to use an Azure Active Directory Login]</ept> step.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In this section you generate a key to be used when reading directory information with that integrated application's client ID.</source>
          <target state="new">In this section you generate a key to be used when reading directory information with that integrated application's client ID.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you went through the <bpt id="p1">[</bpt><ept id="p1">Accessing Azure Active Directory Graph Information]</ept> tutorial, you have already completed this step and can skip this section.</source>
          <target state="new">If you went through the <bpt id="p1">[</bpt><ept id="p1">Accessing Azure Active Directory Graph Information]</ept> tutorial, you have already completed this step and can skip this section.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add a shared script to the mobile service that checks membership</source>
          <target state="new">Add a shared script to the mobile service that checks membership</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this section you will use Git to deploy a shared script file named <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> to your mobile service.</source>
          <target state="new">In this section you will use Git to deploy a shared script file named <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> to your mobile service.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This shared script file will contain the functions that use the <bpt id="p1">[</bpt><ept id="p1">Graph API]</ept> to check the group membership of the user.</source>
          <target state="new">This shared script file will contain the functions that use the <bpt id="p1">[</bpt><ept id="p1">Graph API]</ept> to check the group membership of the user.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you are not familiar with deploying scripts to your mobile service with Git, please review the <bpt id="p1">[</bpt><ept id="p1">Store Server Scripts]</ept> tutorial before completing this section.</source>
          <target state="new">If you are not familiar with deploying scripts to your mobile service with Git, please review the <bpt id="p1">[</bpt><ept id="p1">Store Server Scripts]</ept> tutorial before completing this section.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create a new script file named <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> in the <bpt id="p2">*</bpt>./service/shared/<ept id="p2">*</ept> directory of the local repository for your mobile service.</source>
          <target state="new">Create a new script file named <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> in the <bpt id="p2">*</bpt>./service/shared/<ept id="p2">*</ept> directory of the local repository for your mobile service.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Add the following script to the top of the file that defines the <ph id="ph1">`getAADToken`</ph> function.</source>
          <target state="new">Add the following script to the top of the file that defines the <ph id="ph1">`getAADToken`</ph> function.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Given the <bpt id="p1">*</bpt>tenant_domain<ept id="p1">*</ept>, integrated application <bpt id="p2">*</bpt>client id<ept id="p2">*</ept>, and application <bpt id="p3">*</bpt>key<ept id="p3">*</ept>, this function provides a Graph access token used for reading directory information.</source>
          <target state="new">Given the <bpt id="p1">*</bpt>tenant_domain<ept id="p1">*</ept>, integrated application <bpt id="p2">*</bpt>client id<ept id="p2">*</ept>, and application <bpt id="p3">*</bpt>key<ept id="p3">*</ept>, this function provides a Graph access token used for reading directory information.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> You should cache the token instead of creating a new one with each access check.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> You should cache the token instead of creating a new one with each access check.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Then refresh the cache when attempts to use the token result in a 401 Authentication_ExpiredToken response as noted in the <bpt id="p1">[</bpt><ept id="p1">Graph API Error Reference]</ept>.</source>
          <target state="new">Then refresh the cache when attempts to use the token result in a 401 Authentication_ExpiredToken response as noted in the <bpt id="p1">[</bpt><ept id="p1">Graph API Error Reference]</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This isn't demonstrated in the code below for simplicity sake but, it will alleviate extra network traffic against your Active Directory.</source>
          <target state="new">This isn't demonstrated in the code below for simplicity sake but, it will alleviate extra network traffic against your Active Directory.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add the following code to <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> to define the <ph id="ph1">`getGroupId`</ph> function.</source>
          <target state="new">Add the following code to <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> to define the <ph id="ph1">`getGroupId`</ph> function.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This function uses the access token to get the group id based on the group name used in a filter.</source>
          <target state="new">This function uses the access token to get the group id based on the group name used in a filter.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This code looks up the Active Directory group by name.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This code looks up the Active Directory group by name.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In many cases it may be a better practice to store the group id as a mobile service app setting and just use that group id.</source>
          <target state="new">In many cases it may be a better practice to store the group id as a mobile service app setting and just use that group id.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This is because the group name may change but, the id stays the same.</source>
          <target state="new">This is because the group name may change but, the id stays the same.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>However, with a group name change there is usually at least a change in the scope of the role that may also require an update to the mobile service code.</source>
          <target state="new">However, with a group name change there is usually at least a change in the scope of the role that may also require an update to the mobile service code.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Add the following code to <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> to define the <ph id="ph1">`isMemberOf`</ph> function that calls the <bpt id="p2">[</bpt><ept id="p2">IsMemberOf]</ept> endpoint of the Graph REST API.</source>
          <target state="new">Add the following code to <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> to define the <ph id="ph1">`isMemberOf`</ph> function that calls the <bpt id="p2">[</bpt><ept id="p2">IsMemberOf]</ept> endpoint of the Graph REST API.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This function is a thin wrapper around the <bpt id="p1">[</bpt><ept id="p1">IsMemberOf]</ept> endpoint of the Graph REST API.</source>
          <target state="new">This function is a thin wrapper around the <bpt id="p1">[</bpt><ept id="p1">IsMemberOf]</ept> endpoint of the Graph REST API.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It uses the Graph access token to check if the user's directory object id has membership in the group based on the group id.</source>
          <target state="new">It uses the Graph access token to check if the user's directory object id has membership in the group based on the group id.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Add the following exported <ph id="ph1">`checkGroupMembership`</ph> function to <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> .</source>
          <target state="new">Add the following exported <ph id="ph1">`checkGroupMembership`</ph> function to <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> .</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This function wraps the use of the other script functions and is exported from the shared script to be called by other scripts to perform the actual access checks.</source>
          <target state="new">This function wraps the use of the other script functions and is exported from the shared script to be called by other scripts to perform the actual access checks.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Given the mobile service user object, and the group id, the script will retrieve the Azure Active Directory object id for the user's identity and verify membership to the group.</source>
          <target state="new">Given the mobile service user object, and the group id, the script will retrieve the Azure Active Directory object id for the user's identity and verify membership to the group.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Save your changes to <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept>.</source>
          <target state="new">Save your changes to <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Add role based access checking to the database operations</source>
          <target state="new">Add role based access checking to the database operations</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When you completed the <bpt id="p1">[</bpt><ept id="p1">Add authentication to your Mobile Service app]</ept> tutorial, you should have already set the table operations to require authentication as shown below.</source>
          <target state="new">When you completed the <bpt id="p1">[</bpt><ept id="p1">Add authentication to your Mobile Service app]</ept> tutorial, you should have already set the table operations to require authentication as shown below.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>![][3]</source>
          <target state="new">![][3]</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>With each database operation requiring authentication, we can add scripts that use the user object for access checks.</source>
          <target state="new">With each database operation requiring authentication, we can add scripts that use the user object for access checks.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following steps demonstrate how to deploy role based access control using scripts to each table operation in your mobile service.</source>
          <target state="new">The following steps demonstrate how to deploy role based access control using scripts to each table operation in your mobile service.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A script, that uses the shared <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> script, is executed for each table operation.</source>
          <target state="new">A script, that uses the shared <bpt id="p1">*</bpt>rbac.js<ept id="p1">*</ept> script, is executed for each table operation.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Add a new script file named <bpt id="p1">*</bpt>todoitem.insert.js<ept id="p1">*</ept> to the <bpt id="p2">*</bpt>./service/table/<ept id="p2">*</ept> directory in the local Git repository for your mobile service.</source>
          <target state="new">Add a new script file named <bpt id="p1">*</bpt>todoitem.insert.js<ept id="p1">*</ept> to the <bpt id="p2">*</bpt>./service/table/<ept id="p2">*</ept> directory in the local Git repository for your mobile service.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Paste the following script into that file.</source>
          <target state="new">Paste the following script into that file.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Add a new script file named <bpt id="p1">*</bpt>todoitem.read.js<ept id="p1">*</ept> to the <bpt id="p2">*</bpt>./service/table/<ept id="p2">*</ept> directory in the local Git repository for your mobile service.</source>
          <target state="new">Add a new script file named <bpt id="p1">*</bpt>todoitem.read.js<ept id="p1">*</ept> to the <bpt id="p2">*</bpt>./service/table/<ept id="p2">*</ept> directory in the local Git repository for your mobile service.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Paste the following script into that file.</source>
          <target state="new">Paste the following script into that file.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Add a new script file named <bpt id="p1">*</bpt>todoitem.update.js<ept id="p1">*</ept> to the <bpt id="p2">*</bpt>./service/table/<ept id="p2">*</ept> directory in the local Git repository for your mobile service.</source>
          <target state="new">Add a new script file named <bpt id="p1">*</bpt>todoitem.update.js<ept id="p1">*</ept> to the <bpt id="p2">*</bpt>./service/table/<ept id="p2">*</ept> directory in the local Git repository for your mobile service.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Paste the following script into that file.</source>
          <target state="new">Paste the following script into that file.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Add a new script file named <bpt id="p1">*</bpt>todoitem.delete.js<ept id="p1">*</ept> to the <bpt id="p2">*</bpt>./service/table/<ept id="p2">*</ept> directory in the local Git repository for your mobile service.</source>
          <target state="new">Add a new script file named <bpt id="p1">*</bpt>todoitem.delete.js<ept id="p1">*</ept> to the <bpt id="p2">*</bpt>./service/table/<ept id="p2">*</ept> directory in the local Git repository for your mobile service.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Paste the following script into that file.</source>
          <target state="new">Paste the following script into that file.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In the command-line interface to your Git repository, add tracking for the script files you added by executing the following command.</source>
          <target state="new">In the command-line interface to your Git repository, add tracking for the script files you added by executing the following command.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In the command-line interface to your Git repository, commit the updates by executing the following command.</source>
          <target state="new">In the command-line interface to your Git repository, commit the updates by executing the following command.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In the command-line interface to your Git repository, deploy the updates to your local Git repository to the mobile service by executing the following command.</source>
          <target state="new">In the command-line interface to your Git repository, deploy the updates to your local Git repository to the mobile service by executing the following command.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This command assumes that you made the updates in the <bpt id="p1">*</bpt>master<ept id="p1">*</ept> branch.</source>
          <target state="new">This command assumes that you made the updates in the <bpt id="p1">*</bpt>master<ept id="p1">*</ept> branch.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt><ept id="p1">Azure Management Portal]</ept> you should be able to navigate to the table operations for the mobile service and see the updates in place as shown below.</source>
          <target state="new">In the <bpt id="p1">[</bpt><ept id="p1">Azure Management Portal]</ept> you should be able to navigate to the table operations for the mobile service and see the updates in place as shown below.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>![][4]</source>
          <target state="new">![][4]</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Test the client's access</source>
          <target state="new">Test the client's access</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ea32e684280cb4e8e2864f01ca7d11d3c475ace</xliffext:olfilehash>
  </header>
</xliff>