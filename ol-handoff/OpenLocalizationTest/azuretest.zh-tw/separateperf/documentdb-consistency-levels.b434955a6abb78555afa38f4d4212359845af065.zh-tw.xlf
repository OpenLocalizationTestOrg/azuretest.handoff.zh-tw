<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Consistency levels in DocumentDB | Microsoft Azure</source>
          <target state="new">Consistency levels in DocumentDB | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>DocumentDB has four consistency levels with associated performance levels to help application developers make predictable consistency-availability-latency trade-offs.</source>
          <target state="new">DocumentDB has four consistency levels with associated performance levels to help application developers make predictable consistency-availability-latency trade-offs.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Using consistency levels to maximize availability and performance in DocumentDB</source>
          <target state="new">Using consistency levels to maximize availability and performance in DocumentDB</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Developers are often faced with the challenge of choosing between the two extremes of strong and eventual consistency.</source>
          <target state="new">Developers are often faced with the challenge of choosing between the two extremes of strong and eventual consistency.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The reality is that there are multiple consistency click-stops between these two extremes.</source>
          <target state="new">The reality is that there are multiple consistency click-stops between these two extremes.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In most real world scenarios, applications benefit from making fine grained trade-offs between consistency, availability, and latency.</source>
          <target state="new">In most real world scenarios, applications benefit from making fine grained trade-offs between consistency, availability, and latency.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DocumentDB offers four well-defined consistency levels with associated performance levels.</source>
          <target state="new">DocumentDB offers four well-defined consistency levels with associated performance levels.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This allows application developers to make predictable consistency-availability-latency trade-offs.</source>
          <target state="new">This allows application developers to make predictable consistency-availability-latency trade-offs.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>All system resources, including database accounts, databases, collections, users, and permissions are always strongly consistent for reads and queries.</source>
          <target state="new">All system resources, including database accounts, databases, collections, users, and permissions are always strongly consistent for reads and queries.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The consistency levels apply only to the user defined resources.</source>
          <target state="new">The consistency levels apply only to the user defined resources.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For queries and read operations on user defined resources, including documents, attachments, stored procedures, triggers, and UDFs, DocumentDB offers four distinct consistency levels:</source>
          <target state="new">For queries and read operations on user defined resources, including documents, attachments, stored procedures, triggers, and UDFs, DocumentDB offers four distinct consistency levels:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Strong</source>
          <target state="new">Strong</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Bounded staleness</source>
          <target state="new">Bounded staleness</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Session</source>
          <target state="new">Session</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Eventual</source>
          <target state="new">Eventual</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These granular, well-defined consistency levels allow you to make sound trade-offs between consistency, availability, and performance.</source>
          <target state="new">These granular, well-defined consistency levels allow you to make sound trade-offs between consistency, availability, and performance.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>These consistency levels are backed by predictable performance levels ensuring consistent results for your application.</source>
          <target state="new">These consistency levels are backed by predictable performance levels ensuring consistent results for your application.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Consistency levels for databases</source>
          <target state="new">Consistency levels for databases</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can configure a default consistency level on your database account that applies to all the collections (across all of the databases) under your database account.</source>
          <target state="new">You can configure a default consistency level on your database account that applies to all the collections (across all of the databases) under your database account.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>By default, all reads and queries issued against the user defined resources will use the default consistency level specified on the database account.</source>
          <target state="new">By default, all reads and queries issued against the user defined resources will use the default consistency level specified on the database account.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, you can lower the consistency level of a specific read/query request by specifying [x-ms-consistency-level] request header.</source>
          <target state="new">However, you can lower the consistency level of a specific read/query request by specifying [x-ms-consistency-level] request header.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>There are four types of consistency levels supported by the DocumentDB replication protocol - these are briefly described below.</source>
          <target state="new">There are four types of consistency levels supported by the DocumentDB replication protocol - these are briefly described below.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> In a future release, we intend to support overriding the default consistency level on a per collection basis.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> In a future release, we intend to support overriding the default consistency level on a per collection basis.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Strong<ept id="p1">**</ept>: Strong consistency guarantees that a write is only visible after it is committed durably by the majority quorum of replicas.</source>
          <target state="new"><bpt id="p1">**</bpt>Strong<ept id="p1">**</ept>: Strong consistency guarantees that a write is only visible after it is committed durably by the majority quorum of replicas.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A write is either synchronously committed durably by both the primary and the quorum of secondaries or it is aborted.</source>
          <target state="new">A write is either synchronously committed durably by both the primary and the quorum of secondaries or it is aborted.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A read is always acknowledged by the majority read quorum - a client can never see an uncommitted or partial write and is always guaranteed to read the latest acknowledged write.</source>
          <target state="new">A read is always acknowledged by the majority read quorum - a client can never see an uncommitted or partial write and is always guaranteed to read the latest acknowledged write.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Strong consistency provides absolute guarantees on data consistency, but offers the lowest level of read and write performance.</source>
          <target state="new">Strong consistency provides absolute guarantees on data consistency, but offers the lowest level of read and write performance.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bounded staleness<ept id="p1">**</ept>: Bounded staleness consistency guarantees the total order of propagation of writes with the possibility that reads lag behind writes by at most K prefixes.</source>
          <target state="new"><bpt id="p1">**</bpt>Bounded staleness<ept id="p1">**</ept>: Bounded staleness consistency guarantees the total order of propagation of writes with the possibility that reads lag behind writes by at most K prefixes.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The read is always acknowledged by a majority quorum of replicas.</source>
          <target state="new">The read is always acknowledged by a majority quorum of replicas.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The response of a read request specifies its relative freshness (in terms of K).</source>
          <target state="new">The response of a read request specifies its relative freshness (in terms of K).</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Bounded staleness provides more predictable behavior for read consistency while offering the lowest latency writes.</source>
          <target state="new">Bounded staleness provides more predictable behavior for read consistency while offering the lowest latency writes.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As reads are acknowledged by a majority quorum, read latency is not the lowest offered by the system.</source>
          <target state="new">As reads are acknowledged by a majority quorum, read latency is not the lowest offered by the system.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Bounded staleness guarantees monotonic reads only on explicit read requests.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Bounded staleness guarantees monotonic reads only on explicit read requests.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The echoed server response for write requests does not offer bounded staleness guarantees.</source>
          <target state="new">The echoed server response for write requests does not offer bounded staleness guarantees.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Session<ept id="p1">**</ept>: Unlike the global consistency models offered by strong and bounded staleness consistency levels, “session” consistency is tailored for a specific client session.</source>
          <target state="new"><bpt id="p1">**</bpt>Session<ept id="p1">**</ept>: Unlike the global consistency models offered by strong and bounded staleness consistency levels, “session” consistency is tailored for a specific client session.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Session consistency is usually sufficient since it provides guaranteed monotonic reads, and writes and ability to read your own writes.</source>
          <target state="new">Session consistency is usually sufficient since it provides guaranteed monotonic reads, and writes and ability to read your own writes.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A read request for session consistency is issued against a replica that can serve the client requested version (part of the session cookie).</source>
          <target state="new">A read request for session consistency is issued against a replica that can serve the client requested version (part of the session cookie).</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Session consistency provides predictable read data consistency for a session while offering the lowest latency writes.</source>
          <target state="new">Session consistency provides predictable read data consistency for a session while offering the lowest latency writes.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Reads are also low latency as except in the rare cases, the read will be served by a single replica.</source>
          <target state="new">Reads are also low latency as except in the rare cases, the read will be served by a single replica.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Eventual<ept id="p1">**</ept>: Eventual consistency is the weakest form of consistency wherein a client may get the values which are older than the ones it had seen before, over time.</source>
          <target state="new"><bpt id="p1">**</bpt>Eventual<ept id="p1">**</ept>: Eventual consistency is the weakest form of consistency wherein a client may get the values which are older than the ones it had seen before, over time.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In the absence of any further writes, the replicas within the group will eventually converge.</source>
          <target state="new">In the absence of any further writes, the replicas within the group will eventually converge.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The read request is served by any secondary index.</source>
          <target state="new">The read request is served by any secondary index.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Eventual consistency provides the weakest read consistency but offers the lowest latency for both reads and writes.</source>
          <target state="new">Eventual consistency provides the weakest read consistency but offers the lowest latency for both reads and writes.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Changing the database consistency level</source>
          <target state="new">Changing the database consistency level</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>Azure Preview portal<ept id="p1">](https://portal.azure.com/)</ept>, click <bpt id="p2">**</bpt>Browse All<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">[</bpt>Azure Preview portal<ept id="p1">](https://portal.azure.com/)</ept>, click <bpt id="p2">**</bpt>Browse All<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Browse All<ept id="p1">**</ept> blade, click <bpt id="p2">**</bpt>DocumentDB Accounts<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Browse All<ept id="p1">**</ept> blade, click <bpt id="p2">**</bpt>DocumentDB Accounts<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>DocumentDB Accounts<ept id="p1">**</ept> blade, select the database account to modify.</source>
          <target state="new">In the <bpt id="p1">**</bpt>DocumentDB Accounts<ept id="p1">**</ept> blade, select the database account to modify.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the account blade, in the <bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> lens, click the <bpt id="p2">**</bpt>Default Consistency<ept id="p2">**</ept> tile.</source>
          <target state="new">In the account blade, in the <bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> lens, click the <bpt id="p2">**</bpt>Default Consistency<ept id="p2">**</ept> tile.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Select the new consistency level and click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</source>
          <target state="new">Select the new consistency level and click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Screen shot highlighting the Default Consistency tile, the consistency settings and the Save button</source>
          <target state="new">Screen shot highlighting the Default Consistency tile, the consistency settings and the Save button</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Consistency levels for queries</source>
          <target state="new">Consistency levels for queries</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>By default, for user defined resources, the consistency level of the queries is the same as the reads.</source>
          <target state="new">By default, for user defined resources, the consistency level of the queries is the same as the reads.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>By default, the index is updated synchronously on each insert, replace, or delete of a document to the collection.</source>
          <target state="new">By default, the index is updated synchronously on each insert, replace, or delete of a document to the collection.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This enables the queries to honor the same consistency level as that of the document reads.</source>
          <target state="new">This enables the queries to honor the same consistency level as that of the document reads.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>While DocumentDB is write optimized and supports sustained volumes of document writes along with synchronous index maintenance and serving consistent queries, you can configure certain collections to update their index lazily.</source>
          <target state="new">While DocumentDB is write optimized and supports sustained volumes of document writes along with synchronous index maintenance and serving consistent queries, you can configure certain collections to update their index lazily.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Lazy indexing further boosts the write performance and is ideal for bulk ingestion scenarios when a workload is primarily read-heavy.</source>
          <target state="new">Lazy indexing further boosts the write performance and is ideal for bulk ingestion scenarios when a workload is primarily read-heavy.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Indexing Mode</source>
          <target state="new">Indexing Mode</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Reads</source>
          <target state="new">Reads</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Queries</source>
          <target state="new">Queries</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Consistent (default)</source>
          <target state="new">Consistent (default)</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Select from Strong, Bounded staleness, Session, or Eventual</source>
          <target state="new">Select from Strong, Bounded staleness, Session, or Eventual</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Select from Strong, Bounded staleness, Session, or Eventual</source>
          <target state="new">Select from Strong, Bounded staleness, Session, or Eventual</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Lazy</source>
          <target state="new">Lazy</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Select from Strong, Bounded staleness, Session, or Eventual</source>
          <target state="new">Select from Strong, Bounded staleness, Session, or Eventual</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Eventual</source>
          <target state="new">Eventual</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>As with read requests, you can lower the consistency level of a specific query request by specifying the [x-ms-consistency-level] request header.</source>
          <target state="new">As with read requests, you can lower the consistency level of a specific query request by specifying the [x-ms-consistency-level] request header.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If you'd like to do more reading about consistency levels and tradeoffs, we recommend the following resources:</source>
          <target state="new">If you'd like to do more reading about consistency levels and tradeoffs, we recommend the following resources:</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Doug Terry.</source>
          <target state="new">Doug Terry.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Replicated Data Consistency explained through baseball.</source>
          <target state="new">Replicated Data Consistency explained through baseball.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>http://research.microsoft.com/pubs/157411/ConsistencyAndBaseballReport.pdf<ept id="p1">](http://research.microsoft.com/pubs/157411/ConsistencyAndBaseballReport.pdf)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>http://research.microsoft.com/pubs/157411/ConsistencyAndBaseballReport.pdf<ept id="p1">](http://research.microsoft.com/pubs/157411/ConsistencyAndBaseballReport.pdf)</ept></target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Doug Terry.</source>
          <target state="new">Doug Terry.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Session Guarantees for Weakly Consistent Replicated Data.</source>
          <target state="new">Session Guarantees for Weakly Consistent Replicated Data.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>http://dl.acm.org/citation.cfm?id=383631<ept id="p1">](http://dl.acm.org/citation.cfm?id=383631)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>http://dl.acm.org/citation.cfm?id=383631<ept id="p1">](http://dl.acm.org/citation.cfm?id=383631)</ept></target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Daniel Abadi.</source>
          <target state="new">Daniel Abadi.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Consistency Tradeoffs in Modern Distributed Database Systems Design: CAP is only part of the story”.</source>
          <target state="new">Consistency Tradeoffs in Modern Distributed Database Systems Design: CAP is only part of the story”.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>http://computer.org/csdl/mags/co/2012/02/mco2012020037-abs.html<ept id="p1">](http://computer.org/csdl/mags/co/2012/02/mco2012020037-abs.html)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>http://computer.org/csdl/mags/co/2012/02/mco2012020037-abs.html<ept id="p1">](http://computer.org/csdl/mags/co/2012/02/mco2012020037-abs.html)</ept></target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Peter Bailis, Shivaram Venkataraman, Michael J. Franklin, Joseph M. Hellerstein, Ion Stoica.</source>
          <target state="new">Peter Bailis, Shivaram Venkataraman, Michael J. Franklin, Joseph M. Hellerstein, Ion Stoica.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Probabilistic Bounded Staleness (PBS) for Practical Partial Quorums.</source>
          <target state="new">Probabilistic Bounded Staleness (PBS) for Practical Partial Quorums.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>http://vldb.org/pvldb/vol5/p776_peterbailis_vldb2012.pdf<ept id="p1">](http://vldb.org/pvldb/vol5/p776_peterbailis_vldb2012.pdf)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>http://vldb.org/pvldb/vol5/p776_peterbailis_vldb2012.pdf<ept id="p1">](http://vldb.org/pvldb/vol5/p776_peterbailis_vldb2012.pdf)</ept></target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Werner Vogels.</source>
          <target state="new">Werner Vogels.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Eventual Consistent - Revisited.</source>
          <target state="new">Eventual Consistent - Revisited.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>http://allthingsdistributed.com/2008/12/eventually_consistent.html<ept id="p1">](http://allthingsdistributed.com/2008/12/eventually_consistent.html)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>http://allthingsdistributed.com/2008/12/eventually_consistent.html<ept id="p1">](http://allthingsdistributed.com/2008/12/eventually_consistent.html)</ept></target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d99e7fe0969ff1eaac7b836aead6b1f6703d121d</xliffext:olfilehash>
  </header>
</xliff>