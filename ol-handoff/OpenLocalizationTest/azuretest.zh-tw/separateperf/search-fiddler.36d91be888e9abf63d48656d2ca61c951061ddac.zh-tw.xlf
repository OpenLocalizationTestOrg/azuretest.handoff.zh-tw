<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to use Fiddler to evaluate and test Azure Search REST APIs | Microsoft Azure</source>
          <target state="new">How to use Fiddler to evaluate and test Azure Search REST APIs | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use Fiddler for a code-free approach to verifying Azure Search availability and trying out the REST APIs.</source>
          <target state="new">Use Fiddler for a code-free approach to verifying Azure Search availability and trying out the REST APIs.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use Fiddler to evaluate and test Azure Search REST APIs</source>
          <target state="new">Use Fiddler to evaluate and test Azure Search REST APIs</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This article explains how to use Fiddler, available as a <bpt id="p1">[</bpt>free download from Telerik<ept id="p1">](http://www.telerik.com/fiddler)</ept>, to issue HTTP requests to and view responses using the Azure Search REST API, without having to write any code.</source>
          <target state="new">This article explains how to use Fiddler, available as a <bpt id="p1">[</bpt>free download from Telerik<ept id="p1">](http://www.telerik.com/fiddler)</ept>, to issue HTTP requests to and view responses using the Azure Search REST API, without having to write any code.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Azure Search service REST APIs are documented on <bpt id="p1">[</bpt>MSDN<ept id="p1">](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept>.</source>
          <target state="new">Azure Search service REST APIs are documented on <bpt id="p1">[</bpt>MSDN<ept id="p1">](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In the following steps, you'll create an index, upload documents, query the index, and then query the system for service information.</source>
          <target state="new">In the following steps, you'll create an index, upload documents, query the index, and then query the system for service information.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To complete these steps, you will need an Azure Search service and <ph id="ph1">`api-key`</ph>.</source>
          <target state="new">To complete these steps, you will need an Azure Search service and <ph id="ph1">`api-key`</ph>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service-portal.md)</ept> for instructions on how to get started.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service-portal.md)</ept> for instructions on how to get started.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Create an index</source>
          <target state="new">Create an index</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Start Fiddler.</source>
          <target state="new">Start Fiddler.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, turn off <bpt id="p2">**</bpt>Capture Traffic<ept id="p2">**</ept> to hide extraneous HTTP activity that is unrelated to the current task.</source>
          <target state="new">On the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, turn off <bpt id="p2">**</bpt>Capture Traffic<ept id="p2">**</ept> to hide extraneous HTTP activity that is unrelated to the current task.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Composer<ept id="p1">**</ept> tab, you'll formulate a request that looks like the following screen shot.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Composer<ept id="p1">**</ept> tab, you'll formulate a request that looks like the following screen shot.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>![][1]</source>
          <target state="new">![][1]</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>PUT<ept id="p1">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>PUT<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Enter a URL that specifies the service URL, request attributes, and the api-version.</source>
          <target state="new">Enter a URL that specifies the service URL, request attributes, and the api-version.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A few pointers to keep in mind:</source>
          <target state="new">A few pointers to keep in mind:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use HTTPS as the prefix.</source>
          <target state="new">Use HTTPS as the prefix.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Request attribute is "/indexes/hotels".</source>
          <target state="new">Request attribute is "/indexes/hotels".</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This tells Search to create an index named 'hotels'.</source>
          <target state="new">This tells Search to create an index named 'hotels'.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Api-version is lowercase, specified as "?api-version=2015-02-28".</source>
          <target state="new">Api-version is lowercase, specified as "?api-version=2015-02-28".</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>API versions are important because Azure Search deploys updates regularly.</source>
          <target state="new">API versions are important because Azure Search deploys updates regularly.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>On rare occasions, a service update may introduce a breaking change to the API.</source>
          <target state="new">On rare occasions, a service update may introduce a breaking change to the API.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Using API versions, you can continue to use your existing version and upgrade to the newer one when it is convenient.</source>
          <target state="new">Using API versions, you can continue to use your existing version and upgrade to the newer one when it is convenient.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The full URL should look similar to the following example.</source>
          <target state="new">The full URL should look similar to the following example.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Specify the request header, replacing the host and api-key with values that are valid for your service.</source>
          <target state="new">Specify the request header, replacing the host and api-key with values that are valid for your service.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In Request Body, paste in the fields that make up the index definition.</source>
          <target state="new">In Request Body, paste in the fields that make up the index definition.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Execute<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Execute<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In a few seconds, you should see an HTTP 201 response in the session list, indicating the index was created successfully.</source>
          <target state="new">In a few seconds, you should see an HTTP 201 response in the session list, indicating the index was created successfully.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you get HTTP 504, verify the URL specifies HTTPS.</source>
          <target state="new">If you get HTTP 504, verify the URL specifies HTTPS.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you see HTTP 400 or 404, check the request body to verify there were no copy-paste errors.</source>
          <target state="new">If you see HTTP 400 or 404, check the request body to verify there were no copy-paste errors.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An HTTP 403 typically indicates a problem with the api-key (either an invalid key or a syntax problem with how the api-key is specified).</source>
          <target state="new">An HTTP 403 typically indicates a problem with the api-key (either an invalid key or a syntax problem with how the api-key is specified).</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Load documents</source>
          <target state="new">Load documents</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Composer<ept id="p1">**</ept> tab, your request to post documents will look like the following.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Composer<ept id="p1">**</ept> tab, your request to post documents will look like the following.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The body of the request contains the search data for 4 hotels.</source>
          <target state="new">The body of the request contains the search data for 4 hotels.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>![][2]</source>
          <target state="new">![][2]</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>POST<ept id="p1">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>POST<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Enter a URL that starts with HTTPS, followed by your service URL, followed by "/indexes/&lt;'indexname'&gt;/docs/index?api-version=2015-02-28".</source>
          <target state="new">Enter a URL that starts with HTTPS, followed by your service URL, followed by "/indexes/&lt;'indexname'&gt;/docs/index?api-version=2015-02-28".</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The full URL should look similar to the following example.</source>
          <target state="new">The full URL should look similar to the following example.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Request Header should be the same as before.</source>
          <target state="new">Request Header should be the same as before.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Remember that you replaced the host and api-key with values that are valid for your service.</source>
          <target state="new">Remember that you replaced the host and api-key with values that are valid for your service.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Request Body contains four documents to be added to the hotels index.</source>
          <target state="new">The Request Body contains four documents to be added to the hotels index.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Execute<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Execute<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In a few seconds, you should see an HTTP 200 response in the session list.</source>
          <target state="new">In a few seconds, you should see an HTTP 200 response in the session list.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This indicates the documents were created successfully.</source>
          <target state="new">This indicates the documents were created successfully.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you get a 207, at least one document failed to upload.</source>
          <target state="new">If you get a 207, at least one document failed to upload.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If you get a 404, you have a syntax error in either the header or body of the request.</source>
          <target state="new">If you get a 404, you have a syntax error in either the header or body of the request.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Query the index</source>
          <target state="new">Query the index</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Now that an index and documents are loaded, you can issue queries against them.</source>
          <target state="new">Now that an index and documents are loaded, you can issue queries against them.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Composer<ept id="p1">**</ept> tab, a <bpt id="p2">**</bpt>GET<ept id="p2">**</ept> command that queries your service will look similar to the following screen shot.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Composer<ept id="p1">**</ept> tab, a <bpt id="p2">**</bpt>GET<ept id="p2">**</ept> command that queries your service will look similar to the following screen shot.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>![][3]</source>
          <target state="new">![][3]</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>GET<ept id="p1">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>GET<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Enter a URL that starts with HTTPS, followed by your service URL, followed by "/indexes/&lt;'indexname'&gt;/docs?", followed by query parameters.</source>
          <target state="new">Enter a URL that starts with HTTPS, followed by your service URL, followed by "/indexes/&lt;'indexname'&gt;/docs?", followed by query parameters.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>By way of example, use the following URL, replacing the sample host name with one that is valid for your service.</source>
          <target state="new">By way of example, use the following URL, replacing the sample host name with one that is valid for your service.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This query searches on the term “motel” and retrieves facet categories for ratings.</source>
          <target state="new">This query searches on the term “motel” and retrieves facet categories for ratings.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Request Header should be the same as before.</source>
          <target state="new">Request Header should be the same as before.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Remember that you replaced the host and api-key with values that are valid for your service.</source>
          <target state="new">Remember that you replaced the host and api-key with values that are valid for your service.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The response code should be 200, and the response output should look similar to the following screen shot.</source>
          <target state="new">The response code should be 200, and the response output should look similar to the following screen shot.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>![][4]</source>
          <target state="new">![][4]</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following example query is from the <bpt id="p1">[</bpt>Search Index operation (Azure Search API)<ept id="p1">](http://msdn.microsoft.com/library/dn798927.aspx)</ept> on MSDN.</source>
          <target state="new">The following example query is from the <bpt id="p1">[</bpt>Search Index operation (Azure Search API)<ept id="p1">](http://msdn.microsoft.com/library/dn798927.aspx)</ept> on MSDN.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Many of the example queries in this topic include spaces, which are not allowed in Fiddler.</source>
          <target state="new">Many of the example queries in this topic include spaces, which are not allowed in Fiddler.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Replace each space with a + character before pasting in the query string before attempting the query in Fiddler.</source>
          <target state="new">Replace each space with a + character before pasting in the query string before attempting the query in Fiddler.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Before spaces are replaced:</source>
          <target state="new">Before spaces are replaced:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>After spaces are replaced with +:</source>
          <target state="new">After spaces are replaced with +:</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Query the system</source>
          <target state="new">Query the system</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can also query the system to get document counts and storage consumption.</source>
          <target state="new">You can also query the system to get document counts and storage consumption.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Composer<ept id="p1">**</ept> tab, your request will look similar to the following, and the response will return a count for the number of documents and space used.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Composer<ept id="p1">**</ept> tab, your request will look similar to the following, and the response will return a count for the number of documents and space used.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>![][5]</source>
          <target state="new">![][5]</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>GET<ept id="p1">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>GET<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Enter a URL that includes your service URL, followed by "/indexes/hotels/stats?api-version=2015-02-28":</source>
          <target state="new">Enter a URL that includes your service URL, followed by "/indexes/hotels/stats?api-version=2015-02-28":</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Specify the request header, replacing the host and api-key with values that are valid for your service.</source>
          <target state="new">Specify the request header, replacing the host and api-key with values that are valid for your service.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Leave the request body empty.</source>
          <target state="new">Leave the request body empty.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Execute<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Execute<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You should see an HTTP 200 status code in the session list.</source>
          <target state="new">You should see an HTTP 200 status code in the session list.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Select the entry posted for your command.</source>
          <target state="new">Select the entry posted for your command.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Inspectors<ept id="p1">**</ept> tab, click the <bpt id="p2">**</bpt>Headers<ept id="p2">**</ept> tab, and then select the JSON format.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Inspectors<ept id="p1">**</ept> tab, click the <bpt id="p2">**</bpt>Headers<ept id="p2">**</ept> tab, and then select the JSON format.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You should see the document count and storage size (in KB).</source>
          <target state="new">You should see the document count and storage size (in KB).</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following links provide additional information for a no-code approach to managing and using Azure Search.</source>
          <target state="new">The following links provide additional information for a no-code approach to managing and using Azure Search.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Manage your Search service on Azure</source>
          <target state="new">Manage your Search service on Azure</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>How to use Chrome Postman with Azure Search</source>
          <target state="new">How to use Chrome Postman with Azure Search</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3bd110c7b18a358648ec25f7ff3c95495ce4939</xliffext:olfilehash>
  </header>
</xliff>