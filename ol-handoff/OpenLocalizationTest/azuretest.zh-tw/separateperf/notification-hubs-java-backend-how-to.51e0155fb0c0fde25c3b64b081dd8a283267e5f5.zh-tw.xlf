<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to use Notification Hubs with Java</source>
          <target state="new">How to use Notification Hubs with Java</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Azure Notification Hubs from a Java back-end.</source>
          <target state="new">Learn how to use Azure Notification Hubs from a Java back-end.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to use Notification Hubs from Java</source>
          <target state="new">How to use Notification Hubs from Java</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="new">Java</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>PHP</source>
          <target state="new">PHP</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="new">Python</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="new">Node.js</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This topic describes the key features of the new fully supported official Azure Notification Hub Java SDK.</source>
          <target state="new">This topic describes the key features of the new fully supported official Azure Notification Hub Java SDK.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is an open source project and you can view the entire SDK code at <bpt id="p1">[</bpt><ept id="p1">Java SDK]</ept>.</source>
          <target state="new">This is an open source project and you can view the entire SDK code at <bpt id="p1">[</bpt><ept id="p1">Java SDK]</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In general, you can access all Notification Hubs features from a Java/PHP/Python/Ruby back-end using the Notification Hub REST interface as described in the MSDN topic <bpt id="p1">[</bpt>Notification Hubs REST APIs<ept id="p1">](http://msdn.microsoft.com/library/dn223264.aspx)</ept>.</source>
          <target state="new">In general, you can access all Notification Hubs features from a Java/PHP/Python/Ruby back-end using the Notification Hub REST interface as described in the MSDN topic <bpt id="p1">[</bpt>Notification Hubs REST APIs<ept id="p1">](http://msdn.microsoft.com/library/dn223264.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This Java SDK provides a thin wrapper over these REST interfaces in Java.</source>
          <target state="new">This Java SDK provides a thin wrapper over these REST interfaces in Java.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The SDK supports currently:</source>
          <target state="new">The SDK supports currently:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CRUD on Notification Hubs</source>
          <target state="new">CRUD on Notification Hubs</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CRUD on Registrations</source>
          <target state="new">CRUD on Registrations</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Installation Management</source>
          <target state="new">Installation Management</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Import/Export Registrations</source>
          <target state="new">Import/Export Registrations</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Regular Sends</source>
          <target state="new">Regular Sends</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Scheduled Sends</source>
          <target state="new">Scheduled Sends</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Async operations via Java NIO</source>
          <target state="new">Async operations via Java NIO</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Supported platforms: APNS (iOS), GCM (Android), WNS (Windows Store apps), MPNS(Windows Phone), ADM (Amazon Kindle Fire), Baidu (Android without Google services)</source>
          <target state="new">Supported platforms: APNS (iOS), GCM (Android), WNS (Windows Store apps), MPNS(Windows Phone), ADM (Amazon Kindle Fire), Baidu (Android without Google services)</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>SDK Usage</source>
          <target state="new">SDK Usage</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Compile and build</source>
          <target state="new">Compile and build</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt><ept id="p1">Maven]</ept></source>
          <target state="new">Use <bpt id="p1">[</bpt><ept id="p1">Maven]</ept></target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To build:</source>
          <target state="new">To build:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="new">Code</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Notification Hub CRUDs</source>
          <target state="new">Notification Hub CRUDs</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Create a NamespaceManager:</source>
          <target state="new">Create a NamespaceManager:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Create Notification Hub:</source>
          <target state="new">Create Notification Hub:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="new">OR</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Get Notification Hub:</source>
          <target state="new">Get Notification Hub:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Update Notification Hub:</source>
          <target state="new">Update Notification Hub:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Delete Notification Hub:</source>
          <target state="new">Delete Notification Hub:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Registration CRUDs</source>
          <target state="new">Registration CRUDs</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Create a Notification Hub client:</source>
          <target state="new">Create a Notification Hub client:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Create Windows registration:</source>
          <target state="new">Create Windows registration:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Create iOS registration:</source>
          <target state="new">Create iOS registration:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Similarly you can create registrations for Android (GCM), Windows Phone (MPNS), and Kindle Fire (ADM).</source>
          <target state="new">Similarly you can create registrations for Android (GCM), Windows Phone (MPNS), and Kindle Fire (ADM).</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Create template registrations:</source>
          <target state="new">Create template registrations:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Create registrations using create registrationid + upsert pattern</source>
          <target state="new">Create registrations using create registrationid + upsert pattern</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes duplicates due to any lost responses if storing registration ids on the device:</source>
          <target state="new">Removes duplicates due to any lost responses if storing registration ids on the device:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Update registrations:</source>
          <target state="new">Update registrations:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Delete registrations:</source>
          <target state="new">Delete registrations:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Query registrations:</source>
          <target state="new">Query registrations:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Get single registration:</source>
          <target state="new">Get single registration:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Get all registrations in hub:</source>
          <target state="new">Get all registrations in hub:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Get registrations with tag:</source>
          <target state="new">Get registrations with tag:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Get registrations by channel:</source>
          <target state="new">Get registrations by channel:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>All collection queries support $top and continuation tokens.</source>
          <target state="new">All collection queries support $top and continuation tokens.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Installation API usage</source>
          <target state="new">Installation API usage</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Installation API is an alternative mechanism for registration management.</source>
          <target state="new">Installation API is an alternative mechanism for registration management.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Instead of maintaining multiple registrations which is not trivial and may be easily done wrongly or inefficiently, it is now possible to use a SINGLE Installation object.</source>
          <target state="new">Instead of maintaining multiple registrations which is not trivial and may be easily done wrongly or inefficiently, it is now possible to use a SINGLE Installation object.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Installation contains everything you need: push channel (device token), tags, templates, secondary tiles (for WNS and APNS).</source>
          <target state="new">Installation contains everything you need: push channel (device token), tags, templates, secondary tiles (for WNS and APNS).</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You don't need to call the service to get Id anymore - just generate GUID or any other identifier, keep it on device and send to your backend together with push channel (device token).</source>
          <target state="new">You don't need to call the service to get Id anymore - just generate GUID or any other identifier, keep it on device and send to your backend together with push channel (device token).</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>On the backend you should only do a single call: CreateOrUpdateInstallation, it is fully idempotent, so feel free to retry if needed.</source>
          <target state="new">On the backend you should only do a single call: CreateOrUpdateInstallation, it is fully idempotent, so feel free to retry if needed.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>As example for Amazon Kindle Fire it looks like this:</source>
          <target state="new">As example for Amazon Kindle Fire it looks like this:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If you want to update it:</source>
          <target state="new">If you want to update it:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For advanced scenarios we have partial update capability which allows to modify only particular properties of the installation object.</source>
          <target state="new">For advanced scenarios we have partial update capability which allows to modify only particular properties of the installation object.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Basically partial update is subset of JSON Patch operations you can run against Installation object.</source>
          <target state="new">Basically partial update is subset of JSON Patch operations you can run against Installation object.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Delete Installation:</source>
          <target state="new">Delete Installation:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CreateOrUpdate, Patch and Delete are eventually consistent with Get.</source>
          <target state="new">CreateOrUpdate, Patch and Delete are eventually consistent with Get.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Your requested operation just goes to the system queue during the call and will be executed in background.</source>
          <target state="new">Your requested operation just goes to the system queue during the call and will be executed in background.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Note that Get is not designed for main runtime scenario but just for debug and troubleshooting purposes, it is tightly throttled by the service.</source>
          <target state="new">Note that Get is not designed for main runtime scenario but just for debug and troubleshooting purposes, it is tightly throttled by the service.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Send flow for Installations is the same as for Registrations.</source>
          <target state="new">Send flow for Installations is the same as for Registrations.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>We've just introduced an option to target notification to the particular Installation - just use tag "InstallationId:{desired-id}".</source>
          <target state="new">We've just introduced an option to target notification to the particular Installation - just use tag "InstallationId:{desired-id}".</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For case above it would look like this:</source>
          <target state="new">For case above it would look like this:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For one of several templates:</source>
          <target state="new">For one of several templates:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Schedule Notifications (available for STANDARD Tier)</source>
          <target state="new">Schedule Notifications (available for STANDARD Tier)</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The same as regular send but with one additional parameter - scheduledTime which says when notification should be delivered.</source>
          <target state="new">The same as regular send but with one additional parameter - scheduledTime which says when notification should be delivered.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Service accepts any point of time between now + 5 minutes and now + 7 days.</source>
          <target state="new">Service accepts any point of time between now + 5 minutes and now + 7 days.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Schedule a Windows native notification:</source>
          <target state="new">Schedule a Windows native notification:</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Import/Export (available for STANDARD Tier)</source>
          <target state="new">Import/Export (available for STANDARD Tier)</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Sometimes it is required to perform bulk operation against registrations.</source>
          <target state="new">Sometimes it is required to perform bulk operation against registrations.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Usually it is for integration with another system or just a massive fix to say update the tags.</source>
          <target state="new">Usually it is for integration with another system or just a massive fix to say update the tags.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It is strongly not recommended to use Get/Update flow if we are talking about thousands of registrations.</source>
          <target state="new">It is strongly not recommended to use Get/Update flow if we are talking about thousands of registrations.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Import/Export capability is designed to cover the scenario.</source>
          <target state="new">Import/Export capability is designed to cover the scenario.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Basically you provide an access to some blob container under your storage account as a source of incoming data and location for output.</source>
          <target state="new">Basically you provide an access to some blob container under your storage account as a source of incoming data and location for output.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Submit export job:</source>
          <target state="new">Submit export job:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Submit import job:</source>
          <target state="new">Submit import job:</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Wait until job is done:</source>
          <target state="new">Wait until job is done:</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Get all jobs:</source>
          <target state="new">Get all jobs:</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>URI with SAS signature:<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>URI with SAS signature:<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This is the URL of some blob file or blob container plus set of parameters like permissions and expiration time plus signature of all these things made using account's SAS key.</source>
          <target state="new">This is the URL of some blob file or blob container plus set of parameters like permissions and expiration time plus signature of all these things made using account's SAS key.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Azure Storage Java SDK has rich capabilities including creation of such kind of URIs.</source>
          <target state="new">Azure Storage Java SDK has rich capabilities including creation of such kind of URIs.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>As simple alternative you can take a look at ImportExportE2E test class (from the github location) which has very basic and compact implementation of signing algorithm.</source>
          <target state="new">As simple alternative you can take a look at ImportExportE2E test class (from the github location) which has very basic and compact implementation of signing algorithm.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Send Notifications</source>
          <target state="new">Send Notifications</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The Notification object is simply a body with headers, some utility methods help in building the native and template notifications objects.</source>
          <target state="new">The Notification object is simply a body with headers, some utility methods help in building the native and template notifications objects.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Windows Store and Windows Phone 8.1 (non-Silverlight)</source>
          <target state="new">Windows Store and Windows Phone 8.1 (non-Silverlight)</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>iOS</source>
          <target state="new">iOS</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Android</source>
          <target state="new">Android</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Windows Phone 8.0 and 8.1 Silverlight</source>
          <target state="new">Windows Phone 8.0 and 8.1 Silverlight</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Kindle Fire</source>
          <target state="new">Kindle Fire</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Send to Tags</source>
          <target state="new">Send to Tags</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Send to tag expression</source>
          <target state="new">Send to tag expression</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Send template notification</source>
          <target state="new">Send template notification</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Running your Java code should now produce a notification appearing on your target device.</source>
          <target state="new">Running your Java code should now produce a notification appearing on your target device.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="next-steps"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Next Steps</source>
          <target state="new"><ph id="ph1">&lt;a name="next-steps"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Next Steps</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In this topic we showed how to create a simple Java REST client for Notification Hubs.</source>
          <target state="new">In this topic we showed how to create a simple Java REST client for Notification Hubs.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>From here you can:</source>
          <target state="new">From here you can:</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Download the full <bpt id="p1">[</bpt><ept id="p1">Java SDK]</ept>, which contains the entire SDK code.</source>
          <target state="new">Download the full <bpt id="p1">[</bpt><ept id="p1">Java SDK]</ept>, which contains the entire SDK code.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Play with the samples:</source>
          <target state="new">Play with the samples:</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Get Started with Notification Hubs</source>
          <target state="new">Get Started with Notification Hubs</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Send breaking news</source>
          <target state="new">Send breaking news</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Send localized breaking news</source>
          <target state="new">Send localized breaking news</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Send notifications to authenticated users</source>
          <target state="new">Send notifications to authenticated users</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Send cross-platform notifications to authenticated users</source>
          <target state="new">Send cross-platform notifications to authenticated users</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1131e3a6021e3c71887e63c7398c6b1502f72bb6</xliffext:olfilehash>
  </header>
</xliff>