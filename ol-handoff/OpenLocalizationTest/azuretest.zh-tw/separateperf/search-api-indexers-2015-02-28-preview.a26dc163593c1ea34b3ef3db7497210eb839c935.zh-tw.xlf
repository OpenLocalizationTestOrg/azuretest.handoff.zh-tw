<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indexer Operations (Azure Search Service REST API: 2015-02-28-Preview)</source>
          <target state="new">Indexer Operations (Azure Search Service REST API: 2015-02-28-Preview)</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Indexer Operations (Azure Search Service REST API: 2015-02-28-Preview)</source>
          <target state="new">Indexer Operations (Azure Search Service REST API: 2015-02-28-Preview)</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Indexer Operations (Azure Search Service REST API: 2015-02-28-Preview)</source>
          <target state="new">Indexer Operations (Azure Search Service REST API: 2015-02-28-Preview)</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This article describes indexers in the <bpt id="p1">[</bpt>2015-02-28-Preview<ept id="p1">](search-api-2015-02-28-preview.md)</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This article describes indexers in the <bpt id="p1">[</bpt>2015-02-28-Preview<ept id="p1">](search-api-2015-02-28-preview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Currently the only difference between the <ph id="ph1">`2015-02-28`</ph> version documented on <bpt id="p1">[</bpt>MSDN<ept id="p1">](http://go.mirosoft.com/fwlink/p/?LinkID=528173)</ept> and the <ph id="ph2">`2015-02-28-Preview`</ph> version described here is that the preview provides <bpt id="p2">*</bpt>fieldMappings<ept id="p2">*</ept>, as described in <bpt id="p3">[</bpt>Create Indexer<ept id="p3">](#CreateIndexer)</ept>.</source>
          <target state="new">Currently the only difference between the <ph id="ph1">`2015-02-28`</ph> version documented on <bpt id="p1">[</bpt>MSDN<ept id="p1">](http://go.mirosoft.com/fwlink/p/?LinkID=528173)</ept> and the <ph id="ph2">`2015-02-28-Preview`</ph> version described here is that the preview provides <bpt id="p2">*</bpt>fieldMappings<ept id="p2">*</ept>, as described in <bpt id="p3">[</bpt>Create Indexer<ept id="p3">](#CreateIndexer)</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Azure Search can integrate directly with some common data sources, removing the need to write code to index your data.</source>
          <target state="new">Azure Search can integrate directly with some common data sources, removing the need to write code to index your data.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To set up this up, you can call the Azure Search API to create and manage <bpt id="p1">**</bpt>indexers<ept id="p1">**</ept> and <bpt id="p2">**</bpt>data sources<ept id="p2">**</ept>.</source>
          <target state="new">To set up this up, you can call the Azure Search API to create and manage <bpt id="p1">**</bpt>indexers<ept id="p1">**</ept> and <bpt id="p2">**</bpt>data sources<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>indexer<ept id="p1">**</ept> is a resource that connects data sources with target search indexes.</source>
          <target state="new">An <bpt id="p1">**</bpt>indexer<ept id="p1">**</ept> is a resource that connects data sources with target search indexes.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An indexer is used in the following ways:</source>
          <target state="new">An indexer is used in the following ways:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Perform a one-time copy of the data to populate an index.</source>
          <target state="new">Perform a one-time copy of the data to populate an index.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Sync an index with changes in the data source on a schedule.</source>
          <target state="new">Sync an index with changes in the data source on a schedule.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The schedule is part of the indexer definition.</source>
          <target state="new">The schedule is part of the indexer definition.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Invoke on-demand to update an index as needed.</source>
          <target state="new">Invoke on-demand to update an index as needed.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>indexer<ept id="p1">**</ept> is useful when you want regular updates to an index.</source>
          <target state="new">An <bpt id="p1">**</bpt>indexer<ept id="p1">**</ept> is useful when you want regular updates to an index.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can either set up an inline schedule as part of an indexer definition, or run it on demand using <bpt id="p1">[</bpt>Run Indexer<ept id="p1">](#RunIndexer)</ept>.</source>
          <target state="new">You can either set up an inline schedule as part of an indexer definition, or run it on demand using <bpt id="p1">[</bpt>Run Indexer<ept id="p1">](#RunIndexer)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>data source<ept id="p1">**</ept> specifies what data needs to be indexed, credentials to access the data, and policies to enable Azure Search to efficiently identify changes in the data (such as modified or deleted rows in a database table).</source>
          <target state="new">A <bpt id="p1">**</bpt>data source<ept id="p1">**</ept> specifies what data needs to be indexed, credentials to access the data, and policies to enable Azure Search to efficiently identify changes in the data (such as modified or deleted rows in a database table).</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It's defined as an independent resource so that it can be used by multiple indexers.</source>
          <target state="new">It's defined as an independent resource so that it can be used by multiple indexers.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following data sources are currently supported:</source>
          <target state="new">The following data sources are currently supported:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Azure SQL Database and SQL Server on Azure VMs</source>
          <target state="new">Azure SQL Database and SQL Server on Azure VMs</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Azure DocumentDB</source>
          <target state="new">Azure DocumentDB</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>We're considering adding support for additional data sources in the future.</source>
          <target state="new">We're considering adding support for additional data sources in the future.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To help us prioritize these decisions, please provide your feedback on the <bpt id="p1">[</bpt>Azure Search feedback forum<ept id="p1">](http://feedback.azure.com/forums/263029-azure-search)</ept>.</source>
          <target state="new">To help us prioritize these decisions, please provide your feedback on the <bpt id="p1">[</bpt>Azure Search feedback forum<ept id="p1">](http://feedback.azure.com/forums/263029-azure-search)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Limits and constraints<ept id="p1">](https://msdn.microsoft.com/library/azure/dn798934.aspx)</ept> for maximum limits related to indexer and data source resources.</source>
          <target state="new">See <bpt id="p1">[</bpt>Limits and constraints<ept id="p1">](https://msdn.microsoft.com/library/azure/dn798934.aspx)</ept> for maximum limits related to indexer and data source resources.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Typical Usage Flow</source>
          <target state="new">Typical Usage Flow</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can create and manage indexers and data sources via simple HTTP requests (POST, GET, PUT, DELETE) against a given <ph id="ph1">`data source`</ph> or <ph id="ph2">`indexer`</ph> resource.</source>
          <target state="new">You can create and manage indexers and data sources via simple HTTP requests (POST, GET, PUT, DELETE) against a given <ph id="ph1">`data source`</ph> or <ph id="ph2">`indexer`</ph> resource.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Setting up automatic indexing is typically a four step process:</source>
          <target state="new">Setting up automatic indexing is typically a four step process:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Identify the data source that contains the data that needs to be indexed.</source>
          <target state="new">Identify the data source that contains the data that needs to be indexed.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Keep in mind that Azure Search may not support all of the data types present in your data source.</source>
          <target state="new">Keep in mind that Azure Search may not support all of the data types present in your data source.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Supported data types<ept id="p1">](https://msdn.microsoft.com/library/azure/dn798938.aspx)</ept> for the list.</source>
          <target state="new">See <bpt id="p1">[</bpt>Supported data types<ept id="p1">](https://msdn.microsoft.com/library/azure/dn798938.aspx)</ept> for the list.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Create an Azure Search index whose schema is compatible with your data source.</source>
          <target state="new">Create an Azure Search index whose schema is compatible with your data source.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Create an Azure Search data source as described in <bpt id="p1">[</bpt>Create Data Source<ept id="p1">](#CreateDataSource)</ept>.</source>
          <target state="new">Create an Azure Search data source as described in <bpt id="p1">[</bpt>Create Data Source<ept id="p1">](#CreateDataSource)</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Create an Azure Search indexer as described <bpt id="p1">[</bpt>Create Indexer<ept id="p1">](#CreateIndexer)</ept>.</source>
          <target state="new">Create an Azure Search indexer as described <bpt id="p1">[</bpt>Create Indexer<ept id="p1">](#CreateIndexer)</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You should plan on creating one indexer for every target index and data source combination.</source>
          <target state="new">You should plan on creating one indexer for every target index and data source combination.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can have multiple indexers writing into the same index, and you can reuse the same data source for multiple indexers.</source>
          <target state="new">You can have multiple indexers writing into the same index, and you can reuse the same data source for multiple indexers.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>However, an indexer can only consume one data source at a time, and can only write to a single index.</source>
          <target state="new">However, an indexer can only consume one data source at a time, and can only write to a single index.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>After creating an indexer, you can retrieve its execution status using the <bpt id="p1">[</bpt>Get Indexer Status<ept id="p1">](#GetIndexerStatus)</ept> operation.</source>
          <target state="new">After creating an indexer, you can retrieve its execution status using the <bpt id="p1">[</bpt>Get Indexer Status<ept id="p1">](#GetIndexerStatus)</ept> operation.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can also run an indexer at any time (instead of or in addition to running it periodically on a schedule) using the <bpt id="p1">[</bpt>Run Indexer<ept id="p1">](#RunIndexer)</ept> operation.</source>
          <target state="new">You can also run an indexer at any time (instead of or in addition to running it periodically on a schedule) using the <bpt id="p1">[</bpt>Run Indexer<ept id="p1">](#RunIndexer)</ept> operation.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">


##</ph> Create Data Source

You can create a new data source within an Azure Search service using an HTTP POST request.</source>
          <target state="new"><ph id="ph1">


##</ph> Create Data Source

You can create a new data source within an Azure Search service using an HTTP POST request.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>POST https://[service name].search.windows.net/datasources?api-version=[api-version]
    Content-Type: application/json
    api-key: [admin key]

Alternatively, you can use PUT and specify the data source name on the URI.</source>
          <target state="new">POST https://[service name].search.windows.net/datasources?api-version=[api-version]
    Content-Type: application/json
    api-key: [admin key]

Alternatively, you can use PUT and specify the data source name on the URI.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the data source does not exist, it will be created.</source>
          <target state="new">If the data source does not exist, it will be created.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">PUT https://[service name].search.windows.net/datasources/[datasource name]?api-version=[api-version]

**</bpt>Note<ept id="p1">**</ept>: The maximum number of data sources allowed varies by pricing tier.</source>
          <target state="new"><bpt id="p1">PUT https://[service name].search.windows.net/datasources/[datasource name]?api-version=[api-version]

**</bpt>Note<ept id="p1">**</ept>: The maximum number of data sources allowed varies by pricing tier.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The free service allows up to 3 data sources.</source>
          <target state="new">The free service allows up to 3 data sources.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Standard service allows 50 data sources.</source>
          <target state="new">Standard service allows 50 data sources.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt><ept id="p1">Limits and constraints](https://msdn.microsoft.com/library/azure/dn798934.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt><ept id="p1">Limits and constraints](https://msdn.microsoft.com/library/azure/dn798934.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Request<ept id="p1">**</ept>

HTTPS is required for all service requests.</source>
          <target state="new"><bpt id="p1">**</bpt>Request<ept id="p1">**</ept>

HTTPS is required for all service requests.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Create Data Source<ept id="p1">**</ept> request can be constructed using either a POST or PUT method.</source>
          <target state="new">The <bpt id="p1">**</bpt>Create Data Source<ept id="p1">**</ept> request can be constructed using either a POST or PUT method.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When using POST, you must provide a data source name in the request body along with the data source definition.</source>
          <target state="new">When using POST, you must provide a data source name in the request body along with the data source definition.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>With PUT, the name is part of the URL.</source>
          <target state="new">With PUT, the name is part of the URL.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the data source doesn't exist, it is created.</source>
          <target state="new">If the data source doesn't exist, it is created.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If it already exists, it is updated to the new definition.</source>
          <target state="new">If it already exists, it is updated to the new definition.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The data source name must be lower case, start with a letter or number, have no slashes or dots, and be less than 128 characters.</source>
          <target state="new">The data source name must be lower case, start with a letter or number, have no slashes or dots, and be less than 128 characters.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>After starting the data source name with a letter or number, the rest of the name can include any letter, number and dashes, as long as the dashes are not consecutive.</source>
          <target state="new">After starting the data source name with a letter or number, the rest of the name can include any letter, number and dashes, as long as the dashes are not consecutive.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt><ept id="p1">Naming rules](https://msdn.microsoft.com/library/azure/dn857353.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt><ept id="p1">Naming rules](https://msdn.microsoft.com/library/azure/dn857353.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The current version is <ph id="ph1">`2015-02-28`</ph>.</source>
          <target state="new">The current version is <ph id="ph1">`2015-02-28`</ph>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Request Headers<ept id="p1">**</ept>

The following list describes the required and optional request headers.</source>
          <target state="new"><bpt id="p1">**</bpt>Request Headers<ept id="p1">**</ept>

The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `Content-Type`</ph>: Required.</source>
          <target state="new"><ph id="ph1">- `Content-Type`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Set this to <ph id="ph1">`application/json`</ph><ph id="ph2">
- `api-key`</ph>: Required.</source>
          <target state="new">Set this to <ph id="ph1">`application/json`</ph><ph id="ph2">
- `api-key`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service.</source>
          <target state="new">It is a string value, unique to your service.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Create Data Source<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> header set to your admin key (as opposed to a query key).</source>
          <target state="new">The <bpt id="p1">**</bpt>Create Data Source<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> header set to your admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can get both the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the <bpt id="p1">[</bpt><ept id="p1">Azure management portal](https://portal.azure.com/)</ept>.</source>
          <target state="new">You can get both the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the <bpt id="p1">[</bpt><ept id="p1">Azure management portal](https://portal.azure.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="CreateDataSourceRequestSyntax"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Request Body Syntax<ept id="p1">**</ept>

The body of the request contains a data source definition, which includes type of the data source, credentials to read the data, as well as an optional data change detection and data deletion detection policies that are used to efficiently identify changed or deleted data in the data source when used with a periodically scheduled indexer.</source>
          <target state="new"><ph id="ph1">&lt;a name="CreateDataSourceRequestSyntax"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Request Body Syntax<ept id="p1">**</ept>

The body of the request contains a data source definition, which includes type of the data source, credentials to read the data, as well as an optional data change detection and data deletion detection policies that are used to efficiently identify changed or deleted data in the data source when used with a periodically scheduled indexer.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The syntax for structuring the request payload is as follows.</source>
          <target state="new">The syntax for structuring the request payload is as follows.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A sample request is provided further on in this topic.</source>
          <target state="new">A sample request is provided further on in this topic.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>{ 
        "name" : "Required for POST, optional for PUT.</source>
          <target state="new">{ 
        "name" : "Required for POST, optional for PUT.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The name of the data source",
        "description" : "Optional.</source>
          <target state="new">The name of the data source",
        "description" : "Optional.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Anything you want, or nothing at all",
        "type" : "Required.</source>
          <target state="new">Anything you want, or nothing at all",
        "type" : "Required.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Must be 'azuresql' or 'documentdb'",
        "credentials" : { "connectionString" : "Required.</source>
          <target state="new">Must be 'azuresql' or 'documentdb'",
        "credentials" : { "connectionString" : "Required.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Connection string for your data source" },
        "container" : { "name" : "Required.</source>
          <target state="new">Connection string for your data source" },
        "container" : { "name" : "Required.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name of the table or collection you wish to index" },
        "dataChangeDetectionPolicy" : { Optional.</source>
          <target state="new">The name of the table or collection you wish to index" },
        "dataChangeDetectionPolicy" : { Optional.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>See below for details }, 
        "dataDeletionDetectionPolicy" : { Optional.</source>
          <target state="new">See below for details }, 
        "dataDeletionDetectionPolicy" : { Optional.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See below for details }
    }

Request contains the following properties: 

<ph id="ph1">- `name`</ph>: Required.</source>
          <target state="new">See below for details }
    }

Request contains the following properties: 

<ph id="ph1">- `name`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The name of the data source.</source>
          <target state="new">The name of the data source.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A data source name must only contain lowercase letters, digits or dashes, cannot start or end with dashes and is limited to 128 characters.</source>
          <target state="new">A data source name must only contain lowercase letters, digits or dashes, cannot start or end with dashes and is limited to 128 characters.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `description`</ph>: An optional description.</source>
          <target state="new"><ph id="ph1">- `description`</ph>: An optional description.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `type`</ph>: Required.</source>
          <target state="new"><ph id="ph1">- `type`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Must be one of the supported data source types:
    <ph id="ph1">- `azuresql`</ph> - Azure SQL Database or SQL Server on Azure VMs
    <ph id="ph2">- `documentdb`</ph> - Azure DocumentDB
<ph id="ph3">- `credentials`</ph>:
    - The required <ph id="ph4">`connectionString`</ph> property specifies the connection string for the data source.</source>
          <target state="new">Must be one of the supported data source types:
    <ph id="ph1">- `azuresql`</ph> - Azure SQL Database or SQL Server on Azure VMs
    <ph id="ph2">- `documentdb`</ph> - Azure DocumentDB
<ph id="ph3">- `credentials`</ph>:
    - The required <ph id="ph4">`connectionString`</ph> property specifies the connection string for the data source.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The format of the connection string depends on the data source type: 
        - For Azure SQL, this is the usual SQL Server connection string.</source>
          <target state="new">The format of the connection string depends on the data source type: 
        - For Azure SQL, this is the usual SQL Server connection string.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If you're using the Azure management portal to retrieve the connection string, use the <ph id="ph1">`ADO.NET connection string`</ph> option.</source>
          <target state="new">If you're using the Azure management portal to retrieve the connection string, use the <ph id="ph1">`ADO.NET connection string`</ph> option.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>- For DocumentDB, the connection string must be in the following format: <ph id="ph1">`"AccountEndpoint=https://[your account name].documents.azure.com;AccountKey=[your account key];Database=[your database id]"`</ph>.</source>
          <target state="new">- For DocumentDB, the connection string must be in the following format: <ph id="ph1">`"AccountEndpoint=https://[your account name].documents.azure.com;AccountKey=[your account key];Database=[your database id]"`</ph>.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>All of the values are required.</source>
          <target state="new">All of the values are required.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can find them in the <bpt id="p1">[</bpt><ept id="p1">Azure management portal](https://portal.azure.com/)</ept>.</source>
          <target state="new">You can find them in the <bpt id="p1">[</bpt><ept id="p1">Azure management portal](https://portal.azure.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `container`</ph>: 
    - The required <ph id="ph2">`name`</ph> property specifies the table or view (for Azure SQL data source) or collection (for DocumentDB data source) that will be indexed.</source>
          <target state="new"><ph id="ph1">- `container`</ph>: 
    - The required <ph id="ph2">`name`</ph> property specifies the table or view (for Azure SQL data source) or collection (for DocumentDB data source) that will be indexed.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>- DocumentDB data sources also support an optional <ph id="ph1">`query`</ph> property that allows you to specify a query that flattens an arbitrary JSON document layout into a flat schema that Azure Search can index.</source>
          <target state="new">- DocumentDB data sources also support an optional <ph id="ph1">`query`</ph> property that allows you to specify a query that flattens an arbitrary JSON document layout into a flat schema that Azure Search can index.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>- The optional <ph id="ph1">`dataChangeDetectionPolicy`</ph> and <ph id="ph2">`dataDeletionDetectionPolicy`</ph> are described below.</source>
          <target state="new">- The optional <ph id="ph1">`dataChangeDetectionPolicy`</ph> and <ph id="ph2">`dataDeletionDetectionPolicy`</ph> are described below.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="DataChangeDetectionPolicies"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Data Change Detection Policies<ept id="p1">**</ept>

The purpose of a data change detection policy is to efficiently identify changed data items.</source>
          <target state="new"><ph id="ph1">&lt;a name="DataChangeDetectionPolicies"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Data Change Detection Policies<ept id="p1">**</ept>

The purpose of a data change detection policy is to efficiently identify changed data items.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Supported policies vary based on the data source type.</source>
          <target state="new">Supported policies vary based on the data source type.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Sections below describe each policy.</source>
          <target state="new">Sections below describe each policy.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NOTE:<ept id="p1">**</ept> You can switch data detection policies after the indexer is already created, using the <bpt id="p2">[</bpt><ept id="p2">Reset Indexer](#ResetIndexer)</ept> API.</source>
          <target state="new"><bpt id="p1">**</bpt>NOTE:<ept id="p1">**</ept> You can switch data detection policies after the indexer is already created, using the <bpt id="p2">[</bpt><ept id="p2">Reset Indexer](#ResetIndexer)</ept> API.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">***</bpt>High Watermark Change Detection Policy<ept id="p1">***</ept> 

Use this policy when your data source contains a column or property that meets the following criteria:
 
- All inserts specify a value for the column.</source>
          <target state="new"><bpt id="p1">***</bpt>High Watermark Change Detection Policy<ept id="p1">***</ept> 

Use this policy when your data source contains a column or property that meets the following criteria:
 
- All inserts specify a value for the column.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>- All updates to an item also change the value of the column.</source>
          <target state="new">- All updates to an item also change the value of the column.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>- The value of this column increases with each change.</source>
          <target state="new">- The value of this column increases with each change.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>- Queries that use a filter clause similar to the following <ph id="ph1">`WHERE [High Water Mark Column] &gt; [Current High Water Mark Value]`</ph> can be executed efficiently.</source>
          <target state="new">- Queries that use a filter clause similar to the following <ph id="ph1">`WHERE [High Water Mark Column] &gt; [Current High Water Mark Value]`</ph> can be executed efficiently.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For example, when using Azure SQL data sources, an indexed <ph id="ph1">`rowversion`</ph> column is the ideal candidate for use with with the high water mark policy.</source>
          <target state="new">For example, when using Azure SQL data sources, an indexed <ph id="ph1">`rowversion`</ph> column is the ideal candidate for use with with the high water mark policy.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When using DocumentDB data sources, you must use the <ph id="ph1">`_ts`</ph> property provided by DocumentDB.</source>
          <target state="new">When using DocumentDB data sources, you must use the <ph id="ph1">`_ts`</ph> property provided by DocumentDB.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This policy can be specified as follows:

    <bpt id="p1">{ 
        "@odata.type" : "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
        "highWaterMarkColumnName" : "[a row version or last_updated column name]" 
    } 

***</bpt>SQL Integrated Change Detection Policy<ept id="p1">***</ept>

If your SQL database supports <bpt id="p2">[</bpt><ept id="p2">change tracking](https://msdn.microsoft.com/library/bb933875.aspx)</ept>, we recommend using SQL Integrated Change Tracking Policy.</source>
          <target state="new">This policy can be specified as follows:

    <bpt id="p1">{ 
        "@odata.type" : "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
        "highWaterMarkColumnName" : "[a row version or last_updated column name]" 
    } 

***</bpt>SQL Integrated Change Detection Policy<ept id="p1">***</ept>

If your SQL database supports <bpt id="p2">[</bpt><ept id="p2">change tracking](https://msdn.microsoft.com/library/bb933875.aspx)</ept>, we recommend using SQL Integrated Change Tracking Policy.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This policy enables the most efficient change tracking, and allows Azure Search to identify deleted rows without you having to have an explicit "soft delete" column in your schema.</source>
          <target state="new">This policy enables the most efficient change tracking, and allows Azure Search to identify deleted rows without you having to have an explicit "soft delete" column in your schema.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Integrated change tracking is supported starting with the following SQL Server database versions: 
- SQL Server 2008 R2, if you're using SQL Server on Azure VMs.</source>
          <target state="new">Integrated change tracking is supported starting with the following SQL Server database versions: 
- SQL Server 2008 R2, if you're using SQL Server on Azure VMs.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>- Azure SQL Database V12, if you're using Azure SQL Database.</source>
          <target state="new">- Azure SQL Database V12, if you're using Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>When using SQL Integrated Change Tracking policy, do not specify a separate data deletion detection policy - this policy has built-in support for identifying deleted rows.</source>
          <target state="new">When using SQL Integrated Change Tracking policy, do not specify a separate data deletion detection policy - this policy has built-in support for identifying deleted rows.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This policy can only be used with tables; it cannot be used with views.</source>
          <target state="new">This policy can only be used with tables; it cannot be used with views.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You need to enable change tracking for the table you're using before you can use this policy.</source>
          <target state="new">You need to enable change tracking for the table you're using before you can use this policy.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt><ept id="p1">Enable and disable change tracking](https://msdn.microsoft.com/library/bb964713.aspx)</ept> for instructions.</source>
          <target state="new">See <bpt id="p1">[</bpt><ept id="p1">Enable and disable change tracking](https://msdn.microsoft.com/library/bb964713.aspx)</ept> for instructions.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When structuring the <bpt id="p1">**</bpt>Create Data Source<ept id="p1">**</ept> request, SQL integrated change tracking policy can be specified as follows:

    <ph id="ph1">{ 
        "@odata.type" : "#Microsoft.Azure.Search.SqlIntegratedChangeTrackingPolicy" 
    }

&lt;a name="DataDeletionDetectionPolicies"&gt;&lt;/a&gt;</ph><bpt id="p2">
**</bpt>Data Deletion Detection Policies<ept id="p2">**</ept>

The purpose of a data deletion detection policy is to efficiently identify deleted data items.</source>
          <target state="new">When structuring the <bpt id="p1">**</bpt>Create Data Source<ept id="p1">**</ept> request, SQL integrated change tracking policy can be specified as follows:

    <ph id="ph1">{ 
        "@odata.type" : "#Microsoft.Azure.Search.SqlIntegratedChangeTrackingPolicy" 
    }

&lt;a name="DataDeletionDetectionPolicies"&gt;&lt;/a&gt;</ph><bpt id="p2">
**</bpt>Data Deletion Detection Policies<ept id="p2">**</ept>

The purpose of a data deletion detection policy is to efficiently identify deleted data items.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Currently, the only supported policy is the <ph id="ph1">`Soft Delete`</ph> policy, which allows identifying deleted items based on the value of a <ph id="ph2">`soft delete`</ph> column or property in the data source.</source>
          <target state="new">Currently, the only supported policy is the <ph id="ph1">`Soft Delete`</ph> policy, which allows identifying deleted items based on the value of a <ph id="ph2">`soft delete`</ph> column or property in the data source.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This policy can be specified as follows:

    <bpt id="p1">{ 
        "@odata.type" : "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
        "softDeleteColumnName" : "the column that specifies whether a row was deleted", 
        "softDeleteMarkerValue" : "the value that identifies a row as deleted" 
    }

**</bpt>NOTE:<ept id="p1">**</ept> Only columns with string, integer, or boolean values are supported.</source>
          <target state="new">This policy can be specified as follows:

    <bpt id="p1">{ 
        "@odata.type" : "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
        "softDeleteColumnName" : "the column that specifies whether a row was deleted", 
        "softDeleteMarkerValue" : "the value that identifies a row as deleted" 
    }

**</bpt>NOTE:<ept id="p1">**</ept> Only columns with string, integer, or boolean values are supported.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The value used as <ph id="ph1">`softDeleteMarkerValue`</ph> must be a string, even if the corresponding column holds integers or booleans.</source>
          <target state="new">The value used as <ph id="ph1">`softDeleteMarkerValue`</ph> must be a string, even if the corresponding column holds integers or booleans.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For example, if the value that appears in your data source is 1, use <ph id="ph1">`"1"`</ph> as the <ph id="ph2">`softDeleteMarkerValue`</ph>.</source>
          <target state="new">For example, if the value that appears in your data source is 1, use <ph id="ph1">`"1"`</ph> as the <ph id="ph2">`softDeleteMarkerValue`</ph>.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="CreateDataSourceRequestExamples"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Request Body Examples<ept id="p1">**</ept>

If you intend to use the data source with an indexer that runs on a schedule, this example shows how to specify change and deletion detection policies: 

    { 
        "name" : "asqldatasource",
        "description" : "a description",
        "type" : "azuresql",
        "credentials" : { "connectionString" : "Server=tcp:....database.windows.net,1433;Database=...;User ID=...;Password=...;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;" },
        "container" : { "name" : "sometable" },
        "dataChangeDetectionPolicy" : { "@odata.type" : "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy", "highWaterMarkColumnName" : "RowVersion" }, 
        "dataDeletionDetectionPolicy" : { "@odata.type" : "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy", "softDeleteColumnName" : "IsDeleted", "softDeleteMarkerValue" : "true" }
    }

If you only intend to use the data source for one-time copy of the data, the policies can be omitted:

    <bpt id="p2">{ 
        "name" : "asqldatasource",
        "description" : "anything you want, or nothing at all",
        "type" : "azuresql",
        "credentials" : { "connectionString" : "Server=tcp:....database.windows.net,1433;Database=...;User ID=...;Password=...;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;" },
        "container" : { "name" : "sometable" }
    } 

**</bpt>Response<ept id="p2">**</ept>

For a successful request: 201 Created.</source>
          <target state="new"><ph id="ph1">&lt;a name="CreateDataSourceRequestExamples"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Request Body Examples<ept id="p1">**</ept>

If you intend to use the data source with an indexer that runs on a schedule, this example shows how to specify change and deletion detection policies: 

    { 
        "name" : "asqldatasource",
        "description" : "a description",
        "type" : "azuresql",
        "credentials" : { "connectionString" : "Server=tcp:....database.windows.net,1433;Database=...;User ID=...;Password=...;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;" },
        "container" : { "name" : "sometable" },
        "dataChangeDetectionPolicy" : { "@odata.type" : "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy", "highWaterMarkColumnName" : "RowVersion" }, 
        "dataDeletionDetectionPolicy" : { "@odata.type" : "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy", "softDeleteColumnName" : "IsDeleted", "softDeleteMarkerValue" : "true" }
    }

If you only intend to use the data source for one-time copy of the data, the policies can be omitted:

    <bpt id="p2">{ 
        "name" : "asqldatasource",
        "description" : "anything you want, or nothing at all",
        "type" : "azuresql",
        "credentials" : { "connectionString" : "Server=tcp:....database.windows.net,1433;Database=...;User ID=...;Password=...;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;" },
        "container" : { "name" : "sometable" }
    } 

**</bpt>Response<ept id="p2">**</ept>

For a successful request: 201 Created.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="UpdateDataSource"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Update Data Source

You can update an existing data source using an HTTP PUT request.</source>
          <target state="new"><ph id="ph1">&lt;a name="UpdateDataSource"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Update Data Source

You can update an existing data source using an HTTP PUT request.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You specify the name of the data source to update on the request URI:

    PUT https://[service name].search.windows.net/datasources/[datasource name]?api-version=[api-version]
    Content-Type: application/json
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">You specify the name of the data source to update on the request URI:

    PUT https://[service name].search.windows.net/datasources/[datasource name]?api-version=[api-version]
    Content-Type: application/json
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The current version is <ph id="ph1">`2015-02-28`</ph>.</source>
          <target state="new">The current version is <ph id="ph1">`2015-02-28`</ph>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Request<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Request<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The request body syntax is the same as for <bpt id="p1">[</bpt><ept id="p1">Create Data Source requests](#CreateDataSourceRequestSyntax)</ept>.</source>
          <target state="new">The request body syntax is the same as for <bpt id="p1">[</bpt><ept id="p1">Create Data Source requests](#CreateDataSourceRequestSyntax)</ept>.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For a successful request: 201 Created if a new data source was created, and 204 No Content if an existing data source was updated.</source>
          <target state="new">For a successful request: 201 Created if a new data source was created, and 204 No Content if an existing data source was updated.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NOTE:<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>NOTE:<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Some properties cannot be updated on an existing data source.</source>
          <target state="new">Some properties cannot be updated on an existing data source.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For example, you cannot change the type of an existing data source.</source>
          <target state="new">For example, you cannot change the type of an existing data source.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="ListDataSource"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> List Data Sources

The <bpt id="p1">**</bpt>List Data Sources<ept id="p1">**</ept> operation returns a list of the data sources in your Azure Search service.</source>
          <target state="new"><ph id="ph1">&lt;a name="ListDataSource"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> List Data Sources

The <bpt id="p1">**</bpt>List Data Sources<ept id="p1">**</ept> operation returns a list of the data sources in your Azure Search service.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>GET https://[service name].search.windows.net/datasources?api-version=[api-version]
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">GET https://[service name].search.windows.net/datasources?api-version=[api-version]
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The current version is <ph id="ph1">`2015-02-28`</ph>.</source>
          <target state="new">The current version is <ph id="ph1">`2015-02-28`</ph>.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

For a successful request: 200 OK.</source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

For a successful request: 200 OK.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Here is an example response body:

    {
      "value" : [
        {
          "name": "datasource1",
          "type": "azuresql",
          ... other data source properties
        }]
    }

Note that you can filter the response down to just the properties you're interested in.</source>
          <target state="new">Here is an example response body:

    {
      "value" : [
        {
          "name": "datasource1",
          "type": "azuresql",
          ... other data source properties
        }]
    }

Note that you can filter the response down to just the properties you're interested in.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For example, if you want only a list of data source names, use the OData <ph id="ph1">`$select`</ph> query option:

    GET /datasources?api-version=205-02-28&amp;$select=name

In this case, the response from the above example would appear as follows: 

    {
      "value" : [ { "name": "datasource1" }, ... ]
    }

This is a useful technique to save bandwidth if you have a lot of data sources in your Search service.</source>
          <target state="new">For example, if you want only a list of data source names, use the OData <ph id="ph1">`$select`</ph> query option:

    GET /datasources?api-version=205-02-28&amp;$select=name

In this case, the response from the above example would appear as follows: 

    {
      "value" : [ { "name": "datasource1" }, ... ]
    }

This is a useful technique to save bandwidth if you have a lot of data sources in your Search service.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="GetDataSource"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Get Data Source

The <bpt id="p1">**</bpt>Get Data Source<ept id="p1">**</ept> operation gets the data source definition from Azure Search.</source>
          <target state="new"><ph id="ph1">&lt;a name="GetDataSource"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Get Data Source

The <bpt id="p1">**</bpt>Get Data Source<ept id="p1">**</ept> operation gets the data source definition from Azure Search.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>GET https://[service name].search.windows.net/datasources/[datasource name]?api-version=[api-version]
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">GET https://[service name].search.windows.net/datasources/[datasource name]?api-version=[api-version]
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The current version is <ph id="ph1">`2015-02-28`</ph>.</source>
          <target state="new">The current version is <ph id="ph1">`2015-02-28`</ph>.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 200 OK is returned for a successful response.</source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 200 OK is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The response is similar to examples in <bpt id="p1">[</bpt><ept id="p1">Create Data Source example requests](#CreateDataSourceRequestExamples)</ept>: 

    <bpt id="p2">{ 
        "name" : "asqldatasource",
        "description" : "a description",
        "type" : "azuresql",
        "credentials" : { "connectionString" : "Server=tcp:....database.windows.net,1433;Database=...;User ID=...;Password=...;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;" },
        "container" : { "name" : "sometable" },
        "dataChangeDetectionPolicy" : { 
            "@odata.type" : "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
            "highWaterMarkColumnName" : "RowVersion" }, 
        "dataDeletionDetectionPolicy" : { 
            "@odata.type" : "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
            "softDeleteColumnName" : "IsDeleted", 
            "softDeleteMarkerValue" : "true" }
    }

**</bpt>NOTE<ept id="p2">**</ept> Do not set the <ph id="ph1">`Accept`</ph> request header to <ph id="ph2">`application/json;odata.metadata=none`</ph> when calling this API as doing so will cause <ph id="ph3">`@odata.type`</ph> attribute to be omitted from the response and you won't be able to differentiate between data change and data deletion detection policies of different types.</source>
          <target state="new">The response is similar to examples in <bpt id="p1">[</bpt><ept id="p1">Create Data Source example requests](#CreateDataSourceRequestExamples)</ept>: 

    <bpt id="p2">{ 
        "name" : "asqldatasource",
        "description" : "a description",
        "type" : "azuresql",
        "credentials" : { "connectionString" : "Server=tcp:....database.windows.net,1433;Database=...;User ID=...;Password=...;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;" },
        "container" : { "name" : "sometable" },
        "dataChangeDetectionPolicy" : { 
            "@odata.type" : "#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy",
            "highWaterMarkColumnName" : "RowVersion" }, 
        "dataDeletionDetectionPolicy" : { 
            "@odata.type" : "#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy",
            "softDeleteColumnName" : "IsDeleted", 
            "softDeleteMarkerValue" : "true" }
    }

**</bpt>NOTE<ept id="p2">**</ept> Do not set the <ph id="ph1">`Accept`</ph> request header to <ph id="ph2">`application/json;odata.metadata=none`</ph> when calling this API as doing so will cause <ph id="ph3">`@odata.type`</ph> attribute to be omitted from the response and you won't be able to differentiate between data change and data deletion detection policies of different types.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="DeleteDataSource"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Delete Data Source

The <bpt id="p1">**</bpt>Delete Data Source<ept id="p1">**</ept> operation removes a data source from your Azure Search service.</source>
          <target state="new"><ph id="ph1">&lt;a name="DeleteDataSource"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Delete Data Source

The <bpt id="p1">**</bpt>Delete Data Source<ept id="p1">**</ept> operation removes a data source from your Azure Search service.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">DELETE https://[service name].search.windows.net/datasources/[datasource name]?api-version=[api-version]
    api-key: [admin key]

**</bpt>NOTE<ept id="p1">**</ept> If any indexers reference the data source that you're deleting, the delete operation will still proceed.</source>
          <target state="new"><bpt id="p1">DELETE https://[service name].search.windows.net/datasources/[datasource name]?api-version=[api-version]
    api-key: [admin key]

**</bpt>NOTE<ept id="p1">**</ept> If any indexers reference the data source that you're deleting, the delete operation will still proceed.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>However, those indexers will transition into an error state upon their next run.</source>
          <target state="new">However, those indexers will transition into an error state upon their next run.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The current version is <ph id="ph1">`2015-02-28`</ph>.</source>
          <target state="new">The current version is <ph id="ph1">`2015-02-28`</ph>.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 204 No Content is returned for a successful response.</source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 204 No Content is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="CreateIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Create Indexer

You can create a new indexer within an Azure Search service using an HTTP POST request.</source>
          <target state="new"><ph id="ph1">&lt;a name="CreateIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Create Indexer

You can create a new indexer within an Azure Search service using an HTTP POST request.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>POST https://[service name].search.windows.net/indexers?api-version=[api-version]
    Content-Type: application/json
    api-key: [admin key]

Alternatively, you can use PUT and specify the data source name on the URI.</source>
          <target state="new">POST https://[service name].search.windows.net/indexers?api-version=[api-version]
    Content-Type: application/json
    api-key: [admin key]

Alternatively, you can use PUT and specify the data source name on the URI.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If the data source does not exist, it will be created.</source>
          <target state="new">If the data source does not exist, it will be created.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">PUT https://[service name].search.windows.net/indexers/[indexer name]?api-version=[api-version]

**</bpt>Note<ept id="p1">**</ept>: The maximum number of indexers allowed varies by pricing tier.</source>
          <target state="new"><bpt id="p1">PUT https://[service name].search.windows.net/indexers/[indexer name]?api-version=[api-version]

**</bpt>Note<ept id="p1">**</ept>: The maximum number of indexers allowed varies by pricing tier.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The free service allows up to 3 indexers.</source>
          <target state="new">The free service allows up to 3 indexers.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Standard service allows 50 indexers.</source>
          <target state="new">Standard service allows 50 indexers.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt><ept id="p1">Limits and constraints](https://msdn.microsoft.com/library/azure/dn798934.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt><ept id="p1">Limits and constraints](https://msdn.microsoft.com/library/azure/dn798934.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The current version is <ph id="ph1">`2015-02-28`</ph>.</source>
          <target state="new">The current version is <ph id="ph1">`2015-02-28`</ph>.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="CreateIndexerRequestSyntax"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Request Body Syntax<ept id="p1">**</ept>

The body of the request contains an indexer definition, which specifies the data source and the target index for indexing, as well as optional indexing schedule and parameters.</source>
          <target state="new"><ph id="ph1">&lt;a name="CreateIndexerRequestSyntax"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Request Body Syntax<ept id="p1">**</ept>

The body of the request contains an indexer definition, which specifies the data source and the target index for indexing, as well as optional indexing schedule and parameters.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The syntax for structuring the request payload is as follows.</source>
          <target state="new">The syntax for structuring the request payload is as follows.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A sample request is provided further on in this topic.</source>
          <target state="new">A sample request is provided further on in this topic.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">{ 
        "name" : "Required for POST, optional for PUT. The name of the indexer",
        "description" : "Optional. Anything you want, or null",
        "dataSourceName" : "Required. The name of an existing data source",
        "targetIndexName" : "Required. The name of an existing index",
        "schedule" : { Optional. See Indexing Schedule below. },
        "parameters" : { Optional. See Indexing Parameters below. },
        "fieldMappings" : { Optional. See Field Mappings below. }
    }

**</bpt>Indexer Schedule<ept id="p1">**</ept>

An indexer can optionally specify a schedule.</source>
          <target state="new"><bpt id="p1">{ 
        "name" : "Required for POST, optional for PUT. The name of the indexer",
        "description" : "Optional. Anything you want, or null",
        "dataSourceName" : "Required. The name of an existing data source",
        "targetIndexName" : "Required. The name of an existing index",
        "schedule" : { Optional. See Indexing Schedule below. },
        "parameters" : { Optional. See Indexing Parameters below. },
        "fieldMappings" : { Optional. See Field Mappings below. }
    }

**</bpt>Indexer Schedule<ept id="p1">**</ept>

An indexer can optionally specify a schedule.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If a schedule is present, the indexer will run periodically as per schedule.</source>
          <target state="new">If a schedule is present, the indexer will run periodically as per schedule.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Schedule has the following attributes:

<ph id="ph1">- `interval`</ph>: Required.</source>
          <target state="new">Schedule has the following attributes:

<ph id="ph1">- `interval`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A duration value that specifies an interval or period for indexer runs.</source>
          <target state="new">A duration value that specifies an interval or period for indexer runs.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The smallest allowed interval is 5 minutes; the longest is one day.</source>
          <target state="new">The smallest allowed interval is 5 minutes; the longest is one day.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>It must be formatted as an XSD "dayTimeDuration" value (a restricted subset of an <bpt id="p1">[</bpt><ept id="p1">ISO 8601 duration](http://www.w3.org/TR/xmlschema11-2/#dayTimeDuration)</ept> value).</source>
          <target state="new">It must be formatted as an XSD "dayTimeDuration" value (a restricted subset of an <bpt id="p1">[</bpt><ept id="p1">ISO 8601 duration](http://www.w3.org/TR/xmlschema11-2/#dayTimeDuration)</ept> value).</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The pattern for this is: <ph id="ph1">`P(nD)(T(nH)(nM))`</ph>.</source>
          <target state="new">The pattern for this is: <ph id="ph1">`P(nD)(T(nH)(nM))`</ph>.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Examples: <ph id="ph1">`PT15M`</ph> for every 15 minutes, <ph id="ph2">`PT2H`</ph> for every 2 hours.</source>
          <target state="new">Examples: <ph id="ph1">`PT15M`</ph> for every 15 minutes, <ph id="ph2">`PT2H`</ph> for every 2 hours.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `startTime`</ph>: Required.</source>
          <target state="new"><ph id="ph1">- `startTime`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An UTC datetime when the indexer should start running.</source>
          <target state="new">An UTC datetime when the indexer should start running.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Indexer Parameters<ept id="p1">**</ept>

An indexer can optionally specify several parameters that affect its behavior.</source>
          <target state="new"><bpt id="p1">**</bpt>Indexer Parameters<ept id="p1">**</ept>

An indexer can optionally specify several parameters that affect its behavior.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>All of the parameters are optional.</source>
          <target state="new">All of the parameters are optional.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `maxFailedItems`</ph>: The number of items that can fail to be indexed before an indexer run is considered a failure.</source>
          <target state="new"><ph id="ph1">- `maxFailedItems`</ph>: The number of items that can fail to be indexed before an indexer run is considered a failure.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Default is 0.</source>
          <target state="new">Default is 0.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Information about failed items is returned by the <bpt id="p1">[</bpt><ept id="p1">Get Indexer Status](#GetIndexerStatus)</ept> operation.</source>
          <target state="new">Information about failed items is returned by the <bpt id="p1">[</bpt><ept id="p1">Get Indexer Status](#GetIndexerStatus)</ept> operation.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `maxFailedItemsPerBatch`</ph>: The number of items that can fail to be indexed in each batch before an indexer run is considered a failure.</source>
          <target state="new"><ph id="ph1">- `maxFailedItemsPerBatch`</ph>: The number of items that can fail to be indexed in each batch before an indexer run is considered a failure.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Default is 0.</source>
          <target state="new">Default is 0.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `base64EncodeKeys`</ph>: Specifies whether or not document keys will be base-64 encoded.</source>
          <target state="new"><ph id="ph1">- `base64EncodeKeys`</ph>: Specifies whether or not document keys will be base-64 encoded.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Azure Search imposes restrictions on characters that can be present in a document key.</source>
          <target state="new">Azure Search imposes restrictions on characters that can be present in a document key.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>However, the values in your source data may contain characters that are invalid.</source>
          <target state="new">However, the values in your source data may contain characters that are invalid.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>If it is necessary to index such values as document keys, this flag can be set to true.</source>
          <target state="new">If it is necessary to index such values as document keys, this flag can be set to true.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Default is <ph id="ph1">`false`</ph>.</source>
          <target state="new">Default is <ph id="ph1">`false`</ph>.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Field Mappings<ept id="p1">**</ept>

You can use field mappings to map a field name in the data source to a different field name in the target index.</source>
          <target state="new"><bpt id="p1">**</bpt>Field Mappings<ept id="p1">**</ept>

You can use field mappings to map a field name in the data source to a different field name in the target index.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>For example, consider a source table with a field <ph id="ph1">`_id`</ph>.</source>
          <target state="new">For example, consider a source table with a field <ph id="ph1">`_id`</ph>.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Azure Search doesn't allow a field name starting with an underscore, so the field must be renamed.</source>
          <target state="new">Azure Search doesn't allow a field name starting with an underscore, so the field must be renamed.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This can be done using the <ph id="ph1">`fieldMappings`</ph> property of indexer as follows: 
    
    "fieldMappings" : [ { "sourceFieldName" : "_id", "targetFieldName" : "id" } ] 

You can specify multiple field mappings: 

    "fieldMappings" : [ 
        { "sourceFieldName" : "_id", "targetFieldName" : "id" },
        { "sourceFieldName" : "_timestamp", "targetFieldName" : "timestamp" },
     ]

Both source and target field names are case-insensitive.</source>
          <target state="new">This can be done using the <ph id="ph1">`fieldMappings`</ph> property of indexer as follows: 
    
    "fieldMappings" : [ { "sourceFieldName" : "_id", "targetFieldName" : "id" } ] 

You can specify multiple field mappings: 

    "fieldMappings" : [ 
        { "sourceFieldName" : "_id", "targetFieldName" : "id" },
        { "sourceFieldName" : "_timestamp", "targetFieldName" : "timestamp" },
     ]

Both source and target field names are case-insensitive.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="FieldMappingFunctions"&gt;&lt;/a&gt;</ph><bpt id="p1">
***</bpt>Field Mapping Functions<ept id="p1">***</ept>

Field mappings can also be used to transform source field values using <bpt id="p2">*</bpt>mapping functions<ept id="p2">*</ept>.</source>
          <target state="new"><ph id="ph1">&lt;a name="FieldMappingFunctions"&gt;&lt;/a&gt;</ph><bpt id="p1">
***</bpt>Field Mapping Functions<ept id="p1">***</ept>

Field mappings can also be used to transform source field values using <bpt id="p2">*</bpt>mapping functions<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Only one such function is currently supported: <ph id="ph1">`jsonArrayToStringCollection`</ph>.</source>
          <target state="new">Only one such function is currently supported: <ph id="ph1">`jsonArrayToStringCollection`</ph>.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>It parses a field that contains a string formatted as a JSON array into a Collection(Edm.String) field in the target index.</source>
          <target state="new">It parses a field that contains a string formatted as a JSON array into a Collection(Edm.String) field in the target index.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>It is intended for use with Azure SQL indexer in particular, since SQL doesn't have a native collection data type.</source>
          <target state="new">It is intended for use with Azure SQL indexer in particular, since SQL doesn't have a native collection data type.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>It can be used as follows: 

    "fieldMappings" : [ { "sourceFieldName" : "tags", "mappingFunction" : { "name" : "jsonArrayToStringCollection" } } ] 

For example, if the source field contains the string <ph id="ph1">`["red", "white", "blue"]`</ph>, then the target field of type <ph id="ph2">`Collection(Edm.String)`</ph> will be populated with the three values <ph id="ph3">`"red"`</ph>, <ph id="ph4">`"white"`</ph> and <ph id="ph5">`"blue"`</ph>.</source>
          <target state="new">It can be used as follows: 

    "fieldMappings" : [ { "sourceFieldName" : "tags", "mappingFunction" : { "name" : "jsonArrayToStringCollection" } } ] 

For example, if the source field contains the string <ph id="ph1">`["red", "white", "blue"]`</ph>, then the target field of type <ph id="ph2">`Collection(Edm.String)`</ph> will be populated with the three values <ph id="ph3">`"red"`</ph>, <ph id="ph4">`"white"`</ph> and <ph id="ph5">`"blue"`</ph>.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>NOTE: <ph id="ph1">`targetFieldName`</ph> property is optional; if left out, the <ph id="ph2">`sourceFieldName`</ph> value is used).</source>
          <target state="new">NOTE: <ph id="ph1">`targetFieldName`</ph> property is optional; if left out, the <ph id="ph2">`sourceFieldName`</ph> value is used).</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="CreateIndexerRequestExamples"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Request Body Examples<ept id="p1">**</ept>

The following example creates an indexer that copies data from the table referenced by the <ph id="ph2">`ordersds`</ph> data source to the <ph id="ph3">`orders`</ph> index on a schedule that starts on Jan 1, 2015 UTC and runs hourly.</source>
          <target state="new"><ph id="ph1">&lt;a name="CreateIndexerRequestExamples"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Request Body Examples<ept id="p1">**</ept>

The following example creates an indexer that copies data from the table referenced by the <ph id="ph2">`ordersds`</ph> data source to the <ph id="ph3">`orders`</ph> index on a schedule that starts on Jan 1, 2015 UTC and runs hourly.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Each indexer invocation will be successful if no more than 5 items fail to be indexed in each batch, and no more than 10 items fail to be indexed in total.</source>
          <target state="new">Each indexer invocation will be successful if no more than 5 items fail to be indexed in each batch, and no more than 10 items fail to be indexed in total.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">{
        "name" : "myindexer",
        "description" : "a cool indexer",
        "dataSourceName" : "ordersds",
        "targetIndexName" : "orders",
        "schedule" : { "interval" : "PT1H", "startTime" : "2015-01-01T00:00:00Z" },
        "parameters" : { "maxFailedItems" : 10, "maxFailedItemsPerBatch" : 5, "base64EncodeKeys": false }
    }

**</bpt>Response<ept id="p1">**</ept>

201 Created for a successful request.</source>
          <target state="new"><bpt id="p1">{
        "name" : "myindexer",
        "description" : "a cool indexer",
        "dataSourceName" : "ordersds",
        "targetIndexName" : "orders",
        "schedule" : { "interval" : "PT1H", "startTime" : "2015-01-01T00:00:00Z" },
        "parameters" : { "maxFailedItems" : 10, "maxFailedItemsPerBatch" : 5, "base64EncodeKeys": false }
    }

**</bpt>Response<ept id="p1">**</ept>

201 Created for a successful request.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="UpdateIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Update Indexer

You can update an existing indexer using an HTTP PUT request.</source>
          <target state="new"><ph id="ph1">&lt;a name="UpdateIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Update Indexer

You can update an existing indexer using an HTTP PUT request.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>You specify the name of the indexer to update on the request URI:

    PUT https://[service name].search.windows.net/indexers/[indexer name]?api-version=[api-version]
    Content-Type: application/json
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">You specify the name of the indexer to update on the request URI:

    PUT https://[service name].search.windows.net/indexers/[indexer name]?api-version=[api-version]
    Content-Type: application/json
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The current version is <ph id="ph1">`2015-02-28`</ph>.</source>
          <target state="new">The current version is <ph id="ph1">`2015-02-28`</ph>.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Request<ept id="p1">**</ept>

The request body syntax is the same as for <bpt id="p2">[</bpt><ept id="p2">Create Indexer requests](#CreateIndexerRequestSyntax)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Request<ept id="p1">**</ept>

The request body syntax is the same as for <bpt id="p2">[</bpt><ept id="p2">Create Indexer requests](#CreateIndexerRequestSyntax)</ept>.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

For a successful request: 201 Created if a new indexer was created, and 204 No Content if an existing indexer was updated.</source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

For a successful request: 201 Created if a new indexer was created, and 204 No Content if an existing indexer was updated.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="ListIndexers"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> List Indexers

The <bpt id="p1">**</bpt>List Indexers<ept id="p1">**</ept> operation returns the list of indexers in your Azure Search service.</source>
          <target state="new"><ph id="ph1">&lt;a name="ListIndexers"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> List Indexers

The <bpt id="p1">**</bpt>List Indexers<ept id="p1">**</ept> operation returns the list of indexers in your Azure Search service.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>GET https://[service name].search.windows.net/indexers?api-version=[api-version]
    api-key: [admin key]


The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">GET https://[service name].search.windows.net/indexers?api-version=[api-version]
    api-key: [admin key]


The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</source>
          <target state="new">The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

For a successful request: 200 OK.</source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

For a successful request: 200 OK.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Here is an example response body:

    {
      "value" : [
      {
        "name" : "myindexer",
        "description" : "a cool indexer",
        "dataSourceName" : "ordersds",
        "targetIndexName" : "orders",
        ... other indexer properties
      }]
    }

Note that you can filter the response down to just the properties you're interested in.</source>
          <target state="new">Here is an example response body:

    {
      "value" : [
      {
        "name" : "myindexer",
        "description" : "a cool indexer",
        "dataSourceName" : "ordersds",
        "targetIndexName" : "orders",
        ... other indexer properties
      }]
    }

Note that you can filter the response down to just the properties you're interested in.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>For example, if you want only a list of indexer names, use the OData <ph id="ph1">`$select`</ph> query option:

    GET /indexers?api-version=2014-10-20-Preview&amp;$select=name

In this case, the response from the above example would appear as follows: 

    {
      "value" : [ { "name": "myindexer" } ]
    }

This is a useful technique to save bandwidth if you have a lot of indexers in your Search service.</source>
          <target state="new">For example, if you want only a list of indexer names, use the OData <ph id="ph1">`$select`</ph> query option:

    GET /indexers?api-version=2014-10-20-Preview&amp;$select=name

In this case, the response from the above example would appear as follows: 

    {
      "value" : [ { "name": "myindexer" } ]
    }

This is a useful technique to save bandwidth if you have a lot of indexers in your Search service.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="GetIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Get Indexer

The <bpt id="p1">**</bpt>Get Indexer<ept id="p1">**</ept> operation gets the indexer definition from Azure Search.</source>
          <target state="new"><ph id="ph1">&lt;a name="GetIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Get Indexer

The <bpt id="p1">**</bpt>Get Indexer<ept id="p1">**</ept> operation gets the indexer definition from Azure Search.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>GET https://[service name].search.windows.net/indexers/[indexer name]?api-version=[api-version]
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">GET https://[service name].search.windows.net/indexers/[indexer name]?api-version=[api-version]
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</source>
          <target state="new">The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 200 OK is returned for a successful response.</source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 200 OK is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The response is similar to examples in <bpt id="p1">[</bpt><ept id="p1">Create Indexer example requests](#CreateIndexerRequestExamples)</ept>: 

    <ph id="ph1">{
        "name" : "myindexer",
        "description" : "a cool indexer",
        "dataSourceName" : "ordersds",
        "targetIndexName" : "orders",
        "schedule" : { "interval" : "PT1H", "startTime" : "2015-01-01T00:00:00Z" },
        "parameters" : { "maxFailedItems" : 10, "maxFailedItemsPerBatch" : 5, "base64EncodeKeys": false }
    }


&lt;a name="DeleteIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Delete Indexer

The <bpt id="p2">**</bpt>Delete Indexer<ept id="p2">**</ept> operation removes an indexer from your Azure Search service.</source>
          <target state="new">The response is similar to examples in <bpt id="p1">[</bpt><ept id="p1">Create Indexer example requests](#CreateIndexerRequestExamples)</ept>: 

    <ph id="ph1">{
        "name" : "myindexer",
        "description" : "a cool indexer",
        "dataSourceName" : "ordersds",
        "targetIndexName" : "orders",
        "schedule" : { "interval" : "PT1H", "startTime" : "2015-01-01T00:00:00Z" },
        "parameters" : { "maxFailedItems" : 10, "maxFailedItemsPerBatch" : 5, "base64EncodeKeys": false }
    }


&lt;a name="DeleteIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Delete Indexer

The <bpt id="p2">**</bpt>Delete Indexer<ept id="p2">**</ept> operation removes an indexer from your Azure Search service.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>DELETE https://[service name].search.windows.net/indexers/[indexer name]?api-version=[api-version]
    api-key: [admin key]

When an indexer is deleted, the indexer executions in progress at that time will run to completion, but no further executions will be scheduled.</source>
          <target state="new">DELETE https://[service name].search.windows.net/indexers/[indexer name]?api-version=[api-version]
    api-key: [admin key]

When an indexer is deleted, the indexer executions in progress at that time will run to completion, but no further executions will be scheduled.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Attempts to use a non-existent indexer will result in HTTP status code 404 Not Found.</source>
          <target state="new">Attempts to use a non-existent indexer will result in HTTP status code 404 Not Found.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</source>
          <target state="new">The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 204 No Content is returned for a successful response.</source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 204 No Content is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="RunIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Run Indexer

In addition to running periodically on a schedule, an indexer can also be invoked on demand via the <bpt id="p1">**</bpt>Run Indexer<ept id="p1">**</ept> operation: 

    POST https://[service name].search.windows.net/indexers/[indexer name]/run?api-version=[api-version]
    api-key: [admin key]

The <ph id="ph3">`api-version`</ph> is required.</source>
          <target state="new"><ph id="ph1">&lt;a name="RunIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Run Indexer

In addition to running periodically on a schedule, an indexer can also be invoked on demand via the <bpt id="p1">**</bpt>Run Indexer<ept id="p1">**</ept> operation: 

    POST https://[service name].search.windows.net/indexers/[indexer name]/run?api-version=[api-version]
    api-key: [admin key]

The <ph id="ph3">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</source>
          <target state="new">The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 202 Accepted is returned for a successful response.</source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 202 Accepted is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="GetIndexerStatus"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Get Indexer Status

The <bpt id="p1">**</bpt>Get Indexer Status<ept id="p1">**</ept> operation retrieves the current status and execution history of an indexer: 

    GET https://[service name].search.windows.net/indexers/[indexer name]/status?api-version=[api-version]
    api-key: [admin key]


The <ph id="ph3">`api-version`</ph> is required.</source>
          <target state="new"><ph id="ph1">&lt;a name="GetIndexerStatus"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Get Indexer Status

The <bpt id="p1">**</bpt>Get Indexer Status<ept id="p1">**</ept> operation retrieves the current status and execution history of an indexer: 

    GET https://[service name].search.windows.net/indexers/[indexer name]/status?api-version=[api-version]
    api-key: [admin key]


The <ph id="ph3">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</source>
          <target state="new">The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 200 OK for a successful response.</source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 200 OK for a successful response.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The response body contains information about overall indexer health status, the last indexer invocation, as well as the history of recent indexer invocations (if present).</source>
          <target state="new">The response body contains information about overall indexer health status, the last indexer invocation, as well as the history of recent indexer invocations (if present).</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>A sample response body looks like this: 

    <bpt id="p1">{
        "status":"running",
        "lastResult": {
            "status":"success",
            "errorMessage":null,
            "startTime":"2014-11-26T03:37:18.853Z",
            "endTime":"2014-11-26T03:37:19.012Z",
            "errors":[],
            "itemsProcessed":11,
            "itemsFailed":0,
            "initialTrackingState":null,
            "finalTrackingState":null
         },
        "executionHistory":[ {
            "status":"success",
            "errorMessage":null,
            "startTime":"2014-11-26T03:37:18.853Z",
            "endTime":"2014-11-26T03:37:19.012Z",
            "errors":[],
            "itemsProcessed":11,
            "itemsFailed":0,
            "initialTrackingState":null,
            "finalTrackingState":null
        }]
    }

**</bpt>Indexer Status<ept id="p1">**</ept>

Indexer status can be one of the following  values:

<ph id="ph1">- `running`</ph> indicates that the indexer is running normally.</source>
          <target state="new">A sample response body looks like this: 

    <bpt id="p1">{
        "status":"running",
        "lastResult": {
            "status":"success",
            "errorMessage":null,
            "startTime":"2014-11-26T03:37:18.853Z",
            "endTime":"2014-11-26T03:37:19.012Z",
            "errors":[],
            "itemsProcessed":11,
            "itemsFailed":0,
            "initialTrackingState":null,
            "finalTrackingState":null
         },
        "executionHistory":[ {
            "status":"success",
            "errorMessage":null,
            "startTime":"2014-11-26T03:37:18.853Z",
            "endTime":"2014-11-26T03:37:19.012Z",
            "errors":[],
            "itemsProcessed":11,
            "itemsFailed":0,
            "initialTrackingState":null,
            "finalTrackingState":null
        }]
    }

**</bpt>Indexer Status<ept id="p1">**</ept>

Indexer status can be one of the following  values:

<ph id="ph1">- `running`</ph> indicates that the indexer is running normally.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Note that some of the indexer executions may still be failing, so it's a good idea to check the <ph id="ph1">`lastResult`</ph> property as well.</source>
          <target state="new">Note that some of the indexer executions may still be failing, so it's a good idea to check the <ph id="ph1">`lastResult`</ph> property as well.</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `error`</ph> indicates that the indexer experienced an error that cannot be corrected without human intervention.</source>
          <target state="new"><ph id="ph1">- `error`</ph> indicates that the indexer experienced an error that cannot be corrected without human intervention.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>For example, the data source credentials may have expired, or the schema of the data source or of the target index has changed in a breaking way.</source>
          <target state="new">For example, the data source credentials may have expired, or the schema of the data source or of the target index has changed in a breaking way.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Indexer Execution Result<ept id="p1">**</ept>

An indexer execution result contains information about a single indexer execution.</source>
          <target state="new"><bpt id="p1">**</bpt>Indexer Execution Result<ept id="p1">**</ept>

An indexer execution result contains information about a single indexer execution.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The latest result is surfaced as the <ph id="ph1">`lastResult`</ph> property of the indexer status.</source>
          <target state="new">The latest result is surfaced as the <ph id="ph1">`lastResult`</ph> property of the indexer status.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Other recent results, if present, are returned as the <ph id="ph1">`executionHistory`</ph> property of the indexer status.</source>
          <target state="new">Other recent results, if present, are returned as the <ph id="ph1">`executionHistory`</ph> property of the indexer status.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Indexer execution result contains the following properties: 

<ph id="ph1">- `status`</ph>: the status of an execution.</source>
          <target state="new">Indexer execution result contains the following properties: 

<ph id="ph1">- `status`</ph>: the status of an execution.</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt><ept id="p1">Indexer Execution Status](#IndexerExecutionStatus)</ept> below for details.</source>
          <target state="new">See <bpt id="p1">[</bpt><ept id="p1">Indexer Execution Status](#IndexerExecutionStatus)</ept> below for details.</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `errorMessage`</ph>: error message for a failed execution.</source>
          <target state="new"><ph id="ph1">- `errorMessage`</ph>: error message for a failed execution.</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `startTime`</ph>: the time in UTC when this execution started.</source>
          <target state="new"><ph id="ph1">- `startTime`</ph>: the time in UTC when this execution started.</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `endTime`</ph>: the time in UTC when this execution ended.</source>
          <target state="new"><ph id="ph1">- `endTime`</ph>: the time in UTC when this execution ended.</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>This value is not set if the execution is still in progress.</source>
          <target state="new">This value is not set if the execution is still in progress.</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `errors`</ph>: a list of item-level errors, if any.</source>
          <target state="new"><ph id="ph1">- `errors`</ph>: a list of item-level errors, if any.</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `itemsProcessed`</ph>: the number of data source items (for example, table rows) that the indexer attempted to index during this execution.</source>
          <target state="new"><ph id="ph1">- `itemsProcessed`</ph>: the number of data source items (for example, table rows) that the indexer attempted to index during this execution.</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `itemsFailed`</ph>: the number of items that failed during this execution.</source>
          <target state="new"><ph id="ph1">- `itemsFailed`</ph>: the number of items that failed during this execution.</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `initialTrackingState`</ph>: always <ph id="ph2">`null`</ph> for the first indexer execution, or if the data change tracking policy is not enabled on the data source used.</source>
          <target state="new"><ph id="ph1">- `initialTrackingState`</ph>: always <ph id="ph2">`null`</ph> for the first indexer execution, or if the data change tracking policy is not enabled on the data source used.</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>If such a policy is enabled, in subsequent executions this value indicates the first (lowest) change tracking value processed by this execution.</source>
          <target state="new">If such a policy is enabled, in subsequent executions this value indicates the first (lowest) change tracking value processed by this execution.</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `finalTrackingState`</ph>: always <ph id="ph2">`null`</ph> if the data change tracking policy is not enabled on the data source used.</source>
          <target state="new"><ph id="ph1">- `finalTrackingState`</ph>: always <ph id="ph2">`null`</ph> if the data change tracking policy is not enabled on the data source used.</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Otherwise, indicates the latest (highest) change tracking value successfully processed by this execution.</source>
          <target state="new">Otherwise, indicates the latest (highest) change tracking value successfully processed by this execution.</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="IndexerExecutionStatus"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Indexer Execution Status<ept id="p1">**</ept>

Indexer execution status captures the status of a single indexer execution.</source>
          <target state="new"><ph id="ph1">&lt;a name="IndexerExecutionStatus"&gt;&lt;/a&gt;</ph><bpt id="p1">
**</bpt>Indexer Execution Status<ept id="p1">**</ept>

Indexer execution status captures the status of a single indexer execution.</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>It can have the following values:

<ph id="ph1">- `success`</ph> indicates that the indexer execution has completed successfully.</source>
          <target state="new">It can have the following values:

<ph id="ph1">- `success`</ph> indicates that the indexer execution has completed successfully.</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `inProgress`</ph> indicates that the indexer execution is in progress.</source>
          <target state="new"><ph id="ph1">- `inProgress`</ph> indicates that the indexer execution is in progress.</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `transientFailure`</ph> indicates that an indexer execution has failed.</source>
          <target state="new"><ph id="ph1">- `transientFailure`</ph> indicates that an indexer execution has failed.</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">`errorMessage`</ph> property for details.</source>
          <target state="new">See <ph id="ph1">`errorMessage`</ph> property for details.</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The failure may or may not require human intervention to fix - for example, fixing a schema incom
- patibility between the data source and the target index requires user action, while a temporary data source downtime does not.</source>
          <target state="new">The failure may or may not require human intervention to fix - for example, fixing a schema incom
- patibility between the data source and the target index requires user action, while a temporary data source downtime does not.</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Indexer invocations will continue per schedule, if one is present.</source>
          <target state="new">Indexer invocations will continue per schedule, if one is present.</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `persistentFailure`</ph> indicates that the indexer has failed in a way that requires human intervention.</source>
          <target state="new"><ph id="ph1">- `persistentFailure`</ph> indicates that the indexer has failed in a way that requires human intervention.</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Scheduled indexer executions stop.</source>
          <target state="new">Scheduled indexer executions stop.</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>After addressing the issue, use Reset Indexer API to restart the scheduled executions.</source>
          <target state="new">After addressing the issue, use Reset Indexer API to restart the scheduled executions.</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `reset`</ph> indicates that the indexer has been reset by a call to Reset Indexer API (see below).</source>
          <target state="new"><ph id="ph1">- `reset`</ph> indicates that the indexer has been reset by a call to Reset Indexer API (see below).</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="ResetIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Reset Indexer

The <bpt id="p1">**</bpt>Reset Indexer<ept id="p1">**</ept> operation resets the change tracking state associated with the indexer.</source>
          <target state="new"><ph id="ph1">&lt;a name="ResetIndexer"&gt;&lt;/a&gt;</ph><ph id="ph2">
##</ph> Reset Indexer

The <bpt id="p1">**</bpt>Reset Indexer<ept id="p1">**</ept> operation resets the change tracking state associated with the indexer.</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>This allows you to trigger from-scratch re-indexing (for example, if your data source schema has changed), or to change the data change detection policy for a data source associated with the indexer.</source>
          <target state="new">This allows you to trigger from-scratch re-indexing (for example, if your data source schema has changed), or to change the data change detection policy for a data source associated with the indexer.</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>POST https://[service name].search.windows.net/indexers/[indexer name]/reset?api-version=[api-version]
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">POST https://[service name].search.windows.net/indexers/[indexer name]/reset?api-version=[api-version]
    api-key: [admin key]

The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</source>
          <target state="new">The preview version is <ph id="ph1">`2015-02-28-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Search versioning](https://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> has details and more information about alternative versions.</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> must be an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</source>
          <target state="new">Refer to the authentication section in <bpt id="p1">[</bpt><ept id="p1">Search Service REST API](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to learn more about keys.</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Create a Search service in the portal](search-create-service-portal.md)</ept> explains how to get the service URL and key properties used in the request.</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 204 No Content for a successful response.</source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept>

Status Code: 204 No Content for a successful response.</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Mapping between SQL Data Types and Azure Search Data Types</source>
          <target state="new">Mapping between SQL Data Types and Azure Search Data Types</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>SQL data type</source>
          <target state="new">SQL data type</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Allowed target index field types</source>
          <target state="new">Allowed target index field types</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="new">Notes</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>bit</source>
          <target state="new">bit</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Edm.Boolean, Edm.String</source>
          <target state="new">Edm.Boolean, Edm.String</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>int, smallint, tinyint</source>
          <target state="new">int, smallint, tinyint</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Edm.Int32, Edm.Int64, Edm.String</source>
          <target state="new">Edm.Int32, Edm.Int64, Edm.String</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>bigint</source>
          <target state="new">bigint</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Edm.Int64, Edm.String</source>
          <target state="new">Edm.Int64, Edm.String</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>real, float</source>
          <target state="new">real, float</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Edm.Double, Edm.String</source>
          <target state="new">Edm.Double, Edm.String</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>smallmoney, money</source>
          <target state="new">smallmoney, money</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>decimal</source>
          <target state="new">decimal</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>numeric</source>
          <target state="new">numeric</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Edm.String</source>
          <target state="new">Edm.String</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Azure Search does not support converting decimal types into Edm.Double because this would lose precision</source>
          <target state="new">Azure Search does not support converting decimal types into Edm.Double because this would lose precision</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>char, nchar, varchar, nvarchar</source>
          <target state="new">char, nchar, varchar, nvarchar</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Edm.String</source>
          <target state="new">Edm.String</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Collection(Edm.String)</source>
          <target state="new">Collection(Edm.String)</target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt><ept id="p1">Field Mapping Functions](#FieldMappingFunctions)</ept> in this document for details on how to transform a string column into a Collection(Edm.String)</source>
          <target state="new">See <bpt id="p1">[</bpt><ept id="p1">Field Mapping Functions](#FieldMappingFunctions)</ept> in this document for details on how to transform a string column into a Collection(Edm.String)</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>smalldatetime, datetime, datetime2, date, datetimeoffset</source>
          <target state="new">smalldatetime, datetime, datetime2, date, datetimeoffset</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Edm.DateTimeOffset, Edm.String</source>
          <target state="new">Edm.DateTimeOffset, Edm.String</target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>uniqueidentifer</source>
          <target state="new">uniqueidentifer</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Edm.String</source>
          <target state="new">Edm.String</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>geography</source>
          <target state="new">geography</target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Edm.GeographyPoint</source>
          <target state="new">Edm.GeographyPoint</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Only geography instances of type POINT with SRID 4326 (which is the default) are supported</source>
          <target state="new">Only geography instances of type POINT with SRID 4326 (which is the default) are supported</target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>rowversion</source>
          <target state="new">rowversion</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="new">N/A</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Row-version columns cannot be stored in the search index, but they can be used for change tracking</source>
          <target state="new">Row-version columns cannot be stored in the search index, but they can be used for change tracking</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>time, timespan</source>
          <target state="new">time, timespan</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>binary, varbinary, image,</source>
          <target state="new">binary, varbinary, image,</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>xml, geometry, CLR types</source>
          <target state="new">xml, geometry, CLR types</target>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="new">N/A</target>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Not supported</source>
          <target state="new">Not supported</target>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><ph id="ph1">

##</ph> Mapping between JSON Data Types and Azure Search Data Types</source>
          <target state="new"><ph id="ph1">

##</ph> Mapping between JSON Data Types and Azure Search Data Types</target>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>JSON data type</source>
          <target state="new">JSON data type</target>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Allowed target index field types</source>
          <target state="new">Allowed target index field types</target>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="new">Notes</target>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="new">bool</target>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Edm.Boolean, Edm.String</source>
          <target state="new">Edm.Boolean, Edm.String</target>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Integral numbers</source>
          <target state="new">Integral numbers</target>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Edm.Int32, Edm.Int64, Edm.String</source>
          <target state="new">Edm.Int32, Edm.Int64, Edm.String</target>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Floating-point numbers</source>
          <target state="new">Floating-point numbers</target>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Edm.Double, Edm.String</source>
          <target state="new">Edm.Double, Edm.String</target>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="new">string</target>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Edm.String</source>
          <target state="new">Edm.String</target>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>arrays of primitive types, e.g. [ "a", "b", "c" ]</source>
          <target state="new">arrays of primitive types, e.g. [ "a", "b", "c" ]</target>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Collection(Edm.String)</source>
          <target state="new">Collection(Edm.String)</target>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Strings that look like dates</source>
          <target state="new">Strings that look like dates</target>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Edm.DateTimeOffset, Edm.String</source>
          <target state="new">Edm.DateTimeOffset, Edm.String</target>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>GeoJSON point objects</source>
          <target state="new">GeoJSON point objects</target>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Edm.GeographyPoint</source>
          <target state="new">Edm.GeographyPoint</target>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>GeoJSON points are JSON objects in the following format: { "type" : "Point", "coordinates" : [long, lat] }</source>
          <target state="new">GeoJSON points are JSON objects in the following format: { "type" : "Point", "coordinates" : [long, lat] }</target>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Other JSON objects</source>
          <target state="new">Other JSON objects</target>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="new">N/A</target>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Not supported; Azure Search currently supports only primitive types and string collections</source>
          <target state="new">Not supported; Azure Search currently supports only primitive types and string collections</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4dd9dfd0b7bf269a9ef2c99031b92faff4997ff4</xliffext:olfilehash>
  </header>
</xliff>