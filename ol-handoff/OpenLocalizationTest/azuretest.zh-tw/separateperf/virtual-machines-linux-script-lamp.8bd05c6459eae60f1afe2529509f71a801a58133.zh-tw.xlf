<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Deploy a Linux application using the Azure CustomScript Extension</source>
          <target state="new">Deploy a Linux application using the Azure CustomScript Extension</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use the Azure CustomScript extension to deploy applications on Linux virtual machines.</source>
          <target state="new">Learn how to use the Azure CustomScript extension to deploy applications on Linux virtual machines.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Deploy a LAMP app using the Azure CustomScript Extension for Linux</source>
          <target state="new">Deploy a LAMP app using the Azure CustomScript Extension for Linux</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Microsoft Azure CustomScript Extension for Linux provides a way to customize your virtual machines (VMs) by running arbitrary code written in any scripting language supported by the VM (for example, Python, and Bash).</source>
          <target state="new">The Microsoft Azure CustomScript Extension for Linux provides a way to customize your virtual machines (VMs) by running arbitrary code written in any scripting language supported by the VM (for example, Python, and Bash).</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This provides a very flexible way to automate application deployment to multiple machines.</source>
          <target state="new">This provides a very flexible way to automate application deployment to multiple machines.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can deploy the CustomScript Extension using the Azure Portal, Windows PowerShell, or the Azure Command-Line Interface (Azure CLI).</source>
          <target state="new">You can deploy the CustomScript Extension using the Azure Portal, Windows PowerShell, or the Azure Command-Line Interface (Azure CLI).</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In this article we'll deploy a simple LAMP application to Ubuntu using the Azure CLI.</source>
          <target state="new">In this article we'll deploy a simple LAMP application to Ubuntu using the Azure CLI.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For the next example, first create two Azure VMs running Ubuntu 14.04.</source>
          <target state="new">For the next example, first create two Azure VMs running Ubuntu 14.04.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The VMs are called <bpt id="p1">*</bpt>script-vm<ept id="p1">*</ept> and <bpt id="p2">*</bpt>lamp-vm<ept id="p2">*</ept>.</source>
          <target state="new">The VMs are called <bpt id="p1">*</bpt>script-vm<ept id="p1">*</ept> and <bpt id="p2">*</bpt>lamp-vm<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use unique names when you create the VMs.</source>
          <target state="new">Use unique names when you create the VMs.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>One is used to run the CLI commands and one is used to deploy the LAMP app.</source>
          <target state="new">One is used to run the CLI commands and one is used to deploy the LAMP app.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You also need an Azure Storage account and a key to access it (you can get this from the Azure Portal).</source>
          <target state="new">You also need an Azure Storage account and a key to access it (you can get this from the Azure Portal).</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you need help creating Linux VMs on Azure refer to <bpt id="p1">[</bpt>Create a Virtual Machine Running Linux<ept id="p1">](virtual-machines-linux-tutorial.md)</ept>.</source>
          <target state="new">If you need help creating Linux VMs on Azure refer to <bpt id="p1">[</bpt>Create a Virtual Machine Running Linux<ept id="p1">](virtual-machines-linux-tutorial.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The install commands assume Ubuntu, but you can adapt the installation for any supported Linux distro.</source>
          <target state="new">The install commands assume Ubuntu, but you can adapt the installation for any supported Linux distro.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The script-vm VM needs to have Azure CLI installed, with a working connection to Azure.</source>
          <target state="new">The script-vm VM needs to have Azure CLI installed, with a working connection to Azure.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For help with this refer to <bpt id="p1">[</bpt>Install and Configure the Azure Command-Line Interface<ept id="p1">](../xplat-cli.md)</ept>.</source>
          <target state="new">For help with this refer to <bpt id="p1">[</bpt>Install and Configure the Azure Command-Line Interface<ept id="p1">](../xplat-cli.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Upload a script</source>
          <target state="new">Upload a script</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this example the CustomScript Extension runs a script on a remote VM to install the LAMP stack and create a PHP page.</source>
          <target state="new">In this example the CustomScript Extension runs a script on a remote VM to install the LAMP stack and create a PHP page.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In order to access the script from anywhere we'll upload it as an Azure blob.</source>
          <target state="new">In order to access the script from anywhere we'll upload it as an Azure blob.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Script overview</source>
          <target state="new">Script overview</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The next script example installs a LAMP stack to Ubuntu (including setting up a silent install of MySQL), writes a simple PHP file, and starts Apache.</source>
          <target state="new">The next script example installs a LAMP stack to Ubuntu (including setting up a silent install of MySQL), writes a simple PHP file, and starts Apache.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Upload script</source>
          <target state="new">Upload script</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Save the script as a text file, for example <bpt id="p1">*</bpt>lamp_install.sh<ept id="p1">*</ept>, and then upload it to Azure Storage.</source>
          <target state="new">Save the script as a text file, for example <bpt id="p1">*</bpt>lamp_install.sh<ept id="p1">*</ept>, and then upload it to Azure Storage.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can do this easily with Azure CLI.</source>
          <target state="new">You can do this easily with Azure CLI.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example uploads the file to a storage container named "scripts".</source>
          <target state="new">The following example uploads the file to a storage container named "scripts".</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the container doesn't exist you'll need to create it first.</source>
          <target state="new">If the container doesn't exist you'll need to create it first.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Also create a JSON file that describes how to download the script from Azure Storage.</source>
          <target state="new">Also create a JSON file that describes how to download the script from Azure Storage.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Save this as <bpt id="p1">*</bpt>public_config.json<ept id="p1">*</ept> (replacing "mystorage" with the name of your storage account):</source>
          <target state="new">Save this as <bpt id="p1">*</bpt>public_config.json<ept id="p1">*</ept> (replacing "mystorage" with the name of your storage account):</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Deploy the extension</source>
          <target state="new">Deploy the extension</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Now you can use the next command to deploy the Linux CustomScript Extension to the remote VM using the Azure CLI.</source>
          <target state="new">Now you can use the next command to deploy the Linux CustomScript Extension to the remote VM using the Azure CLI.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The previous command downloads and runs the <bpt id="p1">*</bpt>lamp_install.sh<ept id="p1">*</ept> script on the VM called <bpt id="p2">*</bpt>lamp-vm<ept id="p2">*</ept>.</source>
          <target state="new">The previous command downloads and runs the <bpt id="p1">*</bpt>lamp_install.sh<ept id="p1">*</ept> script on the VM called <bpt id="p2">*</bpt>lamp-vm<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Since the app includes a web server, remember to open an HTTP listening port on the remote VM with the next command.</source>
          <target state="new">Since the app includes a web server, remember to open an HTTP listening port on the remote VM with the next command.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Monitoring and troubleshooting</source>
          <target state="new">Monitoring and troubleshooting</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can check on how well the custom script runs by looking at the log file on the remote VM.</source>
          <target state="new">You can check on how well the custom script runs by looking at the log file on the remote VM.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>SSH to <bpt id="p1">*</bpt>lamp-vm<ept id="p1">*</ept> and tail the log file with the next command.</source>
          <target state="new">SSH to <bpt id="p1">*</bpt>lamp-vm<ept id="p1">*</ept> and tail the log file with the next command.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>After you run the CustomScript Extension, you can browse to the PHP page you created for information.</source>
          <target state="new">After you run the CustomScript Extension, you can browse to the PHP page you created for information.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The PHP page for the example in this article is <bpt id="p1">*</bpt>http://lamp-vm.cloudapp.net/phpinfo.php<ept id="p1">*</ept>.</source>
          <target state="new">The PHP page for the example in this article is <bpt id="p1">*</bpt>http://lamp-vm.cloudapp.net/phpinfo.php<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Additional resources</source>
          <target state="new">Additional resources</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can use the same basic steps to deploy more complex apps.</source>
          <target state="new">You can use the same basic steps to deploy more complex apps.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In this example the install script was saved as a public blob in Azure Storage.</source>
          <target state="new">In this example the install script was saved as a public blob in Azure Storage.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A more secure option would be to store the install script as a secure blob with a <bpt id="p1">[</bpt>Secure Access Signature<ept id="p1">](https://msdn.microsoft.com/library/azure/ee395415.aspx)</ept> (SAS).</source>
          <target state="new">A more secure option would be to store the install script as a secure blob with a <bpt id="p1">[</bpt>Secure Access Signature<ept id="p1">](https://msdn.microsoft.com/library/azure/ee395415.aspx)</ept> (SAS).</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Additional resources for Azure CLI, Linux and the CustomScript Extension are listed next.</source>
          <target state="new">Additional resources for Azure CLI, Linux and the CustomScript Extension are listed next.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Automate Linux VM Customization Tasks Using CustomScript Extension</source>
          <target state="new">Automate Linux VM Customization Tasks Using CustomScript Extension</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Azure Linux Extensions (GitHub)</source>
          <target state="new">Azure Linux Extensions (GitHub)</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Linux and Open-Source Computing on Azure</source>
          <target state="new">Linux and Open-Source Computing on Azure</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee315d9f26af4eab05c980f027e84af782eb153d</xliffext:olfilehash>
  </header>
</xliff>