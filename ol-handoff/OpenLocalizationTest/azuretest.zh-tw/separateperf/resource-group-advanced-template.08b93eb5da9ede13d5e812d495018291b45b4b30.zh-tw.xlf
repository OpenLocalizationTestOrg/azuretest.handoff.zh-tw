<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Resource Manager Advanced Template Operations</source>
          <target state="new">Azure Resource Manager Advanced Template Operations</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Describes how to use nested templates and the copy operation in an Azure Resource Manager template when deploying apps to Azure.</source>
          <target state="new">Describes how to use nested templates and the copy operation in an Azure Resource Manager template when deploying apps to Azure.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Advanced Template Operations</source>
          <target state="new">Advanced Template Operations</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic describes the copy operation and nested templates which you can use to perform more advanced tasks when deploying resources to Azure.</source>
          <target state="new">This topic describes the copy operation and nested templates which you can use to perform more advanced tasks when deploying resources to Azure.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="new">copy</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Enables you to iterate a specified number of times when deploying a resource.</source>
          <target state="new">Enables you to iterate a specified number of times when deploying a resource.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The copy operation is particularly helpful when working with arrays because you can iterate through each element in the array.</source>
          <target state="new">The copy operation is particularly helpful when working with arrays because you can iterate through each element in the array.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>copyIndex()<ept id="p1">**</ept> function returns the current value for the iteration.</source>
          <target state="new">The <bpt id="p1">**</bpt>copyIndex()<ept id="p1">**</ept> function returns the current value for the iteration.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can deploy three web sites named:</source>
          <target state="new">You can deploy three web sites named:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>examplecopy-Contoso</source>
          <target state="new">examplecopy-Contoso</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>examplecopy-Fabrikam</source>
          <target state="new">examplecopy-Fabrikam</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>examplecopy-Coho</source>
          <target state="new">examplecopy-Coho</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>with the following template.</source>
          <target state="new">with the following template.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use the copy operation without an array.</source>
          <target state="new">You can also use the copy operation without an array.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, you might want to add an incrementing number to the end of each resource name that is deployed.</source>
          <target state="new">For example, you might want to add an incrementing number to the end of each resource name that is deployed.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can deploys three web sites named:</source>
          <target state="new">You can deploys three web sites named:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>examplecopy-0</source>
          <target state="new">examplecopy-0</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>examplecopy-1</source>
          <target state="new">examplecopy-1</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>examplecopy-2.</source>
          <target state="new">examplecopy-2.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>with the following template.</source>
          <target state="new">with the following template.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You'll notice in the previous example that the index value goes from zero to 2.</source>
          <target state="new">You'll notice in the previous example that the index value goes from zero to 2.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To offset the index value, you can pass a value in the <bpt id="p1">**</bpt>copyIndex()<ept id="p1">**</ept> function, such as <bpt id="p2">**</bpt>copyIndex(1)<ept id="p2">**</ept>.</source>
          <target state="new">To offset the index value, you can pass a value in the <bpt id="p1">**</bpt>copyIndex()<ept id="p1">**</ept> function, such as <bpt id="p2">**</bpt>copyIndex(1)<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The number of iterations to perform is still specified in the copy element, but the value of copyIndex is offset by the specified value.</source>
          <target state="new">The number of iterations to perform is still specified in the copy element, but the value of copyIndex is offset by the specified value.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>So, using the same template as the previous example, but specifying <bpt id="p1">**</bpt>copyIndex(1)<ept id="p1">**</ept> would deploy three web sites named:</source>
          <target state="new">So, using the same template as the previous example, but specifying <bpt id="p1">**</bpt>copyIndex(1)<ept id="p1">**</ept> would deploy three web sites named:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>examplecopy-1</source>
          <target state="new">examplecopy-1</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>examplecopy-2</source>
          <target state="new">examplecopy-2</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>examplecopy-3</source>
          <target state="new">examplecopy-3</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Nested template</source>
          <target state="new">Nested template</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You may need to merge two templates together, or launch a child template from a parent.</source>
          <target state="new">You may need to merge two templates together, or launch a child template from a parent.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can accomplish this through the use of a deployment resource within the master template that points to the nested template.</source>
          <target state="new">You can accomplish this through the use of a deployment resource within the master template that points to the nested template.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You set the <bpt id="p1">**</bpt>templateLink<ept id="p1">**</ept> property to the URI of the nested template.</source>
          <target state="new">You set the <bpt id="p1">**</bpt>templateLink<ept id="p1">**</ept> property to the URI of the nested template.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can provide parameter values for the nested template either by specifying the values directly in your template or by linking to a parameter file.</source>
          <target state="new">You can provide parameter values for the nested template either by specifying the values directly in your template or by linking to a parameter file.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The first example uses the <bpt id="p1">**</bpt>parameters<ept id="p1">**</ept> property to specify a paramter value directly.</source>
          <target state="new">The first example uses the <bpt id="p1">**</bpt>parameters<ept id="p1">**</ept> property to specify a paramter value directly.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The next example uses the <bpt id="p1">**</bpt>parametersLink<ept id="p1">**</ept> property to link to a parameter file.</source>
          <target state="new">The next example uses the <bpt id="p1">**</bpt>parametersLink<ept id="p1">**</ept> property to link to a parameter file.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Authoring Azure Resource Manager Templates</source>
          <target state="new">Authoring Azure Resource Manager Templates</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Azure Resource Manager Template Functions</source>
          <target state="new">Azure Resource Manager Template Functions</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Deploy an application with Azure Resource Manager Template</source>
          <target state="new">Deploy an application with Azure Resource Manager Template</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Azure Resource Manager Overview</source>
          <target state="new">Azure Resource Manager Overview</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">463fdf09c80df0642a02fe1da2e215c1d32d0756</xliffext:olfilehash>
  </header>
</xliff>