<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Upload Files into a Media Services account using REST API</source>
          <target state="new">Upload Files into a Media Services account using REST API</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to get media content into Media Services by creating and uploading assets.</source>
          <target state="new">Learn how to get media content into Media Services by creating and uploading assets.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Upload Files into a Media Services account using REST API</source>
          <target state="new">Upload Files into a Media Services account using REST API</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In Media Services, you upload your digital files into an asset.</source>
          <target state="new">In Media Services, you upload your digital files into an asset.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Asset<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974277.aspx)</ept> entity can contain video, audio, images, thumbnail collections, text tracks and closed caption files (and the metadata about these files.)  Once the files are uploaded into the asset, your content is stored securely in the cloud for further processing and streaming.</source>
          <target state="new">The <bpt id="p1">[</bpt>Asset<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974277.aspx)</ept> entity can contain video, audio, images, thumbnail collections, text tracks and closed caption files (and the metadata about these files.)  Once the files are uploaded into the asset, your content is stored securely in the cloud for further processing and streaming.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>Media Services uses the value of the IAssetFile.Name property when building URLs for the streaming content (for example, http://{AMSAccount}.origin.mediaservices.windows.net/{GUID}/{IAssetFile.Name}/streamingParameters.) For this reason, percent-encoding is not allowed.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>Media Services uses the value of the IAssetFile.Name property when building URLs for the streaming content (for example, http://{AMSAccount}.origin.mediaservices.windows.net/{GUID}/{IAssetFile.Name}/streamingParameters.) For this reason, percent-encoding is not allowed.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> property cannot have any of the following <bpt id="p2">[</bpt>percent-encoding-reserved characters<ept id="p2">](http://en.wikipedia.org/wiki/Percent-encoding#Percent-encoding_reserved_characters)</ept>: !*'();:@&amp;=+$,/?%#[]".</source>
          <target state="new">The value of the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> property cannot have any of the following <bpt id="p2">[</bpt>percent-encoding-reserved characters<ept id="p2">](http://en.wikipedia.org/wiki/Percent-encoding#Percent-encoding_reserved_characters)</ept>: !*'();:@&amp;=+$,/?%#[]".</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Also, there can only be one ‘.’</source>
          <target state="new">Also, there can only be one ‘.’</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>for the file name extension.</source>
          <target state="new">for the file name extension.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The basic workflow for ingesting Assets is divided into the following sections:</source>
          <target state="new">The basic workflow for ingesting Assets is divided into the following sections:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create an Asset</source>
          <target state="new">Create an Asset</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Encrypt an Asset (Optional)</source>
          <target state="new">Encrypt an Asset (Optional)</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Upload a file to blob storage</source>
          <target state="new">Upload a file to blob storage</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create an asset</source>
          <target state="new">Create an asset</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> When working with the Media Services REST API, the following considerations apply:</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> When working with the Media Services REST API, the following considerations apply:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.</source>
          <target state="new">When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Setup for Media Services REST API Development<ept id="p1">](media-services-rest-how-to-use.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Setup for Media Services REST API Development<ept id="p1">](media-services-rest-how-to-use.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.</source>
          <target state="new">After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You must make subsequent calls to the new URI as described in <bpt id="p1">[</bpt>Connecting to Media Services using REST API<ept id="p1">](media-services-rest-connect_programmatically.md)</ept>.</source>
          <target state="new">You must make subsequent calls to the new URI as described in <bpt id="p1">[</bpt>Connecting to Media Services using REST API<ept id="p1">](media-services-rest-connect_programmatically.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An asset is a container for multiple types or sets of objects in Media Services, including video, audio, images, thumbnail collections, text tracks, and closed caption files.</source>
          <target state="new">An asset is a container for multiple types or sets of objects in Media Services, including video, audio, images, thumbnail collections, text tracks, and closed caption files.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the REST API, creating an Asset requires sending POST request to Media Services and placing any property information about your asset in the request body.</source>
          <target state="new">In the REST API, creating an Asset requires sending POST request to Media Services and placing any property information about your asset in the request body.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One of the properties that you can specify when creating an asset is <bpt id="p1">**</bpt>Options<ept id="p1">**</ept>.</source>
          <target state="new">One of the properties that you can specify when creating an asset is <bpt id="p1">**</bpt>Options<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Options<ept id="p1">**</ept> is an enumeration value that describes the encryption options that an Asset can be created with.</source>
          <target state="new"><bpt id="p1">**</bpt>Options<ept id="p1">**</ept> is an enumeration value that describes the encryption options that an Asset can be created with.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A valid value is one of the values from the list below, not a combination of values.</source>
          <target state="new">A valid value is one of the values from the list below, not a combination of values.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>None<ept id="p1">**</ept> = <bpt id="p2">**</bpt>0<ept id="p2">**</ept>: No encryption will be used.</source>
          <target state="new"><bpt id="p1">**</bpt>None<ept id="p1">**</ept> = <bpt id="p2">**</bpt>0<ept id="p2">**</ept>: No encryption will be used.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This is the default value.</source>
          <target state="new">This is the default value.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Note that when using this option your content is not protected in transit or at rest in storage.</source>
          <target state="new">Note that when using this option your content is not protected in transit or at rest in storage.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you plan to deliver an MP4 using progressive download, use this option.</source>
          <target state="new">If you plan to deliver an MP4 using progressive download, use this option.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StorageEncrypted<ept id="p1">**</ept> = <bpt id="p2">**</bpt>1<ept id="p2">**</ept>: Specify if you want for your files to be encrypted with AES-256 bit encryption for upload and storage.</source>
          <target state="new"><bpt id="p1">**</bpt>StorageEncrypted<ept id="p1">**</ept> = <bpt id="p2">**</bpt>1<ept id="p2">**</ept>: Specify if you want for your files to be encrypted with AES-256 bit encryption for upload and storage.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If your asset is storage encrypted, you must configure asset delivery policy.</source>
          <target state="new">If your asset is storage encrypted, you must configure asset delivery policy.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Configuring asset delivery policy<ept id="p1">](media-services-rest-configure-asset-delivery-policy.md)</ept>.</source>
          <target state="new">For more information see <bpt id="p1">[</bpt>Configuring asset delivery policy<ept id="p1">](media-services-rest-configure-asset-delivery-policy.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CommonEncryptionProtected<ept id="p1">**</ept> = <bpt id="p2">**</bpt>2<ept id="p2">**</ept>: Specify if you are uploading files protected with a common encryption method (such as PlayReady).</source>
          <target state="new"><bpt id="p1">**</bpt>CommonEncryptionProtected<ept id="p1">**</ept> = <bpt id="p2">**</bpt>2<ept id="p2">**</ept>: Specify if you are uploading files protected with a common encryption method (such as PlayReady).</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EnvelopeEncryptionProtected<ept id="p1">**</ept> = <bpt id="p2">**</bpt>4<ept id="p2">**</ept>: Specify if you are uploading HLS encrypted with AES files.</source>
          <target state="new"><bpt id="p1">**</bpt>EnvelopeEncryptionProtected<ept id="p1">**</ept> = <bpt id="p2">**</bpt>4<ept id="p2">**</ept>: Specify if you are uploading HLS encrypted with AES files.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Note that the files must have been encoded and encrypted by Transform Manager.</source>
          <target state="new">Note that the files must have been encoded and encrypted by Transform Manager.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>If your asset will use encryption, you must create a <bpt id="p1">**</bpt>ContentKey<ept id="p1">**</ept> and link it to your asset as described in the following topic:<bpt id="p2">[</bpt>How to create a ContentKey<ept id="p2">](media-services-rest-create-contentkey.md)</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>If your asset will use encryption, you must create a <bpt id="p1">**</bpt>ContentKey<ept id="p1">**</ept> and link it to your asset as described in the following topic:<bpt id="p2">[</bpt>How to create a ContentKey<ept id="p2">](media-services-rest-create-contentkey.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Note that after you upload the files into the asset, you need to update the encryption properties on the <bpt id="p1">**</bpt>AssetFile<ept id="p1">**</ept> entity with the values you got during the <bpt id="p2">**</bpt>Asset<ept id="p2">**</ept> encryption.</source>
          <target state="new">Note that after you upload the files into the asset, you need to update the encryption properties on the <bpt id="p1">**</bpt>AssetFile<ept id="p1">**</ept> entity with the values you got during the <bpt id="p2">**</bpt>Asset<ept id="p2">**</ept> encryption.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Do it by using the <bpt id="p1">**</bpt>MERGE<ept id="p1">**</ept> HTTP request.</source>
          <target state="new">Do it by using the <bpt id="p1">**</bpt>MERGE<ept id="p1">**</ept> HTTP request.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an asset.</source>
          <target state="new">The following example shows how to create an asset.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>HTTP Request</source>
          <target state="new">HTTP Request</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>HTTP Response</source>
          <target state="new">HTTP Response</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If successful, the following is returned:</source>
          <target state="new">If successful, the following is returned:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Create an AssetFile</source>
          <target state="new">Create an AssetFile</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>AssetFile<ept id="p1">](http://msdn.microsoft.com/library/azure/hh974275.aspx)</ept> entity represents a video or audio file that is stored in a blob container.</source>
          <target state="new">The <bpt id="p1">[</bpt>AssetFile<ept id="p1">](http://msdn.microsoft.com/library/azure/hh974275.aspx)</ept> entity represents a video or audio file that is stored in a blob container.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An asset file is always associated with an asset, and an asset may contain one or many asset files.</source>
          <target state="new">An asset file is always associated with an asset, and an asset may contain one or many asset files.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The Media Services Encoder task fails if an asset file object is not associated with a digital file in a blob container.</source>
          <target state="new">The Media Services Encoder task fails if an asset file object is not associated with a digital file in a blob container.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Note that the <bpt id="p1">**</bpt>AssetFile<ept id="p1">**</ept> instance and the actual media file are two distinct objects.</source>
          <target state="new">Note that the <bpt id="p1">**</bpt>AssetFile<ept id="p1">**</ept> instance and the actual media file are two distinct objects.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The AssetFile instance contains metadata about the media file, while the media file contains the actual media content.</source>
          <target state="new">The AssetFile instance contains metadata about the media file, while the media file contains the actual media content.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>After you upload your digital media file into a blob container, you will use the <bpt id="p1">**</bpt>MERGE<ept id="p1">**</ept> HTTP request to update the AssetFile with information about your media file (as shown later in the topic).</source>
          <target state="new">After you upload your digital media file into a blob container, you will use the <bpt id="p1">**</bpt>MERGE<ept id="p1">**</ept> HTTP request to update the AssetFile with information about your media file (as shown later in the topic).</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>HTTP Request</source>
          <target state="new">HTTP Request</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>HTTP Response</source>
          <target state="new">HTTP Response</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Creating the AccessPolicy with write permission.</source>
          <target state="new">Creating the AccessPolicy with write permission.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Before uploading any files into blob storage, set the access policy rights for writing to an asset.</source>
          <target state="new">Before uploading any files into blob storage, set the access policy rights for writing to an asset.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To do that, POST an HTTP request to the AccessPolicies entity set.</source>
          <target state="new">To do that, POST an HTTP request to the AccessPolicies entity set.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Define a DurationInMinutes value upon creation or you will receive a 500 Internal Server error message back in response.</source>
          <target state="new">Define a DurationInMinutes value upon creation or you will receive a 500 Internal Server error message back in response.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information on AccessPolicies, see <bpt id="p1">[</bpt>AccessPolicy<ept id="p1">](http://msdn.microsoft.com/library/azure/hh974297.aspx)</ept>.</source>
          <target state="new">For more information on AccessPolicies, see <bpt id="p1">[</bpt>AccessPolicy<ept id="p1">](http://msdn.microsoft.com/library/azure/hh974297.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an AccessPolicy:</source>
          <target state="new">The following example shows how to create an AccessPolicy:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>HTTP Request</source>
          <target state="new">HTTP Request</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>HTTP Request</source>
          <target state="new">HTTP Request</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Get the Upload URL</source>
          <target state="new">Get the Upload URL</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To receive the actual upload URL, create a SAS Locator.</source>
          <target state="new">To receive the actual upload URL, create a SAS Locator.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Locators define the start time and type of connection endpoint for clients that want to access Files in an Asset.</source>
          <target state="new">Locators define the start time and type of connection endpoint for clients that want to access Files in an Asset.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can create multiple Locator entities for a given AccessPolicy and Asset pair to handle different client requests and needs.</source>
          <target state="new">You can create multiple Locator entities for a given AccessPolicy and Asset pair to handle different client requests and needs.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Each of these Locators use the StartTime value plus the DurationInMinutes value of the AccessPolicy to determine the length of time a URL can be used.</source>
          <target state="new">Each of these Locators use the StartTime value plus the DurationInMinutes value of the AccessPolicy to determine the length of time a URL can be used.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Locator<ept id="p1">](http://msdn.microsoft.com/library/azure/hh974308.aspx)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Locator<ept id="p1">](http://msdn.microsoft.com/library/azure/hh974308.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A SAS URL has the following format:</source>
          <target state="new">A SAS URL has the following format:</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Some considerations apply:</source>
          <target state="new">Some considerations apply:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You cannot have more than five unique Locators associated with a given Asset at one time.</source>
          <target state="new">You cannot have more than five unique Locators associated with a given Asset at one time.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For more information, see Locator.</source>
          <target state="new">For more information, see Locator.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you need to upload your files immediately, you should set your StartTime value to five minutes before the current time.</source>
          <target state="new">If you need to upload your files immediately, you should set your StartTime value to five minutes before the current time.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This is because there may be clock skew between your client machine and Media Services.</source>
          <target state="new">This is because there may be clock skew between your client machine and Media Services.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Also, your StartTime value must be in the following DateTime format: YYYY-MM-DDTHH:mm:ssZ (for example, "2014-05-23T17:53:50Z").</source>
          <target state="new">Also, your StartTime value must be in the following DateTime format: YYYY-MM-DDTHH:mm:ssZ (for example, "2014-05-23T17:53:50Z").</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>There may be a 30-40 second delay after a Locator is created to when it is available for use.</source>
          <target state="new">There may be a 30-40 second delay after a Locator is created to when it is available for use.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This issue applies to both SAS URL and Origin Locators.</source>
          <target state="new">This issue applies to both SAS URL and Origin Locators.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a SAS URL Locator, as defined by the Type property in the request body ("1" for a SAS locator and "2" for an On-Demand origin locator).</source>
          <target state="new">The following example shows how to create a SAS URL Locator, as defined by the Type property in the request body ("1" for a SAS locator and "2" for an On-Demand origin locator).</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> property returned contains the URL that you must use to upload your file.</source>
          <target state="new">The <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> property returned contains the URL that you must use to upload your file.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>HTTP Request</source>
          <target state="new">HTTP Request</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>HTTP Response</source>
          <target state="new">HTTP Response</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If successful, the following response is returned:</source>
          <target state="new">If successful, the following response is returned:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Upload a file into a blob storage container</source>
          <target state="new">Upload a file into a blob storage container</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Once you have the AccessPolicy and Locator set, the actual file is uploaded to an Azure Blob Storage container using the Azure Storage REST APIs.</source>
          <target state="new">Once you have the AccessPolicy and Locator set, the actual file is uploaded to an Azure Blob Storage container using the Azure Storage REST APIs.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can either upload in page or block blobs.</source>
          <target state="new">You can either upload in page or block blobs.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> You must add the file name for the file you want to upload to the Locator <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> value received in the previous section.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> You must add the file name for the file you want to upload to the Locator <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> value received in the previous section.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For example, https://storagetestaccount001.blob.core.windows.net/asset-e7b02da4-5a69-40e7-a8db-e8f4f697aac0/BigBuckBunny.mp4?</source>
          <target state="new">For example, https://storagetestaccount001.blob.core.windows.net/asset-e7b02da4-5a69-40e7-a8db-e8f4f697aac0/BigBuckBunny.mp4?</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information on working with Azure storage blobs, see <bpt id="p1">[</bpt>Blob Service REST API<ept id="p1">](http://msdn.microsoft.com/library/azure/dd135733.aspx)</ept>.</source>
          <target state="new">For more information on working with Azure storage blobs, see <bpt id="p1">[</bpt>Blob Service REST API<ept id="p1">](http://msdn.microsoft.com/library/azure/dd135733.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Update the AssetFile</source>
          <target state="new">Update the AssetFile</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Now that you've uploaded your file, update the FileAsset size (and other) information.</source>
          <target state="new">Now that you've uploaded your file, update the FileAsset size (and other) information.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>HTTP Response</source>
          <target state="new">HTTP Response</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If successful, the following is returned:</source>
          <target state="new">If successful, the following is returned:</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 204 No Content</source>
          <target state="new">HTTP/1.1 204 No Content</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Delete the Locator and AccessPolicy</source>
          <target state="new">Delete the Locator and AccessPolicy</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>HTTP Request</source>
          <target state="new">HTTP Request</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>HTTP Response</source>
          <target state="new">HTTP Response</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If successful, the following is returned:</source>
          <target state="new">If successful, the following is returned:</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>HTTP Request</source>
          <target state="new">HTTP Request</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>HTTP Response</source>
          <target state="new">HTTP Response</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If successful, the following is returned:</source>
          <target state="new">If successful, the following is returned:</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ede29d8d679c9239909156a7ba14508d444206c2</xliffext:olfilehash>
  </header>
</xliff>