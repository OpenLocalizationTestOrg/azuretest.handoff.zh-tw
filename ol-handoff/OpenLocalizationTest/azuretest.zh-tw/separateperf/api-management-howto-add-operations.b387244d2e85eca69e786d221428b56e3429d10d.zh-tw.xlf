<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to add operations to an API in Azure API Management</source>
          <target state="new">How to add operations to an API in Azure API Management</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to add operations to an API in Azure API Management.</source>
          <target state="new">Learn how to add operations to an API in Azure API Management.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to add operations to an API in Azure API Management</source>
          <target state="new">How to add operations to an API in Azure API Management</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Before an API in API Management can be used, operations must be added.</source>
          <target state="new">Before an API in API Management can be used, operations must be added.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This guide shows how to add and configure different types of operations to an API in API Management.</source>
          <target state="new">This guide shows how to add and configure different types of operations to an API in API Management.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="add-operation"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Add an operation</source>
          <target state="new"><ph id="ph1">&lt;a name="add-operation"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Add an operation</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Operations are added and configured to an API in the publisher portal.</source>
          <target state="new">Operations are added and configured to an API in the publisher portal.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To access the publisher portal, click <bpt id="p1">**</bpt>Manage<ept id="p1">**</ept> in the Azure Portal for your API Management service.</source>
          <target state="new">To access the publisher portal, click <bpt id="p1">**</bpt>Manage<ept id="p1">**</ept> in the Azure Portal for your API Management service.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Publisher portal</source>
          <target state="new">Publisher portal</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you have not yet created an API Management service instance, see <bpt id="p1">[</bpt>Create an API Management service instance<ept id="p1">][]</ept> in the <bpt id="p2">[</bpt>Get started with Azure API Management<ept id="p2">][]</ept> tutorial.</source>
          <target state="new">If you have not yet created an API Management service instance, see <bpt id="p1">[</bpt>Create an API Management service instance<ept id="p1">][]</ept> in the <bpt id="p2">[</bpt>Get started with Azure API Management<ept id="p2">][]</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Select the desired API in the API Management portal and then select the <bpt id="p1">**</bpt>Operations<ept id="p1">**</ept> tab.</source>
          <target state="new">Select the desired API in the API Management portal and then select the <bpt id="p1">**</bpt>Operations<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Operations</source>
          <target state="new">Operations</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Add Operation<ept id="p1">**</ept> to add a new operation.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Add Operation<ept id="p1">**</ept> to add a new operation.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New operation<ept id="p1">**</ept> will be displayed and the <bpt id="p2">**</bpt>Signature<ept id="p2">**</ept> tab will be selected by default.</source>
          <target state="new">The <bpt id="p1">**</bpt>New operation<ept id="p1">**</ept> will be displayed and the <bpt id="p2">**</bpt>Signature<ept id="p2">**</ept> tab will be selected by default.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Add operation</source>
          <target state="new">Add operation</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specify the <bpt id="p1">**</bpt>HTTP verb<ept id="p1">**</ept> by choosing from the drop-down list.</source>
          <target state="new">Specify the <bpt id="p1">**</bpt>HTTP verb<ept id="p1">**</ept> by choosing from the drop-down list.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>HTTP method</source>
          <target state="new">HTTP method</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Define the URL template by typing in a URL fragment consisting of one or more URL path segments and zero or more query string parameters.</source>
          <target state="new">Define the URL template by typing in a URL fragment consisting of one or more URL path segments and zero or more query string parameters.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The URL template, appended to the base URL of the API, identifies a single HTTP operation.</source>
          <target state="new">The URL template, appended to the base URL of the API, identifies a single HTTP operation.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It may contain one or more named variable parts that are identified by curly braces.</source>
          <target state="new">It may contain one or more named variable parts that are identified by curly braces.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These variable parts are called template parameters and are dynamically assigned values extracted from the request's URL when the request is being processed by the API Management platform.</source>
          <target state="new">These variable parts are called template parameters and are dynamically assigned values extracted from the request's URL when the request is being processed by the API Management platform.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>URL template</source>
          <target state="new">URL template</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If desired, specify the <bpt id="p1">**</bpt>Rewrite URL template<ept id="p1">**</ept>.</source>
          <target state="new">If desired, specify the <bpt id="p1">**</bpt>Rewrite URL template<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This allows you to use the standard URL template for processing incoming requests on the front-end, while calling the back-end via a converted URL according to the rewrite template.</source>
          <target state="new">This allows you to use the standard URL template for processing incoming requests on the front-end, while calling the back-end via a converted URL according to the rewrite template.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Template parameters from the URL template should be used in the rewrite template.</source>
          <target state="new">Template parameters from the URL template should be used in the rewrite template.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example shows how content type encoded as path segment in the web service from the previous example can be provided as a query parameter in the API published via the API Management platform using the URL templates.</source>
          <target state="new">The following example shows how content type encoded as path segment in the web service from the previous example can be provided as a query parameter in the API published via the API Management platform using the URL templates.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>URL template rewrite</source>
          <target state="new">URL template rewrite</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Callers to the operation will use the format <ph id="ph1">`/customers?customerid=ALFKI`</ph> and this will be mapped to <ph id="ph2">`/Customers('ALFKI')`</ph> when the back-end service is invoked.</source>
          <target state="new">Callers to the operation will use the format <ph id="ph1">`/customers?customerid=ALFKI`</ph> and this will be mapped to <ph id="ph2">`/Customers('ALFKI')`</ph> when the back-end service is invoked.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Display<ept id="p1">**</ept> name and <bpt id="p2">**</bpt>Description<ept id="p2">**</ept> provide a description of the operation and are used to provide documentation to the developers using this API in the developer portal.</source>
          <target state="new"><bpt id="p1">**</bpt>Display<ept id="p1">**</ept> name and <bpt id="p2">**</bpt>Description<ept id="p2">**</ept> provide a description of the operation and are used to provide documentation to the developers using this API in the developer portal.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The operation description can be specified as plain text or HTML in the <bpt id="p1">**</bpt>Description<ept id="p1">**</ept> text box.</source>
          <target state="new">The operation description can be specified as plain text or HTML in the <bpt id="p1">**</bpt>Description<ept id="p1">**</ept> text box.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="operation-caching"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Operation caching</source>
          <target state="new"><ph id="ph1">&lt;a name="operation-caching"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Operation caching</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Response caching reduces latency perceived by the API consumers, lowers bandwidth consumption and decreases the load on the HTTP web service implementing the API.</source>
          <target state="new">Response caching reduces latency perceived by the API consumers, lowers bandwidth consumption and decreases the load on the HTTP web service implementing the API.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To easily and quickly enable caching for the operation, select the <bpt id="p1">**</bpt>Caching<ept id="p1">**</ept> tab and check the <bpt id="p2">**</bpt>Enable<ept id="p2">**</ept> checkbox.</source>
          <target state="new">To easily and quickly enable caching for the operation, select the <bpt id="p1">**</bpt>Caching<ept id="p1">**</ept> tab and check the <bpt id="p2">**</bpt>Enable<ept id="p2">**</ept> checkbox.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="new">Caching</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Duration<ept id="p1">**</ept> specifies the time period during which the operation response remains in the cache.</source>
          <target state="new"><bpt id="p1">**</bpt>Duration<ept id="p1">**</ept> specifies the time period during which the operation response remains in the cache.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The default value is 3600 seconds or 1 hour.</source>
          <target state="new">The default value is 3600 seconds or 1 hour.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Cache keys are used to differentiate between responses so that the response corresponding to each different cache key will get its own separate cached value.</source>
          <target state="new">Cache keys are used to differentiate between responses so that the response corresponding to each different cache key will get its own separate cached value.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Optionally, enter specific query string parameters and/or HTTP headers to be used in computing cache key values in the <bpt id="p1">**</bpt>Vary by query string parameters<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Vary by headers<ept id="p2">**</ept> text boxes respectively.</source>
          <target state="new">Optionally, enter specific query string parameters and/or HTTP headers to be used in computing cache key values in the <bpt id="p1">**</bpt>Vary by query string parameters<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Vary by headers<ept id="p2">**</ept> text boxes respectively.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When none are specified, full request URL and the following HTTP header values are used in cache key generation: <bpt id="p1">**</bpt>Accept<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Accept-Charset<ept id="p2">**</ept>.</source>
          <target state="new">When none are specified, full request URL and the following HTTP header values are used in cache key generation: <bpt id="p1">**</bpt>Accept<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Accept-Charset<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information on caching and caching policies, see <bpt id="p1">[</bpt>How to cache operation results in Azure API Management<ept id="p1">][]</ept>.</source>
          <target state="new">For more information on caching and caching policies, see <bpt id="p1">[</bpt>How to cache operation results in Azure API Management<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="request-parameters"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Request parameters</source>
          <target state="new"><ph id="ph1">&lt;a name="request-parameters"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Request parameters</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Operation parameters are managed on the Parameters tab.</source>
          <target state="new">Operation parameters are managed on the Parameters tab.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Parameters specified in the <bpt id="p1">**</bpt>URL Template<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Signature<ept id="p2">**</ept> tab are added automatically and can be changed only by editing the URL template.</source>
          <target state="new">Parameters specified in the <bpt id="p1">**</bpt>URL Template<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Signature<ept id="p2">**</ept> tab are added automatically and can be changed only by editing the URL template.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Additional parameters can be entered manually.</source>
          <target state="new">Additional parameters can be entered manually.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To add a new query parameter, click <bpt id="p1">**</bpt>Add Query Parameter<ept id="p1">**</ept> and enter the following information:</source>
          <target state="new">To add a new query parameter, click <bpt id="p1">**</bpt>Add Query Parameter<ept id="p1">**</ept> and enter the following information:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Name<ept id="p1">**</ept> - parameter name.</source>
          <target state="new"><bpt id="p1">**</bpt>Name<ept id="p1">**</ept> - parameter name.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept> - a brief description of the parameter (optional).</source>
          <target state="new"><bpt id="p1">**</bpt>Description<ept id="p1">**</ept> - a brief description of the parameter (optional).</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Type<ept id="p1">**</ept> - parameter type, selected in the drop down.</source>
          <target state="new"><bpt id="p1">**</bpt>Type<ept id="p1">**</ept> - parameter type, selected in the drop down.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Values<ept id="p1">**</ept> - values that can be assigned to this parameter.</source>
          <target state="new"><bpt id="p1">**</bpt>Values<ept id="p1">**</ept> - values that can be assigned to this parameter.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>One of the values can be marked as default (optional).</source>
          <target state="new">One of the values can be marked as default (optional).</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Required<ept id="p1">**</ept> - make the parameter mandatory by checking the checkbox.</source>
          <target state="new"><bpt id="p1">**</bpt>Required<ept id="p1">**</ept> - make the parameter mandatory by checking the checkbox.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Request parameters</source>
          <target state="new">Request parameters</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="request-body"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Request body</source>
          <target state="new"><ph id="ph1">&lt;a name="request-body"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Request body</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If the operation allows (e.g. PUT, POST) and requires a body you may provide an example of it in all of the supported representation formats (e.g. json, XML).</source>
          <target state="new">If the operation allows (e.g. PUT, POST) and requires a body you may provide an example of it in all of the supported representation formats (e.g. json, XML).</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The request body is used for documentation purposes only and is not validated.</source>
          <target state="new">The request body is used for documentation purposes only and is not validated.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To enter a request body, switch to the <bpt id="p1">**</bpt>Body<ept id="p1">**</ept> tab.</source>
          <target state="new">To enter a request body, switch to the <bpt id="p1">**</bpt>Body<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Add Representation<ept id="p1">**</ept>, start typing desired content type name (e.g. application/json), select it in the drop-down, and paste the desired request body example in the selected format into the text box.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Add Representation<ept id="p1">**</ept>, start typing desired content type name (e.g. application/json), select it in the drop-down, and paste the desired request body example in the selected format into the text box.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Request body</source>
          <target state="new">Request body</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In additional to representations, you can also specify an optional text description in the <bpt id="p1">**</bpt>Description<ept id="p1">**</ept> text box.</source>
          <target state="new">In additional to representations, you can also specify an optional text description in the <bpt id="p1">**</bpt>Description<ept id="p1">**</ept> text box.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="responses"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Responses</source>
          <target state="new"><ph id="ph1">&lt;a name="responses"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Responses</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>It is a good practice to provide examples of responses for all status codes that the operation may produce.</source>
          <target state="new">It is a good practice to provide examples of responses for all status codes that the operation may produce.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Each status code may have more than one response body example, one for each of the supported content types.</source>
          <target state="new">Each status code may have more than one response body example, one for each of the supported content types.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To add a response, click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> and start typing the desired status code.</source>
          <target state="new">To add a response, click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> and start typing the desired status code.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In this example the status code is <bpt id="p1">**</bpt>200 OK<ept id="p1">**</ept>.</source>
          <target state="new">In this example the status code is <bpt id="p1">**</bpt>200 OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Once the code is displayed in the drop-down, select it, and the response code is created and added to your operation.</source>
          <target state="new">Once the code is displayed in the drop-down, select it, and the response code is created and added to your operation.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Response code</source>
          <target state="new">Response code</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Add Representation<ept id="p1">**</ept>, start typing the desired content type name (e.g. application/json) and then select it in the drop down.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Add Representation<ept id="p1">**</ept>, start typing the desired content type name (e.g. application/json) and then select it in the drop down.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Body content type</source>
          <target state="new">Body content type</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Paste the response body example in the selected format into the text box.</source>
          <target state="new">Paste the response body example in the selected format into the text box.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Response body</source>
          <target state="new">Response body</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If desired, add an optional description into the <bpt id="p1">**</bpt>Description<ept id="p1">**</ept> text box.</source>
          <target state="new">If desired, add an optional description into the <bpt id="p1">**</bpt>Description<ept id="p1">**</ept> text box.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Once the operation is configured, click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</source>
          <target state="new">Once the operation is configured, click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="next-steps"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Next steps</source>
          <target state="new"><ph id="ph1">&lt;a name="next-steps"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Next steps</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Once the operations are added to an API, the next step is to associate the API with a product and publish it so that developers can call its operations.</source>
          <target state="new">Once the operations are added to an API, the next step is to associate the API with a product and publish it so that developers can call its operations.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>How to create and publish a product</source>
          <target state="new">How to create and publish a product</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e780f990ea2f7b076a1d1e474126858d07d6fc2e</xliffext:olfilehash>
  </header>
</xliff>