<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Configure an external Listener for AlwaysOn Availability Groups in Azure</source>
          <target state="new">Configure an external Listener for AlwaysOn Availability Groups in Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This tutorial walks you through steps of creating an AlwaysOn Availability Group Listener in Azure that is externally accessible by using the public Virtual IP address of the associated cloud service.</source>
          <target state="new">This tutorial walks you through steps of creating an AlwaysOn Availability Group Listener in Azure that is externally accessible by using the public Virtual IP address of the associated cloud service.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Configure an external listener for AlwaysOn Availability Groups in Azure</source>
          <target state="new">Configure an external listener for AlwaysOn Availability Groups in Azure</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Internal Listener</source>
          <target state="new">Internal Listener</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>External Listener</source>
          <target state="new">External Listener</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic shows you how to configure a listener for an AlwaysOn Availability Group that is externally accessible on the internet.</source>
          <target state="new">This topic shows you how to configure a listener for an AlwaysOn Availability Group that is externally accessible on the internet.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This is made possible associating the cloud service's <bpt id="p1">**</bpt>public Virtual IP (VIP)<ept id="p1">**</ept> address with the listener.</source>
          <target state="new">This is made possible associating the cloud service's <bpt id="p1">**</bpt>public Virtual IP (VIP)<ept id="p1">**</ept> address with the listener.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Your Availability Group can contain replicas that are on-premises only, Azure only, or span both on-premises and Azure for hybrid configurations.</source>
          <target state="new">Your Availability Group can contain replicas that are on-premises only, Azure only, or span both on-premises and Azure for hybrid configurations.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Azure replicas can reside within the same region or across multiple regions using multiple virtual networks (VNets).</source>
          <target state="new">Azure replicas can reside within the same region or across multiple regions using multiple virtual networks (VNets).</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The steps below assume you have already <bpt id="p1">[</bpt>configured an availability group<ept id="p1">](virtual-machines-sql-server-alwayson-availability-groups-gui.md)</ept> but have not configured a listener.</source>
          <target state="new">The steps below assume you have already <bpt id="p1">[</bpt>configured an availability group<ept id="p1">](virtual-machines-sql-server-alwayson-availability-groups-gui.md)</ept> but have not configured a listener.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Note the following limitations on the availability group listener in Azure when you are deploying using the cloud service pubic VIP address:</source>
          <target state="new">Note the following limitations on the availability group listener in Azure when you are deploying using the cloud service pubic VIP address:</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The availability group listener is supported on Windows Server 2008 R2, Windows Server 2012, and Windows Server 2012 R2.</source>
          <target state="new">The availability group listener is supported on Windows Server 2008 R2, Windows Server 2012, and Windows Server 2012 R2.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The client application must reside on a different cloud service than the one that contains your availability group VMs.</source>
          <target state="new">The client application must reside on a different cloud service than the one that contains your availability group VMs.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Azure does not support direct server return with client and server in the same cloud service.</source>
          <target state="new">Azure does not support direct server return with client and server in the same cloud service.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Only one availability group listener is supported per cloud service because the listener is configured to either use the cloud service VIP address.</source>
          <target state="new">Only one availability group listener is supported per cloud service because the listener is configured to either use the cloud service VIP address.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Note that this limitation is still in effect although Azure now supports the creation of multiple VIP addresses in a given cloud service.</source>
          <target state="new">Note that this limitation is still in effect although Azure now supports the creation of multiple VIP addresses in a given cloud service.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you are creating a listener for a hybrid environment, the on-premises network must have connectivity to the public Internet in addition to the site-to-site VPN with the Azure virtual network.</source>
          <target state="new">If you are creating a listener for a hybrid environment, the on-premises network must have connectivity to the public Internet in addition to the site-to-site VPN with the Azure virtual network.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When in the Azure subnet, the availability group listener is reachable only by the public IP address of the respective cloud service.</source>
          <target state="new">When in the Azure subnet, the availability group listener is reachable only by the public IP address of the respective cloud service.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This tutorial focuses on using PowerShell to create a listener for an Availability Group that includes Azure replicas.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This tutorial focuses on using PowerShell to create a listener for an Availability Group that includes Azure replicas.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information on how to configure listeners using SSMS or Transact-SQL, see <bpt id="p1">[</bpt>Create or Configure an Availability Group Listener<ept id="p1">](https://msdn.microsoft.com/library/hh213080.aspx)</ept>.</source>
          <target state="new">For more information on how to configure listeners using SSMS or Transact-SQL, see <bpt id="p1">[</bpt>Create or Configure an Availability Group Listener<ept id="p1">](https://msdn.microsoft.com/library/hh213080.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determine the accessibility of the Listener</source>
          <target state="new">Determine the accessibility of the Listener</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This article focuses on creating a listener that uses <bpt id="p1">**</bpt>external load balancing<ept id="p1">**</ept>.</source>
          <target state="new">This article focuses on creating a listener that uses <bpt id="p1">**</bpt>external load balancing<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you want a listener that is private to your virtual network, see the version of this article that provides steps for setting up an <bpt id="p1">[</bpt>listener with ILB<ept id="p1">](virtual-machines-sql-server-configure-ilb-alwayson-availability-group-listener.md)</ept></source>
          <target state="new">If you want a listener that is private to your virtual network, see the version of this article that provides steps for setting up an <bpt id="p1">[</bpt>listener with ILB<ept id="p1">](virtual-machines-sql-server-configure-ilb-alwayson-availability-group-listener.md)</ept></target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Create load-balanced VM endpoints with direct server return</source>
          <target state="new">Create load-balanced VM endpoints with direct server return</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>External load balancing uses the virtual the public Virtual IP address of the cloud service that hosts your VMs.</source>
          <target state="new">External load balancing uses the virtual the public Virtual IP address of the cloud service that hosts your VMs.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>So you do not need to create or configure the load balancer in this case.</source>
          <target state="new">So you do not need to create or configure the load balancer in this case.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Copy the PowerShell script below into a text editor and set the variable values to suit your environment (defaults have been provided for some parameters).</source>
          <target state="new">Copy the PowerShell script below into a text editor and set the variable values to suit your environment (defaults have been provided for some parameters).</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Note that if your availability group spans Azure regions, you must run the script once in each datacenter for the cloud service and nodes that reside in that datacenter.</source>
          <target state="new">Note that if your availability group spans Azure regions, you must run the script once in each datacenter for the cloud service and nodes that reside in that datacenter.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Once you have set the variables, copy the script from the text editor into your Azure PowerShell session to run it.</source>
          <target state="new">Once you have set the variables, copy the script from the text editor into your Azure PowerShell session to run it.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the prompt still shows &gt;&gt;, type ENTER again to make sure the script starts running.</source>
          <target state="new">If the prompt still shows &gt;&gt;, type ENTER again to make sure the script starts running.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Verify that KB2854082 is installed if necessary</source>
          <target state="new">Verify that KB2854082 is installed if necessary</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Open the firewall ports in availability group nodes</source>
          <target state="new">Open the firewall ports in availability group nodes</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Create the availability group listener</source>
          <target state="new">Create the availability group listener</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For external load balancing, you must obtain the public virtual IP address of the cloud service that contains your replicas.</source>
          <target state="new">For external load balancing, you must obtain the public virtual IP address of the cloud service that contains your replicas.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Log into the Azure portal.</source>
          <target state="new">Log into the Azure portal.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Navigate to the cloud service that contains your availability group VM.</source>
          <target state="new">Navigate to the cloud service that contains your availability group VM.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> view.</source>
          <target state="new">Open the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> view.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Note the address shown under <bpt id="p1">**</bpt>Public Virtual IP (VIP) Address<ept id="p1">**</ept>.</source>
          <target state="new">Note the address shown under <bpt id="p1">**</bpt>Public Virtual IP (VIP) Address<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If your solution spans VNets, repeat this step for each cloud service that contains a VM that hosts a replica.</source>
          <target state="new">If your solution spans VNets, repeat this step for each cloud service that contains a VM that hosts a replica.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>On one of the VMs, copy the PowerShell script below into a text editor and set the variables to the values you noted earlier.</source>
          <target state="new">On one of the VMs, copy the PowerShell script below into a text editor and set the variables to the values you noted earlier.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Once you have set the variables, open an elevated Windows PowerShell window, then copy the script from the text editor and paste into your Azure PowerShell session to run it.</source>
          <target state="new">Once you have set the variables, open an elevated Windows PowerShell window, then copy the script from the text editor and paste into your Azure PowerShell session to run it.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the prompt still shows &gt;&gt;, type ENTER again to make sure the script starts running.</source>
          <target state="new">If the prompt still shows &gt;&gt;, type ENTER again to make sure the script starts running.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Repeat this on each VM.</source>
          <target state="new">Repeat this on each VM.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This script configures the IP Address resource with the IP address of the cloud service and sets other parameters like the probe port.</source>
          <target state="new">This script configures the IP Address resource with the IP address of the cloud service and sets other parameters like the probe port.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When the IP Address resource is brought online, it can then respond to the polling on the probe port from the load-balanced endpoint created earlier in this tutorial.</source>
          <target state="new">When the IP Address resource is brought online, it can then respond to the polling on the probe port from the load-balanced endpoint created earlier in this tutorial.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Bring the listener online</source>
          <target state="new">Bring the listener online</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Follow-up items</source>
          <target state="new">Follow-up items</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Test the availability group listener (within the same VNet)</source>
          <target state="new">Test the availability group listener (within the same VNet)</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Test the availability group listener (over the internet)</source>
          <target state="new">Test the availability group listener (over the internet)</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In order to access the listener from outside the virtual network, you must be using external/public load balancing (described in this topic) rather than ILB, which is only accesible within the same VNet.</source>
          <target state="new">In order to access the listener from outside the virtual network, you must be using external/public load balancing (described in this topic) rather than ILB, which is only accesible within the same VNet.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the connection string, you specify the cloud service name.</source>
          <target state="new">In the connection string, you specify the cloud service name.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, if you had a cloud service with the name <bpt id="p1">*</bpt>mycloudservice<ept id="p1">*</ept>, the sqlcmd statement would be as follows:</source>
          <target state="new">For example, if you had a cloud service with the name <bpt id="p1">*</bpt>mycloudservice<ept id="p1">*</ept>, the sqlcmd statement would be as follows:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Unlike the previous example, SQL authentication must be used, because the caller cannot use windows authentication over the internet.</source>
          <target state="new">Unlike the previous example, SQL authentication must be used, because the caller cannot use windows authentication over the internet.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>AlwaysOn Availability Group in Azure VM: Client Connectivity Scenarios<ept id="p1">](http://blogs.msdn.com/b/sqlcat/archive/2014/02/03/alwayson-availability-group-in-windows-azure-vm-client-connectivity-scenarios.aspx)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>AlwaysOn Availability Group in Azure VM: Client Connectivity Scenarios<ept id="p1">](http://blogs.msdn.com/b/sqlcat/archive/2014/02/03/alwayson-availability-group-in-windows-azure-vm-client-connectivity-scenarios.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When using SQL authentication, make sure that you create the same login on both replicas.</source>
          <target state="new">When using SQL authentication, make sure that you create the same login on both replicas.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information about troubleshooting logins with Availability Groups, see <bpt id="p1">[</bpt>How to map logins or use contained SQL database user to connect to other replicas and map to availability databases<ept id="p1">](http://blogs.msdn.com/b/alwaysonpro/archive/2014/02/19/how-to-map-logins-or-use-contained-sql-database-user-to-connect-to-other-replicas-and-map-to-availability-databases.aspx)</ept>.</source>
          <target state="new">For more information about troubleshooting logins with Availability Groups, see <bpt id="p1">[</bpt>How to map logins or use contained SQL database user to connect to other replicas and map to availability databases<ept id="p1">](http://blogs.msdn.com/b/alwaysonpro/archive/2014/02/19/how-to-map-logins-or-use-contained-sql-database-user-to-connect-to-other-replicas-and-map-to-availability-databases.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the AlwaysOn replicas are in different subnets, clients must specify <bpt id="p1">**</bpt>MultisubnetFailover=True<ept id="p1">**</ept> in the connection string.</source>
          <target state="new">If the AlwaysOn replicas are in different subnets, clients must specify <bpt id="p1">**</bpt>MultisubnetFailover=True<ept id="p1">**</ept> in the connection string.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This results in parallel connection attempts to replicas in the different subnets.</source>
          <target state="new">This results in parallel connection attempts to replicas in the different subnets.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Note that this scenario includes a cross-region AlwaysOn Availability Group deployment.</source>
          <target state="new">Note that this scenario includes a cross-region AlwaysOn Availability Group deployment.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a28a582785dea1afc1618fdfa0d841d372db35a0</xliffext:olfilehash>
  </header>
</xliff>