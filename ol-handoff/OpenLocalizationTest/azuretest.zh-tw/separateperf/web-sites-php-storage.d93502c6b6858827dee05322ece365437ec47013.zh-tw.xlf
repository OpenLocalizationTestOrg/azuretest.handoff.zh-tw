<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a PHP web app in Azure App Service using Azure Storage</source>
          <target state="new">Create a PHP web app in Azure App Service using Azure Storage</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to create a PHP web app in Azure App Service and use the Azure Tables storage service in the back-end.</source>
          <target state="new">This tutorial shows you how to create a PHP web app in Azure App Service and use the Azure Tables storage service in the back-end.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create a PHP web app in Azure App Service using Azure Storage</source>
          <target state="new">Create a PHP web app in Azure App Service using Azure Storage</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to create a PHP web app in <bpt id="p1">[</bpt>Azure App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept> and use the Azure Tables storage service in the back-end.</source>
          <target state="new">This tutorial shows you how to create a PHP web app in <bpt id="p1">[</bpt>Azure App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept> and use the Azure Tables storage service in the back-end.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This tutorial assumes you have <bpt id="p1">[</bpt>PHP<ept id="p1">][install-php]</ept> and a web server installed on your computer.</source>
          <target state="new">This tutorial assumes you have <bpt id="p1">[</bpt>PHP<ept id="p1">][install-php]</ept> and a web server installed on your computer.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The instructions in this tutorial can be followed on any operating system, including Windows, Mac, and  Linux.</source>
          <target state="new">The instructions in this tutorial can be followed on any operating system, including Windows, Mac, and  Linux.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Upon completing this guide, you will have a PHP web app running in Azure and accessing the Table storage service.</source>
          <target state="new">Upon completing this guide, you will have a PHP web app running in Azure and accessing the Table storage service.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You will learn:</source>
          <target state="new">You will learn:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>How to install the Azure client libraries and include them into your application.</source>
          <target state="new">How to install the Azure client libraries and include them into your application.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>How to use the client libraries for creating tables, and for creating, querying and deleting table entities.</source>
          <target state="new">How to use the client libraries for creating tables, and for creating, querying and deleting table entities.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>How to create an Azure Storage Account and set up your application to use it.</source>
          <target state="new">How to create an Azure Storage Account and set up your application to use it.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>How to create an Azure web app and deploy to it using Git</source>
          <target state="new">How to create an Azure web app and deploy to it using Git</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You will build a simple Tasklist web application in PHP.</source>
          <target state="new">You will build a simple Tasklist web application in PHP.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A screenshot of the completed application is below:</source>
          <target state="new">A screenshot of the completed application is below:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Azure PHP web app</source>
          <target state="new">Azure PHP web app</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id="p1">[</bpt>Try App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id="p1">[</bpt>Try App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>No credit cards required; no commitments.</source>
          <target state="new">No credit cards required; no commitments.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Installing the Azure client libraries</source>
          <target state="new">Installing the Azure client libraries</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To install the PHP Client Libraries for Azure via Composer, follow these steps:</source>
          <target state="new">To install the PHP Client Libraries for Azure via Composer, follow these steps:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Install Git</source>
          <target state="new">Install Git</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> On Windows, you will also need to add the Git executable to your PATH environment variable.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> On Windows, you will also need to add the Git executable to your PATH environment variable.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create a file named <bpt id="p1">**</bpt>composer.json<ept id="p1">**</ept> in the root of your project and add the following code to it:</source>
          <target state="new">Create a file named <bpt id="p1">**</bpt>composer.json<ept id="p1">**</ept> in the root of your project and add the following code to it:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Download <bpt id="p1">**</bpt><bpt id="p2">[</bpt>composer.phar<ept id="p2">][composer-phar]</ept><ept id="p1">**</ept> in your project root.</source>
          <target state="new">Download <bpt id="p1">**</bpt><bpt id="p2">[</bpt>composer.phar<ept id="p2">][composer-phar]</ept><ept id="p1">**</ept> in your project root.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Open a command prompt and execute this in your project root</source>
          <target state="new">Open a command prompt and execute this in your project root</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Getting started with the client libraries</source>
          <target state="new">Getting started with the client libraries</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>There are four basic steps that have to be performed before you can make a call to an Azure API wen using the libraries.</source>
          <target state="new">There are four basic steps that have to be performed before you can make a call to an Azure API wen using the libraries.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You will create an initialization script that will perform these steps.</source>
          <target state="new">You will create an initialization script that will perform these steps.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Create a file called <bpt id="p1">**</bpt>init.php<ept id="p1">**</ept>.</source>
          <target state="new">Create a file called <bpt id="p1">**</bpt>init.php<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>First, include the autoloader script:</source>
          <target state="new">First, include the autoloader script:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Include the namespaces you are going to use.</source>
          <target state="new">Include the namespaces you are going to use.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To create any Azure service client you need to use the <bpt id="p1">**</bpt>ServicesBuilder<ept id="p1">**</ept> class:</source>
          <target state="new">To create any Azure service client you need to use the <bpt id="p1">**</bpt>ServicesBuilder<ept id="p1">**</ept> class:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To catch exceptions produced by any API call you need the <bpt id="p1">**</bpt>ServiceException<ept id="p1">**</ept> class:</source>
          <target state="new">To catch exceptions produced by any API call you need the <bpt id="p1">**</bpt>ServiceException<ept id="p1">**</ept> class:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To instantiate the service client you will also need a valid connection string.</source>
          <target state="new">To instantiate the service client you will also need a valid connection string.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The format for the table service connection strings is:</source>
          <target state="new">The format for the table service connection strings is:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For accessing a live service:</source>
          <target state="new">For accessing a live service:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For accessing the emulator storage:</source>
          <target state="new">For accessing the emulator storage:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`ServicesBuilder::createTableService`</ph> factory method to instantiate a wrapper around Table service calls.</source>
          <target state="new">Use the <ph id="ph1">`ServicesBuilder::createTableService`</ph> factory method to instantiate a wrapper around Table service calls.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$tableRestProxy`</ph> contains a method for every REST call available on Azure Tables.</source>
          <target state="new"><ph id="ph1">`$tableRestProxy`</ph> contains a method for every REST call available on Azure Tables.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Creating a Table</source>
          <target state="new">Creating a Table</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Before you can store data you first have to create a container for it, the Table.</source>
          <target state="new">Before you can store data you first have to create a container for it, the Table.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Create a file named <bpt id="p1">**</bpt>createtable.php<ept id="p1">**</ept>.</source>
          <target state="new">Create a file named <bpt id="p1">**</bpt>createtable.php<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>First, include the initialization script you just created.</source>
          <target state="new">First, include the initialization script you just created.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You will be including this script in every file accessing Azure:</source>
          <target state="new">You will be including this script in every file accessing Azure:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Then, make a call to <bpt id="p1">*</bpt>createTable<ept id="p1">*</ept> passing in the name of the table.</source>
          <target state="new">Then, make a call to <bpt id="p1">*</bpt>createTable<ept id="p1">*</ept> passing in the name of the table.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Similarly to other NoSQL table stores, no schema is required for Azure Tables.</source>
          <target state="new">Similarly to other NoSQL table stores, no schema is required for Azure Tables.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Error codes and message scan be found here: <bpt id="p1">[</bpt>http://msdn.microsoft.com/library/windowsazure/dd179438.aspx<ept id="p1">][msdn-errors]</ept></source>
          <target state="new">Error codes and message scan be found here: <bpt id="p1">[</bpt>http://msdn.microsoft.com/library/windowsazure/dd179438.aspx<ept id="p1">][msdn-errors]</ept></target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Querying a Table</source>
          <target state="new">Querying a Table</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The home page of the Tasklist application should list all existing tasks and allow the insertion of new ones.</source>
          <target state="new">The home page of the Tasklist application should list all existing tasks and allow the insertion of new ones.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Create a file named <bpt id="p1">**</bpt>index.php<ept id="p1">**</ept> and insert the following HTML and PHP code which will form the header of the page:</source>
          <target state="new">Create a file named <bpt id="p1">**</bpt>index.php<ept id="p1">**</ept> and insert the following HTML and PHP code which will form the header of the page:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To query Azure Tables for <bpt id="p1">**</bpt>all entities<ept id="p1">**</ept> stored in the <bpt id="p2">*</bpt>tasks<ept id="p2">*</ept> table you call the <bpt id="p3">*</bpt>queryEntities<ept id="p3">*</ept> method passing only the name of the table.</source>
          <target state="new">To query Azure Tables for <bpt id="p1">**</bpt>all entities<ept id="p1">**</ept> stored in the <bpt id="p2">*</bpt>tasks<ept id="p2">*</ept> table you call the <bpt id="p3">*</bpt>queryEntities<ept id="p3">*</ept> method passing only the name of the table.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Updating an Entity<ept id="p1">**</ept> section below you will also see how to pass a filter querying for a specific entity.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Updating an Entity<ept id="p1">**</ept> section below you will also see how to pass a filter querying for a specific entity.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To iterate on the entities in the result set:</source>
          <target state="new">To iterate on the entities in the result set:</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Once you get an <ph id="ph1">`Entity`</ph>, the model for reading data is <ph id="ph2">`Entity-&gt;getPropertyValue('[name]')`</ph>:</source>
          <target state="new">Once you get an <ph id="ph1">`Entity`</ph>, the model for reading data is <ph id="ph2">`Entity-&gt;getPropertyValue('[name]')`</ph>:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Last, you must insert the form that feeds data into the task insertion script and complete the HTML:</source>
          <target state="new">Last, you must insert the form that feeds data into the task insertion script and complete the HTML:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Inserting Entities into a Table</source>
          <target state="new">Inserting Entities into a Table</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Your application can now read all items stored in the table.</source>
          <target state="new">Your application can now read all items stored in the table.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Since there won't be any at fist, let's add a function that writes data into the database.</source>
          <target state="new">Since there won't be any at fist, let's add a function that writes data into the database.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Create a file named <bpt id="p1">**</bpt>additem.php<ept id="p1">**</ept>.</source>
          <target state="new">Create a file named <bpt id="p1">**</bpt>additem.php<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Add the following to the file:</source>
          <target state="new">Add the following to the file:</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The first step of inserting an entity is instantiating an <ph id="ph1">`Entity`</ph> object and setting the properties on it:</source>
          <target state="new">The first step of inserting an entity is instantiating an <ph id="ph1">`Entity`</ph> object and setting the properties on it:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Then you can pass the <ph id="ph1">`$entity`</ph> you just created to the <ph id="ph2">`insertEntity`</ph> method:</source>
          <target state="new">Then you can pass the <ph id="ph1">`$entity`</ph> you just created to the <ph id="ph2">`insertEntity`</ph> method:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Last, to make the page return to the home page after inserting the entity:</source>
          <target state="new">Last, to make the page return to the home page after inserting the entity:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Updating an Entity</source>
          <target state="new">Updating an Entity</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The task list app has the ability to mark an item as complete as well as to unmark it.</source>
          <target state="new">The task list app has the ability to mark an item as complete as well as to unmark it.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The home page passes in the <bpt id="p1">*</bpt>RowKey<ept id="p1">*</ept> and <bpt id="p2">*</bpt>PartitionKey<ept id="p2">*</ept> of an entity and the target state (marked==1, unmarked==0).</source>
          <target state="new">The home page passes in the <bpt id="p1">*</bpt>RowKey<ept id="p1">*</ept> and <bpt id="p2">*</bpt>PartitionKey<ept id="p2">*</ept> of an entity and the target state (marked==1, unmarked==0).</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Create a file called <bpt id="p1">**</bpt>markitem.php<ept id="p1">**</ept> and add the initialization part:</source>
          <target state="new">Create a file called <bpt id="p1">**</bpt>markitem.php<ept id="p1">**</ept> and add the initialization part:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The first step to updating an entity is fetching it from the Table:</source>
          <target state="new">The first step to updating an entity is fetching it from the Table:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>As you can see the passed in query filter is of the form <ph id="ph1">`Key eq 'Value'`</ph>.</source>
          <target state="new">As you can see the passed in query filter is of the form <ph id="ph1">`Key eq 'Value'`</ph>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A full description of the query syntax is available <bpt id="p1">[</bpt>here<ept id="p1">][msdn-table-query-syntax]</ept>.</source>
          <target state="new">A full description of the query syntax is available <bpt id="p1">[</bpt>here<ept id="p1">][msdn-table-query-syntax]</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Then you can change any properties:</source>
          <target state="new">Then you can change any properties:</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>And the <ph id="ph1">`updateEntity`</ph> method performs the update:</source>
          <target state="new">And the <ph id="ph1">`updateEntity`</ph> method performs the update:</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To make the page return to the home page after inserting the entity:</source>
          <target state="new">To make the page return to the home page after inserting the entity:</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Deleting an Entity</source>
          <target state="new">Deleting an Entity</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Deleting an item is accomplished with a single call to <ph id="ph1">`deleteItem`</ph>.</source>
          <target state="new">Deleting an item is accomplished with a single call to <ph id="ph1">`deleteItem`</ph>.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The passed in values are the <bpt id="p1">**</bpt>PartitionKey<ept id="p1">**</ept> and the <bpt id="p2">**</bpt>RowKey<ept id="p2">**</ept>, which together make up the primary key of the entity.</source>
          <target state="new">The passed in values are the <bpt id="p1">**</bpt>PartitionKey<ept id="p1">**</ept> and the <bpt id="p2">**</bpt>RowKey<ept id="p2">**</ept>, which together make up the primary key of the entity.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Create a file called <bpt id="p1">**</bpt>deleteitem.php<ept id="p1">**</ept> and insert the following code:</source>
          <target state="new">Create a file called <bpt id="p1">**</bpt>deleteitem.php<ept id="p1">**</ept> and insert the following code:</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Create an Azure storage account</source>
          <target state="new">Create an Azure storage account</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To make your application store data into the cloud you need to first create a storage account in Azure and then pass the proper authentication information to the <bpt id="p1">*</bpt>Configuration<ept id="p1">*</ept> class.</source>
          <target state="new">To make your application store data into the cloud you need to first create a storage account in Azure and then pass the proper authentication information to the <bpt id="p1">*</bpt>Configuration<ept id="p1">*</ept> class.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Login to the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">][management-portal]</ept>.</source>
          <target state="new">Login to the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">][management-portal]</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>New<ept id="p1">**</ept> icon on the bottom left of the portal, then click <bpt id="p2">**</bpt>Data + Storage<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Storage<ept id="p3">**</ept>.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>New<ept id="p1">**</ept> icon on the bottom left of the portal, then click <bpt id="p2">**</bpt>Data + Storage<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Storage<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Give the storage account a unique name and create a new <bpt id="p1">[</bpt>resource group<ept id="p1">](../resource-group-overview.md)</ept> for it.</source>
          <target state="new">Give the storage account a unique name and create a new <bpt id="p1">[</bpt>resource group<ept id="p1">](../resource-group-overview.md)</ept> for it.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Create a new storage account</source>
          <target state="new">Create a new storage account</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When the storage account has been created, the <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> button will flash a green <bpt id="p2">**</bpt>SUCCESS<ept id="p2">**</ept> and the storage account's blade is open to show that it belongs to the new resource group you created.</source>
          <target state="new">When the storage account has been created, the <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> button will flash a green <bpt id="p2">**</bpt>SUCCESS<ept id="p2">**</ept> and the storage account's blade is open to show that it belongs to the new resource group you created.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> part in the storage account's blade.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> part in the storage account's blade.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Take note of the account name and the primary key.</source>
          <target state="new">Take note of the account name and the primary key.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Select Manage Keys</source>
          <target state="new">Select Manage Keys</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt>init.php<ept id="p1">**</ept> and replace <ph id="ph1">`[YOUR_STORAGE_ACCOUNT_NAME]`</ph> and <ph id="ph2">`[YOUR_STORAGE_ACCOUNT_KEY]`</ph> with the account name and key you took note of in the last step.</source>
          <target state="new">Open <bpt id="p1">**</bpt>init.php<ept id="p1">**</ept> and replace <ph id="ph1">`[YOUR_STORAGE_ACCOUNT_NAME]`</ph> and <ph id="ph2">`[YOUR_STORAGE_ACCOUNT_KEY]`</ph> with the account name and key you took note of in the last step.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Save the file.</source>
          <target state="new">Save the file.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Create an Azure web app and set up Git publishing</source>
          <target state="new">Create an Azure web app and set up Git publishing</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Follow these steps to create an Azure web app:</source>
          <target state="new">Follow these steps to create an Azure web app:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Login to the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">][management-portal]</ept>.</source>
          <target state="new">Login to the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">][management-portal]</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Create an empty web app with the instructions at <bpt id="p1">[</bpt>How to: Create a web app Using the Azure Portal<ept id="p1">](../web-sites-create-deploy.md#createawebsiteportal)</ept>.</source>
          <target state="new">Create an empty web app with the instructions at <bpt id="p1">[</bpt>How to: Create a web app Using the Azure Portal<ept id="p1">](../web-sites-create-deploy.md#createawebsiteportal)</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Be sure to create a new <bpt id="p1">[</bpt>App Service plan<ept id="p1">](azure-web-sites-web-hosting-plans-in-depth-overview)</ept> and select the resource group you created previously for the storage account.</source>
          <target state="new">Be sure to create a new <bpt id="p1">[</bpt>App Service plan<ept id="p1">](azure-web-sites-web-hosting-plans-in-depth-overview)</ept> and select the resource group you created previously for the storage account.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When the web app has been created, the <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> button will flash a green <bpt id="p2">**</bpt>SUCCESS<ept id="p2">**</ept> and the web app's blade is open to show that it belongs to the new resource group you created.</source>
          <target state="new">When the web app has been created, the <bpt id="p1">**</bpt>Notifications<ept id="p1">**</ept> button will flash a green <bpt id="p2">**</bpt>SUCCESS<ept id="p2">**</ept> and the web app's blade is open to show that it belongs to the new resource group you created.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>In the web app's blade, click <bpt id="p1">**</bpt>Set up continuous deployment<ept id="p1">**</ept>, and choose <bpt id="p2">**</bpt>Local Git Repository<ept id="p2">**</ept>.</source>
          <target state="new">In the web app's blade, click <bpt id="p1">**</bpt>Set up continuous deployment<ept id="p1">**</ept>, and choose <bpt id="p2">**</bpt>Local Git Repository<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Set up Git publishing</source>
          <target state="new">Set up Git publishing</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Before you can deploy your local Git repository to Azure, you must also set up deployment credentials.</source>
          <target state="new">Before you can deploy your local Git repository to Azure, you must also set up deployment credentials.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In the web app's blade, click <bpt id="p1">**</bpt>All Settings<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Deployment credentials<ept id="p2">**</ept> to configure the credentials.</source>
          <target state="new">In the web app's blade, click <bpt id="p1">**</bpt>All Settings<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Deployment credentials<ept id="p2">**</ept> to configure the credentials.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept> when you're done.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept> when you're done.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Create publishing credentials</source>
          <target state="new">Create publishing credentials</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>It will take a few seconds to set up your repository.</source>
          <target state="new">It will take a few seconds to set up your repository.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Once the Git repository is ready, you now push your changes to it.</source>
          <target state="new">Once the Git repository is ready, you now push your changes to it.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can find the repo URL by clicking the same deployment part in the web app's blade.</source>
          <target state="new">You can find the repo URL by clicking the same deployment part in the web app's blade.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Git deployment instructions returned after creating a repository for the web app.</source>
          <target state="new">Git deployment instructions returned after creating a repository for the web app.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Note the instructions, as these will be used in the next section to publish the application.</source>
          <target state="new">Note the instructions, as these will be used in the next section to publish the application.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Publish Your Application</source>
          <target state="new">Publish Your Application</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To publish your application with Git, follow the steps below.</source>
          <target state="new">To publish your application with Git, follow the steps below.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>vendor/microsoft/windowsazure<ept id="p1">**</ept> folder under the root of the application and delete the following files and folders:</source>
          <target state="new">Open the <bpt id="p1">**</bpt>vendor/microsoft/windowsazure<ept id="p1">**</ept> folder under the root of the application and delete the following files and folders:</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>.git</source>
          <target state="new">.git</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>.gitattributes</source>
          <target state="new">.gitattributes</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>.gitignore</source>
          <target state="new">.gitignore</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When the Composer package manager downloads the Azure client libraries and their dependencies it does so by cloning the GitHub repository that they reside in.</source>
          <target state="new">When the Composer package manager downloads the Azure client libraries and their dependencies it does so by cloning the GitHub repository that they reside in.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>In the next step, the application will be deployed via Git by creating a repository out of the root folder of the application.</source>
          <target state="new">In the next step, the application will be deployed via Git by creating a repository out of the root folder of the application.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Git will ignore the sub-repository where the client libraries live unless the repository-specific files are removed.</source>
          <target state="new">Git will ignore the sub-repository where the client libraries live unless the repository-specific files are removed.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Open GitBash (or a terminal, if Git is in your <ph id="ph1">`PATH`</ph>), change directories to the root directory of your application, and run the following commands:</source>
          <target state="new">Open GitBash (or a terminal, if Git is in your <ph id="ph1">`PATH`</ph>), change directories to the root directory of your application, and run the following commands:</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You will be prompted for the password you created earlier.</source>
          <target state="new">You will be prompted for the password you created earlier.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Browse to <bpt id="p1">**</bpt>http://[your web app domain]/createtable.php<ept id="p1">**</ept> to create the table for the application.</source>
          <target state="new">Browse to <bpt id="p1">**</bpt>http://[your web app domain]/createtable.php<ept id="p1">**</ept> to create the table for the application.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Browse to <bpt id="p1">**</bpt>http://[your web app domain]/index.php<ept id="p1">**</ept> to begin using the application.</source>
          <target state="new">Browse to <bpt id="p1">**</bpt>http://[your web app domain]/index.php<ept id="p1">**</ept> to begin using the application.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>After you have published your application, you can begin making changes to it and use Git to publish them.</source>
          <target state="new">After you have published your application, you can begin making changes to it and use Git to publish them.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Publish Changes to Your Application</source>
          <target state="new">Publish Changes to Your Application</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To publish changes to application, follow these steps:</source>
          <target state="new">To publish changes to application, follow these steps:</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Make changes to your application locally.</source>
          <target state="new">Make changes to your application locally.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Open GitBash (or a terminal, it Git is in your <ph id="ph1">`PATH`</ph>), change directories to the root directory of your application, and run the following commands:</source>
          <target state="new">Open GitBash (or a terminal, it Git is in your <ph id="ph1">`PATH`</ph>), change directories to the root directory of your application, and run the following commands:</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You will be prompted for the password you created earlier.</source>
          <target state="new">You will be prompted for the password you created earlier.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Browse to <bpt id="p1">**</bpt>http://[your web app domain]/index.php<ept id="p1">**</ept> to see your changes.</source>
          <target state="new">Browse to <bpt id="p1">**</bpt>http://[your web app domain]/index.php<ept id="p1">**</ept> to see your changes.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>What's changed</source>
          <target state="new">What's changed</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For a guide to the change from Websites to App Service see: <bpt id="p1">[</bpt>Azure App Service and Its Impact on Existing Azure Services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept></source>
          <target state="new">For a guide to the change from Websites to App Service see: <bpt id="p1">[</bpt>Azure App Service and Its Impact on Existing Azure Services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept></target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For a guide to the change of the old portal to the new portal see: <bpt id="p1">[</bpt>Reference for navigating the portal<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept></source>
          <target state="new">For a guide to the change of the old portal to the new portal see: <bpt id="p1">[</bpt>Reference for navigating the portal<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept></target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c405df003a0f4ea0fc8fb7ef1af666e5d82366c7</xliffext:olfilehash>
  </header>
</xliff>