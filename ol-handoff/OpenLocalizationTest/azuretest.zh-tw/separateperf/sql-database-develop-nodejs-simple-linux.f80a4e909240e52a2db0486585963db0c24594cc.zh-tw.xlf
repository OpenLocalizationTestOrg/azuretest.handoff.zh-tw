<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Connect to SQL Database by using Node.js with Tedious on Ubuntu Linux</source>
          <target state="new">Connect to SQL Database by using Node.js with Tedious on Ubuntu Linux</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Presents a Node.js code sample you can use to connect to Azure SQL Database.</source>
          <target state="new">Presents a Node.js code sample you can use to connect to Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The sample uses the Tedious driver to connect.</source>
          <target state="new">The sample uses the Tedious driver to connect.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Connect to SQL Database by using Node.js with Tedious on Ubuntu Linux</source>
          <target state="new">Connect to SQL Database by using Node.js with Tedious on Ubuntu Linux</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic presents a Node.js code sample that runs on Ubuntu Linux.</source>
          <target state="new">This topic presents a Node.js code sample that runs on Ubuntu Linux.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The sample connects to Azure SQL Database by using the Tedious driver.</source>
          <target state="new">The sample connects to Azure SQL Database by using the Tedious driver.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Required software items</source>
          <target state="new">Required software items</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Open your terminal and install <bpt id="p1">**</bpt>node<ept id="p1">**</ept> and <bpt id="p2">**</bpt>npm<ept id="p2">**</ept>, unless they are already installed on your machine.</source>
          <target state="new">Open your terminal and install <bpt id="p1">**</bpt>node<ept id="p1">**</ept> and <bpt id="p2">**</bpt>npm<ept id="p2">**</ept>, unless they are already installed on your machine.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>After your machine is configured with <bpt id="p1">**</bpt>node<ept id="p1">**</ept> and <bpt id="p2">**</bpt>npm<ept id="p2">**</ept>, navigate to a directory where you plan to create your Node.js project, and enter the following commands.</source>
          <target state="new">After your machine is configured with <bpt id="p1">**</bpt>node<ept id="p1">**</ept> and <bpt id="p2">**</bpt>npm<ept id="p2">**</ept>, navigate to a directory where you plan to create your Node.js project, and enter the following commands.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>npm init<ept id="p1">**</ept> creates a node project.</source>
          <target state="new"><bpt id="p1">**</bpt>npm init<ept id="p1">**</ept> creates a node project.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To retain the defaults during your project creation, press enter until the project is created.</source>
          <target state="new">To retain the defaults during your project creation, press enter until the project is created.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Now you see a <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> file in your project directory.</source>
          <target state="new">Now you see a <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> file in your project directory.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create an AdventureWorks database</source>
          <target state="new">Create an AdventureWorks database</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The code sample in this topic expects an <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> test database.</source>
          <target state="new">The code sample in this topic expects an <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> test database.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you do not already have one, see <bpt id="p1">[</bpt>Get started with SQL Database<ept id="p1">](sql-database-get-started.md)</ept>.</source>
          <target state="new">If you do not already have one, see <bpt id="p1">[</bpt>Get started with SQL Database<ept id="p1">](sql-database-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It is important that you follow the guide to create an <bpt id="p1">**</bpt>AdventureWorks database template<ept id="p1">**</ept>.</source>
          <target state="new">It is important that you follow the guide to create an <bpt id="p1">**</bpt>AdventureWorks database template<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The examples shown below work only with the <bpt id="p1">**</bpt>AdventureWorks schema<ept id="p1">**</ept>.</source>
          <target state="new">The examples shown below work only with the <bpt id="p1">**</bpt>AdventureWorks schema<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Connect to your SQL Database</source>
          <target state="new">Connect to your SQL Database</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>new Connection<ept id="p1">](http://pekim.github.io/tedious/api-connection.html)</ept> function is used to connect to SQL Database.</source>
          <target state="new">The <bpt id="p1">[</bpt>new Connection<ept id="p1">](http://pekim.github.io/tedious/api-connection.html)</ept> function is used to connect to SQL Database.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Execute an SQL SELECT</source>
          <target state="new">Execute an SQL SELECT</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>All SQL statements are executed using the <bpt id="p1">[</bpt>new Request()<ept id="p1">](http://pekim.github.io/tedious/api-request.html)</ept> function.</source>
          <target state="new">All SQL statements are executed using the <bpt id="p1">[</bpt>new Request()<ept id="p1">](http://pekim.github.io/tedious/api-request.html)</ept> function.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the statement returns rows, such as a select statement, you can retreive them using the <bpt id="p1">[</bpt>request.on()<ept id="p1">](http://pekim.github.io/tedious/api-request.html)</ept> function.</source>
          <target state="new">If the statement returns rows, such as a select statement, you can retreive them using the <bpt id="p1">[</bpt>request.on()<ept id="p1">](http://pekim.github.io/tedious/api-request.html)</ept> function.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If there are no rows, <bpt id="p1">[</bpt>request.on()<ept id="p1">](http://pekim.github.io/tedious/api-request.html)</ept> function returns empty lists.</source>
          <target state="new">If there are no rows, <bpt id="p1">[</bpt>request.on()<ept id="p1">](http://pekim.github.io/tedious/api-request.html)</ept> function returns empty lists.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Insert a row, apply parameters, and retrieve the generated primary key</source>
          <target state="new">Insert a row, apply parameters, and retrieve the generated primary key</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In SQL Database the <bpt id="p1">[</bpt>IDENTITY<ept id="p1">](https://msdn.microsoft.com/library/ms186775.aspx)</ept> property and the <bpt id="p2">[</bpt>SEQUENCE<ept id="p2">](https://msdn.microsoft.com/library/ff878058.aspx)</ept> object can be used to auto-generate <bpt id="p3">[</bpt>primary key<ept id="p3">](https://msdn.microsoft.com/library/ms179610.aspx)</ept> values.</source>
          <target state="new">In SQL Database the <bpt id="p1">[</bpt>IDENTITY<ept id="p1">](https://msdn.microsoft.com/library/ms186775.aspx)</ept> property and the <bpt id="p2">[</bpt>SEQUENCE<ept id="p2">](https://msdn.microsoft.com/library/ff878058.aspx)</ept> object can be used to auto-generate <bpt id="p3">[</bpt>primary key<ept id="p3">](https://msdn.microsoft.com/library/ms179610.aspx)</ept> values.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In this example you will see how to execute an insert-statement, safely pass parameters which protects from SQL injection, and retrieve the auto-generated primary key value.</source>
          <target state="new">In this example you will see how to execute an insert-statement, safely pass parameters which protects from SQL injection, and retrieve the auto-generated primary key value.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The code sample in this section applies parameters to an SQL INSERT statement.</source>
          <target state="new">The code sample in this section applies parameters to an SQL INSERT statement.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The primary key value that is generated is retrieved by the program.</source>
          <target state="new">The primary key value that is generated is retrieved by the program.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">601e231b47b99d45272b1418619275993ca6c226</xliffext:olfilehash>
  </header>
</xliff>