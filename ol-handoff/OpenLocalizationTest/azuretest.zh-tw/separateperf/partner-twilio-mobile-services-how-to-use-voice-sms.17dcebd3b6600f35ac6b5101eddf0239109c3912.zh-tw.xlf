<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use Twilio for Voice and SMS Capabilities | Microsoft Azure</source>
          <target state="new">Use Twilio for Voice and SMS Capabilities | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to perform common tasks using the Twilio API with Azure Mobile Services.</source>
          <target state="new">Learn how to perform common tasks using the Twilio API with Azure Mobile Services.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to use Twilio for voice and SMS capabilities from Mobile Services</source>
          <target state="new">How to use Twilio for voice and SMS capabilities from Mobile Services</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic shows you how to perform common tasks using the Twilio API with Azure Mobile Services.</source>
          <target state="new">This topic shows you how to perform common tasks using the Twilio API with Azure Mobile Services.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this tutorial you will learn how to create Custom API scripts that use the Twilio API to initiate a phone call and to send a Short Message Service (SMS) message.</source>
          <target state="new">In this tutorial you will learn how to create Custom API scripts that use the Twilio API to initiate a phone call and to send a Short Message Service (SMS) message.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="WhatIs"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>What is Twilio?</source>
          <target state="new"><ph id="ph1">&lt;a id="WhatIs"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>What is Twilio?</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Twilio is powering the future of business communications, enabling developers to embed voice, VoIP, and messaging into applications.</source>
          <target state="new">Twilio is powering the future of business communications, enabling developers to embed voice, VoIP, and messaging into applications.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>They virtualize all infrastructure needed in a cloud-based, global environment, exposing it through the Twilio communications API platform.</source>
          <target state="new">They virtualize all infrastructure needed in a cloud-based, global environment, exposing it through the Twilio communications API platform.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Applications are simple to build and scalable.</source>
          <target state="new">Applications are simple to build and scalable.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Enjoy flexibility with pay-as-you go pricing, and benefit from cloud reliability.</source>
          <target state="new">Enjoy flexibility with pay-as-you go pricing, and benefit from cloud reliability.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Twilio Voice<ept id="p1">**</ept> allows your applications to make and receive phone calls.</source>
          <target state="new"><bpt id="p1">**</bpt>Twilio Voice<ept id="p1">**</ept> allows your applications to make and receive phone calls.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Twilio SMS<ept id="p1">**</ept> enables your applications to send and receive SMS messages.</source>
          <target state="new"><bpt id="p1">**</bpt>Twilio SMS<ept id="p1">**</ept> enables your applications to send and receive SMS messages.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Twilio Client<ept id="p1">**</ept> allows you to make VoIP calls from any phone, tablet, or browser and supports WebRTC.</source>
          <target state="new"><bpt id="p1">**</bpt>Twilio Client<ept id="p1">**</ept> allows you to make VoIP calls from any phone, tablet, or browser and supports WebRTC.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="Pricing"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Twilio Pricing and Special Offers</source>
          <target state="new"><ph id="ph1">&lt;a id="Pricing"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Twilio Pricing and Special Offers</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Azure customers receive a <bpt id="p1">[</bpt>special offer<ept id="p1">][special_offer]</ept>: complimentary $10 of Twilio Credit when you upgrade your Twilio Account.</source>
          <target state="new">Azure customers receive a <bpt id="p1">[</bpt>special offer<ept id="p1">][special_offer]</ept>: complimentary $10 of Twilio Credit when you upgrade your Twilio Account.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This Twilio Credit can be applied to any Twilio usage ($10 credit equivalent to sending as many as 1,000 SMS messages or receiving up to 1000 inbound Voice minutes, depending on the location of your phone number and message or call destination).</source>
          <target state="new">This Twilio Credit can be applied to any Twilio usage ($10 credit equivalent to sending as many as 1,000 SMS messages or receiving up to 1000 inbound Voice minutes, depending on the location of your phone number and message or call destination).</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Redeem this Twilio credit and get started at <bpt id="p1">[</bpt>ahoy.twilio.com/azure<ept id="p1">][special_offer]</ept>.</source>
          <target state="new">Redeem this Twilio credit and get started at <bpt id="p1">[</bpt>ahoy.twilio.com/azure<ept id="p1">][special_offer]</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Twilio is a pay-as-you-go service.</source>
          <target state="new">Twilio is a pay-as-you-go service.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>There are no set-up fees and you can close your account at any time.</source>
          <target state="new">There are no set-up fees and you can close your account at any time.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can find more details at <bpt id="p1">[</bpt>Twilio Pricing<ept id="p1">][twilio_pricing]</ept>.</source>
          <target state="new">You can find more details at <bpt id="p1">[</bpt>Twilio Pricing<ept id="p1">][twilio_pricing]</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="Concepts"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Concepts</source>
          <target state="new"><ph id="ph1">&lt;a id="Concepts"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Concepts</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Twilio API is a RESTful API that provides voice and SMS functionality for applications.</source>
          <target state="new">The Twilio API is a RESTful API that provides voice and SMS functionality for applications.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Client libraries are available in multiple languages; for a list, see <bpt id="p1">[</bpt>Twilio API Libraries<ept id="p1">] [twilio_libraries]</ept>.</source>
          <target state="new">Client libraries are available in multiple languages; for a list, see <bpt id="p1">[</bpt>Twilio API Libraries<ept id="p1">] [twilio_libraries]</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Additional tutorials are available for using the Twilio any Azure application written in <bpt id="p1">[</bpt>.NET<ept id="p1">][azure_twilio_howto_dotnet]</ept>, <bpt id="p2">[</bpt>node.js<ept id="p2">][azure_twilio_howto_node]</ept>, <bpt id="p3">[</bpt>Java<ept id="p3">][azure_twilio_howto_java]</ept>, <bpt id="p4">[</bpt>PHP<ept id="p4">][azure_twilio_howto_php]</ept>, <bpt id="p5">[</bpt>Python<ept id="p5">][azure_twilio_howto_python]</ept> or <bpt id="p6">[</bpt>Ruby<ept id="p6">][azure_twilio_howto_ruby]</ept>.</source>
          <target state="new">Additional tutorials are available for using the Twilio any Azure application written in <bpt id="p1">[</bpt>.NET<ept id="p1">][azure_twilio_howto_dotnet]</ept>, <bpt id="p2">[</bpt>node.js<ept id="p2">][azure_twilio_howto_node]</ept>, <bpt id="p3">[</bpt>Java<ept id="p3">][azure_twilio_howto_java]</ept>, <bpt id="p4">[</bpt>PHP<ept id="p4">][azure_twilio_howto_php]</ept>, <bpt id="p5">[</bpt>Python<ept id="p5">][azure_twilio_howto_python]</ept> or <bpt id="p6">[</bpt>Ruby<ept id="p6">][azure_twilio_howto_ruby]</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Key aspects of the Twilio API are Twilio verbs and Twilio Markup Language (TwiML).</source>
          <target state="new">Key aspects of the Twilio API are Twilio verbs and Twilio Markup Language (TwiML).</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="Verbs"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Twilio verbs</source>
          <target state="new"><ph id="ph1">&lt;a id="Verbs"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Twilio verbs</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The API makes use of Twilio verbs; for example, the <bpt id="p1">**</bpt>&amp;lt;Say&amp;gt;<ept id="p1">**</ept> verb instructs Twilio to audibly deliver a message on a call.</source>
          <target state="new">The API makes use of Twilio verbs; for example, the <bpt id="p1">**</bpt>&amp;lt;Say&amp;gt;<ept id="p1">**</ept> verb instructs Twilio to audibly deliver a message on a call.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following is a list of Twilio verbs.</source>
          <target state="new">The following is a list of Twilio verbs.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Learn about the other verbs and capabilities via <bpt id="p1">[</bpt>Twilio Markup Language documentation<ept id="p1">](http://www.twilio.com/docs/api/twiml)</ept>.</source>
          <target state="new">Learn about the other verbs and capabilities via <bpt id="p1">[</bpt>Twilio Markup Language documentation<ept id="p1">](http://www.twilio.com/docs/api/twiml)</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;Dial&amp;gt;<ept id="p1">**</ept>: Connects the caller to another phone.</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;Dial&amp;gt;<ept id="p1">**</ept>: Connects the caller to another phone.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;Gather&amp;gt;<ept id="p1">**</ept>: Collects numeric digits entered on the telephone keypad.</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;Gather&amp;gt;<ept id="p1">**</ept>: Collects numeric digits entered on the telephone keypad.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;Hangup&amp;gt;<ept id="p1">**</ept>: Ends a call.</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;Hangup&amp;gt;<ept id="p1">**</ept>: Ends a call.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;Play&amp;gt;<ept id="p1">**</ept>: Plays an audio file.</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;Play&amp;gt;<ept id="p1">**</ept>: Plays an audio file.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;Pause&amp;gt;<ept id="p1">**</ept>: Waits silently for a specified number of seconds.</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;Pause&amp;gt;<ept id="p1">**</ept>: Waits silently for a specified number of seconds.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;Record&amp;gt;<ept id="p1">**</ept>: Records the caller's voice and returns a URL of a file that contains the recording.</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;Record&amp;gt;<ept id="p1">**</ept>: Records the caller's voice and returns a URL of a file that contains the recording.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;Redirect&amp;gt;<ept id="p1">**</ept>: Transfers control of a call or SMS to the TwiML at a different URL.</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;Redirect&amp;gt;<ept id="p1">**</ept>: Transfers control of a call or SMS to the TwiML at a different URL.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;Reject&amp;gt;<ept id="p1">**</ept>: Rejects an incoming call to your Twilio number without billing you</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;Reject&amp;gt;<ept id="p1">**</ept>: Rejects an incoming call to your Twilio number without billing you</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;Say&amp;gt;<ept id="p1">**</ept>: Converts text to speech that is made on a call.</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;Say&amp;gt;<ept id="p1">**</ept>: Converts text to speech that is made on a call.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;Sms&amp;gt;<ept id="p1">**</ept>: Sends an SMS message.</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;Sms&amp;gt;<ept id="p1">**</ept>: Sends an SMS message.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="TwiML"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>TwiML</source>
          <target state="new"><ph id="ph1">&lt;a id="TwiML"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>TwiML</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>TwiML is a set of XML-based instructions based on the Twilio verbs that inform Twilio of how to process a call or SMS.</source>
          <target state="new">TwiML is a set of XML-based instructions based on the Twilio verbs that inform Twilio of how to process a call or SMS.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>As an example, the following TwiML would convert the text <bpt id="p1">**</bpt>Hello World<ept id="p1">**</ept> to speech.</source>
          <target state="new">As an example, the following TwiML would convert the text <bpt id="p1">**</bpt>Hello World<ept id="p1">**</ept> to speech.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When your application calls the Twilio API, one of the API parameters is the URL that returns the TwiML response.</source>
          <target state="new">When your application calls the Twilio API, one of the API parameters is the URL that returns the TwiML response.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For development purposes, you can use Twilio-provided URLs to provide the TwiML responses used by your applications.</source>
          <target state="new">For development purposes, you can use Twilio-provided URLs to provide the TwiML responses used by your applications.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You could also host your own URLs to produce the TwiML responses, and another option is to use the <bpt id="p1">**</bpt>TwiMLResponse<ept id="p1">**</ept> object.</source>
          <target state="new">You could also host your own URLs to produce the TwiML responses, and another option is to use the <bpt id="p1">**</bpt>TwiMLResponse<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about Twilio verbs, their attributes, and TwiML, see <bpt id="p1">[</bpt>TwiML<ept id="p1">][twiml]</ept>.</source>
          <target state="new">For more information about Twilio verbs, their attributes, and TwiML, see <bpt id="p1">[</bpt>TwiML<ept id="p1">][twiml]</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For additional information about the Twilio API, see <bpt id="p1">[</bpt>Twilio API<ept id="p1">][twilio_api]</ept>.</source>
          <target state="new">For additional information about the Twilio API, see <bpt id="p1">[</bpt>Twilio API<ept id="p1">][twilio_api]</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="CreateAccount"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create a Twilio Account</source>
          <target state="new"><ph id="ph1">&lt;a id="CreateAccount"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create a Twilio Account</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When you're ready to get a Twilio account, sign up at <bpt id="p1">[</bpt>Try Twilio<ept id="p1">][try_twilio]</ept>.</source>
          <target state="new">When you're ready to get a Twilio account, sign up at <bpt id="p1">[</bpt>Try Twilio<ept id="p1">][try_twilio]</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can start with a free account, and upgrade your account later.</source>
          <target state="new">You can start with a free account, and upgrade your account later.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When you sign up for a Twilio account, you'll receive an account ID and an authentication token.</source>
          <target state="new">When you sign up for a Twilio account, you'll receive an account ID and an authentication token.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Both will be needed to make Twilio API calls.</source>
          <target state="new">Both will be needed to make Twilio API calls.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To prevent unauthorized access to your account, keep your authentication token secure.</source>
          <target state="new">To prevent unauthorized access to your account, keep your authentication token secure.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Your account ID and authentication token are viewable at the <bpt id="p1">[</bpt>Twilio account page<ept id="p1">][twilio_account]</ept>, in the fields labeled <bpt id="p2">**</bpt>ACCOUNT SID<ept id="p2">**</ept> and <bpt id="p3">**</bpt>AUTH TOKEN<ept id="p3">**</ept>, respectively.</source>
          <target state="new">Your account ID and authentication token are viewable at the <bpt id="p1">[</bpt>Twilio account page<ept id="p1">][twilio_account]</ept>, in the fields labeled <bpt id="p2">**</bpt>ACCOUNT SID<ept id="p2">**</ept> and <bpt id="p3">**</bpt>AUTH TOKEN<ept id="p3">**</ept>, respectively.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="create_app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create a Mobile Service</source>
          <target state="new"><ph id="ph1">&lt;a id="create_app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create a Mobile Service</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A Mobile Service that hosts a Twilio enabled application is no different from any other Mobile Service.</source>
          <target state="new">A Mobile Service that hosts a Twilio enabled application is no different from any other Mobile Service.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You simply add the Twilio node.js library in order to reference it from your Mobile Service Custom API scripts.</source>
          <target state="new">You simply add the Twilio node.js library in order to reference it from your Mobile Service Custom API scripts.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For information on creating an initial mobile service, see <bpt id="p1">[</bpt>Getting Started with Mobile Services<ept id="p1">](mobile-services-ios-get-started.md)</ept>.</source>
          <target state="new">For information on creating an initial mobile service, see <bpt id="p1">[</bpt>Getting Started with Mobile Services<ept id="p1">](mobile-services-ios-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="ConfigureMobileService"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Configure Your Mobile Service to use the Twilio Node.js Library</source>
          <target state="new"><ph id="ph1">&lt;a id="ConfigureMobileService"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Configure Your Mobile Service to use the Twilio Node.js Library</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Twilio provides a Node.js library that wraps various aspects of Twilio to provide simple and easy ways to interact with the Twilio REST API and Twilio Client to generate TwiML responses.</source>
          <target state="new">Twilio provides a Node.js library that wraps various aspects of Twilio to provide simple and easy ways to interact with the Twilio REST API and Twilio Client to generate TwiML responses.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To use the Twilio node.js library in your Mobile Service, you need leverage Mobile Services npm module support, which you can do by storing your scripts in source control.</source>
          <target state="new">To use the Twilio node.js library in your Mobile Service, you need leverage Mobile Services npm module support, which you can do by storing your scripts in source control.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Complete the tutorial <bpt id="p1">[</bpt>Store Scripts in Source Control<ept id="p1">](mobile-services-store-scripts-source-control.md)</ept>.</source>
          <target state="new">Complete the tutorial <bpt id="p1">[</bpt>Store Scripts in Source Control<ept id="p1">](mobile-services-store-scripts-source-control.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This walks you through setting-up source control for your Mobile Services and storing your server scripts in a Git repository.</source>
          <target state="new">This walks you through setting-up source control for your Mobile Services and storing your server scripts in a Git repository.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>After you have set up source control for your Mobile Service, open the repository on your local computer, browse to the <ph id="ph1">`\services`</ph> subfolder, open the package.json file in a text editor, and add the following field to the <bpt id="p1">**</bpt>dependencies<ept id="p1">**</ept> object:</source>
          <target state="new">After you have set up source control for your Mobile Service, open the repository on your local computer, browse to the <ph id="ph1">`\services`</ph> subfolder, open the package.json file in a text editor, and add the following field to the <bpt id="p1">**</bpt>dependencies<ept id="p1">**</ept> object:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>After you have added the Twilio package reference to the <bpt id="p1">**</bpt>dependencies<ept id="p1">**</ept> object, the package.json file should look like the following:</source>
          <target state="new">After you have added the Twilio package reference to the <bpt id="p1">**</bpt>dependencies<ept id="p1">**</ept> object, the package.json file should look like the following:</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>The dependency for Twilio should be added as <ph id="ph2">`"twilio": "~1.7.0"`</ph>, with a (~).</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>The dependency for Twilio should be added as <ph id="ph2">`"twilio": "~1.7.0"`</ph>, with a (~).</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A reference with a caret (^) is not supported.</source>
          <target state="new">A reference with a caret (^) is not supported.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Commit this file update and push the update back to the mobile service.</source>
          <target state="new">Commit this file update and push the update back to the mobile service.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This update to the package.json file will restart your mobile service.</source>
          <target state="new">This update to the package.json file will restart your mobile service.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The mobile service now installs and loads the Twilio package so you can reference and use the Twilio library in your custom API and table scripts.</source>
          <target state="new">The mobile service now installs and loads the Twilio package so you can reference and use the Twilio library in your custom API and table scripts.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="howto_make_call"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Make an outgoing call</source>
          <target state="new"><ph id="ph1">&lt;a id="howto_make_call"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Make an outgoing call</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following script shows how to initiate an outgoing call from your Mobile Service using the <bpt id="p1">**</bpt>makeCall<ept id="p1">**</ept> function.</source>
          <target state="new">The following script shows how to initiate an outgoing call from your Mobile Service using the <bpt id="p1">**</bpt>makeCall<ept id="p1">**</ept> function.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This code also uses a Twilio-provided site to return the Twilio Markup Language (TwiML) response.</source>
          <target state="new">This code also uses a Twilio-provided site to return the Twilio Markup Language (TwiML) response.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Substitute your values for the <bpt id="p1">**</bpt>From<ept id="p1">**</ept> and <bpt id="p2">**</bpt>To<ept id="p2">**</ept> phone numbers, and ensure that you verify the <bpt id="p3">**</bpt>From<ept id="p3">**</ept> phone number for your Twilio account prior to running the code.</source>
          <target state="new">Substitute your values for the <bpt id="p1">**</bpt>From<ept id="p1">**</ept> and <bpt id="p2">**</bpt>To<ept id="p2">**</ept> phone numbers, and ensure that you verify the <bpt id="p3">**</bpt>From<ept id="p3">**</ept> phone number for your Twilio account prior to running the code.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information about the parameters passed in to the <bpt id="p1">**</bpt>client.makeCall<ept id="p1">**</ept> function, see <bpt id="p2">[</bpt>http://www.twilio.com/docs/api/rest/making-calls<ept id="p2">][twilio_rest_making_calls]</ept>.</source>
          <target state="new">For more information about the parameters passed in to the <bpt id="p1">**</bpt>client.makeCall<ept id="p1">**</ept> function, see <bpt id="p2">[</bpt>http://www.twilio.com/docs/api/rest/making-calls<ept id="p2">][twilio_rest_making_calls]</ept>.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>As mentioned, this code uses a Twilio-provided site to return the TwiML response.</source>
          <target state="new">As mentioned, this code uses a Twilio-provided site to return the TwiML response.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You could instead use your own site to provide the TwiML response.</source>
          <target state="new">You could instead use your own site to provide the TwiML response.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Provide TwiML responses from your own web site<ept id="p1">](#howto_provide_twiml_responses)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>How to: Provide TwiML responses from your own web site<ept id="p1">](#howto_provide_twiml_responses)</ept>.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="howto_send_sms"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Send an SMS message</source>
          <target state="new"><ph id="ph1">&lt;a id="howto_send_sms"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Send an SMS message</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following code shows how to send an SMS message using the <bpt id="p1">**</bpt>sendSms<ept id="p1">**</ept>  function.</source>
          <target state="new">The following code shows how to send an SMS message using the <bpt id="p1">**</bpt>sendSms<ept id="p1">**</ept>  function.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>From<ept id="p1">**</ept> number is provided by Twilio for trial accounts to send SMS messages.</source>
          <target state="new">The <bpt id="p1">**</bpt>From<ept id="p1">**</ept> number is provided by Twilio for trial accounts to send SMS messages.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>To<ept id="p1">**</ept> number must be verified for your Twilio account before you run the code.</source>
          <target state="new">The <bpt id="p1">**</bpt>To<ept id="p1">**</ept> number must be verified for your Twilio account before you run the code.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="howto_provide_twiml_responses"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Provide TwiML responses from your own website</source>
          <target state="new"><ph id="ph1">&lt;a id="howto_provide_twiml_responses"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Provide TwiML responses from your own website</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When your application initiates a call to the Twilio API - for example, via the client.InitiateOutboundCall method - Twilio sends your request to a URL that is expected to return a TwiML response.</source>
          <target state="new">When your application initiates a call to the Twilio API - for example, via the client.InitiateOutboundCall method - Twilio sends your request to a URL that is expected to return a TwiML response.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The example in How to: Make an outgoing call uses the Twilio-provided URL http://twimlets.com/message to return the response.</source>
          <target state="new">The example in How to: Make an outgoing call uses the Twilio-provided URL http://twimlets.com/message to return the response.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> While TwiML is designed for use by web services, you can view the TwiML in your browser.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> While TwiML is designed for use by web services, you can view the TwiML in your browser.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For example, click <bpt id="p1">[</bpt>twimlet_message_url<ept id="p1">](http://twimlets.com/message)</ept> to see an empty &amp;lt;Response&amp;gt; element; as another example, click <bpt id="p2">[</bpt>twimlet_message_url_hello_world<ept id="p2">](http://twimlets.com/message?Message%5B0%5D=Hello%20World)</ept> to see a &amp;lt;Response&amp;gt; element that contains a &amp;lt;Say&amp;gt; element.</source>
          <target state="new">For example, click <bpt id="p1">[</bpt>twimlet_message_url<ept id="p1">](http://twimlets.com/message)</ept> to see an empty &amp;lt;Response&amp;gt; element; as another example, click <bpt id="p2">[</bpt>twimlet_message_url_hello_world<ept id="p2">](http://twimlets.com/message?Message%5B0%5D=Hello%20World)</ept> to see a &amp;lt;Response&amp;gt; element that contains a &amp;lt;Say&amp;gt; element.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Instead of relying on the Twilio-provided URL, you can create your own URL site that returns HTTP responses.</source>
          <target state="new">Instead of relying on the Twilio-provided URL, you can create your own URL site that returns HTTP responses.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can create the site in any language that returns HTTP responses.</source>
          <target state="new">You can create the site in any language that returns HTTP responses.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This topic assumes you'll be hosting the URL from an ASP.NET generic handler.</source>
          <target state="new">This topic assumes you'll be hosting the URL from an ASP.NET generic handler.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The following script results in a TwiML response that says Hello World on the call.</source>
          <target state="new">The following script results in a TwiML response that says Hello World on the call.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more information about TwiML, see <bpt id="p1">[</bpt>https://www.twilio.com/docs/api/twiml<ept id="p1">](https://www.twilio.com/docs/api/twiml)</ept>.</source>
          <target state="new">For more information about TwiML, see <bpt id="p1">[</bpt>https://www.twilio.com/docs/api/twiml<ept id="p1">](https://www.twilio.com/docs/api/twiml)</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Once you have set up a way to provide TwiML responses, you can pass that URL into the <bpt id="p1">**</bpt>client.makeCall<ept id="p1">**</ept> method as shown in the following code sample:</source>
          <target state="new">Once you have set up a way to provide TwiML responses, you can pass that URL into the <bpt id="p1">**</bpt>client.makeCall<ept id="p1">**</ept> method as shown in the following code sample:</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">968111b243ea9914b40f1d3af2285b8bb8e20881</xliffext:olfilehash>
  </header>
</xliff>