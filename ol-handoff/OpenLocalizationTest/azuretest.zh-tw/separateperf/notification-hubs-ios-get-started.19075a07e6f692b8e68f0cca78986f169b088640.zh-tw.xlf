<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Get started with Azure Notification Hubs | Microsoft Azure</source>
          <target state="new">Get started with Azure Notification Hubs | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this tutorial, you learn how to use Azure Notification Hubs to push notifications to an iOS application.</source>
          <target state="new">In this tutorial, you learn how to use Azure Notification Hubs to push notifications to an iOS application.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get started with Notification Hubs</source>
          <target state="new">Get started with Notification Hubs</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to use Azure Notification Hubs to send push notifications to an iOS application.</source>
          <target state="new">This tutorial shows you how to use Azure Notification Hubs to send push notifications to an iOS application.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You'll create a blank iOS app that receives push notifications by using the Apple Push Notification service (APNs).</source>
          <target state="new">You'll create a blank iOS app that receives push notifications by using the Apple Push Notification service (APNs).</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you're finished, you'll be able to use your notification hub to broadcast push notifications to all the devices running your app.</source>
          <target state="new">When you're finished, you'll be able to use your notification hub to broadcast push notifications to all the devices running your app.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates the simple broadcast scenario in using Notification Hubs.</source>
          <target state="new">This tutorial demonstrates the simple broadcast scenario in using Notification Hubs.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This tutorial requires the following:</source>
          <target state="new">This tutorial requires the following:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Mobile Services iOS SDK</source>
          <target state="new">Mobile Services iOS SDK</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Xcode 6</source>
          <target state="new">Xcode 6</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An iOS 8 (or later version) capable device</source>
          <target state="new">An iOS 8 (or later version) capable device</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>iOS Developer Program membership</source>
          <target state="new">iOS Developer Program membership</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Because of configuration requirements for push notifications, you must deploy and test push notifications on an iOS capable device (iPhone or iPad) instead of the iOS Simulator.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Because of configuration requirements for push notifications, you must deploy and test push notifications on an iOS capable device (iPhone or iPad) instead of the iOS Simulator.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Completing this tutorial is a prerequisite for all other Notification Hubs tutorials for iOS apps.</source>
          <target state="new">Completing this tutorial is a prerequisite for all other Notification Hubs tutorials for iOS apps.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> To complete this tutorial, you must have an active Azure account.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> To complete this tutorial, you must have an active Azure account.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you don't have an account, you can create a free trial account in just a couple of minutes.</source>
          <target state="new">If you don't have an account, you can create a free trial account in just a couple of minutes.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A0E0E5C02&amp;amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fdocumentation%2Farticles%2Fnotification-hubs-ios-get-started)</ept>.</source>
          <target state="new">For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A0E0E5C02&amp;amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fdocumentation%2Farticles%2Fnotification-hubs-ios-get-started)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Configure your notification hub</source>
          <target state="new">Configure your notification hub</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This section walks you through creating and configuring a new notification hub by using the push certificate that you created.</source>
          <target state="new">This section walks you through creating and configuring a new notification hub by using the push certificate that you created.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you want to use a notification hub that you have already created, you can skip steps 2–5.</source>
          <target state="new">If you want to use a notification hub that you have already created, you can skip steps 2–5.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In Keychain Access, right-click the new push certificate that you created in the <bpt id="p1">**</bpt>Certificates<ept id="p1">**</ept> category.</source>
          <target state="new">In Keychain Access, right-click the new push certificate that you created in the <bpt id="p1">**</bpt>Certificates<ept id="p1">**</ept> category.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Export<ept id="p1">**</ept>, name the file, select the <bpt id="p2">**</bpt>.p12<ept id="p2">**</ept> format, and then click <bpt id="p3">**</bpt>Save<ept id="p3">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Export<ept id="p1">**</ept>, name the file, select the <bpt id="p2">**</bpt>.p12<ept id="p2">**</ept> format, and then click <bpt id="p3">**</bpt>Save<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>![][1]</source>
          <target state="new">![][1]</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Make a note of the file name and location of the exported certificate.</source>
          <target state="new">Make a note of the file name and location of the exported certificate.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This tutorial creates a QuickStart.p12 file.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This tutorial creates a QuickStart.p12 file.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Your file name and location might be different.</source>
          <target state="new">Your file name and location might be different.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Sign in to the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept>, and click <bpt id="p2">**</bpt>+NEW<ept id="p2">**</ept> at the bottom of the screen.</source>
          <target state="new">Sign in to the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept>, and click <bpt id="p2">**</bpt>+NEW<ept id="p2">**</ept> at the bottom of the screen.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>App Services<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Service Bus<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Notification Hub<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>Quick Create<ept id="p4">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>App Services<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Service Bus<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Notification Hub<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>Quick Create<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>![][2]</source>
          <target state="new">![][2]</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Type a name for your notification hub, select your desired region, and then click <bpt id="p1">**</bpt>Create a new Notification Hub<ept id="p1">**</ept>.</source>
          <target state="new">Type a name for your notification hub, select your desired region, and then click <bpt id="p1">**</bpt>Create a new Notification Hub<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>![][3]</source>
          <target state="new">![][3]</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Click the namespace that you just created (usually <bpt id="p1">**</bpt><bpt id="p2">*</bpt>notification hub name<ept id="p2">*</ept>-ns<ept id="p1">**</ept>) to open its dashboard.</source>
          <target state="new">Click the namespace that you just created (usually <bpt id="p1">**</bpt><bpt id="p2">*</bpt>notification hub name<ept id="p2">*</ept>-ns<ept id="p1">**</ept>) to open its dashboard.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>![][4]</source>
          <target state="new">![][4]</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Notification Hubs<ept id="p1">**</ept> tab at the top, and then click the notification hub that you just created.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Notification Hubs<ept id="p1">**</ept> tab at the top, and then click the notification hub that you just created.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>![][5]</source>
          <target state="new">![][5]</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab at the top, and then click the <bpt id="p2">**</bpt>Upload<ept id="p2">**</ept> button in the Apple notification settings to upload the certificate thumbprint.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab at the top, and then click the <bpt id="p2">**</bpt>Upload<ept id="p2">**</ept> button in the Apple notification settings to upload the certificate thumbprint.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Then select the <bpt id="p1">**</bpt>.p12<ept id="p1">**</ept> certificate that you exported earlier, and the password for the certificate.</source>
          <target state="new">Then select the <bpt id="p1">**</bpt>.p12<ept id="p1">**</ept> certificate that you exported earlier, and the password for the certificate.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Make sure to select whether you want to use the <bpt id="p1">**</bpt>Production<ept id="p1">**</ept> (if you want to send push notifications to users who purchased your app from the store) or the <bpt id="p2">**</bpt>Sandbox<ept id="p2">**</ept> (during development) push service.</source>
          <target state="new">Make sure to select whether you want to use the <bpt id="p1">**</bpt>Production<ept id="p1">**</ept> (if you want to send push notifications to users who purchased your app from the store) or the <bpt id="p2">**</bpt>Sandbox<ept id="p2">**</ept> (during development) push service.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>![][6]</source>
          <target state="new">![][6]</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> tab at the top, and then click <bpt id="p2">**</bpt>View Connection String<ept id="p2">**</ept>.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> tab at the top, and then click <bpt id="p2">**</bpt>View Connection String<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Take note of the two connection strings.</source>
          <target state="new">Take note of the two connection strings.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>![][7]</source>
          <target state="new">![][7]</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Your notification hub is now configured to work with APNs, and you have the connection strings to register your app and send notifications.</source>
          <target state="new">Your notification hub is now configured to work with APNs, and you have the connection strings to register your app and send notifications.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Connect your app to the notification hub</source>
          <target state="new">Connect your app to the notification hub</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In Xcode, create a new iOS project and select the <bpt id="p1">**</bpt>Single View Application<ept id="p1">**</ept> template.</source>
          <target state="new">In Xcode, create a new iOS project and select the <bpt id="p1">**</bpt>Single View Application<ept id="p1">**</ept> template.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>![][8]</source>
          <target state="new">![][8]</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When setting the options for your new project, make sure to use the same <bpt id="p1">**</bpt>Product Name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Organization Identifier<ept id="p2">**</ept> that you used when you previously set the bundle ID on the Apple Developer portal.</source>
          <target state="new">When setting the options for your new project, make sure to use the same <bpt id="p1">**</bpt>Product Name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Organization Identifier<ept id="p2">**</ept> that you used when you previously set the bundle ID on the Apple Developer portal.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>![][11]</source>
          <target state="new">![][11]</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Targets<ept id="p1">**</ept>, click your project name, click the <bpt id="p2">**</bpt>Build Settings<ept id="p2">**</ept> tab and expand <bpt id="p3">**</bpt>Code Signing Identity<ept id="p3">**</ept>, and then under <bpt id="p4">**</bpt>Debug<ept id="p4">**</ept>, set your code-signing identity.</source>
          <target state="new">Under <bpt id="p1">**</bpt>Targets<ept id="p1">**</ept>, click your project name, click the <bpt id="p2">**</bpt>Build Settings<ept id="p2">**</ept> tab and expand <bpt id="p3">**</bpt>Code Signing Identity<ept id="p3">**</ept>, and then under <bpt id="p4">**</bpt>Debug<ept id="p4">**</ept>, set your code-signing identity.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Toggle <bpt id="p1">**</bpt>Levels<ept id="p1">**</ept> from <bpt id="p2">**</bpt>Basic<ept id="p2">**</ept> to <bpt id="p3">**</bpt>All<ept id="p3">**</ept>, and set <bpt id="p4">**</bpt>Provisioning Profile<ept id="p4">**</ept> to the provisioning profile that you created previously.</source>
          <target state="new">Toggle <bpt id="p1">**</bpt>Levels<ept id="p1">**</ept> from <bpt id="p2">**</bpt>Basic<ept id="p2">**</ept> to <bpt id="p3">**</bpt>All<ept id="p3">**</ept>, and set <bpt id="p4">**</bpt>Provisioning Profile<ept id="p4">**</ept> to the provisioning profile that you created previously.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you don't see the new provisioning profile that you created in Xcode, try refreshing the profiles for your signing identity.</source>
          <target state="new">If you don't see the new provisioning profile that you created in Xcode, try refreshing the profiles for your signing identity.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Xcode<ept id="p1">**</ept> on the menu bar, click <bpt id="p2">**</bpt>Preferences<ept id="p2">**</ept>, click the <bpt id="p3">**</bpt>Account<ept id="p3">**</ept> tab, click the <bpt id="p4">**</bpt>View Details<ept id="p4">**</ept> button, click your signing identity, and then click the refresh button in the bottom-right corner.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Xcode<ept id="p1">**</ept> on the menu bar, click <bpt id="p2">**</bpt>Preferences<ept id="p2">**</ept>, click the <bpt id="p3">**</bpt>Account<ept id="p3">**</ept> tab, click the <bpt id="p4">**</bpt>View Details<ept id="p4">**</ept> button, click your signing identity, and then click the refresh button in the bottom-right corner.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>![][9]</source>
          <target state="new">![][9]</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Download version 1.2.4 of the <bpt id="p1">[</bpt><ept id="p1">Mobile Services iOS SDK]</ept> and unzip the file.</source>
          <target state="new">Download version 1.2.4 of the <bpt id="p1">[</bpt><ept id="p1">Mobile Services iOS SDK]</ept> and unzip the file.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In Xcode, right-click your project and click the <bpt id="p1">**</bpt>Add Files to<ept id="p1">**</ept> option to add the <bpt id="p2">**</bpt>WindowsAzureMessaging.framework<ept id="p2">**</ept> folder to your Xcode project.</source>
          <target state="new">In Xcode, right-click your project and click the <bpt id="p1">**</bpt>Add Files to<ept id="p1">**</ept> option to add the <bpt id="p2">**</bpt>WindowsAzureMessaging.framework<ept id="p2">**</ept> folder to your Xcode project.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Copy items if needed<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Copy items if needed<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>![][10]</source>
          <target state="new">![][10]</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Open your AppDelegate.h file add the following import directive:</source>
          <target state="new">Open your AppDelegate.h file add the following import directive:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In your AppDelegate.m file, add the following code in the <ph id="ph1">`didFinishLaunchingWithOptions`</ph> method based on your version of iOS.</source>
          <target state="new">In your AppDelegate.m file, add the following code in the <ph id="ph1">`didFinishLaunchingWithOptions`</ph> method based on your version of iOS.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This code registers your device handle with APNs:</source>
          <target state="new">This code registers your device handle with APNs:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For iOS 8:</source>
          <target state="new">For iOS 8:</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For iOS versions prior to 8:</source>
          <target state="new">For iOS versions prior to 8:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In the same file, add the following methods and replace the string literal placeholders with your <bpt id="p1">*</bpt>hub name<ept id="p1">*</ept> and the <bpt id="p2">*</bpt>DefaultListenSharedAccessSignature<ept id="p2">*</ept> that you noted earlier.</source>
          <target state="new">In the same file, add the following methods and replace the string literal placeholders with your <bpt id="p1">*</bpt>hub name<ept id="p1">*</ept> and the <bpt id="p2">*</bpt>DefaultListenSharedAccessSignature<ept id="p2">*</ept> that you noted earlier.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This code gives the device token to the notification hub so that the notification hub can send notifications:</source>
          <target state="new">This code gives the device token to the notification hub so that the notification hub can send notifications:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the same file, add the following method to display a <bpt id="p1">**</bpt>UIAlert<ept id="p1">**</ept> if the notification is received while the app is active:</source>
          <target state="new">In the same file, add the following method to display a <bpt id="p1">**</bpt>UIAlert<ept id="p1">**</ept> if the notification is received while the app is active:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Build and run the app on your device to verify that there are no failures.</source>
          <target state="new">Build and run the app on your device to verify that there are no failures.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Send notifications</source>
          <target state="new">Send notifications</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can test receiving notifications in your app by sending notifications in the Azure portal via the debug tab on the notification hub, as shown in the screen below.</source>
          <target state="new">You can test receiving notifications in your app by sending notifications in the Azure portal via the debug tab on the notification hub, as shown in the screen below.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>![][30]</source>
          <target state="new">![][30]</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>![][31]</source>
          <target state="new">![][31]</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In Xcode, open Main.storyboard and add the following UI components from the object library to allow the user to send push notifications in the app:</source>
          <target state="new">In Xcode, open Main.storyboard and add the following UI components from the object library to allow the user to send push notifications in the app:</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A label with no label text.</source>
          <target state="new">A label with no label text.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It will be used to report errors in sending notifications.</source>
          <target state="new">It will be used to report errors in sending notifications.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Lines<ept id="p1">**</ept> property should be set to <bpt id="p2">**</bpt>0<ept id="p2">**</ept> so that it will automatically size constrained to the right and left margins and the top of the view.</source>
          <target state="new">The <bpt id="p1">**</bpt>Lines<ept id="p1">**</ept> property should be set to <bpt id="p2">**</bpt>0<ept id="p2">**</ept> so that it will automatically size constrained to the right and left margins and the top of the view.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A text field with <bpt id="p1">**</bpt>Placeholder<ept id="p1">**</ept> text set to <bpt id="p2">**</bpt>Enter Notification Message<ept id="p2">**</ept>.</source>
          <target state="new">A text field with <bpt id="p1">**</bpt>Placeholder<ept id="p1">**</ept> text set to <bpt id="p2">**</bpt>Enter Notification Message<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Constrain the field just below the label as shown below.</source>
          <target state="new">Constrain the field just below the label as shown below.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Set the View Controller as the outlet delegate.</source>
          <target state="new">Set the View Controller as the outlet delegate.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A button titled <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> constrained just below the text field and in the horizontal center.</source>
          <target state="new">A button titled <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> constrained just below the text field and in the horizontal center.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The view should look as follows:</source>
          <target state="new">The view should look as follows:</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>![][32]</source>
          <target state="new">![][32]</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Open your ViewController.h file and add the following <ph id="ph1">`#import`</ph> and <ph id="ph2">`#define`</ph> statements.</source>
          <target state="new">Open your ViewController.h file and add the following <ph id="ph1">`#import`</ph> and <ph id="ph2">`#define`</ph> statements.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Replace the placeholder string literal with your actual <bpt id="p1">*</bpt>DefaultFullSharedAccessSignature<ept id="p1">*</ept> connection string and <bpt id="p2">*</bpt>hub name<ept id="p2">*</ept>.</source>
          <target state="new">Replace the placeholder string literal with your actual <bpt id="p1">*</bpt>DefaultFullSharedAccessSignature<ept id="p1">*</ept> connection string and <bpt id="p2">*</bpt>hub name<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Add outlets for the label and text field connected your view, and update your <ph id="ph1">`interface`</ph> definition to support <ph id="ph2">`UITextFieldDelegate`</ph> and <ph id="ph3">`NSXMLParserDelegate`</ph>.</source>
          <target state="new">Add outlets for the label and text field connected your view, and update your <ph id="ph1">`interface`</ph> definition to support <ph id="ph2">`UITextFieldDelegate`</ph> and <ph id="ph3">`NSXMLParserDelegate`</ph>.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Add the three property declarations shown below to help support calling the REST API and parsing the response.</source>
          <target state="new">Add the three property declarations shown below to help support calling the REST API and parsing the response.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Your ViewController.h file should look as follows:</source>
          <target state="new">Your ViewController.h file should look as follows:</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Open ViewController.m and add the following code to parse your <bpt id="p1">*</bpt>DefaultFullSharedAccessSignature<ept id="p1">*</ept> connection string.</source>
          <target state="new">Open ViewController.m and add the following code to parse your <bpt id="p1">*</bpt>DefaultFullSharedAccessSignature<ept id="p1">*</ept> connection string.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>As mentioned in the <bpt id="p1">[</bpt>REST API reference<ept id="p1">](http://msdn.microsoft.com/library/azure/dn495627.aspx)</ept>, this parsed information will be used to generate a SaS token for the <bpt id="p2">**</bpt>Authorization<ept id="p2">**</ept> request header.</source>
          <target state="new">As mentioned in the <bpt id="p1">[</bpt>REST API reference<ept id="p1">](http://msdn.microsoft.com/library/azure/dn495627.aspx)</ept>, this parsed information will be used to generate a SaS token for the <bpt id="p2">**</bpt>Authorization<ept id="p2">**</ept> request header.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In ViewController.m, update the <ph id="ph1">`viewDidLoad`</ph> method to parse the connection string when the view loads.</source>
          <target state="new">In ViewController.m, update the <ph id="ph1">`viewDidLoad`</ph> method to parse the connection string when the view loads.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Also add the utility methods shown below.</source>
          <target state="new">Also add the utility methods shown below.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In ViewController.m, add the following code to generate the SaS authorization token that will be provided in the <bpt id="p1">**</bpt>Authorization<ept id="p1">**</ept> header, as mentioned in the <bpt id="p2">[</bpt>REST API Reference<ept id="p2">](http://msdn.microsoft.com/library/azure/dn495627.aspx)</ept>.</source>
          <target state="new">In ViewController.m, add the following code to generate the SaS authorization token that will be provided in the <bpt id="p1">**</bpt>Authorization<ept id="p1">**</ept> header, as mentioned in the <bpt id="p2">[</bpt>REST API Reference<ept id="p2">](http://msdn.microsoft.com/library/azure/dn495627.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Ctrl+drag from the <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> button to ViewController.m to add an action for the <bpt id="p2">**</bpt>Touch Down<ept id="p2">**</ept> event that executes the REST API call by using the following code.</source>
          <target state="new">Ctrl+drag from the <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> button to ViewController.m to add an action for the <bpt id="p2">**</bpt>Touch Down<ept id="p2">**</ept> event that executes the REST API call by using the following code.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In ViewController.m, add the following delegate method to support closing the keyboard for the text field.</source>
          <target state="new">In ViewController.m, add the following delegate method to support closing the keyboard for the text field.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Ctrl+drag from the text field to the View Controller icon in the interface designer to set the view controller as the outlet delegate.</source>
          <target state="new">Ctrl+drag from the text field to the View Controller icon in the interface designer to set the view controller as the outlet delegate.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>In ViewController.m, add the following delegate methods to support parsing the response by using <ph id="ph1">`NSXMLParser`</ph>.</source>
          <target state="new">In ViewController.m, add the following delegate methods to support parsing the response by using <ph id="ph1">`NSXMLParser`</ph>.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Build the project and verify that there are no errors.</source>
          <target state="new">Build the project and verify that there are no errors.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can find all the possible notification payloads in the Apple <bpt id="p1">[</bpt><ept id="p1">Local and Push Notification Programming Guide]</ept>.</source>
          <target state="new">You can find all the possible notification payloads in the Apple <bpt id="p1">[</bpt><ept id="p1">Local and Push Notification Programming Guide]</ept>.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Test your app</source>
          <target state="new">Test your app</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To test push notifications on iOS, you must deploy the app to a device.</source>
          <target state="new">To test push notifications on iOS, you must deploy the app to a device.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You cannot send Apple push notifications by using the iOS Simulator.</source>
          <target state="new">You cannot send Apple push notifications by using the iOS Simulator.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Run the app and verify that registration succeeds, and then press <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">Run the app and verify that registration succeeds, and then press <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>![][33]</source>
          <target state="new">![][33]</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Touch inside the text field to enter a notification message.</source>
          <target state="new">Touch inside the text field to enter a notification message.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Then press the <bpt id="p1">**</bpt>Send<ept id="p1">**</ept> button on the keyboard or the <bpt id="p2">**</bpt>Send Notification<ept id="p2">**</ept> button in the view to send the notification message.</source>
          <target state="new">Then press the <bpt id="p1">**</bpt>Send<ept id="p1">**</ept> button on the keyboard or the <bpt id="p2">**</bpt>Send Notification<ept id="p2">**</ept> button in the view to send the notification message.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>![][34]</source>
          <target state="new">![][34]</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The notification is sent to all devices that are registered to receive the notification.</source>
          <target state="new">The notification is sent to all devices that are registered to receive the notification.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>![][35]</source>
          <target state="new">![][35]</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If you have any problems or recommendations for improving this tutorial for all readers, please leave us a comment in the Disqus section below.</source>
          <target state="new">If you have any problems or recommendations for improving this tutorial for all readers, please leave us a comment in the Disqus section below.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>In this simple example, you broadcasted notifications to all your iOS devices.</source>
          <target state="new">In this simple example, you broadcasted notifications to all your iOS devices.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In order to target specific users, refer to the tutorial <bpt id="p1">[</bpt><ept id="p1">Use Notification Hubs to push notifications to users]</ept>.</source>
          <target state="new">In order to target specific users, refer to the tutorial <bpt id="p1">[</bpt><ept id="p1">Use Notification Hubs to push notifications to users]</ept>.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you want to segment your users by interest groups, you can read <bpt id="p1">[</bpt><ept id="p1">Use Notification Hubs to send breaking news]</ept>.</source>
          <target state="new">If you want to segment your users by interest groups, you can read <bpt id="p1">[</bpt><ept id="p1">Use Notification Hubs to send breaking news]</ept>.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Learn more about how to use Notification Hubs in <bpt id="p1">[</bpt><ept id="p1">Notification Hubs Guidance]</ept>.</source>
          <target state="new">Learn more about how to use Notification Hubs in <bpt id="p1">[</bpt><ept id="p1">Notification Hubs Guidance]</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">adf44be3fb8c3cc55672d4cbb2b3fc075978b501</xliffext:olfilehash>
  </header>
</xliff>