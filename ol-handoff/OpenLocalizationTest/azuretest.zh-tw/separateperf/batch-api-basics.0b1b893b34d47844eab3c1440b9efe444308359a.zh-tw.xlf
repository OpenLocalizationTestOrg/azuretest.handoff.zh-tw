<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>API basics for Azure Batch</source>
          <target state="new">API basics for Azure Batch</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Concepts to introduce developers to the Azure Batch APIs and Batch service</source>
          <target state="new">Concepts to introduce developers to the Azure Batch APIs and Batch service</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> 
#</ph> API basics for Azure Batch

The Azure Batch service provides a job scheduling framework for scalable and distributed computation.</source>
          <target state="new"><ph id="ph1"> 
#</ph> API basics for Azure Batch

The Azure Batch service provides a job scheduling framework for scalable and distributed computation.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Batch service maintains a set of virtual machines that are located across different clusters and data centers in Azure.</source>
          <target state="new">The Batch service maintains a set of virtual machines that are located across different clusters and data centers in Azure.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Batch service accomplishes distributed computation by running one or more programs either on-demand or scheduled to run at a specific time on a specified collection of these nodes.</source>
          <target state="new">The Batch service accomplishes distributed computation by running one or more programs either on-demand or scheduled to run at a specific time on a specified collection of these nodes.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The Batch service manages these nodes to run your computation tasks according to the resource requirements, specifications, and constraints provided by you.</source>
          <target state="new">The Batch service manages these nodes to run your computation tasks according to the resource requirements, specifications, and constraints provided by you.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>By using the Batch service, you can eliminate the need to write code for queuing, scheduling, allocating, and managing compute resources.</source>
          <target state="new">By using the Batch service, you can eliminate the need to write code for queuing, scheduling, allocating, and managing compute resources.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This enables you to focus on the specific application and not have to worry about the complexity of job scheduling and resource management in the underlying platform.</source>
          <target state="new">This enables you to focus on the specific application and not have to worry about the complexity of job scheduling and resource management in the underlying platform.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This also enables the Batch service to optimize the location of these jobs as well as their access to the data they need to process.</source>
          <target state="new">This also enables the Batch service to optimize the location of these jobs as well as their access to the data they need to process.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following are some of the scenarios that you can enable by using the Batch service:

- Computationally intensive parallel processing

- Daily cleanup of files

- Batch processing

<ph id="ph1">## &lt;a name="resource"&gt;&lt;/a&gt;</ph> Resources of the Batch service

When you use the Batch service, you take advantage of the following resources:

<bpt id="p1">- [</bpt><ept id="p1">Account](#account)</ept><bpt id="p2">

- [</bpt><ept id="p2">Compute Node](#computenode)</ept><bpt id="p3">

- [</bpt><ept id="p3">Pool](#pool)</ept><bpt id="p4">

- [</bpt><ept id="p4">Job](#job)</ept><bpt id="p5">

- [</bpt><ept id="p5">Task](#task)</ept><bpt id="p6">

    - [</bpt><ept id="p6">Start Task](#starttask)</ept><bpt id="p7">
    
    - [</bpt><ept id="p7">Job ManagerTask](#jobmanagertask)</ept><bpt id="p8">

- [</bpt><ept id="p8">JobSchedule](#jobschedule)</ept><ph id="ph2">

### &lt;a name="account"&gt;&lt;/a&gt;</ph>Account

A Batch account is a uniquely identified entity within the Batch service.</source>
          <target state="new">The following are some of the scenarios that you can enable by using the Batch service:

- Computationally intensive parallel processing

- Daily cleanup of files

- Batch processing

<ph id="ph1">## &lt;a name="resource"&gt;&lt;/a&gt;</ph> Resources of the Batch service

When you use the Batch service, you take advantage of the following resources:

<bpt id="p1">- [</bpt><ept id="p1">Account](#account)</ept><bpt id="p2">

- [</bpt><ept id="p2">Compute Node](#computenode)</ept><bpt id="p3">

- [</bpt><ept id="p3">Pool](#pool)</ept><bpt id="p4">

- [</bpt><ept id="p4">Job](#job)</ept><bpt id="p5">

- [</bpt><ept id="p5">Task](#task)</ept><bpt id="p6">

    - [</bpt><ept id="p6">Start Task](#starttask)</ept><bpt id="p7">
    
    - [</bpt><ept id="p7">Job ManagerTask](#jobmanagertask)</ept><bpt id="p8">

- [</bpt><ept id="p8">JobSchedule](#jobschedule)</ept><ph id="ph2">

### &lt;a name="account"&gt;&lt;/a&gt;</ph>Account

A Batch account is a uniquely identified entity within the Batch service.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All processing is done through a Batch account.</source>
          <target state="new">All processing is done through a Batch account.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you perform operations with the Batch service, you need the name of the account and the key for the account.</source>
          <target state="new">When you perform operations with the Batch service, you need the name of the account and the key for the account.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To create a batch account, refer to Batch account section of [Azure Batch overview][].</source>
          <target state="new">To create a batch account, refer to Batch account section of [Azure Batch overview][].</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">### &lt;a name="computenode"&gt;&lt;/a&gt;</ph>Compute Node

A compute node (Node) is an Azure node that is dedicated to a specific workload for your application.</source>
          <target state="new"><ph id="ph1">### &lt;a name="computenode"&gt;&lt;/a&gt;</ph>Compute Node

A compute node (Node) is an Azure node that is dedicated to a specific workload for your application.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The size of a Node determines the number of CPU cores, the memory capacity, and the local file system size that is allocated to the Node.</source>
          <target state="new">The size of a Node determines the number of CPU cores, the memory capacity, and the local file system size that is allocated to the Node.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A Node can be a small, large, or extralarge virtual machine as described in <bpt id="p1">[</bpt><ept id="p1">Virtual Machine and Cloud Service Sizes for Azure](http://msdn.microsoft.com/library/dn197896.aspx)</ept>.</source>
          <target state="new">A Node can be a small, large, or extralarge virtual machine as described in <bpt id="p1">[</bpt><ept id="p1">Virtual Machine and Cloud Service Sizes for Azure](http://msdn.microsoft.com/library/dn197896.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The types of programs that a Node can run include executable files (.exe), command files (.cmd), batch files (.bat), and script files.</source>
          <target state="new">The types of programs that a Node can run include executable files (.exe), command files (.cmd), batch files (.bat), and script files.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A Node also has the following attributes:

- File system folders that are both task-specific and shared.</source>
          <target state="new">A Node also has the following attributes:

- File system folders that are both task-specific and shared.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A folder structure and environment variables are created on each pool node.</source>
          <target state="new">A folder structure and environment variables are created on each pool node.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following folder structure is created with a “shared” folder for applications and data shared between tasks, plus a folder for each task.</source>
          <target state="new">The following folder structure is created with a “shared” folder for applications and data shared between tasks, plus a folder for each task.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">


-</ph> Stdout.txt and stderr.txt files that are written to a task-specific folder

- Environment variables for processing

- Firewall settings that are configured to control access

&gt;Node Access
&gt;
&gt;If access to a node is required, for debugging for example, the RDP file can be obtained which can then be used to access the node via remote desktop.</source>
          <target state="new"><ph id="ph1">


-</ph> Stdout.txt and stderr.txt files that are written to a task-specific folder

- Environment variables for processing

- Firewall settings that are configured to control access

&gt;Node Access
&gt;
&gt;If access to a node is required, for debugging for example, the RDP file can be obtained which can then be used to access the node via remote desktop.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">### &lt;a name="pool"&gt;&lt;/a&gt;</ph>Pool

A pool is a collection of Nodes on which your application runs.</source>
          <target state="new"><ph id="ph1">### &lt;a name="pool"&gt;&lt;/a&gt;</ph>Pool

A pool is a collection of Nodes on which your application runs.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The pool can be created by you, or the Batch service automatically creates the pool when you specify the work to be accomplished.</source>
          <target state="new">The pool can be created by you, or the Batch service automatically creates the pool when you specify the work to be accomplished.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can create and manage a pool that meets the needs of your application.</source>
          <target state="new">You can create and manage a pool that meets the needs of your application.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A pool can only be used by the Batch account in which it was created.</source>
          <target state="new">A pool can only be used by the Batch account in which it was created.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A Batch account can have more than one pool.</source>
          <target state="new">A Batch account can have more than one pool.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Azure Batch pools build on top of the core Azure compute platform; Batch pools provide large-scale allocation, application &amp; data installation, data movement, health monitoring, and flexible scaling of nodes.</source>
          <target state="new">Azure Batch pools build on top of the core Azure compute platform; Batch pools provide large-scale allocation, application &amp; data installation, data movement, health monitoring, and flexible scaling of nodes.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Every Node that is added to a pool is assigned a unique name and an associated IP address.</source>
          <target state="new">Every Node that is added to a pool is assigned a unique name and an associated IP address.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When a Node is removed from a pool, it loses the changes that were made to the operating system, all of its local files, its name, and its IP address.</source>
          <target state="new">When a Node is removed from a pool, it loses the changes that were made to the operating system, all of its local files, its name, and its IP address.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When a Node leaves a pool, its lifetime is over.</source>
          <target state="new">When a Node leaves a pool, its lifetime is over.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can configure a pool to allow communication between Nodes within it.</source>
          <target state="new">You can configure a pool to allow communication between Nodes within it.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If intra-pool communication is requested for a pool, the Batch service enables ports greater than 1100 on each Node in the pool.</source>
          <target state="new">If intra-pool communication is requested for a pool, the Batch service enables ports greater than 1100 on each Node in the pool.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Each Node in the pool is configured to allow and restrict incoming connections to just this port range and only from other Nodes in the pool.</source>
          <target state="new">Each Node in the pool is configured to allow and restrict incoming connections to just this port range and only from other Nodes in the pool.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If your application does not require communication between Nodes, the Batch service can potentially allocate a large number of Nodes across different clusters or data centers to the pool to enable more parallel processing.</source>
          <target state="new">If your application does not require communication between Nodes, the Batch service can potentially allocate a large number of Nodes across different clusters or data centers to the pool to enable more parallel processing.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you create a pool, you can specify the following attributes:

- The <bpt id="p1">**</bpt>size of nodes<ept id="p1">**</ept> in the pool.</source>
          <target state="new">When you create a pool, you can specify the following attributes:

- The <bpt id="p1">**</bpt>size of nodes<ept id="p1">**</ept> in the pool.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>- The appropriate node size needs to be chosen, depending on the characteristics and requirements of the application or applications that are going to be used on the node.</source>
          <target state="new">- The appropriate node size needs to be chosen, depending on the characteristics and requirements of the application or applications that are going to be used on the node.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Normally the node size will be picked assuming one task will be run at once on the node; for example, whether the application is multi threaded and how much memory it requires will determine the most suitable and cost-effective node size.</source>
          <target state="new">Normally the node size will be picked assuming one task will be run at once on the node; for example, whether the application is multi threaded and how much memory it requires will determine the most suitable and cost-effective node size.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It is possible to have multiple tasks assigned and multiple application instances being run in parallel, in which case a larger node will usually be chosen – see below on “maximum tasks per node”.</source>
          <target state="new">It is possible to have multiple tasks assigned and multiple application instances being run in parallel, in which case a larger node will usually be chosen – see below on “maximum tasks per node”.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>- All the nodes in a pool have to be the same size.</source>
          <target state="new">- All the nodes in a pool have to be the same size.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If different applications are to be run with different system requirements and/or with different load then separate pools should be created.</source>
          <target state="new">If different applications are to be run with different system requirements and/or with different load then separate pools should be created.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>- All cloud service node sizes can be configured for a pool, except for A0.</source>
          <target state="new">- All cloud service node sizes can be configured for a pool, except for A0.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>- The operating system family and version that runs on the nodes.</source>
          <target state="new">- The operating system family and version that runs on the nodes.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>- As with worker roles, the OS Family and OS Version can be configured.</source>
          <target state="new">- As with worker roles, the OS Family and OS Version can be configured.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>- The OS Family also determines which versions of .NET are installed with the OS.</source>
          <target state="new">- The OS Family also determines which versions of .NET are installed with the OS.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>- As with worker roles, for the OS Version it is recommended that “*” be used so that the nodes are automatically upgraded and there is no work required to cater for new versions.</source>
          <target state="new">- As with worker roles, for the OS Version it is recommended that “*” be used so that the nodes are automatically upgraded and there is no work required to cater for new versions.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The main use case for picking a specific OS version is to ensure application compatibility is maintained, by allowing backward compatibility testing to be performed before allowing the version to be updated.</source>
          <target state="new">The main use case for picking a specific OS version is to ensure application compatibility is maintained, by allowing backward compatibility testing to be performed before allowing the version to be updated.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Once validated, the OS version for the pool can be updated and the new OS image installed – any running task will be interrupted and re-queued.</source>
          <target state="new">Once validated, the OS version for the pool can be updated and the new OS image installed – any running task will be interrupted and re-queued.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>- The target number of nodes that should be available for the pool.</source>
          <target state="new">- The target number of nodes that should be available for the pool.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>- The scaling policy for the pool.</source>
          <target state="new">- The scaling policy for the pool.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Besides number of nodes, you can also specify a auto-scaling formula for each pool.</source>
          <target state="new">Besides number of nodes, you can also specify a auto-scaling formula for each pool.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Batch service will execute the formula to adjust number of node based on pool and workitem statistics.</source>
          <target state="new">Batch service will execute the formula to adjust number of node based on pool and workitem statistics.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>- Scheduling configuration
    - The default configuration is for one task to be run at any time on a pool node, but there are scenarios where it is beneficial to have more than one task be able to run at the same time on a node.</source>
          <target state="new">- Scheduling configuration
    - The default configuration is for one task to be run at any time on a pool node, but there are scenarios where it is beneficial to have more than one task be able to run at the same time on a node.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>One example is to increase node utilization if an application has to wait for I/O; having more than one application execute will increase CPU utilization.</source>
          <target state="new">One example is to increase node utilization if an application has to wait for I/O; having more than one application execute will increase CPU utilization.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Another example is to reduce the number of nodes in the pool; this could reduce the amount of data copies required for large reference data sets.</source>
          <target state="new">Another example is to reduce the number of nodes in the pool; this could reduce the amount of data copies required for large reference data sets.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If an A1 would the correct size for the application, then an A4 could be chosen and the configuration set to run up to 8 tasks at once, each consuming a core.</source>
          <target state="new">If an A1 would the correct size for the application, then an A4 could be chosen and the configuration set to run up to 8 tasks at once, each consuming a core.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>- The “max tasks per node” configuration determines the maximum number of tasks that can be run in parallel.</source>
          <target state="new">- The “max tasks per node” configuration determines the maximum number of tasks that can be run in parallel.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>- A “fill policy” can also be specified which determines whether Batch fills nodes first or whether tasks are spread out over all the nodes.</source>
          <target state="new">- A “fill policy” can also be specified which determines whether Batch fills nodes first or whether tasks are spread out over all the nodes.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>- The communication status of the nodes in the pool.</source>
          <target state="new">- The communication status of the nodes in the pool.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>- In a large proportion of scenarios tasks operate independently and do not need to communicate with other tasks, but there are some applications where tasks will communicate (e.g. applications using MPI).</source>
          <target state="new">- In a large proportion of scenarios tasks operate independently and do not need to communicate with other tasks, but there are some applications where tasks will communicate (e.g. applications using MPI).</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>- There is configuration that controls whether the nodes will be able to communicate, which is used to configure the underlying network infrastructure and impacts placement of the nodes.</source>
          <target state="new">- There is configuration that controls whether the nodes will be able to communicate, which is used to configure the underlying network infrastructure and impacts placement of the nodes.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>- The start task for Nodes in the pool.</source>
          <target state="new">- The start task for Nodes in the pool.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When you create a pool, you can specify the storage account with which the pool should be associated.</source>
          <target state="new">When you create a pool, you can specify the storage account with which the pool should be associated.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Batch service allocates Nodes from the data centers with better network connectivity and bandwidth capacity to the specified storage account.</source>
          <target state="new">The Batch service allocates Nodes from the data centers with better network connectivity and bandwidth capacity to the specified storage account.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This enabled workloads to access data more effectively.</source>
          <target state="new">This enabled workloads to access data more effectively.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">### &lt;a name="job"&gt;&lt;/a&gt;</ph>Job

A job is a collection of tasks.</source>
          <target state="new"><ph id="ph1">### &lt;a name="job"&gt;&lt;/a&gt;</ph>Job

A job is a collection of tasks.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It also specifies how computation is performed on compute nodes in a pool.</source>
          <target state="new">It also specifies how computation is performed on compute nodes in a pool.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>- The job specifies the pool on which the work will be run.</source>
          <target state="new">- The job specifies the pool on which the work will be run.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The pool can be an existing, already created pool that is used by many jobs, but a pool can alternatively be created for each job associated with a job schedule or for all jobs associated with a job schedule.</source>
          <target state="new">The pool can be an existing, already created pool that is used by many jobs, but a pool can alternatively be created for each job associated with a job schedule or for all jobs associated with a job schedule.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>- An optional priority can be specified.</source>
          <target state="new">- An optional priority can be specified.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When a job is submitted with a higher-priority than other jobs still in progress, then the higher priority job tasks get inserted into the queue ahead of the lower priority job tasks.</source>
          <target state="new">When a job is submitted with a higher-priority than other jobs still in progress, then the higher priority job tasks get inserted into the queue ahead of the lower priority job tasks.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Lower-priority tasks that are already running will not be pre-empted.</source>
          <target state="new">Lower-priority tasks that are already running will not be pre-empted.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>- Constraints.</source>
          <target state="new">- Constraints.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>- A maximum wallclock time can be set for the jobs.</source>
          <target state="new">- A maximum wallclock time can be set for the jobs.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If the jobs runs for longer than the maximum wallclock time specified, then the job and all associated tasks will be ended.</source>
          <target state="new">If the jobs runs for longer than the maximum wallclock time specified, then the job and all associated tasks will be ended.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>- Azure Batch can detect tasks that fail and retry the tasks.</source>
          <target state="new">- Azure Batch can detect tasks that fail and retry the tasks.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default maximum number of task retries can be specified as a constraint, including specifying that a task is always retried or never retried.</source>
          <target state="new">The default maximum number of task retries can be specified as a constraint, including specifying that a task is always retried or never retried.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Retrying a tasks means that the task is re-queued and will be run again.</source>
          <target state="new">Retrying a tasks means that the task is re-queued and will be run again.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>- Tasks to be executed for the job can be added by the client to the job, but a Job Manager task can alternatively be specified.</source>
          <target state="new">- Tasks to be executed for the job can be added by the client to the job, but a Job Manager task can alternatively be specified.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A job manager task uses the Batch API and contains the code to create the required tasks for a job with the task being run on one of the pool nodes.</source>
          <target state="new">A job manager task uses the Batch API and contains the code to create the required tasks for a job with the task being run on one of the pool nodes.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The job manager tasks is handled specifically by Batch – it is queued as soon as the job is created and is restarted if it fails for any reason.</source>
          <target state="new">The job manager tasks is handled specifically by Batch – it is queued as soon as the job is created and is restarted if it fails for any reason.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A Job Manager is required for job created by job schedule as it is the only way to define the tasks before job is instantiated.</source>
          <target state="new">A Job Manager is required for job created by job schedule as it is the only way to define the tasks before job is instantiated.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">### &lt;a name="task"&gt;&lt;/a&gt;</ph>Task

A task is a unit of computation that is associated with a job and runs on a Node.</source>
          <target state="new"><ph id="ph1">### &lt;a name="task"&gt;&lt;/a&gt;</ph>Task

A task is a unit of computation that is associated with a job and runs on a Node.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Tasks are assigned to a node for execution or are queued until a node becomes free.</source>
          <target state="new">Tasks are assigned to a node for execution or are queued until a node becomes free.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A task uses the following resources:

- The program that was specified in the workitem.</source>
          <target state="new">A task uses the following resources:

- The program that was specified in the workitem.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>- The resource files that contain the data to be processed.</source>
          <target state="new">- The resource files that contain the data to be processed.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>These files are automatically copied to the Node from blob storage.</source>
          <target state="new">These files are automatically copied to the Node from blob storage.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information, see Files and directories.</source>
          <target state="new">For more information, see Files and directories.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>- The environment settings that are needed by the program.</source>
          <target state="new">- The environment settings that are needed by the program.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For more information, see Environment settings for tasks.</source>
          <target state="new">For more information, see Environment settings for tasks.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>- The constraints in which the computation should occur.</source>
          <target state="new">- The constraints in which the computation should occur.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For example, the maximum time in which the task is allowed to run, the maximum number of times that a task should be tried again if it fails to run, and the maximum time that files in the working directory are retained.</source>
          <target state="new">For example, the maximum time in which the task is allowed to run, the maximum number of times that a task should be tried again if it fails to run, and the maximum time that files in the working directory are retained.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In addition to tasks that you can define to perform computation on a Node, you can use the following special tasks provided by the Batch service:

<bpt id="p1">- [</bpt><ept id="p1">Start task](#starttask)</ept><bpt id="p2">

- [</bpt><ept id="p2">Job manager task](#jobmanagertask)</ept><ph id="ph1">

#### &lt;a name="starttask"&gt;&lt;/a&gt;</ph>Start task

You can configure the operating system of nodes in a pool by associating a start task with the pool.</source>
          <target state="new">In addition to tasks that you can define to perform computation on a Node, you can use the following special tasks provided by the Batch service:

<bpt id="p1">- [</bpt><ept id="p1">Start task](#starttask)</ept><bpt id="p2">

- [</bpt><ept id="p2">Job manager task](#jobmanagertask)</ept><ph id="ph1">

#### &lt;a name="starttask"&gt;&lt;/a&gt;</ph>Start task

You can configure the operating system of nodes in a pool by associating a start task with the pool.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Installing software and starting background processes are some of the actions that a start task can perform.</source>
          <target state="new">Installing software and starting background processes are some of the actions that a start task can perform.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The start task runs every time a node starts for as long as it remains in the pool.</source>
          <target state="new">The start task runs every time a node starts for as long as it remains in the pool.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>As with any Batch task a list of files in Azure storage can be specified in addition to a command line that is executed by Batch.</source>
          <target state="new">As with any Batch task a list of files in Azure storage can be specified in addition to a command line that is executed by Batch.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Azure Batch will first copy the files from Azure Storage and then run the command line.</source>
          <target state="new">Azure Batch will first copy the files from Azure Storage and then run the command line.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For a pool start task, the file list usually contains the applications files or package, but it could also include reference data that will be used by all tasks running on the pool nodes.</source>
          <target state="new">For a pool start task, the file list usually contains the applications files or package, but it could also include reference data that will be used by all tasks running on the pool nodes.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The command line could perform any PowerShell script or robocopy, for example, to copy application files to the “shared” folder; it could also run an MSI.</source>
          <target state="new">The command line could perform any PowerShell script or robocopy, for example, to copy application files to the “shared” folder; it could also run an MSI.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Normally it is desirable for Batch to wait for the start task to complete and then consider the node ready to be assigned tasks, but this is configurable.</source>
          <target state="new">Normally it is desirable for Batch to wait for the start task to complete and then consider the node ready to be assigned tasks, but this is configurable.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If a start task fails for a pool node, then the state of the node is updated to reflect the failure and the node will not be available for tasks to be assigned.</source>
          <target state="new">If a start task fails for a pool node, then the state of the node is updated to reflect the failure and the node will not be available for tasks to be assigned.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A start task can fail if there is an issue copying the files specified for the start task or the start task process returns non-zero.</source>
          <target state="new">A start task can fail if there is an issue copying the files specified for the start task or the start task process returns non-zero.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The fact that all the information necessary to configure the nodes and install the applications is declared means that increasing the number of nodes in a pool is as simple as specifying the new required number; Batch has all the information required to configure the nodes and get them ready to accept tasks.</source>
          <target state="new">The fact that all the information necessary to configure the nodes and install the applications is declared means that increasing the number of nodes in a pool is as simple as specifying the new required number; Batch has all the information required to configure the nodes and get them ready to accept tasks.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A start task is defined by adding an JSON section to the request body for the Add Pool operation.</source>
          <target state="new">A start task is defined by adding an JSON section to the request body for the Add Pool operation.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The following example shows a basic definition of a start task:

    {
        “commandLine”:”mypoolsetup.exe”,
        “resourceFiles”:
        [
            {
                “blobSource”:”http://account.blob.core.windows.net/container/myapp1.exe?st=2013-08-09T08%3a49%3a37.0000000Z&amp;se=2013-08-10T08%3a49%3a37.0000000Z&amp;sr=c&amp;sp=d&amp;si=YWJjZGTVMZw%3d%3d&amp;sig= %2bSzBm0wi8xECuGkKw97wnkSZ%2f62sxU%2b6Hq6a7qojIVE%3d”,
                “filePath”:”mypoolsetup.exe”
            },
            {
                “blobSource”:”http://account.blob.core.windows.net/container/myapp2.exe?st=2013-08-09T08%3a49%3a37.0000000Z&amp;se=2013-08-10T08%3a49%3a37.0000000Z&amp;sr=c&amp;sp=d&amp;si=YWJjZGTVMZw%3d%3d&amp;sig= %2bSzBm0wi8xECuGkKw97wnkSZ%2f62sxU%2b6Hq6a7qojIVE%3d”,
                “filePath”:”myapp2.exe”
            }
        ],
        “maxTaskRetryCount”:0
    }

A C# interface looks like this:

    <ph id="ph1">CloudPool pool = pm.CreatePool(poolId, targetDedicated: 3, virtualMachineSize: "small", osFamily: "3");
    pool.StartTask = new StartTask();
    pool.StartTask.CommandLine = "mypoolsetup.exe";
    pool.StartTask.ResourceFiles = new List</ph></source>
          <target state="new">The following example shows a basic definition of a start task:

    {
        “commandLine”:”mypoolsetup.exe”,
        “resourceFiles”:
        [
            {
                “blobSource”:”http://account.blob.core.windows.net/container/myapp1.exe?st=2013-08-09T08%3a49%3a37.0000000Z&amp;se=2013-08-10T08%3a49%3a37.0000000Z&amp;sr=c&amp;sp=d&amp;si=YWJjZGTVMZw%3d%3d&amp;sig= %2bSzBm0wi8xECuGkKw97wnkSZ%2f62sxU%2b6Hq6a7qojIVE%3d”,
                “filePath”:”mypoolsetup.exe”
            },
            {
                “blobSource”:”http://account.blob.core.windows.net/container/myapp2.exe?st=2013-08-09T08%3a49%3a37.0000000Z&amp;se=2013-08-10T08%3a49%3a37.0000000Z&amp;sr=c&amp;sp=d&amp;si=YWJjZGTVMZw%3d%3d&amp;sig= %2bSzBm0wi8xECuGkKw97wnkSZ%2f62sxU%2b6Hq6a7qojIVE%3d”,
                “filePath”:”myapp2.exe”
            }
        ],
        “maxTaskRetryCount”:0
    }

A C# interface looks like this:

    <ph id="ph1">CloudPool pool = pm.CreatePool(poolId, targetDedicated: 3, virtualMachineSize: "small", osFamily: "3");
    pool.StartTask = new StartTask();
    pool.StartTask.CommandLine = "mypoolsetup.exe";
    pool.StartTask.ResourceFiles = new List</ph></target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>pool.StartTask.ResourceFiles.Add(new ResourceFile("http://account.blob.core.windows.net/container/myapp1.exe?st=2013-08-09T08%3a49%3a37.0000000Z&amp;se=2013-08-10T08%3a49%3a37.0000000Z&amp;sr=c&amp;sp=d&amp;si=YWJjZGTVMZw%3d%3d&amp;sig= %2bSzBm0wi8xECuGkKw97wnkSZ%2f62sxU%2b6Hq6a7qojIVE%3d", "mypoolsetup.exe"));</source>
          <target state="new">pool.StartTask.ResourceFiles.Add(new ResourceFile("http://account.blob.core.windows.net/container/myapp1.exe?st=2013-08-09T08%3a49%3a37.0000000Z&amp;se=2013-08-10T08%3a49%3a37.0000000Z&amp;sr=c&amp;sp=d&amp;si=YWJjZGTVMZw%3d%3d&amp;sig= %2bSzBm0wi8xECuGkKw97wnkSZ%2f62sxU%2b6Hq6a7qojIVE%3d", "mypoolsetup.exe"));</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>pool.Commit();


<ph id="ph1">#### &lt;a name="jobmanagertask"&gt;&lt;/a&gt;</ph>Job manager task

A job manager task is started before all other tasks.</source>
          <target state="new">pool.Commit();


<ph id="ph1">#### &lt;a name="jobmanagertask"&gt;&lt;/a&gt;</ph>Job manager task

A job manager task is started before all other tasks.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The job manager task provides the following benefits:

- It is automatically created by the Batch service when the job is created.</source>
          <target state="new">The job manager task provides the following benefits:

- It is automatically created by the Batch service when the job is created.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>- It is scheduled before other tasks in the job.</source>
          <target state="new">- It is scheduled before other tasks in the job.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>- Its associated Node is the last to be removed from a pool when the pool is being downsized.</source>
          <target state="new">- Its associated Node is the last to be removed from a pool when the pool is being downsized.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>- It is given the highest priority when it needs to be restarted.</source>
          <target state="new">- It is given the highest priority when it needs to be restarted.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If an idle Node is not available, the Batch service may terminate one of the running tasks in the pool to make room for it to run.</source>
          <target state="new">If an idle Node is not available, the Batch service may terminate one of the running tasks in the pool to make room for it to run.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>- Its termination can be tied to the termination of all tasks in the job.</source>
          <target state="new">- Its termination can be tied to the termination of all tasks in the job.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A job manager task in a job does not have priority over tasks in other jobs.</source>
          <target state="new">A job manager task in a job does not have priority over tasks in other jobs.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Across jobs, only job level priorities are observed.</source>
          <target state="new">Across jobs, only job level priorities are observed.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A job manager task is defined by adding an XML section to the request body for the Add Workitem operation.</source>
          <target state="new">A job manager task is defined by adding an XML section to the request body for the Add Workitem operation.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The following example shows a basic definition of a job manager task:

    <ph id="ph1">{
        “name”:”jmTask”,
        “commandLine”:”myapp1.exe”,
        “resourceFiles”:
        [
            {
                “blobSource”:”http://account.blob.core.windows.net/container/myapp1.exe?st=2013-08-09T08%3a49%3a37.0000000Z&amp;se=2013-08-10T08%3a49%3a37.0000000Z&amp;sr=c&amp;sp=d&amp;si=YWJjZGTVMZw%3d%3d&amp;sig= %2bSzBm0wi8xECuGkKw97wnkSZ%2f62sxU%2b6Hq6a7qojIVE%3d”,
                “filePath”:”myapp1.exe”
            },
            {
                “blobSource”:”http://account.blob.core.windows.net/container/myapp2.exe?st=2013-08-09T08%3a49%3a37.0000000Z&amp;se=2013-08-10T08%3a49%3a37.0000000Z&amp;sr=c&amp;sp=d&amp;si=YWJjZGTVMZw%3d%3d&amp;sig= %2bSzBm0wi8xECuGkKw97wnkSZ%2f62sxU%2b6Hq6a7qojIVE%3d”,
                “filePath”:”myapp2.exe”
            }
        ],
        “taskConstraints”:
        {
            “maxWallClockTime”:”PT1H”,
            “maxTaskRetryCount”:0,
            “retentionTime”:”PT1H”
        },
        “killJobOnCompletion”:true,
        “runElevated”:false,
        “runExclusive”:true
    }


### &lt;a name="jobschedule"&gt;&lt;/a&gt;</ph>Job Schedule

Job schedule is a way to create multiple jobs with a schedule.</source>
          <target state="new">The following example shows a basic definition of a job manager task:

    <ph id="ph1">{
        “name”:”jmTask”,
        “commandLine”:”myapp1.exe”,
        “resourceFiles”:
        [
            {
                “blobSource”:”http://account.blob.core.windows.net/container/myapp1.exe?st=2013-08-09T08%3a49%3a37.0000000Z&amp;se=2013-08-10T08%3a49%3a37.0000000Z&amp;sr=c&amp;sp=d&amp;si=YWJjZGTVMZw%3d%3d&amp;sig= %2bSzBm0wi8xECuGkKw97wnkSZ%2f62sxU%2b6Hq6a7qojIVE%3d”,
                “filePath”:”myapp1.exe”
            },
            {
                “blobSource”:”http://account.blob.core.windows.net/container/myapp2.exe?st=2013-08-09T08%3a49%3a37.0000000Z&amp;se=2013-08-10T08%3a49%3a37.0000000Z&amp;sr=c&amp;sp=d&amp;si=YWJjZGTVMZw%3d%3d&amp;sig= %2bSzBm0wi8xECuGkKw97wnkSZ%2f62sxU%2b6Hq6a7qojIVE%3d”,
                “filePath”:”myapp2.exe”
            }
        ],
        “taskConstraints”:
        {
            “maxWallClockTime”:”PT1H”,
            “maxTaskRetryCount”:0,
            “retentionTime”:”PT1H”
        },
        “killJobOnCompletion”:true,
        “runElevated”:false,
        “runExclusive”:true
    }


### &lt;a name="jobschedule"&gt;&lt;/a&gt;</ph>Job Schedule

Job schedule is a way to create multiple jobs with a schedule.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When a job schedule is created, one job is created for each occurrence of the schedule.</source>
          <target state="new">When a job schedule is created, one job is created for each occurrence of the schedule.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">## &lt;a name="workflow"&gt;&lt;/a&gt;</ph>Workflow of the Batch service

You need a Batch account to use the Batch service and you use multiple resources of the service to schedule computation.</source>
          <target state="new"><ph id="ph1">## &lt;a name="workflow"&gt;&lt;/a&gt;</ph>Workflow of the Batch service

You need a Batch account to use the Batch service and you use multiple resources of the service to schedule computation.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You use the following basic workflow when you create a distributed computational scenario with the Batch service:

1.Upload the files that you want to use in your distributed computational scenario to an Azure storage account.</source>
          <target state="new">You use the following basic workflow when you create a distributed computational scenario with the Batch service:

1.Upload the files that you want to use in your distributed computational scenario to an Azure storage account.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>These files must be in the storage account so that the Batch service can access them.</source>
          <target state="new">These files must be in the storage account so that the Batch service can access them.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The Batch service loads them onto a Node when the task runs.</source>
          <target state="new">The Batch service loads them onto a Node when the task runs.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>2.Upload the dependent binary files to the storage account.</source>
          <target state="new">2.Upload the dependent binary files to the storage account.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The binary files include the program that is run by the task and the dependent assemblies.</source>
          <target state="new">The binary files include the program that is run by the task and the dependent assemblies.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>These files must also be accessed from storage and are loaded onto the Node.</source>
          <target state="new">These files must also be accessed from storage and are loaded onto the Node.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>3.Create a pool of Nodes.</source>
          <target state="new">3.Create a pool of Nodes.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You can assign the size of the task virtual machine to use when the pool is created.</source>
          <target state="new">You can assign the size of the task virtual machine to use when the pool is created.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>When a task runs, it is assigned a Node from this pool.</source>
          <target state="new">When a task runs, it is assigned a Node from this pool.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>4.Create a workitem.</source>
          <target state="new">4.Create a workitem.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A job is automatically created when you create a workitem.</source>
          <target state="new">A job is automatically created when you create a workitem.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A workitem enables you to manage a job of tasks.</source>
          <target state="new">A workitem enables you to manage a job of tasks.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>5.Add tasks to the workitem.</source>
          <target state="new">5.Add tasks to the workitem.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Each task uses the program that you uploaded to process information from a file that you uploaded.</source>
          <target state="new">Each task uses the program that you uploaded to process information from a file that you uploaded.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>6.Monitor the results of the output.</source>
          <target state="new">6.Monitor the results of the output.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">## &lt;a name="files"&gt;&lt;/a&gt;</ph>Files and directories

Each task has a working directory under which it creates zero or more directories and files for storing the program that is run by a task, the data that is processed by a task, and the output of the processing performed by a task.</source>
          <target state="new"><ph id="ph1">## &lt;a name="files"&gt;&lt;/a&gt;</ph>Files and directories

Each task has a working directory under which it creates zero or more directories and files for storing the program that is run by a task, the data that is processed by a task, and the output of the processing performed by a task.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>These directories and files are then available for use by other tasks during the running of a job.</source>
          <target state="new">These directories and files are then available for use by other tasks during the running of a job.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>All tasks, files, and directories on a Node are owned by a single user account.</source>
          <target state="new">All tasks, files, and directories on a Node are owned by a single user account.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The Batch service exposes a portion of the file system on a Node as the root directory.</source>
          <target state="new">The Batch service exposes a portion of the file system on a Node as the root directory.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The root directory of the Node is available to a task through the AZ\_BATCH\_NODE\_ROOT\_DIR environment variable.</source>
          <target state="new">The root directory of the Node is available to a task through the AZ\_BATCH\_NODE\_ROOT\_DIR environment variable.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For more information about using environment variables, see Environment settings for tasks.</source>
          <target state="new">For more information about using environment variables, see Environment settings for tasks.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The root directory contains the following sub-directories:

<bpt id="p1">- **</bpt>Tasks<ept id="p1">**</ept> – This location is where all of the files are stored that belong to tasks that run on the Node.</source>
          <target state="new">The root directory contains the following sub-directories:

<bpt id="p1">- **</bpt>Tasks<ept id="p1">**</ept> – This location is where all of the files are stored that belong to tasks that run on the Node.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For each task, the Batch service creates a working directory with the unique path in the form of %AZ\_BATCH\_TASK\_ROOT\_DIR%.</source>
          <target state="new">For each task, the Batch service creates a working directory with the unique path in the form of %AZ\_BATCH\_TASK\_ROOT\_DIR%.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>This directory provides Read/Write access to the task.</source>
          <target state="new">This directory provides Read/Write access to the task.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The task can create, read, update, and delete files under this directory, and this directory is retained based on the RetentionTime constraint specified for the task.</source>
          <target state="new">The task can create, read, update, and delete files under this directory, and this directory is retained based on the RetentionTime constraint specified for the task.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">- **</bpt>Shared<ept id="p1">**</ept> – This location is a shared directory for all of the tasks under the account.</source>
          <target state="new"><bpt id="p1">- **</bpt>Shared<ept id="p1">**</ept> – This location is a shared directory for all of the tasks under the account.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>On the Node, the shared directory is at %AZ\_BATCH\_NODE\_SHARED\_DIR%.</source>
          <target state="new">On the Node, the shared directory is at %AZ\_BATCH\_NODE\_SHARED\_DIR%.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This directory provides Read/Write access to the task.</source>
          <target state="new">This directory provides Read/Write access to the task.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The task can create, read, update, and delete files under this directory.</source>
          <target state="new">The task can create, read, update, and delete files under this directory.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">- **</bpt>Start<ept id="p1">**</ept> – This location is used by a start task as its working directory.</source>
          <target state="new"><bpt id="p1">- **</bpt>Start<ept id="p1">**</ept> – This location is used by a start task as its working directory.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>All of the files that are downloaded by the Batch service to launch the start task are also stored under this directory.</source>
          <target state="new">All of the files that are downloaded by the Batch service to launch the start task are also stored under this directory.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>On the Node, the start directory is at %AZ\_BATCH\_NODE\_START\_DIR%.</source>
          <target state="new">On the Node, the start directory is at %AZ\_BATCH\_NODE\_START\_DIR%.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The task can create, read, update, and delete files under this directory, and this directory can be used by start tasks to configure the operating system.</source>
          <target state="new">The task can create, read, update, and delete files under this directory, and this directory can be used by start tasks to configure the operating system.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>When a Node is removed from the pool, all of the files that are stored on the Node are removed.</source>
          <target state="new">When a Node is removed from the pool, all of the files that are stored on the Node are removed.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">## &lt;a name="lifetime"&gt;&lt;/a&gt;</ph>Pool and Node Lifetime

A fundamental design decision is when pools are created and how long nodes are kept available.</source>
          <target state="new"><ph id="ph1">## &lt;a name="lifetime"&gt;&lt;/a&gt;</ph>Pool and Node Lifetime

A fundamental design decision is when pools are created and how long nodes are kept available.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>At one extreme a pool could be created for each job when the job is submitted and the nodes removed as tasks finish execution.</source>
          <target state="new">At one extreme a pool could be created for each job when the job is submitted and the nodes removed as tasks finish execution.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This will maximize utilization as the nodes are only allocated when absolutely needed and shutdown as soon as they become idle.</source>
          <target state="new">This will maximize utilization as the nodes are only allocated when absolutely needed and shutdown as soon as they become idle.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>It does mean that the job must wait for the nodes to be allocated, although it is important to note that tasks will be scheduled to nodes as soon as they are individually available, allocated and the start task has completed; i.e. Batch does NOT wait until all nodes in a pool are available as that would lead to poor utilization.</source>
          <target state="new">It does mean that the job must wait for the nodes to be allocated, although it is important to note that tasks will be scheduled to nodes as soon as they are individually available, allocated and the start task has completed; i.e. Batch does NOT wait until all nodes in a pool are available as that would lead to poor utilization.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>If having jobs start executing immediately is the priority then a pool should be created and nodes available before the job is submitted.</source>
          <target state="new">If having jobs start executing immediately is the priority then a pool should be created and nodes available before the job is submitted.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The tasks can start immediately, but nodes could be idle waiting for job tasks, depending on load.</source>
          <target state="new">The tasks can start immediately, but nodes could be idle waiting for job tasks, depending on load.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>One common pattern for when there is a variable amount of ongoing load is to have a pool to which multiple jobs are submitted, but scale up or down the number of nodes according to load; this could be done reactively or pro-actively if load can be predicted.</source>
          <target state="new">One common pattern for when there is a variable amount of ongoing load is to have a pool to which multiple jobs are submitted, but scale up or down the number of nodes according to load; this could be done reactively or pro-actively if load can be predicted.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">## &lt;a name="scaling"&gt;&lt;/a&gt;</ph>Scaling applications

Your application can easily be automatically scaled up or down to accommodate the computation that you need.</source>
          <target state="new"><ph id="ph1">## &lt;a name="scaling"&gt;&lt;/a&gt;</ph>Scaling applications

Your application can easily be automatically scaled up or down to accommodate the computation that you need.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>You can dynamically adjust the number of Nodes in a pool according to current work load and resource usage statistics.</source>
          <target state="new">You can dynamically adjust the number of Nodes in a pool according to current work load and resource usage statistics.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>You can also optimize the overall cost of running your application by configuring it to be automatically scaled.</source>
          <target state="new">You can also optimize the overall cost of running your application by configuring it to be automatically scaled.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>You can specify the scaling settings for a pool when it is created and you can update the configuration at any time.</source>
          <target state="new">You can specify the scaling settings for a pool when it is created and you can update the configuration at any time.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>For a decrease in the number of nodes, there could be tasks running on nodes which need to be considered.</source>
          <target state="new">For a decrease in the number of nodes, there could be tasks running on nodes which need to be considered.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A de-allocation policy is specified which determines whether running tasks are stopped to remove the node immediately or whether tasks are allowed to finish before the nodes are removed.</source>
          <target state="new">A de-allocation policy is specified which determines whether running tasks are stopped to remove the node immediately or whether tasks are allowed to finish before the nodes are removed.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Setting the target number of nodes down to zero at the end of a job, but allowing running tasks to finish, will maximize utilization.</source>
          <target state="new">Setting the target number of nodes down to zero at the end of a job, but allowing running tasks to finish, will maximize utilization.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>You specify automatic scaling of an application by using a set of scaling formulas.</source>
          <target state="new">You specify automatic scaling of an application by using a set of scaling formulas.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The formulas that can be used to determine the number of Nodes that are in the pool for the next scaling interval.</source>
          <target state="new">The formulas that can be used to determine the number of Nodes that are in the pool for the next scaling interval.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For example, you need to submit a large number of tasks to be scheduled on a pool.</source>
          <target state="new">For example, you need to submit a large number of tasks to be scheduled on a pool.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>You can assign a scaling formula to the pool that specifies the size of the pool based on the current number of pending tasks and the completion rate of the tasks.</source>
          <target state="new">You can assign a scaling formula to the pool that specifies the size of the pool based on the current number of pending tasks and the completion rate of the tasks.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The Batch service periodically evaluates the formula and resizes the pool based on workload.</source>
          <target state="new">The Batch service periodically evaluates the formula and resizes the pool based on workload.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A formula can be based on the following metrics:

<bpt id="p1">- **</bpt>Time metrics<ept id="p1">**</ept> – Based on statistics collected every five minutes in the specified number of hours.</source>
          <target state="new">A formula can be based on the following metrics:

<bpt id="p1">- **</bpt>Time metrics<ept id="p1">**</ept> – Based on statistics collected every five minutes in the specified number of hours.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">- **</bpt>Resource metrics<ept id="p1">**</ept> – Based on CPU usage, bandwidth usage, memory usage, and number of Nodes.</source>
          <target state="new"><bpt id="p1">- **</bpt>Resource metrics<ept id="p1">**</ept> – Based on CPU usage, bandwidth usage, memory usage, and number of Nodes.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">- **</bpt>Task metrics<ept id="p1">**</ept> – Based on the status of tasks, such as Active, Pending, and Completed.</source>
          <target state="new"><bpt id="p1">- **</bpt>Task metrics<ept id="p1">**</ept> – Based on the status of tasks, such as Active, Pending, and Completed.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>For more information about automatically scaling an application, see Configure Autoscaling of Task Virtual Machines.</source>
          <target state="new">For more information about automatically scaling an application, see Configure Autoscaling of Task Virtual Machines.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>&gt;Delete nodes
&gt;
&gt;It is not often required, but it is possible to specify individual nodes to remove from a pool.</source>
          <target state="new">&gt;Delete nodes
&gt;
&gt;It is not often required, but it is possible to specify individual nodes to remove from a pool.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If there’s a node that is suspected of being less reliable it could be removed, for example.</source>
          <target state="new">If there’s a node that is suspected of being less reliable it could be removed, for example.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">## &lt;a name="cert"&gt;&lt;/a&gt;</ph>Certificates for applications

You typically need to use certificates when you encrypt secret information.</source>
          <target state="new"><ph id="ph1">## &lt;a name="cert"&gt;&lt;/a&gt;</ph>Certificates for applications

You typically need to use certificates when you encrypt secret information.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Certificates can be installed on Nodes.</source>
          <target state="new">Certificates can be installed on Nodes.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The encrypted secrets are passed to tasks in command-line parameters or embedded in one of the resources and installed certificates can be used to decrypt them.</source>
          <target state="new">The encrypted secrets are passed to tasks in command-line parameters or embedded in one of the resources and installed certificates can be used to decrypt them.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>An example of the secret information is the key for a storage account.</source>
          <target state="new">An example of the secret information is the key for a storage account.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>You use the Add Certificate operation to add a certificate to a Batch account.</source>
          <target state="new">You use the Add Certificate operation to add a certificate to a Batch account.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>You can then associate the certificate to a new or existing pool.</source>
          <target state="new">You can then associate the certificate to a new or existing pool.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>When a certificate is associated with a pool, the Batch service installs the certificate on each Node in the pool.</source>
          <target state="new">When a certificate is associated with a pool, the Batch service installs the certificate on each Node in the pool.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The Batch service installs the appropriate certificates when the Node starts up, before it launches any tasks, which includes start tasks and job manager tasks.</source>
          <target state="new">The Batch service installs the appropriate certificates when the Node starts up, before it launches any tasks, which includes start tasks and job manager tasks.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">## &lt;a name="scheduling"&gt;&lt;/a&gt;</ph>Scheduling Priority

When you create a workitem, you can assign a priority to it.</source>
          <target state="new"><ph id="ph1">## &lt;a name="scheduling"&gt;&lt;/a&gt;</ph>Scheduling Priority

When you create a workitem, you can assign a priority to it.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Each job under the workitem is created with this priority.</source>
          <target state="new">Each job under the workitem is created with this priority.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The Batch service uses the priority values of the job to determine the order of job scheduling within an account.</source>
          <target state="new">The Batch service uses the priority values of the job to determine the order of job scheduling within an account.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority.</source>
          <target state="new">The priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>You can update the priority of a job by using the UpdateJob operation.</source>
          <target state="new">You can update the priority of a job by using the UpdateJob operation.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Within the same account, higher priority jobs have scheduling precedence over lower priority jobs.</source>
          <target state="new">Within the same account, higher priority jobs have scheduling precedence over lower priority jobs.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A job with a higher priority value in one account does not have scheduling precedence over another job with a lower priority value in a different account.</source>
          <target state="new">A job with a higher priority value in one account does not have scheduling precedence over another job with a lower priority value in a different account.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Job scheduling on different pools are independent.</source>
          <target state="new">Job scheduling on different pools are independent.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Across different pools, it is not guaranteed that a higher priority job is scheduled first, if its associated pool is short of idle Nodes.</source>
          <target state="new">Across different pools, it is not guaranteed that a higher priority job is scheduled first, if its associated pool is short of idle Nodes.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>On the same pool, jobs with the same priority level have an equal chance of being scheduled.</source>
          <target state="new">On the same pool, jobs with the same priority level have an equal chance of being scheduled.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">## &lt;a name="environment"&gt;&lt;/a&gt;</ph>Environment settings for tasks

You can specify environment settings that can be used in the context of a task.</source>
          <target state="new"><ph id="ph1">## &lt;a name="environment"&gt;&lt;/a&gt;</ph>Environment settings for tasks

You can specify environment settings that can be used in the context of a task.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Environment settings for a start task and tasks running under a job are defined by adding an XML section to the request body of the Add Task or Update Task operations.</source>
          <target state="new">Environment settings for a start task and tasks running under a job are defined by adding an XML section to the request body of the Add Task or Update Task operations.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The following example shows the definition of an environment setting:

For every task that is scheduled under a job, a specific set of environment variables are set by the Batch service.</source>
          <target state="new">The following example shows the definition of an environment setting:

For every task that is scheduled under a job, a specific set of environment variables are set by the Batch service.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The following table lists the environment variables that are set by the Batch service for all tasks.</source>
          <target state="new">The following table lists the environment variables that are set by the Batch service for all tasks.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>| Environment Variable Name          | Description                                                              |
|------------------------------------|--------------------------------------------------------------------------|
| AZ_BATCH_ACCOUNT_NAME              | The name of the account to which the task belongs.</source>
          <target state="new">| Environment Variable Name          | Description                                                              |
|------------------------------------|--------------------------------------------------------------------------|
| AZ_BATCH_ACCOUNT_NAME              | The name of the account to which the task belongs.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_JOB_ID                    | The name of the job to which the task belongs.</source>
          <target state="new">|
| AZ_BATCH_JOB_ID                    | The name of the job to which the task belongs.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_TASK_ID                   | The name of the current task.</source>
          <target state="new">|
| AZ_BATCH_TASK_ID                   | The name of the current task.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_POOL_ID                   | The name of the pool on which the task is running.</source>
          <target state="new">|
| AZ_BATCH_POOL_ID                   | The name of the pool on which the task is running.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_NODE_ID                   | The name of the Node on which the task is running.</source>
          <target state="new">|
| AZ_BATCH_NODE_ID                   | The name of the Node on which the task is running.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_NODE_ROOT_DIR             | The full path of the root directory on the node.</source>
          <target state="new">|
| AZ_BATCH_NODE_ROOT_DIR             | The full path of the root directory on the node.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_NODE_SHARED_DIR           | The full path of the shared directory on the node.</source>
          <target state="new">|
| AZ_BATCH_NODE_SHARED_DIR           | The full path of the shared directory on the node.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_NODE_STARTUP_DIR          | The full path of the pool node startup task directory on the node.</source>
          <target state="new">|
| AZ_BATCH_NODE_STARTUP_DIR          | The full path of the pool node startup task directory on the node.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_NODE_TASK_DIR             | The full path of the task directory on the node.</source>
          <target state="new">|
| AZ_BATCH_NODE_TASK_DIR             | The full path of the task directory on the node.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_NODE_TASK_WORKING_DIR     | The full path of the task working directory on the node.</source>
          <target state="new">|
| AZ_BATCH_NODE_TASK_WORKING_DIR     | The full path of the task working directory on the node.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_NODE_JOB_PREP_DIR         | The full path of the job preparation task directory on the node.</source>
          <target state="new">|
| AZ_BATCH_NODE_JOB_PREP_DIR         | The full path of the job preparation task directory on the node.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>|
| AZ_BATCH_NODE_JOB_PREP_WORKING_DIR | The full path of the job preparation task working directory on the node.</source>
          <target state="new">|
| AZ_BATCH_NODE_JOB_PREP_WORKING_DIR | The full path of the job preparation task working directory on the node.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">|

**</bpt>Note<ept id="p1">**</ept> 

You cannot overwrite these system-defined variables.</source>
          <target state="new"><bpt id="p1">|

**</bpt>Note<ept id="p1">**</ept> 

You cannot overwrite these system-defined variables.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>You can retrieve the value of environment settings by using the Get Task operation.</source>
          <target state="new">You can retrieve the value of environment settings by using the Get Task operation.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><ph id="ph1">## &lt;a name="errorhandling"&gt;&lt;/a&gt;</ph>Error Handling

###Task Failure Handling</source>
          <target state="new"><ph id="ph1">## &lt;a name="errorhandling"&gt;&lt;/a&gt;</ph>Error Handling

###Task Failure Handling</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Task failures fall into the following categories:

- Scheduling Failures:
    - If files are specified for the task, then the copy of one or more of the files could fail.</source>
          <target state="new">Task failures fall into the following categories:

- Scheduling Failures:
    - If files are specified for the task, then the copy of one or more of the files could fail.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>This could be because the files have moved, the storage account is no longer available, etc.
    - A “scheduling error” is set for the task in this case.</source>
          <target state="new">This could be because the files have moved, the storage account is no longer available, etc.
    - A “scheduling error” is set for the task in this case.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>- Application Failures:
    - The task process specified by the command line can also fail.</source>
          <target state="new">- Application Failures:
    - The task process specified by the command line can also fail.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The process is deemed to have failed when a non-zero exit code is returned.</source>
          <target state="new">The process is deemed to have failed when a non-zero exit code is returned.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>- For application failures it is possible to configure Batch to automatically retry the task up to a specified number of times.</source>
          <target state="new">- For application failures it is possible to configure Batch to automatically retry the task up to a specified number of times.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>- Constraint Failures:
    - A constraint can be specified for the maximum amount of time a job or task can run for.</source>
          <target state="new">- Constraint Failures:
    - A constraint can be specified for the maximum amount of time a job or task can run for.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The can be useful to terminate a task that has hung.</source>
          <target state="new">The can be useful to terminate a task that has hung.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>- When the maximum amount of time has been exceeded then the task is marked as completed but the exit code will marked as <ph id="ph1">`0xC000013A`</ph> and schedulingError field will be marked as <ph id="ph2">`{ category:“ServerError”, code=“TaskEnded”}`</ph>.</source>
          <target state="new">- When the maximum amount of time has been exceeded then the task is marked as completed but the exit code will marked as <ph id="ph1">`0xC000013A`</ph> and schedulingError field will be marked as <ph id="ph2">`{ category:“ServerError”, code=“TaskEnded”}`</ph>.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Debugging Application Failures

An application may produce diagnostics which can be used to troubleshoot issues.</source>
          <target state="new">Debugging Application Failures

An application may produce diagnostics which can be used to troubleshoot issues.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Often applications will write information to stdout and stderr files or output to custom files.</source>
          <target state="new">Often applications will write information to stdout and stderr files or output to custom files.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>In these cases an API is provided to get files, by specifying either the task or node.</source>
          <target state="new">In these cases an API is provided to get files, by specifying either the task or node.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>It is also possible to login into pool nodes.</source>
          <target state="new">It is also possible to login into pool nodes.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>An API returns the RDP file for a node, which can then be used to login to the node.</source>
          <target state="new">An API returns the RDP file for a node, which can then be used to login to the node.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Catering for Task Failures and Issues

Tasks can fail or be interrupted for a few reasons.</source>
          <target state="new">Catering for Task Failures and Issues

Tasks can fail or be interrupted for a few reasons.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The task application itself may fail, the node on which the task is running gets rebooted, or the node is removed by a pool resize with the de-allocation policy set to remove the node immediately without waiting for the task to finish.</source>
          <target state="new">The task application itself may fail, the node on which the task is running gets rebooted, or the node is removed by a pool resize with the de-allocation policy set to remove the node immediately without waiting for the task to finish.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>In all cases the task can be automatically re-queued by Batch and execute on another node.</source>
          <target state="new">In all cases the task can be automatically re-queued by Batch and execute on another node.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>It is also possible for an intermittent issue to cause a task to hang or take too long to execute.</source>
          <target state="new">It is also possible for an intermittent issue to cause a task to hang or take too long to execute.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The maximum execution time can be set for a task and if exceeded Batch will interrupt the task application.</source>
          <target state="new">The maximum execution time can be set for a task and if exceeded Batch will interrupt the task application.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Currently, automatic re-queuing is not possible for this case, but the case can be detected by the client which can submit a new task.</source>
          <target state="new">Currently, automatic re-queuing is not possible for this case, but the case can be detected by the client which can submit a new task.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Catering for “Bad” Nodes

Each node in a pool is given a unique name and the node on which a task runs included in the task meta-data.</source>
          <target state="new">Catering for “Bad” Nodes

Each node in a pool is given a unique name and the node on which a task runs included in the task meta-data.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>In the case where there is a node that for some reason is causing tasks to fail, then this can be determined by the client and the suspect node deleted from the pool.</source>
          <target state="new">In the case where there is a node that for some reason is causing tasks to fail, then this can be determined by the client and the suspect node deleted from the pool.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>If a task was running on the node that was deleted, then it will be automatically re-queued and executed on another node.</source>
          <target state="new">If a task was running on the node that was deleted, then it will be automatically re-queued and executed on another node.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dfdbb82ed140205942082b6be51915153b7e75dd</xliffext:olfilehash>
  </header>
</xliff>