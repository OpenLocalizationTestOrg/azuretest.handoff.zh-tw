<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Common cache patterns with Azure Redis Cache</source>
          <target state="new">Common cache patterns with Azure Redis Cache</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn where and why to use Azure Redis Cache</source>
          <target state="new">Learn where and why to use Azure Redis Cache</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Common cache patterns with Azure Redis Cache</source>
          <target state="new">Common cache patterns with Azure Redis Cache</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This page lists the most common benefits to using a cache.</source>
          <target state="new">This page lists the most common benefits to using a cache.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Optimizing data access with a cache</source>
          <target state="new">Optimizing data access with a cache</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using a cache can dramatically speed up data access over fetching from a data store.</source>
          <target state="new">Using a cache can dramatically speed up data access over fetching from a data store.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A cache provides high throughput and low-latency.</source>
          <target state="new">A cache provides high throughput and low-latency.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>By fetching hot data from the cache, you not only speed up your app but you can reduce the data access load and increase its responsiveness for other queries.</source>
          <target state="new">By fetching hot data from the cache, you not only speed up your app but you can reduce the data access load and increase its responsiveness for other queries.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Storing information in a cache helps save resources and increases scalability as the demands on the application increase.</source>
          <target state="new">Storing information in a cache helps save resources and increases scalability as the demands on the application increase.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Your app will be much more responsive to bursty loads when it can efficiently fetch data from a cache.</source>
          <target state="new">Your app will be much more responsive to bursty loads when it can efficiently fetch data from a cache.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Distributed session state</source>
          <target state="new">Distributed session state</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>While it’s considered a best practice is to avoid using session state, some applications can actually have a performance/reduced-complexity benefit from using session data, while other apps outright require session state.</source>
          <target state="new">While it’s considered a best practice is to avoid using session state, some applications can actually have a performance/reduced-complexity benefit from using session data, while other apps outright require session state.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default in memory provider for session state does not allow scale out (running multiple instances of the web site).</source>
          <target state="new">The default in memory provider for session state does not allow scale out (running multiple instances of the web site).</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The ASP.NET SQL Server session state provider will allow multiple web sites to use session state, but it incurs a high latency cost compared to an in memory provider.</source>
          <target state="new">The ASP.NET SQL Server session state provider will allow multiple web sites to use session state, but it incurs a high latency cost compared to an in memory provider.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Redis session state cache provider is a low latency alternative that is very easy to configure and set up.</source>
          <target state="new">The Redis session state cache provider is a low latency alternative that is very easy to configure and set up.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If your app uses only a limited amount of session state, you can use most of the cache for caching data and a small amount for session state.</source>
          <target state="new">If your app uses only a limited amount of session state, you can use most of the cache for caching data and a small amount for session state.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Surviving service downtime (cache fallback)</source>
          <target state="new">Surviving service downtime (cache fallback)</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By storing data in a cache, the application may be able to survive system failures such as network latency, Web service problems, and hardware failures.</source>
          <target state="new">By storing data in a cache, the application may be able to survive system failures such as network latency, Web service problems, and hardware failures.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It's often better to serve cached data until your web service or database recovers, than for your app to completely fail.</source>
          <target state="new">It's often better to serve cached data until your web service or database recovers, than for your app to completely fail.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To learn more about using the Azure Redis Cache:</source>
          <target state="new">To learn more about using the Azure Redis Cache:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Redis Azure Cache docs <ept id="p1">](http://azure.microsoft.com/documentation/services/cache/)</ept>: This page provides many good links to using the Redis Azure cache.</source>
          <target state="new"><bpt id="p1">[</bpt>Redis Azure Cache docs <ept id="p1">](http://azure.microsoft.com/documentation/services/cache/)</ept>: This page provides many good links to using the Redis Azure cache.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MVC movie app with Azure Redis Cache in 15 minutes<ept id="p1">](http://azure.microsoft.com/blog/2014/06/05/mvc-movie-app-with-azure-redis-cache-in-15-minutes/)</ept>: The blog post provides a quick start to using the Azure Redis cache in an ASP.NET MVC app.</source>
          <target state="new"><bpt id="p1">[</bpt>MVC movie app with Azure Redis Cache in 15 minutes<ept id="p1">](http://azure.microsoft.com/blog/2014/06/05/mvc-movie-app-with-azure-redis-cache-in-15-minutes/)</ept>: The blog post provides a quick start to using the Azure Redis cache in an ASP.NET MVC app.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to Use ASP.NET Session State with Azure Websites<ept id="p1">](../app-service-web/web-sites-dotnet-session-state-caching.md)</ept>: This topic explains how to use the Azure Redis Cache Service for session state.</source>
          <target state="new"><bpt id="p1">[</bpt>How to Use ASP.NET Session State with Azure Websites<ept id="p1">](../app-service-web/web-sites-dotnet-session-state-caching.md)</ept>: This topic explains how to use the Azure Redis Cache Service for session state.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f326cd52f63dffc6c28fccb8e4146cddf1ea92df</xliffext:olfilehash>
  </header>
</xliff>