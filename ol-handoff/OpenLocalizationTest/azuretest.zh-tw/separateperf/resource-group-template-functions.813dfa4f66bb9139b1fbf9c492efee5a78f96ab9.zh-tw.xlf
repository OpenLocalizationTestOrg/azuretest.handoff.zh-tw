<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Resource Manager Template Functions</source>
          <target state="new">Azure Resource Manager Template Functions</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Describes the functions to use in an Azure Resource Manager template to retrieve values, format strings and retrieve deployment information.</source>
          <target state="new">Describes the functions to use in an Azure Resource Manager template to retrieve values, format strings and retrieve deployment information.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Resource Manager Template Functions</source>
          <target state="new">Azure Resource Manager Template Functions</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic describes all of the functions you can use in an Azure Resource Manager template.</source>
          <target state="new">This topic describes all of the functions you can use in an Azure Resource Manager template.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="new">add</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>add(operand1, operand2)</source>
          <target state="new">add(operand1, operand2)</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Returns the sum of the two provided integers.</source>
          <target state="new">Returns the sum of the two provided integers.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>operand1</source>
          <target state="new">operand1</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>First operand to use.</source>
          <target state="new">First operand to use.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>operand2</source>
          <target state="new">operand2</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Second operand to use.</source>
          <target state="new">Second operand to use.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>base64</source>
          <target state="new">base64</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>base64 (inputString)</source>
          <target state="new">base64 (inputString)</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns the base64 representation of the input string.</source>
          <target state="new">Returns the base64 representation of the input string.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>inputString</source>
          <target state="new">inputString</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The string value to return as a base64 representation.</source>
          <target state="new">The string value to return as a base64 representation.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example show how to use the base64 function.</source>
          <target state="new">The following example show how to use the base64 function.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>concat</source>
          <target state="new">concat</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>concat (arg1, arg2, arg3, ...)</source>
          <target state="new">concat (arg1, arg2, arg3, ...)</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Combines multiple string values and returns the resulting string value.</source>
          <target state="new">Combines multiple string values and returns the resulting string value.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This function can take any number of arguments.</source>
          <target state="new">This function can take any number of arguments.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example shows how to combine multiple values to return a value.</source>
          <target state="new">The following example shows how to combine multiple values to return a value.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>copyIndex</source>
          <target state="new">copyIndex</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>copyIndex(offset)</source>
          <target state="new">copyIndex(offset)</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns the current index of an iteration loop.</source>
          <target state="new">Returns the current index of an iteration loop.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For examples of using this function, see <bpt id="p1">[</bpt>Create multiple instances of resources in Azure Resource Manager<ept id="p1">](resource-group-create-multiple.md)</ept>.</source>
          <target state="new">For examples of using this function, see <bpt id="p1">[</bpt>Create multiple instances of resources in Azure Resource Manager<ept id="p1">](resource-group-create-multiple.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>deployment</source>
          <target state="new">deployment</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>deployment()</source>
          <target state="new">deployment()</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns information about the current deployment operation.</source>
          <target state="new">Returns information about the current deployment operation.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The information about the deployment is returned as an object with the following properties:</source>
          <target state="new">The information about the deployment is returned as an object with the following properties:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following example shows how to return deployment information in the outputs section.</source>
          <target state="new">The following example shows how to return deployment information in the outputs section.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>div</source>
          <target state="new">div</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>div(operand1, operand2)</source>
          <target state="new">div(operand1, operand2)</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns the integer division of the two provided integers.</source>
          <target state="new">Returns the integer division of the two provided integers.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>operand1</source>
          <target state="new">operand1</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Number being divided.</source>
          <target state="new">Number being divided.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>operand2</source>
          <target state="new">operand2</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Number which is used to divide, has to be different from 0.</source>
          <target state="new">Number which is used to divide, has to be different from 0.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="new">length</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>length(array)</source>
          <target state="new">length(array)</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in an array.</source>
          <target state="new">Returns the number of elements in an array.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Typically, used to specify the number of iterations when creating resources.</source>
          <target state="new">Typically, used to specify the number of iterations when creating resources.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For an example of using this function, see <bpt id="p1">[</bpt>Create multiple instances of resources in Azure Resource Manager<ept id="p1">](resource-group-create-multiple.md)</ept>.</source>
          <target state="new">For an example of using this function, see <bpt id="p1">[</bpt>Create multiple instances of resources in Azure Resource Manager<ept id="p1">](resource-group-create-multiple.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>listKeys</source>
          <target state="new">listKeys</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>listKeys (resourceName or resourceIdentifier, [apiVersion])</source>
          <target state="new">listKeys (resourceName or resourceIdentifier, [apiVersion])</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns the keys of a storage account.</source>
          <target state="new">Returns the keys of a storage account.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The resourceId can be specified by using the <bpt id="p1">[</bpt>resourceId function<ept id="p1">](./#resourceid)</ept> or by using the format <bpt id="p2">**</bpt>providerNamespace/resourceType/resourceName<ept id="p2">**</ept>.</source>
          <target state="new">The resourceId can be specified by using the <bpt id="p1">[</bpt>resourceId function<ept id="p1">](./#resourceid)</ept> or by using the format <bpt id="p2">**</bpt>providerNamespace/resourceType/resourceName<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can use the function to get the primaryKey and secondaryKey.</source>
          <target state="new">You can use the function to get the primaryKey and secondaryKey.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>resourceName or resourceIdentifier</source>
          <target state="new">resourceName or resourceIdentifier</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Unique identifier of a storage account.</source>
          <target state="new">Unique identifier of a storage account.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>apiVersion</source>
          <target state="new">apiVersion</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>API version of resource runtime state.</source>
          <target state="new">API version of resource runtime state.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following example shows how to return the keys from a storage account in the outputs section.</source>
          <target state="new">The following example shows how to return the keys from a storage account in the outputs section.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>mod</source>
          <target state="new">mod</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>mod(operand1, operand2)</source>
          <target state="new">mod(operand1, operand2)</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Returns the remainder of the integer division using the two provided integers.</source>
          <target state="new">Returns the remainder of the integer division using the two provided integers.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>operand1</source>
          <target state="new">operand1</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Number being divided.</source>
          <target state="new">Number being divided.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>operand2</source>
          <target state="new">operand2</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Number which is used to divide, has to be different from 0.</source>
          <target state="new">Number which is used to divide, has to be different from 0.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>mul</source>
          <target state="new">mul</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>mul(operand1, operand2)</source>
          <target state="new">mul(operand1, operand2)</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Returns the multiplication of the two provided integers.</source>
          <target state="new">Returns the multiplication of the two provided integers.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>operand1</source>
          <target state="new">operand1</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>First operand to use.</source>
          <target state="new">First operand to use.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>operand2</source>
          <target state="new">operand2</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Second operand to use.</source>
          <target state="new">Second operand to use.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>padLeft</source>
          <target state="new">padLeft</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>padLeft(stringToPad, totalLength, paddingCharacter)</source>
          <target state="new">padLeft(stringToPad, totalLength, paddingCharacter)</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns a right-aligned string by adding characters to the left until reaching the total specified length.</source>
          <target state="new">Returns a right-aligned string by adding characters to the left until reaching the total specified length.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>stringToPad</source>
          <target state="new">stringToPad</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The string to right-align.</source>
          <target state="new">The string to right-align.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>totalLength</source>
          <target state="new">totalLength</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The total number of characters in the returned string.</source>
          <target state="new">The total number of characters in the returned string.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>paddingCharacter</source>
          <target state="new">paddingCharacter</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The character to use for left-padding until the total length is reached.</source>
          <target state="new">The character to use for left-padding until the total length is reached.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The following example shows how to pad the user-provided parameter value by adding the zero character until the string reaches 10 characters.</source>
          <target state="new">The following example shows how to pad the user-provided parameter value by adding the zero character until the string reaches 10 characters.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If the original parameter value is longer than 10 characters, no characters are added.</source>
          <target state="new">If the original parameter value is longer than 10 characters, no characters are added.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>parameters</source>
          <target state="new">parameters</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>parameters (parameterName)</source>
          <target state="new">parameters (parameterName)</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns a parameter value.</source>
          <target state="new">Returns a parameter value.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The specified parameter name must be defined in the parameters section of the template.</source>
          <target state="new">The specified parameter name must be defined in the parameters section of the template.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>parameterName</source>
          <target state="new">parameterName</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The name of the parameter to return.</source>
          <target state="new">The name of the parameter to return.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The following example shows a simplified use of the parameters function.</source>
          <target state="new">The following example shows a simplified use of the parameters function.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>provider</source>
          <target state="new">provider</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>provider (providerNamespace, [resourceType])</source>
          <target state="new">provider (providerNamespace, [resourceType])</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Return information about a resource provider and its supported resource types.</source>
          <target state="new">Return information about a resource provider and its supported resource types.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If not type is provided, all of the supported types are returned.</source>
          <target state="new">If not type is provided, all of the supported types are returned.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>providerNamespace</source>
          <target state="new">providerNamespace</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Namespace of the provider</source>
          <target state="new">Namespace of the provider</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>resourceType</source>
          <target state="new">resourceType</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The type of resource within the specified namespace.</source>
          <target state="new">The type of resource within the specified namespace.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Each supported type is returned in the following format:</source>
          <target state="new">Each supported type is returned in the following format:</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the provider function:</source>
          <target state="new">The following example shows how to use the provider function:</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>reference</source>
          <target state="new">reference</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>reference (resourceName or resourceIdentifier, [apiVersion])</source>
          <target state="new">reference (resourceName or resourceIdentifier, [apiVersion])</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Enables an expression to derive its value from another resource's runtime state.</source>
          <target state="new">Enables an expression to derive its value from another resource's runtime state.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>resourceName or resourceIdentifier</source>
          <target state="new">resourceName or resourceIdentifier</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Name or the unique identifier of a resource.</source>
          <target state="new">Name or the unique identifier of a resource.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>apiVersion</source>
          <target state="new">apiVersion</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>API version of resource runtime state.</source>
          <target state="new">API version of resource runtime state.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Parameter should be used if resource is not provisioned within same template.</source>
          <target state="new">Parameter should be used if resource is not provisioned within same template.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>reference<ept id="p1">**</ept> function derives its value from a runtime state, and therefore cannot be used in the variables section.</source>
          <target state="new">The <bpt id="p1">**</bpt>reference<ept id="p1">**</ept> function derives its value from a runtime state, and therefore cannot be used in the variables section.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>It can be used in outputs section of a template.</source>
          <target state="new">It can be used in outputs section of a template.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>By using the reference expression, you implicitly declare that one resource depends on another resource if the referenced resource is provisioned within same template.</source>
          <target state="new">By using the reference expression, you implicitly declare that one resource depends on another resource if the referenced resource is provisioned within same template.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>You do not need to also use the <bpt id="p1">**</bpt>dependsOn<ept id="p1">**</ept> property.</source>
          <target state="new">You do not need to also use the <bpt id="p1">**</bpt>dependsOn<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The expression is not evaluated until the referenced resource has completed deployment.</source>
          <target state="new">The expression is not evaluated until the referenced resource has completed deployment.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>replace</source>
          <target state="new">replace</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>replace(originalString, oldCharacter, newCharacter)</source>
          <target state="new">replace(originalString, oldCharacter, newCharacter)</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Returns a new string with all instances of one character in the specified string replaced by another character.</source>
          <target state="new">Returns a new string with all instances of one character in the specified string replaced by another character.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>originalString</source>
          <target state="new">originalString</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The string that will have all instances of one character replaced by another character.</source>
          <target state="new">The string that will have all instances of one character replaced by another character.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>oldCharacter</source>
          <target state="new">oldCharacter</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The character to be removed from the original string.</source>
          <target state="new">The character to be removed from the original string.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>newCharacter</source>
          <target state="new">newCharacter</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The character to add in place of the removed character.</source>
          <target state="new">The character to add in place of the removed character.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The following example shows how to remove all dashes from the user-provided string.</source>
          <target state="new">The following example shows how to remove all dashes from the user-provided string.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>resourceGroup</source>
          <target state="new">resourceGroup</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>resourceGroup()</source>
          <target state="new">resourceGroup()</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Returns a structured object that represents the current resource group.</source>
          <target state="new">Returns a structured object that represents the current resource group.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The object will be in the following format:</source>
          <target state="new">The object will be in the following format:</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The following example uses the resource group location to assign the location for a web site.</source>
          <target state="new">The following example uses the resource group location to assign the location for a web site.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>resourceId</source>
          <target state="new">resourceId</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>resourceId ([resourceGroupName], resourceType, resourceName1, [resourceName2]...)</source>
          <target state="new">resourceId ([resourceGroupName], resourceType, resourceName1, [resourceName2]...)</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Returns the unique identifier of a resource.</source>
          <target state="new">Returns the unique identifier of a resource.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>You use this function when the resource name is ambiguous or not provisioned within the same template.</source>
          <target state="new">You use this function when the resource name is ambiguous or not provisioned within the same template.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The identifier is returned in the following format:</source>
          <target state="new">The identifier is returned in the following format:</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>resourceGroupName</source>
          <target state="new">resourceGroupName</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Optional resource group name.</source>
          <target state="new">Optional resource group name.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Default value is current resource group.</source>
          <target state="new">Default value is current resource group.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Specify this value when you retrieving a resource in another resource group.</source>
          <target state="new">Specify this value when you retrieving a resource in another resource group.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>resourceType</source>
          <target state="new">resourceType</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Type of resource including resource provider namespace.</source>
          <target state="new">Type of resource including resource provider namespace.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>resourceName1</source>
          <target state="new">resourceName1</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Name of resource.</source>
          <target state="new">Name of resource.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>resourceName2</source>
          <target state="new">resourceName2</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Next resource name segment if resource is nested.</source>
          <target state="new">Next resource name segment if resource is nested.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The following example shows how to retrieve the resource ids for a web site and a database.</source>
          <target state="new">The following example shows how to retrieve the resource ids for a web site and a database.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The web site exists in a resource group named <bpt id="p1">**</bpt>myWebsitesGroup<ept id="p1">**</ept> and the database exists in the current resource group for this template.</source>
          <target state="new">The web site exists in a resource group named <bpt id="p1">**</bpt>myWebsitesGroup<ept id="p1">**</ept> and the database exists in the current resource group for this template.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Often, you need to use this function when using a storage account or virtual network in an alternate resource group.</source>
          <target state="new">Often, you need to use this function when using a storage account or virtual network in an alternate resource group.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The storage account or virtual network may be used across multiple resource groups; therefore, you do not want to delete them when deleting a single resource group.</source>
          <target state="new">The storage account or virtual network may be used across multiple resource groups; therefore, you do not want to delete them when deleting a single resource group.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The following example shows how a resource from an external resource group can easily be used:</source>
          <target state="new">The following example shows how a resource from an external resource group can easily be used:</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>split</source>
          <target state="new">split</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>split(inputString, delimiter)<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>split(inputString, delimiter)<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>split(inputString, [delimiters])<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>split(inputString, [delimiters])<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Returns an array of strings that contains the substrings of the input string that are delimited by the sent delimiters.</source>
          <target state="new">Returns an array of strings that contains the substrings of the input string that are delimited by the sent delimiters.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>inputString</source>
          <target state="new">inputString</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The string to to be splitted.</source>
          <target state="new">The string to to be splitted.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>delimiter</source>
          <target state="new">delimiter</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The delimiter to use, can be a single string or an array of strings.</source>
          <target state="new">The delimiter to use, can be a single string or an array of strings.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The following example splits the input string with a comma.</source>
          <target state="new">The following example splits the input string with a comma.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>sub</source>
          <target state="new">sub</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>sub(operand1, operand2)</source>
          <target state="new">sub(operand1, operand2)</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Returns the subtraction of the two provided integers.</source>
          <target state="new">Returns the subtraction of the two provided integers.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>operand1</source>
          <target state="new">operand1</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Number which is to be subtracted from.</source>
          <target state="new">Number which is to be subtracted from.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>operand2</source>
          <target state="new">operand2</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Number to be subtracted.</source>
          <target state="new">Number to be subtracted.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>subscription</source>
          <target state="new">subscription</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>subscription()</source>
          <target state="new">subscription()</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Returns details about the subscription in the following format.</source>
          <target state="new">Returns details about the subscription in the following format.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The following example shows the subscription function called in the outputs section.</source>
          <target state="new">The following example shows the subscription function called in the outputs section.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>toLower</source>
          <target state="new">toLower</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>toLower(stringToChange)</source>
          <target state="new">toLower(stringToChange)</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Converts the specified string to lower case.</source>
          <target state="new">Converts the specified string to lower case.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>stringToChange</source>
          <target state="new">stringToChange</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The string to convert to lower case.</source>
          <target state="new">The string to convert to lower case.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The following example converts the user-provided parameter value to lower case.</source>
          <target state="new">The following example converts the user-provided parameter value to lower case.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>toUpper</source>
          <target state="new">toUpper</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>toUpper(stringToChange)</source>
          <target state="new">toUpper(stringToChange)</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Converts the specified string to upper case.</source>
          <target state="new">Converts the specified string to upper case.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>stringToChange</source>
          <target state="new">stringToChange</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The string to convert to upper case.</source>
          <target state="new">The string to convert to upper case.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The following example converts the user-provided parameter value to upper case.</source>
          <target state="new">The following example converts the user-provided parameter value to upper case.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>variables</source>
          <target state="new">variables</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>variables (variableName)</source>
          <target state="new">variables (variableName)</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Returns the value of variable.</source>
          <target state="new">Returns the value of variable.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The specified variable name must be defined in the variables section of the template.</source>
          <target state="new">The specified variable name must be defined in the variables section of the template.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>variable Name</source>
          <target state="new">variable Name</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The name of the variable to return.</source>
          <target state="new">The name of the variable to return.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>For a description of the sections in an Azure Resource Manager template, see <bpt id="p1">[</bpt>Authoring Azure Resource Manager templates<ept id="p1">](resource-group-authoring-templates.md)</ept></source>
          <target state="new">For a description of the sections in an Azure Resource Manager template, see <bpt id="p1">[</bpt>Authoring Azure Resource Manager templates<ept id="p1">](resource-group-authoring-templates.md)</ept></target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>To merge multiple templates, see <bpt id="p1">[</bpt>Using linked templates with Azure Resource Manager<ept id="p1">](resource-group-linked-templates.md)</ept></source>
          <target state="new">To merge multiple templates, see <bpt id="p1">[</bpt>Using linked templates with Azure Resource Manager<ept id="p1">](resource-group-linked-templates.md)</ept></target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>To iterate a specified number of times when creating a type of resource, see <bpt id="p1">[</bpt>Create multiple instances of resources in Azure Resource Manager<ept id="p1">](resource-group-create-multiple.md)</ept></source>
          <target state="new">To iterate a specified number of times when creating a type of resource, see <bpt id="p1">[</bpt>Create multiple instances of resources in Azure Resource Manager<ept id="p1">](resource-group-create-multiple.md)</ept></target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>To see how to deploy the template you have created, see <bpt id="p1">[</bpt>Deploy an application with Azure Resource Manager template<ept id="p1">](azure-portal/resource-group-template-deploy.md)</ept></source>
          <target state="new">To see how to deploy the template you have created, see <bpt id="p1">[</bpt>Deploy an application with Azure Resource Manager template<ept id="p1">](azure-portal/resource-group-template-deploy.md)</ept></target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb8aeec44dc6e069f1251f5a994a5fc41af6e373</xliffext:olfilehash>
  </header>
</xliff>