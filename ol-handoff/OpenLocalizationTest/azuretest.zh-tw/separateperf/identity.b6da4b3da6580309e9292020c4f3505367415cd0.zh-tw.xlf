<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Managing identity is just as important in the public cloud is it is on premises.</source>
          <target state="new">Managing identity is just as important in the public cloud is it is on premises.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To help with this, Azure supports several different cloud identity technologies.</source>
          <target state="new">To help with this, Azure supports several different cloud identity technologies.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>They include these:</source>
          <target state="new">They include these:</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can run Windows Server Active Directory (commonly called just AD) in the cloud using virtual machines created with Azure Virtual machines.</source>
          <target state="new">You can run Windows Server Active Directory (commonly called just AD) in the cloud using virtual machines created with Azure Virtual machines.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This approach makes sense when you're using Azure to extend your on-premises datacenter into the cloud.</source>
          <target state="new">This approach makes sense when you're using Azure to extend your on-premises datacenter into the cloud.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can use Azure Active Directory to give your users single sign-on to Software as a Service (SaaS) applications.</source>
          <target state="new">You can use Azure Active Directory to give your users single sign-on to Software as a Service (SaaS) applications.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Microsoft's Office 365 uses this technology, for example, and applications running on Azure or other cloud platforms can also use it.</source>
          <target state="new">Microsoft's Office 365 uses this technology, for example, and applications running on Azure or other cloud platforms can also use it.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Applications running in the cloud or on-premises can use Azure Active Directory Access Control to let users log in using identities from Facebook, Google, Microsoft, and other identity providers.</source>
          <target state="new">Applications running in the cloud or on-premises can use Azure Active Directory Access Control to let users log in using identities from Facebook, Google, Microsoft, and other identity providers.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This article describes all three of these options.</source>
          <target state="new">This article describes all three of these options.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="new">Table of Contents</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Running Windows Server Active Directory in virtual machines</source>
          <target state="new">Running Windows Server Active Directory in virtual machines</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Using Azure Active Directory</source>
          <target state="new">Using Azure Active Directory</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Using Azure Active Directory Access Control</source>
          <target state="new">Using Azure Active Directory Access Control</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="adinvm"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Running Windows Server Active Directory in virtual machines</source>
          <target state="new"><ph id="ph1">&lt;a name="adinvm"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Running Windows Server Active Directory in virtual machines</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Running Windows Server AD in Azure virtual machines is much like running it on-premises.</source>
          <target state="new">Running Windows Server AD in Azure virtual machines is much like running it on-premises.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Figure 1<ept id="p1">](#fig1)</ept> shows a typical example of how this looks.</source>
          <target state="new"><bpt id="p1">[</bpt>Figure 1<ept id="p1">](#fig1)</ept> shows a typical example of how this looks.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Azure Active Directory in Virtual Machine</source>
          <target state="new">Azure Active Directory in Virtual Machine</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="Fig1"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Figure 1: Windows Server Active Directory can run in Azure virtual machines connected to an organization's on-premises datacenter using Azure Virtual Network.</source>
          <target state="new"><ph id="ph1">&lt;a name="Fig1"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Figure 1: Windows Server Active Directory can run in Azure virtual machines connected to an organization's on-premises datacenter using Azure Virtual Network.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In the example shown here, Windows Server AD is running in VMs created using Azure Virtual Machines, the platform's IaaS technology.</source>
          <target state="new">In the example shown here, Windows Server AD is running in VMs created using Azure Virtual Machines, the platform's IaaS technology.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These VMs and a few others are grouped into a virtual network connected to an on-premises datacenter using Azure Virtual Network.</source>
          <target state="new">These VMs and a few others are grouped into a virtual network connected to an on-premises datacenter using Azure Virtual Network.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The virtual network carves out a group of cloud virtual machines that interact with the on-premises network via a virtual private network (VPN) connection.</source>
          <target state="new">The virtual network carves out a group of cloud virtual machines that interact with the on-premises network via a virtual private network (VPN) connection.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Doing this lets these Azure virtual machines look like just another subnet to the on-premises datacenter.</source>
          <target state="new">Doing this lets these Azure virtual machines look like just another subnet to the on-premises datacenter.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>As the figure shows, two of those VMs are running Windows Server AD domain controllers.</source>
          <target state="new">As the figure shows, two of those VMs are running Windows Server AD domain controllers.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The other virtual machines in the virtual network might be running applications, such as SharePoint, or being used in some other way, such as for development and testing.</source>
          <target state="new">The other virtual machines in the virtual network might be running applications, such as SharePoint, or being used in some other way, such as for development and testing.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The on-premises datacenter is also running two Windows Server AD domain controllers.</source>
          <target state="new">The on-premises datacenter is also running two Windows Server AD domain controllers.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>There are several options for connecting the domain controllers in the cloud with those running on premises:</source>
          <target state="new">There are several options for connecting the domain controllers in the cloud with those running on premises:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Make all of them part of a single Active Directory domain.</source>
          <target state="new">Make all of them part of a single Active Directory domain.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Create separate AD domains on-premises and in the cloud that are part of the same forest.</source>
          <target state="new">Create separate AD domains on-premises and in the cloud that are part of the same forest.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Create separate AD forests in the cloud and on-premises, then connect the forests using cross-forest trusts or Windows Server Active Directory Federation Services (AD FS), which can also run in virtual machines on Azure.</source>
          <target state="new">Create separate AD forests in the cloud and on-premises, then connect the forests using cross-forest trusts or Windows Server Active Directory Federation Services (AD FS), which can also run in virtual machines on Azure.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Whatever choice is made, an administrator should make sure that authentication requests from on-premises users go to cloud domain controllers only when necessary, since the link to the cloud is likely to be slower than on-premises networks.</source>
          <target state="new">Whatever choice is made, an administrator should make sure that authentication requests from on-premises users go to cloud domain controllers only when necessary, since the link to the cloud is likely to be slower than on-premises networks.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Another factor to consider in connecting cloud and on-premises domain controllers is the traffic generated by replication.</source>
          <target state="new">Another factor to consider in connecting cloud and on-premises domain controllers is the traffic generated by replication.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Domain controllers in the cloud are typically in their own AD site, which allows an administrator to schedule how often replication is done.</source>
          <target state="new">Domain controllers in the cloud are typically in their own AD site, which allows an administrator to schedule how often replication is done.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Azure charges for traffic sent out of an Azure datacenter, although not for bytes sent in, which might affect the administrator's replication choices.</source>
          <target state="new">Azure charges for traffic sent out of an Azure datacenter, although not for bytes sent in, which might affect the administrator's replication choices.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It's also worth pointing out that while Azure does provide its own Domain Name System (DNS) support, this service is missing features required by Active Directory (such as support for Dynamic DNS and SRV records).</source>
          <target state="new">It's also worth pointing out that while Azure does provide its own Domain Name System (DNS) support, this service is missing features required by Active Directory (such as support for Dynamic DNS and SRV records).</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Because of this, running Windows Server AD on Azure requires setting up your own DNS servers in the cloud.</source>
          <target state="new">Because of this, running Windows Server AD on Azure requires setting up your own DNS servers in the cloud.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Running Windows Server AD in Azure VMs can make sense in several different situations.</source>
          <target state="new">Running Windows Server AD in Azure VMs can make sense in several different situations.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="new">Here are some examples:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you're using Azure Virtual Machines as an extension of your own datacenter, you might run applications in the cloud that need local domain controllers to handle things such as Windows Integrated Authentication requests or LDAP queries.</source>
          <target state="new">If you're using Azure Virtual Machines as an extension of your own datacenter, you might run applications in the cloud that need local domain controllers to handle things such as Windows Integrated Authentication requests or LDAP queries.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>SharePoint, for example, interacts frequently with Active Directory, and so while it's possible to run a SharePoint farm on Azure using an on-premises directory, setting up domain controllers in the cloud will significantly improve performance.</source>
          <target state="new">SharePoint, for example, interacts frequently with Active Directory, and so while it's possible to run a SharePoint farm on Azure using an on-premises directory, setting up domain controllers in the cloud will significantly improve performance.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>(It's important to realize that this isn't necessarily required, however; plenty of applications can run successfully in the cloud using only on-premises domain controllers.)</source>
          <target state="new">(It's important to realize that this isn't necessarily required, however; plenty of applications can run successfully in the cloud using only on-premises domain controllers.)</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Suppose a faraway branch office lacks the resources to run its own domain controllers.</source>
          <target state="new">Suppose a faraway branch office lacks the resources to run its own domain controllers.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Today, its users must authenticate to domain controllers on the other side of the world - logins are slow.</source>
          <target state="new">Today, its users must authenticate to domain controllers on the other side of the world - logins are slow.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Running Active Directory on Azure in a closer Microsoft datacenter can speed this up without requiring more servers in the branch office.</source>
          <target state="new">Running Active Directory on Azure in a closer Microsoft datacenter can speed this up without requiring more servers in the branch office.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An organization that uses Azure for disaster recovery might maintain a small set of active VMs in the cloud, including a domain controller.</source>
          <target state="new">An organization that uses Azure for disaster recovery might maintain a small set of active VMs in the cloud, including a domain controller.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It can then be prepared to expand this site as needed to take over for failures elsewhere.</source>
          <target state="new">It can then be prepared to expand this site as needed to take over for failures elsewhere.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>There are also other possibilities.</source>
          <target state="new">There are also other possibilities.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, you're not required to connect Windows Server AD in the cloud to an on-premises datacenter.</source>
          <target state="new">For example, you're not required to connect Windows Server AD in the cloud to an on-premises datacenter.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you wanted to run a SharePoint farm that served a particular set of users, for instance, all of whom would log in solely with cloud-based identities, you might create a standalone forest on Azure.</source>
          <target state="new">If you wanted to run a SharePoint farm that served a particular set of users, for instance, all of whom would log in solely with cloud-based identities, you might create a standalone forest on Azure.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>How you use this technology depends on what your goals are.</source>
          <target state="new">How you use this technology depends on what your goals are.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>(For more detailed guidance on using Windows Server AD with Azure, <bpt id="p1">[</bpt>see here<ept id="p1">](http://msdn.microsoft.com/library/windowsazure/jj156090.aspx)</ept>.)</source>
          <target state="new">(For more detailed guidance on using Windows Server AD with Azure, <bpt id="p1">[</bpt>see here<ept id="p1">](http://msdn.microsoft.com/library/windowsazure/jj156090.aspx)</ept>.)</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="ad"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Using Azure Active Directory</source>
          <target state="new"><ph id="ph1">&lt;a name="ad"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Using Azure Active Directory</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>As SaaS applications become more and more common, they raise an obvious question: What kind of directory service should these cloud-based applications use?</source>
          <target state="new">As SaaS applications become more and more common, they raise an obvious question: What kind of directory service should these cloud-based applications use?</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Microsoft's answer to that question is Azure Active Directory.</source>
          <target state="new">Microsoft's answer to that question is Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>There are two main options for using this directory service in the cloud:</source>
          <target state="new">There are two main options for using this directory service in the cloud:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Individuals and organizations that use only SaaS applications can rely on Azure Active Directory as their sole directory service.</source>
          <target state="new">Individuals and organizations that use only SaaS applications can rely on Azure Active Directory as their sole directory service.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Organizations that run Windows Server Active Directory can connect their on-premises directory to Azure Active Directory, then use it to give their users single sign-on to SaaS applications.</source>
          <target state="new">Organizations that run Windows Server Active Directory can connect their on-premises directory to Azure Active Directory, then use it to give their users single sign-on to SaaS applications.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Figure 2<ept id="p1">](#fig2)</ept> illustrates the first of these two options, where Azure Active Directory is all that's required.</source>
          <target state="new"><bpt id="p1">[</bpt>Figure 2<ept id="p1">](#fig2)</ept> illustrates the first of these two options, where Azure Active Directory is all that's required.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Azure Active Directory in Virtual Machine</source>
          <target state="new">Azure Active Directory in Virtual Machine</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="fig2"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Figure 2: Azure Active Directory gives an organization's users single sign-on to SaaS applications, including Office 365.</source>
          <target state="new"><ph id="ph1">&lt;a name="fig2"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Figure 2: Azure Active Directory gives an organization's users single sign-on to SaaS applications, including Office 365.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>As the figure shows, Azure AD is a multi-tenant service.</source>
          <target state="new">As the figure shows, Azure AD is a multi-tenant service.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This means that it can simultaneously support many different organizations, storing directory information about users at each of them.</source>
          <target state="new">This means that it can simultaneously support many different organizations, storing directory information about users at each of them.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In this example, a user at organization A is trying to access a SaaS application.</source>
          <target state="new">In this example, a user at organization A is trying to access a SaaS application.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This application might be part of Office 365, such as SharePoint Online, or it might be something else - non-Microsoft applications can also use this technology.</source>
          <target state="new">This application might be part of Office 365, such as SharePoint Online, or it might be something else - non-Microsoft applications can also use this technology.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Because Azure AD supports the SAML 2.0 protocol, all that's required from an application is the ability to interact using this industry standard.</source>
          <target state="new">Because Azure AD supports the SAML 2.0 protocol, all that's required from an application is the ability to interact using this industry standard.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>(In fact, applications that use Azure AD can run in any datacenter, not just an Azure datacenter.)</source>
          <target state="new">(In fact, applications that use Azure AD can run in any datacenter, not just an Azure datacenter.)</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The process begins when the user accesses a SaaS application (step 1).</source>
          <target state="new">The process begins when the user accesses a SaaS application (step 1).</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To use this application, the user must present a token issued by Azure AD.</source>
          <target state="new">To use this application, the user must present a token issued by Azure AD.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This token contains information that identifies the user, and it's digitally signed by Azure AD.</source>
          <target state="new">This token contains information that identifies the user, and it's digitally signed by Azure AD.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To get the token, the user authenticates himself to Azure AD by providing a username and password (step 2).</source>
          <target state="new">To get the token, the user authenticates himself to Azure AD by providing a username and password (step 2).</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Azure AD then returns the token he needs (step 3).</source>
          <target state="new">Azure AD then returns the token he needs (step 3).</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This token is then sent to the SaaS application (step 4), which validates the token's signature and uses its contents (step 5).</source>
          <target state="new">This token is then sent to the SaaS application (step 4), which validates the token's signature and uses its contents (step 5).</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Typically, the application will use the identity information the token contains to decide what information the user is allowed to access and perhaps in other ways.</source>
          <target state="new">Typically, the application will use the identity information the token contains to decide what information the user is allowed to access and perhaps in other ways.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If the application needs more information about the user than what's contained in the token, it can request this directly from Azure AD using the Azure AD Graph API (step 6).</source>
          <target state="new">If the application needs more information about the user than what's contained in the token, it can request this directly from Azure AD using the Azure AD Graph API (step 6).</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In the initial version of Azure AD, the directory schema is quite simple: It contains just users and groups and relationships among them.</source>
          <target state="new">In the initial version of Azure AD, the directory schema is quite simple: It contains just users and groups and relationships among them.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Applications can use this information to learn about connections between users.</source>
          <target state="new">Applications can use this information to learn about connections between users.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For example, suppose an application needs to know who this user's manager is to decide whether he's allowed access to some chunk of data.</source>
          <target state="new">For example, suppose an application needs to know who this user's manager is to decide whether he's allowed access to some chunk of data.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It can learn this by querying Azure AD through the Graph API.</source>
          <target state="new">It can learn this by querying Azure AD through the Graph API.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The Graph API uses an ordinary RESTful protocol, which makes it straightforward to use from most clients, including mobile devices.</source>
          <target state="new">The Graph API uses an ordinary RESTful protocol, which makes it straightforward to use from most clients, including mobile devices.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The API also supports the extensions defined by OData, adding things such as a query language to let clients access data in more useful ways.</source>
          <target state="new">The API also supports the extensions defined by OData, adding things such as a query language to let clients access data in more useful ways.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>(For more on OData, see <bpt id="p1">[</bpt>Introducing OData<ept id="p1">](http://download.microsoft.com/download/E/5/A/E5A59052-EE48-4D64-897B-5F7C608165B8/IntroducingOData.pdf)</ept>.) Because the Graph API can be used to learn about relationships between users, it lets applications understand the social graph that's embedded in the Azure AD schema for a particular organization (which is why it's called the Graph API).</source>
          <target state="new">(For more on OData, see <bpt id="p1">[</bpt>Introducing OData<ept id="p1">](http://download.microsoft.com/download/E/5/A/E5A59052-EE48-4D64-897B-5F7C608165B8/IntroducingOData.pdf)</ept>.) Because the Graph API can be used to learn about relationships between users, it lets applications understand the social graph that's embedded in the Azure AD schema for a particular organization (which is why it's called the Graph API).</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>And to authenticate itself to Azure AD for Graph API requests, an application uses OAuth 2.0.</source>
          <target state="new">And to authenticate itself to Azure AD for Graph API requests, an application uses OAuth 2.0.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If an organization doesn't use Windows Server Active Directory - it has no on-premises servers or domains - and relies solely on cloud applications that use Azure AD, using just this cloud directory would give the firm's users single sign-on to all of them.</source>
          <target state="new">If an organization doesn't use Windows Server Active Directory - it has no on-premises servers or domains - and relies solely on cloud applications that use Azure AD, using just this cloud directory would give the firm's users single sign-on to all of them.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Yet while this scenario gets more common every day, most organizations still use on-premises domains created with Windows Server Active Directory.</source>
          <target state="new">Yet while this scenario gets more common every day, most organizations still use on-premises domains created with Windows Server Active Directory.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Azure AD has a useful role to play here as well, as <bpt id="p1">[</bpt>Figure 3<ept id="p1">](#fig3)</ept> shows.</source>
          <target state="new">Azure AD has a useful role to play here as well, as <bpt id="p1">[</bpt>Figure 3<ept id="p1">](#fig3)</ept> shows.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Azure Active Directory in Virtual Machine<ph id="ph2">](./media/identity/identity_03_AD.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Azure Active Directory in Virtual Machine<ph id="ph2">](./media/identity/identity_03_AD.png)</ph></target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="fig3"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Figure 3: An organization can federate Windows Server Active Directory with Azure Active Directory to give its users single sign-on to SaaS applications.</source>
          <target state="new"><ph id="ph1">&lt;a id="fig3"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Figure 3: An organization can federate Windows Server Active Directory with Azure Active Directory to give its users single sign-on to SaaS applications.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In this scenario, a user at organization B wishes to access a SaaS application.</source>
          <target state="new">In this scenario, a user at organization B wishes to access a SaaS application.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Before she does this, the organization's directory administrators must establish a federation relationship with Azure AD using AD FS, as the figure shows.</source>
          <target state="new">Before she does this, the organization's directory administrators must establish a federation relationship with Azure AD using AD FS, as the figure shows.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Those admins must also configure data synchronization between the organization's on-premises Windows Server AD and Azure AD.</source>
          <target state="new">Those admins must also configure data synchronization between the organization's on-premises Windows Server AD and Azure AD.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This automatically copies user and group information from the on-premises directory to Azure AD.</source>
          <target state="new">This automatically copies user and group information from the on-premises directory to Azure AD.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Notice what this allows: In effect, the organization is extending its on-premises directory into the cloud.</source>
          <target state="new">Notice what this allows: In effect, the organization is extending its on-premises directory into the cloud.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Combining Windows Server AD and Azure AD in this way gives the organization a directory service that can be managed as a single entity, while still having a footprint both on-premises and in the cloud.</source>
          <target state="new">Combining Windows Server AD and Azure AD in this way gives the organization a directory service that can be managed as a single entity, while still having a footprint both on-premises and in the cloud.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To use Azure AD, the user first logs in to her on-premises Active Directory domain as usual (step 1).</source>
          <target state="new">To use Azure AD, the user first logs in to her on-premises Active Directory domain as usual (step 1).</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When she tries to access the SaaS application (step 2), the federation process results in Azure AD issuing her a token for this application (step 3).</source>
          <target state="new">When she tries to access the SaaS application (step 2), the federation process results in Azure AD issuing her a token for this application (step 3).</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>(For more on how federation works, see <bpt id="p1">[</bpt>Claims-Based Identity for Windows: Technologies and Scenarios<ept id="p1">](http://www.davidchappell.com/writing/white_papers/Claims-Based_Identity_for_Windows_v3.0--Chappell.docx)</ept>.) As before, this token contains information that identifies the user, and it's digitally signed by Azure AD.</source>
          <target state="new">(For more on how federation works, see <bpt id="p1">[</bpt>Claims-Based Identity for Windows: Technologies and Scenarios<ept id="p1">](http://www.davidchappell.com/writing/white_papers/Claims-Based_Identity_for_Windows_v3.0--Chappell.docx)</ept>.) As before, this token contains information that identifies the user, and it's digitally signed by Azure AD.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This token is then sent to the SaaS application (step 4), which validates the token's signature and uses its contents (step 5).</source>
          <target state="new">This token is then sent to the SaaS application (step 4), which validates the token's signature and uses its contents (step 5).</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>And is in the previous scenario, the SaaS application can use the Graph API to learn more about this user if necessary (step 6).</source>
          <target state="new">And is in the previous scenario, the SaaS application can use the Graph API to learn more about this user if necessary (step 6).</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Today, Azure AD isn't a complete replacement for on-premises Windows Server AD.</source>
          <target state="new">Today, Azure AD isn't a complete replacement for on-premises Windows Server AD.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>As already mentioned, the cloud directory has a much simpler schema, and it's also missing things such as group policy, the ability to store information about machines, and support for LDAP.</source>
          <target state="new">As already mentioned, the cloud directory has a much simpler schema, and it's also missing things such as group policy, the ability to store information about machines, and support for LDAP.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>(In fact, a Windows machine can't be configured to let users log in to it using nothing but Azure AD - this isn't a supported scenario.) Instead, the initial goals of Azure AD include letting enterprise users access applications in the cloud without maintaining a separate login and freeing on-premises directory administrators from manually synchronizing their on-premises directory with every SaaS application their organization uses.</source>
          <target state="new">(In fact, a Windows machine can't be configured to let users log in to it using nothing but Azure AD - this isn't a supported scenario.) Instead, the initial goals of Azure AD include letting enterprise users access applications in the cloud without maintaining a separate login and freeing on-premises directory administrators from manually synchronizing their on-premises directory with every SaaS application their organization uses.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Over time, however, expect this cloud directory service to address a wider range of scenarios.</source>
          <target state="new">Over time, however, expect this cloud directory service to address a wider range of scenarios.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="ac"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Using Azure Active Directory Access Control</source>
          <target state="new"><ph id="ph1">&lt;a name="ac"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Using Azure Active Directory Access Control</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Cloud-based identity technologies can be used to solve a variety of problems.</source>
          <target state="new">Cloud-based identity technologies can be used to solve a variety of problems.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Azure Active Directory can give an organization's users single sign-on to multiple SaaS applications, for example.</source>
          <target state="new">Azure Active Directory can give an organization's users single sign-on to multiple SaaS applications, for example.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>But identity technologies in the cloud can also be used in other ways.</source>
          <target state="new">But identity technologies in the cloud can also be used in other ways.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Suppose, for instance, that an application wishes to let its users log in using tokens issued by multiple <bpt id="p1">*</bpt>identity providers (IdPs)<ept id="p1">*</ept>.</source>
          <target state="new">Suppose, for instance, that an application wishes to let its users log in using tokens issued by multiple <bpt id="p1">*</bpt>identity providers (IdPs)<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Lots of different identity providers exist today, including Facebook, Google, Microsoft, and others, and applications frequently let users sign in using one of these identities.</source>
          <target state="new">Lots of different identity providers exist today, including Facebook, Google, Microsoft, and others, and applications frequently let users sign in using one of these identities.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Why should an application bother to maintain its own list of users and passwords when it can instead rely on identities that already exist?</source>
          <target state="new">Why should an application bother to maintain its own list of users and passwords when it can instead rely on identities that already exist?</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Accepting existing identities makes life simpler both for users, who have one less username and password to remember, and for the people who create the application, who no longer need to maintain their own lists of usernames and passwords.</source>
          <target state="new">Accepting existing identities makes life simpler both for users, who have one less username and password to remember, and for the people who create the application, who no longer need to maintain their own lists of usernames and passwords.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>But while every identity provider issues some kind of token, those tokens aren't standard - each IdP has its own format.</source>
          <target state="new">But while every identity provider issues some kind of token, those tokens aren't standard - each IdP has its own format.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Furthermore, the information in those tokens also isn't standard.</source>
          <target state="new">Furthermore, the information in those tokens also isn't standard.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An application that wishes to accept tokens issued by, say, Facebook, Google, and Microsoft is faced with the challenge of writing unique code to handle each of these different formats.</source>
          <target state="new">An application that wishes to accept tokens issued by, say, Facebook, Google, and Microsoft is faced with the challenge of writing unique code to handle each of these different formats.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>But why do this?</source>
          <target state="new">But why do this?</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Why not instead create an intermediary that can generate a single token format with a common representation of identity information?</source>
          <target state="new">Why not instead create an intermediary that can generate a single token format with a common representation of identity information?</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This approach would make life simpler for the developers who create applications, since they now need to handle only one kind of token.</source>
          <target state="new">This approach would make life simpler for the developers who create applications, since they now need to handle only one kind of token.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Azure Active Directory Access Control does exactly this, providing an intermediary in the cloud for working with diverse tokens.</source>
          <target state="new">Azure Active Directory Access Control does exactly this, providing an intermediary in the cloud for working with diverse tokens.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Figure 4<ept id="p1">](#fig4)</ept> shows how it works</source>
          <target state="new"><bpt id="p1">[</bpt>Figure 4<ept id="p1">](#fig4)</ept> shows how it works</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Azure Active Directory in Virtual Machine<ph id="ph2">](./media/identity/identity_04_IdentityProviders.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Azure Active Directory in Virtual Machine<ph id="ph2">](./media/identity/identity_04_IdentityProviders.png)</ph></target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="fig4"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Figure 4: Azure Active Directory Access Control makes it easier for applications to accept identity tokens issued by different identity providers.</source>
          <target state="new"><ph id="ph1">&lt;a id="fig4"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Figure 4: Azure Active Directory Access Control makes it easier for applications to accept identity tokens issued by different identity providers.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The process begins when a user attempts to access the application from a browser.</source>
          <target state="new">The process begins when a user attempts to access the application from a browser.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The application redirects her to an IdP of her choice (and that the application also trusts).</source>
          <target state="new">The application redirects her to an IdP of her choice (and that the application also trusts).</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>She authenticates herself to this IdP, such as by entering a username and password (step 1), and the IdP returns a token containing information about her (step 2).</source>
          <target state="new">She authenticates herself to this IdP, such as by entering a username and password (step 1), and the IdP returns a token containing information about her (step 2).</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>As the figure shows, Access Control supports a range of different cloud-based IdPs, including accounts created by Google, Yahoo, Facebook, Microsoft (formerly known as Windows Live ID), and any OpenID provider.</source>
          <target state="new">As the figure shows, Access Control supports a range of different cloud-based IdPs, including accounts created by Google, Yahoo, Facebook, Microsoft (formerly known as Windows Live ID), and any OpenID provider.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>It also supports identifies created using Azure Active Directory and, through federation with AD FS, Windows Server Active Directory.</source>
          <target state="new">It also supports identifies created using Azure Active Directory and, through federation with AD FS, Windows Server Active Directory.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The goal is to cover the most commonly used identities today, whether they're issued by IdPs in the cloud or on-premises.</source>
          <target state="new">The goal is to cover the most commonly used identities today, whether they're issued by IdPs in the cloud or on-premises.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Once the user's browser has an IdP token from her chosen IdP, it sends this token to Access Control (step 3).</source>
          <target state="new">Once the user's browser has an IdP token from her chosen IdP, it sends this token to Access Control (step 3).</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Access Control validates the token, making sure that it really was issued by this IdP, then creates a new token according to the rules that have been defined for this application.</source>
          <target state="new">Access Control validates the token, making sure that it really was issued by this IdP, then creates a new token according to the rules that have been defined for this application.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Like Azure Active Directory, Access Control is a multi-tenant service, but the tenants are applications rather than customer organizations.</source>
          <target state="new">Like Azure Active Directory, Access Control is a multi-tenant service, but the tenants are applications rather than customer organizations.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Each application can get its own namespace, as the figure shows, and can define various rules about authorization and more.</source>
          <target state="new">Each application can get its own namespace, as the figure shows, and can define various rules about authorization and more.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>These rules let each application's administrator define how tokens from various IdPs should be transformed into an Access Control token.</source>
          <target state="new">These rules let each application's administrator define how tokens from various IdPs should be transformed into an Access Control token.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For example, if different IdPs use different types for representing usernames, Access Control rules can transform all of these into a common username type.</source>
          <target state="new">For example, if different IdPs use different types for representing usernames, Access Control rules can transform all of these into a common username type.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Access Control then sends this new token back to the browser (step 4), which submits it to the application (step 5).</source>
          <target state="new">Access Control then sends this new token back to the browser (step 4), which submits it to the application (step 5).</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Once it has the Access Control token, the application verifies that this token really was issued by Access Control, then uses the information it contains (step 6).</source>
          <target state="new">Once it has the Access Control token, the application verifies that this token really was issued by Access Control, then uses the information it contains (step 6).</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>While this process might seem a little complicated, it actually makes life significantly simpler for the creator of the application.</source>
          <target state="new">While this process might seem a little complicated, it actually makes life significantly simpler for the creator of the application.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Rather than handle diverse tokens containing different information, the application can accept identities issued by multiple identity providers while still receiving only a single token with familiar information.</source>
          <target state="new">Rather than handle diverse tokens containing different information, the application can accept identities issued by multiple identity providers while still receiving only a single token with familiar information.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Also, rather than require each application to be configured to trust various IdPs, these trust relationships are instead maintained by Access Control - an application need only trust it.</source>
          <target state="new">Also, rather than require each application to be configured to trust various IdPs, these trust relationships are instead maintained by Access Control - an application need only trust it.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>It's worth pointing out that nothing about Access Control is tied to Windows - it could just as well be used by a Linux application that accepted only Google and Facebook identities.</source>
          <target state="new">It's worth pointing out that nothing about Access Control is tied to Windows - it could just as well be used by a Linux application that accepted only Google and Facebook identities.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>And even though Access Control is part of the Azure Active Directory family, you can think of it as an entirely distinct service from what was described in the previous section.</source>
          <target state="new">And even though Access Control is part of the Azure Active Directory family, you can think of it as an entirely distinct service from what was described in the previous section.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>While both technologies work with identity, they address quite different problems (although Microsoft has said that it expects to integrate the two at some point).</source>
          <target state="new">While both technologies work with identity, they address quite different problems (although Microsoft has said that it expects to integrate the two at some point).</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Working with identity is important in nearly every application.</source>
          <target state="new">Working with identity is important in nearly every application.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The goal of Access Control is to make it easier for developers to create applications that accept identities from diverse identity providers.</source>
          <target state="new">The goal of Access Control is to make it easier for developers to create applications that accept identities from diverse identity providers.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>By putting this service in the cloud, Microsoft has made it available to any application running on any platform.</source>
          <target state="new">By putting this service in the cloud, Microsoft has made it available to any application running on any platform.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>About the Author</source>
          <target state="new">About the Author</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>David Chappell is Principal of Chappell &amp; Associates <bpt id="p1">[</bpt>www.davidchappell.com<ept id="p1">](http://www.davidchappell.com)</ept> in San Francisco, California.</source>
          <target state="new">David Chappell is Principal of Chappell &amp; Associates <bpt id="p1">[</bpt>www.davidchappell.com<ept id="p1">](http://www.davidchappell.com)</ept> in San Francisco, California.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcac74ab078cef5c953958195265d6af96a83db0</xliffext:olfilehash>
  </header>
</xliff>