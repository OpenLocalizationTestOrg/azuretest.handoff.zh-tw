<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to work with the .NET backend server SDK for Mobile Apps | Azure App Service</source>
          <target state="new">How to work with the .NET backend server SDK for Mobile Apps | Azure App Service</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to work with the .NET backend server SDK for Azure App Service Mobile Apps.</source>
          <target state="new">Learn how to work with the .NET backend server SDK for Azure App Service Mobile Apps.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Work with the .NET backend server SDK for Azure Mobile Apps</source>
          <target state="new">Work with the .NET backend server SDK for Azure Mobile Apps</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic shows you how to use the .NET backend server SDK in key Azure App Service Mobile Apps scenarios.</source>
          <target state="new">This topic shows you how to use the .NET backend server SDK in key Azure App Service Mobile Apps scenarios.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Azure Mobile Apps SDK helps you work with mobile clients from your ASP.NET application.</source>
          <target state="new">The Azure Mobile Apps SDK helps you work with mobile clients from your ASP.NET application.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>How to: Download and initialize the SDK</source>
          <target state="new">How to: Download and initialize the SDK</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The SDK is available on <bpt id="p1">[</bpt><ept id="p1">NuGet.org]</ept>.</source>
          <target state="new">The SDK is available on <bpt id="p1">[</bpt><ept id="p1">NuGet.org]</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This package includes the base functionality required to get started using the SDK.</source>
          <target state="new">This package includes the base functionality required to get started using the SDK.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To initialize the SDK, you need to perform actions on the <bpt id="p1">**</bpt>HttpConfiguration<ept id="p1">**</ept> object.</source>
          <target state="new">To initialize the SDK, you need to perform actions on the <bpt id="p1">**</bpt>HttpConfiguration<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Install the SDK</source>
          <target state="new">Install the SDK</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To install the SDK, right-click on the server project in Visual Studio, select <bpt id="p1">**</bpt>Manage NuGet Packages<ept id="p1">**</ept>, search for the <bpt id="p2">[</bpt>Microsoft.Azure.Mobile.Server<ept id="p2">](http://www.nuget.org/packages/Microsoft.Azure.Mobile.Server/)</ept> package, then click <bpt id="p3">**</bpt>Install<ept id="p3">**</ept>.</source>
          <target state="new">To install the SDK, right-click on the server project in Visual Studio, select <bpt id="p1">**</bpt>Manage NuGet Packages<ept id="p1">**</ept>, search for the <bpt id="p2">[</bpt>Microsoft.Azure.Mobile.Server<ept id="p2">](http://www.nuget.org/packages/Microsoft.Azure.Mobile.Server/)</ept> package, then click <bpt id="p3">**</bpt>Install<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initialize the server project</source>
          <target state="new">Initialize the server project</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A .NET backend server project is initialized in the <bpt id="p1">**</bpt>Register<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>WebApiConfig<ept id="p2">**</ept> class, usually found in the App_Start folder.</source>
          <target state="new">A .NET backend server project is initialized in the <bpt id="p1">**</bpt>Register<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>WebApiConfig<ept id="p2">**</ept> class, usually found in the App_Start folder.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>HttpConfiguration<ept id="p1">**</ept> object, which represents configuration options for the service, is used to initialize the server project.</source>
          <target state="new">An <bpt id="p1">**</bpt>HttpConfiguration<ept id="p1">**</ept> object, which represents configuration options for the service, is used to initialize the server project.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following example initialize the server project, with no added features:</source>
          <target state="new">The following example initialize the server project, with no added features:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To enable individual features, you must call extension methods on the <bpt id="p1">**</bpt>MobileAppConfiguration<ept id="p1">**</ept> object before calling <bpt id="p2">**</bpt>ApplyTo<ept id="p2">**</ept>.</source>
          <target state="new">To enable individual features, you must call extension methods on the <bpt id="p1">**</bpt>MobileAppConfiguration<ept id="p1">**</ept> object before calling <bpt id="p2">**</bpt>ApplyTo<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, the following code adds the default routes to all API controllers during initialization:</source>
          <target state="new">For example, the following code adds the default routes to all API controllers during initialization:</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Many of the feature extension methods are available via additional NuGet packages you can include, which are described in the section below.</source>
          <target state="new">Many of the feature extension methods are available via additional NuGet packages you can include, which are described in the section below.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>SDK extensions</source>
          <target state="new">SDK extensions</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following NuGet-based extension packages provide various mobile features that can be used by your application.</source>
          <target state="new">The following NuGet-based extension packages provide various mobile features that can be used by your application.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You enable extensions during initialization by using the <bpt id="p1">**</bpt>MobileAppConfiguration<ept id="p1">**</ept> object.</source>
          <target state="new">You enable extensions during initialization by using the <bpt id="p1">**</bpt>MobileAppConfiguration<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Quickstart]</ept>  
   Supports the basic Mobile Apps setup.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Quickstart]</ept>  
   Supports the basic Mobile Apps setup.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Added to the configuration by calling the <bpt id="p1">**</bpt>UseDefaultConfiguration<ept id="p1">**</ept> extension method during initialization.</source>
          <target state="new">Added to the configuration by calling the <bpt id="p1">**</bpt>UseDefaultConfiguration<ept id="p1">**</ept> extension method during initialization.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This extension includes following extensions: Notifications, Authentication, Entity, Tables, Crossdomain and Home packages.</source>
          <target state="new">This extension includes following extensions: Notifications, Authentication, Entity, Tables, Crossdomain and Home packages.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This is equivalent to the quickstart server project that you download from the Azure portal.</source>
          <target state="new">This is equivalent to the quickstart server project that you download from the Azure portal.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.Azure.Mobile.Server.Home<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.Mobile.Server.Home/)</ept><ph id="ph1"> </ph></source>
          <target state="new"><bpt id="p1">[</bpt>Microsoft.Azure.Mobile.Server.Home<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.Mobile.Server.Home/)</ept><ph id="ph1"> </ph></target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Adds a simple home page to the web site root.</source>
          <target state="new">Adds a simple home page to the web site root.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Add to the configuration by calling the <bpt id="p1">**</bpt>AddMobileAppHomeController<ept id="p1">**</ept> extension method.</source>
          <target state="new">Add to the configuration by calling the <bpt id="p1">**</bpt>AddMobileAppHomeController<ept id="p1">**</ept> extension method.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.Azure.Mobile.Server.Tables<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.Mobile.Server.Tables/)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Microsoft.Azure.Mobile.Server.Tables<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.Mobile.Server.Tables/)</ept></target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>includes classes for working with data and sets-up the data pipeline.</source>
          <target state="new">includes classes for working with data and sets-up the data pipeline.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Add to the configuration by calling the <bpt id="p1">**</bpt>AddTables<ept id="p1">**</ept> extension method.</source>
          <target state="new">Add to the configuration by calling the <bpt id="p1">**</bpt>AddTables<ept id="p1">**</ept> extension method.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.Azure.Mobile.Server.Entity<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.Mobile.Server.Entity/)</ept><ph id="ph1"> </ph></source>
          <target state="new"><bpt id="p1">[</bpt>Microsoft.Azure.Mobile.Server.Entity<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.Mobile.Server.Entity/)</ept><ph id="ph1"> </ph></target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Enables the Entity Framework to access data in the SQL Database.</source>
          <target state="new">Enables the Entity Framework to access data in the SQL Database.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Add to the configuration by calling the <bpt id="p1">**</bpt>AddTablesWithEntityFramework<ept id="p1">**</ept> extension method.</source>
          <target state="new">Add to the configuration by calling the <bpt id="p1">**</bpt>AddTablesWithEntityFramework<ept id="p1">**</ept> extension method.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Authentication]</ept>  
  Enables authentication and sets-up the OWIN middleware used to validate tokens.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Authentication]</ept>  
  Enables authentication and sets-up the OWIN middleware used to validate tokens.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Add to the configuration by calling the <bpt id="p1">**</bpt>AddAppServiceAuthentication<ept id="p1">**</ept> and <bpt id="p2">**</bpt>IAppBuilder<ept id="p2">**</ept>.<bpt id="p3">**</bpt>UseMobileAppAuthentication<ept id="p3">**</ept> extension methods.</source>
          <target state="new">Add to the configuration by calling the <bpt id="p1">**</bpt>AddAppServiceAuthentication<ept id="p1">**</ept> and <bpt id="p2">**</bpt>IAppBuilder<ept id="p2">**</ept>.<bpt id="p3">**</bpt>UseMobileAppAuthentication<ept id="p3">**</ept> extension methods.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Notifications]</ept>
  Enables push notifications and defines a push registration endpoint.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Notifications]</ept>
  Enables push notifications and defines a push registration endpoint.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Add to the configuration by calling the <bpt id="p1">**</bpt>AddPushNotifications<ept id="p1">**</ept> extension method.</source>
          <target state="new">Add to the configuration by calling the <bpt id="p1">**</bpt>AddPushNotifications<ept id="p1">**</ept> extension method.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.Azure.Mobile.Server.CrossDomain<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.Mobile.Server.CrossDomain/)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Microsoft.Azure.Mobile.Server.CrossDomain<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.Mobile.Server.CrossDomain/)</ept></target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Creates a controller that serves data to legacy web browsers from your Mobile App.</source>
          <target state="new">Creates a controller that serves data to legacy web browsers from your Mobile App.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Add to the configuration by calling the <bpt id="p1">**</bpt>MapLegacyCrossDomainController<ept id="p1">**</ept> extension method.</source>
          <target state="new">Add to the configuration by calling the <bpt id="p1">**</bpt>MapLegacyCrossDomainController<ept id="p1">**</ept> extension method.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>How to: Define a custom API controller</source>
          <target state="new">How to: Define a custom API controller</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The custom API controller provides the most basic functionality to your Mobile App backend by exposing an endpoint.</source>
          <target state="new">The custom API controller provides the most basic functionality to your Mobile App backend by exposing an endpoint.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The Custom API controller</source>
          <target state="new">The Custom API controller</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right-click the Controllers folder, then click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Controller<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Web API 2 Controller&amp;mdash;Empty<ept id="p3">**</ept> and click <bpt id="p4">**</bpt>Add<ept id="p4">**</ept>.</source>
          <target state="new">In Visual Studio, right-click the Controllers folder, then click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Controller<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Web API 2 Controller&amp;mdash;Empty<ept id="p3">**</ept> and click <bpt id="p4">**</bpt>Add<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Supply a <bpt id="p1">**</bpt>Controller name<ept id="p1">**</ept>, such as <ph id="ph1">`CustomController`</ph>, and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</source>
          <target state="new">Supply a <bpt id="p1">**</bpt>Controller name<ept id="p1">**</ept>, such as <ph id="ph1">`CustomController`</ph>, and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This creates a new <bpt id="p1">**</bpt>CustomController<ept id="p1">**</ept> class that inherits from <bpt id="p2">**</bpt>ApiController<ept id="p2">**</ept>.</source>
          <target state="new">This creates a new <bpt id="p1">**</bpt>CustomController<ept id="p1">**</ept> class that inherits from <bpt id="p2">**</bpt>ApiController<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the new controller class file, add the following using statement:</source>
          <target state="new">In the new controller class file, add the following using statement:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Apply the <bpt id="p1">**</bpt>MobileAppControllerAttribute<ept id="p1">**</ept> to the API controller class definition, as in the following example:</source>
          <target state="new">Apply the <bpt id="p1">**</bpt>MobileAppControllerAttribute<ept id="p1">**</ept> to the API controller class definition, as in the following example:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Browse to the App_Startup folder, open the WebApiConfig.cs project file and add a call to the  <bpt id="p1">**</bpt>MapApiControllers<ept id="p1">**</ept> extension method, as in the following example:</source>
          <target state="new">Browse to the App_Startup folder, open the WebApiConfig.cs project file and add a call to the  <bpt id="p1">**</bpt>MapApiControllers<ept id="p1">**</ept> extension method, as in the following example:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Note that you do not need to call <bpt id="p1">**</bpt>MapApiControllers<ept id="p1">**</ept> when you call <bpt id="p2">**</bpt>UseDefaultConfiguration<ept id="p2">**</ept>, which initializes all features.</source>
          <target state="new">Note that you do not need to call <bpt id="p1">**</bpt>MapApiControllers<ept id="p1">**</ept> when you call <bpt id="p2">**</bpt>UseDefaultConfiguration<ept id="p2">**</ept>, which initializes all features.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Any controller that does not have <bpt id="p1">**</bpt>MobileAppControllerAttribute<ept id="p1">**</ept> applied can still be accessed by clients, but it will not be correctly consumed by clients using any Mobile App client SDK.</source>
          <target state="new">Any controller that does not have <bpt id="p1">**</bpt>MobileAppControllerAttribute<ept id="p1">**</ept> applied can still be accessed by clients, but it will not be correctly consumed by clients using any Mobile App client SDK.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>How to: Define a table controller</source>
          <target state="new">How to: Define a table controller</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A table controller provides access to entity data in a table-based data store, such as SQL Database or Azure Table storage.</source>
          <target state="new">A table controller provides access to entity data in a table-based data store, such as SQL Database or Azure Table storage.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Table controllers inherit from the <bpt id="p1">**</bpt>TableController<ept id="p1">**</ept> generic class, where the generic type is an entity in the model that represents the table schema, as follows:</source>
          <target state="new">Table controllers inherit from the <bpt id="p1">**</bpt>TableController<ept id="p1">**</ept> generic class, where the generic type is an entity in the model that represents the table schema, as follows:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Table controllers are initialized by using the <bpt id="p1">**</bpt>AddTables<ept id="p1">**</ept> extension method.</source>
          <target state="new">Table controllers are initialized by using the <bpt id="p1">**</bpt>AddTables<ept id="p1">**</ept> extension method.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The following example initializes a table controller that uses Entity Framework for data access:</source>
          <target state="new">The following example initializes a table controller that uses Entity Framework for data access:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For an example of a table controller that uses Entity Framework to access data from an Azure SQL Database, see the <bpt id="p1">**</bpt>TodoItemController<ept id="p1">**</ept> class in the quickstart server project download from the Azure portal.</source>
          <target state="new">For an example of a table controller that uses Entity Framework to access data from an Azure SQL Database, see the <bpt id="p1">**</bpt>TodoItemController<ept id="p1">**</ept> class in the quickstart server project download from the Azure portal.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>How to: Add authentication to a server project</source>
          <target state="new">How to: Add authentication to a server project</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can add authentication to your server project by extending the <bpt id="p1">**</bpt>MobileAppConfiguration<ept id="p1">**</ept> object and configuring OWIN middleware.</source>
          <target state="new">You can add authentication to your server project by extending the <bpt id="p1">**</bpt>MobileAppConfiguration<ept id="p1">**</ept> object and configuring OWIN middleware.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When you install the <bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Quickstart]</ept> package and call the <bpt id="p2">**</bpt>UseDefaultConfiguration<ept id="p2">**</ept> extension method, you can skip to step 4.</source>
          <target state="new">When you install the <bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Quickstart]</ept> package and call the <bpt id="p2">**</bpt>UseDefaultConfiguration<ept id="p2">**</ept> extension method, you can skip to step 4.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In Visual Studio, install the <bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Authentication]</ept> package.</source>
          <target state="new">In Visual Studio, install the <bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Authentication]</ept> package.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Browse to the App_Startup folder, open the WebApiConfig.cs project file and add a call to the <bpt id="p1">**</bpt>AddAppServiceAuthentication<ept id="p1">**</ept> extension method during initialization, which looks like the following:</source>
          <target state="new">Browse to the App_Startup folder, open the WebApiConfig.cs project file and add a call to the <bpt id="p1">**</bpt>AddAppServiceAuthentication<ept id="p1">**</ept> extension method during initialization, which looks like the following:</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In the Startup.cs project file,aAdd the following line of code at the beginning of the <bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> method:</source>
          <target state="new">In the Startup.cs project file,aAdd the following line of code at the beginning of the <bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> method:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This adds the OWIN middleware component that enables your Azure Mobile App to validate tokens issued by the associated App Service gateway.</source>
          <target state="new">This adds the OWIN middleware component that enables your Azure Mobile App to validate tokens issued by the associated App Service gateway.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Add the <ph id="ph1">`[Authorize]`</ph> attribute to any controller or method that requires authentication.</source>
          <target state="new">Add the <ph id="ph1">`[Authorize]`</ph> attribute to any controller or method that requires authentication.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Users must now be authenticated to access that endpoint or those a specific APIs.</source>
          <target state="new">Users must now be authenticated to access that endpoint or those a specific APIs.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To learn about how to authenticate clients to your Mobile Apps backend, see <bpt id="p1">[</bpt>Add authentication to your app<ept id="p1">](app-service-mobile-dotnet-backend-ios-get-started-users-preview.md)</ept>.</source>
          <target state="new">To learn about how to authenticate clients to your Mobile Apps backend, see <bpt id="p1">[</bpt>Add authentication to your app<ept id="p1">](app-service-mobile-dotnet-backend-ios-get-started-users-preview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>How to: Add push notifications to a server project</source>
          <target state="new">How to: Add push notifications to a server project</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can add push notifications to your server project by extending the <bpt id="p1">**</bpt>MobileAppConfiguration<ept id="p1">**</ept> object and creating a Notification Hubs client.</source>
          <target state="new">You can add push notifications to your server project by extending the <bpt id="p1">**</bpt>MobileAppConfiguration<ept id="p1">**</ept> object and creating a Notification Hubs client.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When you install the <bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Quickstart]</ept> package and call the <bpt id="p2">**</bpt>UseDefaultConfiguration<ept id="p2">**</ept> extension method, you can skip down to step 3.</source>
          <target state="new">When you install the <bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Quickstart]</ept> package and call the <bpt id="p2">**</bpt>UseDefaultConfiguration<ept id="p2">**</ept> extension method, you can skip down to step 3.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right-click the server project and click <bpt id="p1">**</bpt>Manage NuGet Packages<ept id="p1">**</ept>, search for Microsoft.Azure.Mobile.Server.Notifications`, then click <bpt id="p2">**</bpt>Install<ept id="p2">**</ept>.</source>
          <target state="new">In Visual Studio, right-click the server project and click <bpt id="p1">**</bpt>Manage NuGet Packages<ept id="p1">**</ept>, search for Microsoft.Azure.Mobile.Server.Notifications`, then click <bpt id="p2">**</bpt>Install<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This installs the <bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Notifications]</ept> package.</source>
          <target state="new">This installs the <bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Notifications]</ept> package.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Repeat this step to install the <ph id="ph1">`Microsoft.Azure.NotificationHubs`</ph> package, which includes the Notification Hubs client library.</source>
          <target state="new">Repeat this step to install the <ph id="ph1">`Microsoft.Azure.NotificationHubs`</ph> package, which includes the Notification Hubs client library.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Browse to the App_Startup folder, open the WebApiConfig.cs project file and add a call to the <bpt id="p1">**</bpt>AddPushNotifications<ept id="p1">**</ept> extension method during initialization, which looks like the following:</source>
          <target state="new">Browse to the App_Startup folder, open the WebApiConfig.cs project file and add a call to the <bpt id="p1">**</bpt>AddPushNotifications<ept id="p1">**</ept> extension method during initialization, which looks like the following:</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This creates the push notification registration endpoint in your server project.</source>
          <target state="new">This creates the push notification registration endpoint in your server project.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This endpoint is used by clients to register with the associated notification hub.</source>
          <target state="new">This endpoint is used by clients to register with the associated notification hub.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Now you need to add the Notification Hub client that is used to send notifications.</source>
          <target state="new">Now you need to add the Notification Hub client that is used to send notifications.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In a controller from which you want to send push notifications, add the following using statement:</source>
          <target state="new">In a controller from which you want to send push notifications, add the following using statement:</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Add the following code that creates a Notification Hubs client:</source>
          <target state="new">Add the following code that creates a Notification Hubs client:</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>At this point, you can use the Notification Hubs client to send push notifications to registered devices.</source>
          <target state="new">At this point, you can use the Notification Hubs client to send push notifications to registered devices.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Add push notifications to your app<ept id="p1">](app-service-mobile-dotnet-backend-ios-get-started-push-preview.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Add push notifications to your app<ept id="p1">](app-service-mobile-dotnet-backend-ios-get-started-push-preview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To learn more about all that you can do with Notification Hubs, see <bpt id="p1">[</bpt>Notification Hubs Overview<ept id="p1">](../notification-hubs/notification-hubs-overview.md)</ept>.</source>
          <target state="new">To learn more about all that you can do with Notification Hubs, see <bpt id="p1">[</bpt>Notification Hubs Overview<ept id="p1">](../notification-hubs/notification-hubs-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>How to: Publishing the server project</source>
          <target state="new">How to: Publishing the server project</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use the following steps to publish your server project to Azure:</source>
          <target state="new">Use the following steps to publish your server project to Azure:</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46a8888ebf3469bae8f4880a82617f830cc43ef1</xliffext:olfilehash>
  </header>
</xliff>