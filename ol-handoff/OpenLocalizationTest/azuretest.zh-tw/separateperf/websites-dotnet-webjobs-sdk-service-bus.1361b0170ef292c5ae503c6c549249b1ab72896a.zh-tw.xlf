<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to use Azure Service Bus with the WebJobs SDK</source>
          <target state="new">How to use Azure Service Bus with the WebJobs SDK</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Azure Service Bus queues and topics with the WebJobs SDK.</source>
          <target state="new">Learn how to use Azure Service Bus queues and topics with the WebJobs SDK.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to use Azure Service Bus with the WebJobs SDK</source>
          <target state="new">How to use Azure Service Bus with the WebJobs SDK</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This guide provides C# code samples that show how to trigger a process when an Azure blob is created or updated.</source>
          <target state="new">This guide provides C# code samples that show how to trigger a process when an Azure blob is created or updated.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The code samples use <bpt id="p1">[</bpt>WebJobs SDK<ept id="p1">](websites-dotnet-webjobs-sdk.md)</ept> version 1.x.</source>
          <target state="new">The code samples use <bpt id="p1">[</bpt>WebJobs SDK<ept id="p1">](websites-dotnet-webjobs-sdk.md)</ept> version 1.x.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The guide assumes you know <bpt id="p1">[</bpt>how to create a WebJob project in Visual Studio with connection strings that point to your storage account<ept id="p1">](websites-dotnet-webjobs-sdk-get-started.md)</ept>.</source>
          <target state="new">The guide assumes you know <bpt id="p1">[</bpt>how to create a WebJob project in Visual Studio with connection strings that point to your storage account<ept id="p1">](websites-dotnet-webjobs-sdk-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The code snippets only show functions, not the code that creates the <ph id="ph1">`JobHost`</ph> object as in this example:</source>
          <target state="new">The code snippets only show functions, not the code that creates the <ph id="ph1">`JobHost`</ph> object as in this example:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="prerequisites"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Prerequisites</source>
          <target state="new"><ph id="ph1">&lt;a id="prerequisites"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Prerequisites</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To work with Service Bus you have to install the <bpt id="p1">[</bpt>Microsoft.Azure.WebJobs.ServiceBus<ept id="p1">](https://www.nuget.org/packages/Microsoft.Azure.WebJobs.ServiceBus/)</ept> NuGet package in addition to the other WebJobs SDK packages.</source>
          <target state="new">To work with Service Bus you have to install the <bpt id="p1">[</bpt>Microsoft.Azure.WebJobs.ServiceBus<ept id="p1">](https://www.nuget.org/packages/Microsoft.Azure.WebJobs.ServiceBus/)</ept> NuGet package in addition to the other WebJobs SDK packages.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You also have to set the AzureWebJobsServiceBus connection string in addition to the storage connection strings.</source>
          <target state="new">You also have to set the AzureWebJobsServiceBus connection string in addition to the storage connection strings.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can do this in the <ph id="ph1">`connectionStrings`</ph> section of the App.config file, as shown in the following example:</source>
          <target state="new">You can do this in the <ph id="ph1">`connectionStrings`</ph> section of the App.config file, as shown in the following example:</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For a sample project that includes the Service Bus connection string setting in the App.config file, see <bpt id="p1">[</bpt>Service Bus example<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk-samples/tree/master/BasicSamples/ServiceBus)</ept>.</source>
          <target state="new">For a sample project that includes the Service Bus connection string setting in the App.config file, see <bpt id="p1">[</bpt>Service Bus example<ept id="p1">](https://github.com/Azure/azure-webjobs-sdk-samples/tree/master/BasicSamples/ServiceBus)</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The connection strings can also be set in the Azure runtime environment, which then overrides the App.config settings when the WebJob runs in Azure; for more information, see <bpt id="p1">[</bpt>Get Started with the WebJobs SDK<ept id="p1">](websites-dotnet-webjobs-sdk-get-started.md#configure-the-web-app-to-use-your-azure-sql-database-and-storage-account)</ept>.</source>
          <target state="new">The connection strings can also be set in the Azure runtime environment, which then overrides the App.config settings when the WebJob runs in Azure; for more information, see <bpt id="p1">[</bpt>Get Started with the WebJobs SDK<ept id="p1">](websites-dotnet-webjobs-sdk-get-started.md#configure-the-web-app-to-use-your-azure-sql-database-and-storage-account)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="trigger"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> How to trigger a function when a Service Bus queue message is received</source>
          <target state="new"><ph id="ph1">&lt;a id="trigger"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> How to trigger a function when a Service Bus queue message is received</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To write a function that the WebJobs SDK calls when a queue message is received, use the <ph id="ph1">`ServiceBusTrigger`</ph> attribute.</source>
          <target state="new">To write a function that the WebJobs SDK calls when a queue message is received, use the <ph id="ph1">`ServiceBusTrigger`</ph> attribute.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The attribute constructor takes a parameter that specifies the name of the queue to poll.</source>
          <target state="new">The attribute constructor takes a parameter that specifies the name of the queue to poll.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>How ServicebusTrigger works</source>
          <target state="new">How ServicebusTrigger works</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The SDK receives a message in <ph id="ph1">`PeekLock`</ph> mode and calls <ph id="ph2">`Complete`</ph> on the message if the function finishes successfully, or calls <ph id="ph3">`Abandon`</ph> if the function fails.</source>
          <target state="new">The SDK receives a message in <ph id="ph1">`PeekLock`</ph> mode and calls <ph id="ph2">`Complete`</ph> on the message if the function finishes successfully, or calls <ph id="ph3">`Abandon`</ph> if the function fails.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the function runs longer than the <ph id="ph1">`PeekLock`</ph> timeout, the lock is automatically renewed.</source>
          <target state="new">If the function runs longer than the <ph id="ph1">`PeekLock`</ph> timeout, the lock is automatically renewed.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Serice Bus does its own poison queue handling, so that is neither controlled by, nor configurable in, the WebJobs SDK.</source>
          <target state="new">Serice Bus does its own poison queue handling, so that is neither controlled by, nor configurable in, the WebJobs SDK.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>String queue message</source>
          <target state="new">String queue message</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following code sample reads a queue message that contains a string and writes the string to the WebJobs SDK dashboard.</source>
          <target state="new">The following code sample reads a queue message that contains a string and writes the string to the WebJobs SDK dashboard.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> If you are creating the queue messages in an application that doesn't use the WebJobs SDK, make sure to set <bpt id="p2">[</bpt>BrokeredMessage.ContentType<ept id="p2">](http://msdn.microsoft.com/library/microsoft.servicebus.messaging.brokeredmessage.contenttype.aspx)</ept> to "text/plain".</source>
          <target state="new"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> If you are creating the queue messages in an application that doesn't use the WebJobs SDK, make sure to set <bpt id="p2">[</bpt>BrokeredMessage.ContentType<ept id="p2">](http://msdn.microsoft.com/library/microsoft.servicebus.messaging.brokeredmessage.contenttype.aspx)</ept> to "text/plain".</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>POCO queue message</source>
          <target state="new">POCO queue message</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The SDK will automatically deserialize a queue message that contains JSON for a POCO <bpt id="p1">[</bpt>(Plain Old CLR Object<ept id="p1">](http://en.wikipedia.org/wiki/Plain_Old_CLR_Object)</ept>) type.</source>
          <target state="new">The SDK will automatically deserialize a queue message that contains JSON for a POCO <bpt id="p1">[</bpt>(Plain Old CLR Object<ept id="p1">](http://en.wikipedia.org/wiki/Plain_Old_CLR_Object)</ept>) type.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following code sample reads a queue message that contains a <ph id="ph1">`BlobInformation`</ph> object which has a <ph id="ph2">`BlobName`</ph> property:</source>
          <target state="new">The following code sample reads a queue message that contains a <ph id="ph1">`BlobInformation`</ph> object which has a <ph id="ph2">`BlobName`</ph> property:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For code samples showing how to use properties of the POCO to work with blobs and tables in the same function, see the <bpt id="p1">[</bpt>storage queues version of this article<ept id="p1">](websites-dotnet-webjobs-sdk-storage-queues-how-to.md#pocoblobs)</ept>.</source>
          <target state="new">For code samples showing how to use properties of the POCO to work with blobs and tables in the same function, see the <bpt id="p1">[</bpt>storage queues version of this article<ept id="p1">](websites-dotnet-webjobs-sdk-storage-queues-how-to.md#pocoblobs)</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If your code that creates the queue message doesn't use the WebJobs SDK, use code similar to the following example:</source>
          <target state="new">If your code that creates the queue message doesn't use the WebJobs SDK, use code similar to the following example:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Types ServiceBusTrigger works with</source>
          <target state="new">Types ServiceBusTrigger works with</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Besides <ph id="ph1">`string`</ph> and POCO  types, you can use the <ph id="ph2">`ServiceBusTrigger`</ph> attribute with a byte array or a <ph id="ph3">`BrokeredMessage`</ph> object.</source>
          <target state="new">Besides <ph id="ph1">`string`</ph> and POCO  types, you can use the <ph id="ph2">`ServiceBusTrigger`</ph> attribute with a byte array or a <ph id="ph3">`BrokeredMessage`</ph> object.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="create"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> How to create Service Bus queue messages</source>
          <target state="new"><ph id="ph1">&lt;a id="create"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> How to create Service Bus queue messages</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To write a function that creates a new queue message use the <ph id="ph1">`ServiceBus`</ph> attribute and pass in the queue name to the attribute constructor.</source>
          <target state="new">To write a function that creates a new queue message use the <ph id="ph1">`ServiceBus`</ph> attribute and pass in the queue name to the attribute constructor.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Create a single queue message in a non-async function</source>
          <target state="new">Create a single queue message in a non-async function</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following code sample uses an output parameter to create a new message in the queue named "outputqueue" with the same content as the message received in the queue named "inputqueue".</source>
          <target state="new">The following code sample uses an output parameter to create a new message in the queue named "outputqueue" with the same content as the message received in the queue named "inputqueue".</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The output parameter for creating a single queue message can be any of the following types:</source>
          <target state="new">The output parameter for creating a single queue message can be any of the following types:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A serializable POCO type that you define.</source>
          <target state="new">A serializable POCO type that you define.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Automatically serialized as JSON.</source>
          <target state="new">Automatically serialized as JSON.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For POCO type parameters, a queue message is always created when the function ends; if the parameter is null, the SDK creates a queue message that will return null when the message is received and deserialized.</source>
          <target state="new">For POCO type parameters, a queue message is always created when the function ends; if the parameter is null, the SDK creates a queue message that will return null when the message is received and deserialized.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For the other types, if the parameter is null no queue message is created.</source>
          <target state="new">For the other types, if the parameter is null no queue message is created.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Create multiple queue messages or in async functions</source>
          <target state="new">Create multiple queue messages or in async functions</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To create multiple messages, use  the <ph id="ph1">`ServiceBus`</ph> attribute with <ph id="ph2">`ICollector&lt;T&gt;`</ph> or <ph id="ph3">`IAsyncCollector&lt;T&gt;`</ph>, as shown in the following code sample:</source>
          <target state="new">To create multiple messages, use  the <ph id="ph1">`ServiceBus`</ph> attribute with <ph id="ph2">`ICollector&lt;T&gt;`</ph> or <ph id="ph3">`IAsyncCollector&lt;T&gt;`</ph>, as shown in the following code sample:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Each queue message is created immediately when the <ph id="ph1">`Add`</ph> method is called.</source>
          <target state="new">Each queue message is created immediately when the <ph id="ph1">`Add`</ph> method is called.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="topics"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to work with Service Bus topics</source>
          <target state="new"><ph id="ph1">&lt;a id="topics"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to work with Service Bus topics</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To write a function that the SDK calls when a message is received on a Service Bus topic, use the <ph id="ph1">`ServiceBusTrigger`</ph> attribute with the constructor that takes topic name and subscription name, as shown in the following code sample:</source>
          <target state="new">To write a function that the SDK calls when a message is received on a Service Bus topic, use the <ph id="ph1">`ServiceBusTrigger`</ph> attribute with the constructor that takes topic name and subscription name, as shown in the following code sample:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To create a message on a topic, use the <ph id="ph1">`ServiceBus`</ph> attribute with a topic name the same way you use it with a queue name.</source>
          <target state="new">To create a message on a topic, use the <ph id="ph1">`ServiceBus`</ph> attribute with a topic name the same way you use it with a queue name.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="queues"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Related topics covered by the storage queues how-to article</source>
          <target state="new"><ph id="ph1">&lt;a id="queues"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Related topics covered by the storage queues how-to article</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For information about WebJobs SDK scenarios not specific to Service Bus, see <bpt id="p1">[</bpt>How to use Azure queue storage with the WebJobs SDK<ept id="p1">](websites-dotnet-webjobs-sdk-storage-queues-how-to.md)</ept>.</source>
          <target state="new">For information about WebJobs SDK scenarios not specific to Service Bus, see <bpt id="p1">[</bpt>How to use Azure queue storage with the WebJobs SDK<ept id="p1">](websites-dotnet-webjobs-sdk-storage-queues-how-to.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Topics covered in that article include the following:</source>
          <target state="new">Topics covered in that article include the following:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Async functions</source>
          <target state="new">Async functions</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Multiple instances</source>
          <target state="new">Multiple instances</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Graceful shutdown</source>
          <target state="new">Graceful shutdown</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Use WebJobs SDK attributes in the body of a function</source>
          <target state="new">Use WebJobs SDK attributes in the body of a function</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Set the SDK connection strings in code</source>
          <target state="new">Set the SDK connection strings in code</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Set values for WebJobs SDK constructor parameters in code</source>
          <target state="new">Set values for WebJobs SDK constructor parameters in code</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Trigger a function manually</source>
          <target state="new">Trigger a function manually</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Write logs</source>
          <target state="new">Write logs</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="nextsteps"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Next steps</source>
          <target state="new"><ph id="ph1">&lt;a id="nextsteps"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Next steps</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This guide has provided code samples that show how to handle common scenarios for working with Azure Service Bus.</source>
          <target state="new">This guide has provided code samples that show how to handle common scenarios for working with Azure Service Bus.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information about how to use Azure WebJobs and the WebJobs SDK, see <bpt id="p1">[</bpt>Azure WebJobs Recommended Resources<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=390226)</ept>.</source>
          <target state="new">For more information about how to use Azure WebJobs and the WebJobs SDK, see <bpt id="p1">[</bpt>Azure WebJobs Recommended Resources<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=390226)</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f3d5f0f7ac03d097f1b82123179af1c386405a4</xliffext:olfilehash>
  </header>
</xliff>