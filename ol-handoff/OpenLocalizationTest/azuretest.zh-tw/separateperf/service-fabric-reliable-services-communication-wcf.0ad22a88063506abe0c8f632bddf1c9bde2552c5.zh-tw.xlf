<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WCF based Communication stack provided by Reliable Services API</source>
          <target state="new">WCF based Communication stack provided by Reliable Services API</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This article describes the WCF based communication stack provided by the Reliable Service's api.</source>
          <target state="new">This article describes the WCF based communication stack provided by the Reliable Service's api.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>WCF based communication stack for Reliable Services</source>
          <target state="new">WCF based communication stack for Reliable Services</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Reliable services framework allows Service authors to decide the communication stack they want to use for their service.</source>
          <target state="new">Reliable services framework allows Service authors to decide the communication stack they want to use for their service.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>They can plugin the communication stack of their choice via the <ph id="ph1">`ICommunicationListener`</ph> returned from the <bpt id="p1">[</bpt><ph id="ph2">`CreateCommunicationListener`</ph><ept id="p1">](../service-fabric-reliable-service-communication.md)</ept> method.</source>
          <target state="new">They can plugin the communication stack of their choice via the <ph id="ph1">`ICommunicationListener`</ph> returned from the <bpt id="p1">[</bpt><ph id="ph2">`CreateCommunicationListener`</ph><ept id="p1">](../service-fabric-reliable-service-communication.md)</ept> method.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The framework provides a WCF based implementation of the communication stack, for service authors who want to use WCF based communication.</source>
          <target state="new">The framework provides a WCF based implementation of the communication stack, for service authors who want to use WCF based communication.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>WCF Communication Listener</source>
          <target state="new">WCF Communication Listener</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The WCF specific implementation of <ph id="ph1">`ICommunicationListener`</ph> is provided by the <ph id="ph2">`WcfCommunicationListener`</ph> class.</source>
          <target state="new">The WCF specific implementation of <ph id="ph1">`ICommunicationListener`</ph> is provided by the <ph id="ph2">`WcfCommunicationListener`</ph> class.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Writing clients for WCF communication stack</source>
          <target state="new">Writing clients for WCF communication stack</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For writing clients to communicate with services using WCF, the framework provides <ph id="ph1">`WcfClientCommunicationFactory`</ph>, which is the WCF specific implementation of <bpt id="p1">[</bpt><ph id="ph2">`ClientCommunicationFactoryBase`</ph><ept id="p1">](../service-fabric-reliable-service-communication.md)</ept>.</source>
          <target state="new">For writing clients to communicate with services using WCF, the framework provides <ph id="ph1">`WcfClientCommunicationFactory`</ph>, which is the WCF specific implementation of <bpt id="p1">[</bpt><ph id="ph2">`ClientCommunicationFactoryBase`</ph><ept id="p1">](../service-fabric-reliable-service-communication.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The WCF communication channel can be accessed from the <ph id="ph1">`WcfCommunicationClient`</ph> created by the <ph id="ph2">`WcfCommunicationClientFactory`</ph></source>
          <target state="new">The WCF communication channel can be accessed from the <ph id="ph1">`WcfCommunicationClient`</ph> created by the <ph id="ph2">`WcfCommunicationClientFactory`</ph></target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Client code can use the <ph id="ph1">`WcfCommunicationClientFactory`</ph> along with the <ph id="ph2">`ServicePartitionClient`</ph> to determine the service endpoint and make communicate with the service.</source>
          <target state="new">Client code can use the <ph id="ph1">`WcfCommunicationClientFactory`</ph> along with the <ph id="ph2">`ServicePartitionClient`</ph> to determine the service endpoint and make communicate with the service.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">782f8a7a6bc1c8ceefa889f9ca0282958e93223a</xliffext:olfilehash>
  </header>
</xliff>