<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>On-premises application with blob storage (Java) | Microsoft Azure</source>
          <target state="new">On-premises application with blob storage (Java) | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to create a console application that uploads an image to Azure, and then displays the image in your browser.</source>
          <target state="new">Learn how to create a console application that uploads an image to Azure, and then displays the image in your browser.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Code samples in Java.</source>
          <target state="new">Code samples in Java.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>On-premises application with blob storage</source>
          <target state="new">On-premises application with blob storage</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following example shows you how you can use Azure storage to</source>
          <target state="new">The following example shows you how you can use Azure storage to</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>store images in Azure.</source>
          <target state="new">store images in Azure.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The code in this article is for a console</source>
          <target state="new">The code in this article is for a console</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>application that uploads an image to Azure, and then creates an</source>
          <target state="new">application that uploads an image to Azure, and then creates an</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>HTML file that displays the image in your browser.</source>
          <target state="new">HTML file that displays the image in your browser.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A Java Developer Kit (JDK), version 1.6 or later, is installed.</source>
          <target state="new">A Java Developer Kit (JDK), version 1.6 or later, is installed.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Azure SDK is installed.</source>
          <target state="new">The Azure SDK is installed.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The JAR for the Azure Libraries for Java, and any applicable</source>
          <target state="new">The JAR for the Azure Libraries for Java, and any applicable</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>dependency JARs, are installed and are in the build path used by</source>
          <target state="new">dependency JARs, are installed and are in the build path used by</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>your Java compiler.</source>
          <target state="new">your Java compiler.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For information about installing the Azure Libraries for Java, see <bpt id="p1">[</bpt>Download the
  Azure SDK for Java<ept id="p1">][]</ept>.</source>
          <target state="new">For information about installing the Azure Libraries for Java, see <bpt id="p1">[</bpt>Download the
  Azure SDK for Java<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An Azure storage account has been set up.</source>
          <target state="new">An Azure storage account has been set up.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The account name</source>
          <target state="new">The account name</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>and account key for the storage account will be used by the code</source>
          <target state="new">and account key for the storage account will be used by the code</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>in this article.</source>
          <target state="new">in this article.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt><ept id="p1">How to Create a Storage Account]</ept> for information about creating a storage account,</source>
          <target state="new">See <bpt id="p1">[</bpt><ept id="p1">How to Create a Storage Account]</ept> for information about creating a storage account,</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>and <bpt id="p1">[</bpt>How to Manage Storage Accounts<ept id="p1">][]</ept> for information about retrieving the</source>
          <target state="new">and <bpt id="p1">[</bpt>How to Manage Storage Accounts<ept id="p1">][]</ept> for information about retrieving the</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>account key.</source>
          <target state="new">account key.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You have created a local image file named stored at the path</source>
          <target state="new">You have created a local image file named stored at the path</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>c:\\myimages\\image1.jpg.</source>
          <target state="new">c:\\myimages\\image1.jpg.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Alternatively, modify the</source>
          <target state="new">Alternatively, modify the</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">  **</bpt>FileInputStream<ept id="p1">**</ept> constructor in the example to use a different</source>
          <target state="new"><bpt id="p1">  **</bpt>FileInputStream<ept id="p1">**</ept> constructor in the example to use a different</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>image path and file name.</source>
          <target state="new">image path and file name.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To use Azure blob storage to upload a file</source>
          <target state="new">To use Azure blob storage to upload a file</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A step-by-step procedure is presented here.</source>
          <target state="new">A step-by-step procedure is presented here.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you'd like to skip ahead,</source>
          <target state="new">If you'd like to skip ahead,</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>the entire code is presented later in this article.</source>
          <target state="new">the entire code is presented later in this article.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Begin the code by including imports for the Azure core storage</source>
          <target state="new">Begin the code by including imports for the Azure core storage</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>classes, the Azure blob client classes, the Java IO classes, and</source>
          <target state="new">classes, the Azure blob client classes, the Java IO classes, and</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>the <bpt id="p1">**</bpt>URISyntaxException<ept id="p1">**</ept> class.</source>
          <target state="new">the <bpt id="p1">**</bpt>URISyntaxException<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Declare a class named <bpt id="p1">**</bpt>StorageSample<ept id="p1">**</ept>, and include the open bracket,</source>
          <target state="new">Declare a class named <bpt id="p1">**</bpt>StorageSample<ept id="p1">**</ept>, and include the open bracket,</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>{<ept id="p1">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>{<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Within the <bpt id="p1">**</bpt>StorageSample<ept id="p1">**</ept> class, declare a string variable that will</source>
          <target state="new">Within the <bpt id="p1">**</bpt>StorageSample<ept id="p1">**</ept> class, declare a string variable that will</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>contain the default endpoint protocol, your storage account name, and</source>
          <target state="new">contain the default endpoint protocol, your storage account name, and</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>your storage access key, as specified in your Azure storage</source>
          <target state="new">your storage access key, as specified in your Azure storage</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>account.</source>
          <target state="new">account.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Replace the placeholder values <bpt id="p1">**</bpt>your\_account\_name<ept id="p1">**</ept> and</source>
          <target state="new">Replace the placeholder values <bpt id="p1">**</bpt>your\_account\_name<ept id="p1">**</ept> and</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>your\_account\_key<ept id="p1">**</ept> with your own account name and account key,</source>
          <target state="new"><bpt id="p1">**</bpt>your\_account\_key<ept id="p1">**</ept> with your own account name and account key,</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>respectively.</source>
          <target state="new">respectively.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Add in your declaration for <bpt id="p1">**</bpt>main<ept id="p1">**</ept>, include a <bpt id="p2">**</bpt>try<ept id="p2">**</ept> block, and</source>
          <target state="new">Add in your declaration for <bpt id="p1">**</bpt>main<ept id="p1">**</ept>, include a <bpt id="p2">**</bpt>try<ept id="p2">**</ept> block, and</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>include the necessary open brackets, <bpt id="p1">**</bpt>{<ept id="p1">**</ept>.</source>
          <target state="new">include the necessary open brackets, <bpt id="p1">**</bpt>{<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Declare variables of the following type (the descriptions are for how</source>
          <target state="new">Declare variables of the following type (the descriptions are for how</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>they are used in this example):</source>
          <target state="new">they are used in this example):</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CloudStorageAccount<ept id="p1">**</ept>: Used to initialize the account object with</source>
          <target state="new"><bpt id="p1">**</bpt>CloudStorageAccount<ept id="p1">**</ept>: Used to initialize the account object with</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>your Azure storage account name and key, and to create the</source>
          <target state="new">your Azure storage account name and key, and to create the</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>blob client object.</source>
          <target state="new">blob client object.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CloudBlobClient<ept id="p1">**</ept>: Used to access the blob service.</source>
          <target state="new"><bpt id="p1">**</bpt>CloudBlobClient<ept id="p1">**</ept>: Used to access the blob service.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CloudBlobContainer<ept id="p1">**</ept>: Used to create a blob container, list the</source>
          <target state="new"><bpt id="p1">**</bpt>CloudBlobContainer<ept id="p1">**</ept>: Used to create a blob container, list the</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>blobs in the container, and delete the container.</source>
          <target state="new">blobs in the container, and delete the container.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CloudBlockBlob<ept id="p1">**</ept>: Used to upload a local image file to the</source>
          <target state="new"><bpt id="p1">**</bpt>CloudBlockBlob<ept id="p1">**</ept>: Used to upload a local image file to the</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>container.</source>
          <target state="new">container.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">

    CloudStorageAccount account;
    CloudBlobClient serviceClient;
    CloudBlobContainer container;
    CloudBlockBlob blob;</ph>

Assign a value to the <bpt id="p1">**</bpt>account<ept id="p1">**</ept> variable.</source>
          <target state="new"><ph id="ph1">

    CloudStorageAccount account;
    CloudBlobClient serviceClient;
    CloudBlobContainer container;
    CloudBlockBlob blob;</ph>

Assign a value to the <bpt id="p1">**</bpt>account<ept id="p1">**</ept> variable.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>account = CloudStorageAccount.parse(storageConnectionString);

Assign a value to the <bpt id="p1">**</bpt>serviceClient<ept id="p1">**</ept> variable.</source>
          <target state="new">account = CloudStorageAccount.parse(storageConnectionString);

Assign a value to the <bpt id="p1">**</bpt>serviceClient<ept id="p1">**</ept> variable.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>serviceClient = account.createCloudBlobClient();

Assign a value to the <bpt id="p1">**</bpt>container<ept id="p1">**</ept> variable.</source>
          <target state="new">serviceClient = account.createCloudBlobClient();

Assign a value to the <bpt id="p1">**</bpt>container<ept id="p1">**</ept> variable.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>We'll get a reference to a</source>
          <target state="new">We'll get a reference to a</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>container named <bpt id="p1">**</bpt>gettingstarted<ept id="p1">**</ept>.</source>
          <target state="new">container named <bpt id="p1">**</bpt>gettingstarted<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>// Container name must be lower case.</source>
          <target state="new">// Container name must be lower case.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>container = serviceClient.getContainerReference("gettingstarted");

Create the container.</source>
          <target state="new">container = serviceClient.getContainerReference("gettingstarted");

Create the container.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This method will create the container if it doesn't</source>
          <target state="new">This method will create the container if it doesn't</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>exist (and return <bpt id="p1">**</bpt>true<ept id="p1">**</ept>).</source>
          <target state="new">exist (and return <bpt id="p1">**</bpt>true<ept id="p1">**</ept>).</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If the container does exist, it will return</source>
          <target state="new">If the container does exist, it will return</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>false<ept id="p1">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>false<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An alternative to <bpt id="p1">**</bpt>createIfNotExists<ept id="p1">**</ept> is the <bpt id="p2">**</bpt>create<ept id="p2">**</ept></source>
          <target state="new">An alternative to <bpt id="p1">**</bpt>createIfNotExists<ept id="p1">**</ept> is the <bpt id="p2">**</bpt>create<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>method (which will return an error if the container already exists).</source>
          <target state="new">method (which will return an error if the container already exists).</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>container.createIfNotExists();

Set anonymous access for the container.</source>
          <target state="new">container.createIfNotExists();

Set anonymous access for the container.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>// Set anonymous access on the container.</source>
          <target state="new">// Set anonymous access on the container.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>BlobContainerPermissions containerPermissions;
    containerPermissions = new BlobContainerPermissions();
    containerPermissions.setPublicAccess(BlobContainerPublicAccessType.CONTAINER);
    container.uploadPermissions(containerPermissions);

Get a reference to the block blob, which will represent the blob in</source>
          <target state="new">BlobContainerPermissions containerPermissions;
    containerPermissions = new BlobContainerPermissions();
    containerPermissions.setPublicAccess(BlobContainerPublicAccessType.CONTAINER);
    container.uploadPermissions(containerPermissions);

Get a reference to the block blob, which will represent the blob in</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Azure storage.</source>
          <target state="new">Azure storage.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>blob = container.getBlockBlobReference("image1.jpg");

Use the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> constructor to get a reference to the locally created</source>
          <target state="new">blob = container.getBlockBlobReference("image1.jpg");

Use the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> constructor to get a reference to the locally created</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>file that you will upload.</source>
          <target state="new">file that you will upload.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Ensure you have created this file before</source>
          <target state="new">Ensure you have created this file before</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>running the code.</source>
          <target state="new">running the code.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>File fileReference = new File ("c:\\myimages\\image1.jpg");

Upload the local file through a call to the <bpt id="p1">**</bpt>CloudBlockBlob.upload<ept id="p1">**</ept></source>
          <target state="new">File fileReference = new File ("c:\\myimages\\image1.jpg");

Upload the local file through a call to the <bpt id="p1">**</bpt>CloudBlockBlob.upload<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>method.</source>
          <target state="new">method.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The first parameter to the <bpt id="p1">**</bpt>CloudBlockBlob.upload<ept id="p1">**</ept> method is a</source>
          <target state="new">The first parameter to the <bpt id="p1">**</bpt>CloudBlockBlob.upload<ept id="p1">**</ept> method is a</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FileInputStream<ept id="p1">**</ept> object that represents the local file that will be</source>
          <target state="new"><bpt id="p1">**</bpt>FileInputStream<ept id="p1">**</ept> object that represents the local file that will be</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>uploaded to Azure storage.</source>
          <target state="new">uploaded to Azure storage.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The second parameter is the size, in</source>
          <target state="new">The second parameter is the size, in</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>bytes, of the file.</source>
          <target state="new">bytes, of the file.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>blob.upload(new FileInputStream(fileReference), fileReference.length());

Call a helper function named <bpt id="p1">**</bpt>MakeHTMLPage<ept id="p1">**</ept>, to make a basic HTML page</source>
          <target state="new">blob.upload(new FileInputStream(fileReference), fileReference.length());

Call a helper function named <bpt id="p1">**</bpt>MakeHTMLPage<ept id="p1">**</ept>, to make a basic HTML page</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>that contains an <bpt id="p1">**</bpt>&amp;lt;image&amp;gt;<ept id="p1">**</ept> element with the source set to the blob that</source>
          <target state="new">that contains an <bpt id="p1">**</bpt>&amp;lt;image&amp;gt;<ept id="p1">**</ept> element with the source set to the blob that</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>is now in your Azure storage account.</source>
          <target state="new">is now in your Azure storage account.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The code for</source>
          <target state="new">The code for</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MakeHTMLPage<ept id="p1">**</ept> will be discussed later in this article.</source>
          <target state="new"><bpt id="p1">**</bpt>MakeHTMLPage<ept id="p1">**</ept> will be discussed later in this article.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>MakeHTMLPage(container);

Print out a status message and information about the created HTML page.</source>
          <target state="new">MakeHTMLPage(container);

Print out a status message and information about the created HTML page.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>System.out.println("Processing complete.");
    System.out.println("Open index.html to see the images stored in your storage account.");

Close the <bpt id="p1">**</bpt>try<ept id="p1">**</ept> block by inserting a close bracket: <bpt id="p2">**</bpt>}<ept id="p2">**</ept>

Handle the following exceptions:

<bpt id="p3">-   **</bpt>FileNotFoundException<ept id="p3">**</ept>: Can be thrown by the <bpt id="p4">**</bpt>FileInputStream<ept id="p4">**</ept></source>
          <target state="new">System.out.println("Processing complete.");
    System.out.println("Open index.html to see the images stored in your storage account.");

Close the <bpt id="p1">**</bpt>try<ept id="p1">**</ept> block by inserting a close bracket: <bpt id="p2">**</bpt>}<ept id="p2">**</ept>

Handle the following exceptions:

<bpt id="p3">-   **</bpt>FileNotFoundException<ept id="p3">**</ept>: Can be thrown by the <bpt id="p4">**</bpt>FileInputStream<ept id="p4">**</ept></target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">o</bpt>r **FileOutputSt<ept id="p1">re</ept><ph id="ph1">a</ph>m** construct<bpt id="p2">ors.
-   **</bpt>StorageException<ept id="p2">**</ept>: Can be thrown by the Azure client</source>
          <target state="new"><bpt id="p1">o</bpt>r **FileOutputSt<ept id="p1">re</ept><ph id="ph1">a</ph>m** construct<bpt id="p2">ors.
-   **</bpt>StorageException<ept id="p2">**</ept>: Can be thrown by the Azure client</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>storage libr<bpt id="p1">ary.
-   **</bpt>URISyntaxException<ept id="p1">**</ept>: Can be thrown by the <bpt id="p2">**</bpt>ListBlobItem.getUri<ept id="p2">**</ept></source>
          <target state="new">storage libr<bpt id="p1">ary.
-   **</bpt>URISyntaxException<ept id="p1">**</ept>: Can be thrown by the <bpt id="p2">**</bpt>ListBlobItem.getUri<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>met<bpt id="p1">hod.
-   **</bpt>Exception<ept id="p1">**</ept>: Generic exception handling.</source>
          <target state="new">met<bpt id="p1">hod.
-   **</bpt>Exception<ept id="p1">**</ept>: Generic exception handling.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Close <bpt id="p1">**</bpt>main<ept id="p1">**</ept> by inserting a close bracket: <bpt id="p2">**</bpt>}<ept id="p2">**</ept></source>
          <target state="new">Close <bpt id="p1">**</bpt>main<ept id="p1">**</ept> by inserting a close bracket: <bpt id="p2">**</bpt>}<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Create a method named <bpt id="p1">**</bpt>MakeHTMLPage<ept id="p1">**</ept> to create a basic HTML page.</source>
          <target state="new">Create a method named <bpt id="p1">**</bpt>MakeHTMLPage<ept id="p1">**</ept> to create a basic HTML page.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This</source>
          <target state="new">This</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>method has a parameter of type <bpt id="p1">**</bpt>CloudBlobContainer<ept id="p1">**</ept>, which will be</source>
          <target state="new">method has a parameter of type <bpt id="p1">**</bpt>CloudBlobContainer<ept id="p1">**</ept>, which will be</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>used to iterate through the list of uploaded blobs.</source>
          <target state="new">used to iterate through the list of uploaded blobs.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This method will</source>
          <target state="new">This method will</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>throw exceptions of type <bpt id="p1">**</bpt>FileNotFoundException<ept id="p1">**</ept>, which can be thrown</source>
          <target state="new">throw exceptions of type <bpt id="p1">**</bpt>FileNotFoundException<ept id="p1">**</ept>, which can be thrown</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>by the <bpt id="p1">**</bpt>FileOutputStream<ept id="p1">**</ept> constructor, and <bpt id="p2">**</bpt>URISyntaxException<ept id="p2">**</ept>,</source>
          <target state="new">by the <bpt id="p1">**</bpt>FileOutputStream<ept id="p1">**</ept> constructor, and <bpt id="p2">**</bpt>URISyntaxException<ept id="p2">**</ept>,</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>which can be thrown by the <bpt id="p1">**</bpt>ListBlobItem.getUri<ept id="p1">**</ept> method.</source>
          <target state="new">which can be thrown by the <bpt id="p1">**</bpt>ListBlobItem.getUri<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Include the</source>
          <target state="new">Include the</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>opening bracket, <bpt id="p1">**</bpt>{<ept id="p1">**</ept>.</source>
          <target state="new">opening bracket, <bpt id="p1">**</bpt>{<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Create a local file named <bpt id="p1">**</bpt>index.html<ept id="p1">**</ept>.</source>
          <target state="new">Create a local file named <bpt id="p1">**</bpt>index.html<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Write to the local file, adding in the <bpt id="p1">**</bpt>&amp;lt;html&amp;gt;<ept id="p1">**</ept>, <bpt id="p2">**</bpt>&amp;lt;header&amp;gt;<ept id="p2">**</ept>, and</source>
          <target state="new">Write to the local file, adding in the <bpt id="p1">**</bpt>&amp;lt;html&amp;gt;<ept id="p1">**</ept>, <bpt id="p2">**</bpt>&amp;lt;header&amp;gt;<ept id="p2">**</ept>, and</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>&amp;lt;body&amp;gt;<ept id="p1">**</ept> elements.</source>
          <target state="new"><bpt id="p1">**</bpt>&amp;lt;body&amp;gt;<ept id="p1">**</ept> elements.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Iterate through the list of uploaded blobs.</source>
          <target state="new">Iterate through the list of uploaded blobs.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For each blob, in the HTML</source>
          <target state="new">For each blob, in the HTML</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>page create an <bpt id="p1">**</bpt>&amp;lt;img&amp;gt;<ept id="p1">**</ept> element that has its <bpt id="p2">**</bpt>src<ept id="p2">**</ept> attribute sent to</source>
          <target state="new">page create an <bpt id="p1">**</bpt>&amp;lt;img&amp;gt;<ept id="p1">**</ept> element that has its <bpt id="p2">**</bpt>src<ept id="p2">**</ept> attribute sent to</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>the URI of the blob as it exists in your Azure storage account.</source>
          <target state="new">the URI of the blob as it exists in your Azure storage account.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Although you added only one image in this sample, if you added more,</source>
          <target state="new">Although you added only one image in this sample, if you added more,</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>this code would iterate all of them.</source>
          <target state="new">this code would iterate all of them.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For simplicity, this example assumes each uploaded blob is an image.</source>
          <target state="new">For simplicity, this example assumes each uploaded blob is an image.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="new">If</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>you've updated blobs other than images, or page blobs instead of block</source>
          <target state="new">you've updated blobs other than images, or page blobs instead of block</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>blobs, adjust the code as needed.</source>
          <target state="new">blobs, adjust the code as needed.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Close the <bpt id="p1">**</bpt>&amp;lt;body&amp;gt;<ept id="p1">**</ept> element and the <bpt id="p2">**</bpt>&amp;lt;html&amp;gt;<ept id="p2">**</ept> element.</source>
          <target state="new">Close the <bpt id="p1">**</bpt>&amp;lt;body&amp;gt;<ept id="p1">**</ept> element and the <bpt id="p2">**</bpt>&amp;lt;html&amp;gt;<ept id="p2">**</ept> element.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Close the local file.</source>
          <target state="new">Close the local file.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Close <bpt id="p1">**</bpt>MakeHTMLPage<ept id="p1">**</ept> by inserting a close bracket: <bpt id="p2">**</bpt>}<ept id="p2">**</ept></source>
          <target state="new">Close <bpt id="p1">**</bpt>MakeHTMLPage<ept id="p1">**</ept> by inserting a close bracket: <bpt id="p2">**</bpt>}<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Close <bpt id="p1">**</bpt>StorageSample<ept id="p1">**</ept> by inserting a close bracket: <bpt id="p2">**</bpt>}<ept id="p2">**</ept></source>
          <target state="new">Close <bpt id="p1">**</bpt>StorageSample<ept id="p1">**</ept> by inserting a close bracket: <bpt id="p2">**</bpt>}<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The following is the complete code for this example.</source>
          <target state="new">The following is the complete code for this example.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Remember to modify</source>
          <target state="new">Remember to modify</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>the placeholder values <bpt id="p1">**</bpt>your\_account\_name<ept id="p1">**</ept> and</source>
          <target state="new">the placeholder values <bpt id="p1">**</bpt>your\_account\_name<ept id="p1">**</ept> and</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>your\_account\_key<ept id="p1">**</ept> to use your account name and account key,</source>
          <target state="new"><bpt id="p1">**</bpt>your\_account\_key<ept id="p1">**</ept> to use your account name and account key,</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>respectively.</source>
          <target state="new">respectively.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>In addition to uploading your local image file to Azure storage,</source>
          <target state="new">In addition to uploading your local image file to Azure storage,</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>the example code creates a local file namedindex.html, which you can</source>
          <target state="new">the example code creates a local file namedindex.html, which you can</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>open in your browser to see your uploaded image.</source>
          <target state="new">open in your browser to see your uploaded image.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Because the code contains your account name and account key, ensure that</source>
          <target state="new">Because the code contains your account name and account key, ensure that</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>your source code is secure.</source>
          <target state="new">your source code is secure.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To delete a container</source>
          <target state="new">To delete a container</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Because you are charged for storage, you may want to delete the</source>
          <target state="new">Because you are charged for storage, you may want to delete the</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>gettingstarted<ept id="p1">**</ept> container after you are done experimenting with this</source>
          <target state="new"><bpt id="p1">**</bpt>gettingstarted<ept id="p1">**</ept> container after you are done experimenting with this</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>example.</source>
          <target state="new">example.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>To delete a container, use the <bpt id="p1">**</bpt>CloudBlobContainer.delete<ept id="p1">**</ept></source>
          <target state="new">To delete a container, use the <bpt id="p1">**</bpt>CloudBlobContainer.delete<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>method.</source>
          <target state="new">method.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>To call the <bpt id="p1">**</bpt>CloudBlobContainer.delete<ept id="p1">**</ept> method, the process of</source>
          <target state="new">To call the <bpt id="p1">**</bpt>CloudBlobContainer.delete<ept id="p1">**</ept> method, the process of</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>initializing <bpt id="p1">**</bpt>CloudStorageAccount<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ClodBlobClient<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>CloudBlobContainer<ept id="p3">**</ept> objects is the same as shown for the</source>
          <target state="new">initializing <bpt id="p1">**</bpt>CloudStorageAccount<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ClodBlobClient<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>CloudBlobContainer<ept id="p3">**</ept> objects is the same as shown for the</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>createIfNotExist<ept id="p1">**</ept> method.</source>
          <target state="new"><bpt id="p1">**</bpt>createIfNotExist<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The following is a complete example that</source>
          <target state="new">The following is a complete example that</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>deletes the container named <bpt id="p1">**</bpt>gettingstarted<ept id="p1">**</ept>.</source>
          <target state="new">deletes the container named <bpt id="p1">**</bpt>gettingstarted<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>For an overview of other blob storage classes and methods, see <bpt id="p1">[</bpt><ph id="ph1">How to</ph>
use the blob storage service from Java<ept id="p1">]</ept>.</source>
          <target state="new">For an overview of other blob storage classes and methods, see <bpt id="p1">[</bpt><ph id="ph1">How to</ph>
use the blob storage service from Java<ept id="p1">]</ept>.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Follow these links to learn more about more complex storage tasks.</source>
          <target state="new">Follow these links to learn more about more complex storage tasks.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Azure Storage SDK for Java</source>
          <target state="new">Azure Storage SDK for Java</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Azure Storage Client SDK Reference</source>
          <target state="new">Azure Storage Client SDK Reference</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Azure Storage REST API</source>
          <target state="new">Azure Storage REST API</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Azure Storage Team Blog</source>
          <target state="new">Azure Storage Team Blog</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc1042d8becd6fcfb291add0db2af94594ac9918</xliffext:olfilehash>
  </header>
</xliff>