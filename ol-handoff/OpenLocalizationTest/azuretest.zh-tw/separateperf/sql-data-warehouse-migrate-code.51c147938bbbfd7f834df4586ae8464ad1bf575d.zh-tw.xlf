<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Migrate your SQL code to SQL Data Warehouse | Microsoft Azure</source>
          <target state="new">Migrate your SQL code to SQL Data Warehouse | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Tips for migrating your SQL code to Azure SQL Data Warehouse for developing solutions.</source>
          <target state="new">Tips for migrating your SQL code to Azure SQL Data Warehouse for developing solutions.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Migrate your SQL code to SQL Data Warehouse</source>
          <target state="new">Migrate your SQL code to SQL Data Warehouse</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In order to ensure your code is compliant with SQL Data Warehouse it is quite likely that you will need to make changes to your code base.</source>
          <target state="new">In order to ensure your code is compliant with SQL Data Warehouse it is quite likely that you will need to make changes to your code base.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Some SQL Data Warehouse features can also significantly improve performance as they are designed to work directly in a distributed fashion.</source>
          <target state="new">Some SQL Data Warehouse features can also significantly improve performance as they are designed to work directly in a distributed fashion.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, to maintain performance and scale, some features are also not available.</source>
          <target state="new">However, to maintain performance and scale, some features are also not available.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Transact-SQL code changes</source>
          <target state="new">Transact-SQL code changes</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following list summarizes the main features that are not supported in Azure SQL Data Warehouse.</source>
          <target state="new">The following list summarizes the main features that are not supported in Azure SQL Data Warehouse.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The links provided take you to workarounds for the unsupported feature:</source>
          <target state="new">The links provided take you to workarounds for the unsupported feature:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>ANSI joins on updates</source>
          <target state="new">ANSI joins on updates</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>ANSI joins on deletes</source>
          <target state="new">ANSI joins on deletes</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>merge statement</source>
          <target state="new">merge statement</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>cross-database joins</source>
          <target state="new">cross-database joins</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>cursors</source>
          <target state="new">cursors</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>SELECT..INTO</source>
          <target state="new">SELECT..INTO</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>INSERT..EXEC</source>
          <target state="new">INSERT..EXEC</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>output clause</source>
          <target state="new">output clause</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>inline user-defined functions</source>
          <target state="new">inline user-defined functions</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>multi-statement functions</source>
          <target state="new">multi-statement functions</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>[recursive common table expressions (CTE)](#Recursive-common-table-expressions-(CTE)</source>
          <target state="new">[recursive common table expressions (CTE)](#Recursive-common-table-expressions-(CTE)</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>updates through CTEs</source>
          <target state="new">updates through CTEs</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CLR functions and procedures</source>
          <target state="new">CLR functions and procedures</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>$partition function</source>
          <target state="new">$partition function</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>table variables</source>
          <target state="new">table variables</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>table value parameters</source>
          <target state="new">table value parameters</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>distributed transactions</source>
          <target state="new">distributed transactions</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>commit / rollback work</source>
          <target state="new">commit / rollback work</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>save transaction</source>
          <target state="new">save transaction</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>execution contexts (EXECUTE AS)</source>
          <target state="new">execution contexts (EXECUTE AS)</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>group by clause with rollup / cube / grouping sets options</source>
          <target state="new">group by clause with rollup / cube / grouping sets options</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>nesting levels beyond 8</source>
          <target state="new">nesting levels beyond 8</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>updating through views</source>
          <target state="new">updating through views</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>use of select for variable assignment</source>
          <target state="new">use of select for variable assignment</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>no MAX data type for dynamic SQL strings</source>
          <target state="new">no MAX data type for dynamic SQL strings</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Happily most of these limitations can be worked around.</source>
          <target state="new">Happily most of these limitations can be worked around.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Explanations have been included in the relevant development articles referenced above.</source>
          <target state="new">Explanations have been included in the relevant development articles referenced above.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Recursive common table expressions (CTE)</source>
          <target state="new">Recursive common table expressions (CTE)</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This is a complex scenario with no quick fix.</source>
          <target state="new">This is a complex scenario with no quick fix.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The CTE will need to be broken down and handled in steps.</source>
          <target state="new">The CTE will need to be broken down and handled in steps.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can typically use a fairly complex loop; populating a temporary table as you iterate over the recursive interim queries.</source>
          <target state="new">You can typically use a fairly complex loop; populating a temporary table as you iterate over the recursive interim queries.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Once the temporary table is populated you can then return the data as a single result set.</source>
          <target state="new">Once the temporary table is populated you can then return the data as a single result set.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A similar approach has been used to solve <ph id="ph1">`GROUP BY WITH CUBE`</ph> in the <bpt id="p1">[</bpt>group by clause with rollup / cube / grouping sets options<ept id="p1">][]</ept> article.</source>
          <target state="new">A similar approach has been used to solve <ph id="ph1">`GROUP BY WITH CUBE`</ph> in the <bpt id="p1">[</bpt>group by clause with rollup / cube / grouping sets options<ept id="p1">][]</ept> article.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Updates through CTEs</source>
          <target state="new">Updates through CTEs</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the CTE is non-recursive then you can re-write the query to use sub-queries.</source>
          <target state="new">If the CTE is non-recursive then you can re-write the query to use sub-queries.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For recursive CTEs you will need to build up the resultset first as described above; then join the final resultset to the target table and perform the update.</source>
          <target state="new">For recursive CTEs you will need to build up the resultset first as described above; then join the final resultset to the target table and perform the update.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>System functions</source>
          <target state="new">System functions</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>There are also some system functions that are not supported.</source>
          <target state="new">There are also some system functions that are not supported.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Some of the main ones you might typically find used in data warehousing are:</source>
          <target state="new">Some of the main ones you might typically find used in data warehousing are:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>NEWID()</source>
          <target state="new">NEWID()</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>NEWSEQUENTIALID()</source>
          <target state="new">NEWSEQUENTIALID()</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>@@NESTLEVEL()</source>
          <target state="new">@@NESTLEVEL()</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>@@IDENTITY()</source>
          <target state="new">@@IDENTITY()</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>@@ROWCOUNT()</source>
          <target state="new">@@ROWCOUNT()</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>ROWCOUNT_BIG</source>
          <target state="new">ROWCOUNT_BIG</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>ERROR_LINE()</source>
          <target state="new">ERROR_LINE()</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Again many of these issues can be worked around.</source>
          <target state="new">Again many of these issues can be worked around.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example the code below is an alternative solution for retrieving @@ROWCOUNT information:</source>
          <target state="new">For example the code below is an alternative solution for retrieving @@ROWCOUNT information:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For advice on developing your code please refer to the <bpt id="p1">[</bpt>development overview<ept id="p1">][]</ept>.</source>
          <target state="new">For advice on developing your code please refer to the <bpt id="p1">[</bpt>development overview<ept id="p1">][]</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a143c8469d198aebbe9d441ce01a3c789f06e32a</xliffext:olfilehash>
  </header>
</xliff>