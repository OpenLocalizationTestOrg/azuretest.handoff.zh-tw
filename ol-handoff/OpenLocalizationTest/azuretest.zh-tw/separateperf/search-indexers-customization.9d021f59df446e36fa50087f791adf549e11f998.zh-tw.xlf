<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Search Indexer Customization</source>
          <target state="new">Azure Search Indexer Customization</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to customize settings and policies of Azure Search indexers.</source>
          <target state="new">Learn how to customize settings and policies of Azure Search indexers.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Search Indexer Customization</source>
          <target state="new">Azure Search Indexer Customization</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this article, you will learn how to use Azure Search indexers to implement these scenarios:</source>
          <target state="new">In this article, you will learn how to use Azure Search indexers to implement these scenarios:</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Rename fields between a datasource and a target index</source>
          <target state="new">Rename fields between a datasource and a target index</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Transform strings from a database table into string collections</source>
          <target state="new">Transform strings from a database table into string collections</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Switch the change detection policy on a datasource</source>
          <target state="new">Switch the change detection policy on a datasource</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>URL-encode document keys that contain URL-unsafe characters</source>
          <target state="new">URL-encode document keys that contain URL-unsafe characters</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Tolerate failures to index some documents</source>
          <target state="new">Tolerate failures to index some documents</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you’re not familiar with Azure Search indexers, you might want to take a look at the following articles first:</source>
          <target state="new">If you’re not familiar with Azure Search indexers, you might want to take a look at the following articles first:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Connecting Azure SQL Database to Azure Search using indexers</source>
          <target state="new">Connecting Azure SQL Database to Azure Search using indexers</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Connecting DocumentDB with Azure Search using indexers</source>
          <target state="new">Connecting DocumentDB with Azure Search using indexers</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET SDK with support for indexers<ept id="p1">](https://msdn.microsoft.com/library/dn951165.aspx)</ept> or</source>
          <target state="new"><bpt id="p1">[</bpt>.NET SDK with support for indexers<ept id="p1">](https://msdn.microsoft.com/library/dn951165.aspx)</ept> or</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Indexers REST API reference</source>
          <target state="new">Indexers REST API reference</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Rename fields between a datasource and a target index</source>
          <target state="new">Rename fields between a datasource and a target index</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Field mappings<ept id="p1">**</ept> are properties that reconcile differences between field definitions.</source>
          <target state="new"><bpt id="p1">**</bpt>Field mappings<ept id="p1">**</ept> are properties that reconcile differences between field definitions.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The most common examples are found in field names that violate Azure Search naming rules.</source>
          <target state="new">The most common examples are found in field names that violate Azure Search naming rules.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Consider a source table where one or more field names start with a leading underscore (such as <ph id="ph1">`_id`</ph>).</source>
          <target state="new">Consider a source table where one or more field names start with a leading underscore (such as <ph id="ph1">`_id`</ph>).</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Azure Search doesn't allow field names to lead with an underscore, thus the field must be renamed.</source>
          <target state="new">Azure Search doesn't allow field names to lead with an underscore, thus the field must be renamed.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example illustrates updating an indexer to include a field mapping that "renames" <ph id="ph1">`_id`</ph> field of the datasource into <ph id="ph2">`id`</ph> field in the target index:</source>
          <target state="new">The following example illustrates updating an indexer to include a field mapping that "renames" <ph id="ph1">`_id`</ph> field of the datasource into <ph id="ph2">`id`</ph> field in the target index:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NOTE:<ept id="p1">**</ept> You need to use a preview API version 2015-02-28-Preview to use field mappings.</source>
          <target state="new"><bpt id="p1">**</bpt>NOTE:<ept id="p1">**</ept> You need to use a preview API version 2015-02-28-Preview to use field mappings.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can specify multiple field mappings:</source>
          <target state="new">You can specify multiple field mappings:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Both source and target field names are case-insensitive.</source>
          <target state="new">Both source and target field names are case-insensitive.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Transform strings from a database table into string collections</source>
          <target state="new">Transform strings from a database table into string collections</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Field mappings can also be used to transform source field values using <bpt id="p1">*</bpt>mapping functions<ept id="p1">*</ept>.</source>
          <target state="new">Field mappings can also be used to transform source field values using <bpt id="p1">*</bpt>mapping functions<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>One such function, <ph id="ph1">`jsonArrayToStringCollection`</ph>, parses a field that contains a string formatted as JSON array into a Collection(Edm.String) field in the target index.</source>
          <target state="new">One such function, <ph id="ph1">`jsonArrayToStringCollection`</ph>, parses a field that contains a string formatted as JSON array into a Collection(Edm.String) field in the target index.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It is intended for use with Azure SQL indexer in particular, since SQL doesn't have a native collection data type.</source>
          <target state="new">It is intended for use with Azure SQL indexer in particular, since SQL doesn't have a native collection data type.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It can be used as follows:</source>
          <target state="new">It can be used as follows:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, if the source field contains the string <ph id="ph1">`["red", "white", "blue"]`</ph>, then the target field of type <ph id="ph2">`Collection(Edm.String)`</ph> will be populated with the three values <ph id="ph3">`"red"`</ph>, <ph id="ph4">`"white"`</ph> and <ph id="ph5">`"blue"`</ph>.</source>
          <target state="new">For example, if the source field contains the string <ph id="ph1">`["red", "white", "blue"]`</ph>, then the target field of type <ph id="ph2">`Collection(Edm.String)`</ph> will be populated with the three values <ph id="ph3">`"red"`</ph>, <ph id="ph4">`"white"`</ph> and <ph id="ph5">`"blue"`</ph>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`targetFieldName`</ph> property is optional; if left out, the <ph id="ph2">`sourceFieldName`</ph> value is used.</source>
          <target state="new">Note that the <ph id="ph1">`targetFieldName`</ph> property is optional; if left out, the <ph id="ph2">`sourceFieldName`</ph> value is used.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Switching the change detection policy on a datasource</source>
          <target state="new">Switching the change detection policy on a datasource</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In Azure Search, the decision of which change detection policy to go with is largely determined by what is supported by your datasource and data schema.</source>
          <target state="new">In Azure Search, the decision of which change detection policy to go with is largely determined by what is supported by your datasource and data schema.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Over time, especially if you upgrade or migrate databases, you might want to switch a change detection policy to another type.</source>
          <target state="new">Over time, especially if you upgrade or migrate databases, you might want to switch a change detection policy to another type.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, perhaps you have just updated your Azure SQL Database to a newer version that supports Integrated Change Tracking, so you want to switch from the high water mark policy to the integrated change tracking policy.</source>
          <target state="new">For example, perhaps you have just updated your Azure SQL Database to a newer version that supports Integrated Change Tracking, so you want to switch from the high water mark policy to the integrated change tracking policy.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Or perhaps you decided to use a different column as your high water mark.</source>
          <target state="new">Or perhaps you decided to use a different column as your high water mark.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you simply call the PUT datasource REST API to update your datasource, you might get a 400 response back with an error message similar to the following:</source>
          <target state="new">If you simply call the PUT datasource REST API to update your datasource, you might get a 400 response back with an error message similar to the following:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You’d probably wonder what this means and how to work around it.</source>
          <target state="new">You’d probably wonder what this means and how to work around it.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This error occurs because Azure Search maintains internal state associated with your change detection policy.</source>
          <target state="new">This error occurs because Azure Search maintains internal state associated with your change detection policy.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When policy is changed, the existing state is invalidated since it doesn’t apply to the new policy.</source>
          <target state="new">When policy is changed, the existing state is invalidated since it doesn’t apply to the new policy.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This means that the indexer has to start indexing your data source from scratch using the new policy, which has potential implications for you (e.g., additional load on the database, or additional networking bandwidth charges).</source>
          <target state="new">This means that the indexer has to start indexing your data source from scratch using the new policy, which has potential implications for you (e.g., additional load on the database, or additional networking bandwidth charges).</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>That is why Azure Search asks you call the <bpt id="p1">[</bpt>Reset Indexer API<ept id="p1">]( https://msdn.microsoft.com/library/azure/dn946897.aspx)</ept> to reset the state associated with the current change detection policy, after which the policy can be changed with a regular PUT datasource call.</source>
          <target state="new">That is why Azure Search asks you call the <bpt id="p1">[</bpt>Reset Indexer API<ept id="p1">]( https://msdn.microsoft.com/library/azure/dn946897.aspx)</ept> to reset the state associated with the current change detection policy, after which the policy can be changed with a regular PUT datasource call.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Of course, Azure Search could do the reset for you automatically, but we felt it was important for you to explicitly acknowledge your understanding of the implications by calling the Reset API.</source>
          <target state="new">Of course, Azure Search could do the reset for you automatically, but we felt it was important for you to explicitly acknowledge your understanding of the implications by calling the Reset API.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>URL-encode document keys that contain URL-unsafe characters</source>
          <target state="new">URL-encode document keys that contain URL-unsafe characters</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Azure Search restricts characters inside a document key field to URL-safe characters, because users must be able to look up documents by their keys.</source>
          <target state="new">Azure Search restricts characters inside a document key field to URL-safe characters, because users must be able to look up documents by their keys.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>So what happens when the documents you need to index contain such characters in the key field?</source>
          <target state="new">So what happens when the documents you need to index contain such characters in the key field?</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If you’re indexing documents yourself using a client SDK or REST API, you can URL-encode the keys.</source>
          <target state="new">If you’re indexing documents yourself using a client SDK or REST API, you can URL-encode the keys.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>With indexers, you can tell Azure Search to URL-encode your keys by setting <bpt id="p1">**</bpt>base64EncodeKeys<ept id="p1">**</ept> parameter to <ph id="ph1">`true`</ph> when creating or updating the indexer:</source>
          <target state="new">With indexers, you can tell Azure Search to URL-encode your keys by setting <bpt id="p1">**</bpt>base64EncodeKeys<ept id="p1">**</ept> parameter to <ph id="ph1">`true`</ph> when creating or updating the indexer:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For details of encoding, see this <bpt id="p1">[</bpt>MSDN article<ept id="p1">](http://msdn.microsoft.com/library/system.web.httpserverutility.urltokenencode.aspx)</ept>.</source>
          <target state="new">For details of encoding, see this <bpt id="p1">[</bpt>MSDN article<ept id="p1">](http://msdn.microsoft.com/library/system.web.httpserverutility.urltokenencode.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>NOTE: If you need to search or filter on key values, you’ll have to similarly encode the keys used in your requests, so that your request matches the encoded value stored in the search index.</source>
          <target state="new">NOTE: If you need to search or filter on key values, you’ll have to similarly encode the keys used in your requests, so that your request matches the encoded value stored in the search index.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Tolerate failures to index some documents</source>
          <target state="new">Tolerate failures to index some documents</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>By default, an Azure Search indexer stops indexing as soon as even as single document fails to be indexed.</source>
          <target state="new">By default, an Azure Search indexer stops indexing as soon as even as single document fails to be indexed.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Depending on your scenario, you can choose to tolerate some failures (for example, if you repeatedly re-index your entire datasource).</source>
          <target state="new">Depending on your scenario, you can choose to tolerate some failures (for example, if you repeatedly re-index your entire datasource).</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Azure Search provides two indexer parameters to fine- tune this behavior:</source>
          <target state="new">Azure Search provides two indexer parameters to fine- tune this behavior:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>maxFailedItems<ept id="p1">**</ept>: The number of items that can fail indexing before an indexer execution is considered as failure.</source>
          <target state="new"><bpt id="p1">**</bpt>maxFailedItems<ept id="p1">**</ept>: The number of items that can fail indexing before an indexer execution is considered as failure.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Default is 0.</source>
          <target state="new">Default is 0.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>maxFailedItemsPerBatch<ept id="p1">**</ept>: The number of items that can fail indexing in a single batch before an indexer execution is considered as failure.</source>
          <target state="new"><bpt id="p1">**</bpt>maxFailedItemsPerBatch<ept id="p1">**</ept>: The number of items that can fail indexing in a single batch before an indexer execution is considered as failure.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Default is 0.</source>
          <target state="new">Default is 0.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can change these values at any time by specifying one or both of these parameters when creating or updating your indexer:</source>
          <target state="new">You can change these values at any time by specifying one or both of these parameters when creating or updating your indexer:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Even if you choose to tolerate some failures, information about which documents failed is returned by the <bpt id="p1">[</bpt>Get Indexer Status API<ept id="p1">](https://msdn.microsoft.com/library/azure/dn946884.aspx)</ept>.</source>
          <target state="new">Even if you choose to tolerate some failures, information about which documents failed is returned by the <bpt id="p1">[</bpt>Get Indexer Status API<ept id="p1">](https://msdn.microsoft.com/library/azure/dn946884.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>That’s it for now.</source>
          <target state="new">That’s it for now.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you have any thoughts or suggestions for future content ideas, tweet us using #AzureSearch hashtag, or submit your ideas on our <bpt id="p1">[</bpt>UserVoice page<ept id="p1">](http://feedback.azure.com/forums/263029-azure-search)</ept>.</source>
          <target state="new">If you have any thoughts or suggestions for future content ideas, tweet us using #AzureSearch hashtag, or submit your ideas on our <bpt id="p1">[</bpt>UserVoice page<ept id="p1">](http://feedback.azure.com/forums/263029-azure-search)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9067f2580e8c1e6b8d3540b1fc96da458adf421f</xliffext:olfilehash>
  </header>
</xliff>