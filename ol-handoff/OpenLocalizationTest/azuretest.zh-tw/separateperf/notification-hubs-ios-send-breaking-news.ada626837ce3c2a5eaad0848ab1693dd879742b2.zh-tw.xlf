<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Notification Hubs Breaking News Tutorial - iOS</source>
          <target state="new">Notification Hubs Breaking News Tutorial - iOS</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Azure Service Bus Notification Hubs to send breaking news notifications to iOS devices.</source>
          <target state="new">Learn how to use Azure Service Bus Notification Hubs to send breaking news notifications to iOS devices.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use Notification Hubs to send breaking news</source>
          <target state="new">Use Notification Hubs to send breaking news</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic shows you how to use Azure Notification Hubs to broadcast breaking news notifications to an iOS app.</source>
          <target state="new">This topic shows you how to use Azure Notification Hubs to broadcast breaking news notifications to an iOS app.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When complete, you will be able to register for breaking news categories you are interested in, and receive only push notifications for those categories.</source>
          <target state="new">When complete, you will be able to register for breaking news categories you are interested in, and receive only push notifications for those categories.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This scenario is a common pattern for many apps where notifications have to be sent to groups of users that have previously declared interest in them, e.g. RSS reader, apps for music fans, etc.</source>
          <target state="new">This scenario is a common pattern for many apps where notifications have to be sent to groups of users that have previously declared interest in them, e.g. RSS reader, apps for music fans, etc.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Broadcast scenarios are enabled by including one or more <bpt id="p1">_</bpt>tags<ept id="p1">_</ept> when creating a registration in the notification hub.</source>
          <target state="new">Broadcast scenarios are enabled by including one or more <bpt id="p1">_</bpt>tags<ept id="p1">_</ept> when creating a registration in the notification hub.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When notifications are sent to a tag, all devices that have registered for the tag will receive the notification.</source>
          <target state="new">When notifications are sent to a tag, all devices that have registered for the tag will receive the notification.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Because tags are simply strings, they do not have to be provisioned in advance.</source>
          <target state="new">Because tags are simply strings, they do not have to be provisioned in advance.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about tags, refer to <bpt id="p1">[</bpt><ept id="p1">Notification Hubs Guidance]</ept>.</source>
          <target state="new">For more information about tags, refer to <bpt id="p1">[</bpt><ept id="p1">Notification Hubs Guidance]</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This topic builds on the app you created in <bpt id="p1">[</bpt>Get started with Notification Hubs<ept id="p1">][get-started]</ept>.</source>
          <target state="new">This topic builds on the app you created in <bpt id="p1">[</bpt>Get started with Notification Hubs<ept id="p1">][get-started]</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Before starting this tutorial, you must have already completed <bpt id="p1">[</bpt>Get started with Notification Hubs<ept id="p1">][get-started]</ept>.</source>
          <target state="new">Before starting this tutorial, you must have already completed <bpt id="p1">[</bpt>Get started with Notification Hubs<ept id="p1">][get-started]</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Add category selection to the app</source>
          <target state="new">Add category selection to the app</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The first step is to add the UI elements to your existing storyboard that enable the user to select categories to register.</source>
          <target state="new">The first step is to add the UI elements to your existing storyboard that enable the user to select categories to register.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The categories selected by a user are stored on the device.</source>
          <target state="new">The categories selected by a user are stored on the device.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the app starts, a device registration is created in your notification hub with the selected categories as tags.</source>
          <target state="new">When the app starts, a device registration is created in your notification hub with the selected categories as tags.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In your MainStoryboard_iPhone.storyboard add the following components from the object library:</source>
          <target state="new">In your MainStoryboard_iPhone.storyboard add the following components from the object library:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A label with "Breaking News" text,</source>
          <target state="new">A label with "Breaking News" text,</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Labels with category texts "World", "Politics", "Business", "Technology", "Science", "Sports",</source>
          <target state="new">Labels with category texts "World", "Politics", "Business", "Technology", "Science", "Sports",</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Six switches, one per category, set each switch <bpt id="p1">**</bpt>State<ept id="p1">**</ept> to be <bpt id="p2">**</bpt>Off<ept id="p2">**</ept> by default.</source>
          <target state="new">Six switches, one per category, set each switch <bpt id="p1">**</bpt>State<ept id="p1">**</ept> to be <bpt id="p2">**</bpt>Off<ept id="p2">**</ept> by default.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>One button labeled "Subscribe"</source>
          <target state="new">One button labeled "Subscribe"</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Your storyboard should look as follows:</source>
          <target state="new">Your storyboard should look as follows:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>![][3]</source>
          <target state="new">![][3]</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the assistant editor, create outlets for all the switches and call them "WorldSwitch", "PoliticsSwitch", "BusinessSwitch", "TechnologySwitch", "ScienceSwitch", "SportsSwitch"</source>
          <target state="new">In the assistant editor, create outlets for all the switches and call them "WorldSwitch", "PoliticsSwitch", "BusinessSwitch", "TechnologySwitch", "ScienceSwitch", "SportsSwitch"</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create an Action for your button called "subscribe".</source>
          <target state="new">Create an Action for your button called "subscribe".</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Your ViewController.h should contain the following:</source>
          <target state="new">Your ViewController.h should contain the following:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Create a new <bpt id="p1">**</bpt>Cocoa Touch Class<ept id="p1">**</ept> called <ph id="ph1">`Notifications`</ph>.</source>
          <target state="new">Create a new <bpt id="p1">**</bpt>Cocoa Touch Class<ept id="p1">**</ept> called <ph id="ph1">`Notifications`</ph>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Copy the following code in the interface section of the file Notifications.h:</source>
          <target state="new">Copy the following code in the interface section of the file Notifications.h:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Add the following import directive to Notifications.m:</source>
          <target state="new">Add the following import directive to Notifications.m:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Copy the following code in the implementation section of the file Notifications.m and replace the <ph id="ph1">`&lt;hub name&gt;`</ph> and <ph id="ph2">`&lt;connection string with listen access&gt;`</ph> placeholders with your notification hub name and the connection string for <bpt id="p1">*</bpt>DefaultListenSharedAccessSignature<ept id="p1">*</ept> that you obtained earlier.</source>
          <target state="new">Copy the following code in the implementation section of the file Notifications.m and replace the <ph id="ph1">`&lt;hub name&gt;`</ph> and <ph id="ph2">`&lt;connection string with listen access&gt;`</ph> placeholders with your notification hub name and the connection string for <bpt id="p1">*</bpt>DefaultListenSharedAccessSignature<ept id="p1">*</ept> that you obtained earlier.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This class uses local storage to store and retrieve the categories of news that this device will receive.</source>
          <target state="new">This class uses local storage to store and retrieve the categories of news that this device will receive.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Also, it contains a method to register for these categories.</source>
          <target state="new">Also, it contains a method to register for these categories.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Because credentials that are distributed with a client app are not generally secure, you should only distribute the key for listen access with your client app.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Because credentials that are distributed with a client app are not generally secure, you should only distribute the key for listen access with your client app.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Listen access enables your app to register for notifications, but existing registrations cannot be modified and notifications cannot be sent.</source>
          <target state="new">Listen access enables your app to register for notifications, but existing registrations cannot be modified and notifications cannot be sent.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The full access key is used in a secured backend service for sending notifications and changing existing registrations.</source>
          <target state="new">The full access key is used in a secured backend service for sending notifications and changing existing registrations.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the AppDelegate.h file, add an import statement for Notifications.h and add a property for an instance of the Notifications class:</source>
          <target state="new">In the AppDelegate.h file, add an import statement for Notifications.h and add a property for an instance of the Notifications class:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This creates a singleton instance of the Notification class in the AppDelegate.</source>
          <target state="new">This creates a singleton instance of the Notification class in the AppDelegate.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>didFinishLaunchingWithOptions<ept id="p1">**</ept> method in AppDelegate.m, add the code to initialize the notifications instance at the beginning of the method:</source>
          <target state="new">In the <bpt id="p1">**</bpt>didFinishLaunchingWithOptions<ept id="p1">**</ept> method in AppDelegate.m, add the code to initialize the notifications instance at the beginning of the method:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The initializes the Notification singleton.</source>
          <target state="new">The initializes the Notification singleton.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>didRegisterForRemoteNotificationsWithDeviceToken<ept id="p1">**</ept> method in AppDelegate.m, replace the code in the method with the following code to pass the device token to the notifications class.</source>
          <target state="new">In the <bpt id="p1">**</bpt>didRegisterForRemoteNotificationsWithDeviceToken<ept id="p1">**</ept> method in AppDelegate.m, replace the code in the method with the following code to pass the device token to the notifications class.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The notifications class will perform the registering for notifications with the categories.</source>
          <target state="new">The notifications class will perform the registering for notifications with the categories.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the user changes category selections, we call the <ph id="ph1">`subscribeWithCategories`</ph> method in response to the <bpt id="p1">**</bpt>subscribe<ept id="p1">**</ept> button to update them.</source>
          <target state="new">If the user changes category selections, we call the <ph id="ph1">`subscribeWithCategories`</ph> method in response to the <bpt id="p1">**</bpt>subscribe<ept id="p1">**</ept> button to update them.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Because the device token assigned by the Apple Push Notification Service (APNS) can chance at any time, you should register for notifications frequently to avoid notification failures.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Because the device token assigned by the Apple Push Notification Service (APNS) can chance at any time, you should register for notifications frequently to avoid notification failures.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This example registers for notification every time that the app starts.</source>
          <target state="new">This example registers for notification every time that the app starts.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For apps that are run frequently, more than once a day, you can probably skip registration to preserve bandwidth if less than a day has passed since the previous registration.</source>
          <target state="new">For apps that are run frequently, more than once a day, you can probably skip registration to preserve bandwidth if less than a day has passed since the previous registration.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Note that at this point there should be no other code in the <bpt id="p1">**</bpt>didRegisterForRemoteNotificationsWithDeviceToken<ept id="p1">**</ept> method.</source>
          <target state="new">Note that at this point there should be no other code in the <bpt id="p1">**</bpt>didRegisterForRemoteNotificationsWithDeviceToken<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following methods should already be present in AppDelegate.m from completing the <bpt id="p1">[</bpt>Get started with Notification Hubs<ept id="p1">][get-started]</ept> tutorial.</source>
          <target state="new">The following methods should already be present in AppDelegate.m from completing the <bpt id="p1">[</bpt>Get started with Notification Hubs<ept id="p1">][get-started]</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If not, add them.</source>
          <target state="new">If not, add them.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This method handles notifications received when the app is running by displaying a simple <bpt id="p1">**</bpt>UIAlert<ept id="p1">**</ept>.</source>
          <target state="new">This method handles notifications received when the app is running by displaying a simple <bpt id="p1">**</bpt>UIAlert<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In ViewController.m, add a import statement for AppDelegate.h and copy the following code into the XCode-generated <bpt id="p1">**</bpt>subscribe<ept id="p1">**</ept> method.</source>
          <target state="new">In ViewController.m, add a import statement for AppDelegate.h and copy the following code into the XCode-generated <bpt id="p1">**</bpt>subscribe<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This code will update the notification registration to use the new category tags the user has chosen in the user interface.</source>
          <target state="new">This code will update the notification registration to use the new category tags the user has chosen in the user interface.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This method creates an <bpt id="p1">**</bpt>NSMutableArray<ept id="p1">**</ept> of categories and uses the <bpt id="p2">**</bpt>Notifications<ept id="p2">**</ept> class to store the list in the local storage and registers the corresponding tags with your notification hub.</source>
          <target state="new">This method creates an <bpt id="p1">**</bpt>NSMutableArray<ept id="p1">**</ept> of categories and uses the <bpt id="p2">**</bpt>Notifications<ept id="p2">**</ept> class to store the list in the local storage and registers the corresponding tags with your notification hub.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When categories are changed, the registration is recreated with the new categories.</source>
          <target state="new">When categories are changed, the registration is recreated with the new categories.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In ViewController.m, add the following code in the <bpt id="p1">**</bpt>viewDidLoad<ept id="p1">**</ept> method to set the user interface based on the previously saved categories.</source>
          <target state="new">In ViewController.m, add the following code in the <bpt id="p1">**</bpt>viewDidLoad<ept id="p1">**</ept> method to set the user interface based on the previously saved categories.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The app can now store a set of categories in the device local storage used to register with the notification hub whenever the app starts.</source>
          <target state="new">The app can now store a set of categories in the device local storage used to register with the notification hub whenever the app starts.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The user can change the selection of categories at runtime and click the <bpt id="p1">**</bpt>subscribe<ept id="p1">**</ept> method to update the registration for the device.</source>
          <target state="new">The user can change the selection of categories at runtime and click the <bpt id="p1">**</bpt>subscribe<ept id="p1">**</ept> method to update the registration for the device.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Next, you will update the app to send the breaking news notifications directly in the app itself.</source>
          <target state="new">Next, you will update the app to send the breaking news notifications directly in the app itself.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Send notifications</source>
          <target state="new">Send notifications</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Normally notifications would be sent by a backend service but, for this tutorial we will update our send notification code so that we can send breaking news notifications directly from the app.</source>
          <target state="new">Normally notifications would be sent by a backend service but, for this tutorial we will update our send notification code so that we can send breaking news notifications directly from the app.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To do this we will update the <ph id="ph1">`SendNotificationRESTAPI`</ph> method that we defined in the <bpt id="p1">[</bpt>Get started with Notification Hubs<ept id="p1">][get-started]</ept> tutorial.</source>
          <target state="new">To do this we will update the <ph id="ph1">`SendNotificationRESTAPI`</ph> method that we defined in the <bpt id="p1">[</bpt>Get started with Notification Hubs<ept id="p1">][get-started]</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In ViewController.m update the <ph id="ph1">`SendNotificationRESTAPI`</ph> method as follows so that it takes a Platform Notification Service <ph id="ph2">`pns`</ph> parameter, and a parameter for the category tag.</source>
          <target state="new">In ViewController.m update the <ph id="ph1">`SendNotificationRESTAPI`</ph> method as follows so that it takes a Platform Notification Service <ph id="ph2">`pns`</ph> parameter, and a parameter for the category tag.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In ViewController.m update the <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> action as shown in the code that follows.</source>
          <target state="new">In ViewController.m update the <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> action as shown in the code that follows.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>So that it will send the notifications using each tag individually and send to multiple platforms.</source>
          <target state="new">So that it will send the notifications using each tag individually and send to multiple platforms.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Rebuild your project and make sure you have no build errors.</source>
          <target state="new">Rebuild your project and make sure you have no build errors.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Run the app and generate notifications</source>
          <target state="new">Run the app and generate notifications</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Press the Run button to build the project and start the app.</source>
          <target state="new">Press the Run button to build the project and start the app.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Select some breaking news options to subscribe to and then press the <bpt id="p1">**</bpt>Subscribe<ept id="p1">**</ept> button.</source>
          <target state="new">Select some breaking news options to subscribe to and then press the <bpt id="p1">**</bpt>Subscribe<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You should see a dialog indicating the notifications have been subscribed to.</source>
          <target state="new">You should see a dialog indicating the notifications have been subscribed to.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>![][1]</source>
          <target state="new">![][1]</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When you choose <bpt id="p1">**</bpt>Subscribe<ept id="p1">**</ept>, the app converts the selected categories into tags and requests a new device registration for the selected tags from the notification hub.</source>
          <target state="new">When you choose <bpt id="p1">**</bpt>Subscribe<ept id="p1">**</ept>, the app converts the selected categories into tags and requests a new device registration for the selected tags from the notification hub.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Enter a message to be sent as breaking news then press the <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> button</source>
          <target state="new">Enter a message to be sent as breaking news then press the <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> button</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>![][2]</source>
          <target state="new">![][2]</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Each device subscribed to breaking news will receive the breaking news notifications you just sent.</source>
          <target state="new">Each device subscribed to breaking news will receive the breaking news notifications you just sent.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In this tutorial we learned how to broadcast breaking news by category.</source>
          <target state="new">In this tutorial we learned how to broadcast breaking news by category.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Consider completing one of the following tutorials that highlight other advanced Notification Hubs scenarios:</source>
          <target state="new">Consider completing one of the following tutorials that highlight other advanced Notification Hubs scenarios:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Use Notification Hubs to broadcast localized breaking news</source>
          <target state="new">Use Notification Hubs to broadcast localized breaking news</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Learn how to expand the breaking news app to enable sending localized notifications.</source>
          <target state="new">Learn how to expand the breaking news app to enable sending localized notifications.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Notify users with Notification Hubs</source>
          <target state="new">Notify users with Notification Hubs</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Learn how to push notifications to specific authenticated users.</source>
          <target state="new">Learn how to push notifications to specific authenticated users.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This is a good solution for sending notifications only to specific users.</source>
          <target state="new">This is a good solution for sending notifications only to specific users.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70637d67a8c112705a9041b86eeab22d43432594</xliffext:olfilehash>
  </header>
</xliff>