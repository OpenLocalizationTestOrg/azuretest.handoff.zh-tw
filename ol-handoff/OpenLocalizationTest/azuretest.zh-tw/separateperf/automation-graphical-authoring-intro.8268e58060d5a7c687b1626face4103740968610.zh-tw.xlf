<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Graphical Authoring in Azure Automation</source>
          <target state="new">Graphical Authoring in Azure Automation</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Graphical authoring allows you to create runbooks for Azure Automation without working with code.</source>
          <target state="new">Graphical authoring allows you to create runbooks for Azure Automation without working with code.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This article provides an introduction to graphical authoring and all the details needed to start creating a graphical runbook.</source>
          <target state="new">This article provides an introduction to graphical authoring and all the details needed to start creating a graphical runbook.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Graphical authoring in Azure Automation</source>
          <target state="new">Graphical authoring in Azure Automation</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="new">Introduction</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Graphical Authoring allows you to create runbooks for Azure Automation without the complexities of the underlying Windows PowerShell Workflow code.</source>
          <target state="new">Graphical Authoring allows you to create runbooks for Azure Automation without the complexities of the underlying Windows PowerShell Workflow code.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You add activities from a library of cmdlets and other activities to a canvas and link them together to form a workflow.</source>
          <target state="new">You add activities from a library of cmdlets and other activities to a canvas and link them together to form a workflow.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This article provides an introduction to graphical authoring and the concepts you need to get started in creating a graphical runbook.</source>
          <target state="new">This article provides an introduction to graphical authoring and the concepts you need to get started in creating a graphical runbook.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Graphical runbooks</source>
          <target state="new">Graphical runbooks</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>All runbooks in Azure Automation are Windows PowerShell Workflows.</source>
          <target state="new">All runbooks in Azure Automation are Windows PowerShell Workflows.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Graphical runbooks generate PowerShell code that is run by the Automation workers, but you are not able to view it or directly modify it.</source>
          <target state="new">Graphical runbooks generate PowerShell code that is run by the Automation workers, but you are not able to view it or directly modify it.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Graphical runbooks cannot be converted to textual runbooks, nor can an existing textual runbook be imported into the graphical editor.</source>
          <target state="new">Graphical runbooks cannot be converted to textual runbooks, nor can an existing textual runbook be imported into the graphical editor.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Overview of graphical editor</source>
          <target state="new">Overview of graphical editor</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can open the graphical editor in the Azure preview portal by creating or editing a graphical runbook.</source>
          <target state="new">You can open the graphical editor in the Azure preview portal by creating or editing a graphical runbook.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Graphical workspace</source>
          <target state="new">Graphical workspace</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following sections describe the controls in the graphical editor.</source>
          <target state="new">The following sections describe the controls in the graphical editor.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Canvas</source>
          <target state="new">Canvas</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Canvas is where you design your runbook.</source>
          <target state="new">The Canvas is where you design your runbook.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You add activities from the nodes in the Library control to the runbook and connect them with links to define the logic of the runbook.</source>
          <target state="new">You add activities from the nodes in the Library control to the runbook and connect them with links to define the logic of the runbook.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Library control</source>
          <target state="new">Library control</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The Library control is where you select <bpt id="p1">[</bpt>activities<ept id="p1">](#activities)</ept> to add to your runbook.</source>
          <target state="new">The Library control is where you select <bpt id="p1">[</bpt>activities<ept id="p1">](#activities)</ept> to add to your runbook.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You add them to the canvas where you connect them to other activities.</source>
          <target state="new">You add them to the canvas where you connect them to other activities.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It includes four sections described in the following table.</source>
          <target state="new">It includes four sections described in the following table.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Section</source>
          <target state="new">Section</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Cmdlets</source>
          <target state="new">Cmdlets</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Includes all the cmdlets that can be used in your runbook.</source>
          <target state="new">Includes all the cmdlets that can be used in your runbook.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Cmdlets are organized by module.</source>
          <target state="new">Cmdlets are organized by module.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>All of the modules that you have installed in your automation account will be available.</source>
          <target state="new">All of the modules that you have installed in your automation account will be available.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Runbooks</source>
          <target state="new">Runbooks</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Includes the runbooks in your automation account organized by tag.</source>
          <target state="new">Includes the runbooks in your automation account organized by tag.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Since a runbook can have more than one tag, it may be listed under multiple tags  These runbooks can be added to the canvas to be used as a child runbook.</source>
          <target state="new">Since a runbook can have more than one tag, it may be listed under multiple tags  These runbooks can be added to the canvas to be used as a child runbook.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The runbook currently being edited is displayed but cannot be added to the canvas since a runbook cannot call itself.</source>
          <target state="new">The runbook currently being edited is displayed but cannot be added to the canvas since a runbook cannot call itself.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Assets</source>
          <target state="new">Assets</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Includes the <bpt id="p1">[</bpt>automation assets<ept id="p1">](http://msdn.microsoft.com/library/dn939988.aspx)</ept> in your automation account that can be used in your runbook.</source>
          <target state="new">Includes the <bpt id="p1">[</bpt>automation assets<ept id="p1">](http://msdn.microsoft.com/library/dn939988.aspx)</ept> in your automation account that can be used in your runbook.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you add an asset to a runbook, it will add a workflow activity that gets the selected asset.</source>
          <target state="new">When you add an asset to a runbook, it will add a workflow activity that gets the selected asset.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the case of variable assets, you can select whether to add an activity to get the variable or set the variable.</source>
          <target state="new">In the case of variable assets, you can select whether to add an activity to get the variable or set the variable.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Runbook Control</source>
          <target state="new">Runbook Control</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Includes runbook control activities that can be used in your current runbook.</source>
          <target state="new">Includes runbook control activities that can be used in your current runbook.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>junction<ept id="p1">*</ept> takes multiple inputs and waits until all have completed before continuing the workflow.</source>
          <target state="new">A <bpt id="p1">*</bpt>junction<ept id="p1">*</ept> takes multiple inputs and waits until all have completed before continuing the workflow.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>workflow script<ept id="p1">*</ept> runs one or more lines of PowerShell Workflow code.</source>
          <target state="new">A <bpt id="p1">*</bpt>workflow script<ept id="p1">*</ept> runs one or more lines of PowerShell Workflow code.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can use this activity for custom code or for functionality that you cannot achieve with other activities.</source>
          <target state="new">You can use this activity for custom code or for functionality that you cannot achieve with other activities.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Configuration control</source>
          <target state="new">Configuration control</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The Configuration control is where you provide details for an object selected on the canvas The properties available in this control will depend on the type of object selected.</source>
          <target state="new">The Configuration control is where you provide details for an object selected on the canvas The properties available in this control will depend on the type of object selected.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When you select an option in the Configuration control, it will open additional blades in order to provide additional information.</source>
          <target state="new">When you select an option in the Configuration control, it will open additional blades in order to provide additional information.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Test control</source>
          <target state="new">Test control</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The Test control is not displayed when the graphical editor is first started.</source>
          <target state="new">The Test control is not displayed when the graphical editor is first started.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>It is opened when you interactively <bpt id="p1">[</bpt>test a graphical runbook<ept id="p1">](#graphical-runbook-procedures)</ept>.</source>
          <target state="new">It is opened when you interactively <bpt id="p1">[</bpt>test a graphical runbook<ept id="p1">](#graphical-runbook-procedures)</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Graphical runbook procedures</source>
          <target state="new">Graphical runbook procedures</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Testing a graphical runbook</source>
          <target state="new">Testing a graphical runbook</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can test the Draft version of a runbook in the Azure preview portal while leaving the published version of the runbook unchanged, or you can test a new runbook before it has been published.</source>
          <target state="new">You can test the Draft version of a runbook in the Azure preview portal while leaving the published version of the runbook unchanged, or you can test a new runbook before it has been published.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This allows you to verify that the runbook is working correctly before replacing the published version.</source>
          <target state="new">This allows you to verify that the runbook is working correctly before replacing the published version.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When you test a runbook, the Draft runbook is executed and any actions that it performs are completed.</source>
          <target state="new">When you test a runbook, the Draft runbook is executed and any actions that it performs are completed.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>No job history is created, but output is displayed in the Test Output Pane.</source>
          <target state="new">No job history is created, but output is displayed in the Test Output Pane.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Open the Test control for a runbook by opening the runbook for edit and then click on the <bpt id="p1">**</bpt>Test pane<ept id="p1">**</ept> button.</source>
          <target state="new">Open the Test control for a runbook by opening the runbook for edit and then click on the <bpt id="p1">**</bpt>Test pane<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Test pane button</source>
          <target state="new">Test pane button</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The Test control will prompt for any input parameters, and you can start the runbook by clicking on the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> button.</source>
          <target state="new">The Test control will prompt for any input parameters, and you can start the runbook by clicking on the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Test control buttons</source>
          <target state="new">Test control buttons</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Publishing a graphical runbook</source>
          <target state="new">Publishing a graphical runbook</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Each runbook in Azure Automation has a Draft and a Published version.</source>
          <target state="new">Each runbook in Azure Automation has a Draft and a Published version.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Only the Published version is available to be run, and only the Draft version can be edited.</source>
          <target state="new">Only the Published version is available to be run, and only the Draft version can be edited.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The Published version is unaffected by any changes to the Draft version.</source>
          <target state="new">The Published version is unaffected by any changes to the Draft version.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When the Draft version is ready to be available, then you publish it which overwrites the Published version with the Draft version.</source>
          <target state="new">When the Draft version is ready to be available, then you publish it which overwrites the Published version with the Draft version.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can publish a graphical runbook by opening the runbook for editing and then clicking on the <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> button.</source>
          <target state="new">You can publish a graphical runbook by opening the runbook for editing and then clicking on the <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Publish button</source>
          <target state="new">Publish button</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When a runbook has not yet been published, it has a status of <bpt id="p1">**</bpt>New<ept id="p1">**</ept>.</source>
          <target state="new">When a runbook has not yet been published, it has a status of <bpt id="p1">**</bpt>New<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When it is published, it has a status of <bpt id="p1">**</bpt>Published<ept id="p1">**</ept>.</source>
          <target state="new">When it is published, it has a status of <bpt id="p1">**</bpt>Published<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If you edit the runbook after it has been published, and the Draft and Published versions are different, the runbook has a status of <bpt id="p1">**</bpt>In edit<ept id="p1">**</ept>.</source>
          <target state="new">If you edit the runbook after it has been published, and the Draft and Published versions are different, the runbook has a status of <bpt id="p1">**</bpt>In edit<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Runbook statuses</source>
          <target state="new">Runbook statuses</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You also have the option to revert to the Published version of a runbook.</source>
          <target state="new">You also have the option to revert to the Published version of a runbook.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This throws away any changes made since the runbook was last published and replaces the Draft version of the runbook with the Published version.</source>
          <target state="new">This throws away any changes made since the runbook was last published and replaces the Draft version of the runbook with the Published version.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Revert to published button</source>
          <target state="new">Revert to published button</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Activities</source>
          <target state="new">Activities</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Activities are the building blocks of a runbook.</source>
          <target state="new">Activities are the building blocks of a runbook.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An activity can be a PowerShell cmdlet, a child runbook, or a workflow activity.</source>
          <target state="new">An activity can be a PowerShell cmdlet, a child runbook, or a workflow activity.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You add an activity to the runbook by right clicking it in the Library control and selecting <bpt id="p1">**</bpt>Add to canvas<ept id="p1">**</ept>.</source>
          <target state="new">You add an activity to the runbook by right clicking it in the Library control and selecting <bpt id="p1">**</bpt>Add to canvas<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can then click and drag the activity to place it anywhere on the canvas that you like.</source>
          <target state="new">You can then click and drag the activity to place it anywhere on the canvas that you like.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The location of the of the activity on the canvas does not effect the operation of the runbook in any way.</source>
          <target state="new">The location of the of the activity on the canvas does not effect the operation of the runbook in any way.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can layout your runbook however you find it most suitable to visualize its operation.</source>
          <target state="new">You can layout your runbook however you find it most suitable to visualize its operation.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Add to canvas</source>
          <target state="new">Add to canvas</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Select the activity on the canvas to configure its properties and parameters in the Configuration blade.</source>
          <target state="new">Select the activity on the canvas to configure its properties and parameters in the Configuration blade.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can change the <bpt id="p1">**</bpt>Label<ept id="p1">**</ept> of the activity to something that is descriptive to you.</source>
          <target state="new">You can change the <bpt id="p1">**</bpt>Label<ept id="p1">**</ept> of the activity to something that is descriptive to you.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The original cmdlet is still being run, you are simply changing its display name that will be used in the graphical editor.</source>
          <target state="new">The original cmdlet is still being run, you are simply changing its display name that will be used in the graphical editor.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The label must be unique within the runbook.</source>
          <target state="new">The label must be unique within the runbook.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Parameter sets</source>
          <target state="new">Parameter sets</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A parameter set defines the mandatory and optional parameters that will accept values for a particular cmdlet.</source>
          <target state="new">A parameter set defines the mandatory and optional parameters that will accept values for a particular cmdlet.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>All cmdlets have at least one parameter set, and some have multiple.</source>
          <target state="new">All cmdlets have at least one parameter set, and some have multiple.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If a cmdlet has multiple parameter sets, then you must select which one you will use before you can configure parameters.</source>
          <target state="new">If a cmdlet has multiple parameter sets, then you must select which one you will use before you can configure parameters.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The parameters that you can configure will depend on the parameter set that you choose.</source>
          <target state="new">The parameters that you can configure will depend on the parameter set that you choose.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can change the parameter set used by an activity by selecting <bpt id="p1">**</bpt>Parameter Set<ept id="p1">**</ept> and selecting another set.</source>
          <target state="new">You can change the parameter set used by an activity by selecting <bpt id="p1">**</bpt>Parameter Set<ept id="p1">**</ept> and selecting another set.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In this case, any parameter values that you configured are lost.</source>
          <target state="new">In this case, any parameter values that you configured are lost.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In the following example, the Get-AzureVM cmdlet has two parameter sets.</source>
          <target state="new">In the following example, the Get-AzureVM cmdlet has two parameter sets.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You cannot configure parameter values until you select one of the parameter sets.</source>
          <target state="new">You cannot configure parameter values until you select one of the parameter sets.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The ListAllVMs parameter set is for returning all virtual machines and has a single optional parameter.</source>
          <target state="new">The ListAllVMs parameter set is for returning all virtual machines and has a single optional parameter.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The GetVMByServiceand VMName is for specifying the virtual machine you want to return and has one mandatory and two optional parameters.</source>
          <target state="new">The GetVMByServiceand VMName is for specifying the virtual machine you want to return and has one mandatory and two optional parameters.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Parameter set</source>
          <target state="new">Parameter set</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Parameter values</source>
          <target state="new">Parameter values</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When you specify a value for a parameter, you select a data source to determine how the value will be specified.</source>
          <target state="new">When you specify a value for a parameter, you select a data source to determine how the value will be specified.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The data sources that are available for a particular parameter will depend on the valid values for that parameter.</source>
          <target state="new">The data sources that are available for a particular parameter will depend on the valid values for that parameter.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For example, Null will not be an available option for a parameter that does not allow null values.</source>
          <target state="new">For example, Null will not be an available option for a parameter that does not allow null values.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Data Source</source>
          <target state="new">Data Source</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Constant Value</source>
          <target state="new">Constant Value</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Type in a value for the parameter.</source>
          <target state="new">Type in a value for the parameter.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This is only available for the following data types: Int32,Int64,String,Boolean,DateTime,Switch.</source>
          <target state="new">This is only available for the following data types: Int32,Int64,String,Boolean,DateTime,Switch.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Activity Output</source>
          <target state="new">Activity Output</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Output from an activity that precedes the current activity in the workflow.</source>
          <target state="new">Output from an activity that precedes the current activity in the workflow.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>All valid activities will be listed.</source>
          <target state="new">All valid activities will be listed.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Select just the activity to use its output for the parameter value.</source>
          <target state="new">Select just the activity to use its output for the parameter value.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the activity outputs an object with multiple properties, then you can type in the name of the property after selecting the activity.</source>
          <target state="new">If the activity outputs an object with multiple properties, then you can type in the name of the property after selecting the activity.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Runbook Input Parameter</source>
          <target state="new">Runbook Input Parameter</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Select a runbook input parameter as input to the activity parameter.</source>
          <target state="new">Select a runbook input parameter as input to the activity parameter.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Automation Variable Asset</source>
          <target state="new">Automation Variable Asset</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Select an Automation Variable as input.</source>
          <target state="new">Select an Automation Variable as input.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Automation Credential Asset</source>
          <target state="new">Automation Credential Asset</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Select an Automation Credential as input.</source>
          <target state="new">Select an Automation Credential as input.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Automation Certificate Asset</source>
          <target state="new">Automation Certificate Asset</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Select an Automation Certificate as input.</source>
          <target state="new">Select an Automation Certificate as input.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Automation Connection Asset</source>
          <target state="new">Automation Connection Asset</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Select an Automation Connection as input.</source>
          <target state="new">Select an Automation Connection as input.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>PowerShell Expression</source>
          <target state="new">PowerShell Expression</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Specify simple PowerShell expression.</source>
          <target state="new">Specify simple PowerShell expression.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The expression will be evaluated before the activity and the result used for the parameter value.</source>
          <target state="new">The expression will be evaluated before the activity and the result used for the parameter value.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>You can use variables to refer to the output of an activity or a runbook input parameter.</source>
          <target state="new">You can use variables to refer to the output of an activity or a runbook input parameter.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Empty String</source>
          <target state="new">Empty String</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An empty string value.</source>
          <target state="new">An empty string value.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="new">Null</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A Null value.</source>
          <target state="new">A Null value.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Unselect</source>
          <target state="new">Unselect</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Clears any value that was previously configured.</source>
          <target state="new">Clears any value that was previously configured.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Optional additional parameters</source>
          <target state="new">Optional additional parameters</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>All cmdlets will have the option to provide additional parameters.</source>
          <target state="new">All cmdlets will have the option to provide additional parameters.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>These are PowerShell common parameters or other custom parameters.</source>
          <target state="new">These are PowerShell common parameters or other custom parameters.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>You are presented with a text box where you can provide parameters using PowerShell syntax.</source>
          <target state="new">You are presented with a text box where you can provide parameters using PowerShell syntax.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For example, to use the <bpt id="p1">**</bpt>Verbose<ept id="p1">**</ept> common parameter, you would specify <bpt id="p2">**</bpt>"-Verbose:$True"<ept id="p2">**</ept>.</source>
          <target state="new">For example, to use the <bpt id="p1">**</bpt>Verbose<ept id="p1">**</ept> common parameter, you would specify <bpt id="p2">**</bpt>"-Verbose:$True"<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Workflow Script control</source>
          <target state="new">Workflow Script control</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A Workflow Script control is a special activity that accepts PowerShell Workflow code in order to provide functionality that may otherwise not be available.</source>
          <target state="new">A Workflow Script control is a special activity that accepts PowerShell Workflow code in order to provide functionality that may otherwise not be available.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This is not a complete workflow but must contain valid lines of PowerShell Workflow code.</source>
          <target state="new">This is not a complete workflow but must contain valid lines of PowerShell Workflow code.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>It cannot accept parameters, but it can use variables for activity output and runbook input parameters.</source>
          <target state="new">It cannot accept parameters, but it can use variables for activity output and runbook input parameters.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Any output of the activity is added to the databus unless it has no outgoing link in which case it is added to the output of the runbook.</source>
          <target state="new">Any output of the activity is added to the databus unless it has no outgoing link in which case it is added to the output of the runbook.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For example the following code performs date calculations using a runbook input variable called $NumberOfDays.</source>
          <target state="new">For example the following code performs date calculations using a runbook input variable called $NumberOfDays.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>It then sends a calculated date time as output to be used by subsequent activities in the runbook.</source>
          <target state="new">It then sends a calculated date time as output to be used by subsequent activities in the runbook.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Links and workflow</source>
          <target state="new">Links and workflow</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>link<ept id="p1">**</ept> in a graphical runbook connects two activities.</source>
          <target state="new">A <bpt id="p1">**</bpt>link<ept id="p1">**</ept> in a graphical runbook connects two activities.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>It is displayed on the canvas as an arrow pointing from the source activity to the destination activity.</source>
          <target state="new">It is displayed on the canvas as an arrow pointing from the source activity to the destination activity.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The activities run in the direction of the arrow with the destination activity starting after the source activity completes.</source>
          <target state="new">The activities run in the direction of the arrow with the destination activity starting after the source activity completes.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Create a link</source>
          <target state="new">Create a link</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Create a link between two activities by selecting the source activity and clicking the circle at the bottom of the shape.</source>
          <target state="new">Create a link between two activities by selecting the source activity and clicking the circle at the bottom of the shape.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Drag the arrow to the destination activity and release.</source>
          <target state="new">Drag the arrow to the destination activity and release.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Create a link</source>
          <target state="new">Create a link</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Select the link to configure its properties in the Configuration blade.</source>
          <target state="new">Select the link to configure its properties in the Configuration blade.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This will include the link type which is described in the following table.</source>
          <target state="new">This will include the link type which is described in the following table.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Link Type</source>
          <target state="new">Link Type</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Pipeline</source>
          <target state="new">Pipeline</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The destination activity is run once for each object output from the source activity.</source>
          <target state="new">The destination activity is run once for each object output from the source activity.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The destination activity does not run if the source activity results in no output.</source>
          <target state="new">The destination activity does not run if the source activity results in no output.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Output from the source activity is available as an object.</source>
          <target state="new">Output from the source activity is available as an object.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Sequence</source>
          <target state="new">Sequence</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The destination activity runs only once.</source>
          <target state="new">The destination activity runs only once.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>It receives an array of objects from the source activity.</source>
          <target state="new">It receives an array of objects from the source activity.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Output from the source activity is available as an array of objects.</source>
          <target state="new">Output from the source activity is available as an array of objects.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Starting activity</source>
          <target state="new">Starting activity</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A graphical runbook will start with any activities that do not have an incoming link.</source>
          <target state="new">A graphical runbook will start with any activities that do not have an incoming link.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This will often be only one activity which would act as the starting activity for the runbook.</source>
          <target state="new">This will often be only one activity which would act as the starting activity for the runbook.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If multiple activities do not have an incoming link, then the runbook will start by running them in parallel.</source>
          <target state="new">If multiple activities do not have an incoming link, then the runbook will start by running them in parallel.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>It will then follow the links to run other activities as each completes.</source>
          <target state="new">It will then follow the links to run other activities as each completes.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Conditions</source>
          <target state="new">Conditions</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>When you specify a condition on a link, the destination activity is only run if the condition resolves to true.</source>
          <target state="new">When you specify a condition on a link, the destination activity is only run if the condition resolves to true.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>You will typically use an $ActivityOutput variable in a condition to retrieve the output from the source activity.</source>
          <target state="new">You will typically use an $ActivityOutput variable in a condition to retrieve the output from the source activity.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For a pipeline link, you specify a condition for a single object, and the condition is evaluated for each object output by the source activity.</source>
          <target state="new">For a pipeline link, you specify a condition for a single object, and the condition is evaluated for each object output by the source activity.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The destination activity is then run for each object that satisfies the condition.</source>
          <target state="new">The destination activity is then run for each object that satisfies the condition.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>For example, with a source activity of Get-AzureVM, the following syntax could be used for a conditional pipeline link to retrieve only virtual machines that are currently running.</source>
          <target state="new">For example, with a source activity of Get-AzureVM, the following syntax could be used for a conditional pipeline link to retrieve only virtual machines that are currently running.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>For a sequence link, the condition is only evaluated once since a single array is returned containing all objects output from the source activity.</source>
          <target state="new">For a sequence link, the condition is only evaluated once since a single array is returned containing all objects output from the source activity.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Because of this, a sequence link cannot be used for filtering like a pipeline link but will simply determine whether or not the next activity is run.</source>
          <target state="new">Because of this, a sequence link cannot be used for filtering like a pipeline link but will simply determine whether or not the next activity is run.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The following code shows the same example of evaluating output from Get-AzureVM to determine virtual machines that are running.</source>
          <target state="new">The following code shows the same example of evaluating output from Get-AzureVM to determine virtual machines that are running.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>In this case, the code walks through each object in the array and resolves to true if at least one virtual machine is running.</source>
          <target state="new">In this case, the code walks through each object in the array and resolves to true if at least one virtual machine is running.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The destination activity would be responsible for parsing this data.</source>
          <target state="new">The destination activity would be responsible for parsing this data.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>When you use a conditional link, the data available from the source activity to other activities in that branch will be filtered by the condition.</source>
          <target state="new">When you use a conditional link, the data available from the source activity to other activities in that branch will be filtered by the condition.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>If an activity is the source to multiple links, then the data available to activities in each branch will depend on the condition in the link connecting to that branch.</source>
          <target state="new">If an activity is the source to multiple links, then the data available to activities in each branch will depend on the condition in the link connecting to that branch.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For example, the source activity in the runbook below gets all virtual machines.</source>
          <target state="new">For example, the source activity in the runbook below gets all virtual machines.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>It has two conditional links and a link without a condition.</source>
          <target state="new">It has two conditional links and a link without a condition.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The first conditional link uses the expression <bpt id="p1">*</bpt>$ActivityOutput['Get-AzureVM'].PowerState -eq 'Started'<ept id="p1">*</ept> to filter only virtual machines that are currently running.</source>
          <target state="new">The first conditional link uses the expression <bpt id="p1">*</bpt>$ActivityOutput['Get-AzureVM'].PowerState -eq 'Started'<ept id="p1">*</ept> to filter only virtual machines that are currently running.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The second uses the expression <bpt id="p1">*</bpt>$ActivityOutput['Get-AzureVM'].PowerState -eq 'Stopped'<ept id="p1">*</ept> to filter only virtual machines that are currently stopped.</source>
          <target state="new">The second uses the expression <bpt id="p1">*</bpt>$ActivityOutput['Get-AzureVM'].PowerState -eq 'Stopped'<ept id="p1">*</ept> to filter only virtual machines that are currently stopped.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Conditional link example</source>
          <target state="new">Conditional link example</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Any activity that follows the first link and uses the activity output from Get-AzureVM will only get the virtual machines that were started at the time that Get-AzureVM was run.</source>
          <target state="new">Any activity that follows the first link and uses the activity output from Get-AzureVM will only get the virtual machines that were started at the time that Get-AzureVM was run.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Any activity that follows the second link will only get the the virtual machines that were stopped at the time that Get-AzureVM was run.</source>
          <target state="new">Any activity that follows the second link will only get the the virtual machines that were stopped at the time that Get-AzureVM was run.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Any activity following the third link will get all virtual machines regardless of their running state.</source>
          <target state="new">Any activity following the third link will get all virtual machines regardless of their running state.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Junctions</source>
          <target state="new">Junctions</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>A junction is a special activity that will wait until all incoming branches have completed.</source>
          <target state="new">A junction is a special activity that will wait until all incoming branches have completed.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This allows you to run multiple activities in parallel and ensure that all have completed before moving on.</source>
          <target state="new">This allows you to run multiple activities in parallel and ensure that all have completed before moving on.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>While a junction can have an unlimited number of incoming links, not more than one of those links can be a pipeline.</source>
          <target state="new">While a junction can have an unlimited number of incoming links, not more than one of those links can be a pipeline.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The number of incoming sequence links is not constrained.</source>
          <target state="new">The number of incoming sequence links is not constrained.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>You will be allowed to create the junction with multiple incoming pipeline links and save the runbook, but it will fail when it is run.</source>
          <target state="new">You will be allowed to create the junction with multiple incoming pipeline links and save the runbook, but it will fail when it is run.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The example below is part of a runbook that starts a set of virtual machines while simultaneously downloading patches to be applied to those machines.</source>
          <target state="new">The example below is part of a runbook that starts a set of virtual machines while simultaneously downloading patches to be applied to those machines.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A junction is used to ensure that both processes are completed before the runbook continues.</source>
          <target state="new">A junction is used to ensure that both processes are completed before the runbook continues.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Junction</source>
          <target state="new">Junction</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Cycles</source>
          <target state="new">Cycles</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>A cycle is when a destination activity links back to its source activity or to another activity that eventually links back to its source.</source>
          <target state="new">A cycle is when a destination activity links back to its source activity or to another activity that eventually links back to its source.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Cycles are currently not allowed in graphical authoring.</source>
          <target state="new">Cycles are currently not allowed in graphical authoring.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>If your runbook has a cycle, it will save properly but will receive an error when it runs.</source>
          <target state="new">If your runbook has a cycle, it will save properly but will receive an error when it runs.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Cycle</source>
          <target state="new">Cycle</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Loops</source>
          <target state="new">Loops</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A loop is when you repeat an activity a specified number of times or keep repeating it until a particular condition is met.</source>
          <target state="new">A loop is when you repeat an activity a specified number of times or keep repeating it until a particular condition is met.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Loops are currently not supported in graphical runbooks.</source>
          <target state="new">Loops are currently not supported in graphical runbooks.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Sharing data between activities</source>
          <target state="new">Sharing data between activities</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Any data that is output by an activity with an outgoing link is written to the <bpt id="p1">*</bpt>databus<ept id="p1">*</ept> for the runbook.</source>
          <target state="new">Any data that is output by an activity with an outgoing link is written to the <bpt id="p1">*</bpt>databus<ept id="p1">*</ept> for the runbook.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Any activity in the runbook can use data on the databus to populate parameter values or include in script code.</source>
          <target state="new">Any activity in the runbook can use data on the databus to populate parameter values or include in script code.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>An activity can access the output of any previous activity in the workflow.</source>
          <target state="new">An activity can access the output of any previous activity in the workflow.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>How the data is written to the databus depends on the type of link on the activity.</source>
          <target state="new">How the data is written to the databus depends on the type of link on the activity.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>For a <bpt id="p1">**</bpt>pipeline<ept id="p1">**</ept>, the data is output as multiples objects.</source>
          <target state="new">For a <bpt id="p1">**</bpt>pipeline<ept id="p1">**</ept>, the data is output as multiples objects.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>For a <bpt id="p1">**</bpt>sequence<ept id="p1">**</ept> link, the data is output as an array.</source>
          <target state="new">For a <bpt id="p1">**</bpt>sequence<ept id="p1">**</ept> link, the data is output as an array.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>If there is only one value, it will be output as a single element array.</source>
          <target state="new">If there is only one value, it will be output as a single element array.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>You can access data on the databus using one of two methods.</source>
          <target state="new">You can access data on the databus using one of two methods.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>First is using an <bpt id="p1">**</bpt>Activity Output<ept id="p1">**</ept> data source to populate a parameter of another activity.</source>
          <target state="new">First is using an <bpt id="p1">**</bpt>Activity Output<ept id="p1">**</ept> data source to populate a parameter of another activity.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>If the output is an object, you can specify a single property.</source>
          <target state="new">If the output is an object, you can specify a single property.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Activity output</source>
          <target state="new">Activity output</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>You can also retrieve the output of an activity in a <bpt id="p1">**</bpt>PowerShell Expression<ept id="p1">**</ept> data source or from a <bpt id="p2">**</bpt>Workflow Script<ept id="p2">**</ept> activity with an ActivityOutput variable.</source>
          <target state="new">You can also retrieve the output of an activity in a <bpt id="p1">**</bpt>PowerShell Expression<ept id="p1">**</ept> data source or from a <bpt id="p2">**</bpt>Workflow Script<ept id="p2">**</ept> activity with an ActivityOutput variable.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>If the output is an object, you can specify a single property.</source>
          <target state="new">If the output is an object, you can specify a single property.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>ActivityOutput variables use the following syntax.</source>
          <target state="new">ActivityOutput variables use the following syntax.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Checkpoints</source>
          <target state="new">Checkpoints</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The same guidance for setting <bpt id="p1">[</bpt>checkpoints<ept id="p1">](automation-powershell-workflow/#checkpoints)</ept> in your runbook applies to graphical runbooks.</source>
          <target state="new">The same guidance for setting <bpt id="p1">[</bpt>checkpoints<ept id="p1">](automation-powershell-workflow/#checkpoints)</ept> in your runbook applies to graphical runbooks.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>You can add an activity for the Checkpoint-Workflow cmdlet where you need to set a checkpoint.</source>
          <target state="new">You can add an activity for the Checkpoint-Workflow cmdlet where you need to set a checkpoint.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>You should then follow this activity with an Add-AzureAccount in case the runbook starts from this checkpoint on a different worker.</source>
          <target state="new">You should then follow this activity with an Add-AzureAccount in case the runbook starts from this checkpoint on a different worker.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Authenticating to Azure resources</source>
          <target state="new">Authenticating to Azure resources</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Most runbooks in Azure Automation will require authentication to Azure resources.</source>
          <target state="new">Most runbooks in Azure Automation will require authentication to Azure resources.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The typical method used for this authentication is the Add-AzureAccount cmdlet with a <bpt id="p1">[</bpt>credential asset<ept id="p1">](http://msdn.microsoft.com/library/dn940015.aspx)</ept> that represents an Active Directory user with access to the Azure account.</source>
          <target state="new">The typical method used for this authentication is the Add-AzureAccount cmdlet with a <bpt id="p1">[</bpt>credential asset<ept id="p1">](http://msdn.microsoft.com/library/dn940015.aspx)</ept> that represents an Active Directory user with access to the Azure account.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>This is discussed in <bpt id="p1">[</bpt>Configuring Azure Automation<ept id="p1">](automation-configuring.md)</ept>.</source>
          <target state="new">This is discussed in <bpt id="p1">[</bpt>Configuring Azure Automation<ept id="p1">](automation-configuring.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>You can add this functionality to a graphical runbook by adding a credential asset to the canvas followed by an Add-AzureAccount activity.</source>
          <target state="new">You can add this functionality to a graphical runbook by adding a credential asset to the canvas followed by an Add-AzureAccount activity.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Add-AzureAccount uses the credential activity for its input.</source>
          <target state="new">Add-AzureAccount uses the credential activity for its input.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>This is illustrated in the following example.</source>
          <target state="new">This is illustrated in the following example.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Authentication activities</source>
          <target state="new">Authentication activities</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>You have to authenticate at the start of the runbook and after each checkpoint.</source>
          <target state="new">You have to authenticate at the start of the runbook and after each checkpoint.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>This means adding an addition Add-AzureAccount activity after any Checkpoint-Workflow activity.</source>
          <target state="new">This means adding an addition Add-AzureAccount activity after any Checkpoint-Workflow activity.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>You do not need an addition credential activity since you can use the same</source>
          <target state="new">You do not need an addition credential activity since you can use the same</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Activity output</source>
          <target state="new">Activity output</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Runbook input and output</source>
          <target state="new">Runbook input and output</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Runbook input</source>
          <target state="new">Runbook input</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A runbook may require input either from a user when they start the runbook through the Azure preview portal or from another runbook if the current one is used as a child.</source>
          <target state="new">A runbook may require input either from a user when they start the runbook through the Azure preview portal or from another runbook if the current one is used as a child.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>For example, if you have a runbook that creates a virtual machine, you may need to provide information such as the name of the virtual machine and other properties each time you start the runbook.</source>
          <target state="new">For example, if you have a runbook that creates a virtual machine, you may need to provide information such as the name of the virtual machine and other properties each time you start the runbook.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>You accept input for a runbook by defining one or more input parameters.</source>
          <target state="new">You accept input for a runbook by defining one or more input parameters.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>You provide values for these parameters each time the runbook is started.</source>
          <target state="new">You provide values for these parameters each time the runbook is started.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>When you start a runbook with the Azure preview portal, it will prompt you to provide values for the each of the runbook's input parameters.</source>
          <target state="new">When you start a runbook with the Azure preview portal, it will prompt you to provide values for the each of the runbook's input parameters.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>You can access input parameters for a runbook by clicking the <bpt id="p1">**</bpt>Input and output<ept id="p1">**</ept> button on the runbook toolbar.</source>
          <target state="new">You can access input parameters for a runbook by clicking the <bpt id="p1">**</bpt>Input and output<ept id="p1">**</ept> button on the runbook toolbar.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Runbook Input Output</source>
          <target state="new">Runbook Input Output</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>This opens the <bpt id="p1">**</bpt>Input and Output<ept id="p1">**</ept> control where you can edit an existing input parameter or create a new one by clicking <bpt id="p2">**</bpt>Add input<ept id="p2">**</ept>.</source>
          <target state="new">This opens the <bpt id="p1">**</bpt>Input and Output<ept id="p1">**</ept> control where you can edit an existing input parameter or create a new one by clicking <bpt id="p2">**</bpt>Add input<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Add input</source>
          <target state="new">Add input</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Each input parameter is defined by the properties in the following table.</source>
          <target state="new">Each input parameter is defined by the properties in the following table.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new">Property</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="new">Name</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The unique name of the parameter.</source>
          <target state="new">The unique name of the parameter.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This can only contain alpha numeric characters and cannot contain a space.</source>
          <target state="new">This can only contain alpha numeric characters and cannot contain a space.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>An optional description for the input parameter.</source>
          <target state="new">An optional description for the input parameter.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Data type expected for the parameter value.</source>
          <target state="new">Data type expected for the parameter value.</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The Azure preview portal will provide an appropriate control for the data type for each parameter when prompting for input.</source>
          <target state="new">The Azure preview portal will provide an appropriate control for the data type for each parameter when prompting for input.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Mandatory</source>
          <target state="new">Mandatory</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Specifies whether a value must be provided for the parameter.</source>
          <target state="new">Specifies whether a value must be provided for the parameter.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The runbook cannot be started if you do not provide a value for each mandatory parameter that does not have a default value defined.</source>
          <target state="new">The runbook cannot be started if you do not provide a value for each mandatory parameter that does not have a default value defined.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Default Value</source>
          <target state="new">Default Value</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Specifies what value is used for the parameter if one is not provided.</source>
          <target state="new">Specifies what value is used for the parameter if one is not provided.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>This can either be Null or a specific value.</source>
          <target state="new">This can either be Null or a specific value.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Runbook output</source>
          <target state="new">Runbook output</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Data created by any activity that does not have an outgoing link will be added to the <bpt id="p1">[</bpt>output of the runbook<ept id="p1">](http://msdn.microsoft.com/library/azure/dn879148.aspx)</ept>.</source>
          <target state="new">Data created by any activity that does not have an outgoing link will be added to the <bpt id="p1">[</bpt>output of the runbook<ept id="p1">](http://msdn.microsoft.com/library/azure/dn879148.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The output is saved with the runbook job and is available to a parent runbook when the runbook is used as a child.</source>
          <target state="new">The output is saved with the runbook job and is available to a parent runbook when the runbook is used as a child.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Learning Windows PowerShell Workflow</source>
          <target state="new">Learning Windows PowerShell Workflow</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Automation assets</source>
          <target state="new">Automation assets</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">073c7ebc14d491de6868a05eeb2d8670ae9d6d0f</xliffext:olfilehash>
  </header>
</xliff>