<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use PlayReady DRM Dynamic Encryption and License Delivery Service</source>
          <target state="new">Use PlayReady DRM Dynamic Encryption and License Delivery Service</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Microsoft Azure Media Services enables you to deliver MPEG-DASH, Smooth Streaming, and Http-Live-Streaming (HLS) streams protected with Microsoft PlayReady DRM.</source>
          <target state="new">Microsoft Azure Media Services enables you to deliver MPEG-DASH, Smooth Streaming, and Http-Live-Streaming (HLS) streams protected with Microsoft PlayReady DRM.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows how to dynamically encrypt with PlayReady DRM and use the key delivery service.</source>
          <target state="new">This topic shows how to dynamically encrypt with PlayReady DRM and use the key delivery service.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Use PlayReady DRM Dynamic Encryption and License Delivery Service</source>
          <target state="new">Use PlayReady DRM Dynamic Encryption and License Delivery Service</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>.NET</source>
          <target state="new">.NET</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="new">Java</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Microsoft Azure Media Services enables you to deliver MPEG-DASH, Smooth Streaming, and Http-Live-Streaming (HLS) streams protected with <bpt id="p1">[</bpt>Microsoft PlayReady DRM<ept id="p1">](https://www.microsoft.com/playready/overview/)</ept>.</source>
          <target state="new">Microsoft Azure Media Services enables you to deliver MPEG-DASH, Smooth Streaming, and Http-Live-Streaming (HLS) streams protected with <bpt id="p1">[</bpt>Microsoft PlayReady DRM<ept id="p1">](https://www.microsoft.com/playready/overview/)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Media Services now provides a service for delivering Microsoft PlayReady licenses.</source>
          <target state="new">Media Services now provides a service for delivering Microsoft PlayReady licenses.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Media Services also provides APIs that let you configure the rights and restrictions that you want for the PlayReady DRM runtime to enforce when a user is trying to play back protected content.</source>
          <target state="new">Media Services also provides APIs that let you configure the rights and restrictions that you want for the PlayReady DRM runtime to enforce when a user is trying to play back protected content.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When a user requests to watch PlayReady protected content, the client player application requests the content from Azure Media Services.</source>
          <target state="new">When a user requests to watch PlayReady protected content, the client player application requests the content from Azure Media Services.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Azure Media Services then redirects the client to an Azure Media Services PlayReady licensing server that authenticates and authorizes the user’s access to the content.</source>
          <target state="new">Azure Media Services then redirects the client to an Azure Media Services PlayReady licensing server that authenticates and authorizes the user’s access to the content.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A PlayReady license contains the decryption key that can be used by the client player to decrypt and stream the content.</source>
          <target state="new">A PlayReady license contains the decryption key that can be used by the client player to decrypt and stream the content.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Media Services supports multiple ways of authenticating users who make key requests.</source>
          <target state="new">Media Services supports multiple ways of authenticating users who make key requests.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The content key authorization policy could have one or more authorization restrictions: open, token restriction, or IP restriction.</source>
          <target state="new">The content key authorization policy could have one or more authorization restrictions: open, token restriction, or IP restriction.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The token restricted policy must be accompanied by a token issued by a Secure Token Service (STS).</source>
          <target state="new">The token restricted policy must be accompanied by a token issued by a Secure Token Service (STS).</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Media Services supports tokens in the <bpt id="p1">[</bpt>Simple Web Tokens<ept id="p1">](https://msdn.microsoft.com/library/gg185950.aspx#BKMK_2)</ept> (SWT) format and <bpt id="p2">[</bpt>JSON Web Token<ept id="p2">](https://msdn.microsoft.com/library/gg185950.aspx#BKMK_3)</ept> (JWT) format.</source>
          <target state="new">Media Services supports tokens in the <bpt id="p1">[</bpt>Simple Web Tokens<ept id="p1">](https://msdn.microsoft.com/library/gg185950.aspx#BKMK_2)</ept> (SWT) format and <bpt id="p2">[</bpt>JSON Web Token<ept id="p2">](https://msdn.microsoft.com/library/gg185950.aspx#BKMK_3)</ept> (JWT) format.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see Configure the content key’s authorization policy.</source>
          <target state="new">For more information, see Configure the content key’s authorization policy.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To take advantage of dynamic encryption, you need to have an asset that contains a set of multi-bitrate MP4 files or multi-bitrate Smooth Streaming source files.</source>
          <target state="new">To take advantage of dynamic encryption, you need to have an asset that contains a set of multi-bitrate MP4 files or multi-bitrate Smooth Streaming source files.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You also need to configure the delivery policy for the asset (described later in this topic).</source>
          <target state="new">You also need to configure the delivery policy for the asset (described later in this topic).</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Then, based on the format specified in the streaming URL, the On-Demand Streaming server will ensure that the stream is delivered in the protocol you have chosen.</source>
          <target state="new">Then, based on the format specified in the streaming URL, the On-Demand Streaming server will ensure that the stream is delivered in the protocol you have chosen.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>As a result, you only need to store and pay for the files in single storage format and Media Services service will build and serve the appropriate response based on requests from a client.</source>
          <target state="new">As a result, you only need to store and pay for the files in single storage format and Media Services service will build and serve the appropriate response based on requests from a client.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This topic would be useful to developers that work on applications that deliver protected media.</source>
          <target state="new">This topic would be useful to developers that work on applications that deliver protected media.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The topic shows you how to configure the PlayReady license delivery service with authorization policies so that only authorized clients could receive PlayReady licenses.</source>
          <target state="new">The topic shows you how to configure the PlayReady license delivery service with authorization policies so that only authorized clients could receive PlayReady licenses.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It also shows how to use dynamic encryption.</source>
          <target state="new">It also shows how to use dynamic encryption.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>To start using dynamic encryption, you must first get at least one scale unit (also known as streaming unit).</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>To start using dynamic encryption, you must first get at least one scale unit (also known as streaming unit).</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to Scale a Media Service<ept id="p1">](media-services-manage-origins.md#scale_streaming_endpoints)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>How to Scale a Media Service<ept id="p1">](media-services-manage-origins.md#scale_streaming_endpoints)</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>PlayReady Dynamic Encryption and PlayReady License Delivery Service Workflow</source>
          <target state="new">PlayReady Dynamic Encryption and PlayReady License Delivery Service Workflow</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following are general steps that you would need to perform when protecting your assets with PlayReady, using the Media Services license delivery service, and also using dynamic encryption.</source>
          <target state="new">The following are general steps that you would need to perform when protecting your assets with PlayReady, using the Media Services license delivery service, and also using dynamic encryption.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Create an asset and upload files into the asset.</source>
          <target state="new">Create an asset and upload files into the asset.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Encode the asset containing the file to the adaptive bitrate MP4 set.</source>
          <target state="new">Encode the asset containing the file to the adaptive bitrate MP4 set.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Create a content key and associate it with the encoded asset.</source>
          <target state="new">Create a content key and associate it with the encoded asset.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In Media Services, the content key contains the asset’s encryption key.</source>
          <target state="new">In Media Services, the content key contains the asset’s encryption key.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see ContentKey.</source>
          <target state="new">For more information, see ContentKey.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Configure the content key’s authorization policy.</source>
          <target state="new">Configure the content key’s authorization policy.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The content key authorization policy must be configured by you and met by the client in order for the content key to be delivered to the client.</source>
          <target state="new">The content key authorization policy must be configured by you and met by the client in order for the content key to be delivered to the client.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Configure the delivery policy for an asset.</source>
          <target state="new">Configure the delivery policy for an asset.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The delivery policy configuration includes: delivery protocol (for example, MPEG DASH, HLS, HDS, Smooth Streaming or all), the type of dynamic encryption (for example, common encryption), PlayReady license acquisition URL.</source>
          <target state="new">The delivery policy configuration includes: delivery protocol (for example, MPEG DASH, HLS, HDS, Smooth Streaming or all), the type of dynamic encryption (for example, common encryption), PlayReady license acquisition URL.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You could apply different policy to each protocol on the same asset.</source>
          <target state="new">You could apply different policy to each protocol on the same asset.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, you could apply PlayReady encryption to Smooth/DASH and AES Envelope to HLS.</source>
          <target state="new">For example, you could apply PlayReady encryption to Smooth/DASH and AES Envelope to HLS.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Any protocols that are not defined in a delivery policy (for example, you add a single policy that only specifies HLS as the protocol) will be blocked from streaming.</source>
          <target state="new">Any protocols that are not defined in a delivery policy (for example, you add a single policy that only specifies HLS as the protocol) will be blocked from streaming.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The exception to this is if you have no asset delivery policy defined at all.</source>
          <target state="new">The exception to this is if you have no asset delivery policy defined at all.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Then, all protocols will be allowed in the clear.</source>
          <target state="new">Then, all protocols will be allowed in the clear.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Create an OnDemand locator in order to get a streaming URL.</source>
          <target state="new">Create an OnDemand locator in order to get a streaming URL.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You will find a complete .NET example at the end of the topic.</source>
          <target state="new">You will find a complete .NET example at the end of the topic.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following image demonstrates the workflow described above.</source>
          <target state="new">The following image demonstrates the workflow described above.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Here the token is used for authentication.</source>
          <target state="new">Here the token is used for authentication.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Protect with PlayReady</source>
          <target state="new">Protect with PlayReady</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The rest of this topic provides detailed explanations, code examples, and links to topics that show you how to achieve the tasks described above.</source>
          <target state="new">The rest of this topic provides detailed explanations, code examples, and links to topics that show you how to achieve the tasks described above.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Current limitations</source>
          <target state="new">Current limitations</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you add or update your asset’s delivery policy, you must delete an existing locator (if any) and create a new locator.</source>
          <target state="new">If you add or update your asset’s delivery policy, you must delete an existing locator (if any) and create a new locator.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Create an asset and upload files into the asset</source>
          <target state="new">Create an asset and upload files into the asset</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In order to manage, encode, and stream your videos, you must first upload your content into Microsoft Azure Media Services.</source>
          <target state="new">In order to manage, encode, and stream your videos, you must first upload your content into Microsoft Azure Media Services.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Once uploaded, your content is stored securely in the cloud for further processing and streaming.</source>
          <target state="new">Once uploaded, your content is stored securely in the cloud for further processing and streaming.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to create an asset and upload the specified file into the asset.</source>
          <target state="new">The following code snippet shows how to create an asset and upload the specified file into the asset.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Encode the asset containing the file to the adaptive bitrate MP4 set</source>
          <target state="new">Encode the asset containing the file to the adaptive bitrate MP4 set</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>With dynamic encryption all you need is to create an asset that contains a set of multi-bitrate MP4 files or multi-bitrate Smooth Streaming source files.</source>
          <target state="new">With dynamic encryption all you need is to create an asset that contains a set of multi-bitrate MP4 files or multi-bitrate Smooth Streaming source files.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Then, based on the specified format in the manifest or fragment request, the On-Demand Streaming server will ensure that you receive the stream in the protocol you have chosen.</source>
          <target state="new">Then, based on the specified format in the manifest or fragment request, the On-Demand Streaming server will ensure that you receive the stream in the protocol you have chosen.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>As a result, you only need to store and pay for the files in single storage format and Media Services service will build and serve the appropriate response based on requests from a client.</source>
          <target state="new">As a result, you only need to store and pay for the files in single storage format and Media Services service will build and serve the appropriate response based on requests from a client.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Dynamic Packaging Overview<ept id="p1">](media-services-dynamic-packaging-overview.md)</ept> topic.</source>
          <target state="new">For more information, see the <bpt id="p1">[</bpt>Dynamic Packaging Overview<ept id="p1">](media-services-dynamic-packaging-overview.md)</ept> topic.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following code snippet shows you how to encode an asset to adaptive bitrate MP4 set:</source>
          <target state="new">The following code snippet shows you how to encode an asset to adaptive bitrate MP4 set:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="create_contentkey"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create a content key and associate it with the encoded asset</source>
          <target state="new"><ph id="ph1">&lt;a id="create_contentkey"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create a content key and associate it with the encoded asset</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In Media Services, the content key contains the key that you want to encrypt an asset with.</source>
          <target state="new">In Media Services, the content key contains the key that you want to encrypt an asset with.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For detailed information, see <bpt id="p1">[</bpt>Create content key<ept id="p1">](media-services-dotnet-create-contentkey.md)</ept>.</source>
          <target state="new">For detailed information, see <bpt id="p1">[</bpt>Create content key<ept id="p1">](media-services-dotnet-create-contentkey.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="configure_key_auth_policy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Configure the content key’s authorization policy</source>
          <target state="new"><ph id="ph1">&lt;a id="configure_key_auth_policy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Configure the content key’s authorization policy</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Media Services supports multiple ways of authenticating users who make key requests.</source>
          <target state="new">Media Services supports multiple ways of authenticating users who make key requests.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The content key authorization policy must be configured by you and met by the client (player) in order for the key to be delivered to the client.</source>
          <target state="new">The content key authorization policy must be configured by you and met by the client (player) in order for the key to be delivered to the client.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The content key authorization policy could have one or more authorization restrictions: open, token restriction, or IP restriction.</source>
          <target state="new">The content key authorization policy could have one or more authorization restrictions: open, token restriction, or IP restriction.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For detailed information, see <bpt id="p1">[</bpt>Configure Content Key Authorization Policy<ept id="p1">](media-services-dotnet-configure-content-key-auth-policy.md#playready-dynamic-encryption)</ept>.</source>
          <target state="new">For detailed information, see <bpt id="p1">[</bpt>Configure Content Key Authorization Policy<ept id="p1">](media-services-dotnet-configure-content-key-auth-policy.md#playready-dynamic-encryption)</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="configure_asset_delivery_policy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Configure asset delivery policy</source>
          <target state="new"><ph id="ph1">&lt;a id="configure_asset_delivery_policy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Configure asset delivery policy</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Configure the delivery policy for your asset.</source>
          <target state="new">Configure the delivery policy for your asset.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Some things that the asset delivery policy configuration includes:</source>
          <target state="new">Some things that the asset delivery policy configuration includes:</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The PlayReady license acquisition URL.</source>
          <target state="new">The PlayReady license acquisition URL.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The asset delivery protocol (for example, MPEG DASH, HLS, HDS, Smooth Streaming or all).</source>
          <target state="new">The asset delivery protocol (for example, MPEG DASH, HLS, HDS, Smooth Streaming or all).</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The type of dynamic encryption (in this case, common encryption).</source>
          <target state="new">The type of dynamic encryption (in this case, common encryption).</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For detailed information, see <bpt id="p1">[</bpt>Configure asset delivery policy <ept id="p1">](media-services-rest-configure-asset-delivery-policy.md)</ept>.</source>
          <target state="new">For detailed information, see <bpt id="p1">[</bpt>Configure asset delivery policy <ept id="p1">](media-services-rest-configure-asset-delivery-policy.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="create_locator"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create an OnDemand streaming locator in order to get a streaming URL</source>
          <target state="new"><ph id="ph1">&lt;a id="create_locator"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create an OnDemand streaming locator in order to get a streaming URL</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You will need to provide your user with the streaming URL for Smooth, DASH or HLS.</source>
          <target state="new">You will need to provide your user with the streaming URL for Smooth, DASH or HLS.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>If you add or update your asset’s delivery policy, you must delete an existing locator (if any) and create a new locator.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>If you add or update your asset’s delivery policy, you must delete an existing locator (if any) and create a new locator.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For instructions on how to publish an asset and build a streaming URL, see <bpt id="p1">[</bpt>Build a streaming URL<ept id="p1">](media-services-deliver-streaming-content.md)</ept>.</source>
          <target state="new">For instructions on how to publish an asset and build a streaming URL, see <bpt id="p1">[</bpt>Build a streaming URL<ept id="p1">](media-services-deliver-streaming-content.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Get a test token</source>
          <target state="new">Get a test token</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Get a test token based on the token restriction that was used for the key authorization policy.</source>
          <target state="new">Get a test token based on the token restriction that was used for the key authorization policy.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>AMS Player<ept id="p1">](http://amsplayer.azurewebsites.net/azuremediaplayer.html)</ept> to test your stream.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt>AMS Player<ept id="p1">](http://amsplayer.azurewebsites.net/azuremediaplayer.html)</ept> to test your stream.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="example"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Example</source>
          <target state="new"><ph id="ph1">&lt;a id="example"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Example</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Create a new Console project.</source>
          <target state="new">Create a new Console project.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Use NuGet to install and add Azure Media Services .NET SDK Extensions.</source>
          <target state="new">Use NuGet to install and add Azure Media Services .NET SDK Extensions.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Installing this package, also installs Media Services .NET SDK and adds all other required dependencies.</source>
          <target state="new">Installing this package, also installs Media Services .NET SDK and adds all other required dependencies.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Add config file that contains the account name and key information:</source>
          <target state="new">Add config file that contains the account name and key information:</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Overwrite the code in your Program.cs file with the code shown in this section.</source>
          <target state="new">Overwrite the code in your Program.cs file with the code shown in this section.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Make sure to update variables to point to folders where your input files are located.</source>
          <target state="new">Make sure to update variables to point to folders where your input files are located.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96447e332f94338f7e42f2c9a6210a2f3c8a0b18</xliffext:olfilehash>
  </header>
</xliff>