<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Managing Media Services Entities with REST API</source>
          <target state="new">Managing Media Services Entities with REST API</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to manage Media Services entities with REST API.</source>
          <target state="new">Learn how to manage Media Services entities with REST API.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Managing Media Services Entities with REST API</source>
          <target state="new">Managing Media Services Entities with REST API</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>REST</source>
          <target state="new">REST</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>.NET</source>
          <target state="new">.NET</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Microsoft Azure Media Services is a REST-based service built on OData v3.</source>
          <target state="new">Microsoft Azure Media Services is a REST-based service built on OData v3.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Because of this, you can add, query, update, and delete entities in much the same way as you can on any other OData service.</source>
          <target state="new">Because of this, you can add, query, update, and delete entities in much the same way as you can on any other OData service.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Exceptions will be called out when applicable.</source>
          <target state="new">Exceptions will be called out when applicable.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information on OData, see <bpt id="p1">[</bpt>Open Data Protocol documentation<ept id="p1">](http://www.odata.org/documentation/)</ept>.</source>
          <target state="new">For more information on OData, see <bpt id="p1">[</bpt>Open Data Protocol documentation<ept id="p1">](http://www.odata.org/documentation/)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Adding entities</source>
          <target state="new">Adding entities</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Querying entities</source>
          <target state="new">Querying entities</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Updating entities</source>
          <target state="new">Updating entities</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Deleting entities</source>
          <target state="new">Deleting entities</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> When working with the Media Services REST API, the following considerations apply:</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> When working with the Media Services REST API, the following considerations apply:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.</source>
          <target state="new">When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Setup for Media Services REST API Development<ept id="p1">](media-services-rest-how-to-use.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Setup for Media Services REST API Development<ept id="p1">](media-services-rest-how-to-use.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.</source>
          <target state="new">After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You must make subsequent calls to the new URI as described in <bpt id="p1">[</bpt>Connecting to Media Services using REST API<ept id="p1">](media-services-rest-connect_programmatically.md)</ept>.</source>
          <target state="new">You must make subsequent calls to the new URI as described in <bpt id="p1">[</bpt>Connecting to Media Services using REST API<ept id="p1">](media-services-rest-connect_programmatically.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Adding entities</source>
          <target state="new">Adding entities</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Every entity in Media Services is added to an entity set, such as Assets, through a POST HTTP request.</source>
          <target state="new">Every entity in Media Services is added to an entity set, such as Assets, through a POST HTTP request.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an AccessPolicy.</source>
          <target state="new">The following example shows how to create an AccessPolicy.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Querying entities</source>
          <target state="new">Querying entities</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Querying and listing entities is straightforward and only involves a GET HTTP request and optional OData operations.</source>
          <target state="new">Querying and listing entities is straightforward and only involves a GET HTTP request and optional OData operations.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following example retrieves a list of all MediaProcessor entities.</source>
          <target state="new">The following example retrieves a list of all MediaProcessor entities.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can also retrieve a specific entity or all entity sets associated with a specific entity, such as in the following examples:</source>
          <target state="new">You can also retrieve a specific entity or all entity sets associated with a specific entity, such as in the following examples:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example returns only the State property of all Jobs.</source>
          <target state="new">The following example returns only the State property of all Jobs.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>The $expand operation is not supported in Media Services as well as the unsupported LINQ methods described in LINQ Considerations (WCF Data Services).</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>The $expand operation is not supported in Media Services as well as the unsupported LINQ methods described in LINQ Considerations (WCF Data Services).</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Updating entities</source>
          <target state="new">Updating entities</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Depending on the entity type and the state that it is in, you can update properties on that entity through a PATCH, PUT, or MERGE HTTP requests.</source>
          <target state="new">Depending on the entity type and the state that it is in, you can update properties on that entity through a PATCH, PUT, or MERGE HTTP requests.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information about these operations, see <bpt id="p1">[</bpt>PATCH/PUT/MERGE<ept id="p1">](https://msdn.microsoft.com/library/dd541276.aspx)</ept>.</source>
          <target state="new">For more information about these operations, see <bpt id="p1">[</bpt>PATCH/PUT/MERGE<ept id="p1">](https://msdn.microsoft.com/library/dd541276.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following code example shows how to update the Name property on an Asset entity.</source>
          <target state="new">The following code example shows how to update the Name property on an Asset entity.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Deleting entities</source>
          <target state="new">Deleting entities</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Entities can be deleted in Media Services by using a DELETE HTTP request.</source>
          <target state="new">Entities can be deleted in Media Services by using a DELETE HTTP request.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Depending on the entity, the order in which you delete entities may be important.</source>
          <target state="new">Depending on the entity, the order in which you delete entities may be important.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, entities such as Assets require that you revoke (or delete) all Locators that reference that particular Asset before deleting the Asset.</source>
          <target state="new">For example, entities such as Assets require that you revoke (or delete) all Locators that reference that particular Asset before deleting the Asset.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following example shows how to delete a Locator that was used to upload a file into blob storage.</source>
          <target state="new">The following example shows how to delete a Locator that was used to upload a file into blob storage.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38f4c3aaa6ee49b320849ca77f506acf1cf316c9</xliffext:olfilehash>
  </header>
</xliff>