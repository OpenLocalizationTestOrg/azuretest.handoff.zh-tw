<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create, monitor, and manage Azure data factories by using Data Factory SDK</source>
          <target state="new">Create, monitor, and manage Azure data factories by using Data Factory SDK</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to programmatically create, monitor, and manage Azure data factories by using Data Factory SDK.</source>
          <target state="new">Learn how to programmatically create, monitor, and manage Azure data factories by using Data Factory SDK.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create, monitor, and manage Azure data factories using Data Factory .NET SDK</source>
          <target state="new">Create, monitor, and manage Azure data factories using Data Factory .NET SDK</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can create, monitor, and manage Azure data factories programmatically using Data Factory .NET SDK.</source>
          <target state="new">You can create, monitor, and manage Azure data factories programmatically using Data Factory .NET SDK.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article contains a walkthrough that you can follow to create a sample .NET console application that creates and monitors a data factory.</source>
          <target state="new">This article contains a walkthrough that you can follow to create a sample .NET console application that creates and monitors a data factory.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Data Factory Class Library Reference<ept id="p1">][adf-class-library-reference]</ept> for details about Data Factory .NET SDK.</source>
          <target state="new">See <bpt id="p1">[</bpt>Data Factory Class Library Reference<ept id="p1">][adf-class-library-reference]</ept> for details about Data Factory .NET SDK.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Visual Studio 2012 or 2013</source>
          <target state="new">Visual Studio 2012 or 2013</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Download and install <bpt id="p1">[</bpt>Azure .NET SDK<ept id="p1">][azure-developer-center]</ept></source>
          <target state="new">Download and install <bpt id="p1">[</bpt>Azure .NET SDK<ept id="p1">][azure-developer-center]</ept></target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Download and install NuGet packages for Azure Data Factory.</source>
          <target state="new">Download and install NuGet packages for Azure Data Factory.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Instructions are in the walkthrough.</source>
          <target state="new">Instructions are in the walkthrough.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Walkthrough</source>
          <target state="new">Walkthrough</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Using Visual Studio 2012 or 2013, create a C# .NET console application.</source>
          <target state="new">Using Visual Studio 2012 or 2013, create a C# .NET console application.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Launch <ph id="ph1">&lt;b&gt;</ph>Visual Studio 2012<ph id="ph2">&lt;/b&gt;</ph> or <ph id="ph3">&lt;b&gt;</ph>Visual Studio 2013<ph id="ph4">&lt;/b&gt;</ph>.</source>
          <target state="new">Launch <ph id="ph1">&lt;b&gt;</ph>Visual Studio 2012<ph id="ph2">&lt;/b&gt;</ph> or <ph id="ph3">&lt;b&gt;</ph>Visual Studio 2013<ph id="ph4">&lt;/b&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Click <ph id="ph1">&lt;b&gt;</ph>File<ph id="ph2">&lt;/b&gt;</ph>, point to <ph id="ph3">&lt;b&gt;</ph>New<ph id="ph4">&lt;/b&gt;</ph>, and click <ph id="ph5">&lt;b&gt;</ph>Project<ph id="ph6">&lt;/b&gt;</ph>.</source>
          <target state="new">Click <ph id="ph1">&lt;b&gt;</ph>File<ph id="ph2">&lt;/b&gt;</ph>, point to <ph id="ph3">&lt;b&gt;</ph>New<ph id="ph4">&lt;/b&gt;</ph>, and click <ph id="ph5">&lt;b&gt;</ph>Project<ph id="ph6">&lt;/b&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Expand <ph id="ph1">&lt;b&gt;</ph>Templates<ph id="ph2">&lt;/b&gt;</ph>, and select <ph id="ph3">&lt;b&gt;</ph>Visual C#<ph id="ph4">&lt;/b&gt;</ph>.</source>
          <target state="new">Expand <ph id="ph1">&lt;b&gt;</ph>Templates<ph id="ph2">&lt;/b&gt;</ph>, and select <ph id="ph3">&lt;b&gt;</ph>Visual C#<ph id="ph4">&lt;/b&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In this walkthrough, you use C#, but you can use any .NET language.</source>
          <target state="new">In this walkthrough, you use C#, but you can use any .NET language.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Select <ph id="ph1">&lt;b&gt;</ph>Console Application<ph id="ph2">&lt;/b&gt;</ph> from the list of project types on the right.</source>
          <target state="new">Select <ph id="ph1">&lt;b&gt;</ph>Console Application<ph id="ph2">&lt;/b&gt;</ph> from the list of project types on the right.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Enter <ph id="ph1">&lt;b&gt;</ph>DataFactoryAPITestApp<ph id="ph2">&lt;/b&gt;</ph> for the <ph id="ph3">&lt;b&gt;</ph>Name<ph id="ph4">&lt;/b&gt;</ph>.</source>
          <target state="new">Enter <ph id="ph1">&lt;b&gt;</ph>DataFactoryAPITestApp<ph id="ph2">&lt;/b&gt;</ph> for the <ph id="ph3">&lt;b&gt;</ph>Name<ph id="ph4">&lt;/b&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Select <ph id="ph1">&lt;b&gt;</ph>C:\ADFGetStarted<ph id="ph2">&lt;/b&gt;</ph> for the <ph id="ph3">&lt;b&gt;</ph>Location<ph id="ph4">&lt;/b&gt;</ph>.</source>
          <target state="new">Select <ph id="ph1">&lt;b&gt;</ph>C:\ADFGetStarted<ph id="ph2">&lt;/b&gt;</ph> for the <ph id="ph3">&lt;b&gt;</ph>Location<ph id="ph4">&lt;/b&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Click <ph id="ph1">&lt;b&gt;</ph>OK<ph id="ph2">&lt;/b&gt;</ph> to create the project.</source>
          <target state="new">Click <ph id="ph1">&lt;b&gt;</ph>OK<ph id="ph2">&lt;/b&gt;</ph> to create the project.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Click <ph id="ph1">&lt;b&gt;</ph>Tools<ph id="ph2">&lt;/b&gt;</ph>, point to <ph id="ph3">&lt;b&gt;</ph>NuGet Package Manager<ph id="ph4">&lt;/b&gt;</ph>, and click <ph id="ph5">&lt;b&gt;</ph>Package Manager Console<ph id="ph6">&lt;/b&gt;</ph>.</source>
          <target state="new">Click <ph id="ph1">&lt;b&gt;</ph>Tools<ph id="ph2">&lt;/b&gt;</ph>, point to <ph id="ph3">&lt;b&gt;</ph>NuGet Package Manager<ph id="ph4">&lt;/b&gt;</ph>, and click <ph id="ph5">&lt;b&gt;</ph>Package Manager Console<ph id="ph6">&lt;/b&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;b&gt;</ph>Package Manager Console<ph id="ph2">&lt;/b&gt;</ph>, execute the following commands one-by-one.<ph id="ph3">&lt;/b&gt;</ph>.</source>
          <target state="new">In the <ph id="ph1">&lt;b&gt;</ph>Package Manager Console<ph id="ph2">&lt;/b&gt;</ph>, execute the following commands one-by-one.<ph id="ph3">&lt;/b&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add the following <bpt id="p1">**</bpt>appSetttings<ept id="p1">**</ept> section to the <bpt id="p2">**</bpt>App.config<ept id="p2">**</ept> file.</source>
          <target state="new">Add the following <bpt id="p1">**</bpt>appSetttings<ept id="p1">**</ept> section to the <bpt id="p2">**</bpt>App.config<ept id="p2">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>These are used by the helper method: <bpt id="p1">**</bpt>GetAuthorizationHeader<ept id="p1">**</ept>.</source>
          <target state="new">These are used by the helper method: <bpt id="p1">**</bpt>GetAuthorizationHeader<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Replace values for <bpt id="p1">**</bpt>SubscriptionId<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ActiveDirectoryTenantId<ept id="p2">**</ept> with your Azure subscription and tenant IDs.</source>
          <target state="new">Replace values for <bpt id="p1">**</bpt>SubscriptionId<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ActiveDirectoryTenantId<ept id="p2">**</ept> with your Azure subscription and tenant IDs.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can get these values by running <bpt id="p1">**</bpt>Get-AzureAccount<ept id="p1">**</ept> from Azure PowerShell (you may need to login first by using Add-AzureAccount).</source>
          <target state="new">You can get these values by running <bpt id="p1">**</bpt>Get-AzureAccount<ept id="p1">**</ept> from Azure PowerShell (you may need to login first by using Add-AzureAccount).</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Add the following <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statements to the source file (Program.cs) in the project.</source>
          <target state="new">Add the following <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statements to the source file (Program.cs) in the project.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add the following code that creates an instance of  <bpt id="p1">**</bpt>DataPipelineManagementClient<ept id="p1">**</ept> class to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</source>
          <target state="new">Add the following code that creates an instance of  <bpt id="p1">**</bpt>DataPipelineManagementClient<ept id="p1">**</ept> class to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You will use this object to create a data factory, a linked service, input and output tables, and a pipeline.</source>
          <target state="new">You will use this object to create a data factory, a linked service, input and output tables, and a pipeline.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You will also this object to monitor slices of a table at runtime.</source>
          <target state="new">You will also this object to monitor slices of a table at runtime.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Replace the <bpt id="p1">**</bpt>resourcegroupname<ept id="p1">**</ept> with the name of your Azure resource group.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Replace the <bpt id="p1">**</bpt>resourcegroupname<ept id="p1">**</ept> with the name of your Azure resource group.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can create a resource group using the <bpt id="p1">[</bpt>New-AzureResourceGroup<ept id="p1">](https://msdn.microsoft.com/library/Dn654594.aspx)</ept> cmdlet.</source>
          <target state="new">You can create a resource group using the <bpt id="p1">[</bpt>New-AzureResourceGroup<ept id="p1">](https://msdn.microsoft.com/library/Dn654594.aspx)</ept> cmdlet.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Add the following code that creates a <bpt id="p1">**</bpt>data factory<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</source>
          <target state="new">Add the following code that creates a <bpt id="p1">**</bpt>data factory<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Add the following code that creates a <bpt id="p1">**</bpt>linked service<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</source>
          <target state="new">Add the following code that creates a <bpt id="p1">**</bpt>linked service<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Use <bpt id="p1">**</bpt>account name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>account key<ept id="p2">**</ept> of your Azure storage account for the <bpt id="p3">**</bpt>ConnectionString<ept id="p3">**</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Use <bpt id="p1">**</bpt>account name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>account key<ept id="p2">**</ept> of your Azure storage account for the <bpt id="p3">**</bpt>ConnectionString<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Add the following code that creates <bpt id="p1">**</bpt>input and output tables<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</source>
          <target state="new">Add the following code that creates <bpt id="p1">**</bpt>input and output tables<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Note that the <bpt id="p1">**</bpt>FolderPath<ept id="p1">**</ept> for the input blob is set to <bpt id="p2">**</bpt>adftutorial/<ept id="p2">**</ept> where <bpt id="p3">**</bpt>adftutorial<ept id="p3">**</ept> is the  name of the container in your blob storage.</source>
          <target state="new">Note that the <bpt id="p1">**</bpt>FolderPath<ept id="p1">**</ept> for the input blob is set to <bpt id="p2">**</bpt>adftutorial/<ept id="p2">**</ept> where <bpt id="p3">**</bpt>adftutorial<ept id="p3">**</ept> is the  name of the container in your blob storage.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If this container does not exist in your Azure blob storage, create a container with this name: <bpt id="p1">**</bpt>adftutorial<ept id="p1">**</ept> and upload a text file to the container.</source>
          <target state="new">If this container does not exist in your Azure blob storage, create a container with this name: <bpt id="p1">**</bpt>adftutorial<ept id="p1">**</ept> and upload a text file to the container.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Note that the FolderPath for the output blob is set to: <bpt id="p1">**</bpt>adftutorial/apifactoryoutput/{Slice}<ept id="p1">**</ept> where <bpt id="p2">**</bpt>Slice<ept id="p2">**</ept> is dynamically calculated based on the value of <bpt id="p3">**</bpt>SliceStart<ept id="p3">**</ept> (start date-time of each slice.)</source>
          <target state="new">Note that the FolderPath for the output blob is set to: <bpt id="p1">**</bpt>adftutorial/apifactoryoutput/{Slice}<ept id="p1">**</ept> where <bpt id="p2">**</bpt>Slice<ept id="p2">**</ept> is dynamically calculated based on the value of <bpt id="p3">**</bpt>SliceStart<ept id="p3">**</ept> (start date-time of each slice.)</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Add the following code that <bpt id="p1">**</bpt>creates and activates a pipeline<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</source>
          <target state="new">Add the following code that <bpt id="p1">**</bpt>creates and activates a pipeline<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This pipeline has a <bpt id="p1">**</bpt>CopyActivity<ept id="p1">**</ept> that takes <bpt id="p2">**</bpt>BlobSource<ept id="p2">**</ept> as a source and <bpt id="p3">**</bpt>BlobSink<ept id="p3">**</ept> as a sink.</source>
          <target state="new">This pipeline has a <bpt id="p1">**</bpt>CopyActivity<ept id="p1">**</ept> that takes <bpt id="p2">**</bpt>BlobSource<ept id="p2">**</ept> as a source and <bpt id="p3">**</bpt>BlobSink<ept id="p3">**</ept> as a sink.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Add the following helper method used by the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method to the <bpt id="p2">**</bpt>Program<ept id="p2">**</ept> class.</source>
          <target state="new">Add the following helper method used by the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method to the <bpt id="p2">**</bpt>Program<ept id="p2">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This method pops a dialog box that that lets you provide <bpt id="p1">**</bpt>user name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>password<ept id="p2">**</ept> that you use to login to Azure portal.</source>
          <target state="new">This method pops a dialog box that that lets you provide <bpt id="p1">**</bpt>user name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>password<ept id="p2">**</ept> that you use to login to Azure portal.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method to get the status of a data slice of the output table.</source>
          <target state="new">Add the following code to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method to get the status of a data slice of the output table.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>There is only slice expected in this sample.</source>
          <target state="new">There is only slice expected in this sample.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>(optional)<ept id="p1">**</ept> Add the following code to get run details for a data slice slice to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</source>
          <target state="new"><bpt id="p1">**</bpt>(optional)<ept id="p1">**</ept> Add the following code to get run details for a data slice slice to the <bpt id="p2">**</bpt>Main<ept id="p2">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Build the console application.</source>
          <target state="new">Build the console application.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Build<ept id="p1">**</ept> on the menu and click <bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Build<ept id="p1">**</ept> on the menu and click <bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you get an error about <bpt id="p1">**</bpt>ConfigurationManager<ept id="p1">**</ept> class, add a reference to the <bpt id="p2">**</bpt>System.Configuration<ept id="p2">**</ept> assembly and try to build again.</source>
          <target state="new">If you get an error about <bpt id="p1">**</bpt>ConfigurationManager<ept id="p1">**</ept> class, add a reference to the <bpt id="p2">**</bpt>System.Configuration<ept id="p2">**</ept> assembly and try to build again.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Confirm that there is at least one file in the adftutorial container in your Azure blob storage.</source>
          <target state="new">Confirm that there is at least one file in the adftutorial container in your Azure blob storage.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If not, create Emp.txt file in Notepad with the following content and upload it to the adftutorial container.</source>
          <target state="new">If not, create Emp.txt file in Notepad with the following content and upload it to the adftutorial container.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Run the sample by clicking <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept> on the menu.</source>
          <target state="new">Run the sample by clicking <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept> on the menu.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When you see the <bpt id="p1">**</bpt>Getting run details of a data slice<ept id="p1">**</ept>, wait for a few minutes, and press <bpt id="p2">**</bpt>ENTER<ept id="p2">**</ept>.</source>
          <target state="new">When you see the <bpt id="p1">**</bpt>Getting run details of a data slice<ept id="p1">**</ept>, wait for a few minutes, and press <bpt id="p2">**</bpt>ENTER<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Use the Azure Preview Portal to verify that the data factory: <bpt id="p1">**</bpt>APITutorialFactory<ept id="p1">**</ept> is created with the following artifacts:</source>
          <target state="new">Use the Azure Preview Portal to verify that the data factory: <bpt id="p1">**</bpt>APITutorialFactory<ept id="p1">**</ept> is created with the following artifacts:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Linked service: <bpt id="p1">**</bpt>LinkedService_AzureStorage<ept id="p1">**</ept></source>
          <target state="new">Linked service: <bpt id="p1">**</bpt>LinkedService_AzureStorage<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Tables: <bpt id="p1">**</bpt>TableBlobSource<ept id="p1">**</ept> and <bpt id="p2">**</bpt>TableBlobDestination<ept id="p2">**</ept>.</source>
          <target state="new">Tables: <bpt id="p1">**</bpt>TableBlobSource<ept id="p1">**</ept> and <bpt id="p2">**</bpt>TableBlobDestination<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Pipeline: <bpt id="p1">**</bpt>PipelineBlobSample<ept id="p1">**</ept></source>
          <target state="new">Pipeline: <bpt id="p1">**</bpt>PipelineBlobSample<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Verify that an output file is created in the <bpt id="p1">**</bpt>apifactoryoutput<ept id="p1">**</ept> folder in the <bpt id="p2">**</bpt>adftutorial<ept id="p2">**</ept> container.</source>
          <target state="new">Verify that an output file is created in the <bpt id="p1">**</bpt>apifactoryoutput<ept id="p1">**</ept> folder in the <bpt id="p2">**</bpt>adftutorial<ept id="p2">**</ept> container.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="new">See Also</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Article</source>
          <target state="new">Article</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Azure Data Factory Developer Reference</source>
          <target state="new">Azure Data Factory Developer Reference</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The Developer Reference has the comprehensive reference content for .NET class library, cmdlets, JSON script, functions, etc…</source>
          <target state="new">The Developer Reference has the comprehensive reference content for .NET class library, cmdlets, JSON script, functions, etc…</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ac69a1a5828862103c350d8d14ae523ba179474</xliffext:olfilehash>
  </header>
</xliff>