<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Custom Test Scenarios</source>
          <target state="new">Custom Test Scenarios</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to harden your services against Graceful/Ungraceful failures</source>
          <target state="new">How to harden your services against Graceful/Ungraceful failures</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Simulate failures during service workloads</source>
          <target state="new">Simulate failures during service workloads</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The scenarios shipping with Testability enable developers to not worry about dealing with individual faults.</source>
          <target state="new">The scenarios shipping with Testability enable developers to not worry about dealing with individual faults.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are scenarios however, where an explicit interleaving of client workload and failures might be needed.</source>
          <target state="new">There are scenarios however, where an explicit interleaving of client workload and failures might be needed.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The interleaving of client workload and faults, ensures that the service is actually performing some action when failure happens.</source>
          <target state="new">The interleaving of client workload and faults, ensures that the service is actually performing some action when failure happens.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Given the level of control testability provides these could be at precise points of the workload execution.</source>
          <target state="new">Given the level of control testability provides these could be at precise points of the workload execution.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This induction of faults at different states in the application can find bugs and improve quality.</source>
          <target state="new">This induction of faults at different states in the application can find bugs and improve quality.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Sample custom scenario</source>
          <target state="new">Sample custom scenario</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This test shows a scenario where the interleaving of business workload with <bpt id="p1">[</bpt>graceful and ungraceful failures<ept id="p1">](service-fabric-testability-actions.md#graceful-vs-ungraceful-fault-actions)</ept>.</source>
          <target state="new">This test shows a scenario where the interleaving of business workload with <bpt id="p1">[</bpt>graceful and ungraceful failures<ept id="p1">](service-fabric-testability-actions.md#graceful-vs-ungraceful-fault-actions)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The faults should be induced while in the middle of service operations or compute for best results.</source>
          <target state="new">The faults should be induced while in the middle of service operations or compute for best results.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Lets walk through an example of a serice that exposes four workloads A, B, C and D. Each corresponds to a set of workflows and could be compute, storage or a mix.</source>
          <target state="new">Lets walk through an example of a serice that exposes four workloads A, B, C and D. Each corresponds to a set of workflows and could be compute, storage or a mix.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For the sake of simplicity we will abstract out the workloads in our example.</source>
          <target state="new">For the sake of simplicity we will abstract out the workloads in our example.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The different faults executed in this example are.</source>
          <target state="new">The different faults executed in this example are.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>RestartNode: Ungraceful fault to simulate a machine restart</source>
          <target state="new">RestartNode: Ungraceful fault to simulate a machine restart</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>RestartDeployedCodePackage: Ungraceful fault to simulate service host process crashes</source>
          <target state="new">RestartDeployedCodePackage: Ungraceful fault to simulate service host process crashes</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>RemoveReplica: Graceful fault to simulate replica removal</source>
          <target state="new">RemoveReplica: Graceful fault to simulate replica removal</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>MovePrimary: Graceful fault to simulate replica moves triggered by Service Fabric Load Balancer</source>
          <target state="new">MovePrimary: Graceful fault to simulate replica moves triggered by Service Fabric Load Balancer</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b072ff9dd99e221ff04480c590d90f9bd29954a</xliffext:olfilehash>
  </header>
</xliff>