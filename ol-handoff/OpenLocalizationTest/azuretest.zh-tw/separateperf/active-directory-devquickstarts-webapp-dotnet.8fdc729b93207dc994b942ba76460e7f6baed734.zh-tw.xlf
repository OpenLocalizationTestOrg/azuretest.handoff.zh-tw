<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure AD .NET Getting Started | Microsoft Azure</source>
          <target state="new">Azure AD .NET Getting Started | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to build a .NET MVC Web App that integrates with Azure AD for sign in.</source>
          <target state="new">How to build a .NET MVC Web App that integrates with Azure AD for sign in.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Web App Sign In &amp; Sign Out with Azure AD</source>
          <target state="new">Web App Sign In &amp; Sign Out with Azure AD</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure AD makes it simple and straightforward to outsource your web app's identity management, providing single sign-in and sign-out with only a few lines of code.</source>
          <target state="new">Azure AD makes it simple and straightforward to outsource your web app's identity management, providing single sign-in and sign-out with only a few lines of code.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In Asp.NET web apps, you can accomplish this using Microsoft's implementation of the community-driven OWIN middleware included in .NET Framework 4.5.</source>
          <target state="new">In Asp.NET web apps, you can accomplish this using Microsoft's implementation of the community-driven OWIN middleware included in .NET Framework 4.5.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Here we'll use OWIN to:</source>
          <target state="new">Here we'll use OWIN to:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Sign the user into the app using Azure AD as the identity provider.</source>
          <target state="new">Sign the user into the app using Azure AD as the identity provider.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Display some information about the user.</source>
          <target state="new">Display some information about the user.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Sign the user out of the app.</source>
          <target state="new">Sign the user out of the app.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In order to do this, you'll need to:</source>
          <target state="new">In order to do this, you'll need to:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Register an application with Azure AD</source>
          <target state="new">Register an application with Azure AD</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Set up your app to use the OWIN authentication pipeline.</source>
          <target state="new">Set up your app to use the OWIN authentication pipeline.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use OWIN to issue sign-in and sign-out requests to Azure AD.</source>
          <target state="new">Use OWIN to issue sign-in and sign-out requests to Azure AD.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Print out data about the user.</source>
          <target state="new">Print out data about the user.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To get started, <bpt id="p1">[</bpt>download the app skeleton<ept id="p1">](https://github.com/AzureADQuickStarts/WebApp-OpenIdConnect-DotNet/archive/skeleton.zip)</ept> or <bpt id="p2">[</bpt>download the completed sample<ept id="p2">](https://github.com/AzureADQuickStarts/WebApp-OpenIdConnect-DotNet/archive/complete.zip)</ept>.</source>
          <target state="new">To get started, <bpt id="p1">[</bpt>download the app skeleton<ept id="p1">](https://github.com/AzureADQuickStarts/WebApp-OpenIdConnect-DotNet/archive/skeleton.zip)</ept> or <bpt id="p2">[</bpt>download the completed sample<ept id="p2">](https://github.com/AzureADQuickStarts/WebApp-OpenIdConnect-DotNet/archive/complete.zip)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You'll also need an Azure AD tenant in which to register your application.</source>
          <target state="new">You'll also need an Azure AD tenant in which to register your application.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you don't have one already, <bpt id="p1">[</bpt>learn how to get one<ept id="p1">](active-directory-howto-tenant.md)</ept>.</source>
          <target state="new">If you don't have one already, <bpt id="p1">[</bpt>learn how to get one<ept id="p1">](active-directory-howto-tenant.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>1.  Register an Application with Azure AD</source>
          <target state="new">1.  Register an Application with Azure AD</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To enable your app to authenticate users, you'll first need to register a new application in your tenant.</source>
          <target state="new">To enable your app to authenticate users, you'll first need to register a new application in your tenant.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Sign into the Azure Management Portal.</source>
          <target state="new">Sign into the Azure Management Portal.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the left hand nav, click on <bpt id="p1">**</bpt>Active Directory<ept id="p1">**</ept>.</source>
          <target state="new">In the left hand nav, click on <bpt id="p1">**</bpt>Active Directory<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Select the tenant where you wish to register the application.</source>
          <target state="new">Select the tenant where you wish to register the application.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Applications<ept id="p1">**</ept> tab, and click add in the bottom drawer.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Applications<ept id="p1">**</ept> tab, and click add in the bottom drawer.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Follow the prompts and create a new <bpt id="p1">**</bpt>Web Application and/or WebAPI<ept id="p1">**</ept>.</source>
          <target state="new">Follow the prompts and create a new <bpt id="p1">**</bpt>Web Application and/or WebAPI<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>name<ept id="p1">**</ept> of the application will describe your application to end-users</source>
          <target state="new">The <bpt id="p1">**</bpt>name<ept id="p1">**</ept> of the application will describe your application to end-users</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Sign-On URL<ept id="p1">**</ept> is the base URL of your app.</source>
          <target state="new">The <bpt id="p1">**</bpt>Sign-On URL<ept id="p1">**</ept> is the base URL of your app.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The skeleton's default is <ph id="ph1">`https://localhost:44320/`</ph>.</source>
          <target state="new">The skeleton's default is <ph id="ph1">`https://localhost:44320/`</ph>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>App ID URI<ept id="p1">**</ept> is a unique identifier for your application.</source>
          <target state="new">The <bpt id="p1">**</bpt>App ID URI<ept id="p1">**</ept> is a unique identifier for your application.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The convention is to use <ph id="ph1">`https://&lt;tenant-domain&gt;/&lt;app-name&gt;`</ph>, e.g. <ph id="ph2">`https://contoso.onmicrosoft.com/my-first-aad-app`</ph></source>
          <target state="new">The convention is to use <ph id="ph1">`https://&lt;tenant-domain&gt;/&lt;app-name&gt;`</ph>, e.g. <ph id="ph2">`https://contoso.onmicrosoft.com/my-first-aad-app`</ph></target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Once you've completed registration, AAD will assign your app a unique client identifier.</source>
          <target state="new">Once you've completed registration, AAD will assign your app a unique client identifier.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You'll need this value in the next sections, so copy it from the Configure tab.</source>
          <target state="new">You'll need this value in the next sections, so copy it from the Configure tab.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>2. Set up your app to use the OWIN authentication pipeline</source>
          <target state="new">2. Set up your app to use the OWIN authentication pipeline</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Here, we'll configure the OWIN middleware to use the OpenID Connect authentication protocol.</source>
          <target state="new">Here, we'll configure the OWIN middleware to use the OpenID Connect authentication protocol.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>OWIN will be used to issue sign-in and sign-out requests, manage the user's session, and get information about the user, amongst other things.</source>
          <target state="new">OWIN will be used to issue sign-in and sign-out requests, manage the user's session, and get information about the user, amongst other things.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To begin, add the OWIN middleware NuGet packages to the project using the Package Manager Console.</source>
          <target state="new">To begin, add the OWIN middleware NuGet packages to the project using the Package Manager Console.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Add an OWIN Startup class to the project called <ph id="ph1">`Startup.cs`</ph>  Right click on the project --&gt; <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> --&gt; <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept> --&gt; Search for "OWIN".</source>
          <target state="new">Add an OWIN Startup class to the project called <ph id="ph1">`Startup.cs`</ph>  Right click on the project --&gt; <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> --&gt; <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept> --&gt; Search for "OWIN".</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The OWIN middleware will invoke the <ph id="ph1">`Configuration(...)`</ph> method when your app starts.</source>
          <target state="new">The OWIN middleware will invoke the <ph id="ph1">`Configuration(...)`</ph> method when your app starts.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Change the class declaration to <ph id="ph1">`public partial class Startup`</ph> - we've already implemented part of this class for you in another file.</source>
          <target state="new">Change the class declaration to <ph id="ph1">`public partial class Startup`</ph> - we've already implemented part of this class for you in another file.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`Configuration(...)`</ph> method, make a call to ConfgureAuth(...) to set up authentication for your web app</source>
          <target state="new">In the <ph id="ph1">`Configuration(...)`</ph> method, make a call to ConfgureAuth(...) to set up authentication for your web app</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Open the file <ph id="ph1">`App_Start\Startup.Auth.cs`</ph> and implement the <ph id="ph2">`ConfigureAuth(...)`</ph> method.</source>
          <target state="new">Open the file <ph id="ph1">`App_Start\Startup.Auth.cs`</ph> and implement the <ph id="ph2">`ConfigureAuth(...)`</ph> method.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The parameters you provide in <ph id="ph1">`OpenIDConnectAuthenticationOptions`</ph> will serve as coordinates for your app to communicate with Azure AD.</source>
          <target state="new">The parameters you provide in <ph id="ph1">`OpenIDConnectAuthenticationOptions`</ph> will serve as coordinates for your app to communicate with Azure AD.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You'll also need to set up Cookie Authentication - the OpenID Connect middleware uses cookies underneath the covers.</source>
          <target state="new">You'll also need to set up Cookie Authentication - the OpenID Connect middleware uses cookies underneath the covers.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Finally, open the <ph id="ph1">`web.config`</ph> file in the root of the project, and enter your configuration values in the <ph id="ph2">`&lt;appSettings&gt;`</ph> section.</source>
          <target state="new">Finally, open the <ph id="ph1">`web.config`</ph> file in the root of the project, and enter your configuration values in the <ph id="ph2">`&lt;appSettings&gt;`</ph> section.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Your app's <ph id="ph1">`ida:ClientId`</ph> is the Guid you copied from the Azure Portal in Step 1.</source>
          <target state="new">Your app's <ph id="ph1">`ida:ClientId`</ph> is the Guid you copied from the Azure Portal in Step 1.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ida:Tenant`</ph> is the name of your Azure AD tenant, e.g. "contoso.onmicrosoft.com".</source>
          <target state="new">The <ph id="ph1">`ida:Tenant`</ph> is the name of your Azure AD tenant, e.g. "contoso.onmicrosoft.com".</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Your <ph id="ph1">`ida:PostLogoutRedirectUri`</ph> indicates to Azure AD where a user should be redirected after a sign-out request successfully completes.</source>
          <target state="new">Your <ph id="ph1">`ida:PostLogoutRedirectUri`</ph> indicates to Azure AD where a user should be redirected after a sign-out request successfully completes.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>3. Use OWIN to issue sign-in and sign-out requests to Azure AD</source>
          <target state="new">3. Use OWIN to issue sign-in and sign-out requests to Azure AD</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Your app is now properly configured to communicate with Azure AD using the OpenID Connect authentication protocol.</source>
          <target state="new">Your app is now properly configured to communicate with Azure AD using the OpenID Connect authentication protocol.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>OWIN has taken care of all of the ugly details of crafting authentication messages, validating tokens from Azure AD, and maintaining user session.</source>
          <target state="new">OWIN has taken care of all of the ugly details of crafting authentication messages, validating tokens from Azure AD, and maintaining user session.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>All that remains is to give your users a way to sign in and sign out.</source>
          <target state="new">All that remains is to give your users a way to sign in and sign out.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can use authorize tags in your controllers to require that user signs in before accessing a certain page.</source>
          <target state="new">You can use authorize tags in your controllers to require that user signs in before accessing a certain page.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">`Controllers\HomeController.cs`</ph>, and add the <ph id="ph2">`[Authorize]`</ph> tag to the About controller.</source>
          <target state="new">Open <ph id="ph1">`Controllers\HomeController.cs`</ph>, and add the <ph id="ph2">`[Authorize]`</ph> tag to the About controller.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can also use OWIN to directly issue authentication requests from within your code.</source>
          <target state="new">You can also use OWIN to directly issue authentication requests from within your code.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">`Controllers\AccountController.cs`</ph>.</source>
          <target state="new">Open <ph id="ph1">`Controllers\AccountController.cs`</ph>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the SignIn() and SignOut() actions, issue OpenID Connect challenge and sign-out requests, respectively.</source>
          <target state="new">In the SignIn() and SignOut() actions, issue OpenID Connect challenge and sign-out requests, respectively.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Now, open <ph id="ph1">`Views\Shared\_LoginPartial.cshtml`</ph>.</source>
          <target state="new">Now, open <ph id="ph1">`Views\Shared\_LoginPartial.cshtml`</ph>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This is where you'll show the user your app's sign-in and sign-out links, and print out the user's name in a view.</source>
          <target state="new">This is where you'll show the user your app's sign-in and sign-out links, and print out the user's name in a view.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>4.  Display user information</source>
          <target state="new">4.  Display user information</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When authenticating users with OpenID Connect, Azure AD returns an id_token to the application that contains "claims," or assertions about the user.</source>
          <target state="new">When authenticating users with OpenID Connect, Azure AD returns an id_token to the application that contains "claims," or assertions about the user.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can use these claims to personalize your app:</source>
          <target state="new">You can use these claims to personalize your app:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`Controllers\HomeController.cs`</ph> file.</source>
          <target state="new">Open the <ph id="ph1">`Controllers\HomeController.cs`</ph> file.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can access the user's claims in your controllers via the <ph id="ph1">`ClaimsPrincipal.Current`</ph> security principal object.</source>
          <target state="new">You can access the user's claims in your controllers via the <ph id="ph1">`ClaimsPrincipal.Current`</ph> security principal object.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Finally, build and run your app!</source>
          <target state="new">Finally, build and run your app!</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you haven't already, now is the time to create a new user in your tenant with a *.onmicrosoft.com domain.</source>
          <target state="new">If you haven't already, now is the time to create a new user in your tenant with a *.onmicrosoft.com domain.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Sign in with that user, and notice how the user's identity is reflected in the top navigation bar.</source>
          <target state="new">Sign in with that user, and notice how the user's identity is reflected in the top navigation bar.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Sign out, and sign back in as another user in your tenant.</source>
          <target state="new">Sign out, and sign back in as another user in your tenant.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If you're feeling particularly ambitious, register and run another instance of this application (with its own clientId), and watch see single-sign on in action.</source>
          <target state="new">If you're feeling particularly ambitious, register and run another instance of this application (with its own clientId), and watch see single-sign on in action.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For reference, the completed sample (without your configuration values) <bpt id="p1">[</bpt>is provided here<ept id="p1">](https://github.com/AzureADQuickStarts/WebApp-OpenIdConnect-DotNet/archive/complete.zip)</ept>.</source>
          <target state="new">For reference, the completed sample (without your configuration values) <bpt id="p1">[</bpt>is provided here<ept id="p1">](https://github.com/AzureADQuickStarts/WebApp-OpenIdConnect-DotNet/archive/complete.zip)</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can now move onto more advanced topics.</source>
          <target state="new">You can now move onto more advanced topics.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You may want to try:</source>
          <target state="new">You may want to try:</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Secure a Web API with Azure AD &gt;&gt;</source>
          <target state="new">Secure a Web API with Azure AD &gt;&gt;</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6bc75a7f3177d4c87faacfc3153433be3d75b6e4</xliffext:olfilehash>
  </header>
</xliff>