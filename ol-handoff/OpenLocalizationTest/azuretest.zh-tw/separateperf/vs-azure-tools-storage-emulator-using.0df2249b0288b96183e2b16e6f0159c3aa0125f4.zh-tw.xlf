<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Configuring and using the Storage Emulator with Visual Studio</source>
          <target state="new">Configuring and using the Storage Emulator with Visual Studio</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Configuring and using the Storage Emulator with Visual Studio</source>
          <target state="new">Configuring and using the Storage Emulator with Visual Studio</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Configuring and Using the Storage Emulator with Visual Studio</source>
          <target state="new">Configuring and Using the Storage Emulator with Visual Studio</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Azure SDK development environment includes the storage emulator, a utility that simulates the Blob, Queue, and Table storage services available in Azure on your local development machine.</source>
          <target state="new">The Azure SDK development environment includes the storage emulator, a utility that simulates the Blob, Queue, and Table storage services available in Azure on your local development machine.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you are building a cloud service that employs the Azure storage services, or writing any external application that calls the storage services, you can test your code locally against the storage emulator.</source>
          <target state="new">If you are building a cloud service that employs the Azure storage services, or writing any external application that calls the storage services, you can test your code locally against the storage emulator.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The Azure Tools for Microsoft Visual Studio integrate management of the storage emulator into Visual Studio.</source>
          <target state="new">The Azure Tools for Microsoft Visual Studio integrate management of the storage emulator into Visual Studio.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The Azure Tools initialize the storage emulator database on first use, starts the storage emulator service when you run or debug your code from Visual Studio, and provides read-only access to the storage emulator data via the Azure Storage Explorer.</source>
          <target state="new">The Azure Tools initialize the storage emulator database on first use, starts the storage emulator service when you run or debug your code from Visual Studio, and provides read-only access to the storage emulator data via the Azure Storage Explorer.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For detailed information on the storage emulator, including system requirements and custom configuration instructions, see <bpt id="p1">[</bpt>Use the Azure Storage Emulator for Development and Testing<ept id="p1">](./storage/storage-use-emulator/)</ept>.</source>
          <target state="new">For detailed information on the storage emulator, including system requirements and custom configuration instructions, see <bpt id="p1">[</bpt>Use the Azure Storage Emulator for Development and Testing<ept id="p1">](./storage/storage-use-emulator/)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> There are some differences in functionality between the storage emulator simulation and the Azure storage services.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> There are some differences in functionality between the storage emulator simulation and the Azure storage services.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Differences Between the Storage Emulator and Azure Storage Services<ept id="p1">](./storage/storage-use-emulator)</ept> in the Azure SDK documentation for information on the specific differences.</source>
          <target state="new">See <bpt id="p1">[</bpt>Differences Between the Storage Emulator and Azure Storage Services<ept id="p1">](./storage/storage-use-emulator)</ept> in the Azure SDK documentation for information on the specific differences.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Configuring a connection string for the storage emulator</source>
          <target state="new">Configuring a connection string for the storage emulator</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To access the storage emulator from code within a role, you will want to configure a connection string that points to the storage emulator and that can later be changed to point to an Azure storage account.</source>
          <target state="new">To access the storage emulator from code within a role, you will want to configure a connection string that points to the storage emulator and that can later be changed to point to an Azure storage account.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A connection string is a configuration setting that your role can read at runtime to connect to a storage account.</source>
          <target state="new">A connection string is a configuration setting that your role can read at runtime to connect to a storage account.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about how to create connection strings, see <bpt id="p1">[</bpt>Configuring the Azure Application<ept id="p1">](https://msdn.microsoft.com/library/azure/2da5d6ce-f74d-45a9-bf6b-b3a60c5ef74e#BK_SettingsPage)</ept>.</source>
          <target state="new">For more information about how to create connection strings, see <bpt id="p1">[</bpt>Configuring the Azure Application<ept id="p1">](https://msdn.microsoft.com/library/azure/2da5d6ce-f74d-45a9-bf6b-b3a60c5ef74e#BK_SettingsPage)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> You can return a reference to the storage emulator account from your code by using the <bpt id="p1">**</bpt>DevelopmentStorageAccount<ept id="p1">**</ept> property.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> You can return a reference to the storage emulator account from your code by using the <bpt id="p1">**</bpt>DevelopmentStorageAccount<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This approach works correctly if you want to access the storage emulator from your code, but if you plan to publish your application to Azure, you will need to create a connection string to access your Azure storage account and modify your code to use that connection string before you publish it.</source>
          <target state="new">This approach works correctly if you want to access the storage emulator from your code, but if you plan to publish your application to Azure, you will need to create a connection string to access your Azure storage account and modify your code to use that connection string before you publish it.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you are switching between the storage emulator account and an Azure storage account frequently, a connection string will simplify this process.</source>
          <target state="new">If you are switching between the storage emulator account and an Azure storage account frequently, a connection string will simplify this process.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializing and running the storage emulator</source>
          <target state="new">Initializing and running the storage emulator</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can specify that when you run or debug your service in Visual Studio, Visual Studio automatically launches the storage emulator.</source>
          <target state="new">You can specify that when you run or debug your service in Visual Studio, Visual Studio automatically launches the storage emulator.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the shortcut menu for your <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept> project and choose <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
          <target state="new">In Solution Explorer, open the shortcut menu for your <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept> project and choose <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Development<ept id="p1">**</ept> tab, in the <bpt id="p2">**</bpt>Start Azure Storage Emulator<ept id="p2">**</ept> list, choose <bpt id="p3">**</bpt>True<ept id="p3">**</ept> (if it isn't already set to that value).</source>
          <target state="new">On the <bpt id="p1">**</bpt>Development<ept id="p1">**</ept> tab, in the <bpt id="p2">**</bpt>Start Azure Storage Emulator<ept id="p2">**</ept> list, choose <bpt id="p3">**</bpt>True<ept id="p3">**</ept> (if it isn't already set to that value).</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first time you run or debug your service from Visual Studio, the storage emulator launches an initialization process.</source>
          <target state="new">The first time you run or debug your service from Visual Studio, the storage emulator launches an initialization process.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This process reserves local ports for the storage emulator and creates the storage emulator database.</source>
          <target state="new">This process reserves local ports for the storage emulator and creates the storage emulator database.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Once complete, this process does not need to run again unless the storage emulator database is deleted.</source>
          <target state="new">Once complete, this process does not need to run again unless the storage emulator database is deleted.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Starting with the June 2012 release of the Azure Tools, the storage emulator runs, by default, in SQL Express LocalDB.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Starting with the June 2012 release of the Azure Tools, the storage emulator runs, by default, in SQL Express LocalDB.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In earlier releases of the Azure Tools, the storage emulator runs against a default instance of SQL Express 2005 or 2008, which you must install before you can install the Azure SDK.</source>
          <target state="new">In earlier releases of the Azure Tools, the storage emulator runs against a default instance of SQL Express 2005 or 2008, which you must install before you can install the Azure SDK.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can also run the storage emulator against a named instance of SQL Express or a named or default instance of Microsoft SQL Server.</source>
          <target state="new">You can also run the storage emulator against a named instance of SQL Express or a named or default instance of Microsoft SQL Server.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you need to configure the storage emulator to run against an instance other than the default instance, see <bpt id="p1">[</bpt>Use the Azure Storage Emulator for Development and Testing<ept id="p1">](./storage/storage-use-emulator/)</ept>.</source>
          <target state="new">If you need to configure the storage emulator to run against an instance other than the default instance, see <bpt id="p1">[</bpt>Use the Azure Storage Emulator for Development and Testing<ept id="p1">](./storage/storage-use-emulator/)</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The storage emulator provides a user interface to view the status of the local storage services and to start, stop, and reset them.</source>
          <target state="new">The storage emulator provides a user interface to view the status of the local storage services and to start, stop, and reset them.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Once the storage emulator service has been started, you can display the user interface or start or stop the service by right-clicking the notification area icon for the Microsoft Azure Emulator in the Windows taskbar.</source>
          <target state="new">Once the storage emulator service has been started, you can display the user interface or start or stop the service by right-clicking the notification area icon for the Microsoft Azure Emulator in the Windows taskbar.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Viewing storage emulator data in Server Explorer</source>
          <target state="new">Viewing storage emulator data in Server Explorer</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The Azure Storage node in Server Explorer enables you to view data and change settings for blob and table data in your storage accounts, including the storage emulator.</source>
          <target state="new">The Azure Storage node in Server Explorer enables you to view data and change settings for blob and table data in your storage accounts, including the storage emulator.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Browsing and Managing Storage Resources with Server Explorer<ept id="p1">](https://msdn.microsoft.com/library/azure/ff683677.aspx)</ept> for more information.</source>
          <target state="new">See <bpt id="p1">[</bpt>Browsing and Managing Storage Resources with Server Explorer<ept id="p1">](https://msdn.microsoft.com/library/azure/ff683677.aspx)</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9bd9da134751ca350a90d8202c1c7f0f33e5e47</xliffext:olfilehash>
  </header>
</xliff>