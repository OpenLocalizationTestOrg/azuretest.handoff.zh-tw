<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Search Service REST API Version 2014-07-31-Preview</source>
          <target state="new">Azure Search Service REST API Version 2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Azure Search Service REST API: Version 2014-07-31-Preview</source>
          <target state="new">Azure Search Service REST API: Version 2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Search Service REST API Version: 2014-07-31-Preview</source>
          <target state="new">Azure Search Service REST API Version: 2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This document describes the older <bpt id="p1">**</bpt>2014-07-31-Preview<ept id="p1">**</ept> version of the Azure Search Service REST API, released for the Azure Search Public Preview in August 2014.</source>
          <target state="new">This document describes the older <bpt id="p1">**</bpt>2014-07-31-Preview<ept id="p1">**</ept> version of the Azure Search Service REST API, released for the Azure Search Public Preview in August 2014.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Because this version will be phased out soon, we strongly recommend that you use the version associated with the generally available release instead.</source>
          <target state="new">Because this version will be phased out soon, we strongly recommend that you use the version associated with the generally available release instead.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For guidance on code migration, see <bpt id="p1">[</bpt>Transition from preview to the generally available API version<ept id="p1">](search-transition-from-preview.md)</ept>.</source>
          <target state="new">For guidance on code migration, see <bpt id="p1">[</bpt>Transition from preview to the generally available API version<ept id="p1">](search-transition-from-preview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Other API content related to <bpt id="p1">**</bpt>2014-07-31-Preview<ept id="p1">**</ept> includes the following:</source>
          <target state="new">Other API content related to <bpt id="p1">**</bpt>2014-07-31-Preview<ept id="p1">**</ept> includes the following:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Scoring Profiles (Azure Search Service REST API: 2014-07-31-Preview)</source>
          <target state="new">Scoring Profiles (Azure Search Service REST API: 2014-07-31-Preview)</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Documentation for the current, generally available version of the Azure Search REST API can be found on MSDN.</source>
          <target state="new">Documentation for the current, generally available version of the Azure Search REST API can be found on MSDN.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Azure Search Service REST API<ept id="p1">](http://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> for more information.</source>
          <target state="new">See <bpt id="p1">[</bpt>Azure Search Service REST API<ept id="p1">](http://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>About the Service REST API</source>
          <target state="new">About the Service REST API</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Azure Search is a cloud-based service that you can use to build custom search applications.</source>
          <target state="new">Azure Search is a cloud-based service that you can use to build custom search applications.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Azure Search has the concepts of <bpt id="p1">*</bpt>search services<ept id="p1">*</ept> and <bpt id="p2">*</bpt>indexes<ept id="p2">*</ept>, where a search service contains one or more indexes.</source>
          <target state="new">Azure Search has the concepts of <bpt id="p1">*</bpt>search services<ept id="p1">*</ept> and <bpt id="p2">*</bpt>indexes<ept id="p2">*</ept>, where a search service contains one or more indexes.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Your search service is uniquely identified by a fully-qualified domain name (for example: <ph id="ph1">`mysearchservice.search.windows.net`</ph>).</source>
          <target state="new">Your search service is uniquely identified by a fully-qualified domain name (for example: <ph id="ph1">`mysearchservice.search.windows.net`</ph>).</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An api-key is generated when the service is provisioned, and is used to authenticate requests to your Azure Search service.</source>
          <target state="new">An api-key is generated when the service is provisioned, and is used to authenticate requests to your Azure Search service.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>There are two types of actions that can be executed against the Azure Search Service:</source>
          <target state="new">There are two types of actions that can be executed against the Azure Search Service:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Index Management<ept id="p1">**</ept>: This includes administrative tasks that are executed against a search service or search index.</source>
          <target state="new"><bpt id="p1">**</bpt>Index Management<ept id="p1">**</ept>: This includes administrative tasks that are executed against a search service or search index.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Document Actions<ept id="p1">**</ept>: These actions query and manage the corpus for a given index.</source>
          <target state="new"><bpt id="p1">**</bpt>Document Actions<ept id="p1">**</ept>: These actions query and manage the corpus for a given index.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The APIs documented in this section provide access to operations on search data, such as index creation and population, document upload, and queries.</source>
          <target state="new">The APIs documented in this section provide access to operations on search data, such as index creation and population, document upload, and queries.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When calling the API, keep the following points in mind:</source>
          <target state="new">When calling the API, keep the following points in mind:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>All APIs are defined in terms of HTTP requests and responses in OData JSON format.</source>
          <target state="new">All APIs are defined in terms of HTTP requests and responses in OData JSON format.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>All APIs must be accompanied with an <ph id="ph1">`api-key`</ph> in the header or in the query string as described in the notes below.</source>
          <target state="new">All APIs must be accompanied with an <ph id="ph1">`api-key`</ph> in the header or in the query string as described in the notes below.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>All APIs must be issued over HTTPS (on the default port - 443).</source>
          <target state="new">All APIs must be issued over HTTPS (on the default port - 443).</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>All API requests must include the <ph id="ph1">`api-version`</ph> query string parameter.</source>
          <target state="new">All API requests must include the <ph id="ph1">`api-version`</ph> query string parameter.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Its value must be set to the version of the current service release, which is shown in the following example:</source>
          <target state="new">Its value must be set to the version of the current service release, which is shown in the following example:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>GET /indexes?api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes?api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>All API requests can optionally set the <ph id="ph1">`Accept`</ph> HTTP header.</source>
          <target state="new">All API requests can optionally set the <ph id="ph1">`Accept`</ph> HTTP header.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If unset, the default is assumed to be <ph id="ph1">`application/json`</ph>.</source>
          <target state="new">If unset, the default is assumed to be <ph id="ph1">`application/json`</ph>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A separate API is provided for service administration.</source>
          <target state="new">A separate API is provided for service administration.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Examples of service administration operations include provisioning the service or altering capacity.</source>
          <target state="new">Examples of service administration operations include provisioning the service or altering capacity.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information about this API, see Azure Search Management REST API.</source>
          <target state="new">For more information about this API, see Azure Search Management REST API.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Endpoint</source>
          <target state="new">Endpoint</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The endpoint for service operations is the URL of the Azure Search service you provisioned: https://</source>
          <target state="new">The endpoint for service operations is the URL of the Azure Search service you provisioned: https://</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>.search.windows.net.</source>
          <target state="new">.search.windows.net.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Versions</source>
          <target state="new">Versions</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>There are multiple API versions for Azure Search.</source>
          <target state="new">There are multiple API versions for Azure Search.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for a list of the available versions.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for a list of the available versions.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Authentication and Access Control</source>
          <target state="new">Authentication and Access Control</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Authentication to an Azure Search service requires two pieces of information: a search service URL, and an <ph id="ph1">`api-key`</ph>.</source>
          <target state="new">Authentication to an Azure Search service requires two pieces of information: a search service URL, and an <ph id="ph1">`api-key`</ph>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-keys`</ph> are generated when the service is created, and can be regenerated on demand after the service is provisioned.</source>
          <target state="new">The <ph id="ph1">`api-keys`</ph> are generated when the service is created, and can be regenerated on demand after the service is provisioned.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`api-key`</ph> is always one of the following:</source>
          <target state="new">An <ph id="ph1">`api-key`</ph> is always one of the following:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>an admin key that grants access to all operations, including write operations like creating and deleting indexes.</source>
          <target state="new">an admin key that grants access to all operations, including write operations like creating and deleting indexes.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>a query key that authenticates read-only requests.</source>
          <target state="new">a query key that authenticates read-only requests.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can have 2 admin keys and up to 50 query keys per service.</source>
          <target state="new">You can have 2 admin keys and up to 50 query keys per service.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Having 2 admin keys is helpful when you need to rollover one of the keys.</source>
          <target state="new">Having 2 admin keys is helpful when you need to rollover one of the keys.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Access control is limited to service administration via the role-based access controls (RBAC) provided in the Azure Preview Portal.</source>
          <target state="new">Access control is limited to service administration via the role-based access controls (RBAC) provided in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Roles are used to set levels of access for service administration.</source>
          <target state="new">Roles are used to set levels of access for service administration.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, viewing the admin key is restricted to the Owner and Contributor roles, whereas viewing service status is visible to members of any role.</source>
          <target state="new">For example, viewing the admin key is restricted to the Owner and Contributor roles, whereas viewing service status is visible to members of any role.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Data operations performed against a Search service endpoint, including index management, index population, and queries, are accessed via <ph id="ph1">`api-keys`</ph> exclusively.</source>
          <target state="new">Data operations performed against a Search service endpoint, including index management, index population, and queries, are accessed via <ph id="ph1">`api-keys`</ph> exclusively.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>RBAC does not apply to either index or document-related operations.</source>
          <target state="new">RBAC does not apply to either index or document-related operations.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To learn more about <ph id="ph1">`api-keys`</ph> or RBAC in Azure Search, see <bpt id="p1">[</bpt>Manage your Search service on Microsoft Azure<ept id="p1">](search-manage.md)</ept>.</source>
          <target state="new">To learn more about <ph id="ph1">`api-keys`</ph> or RBAC in Azure Search, see <bpt id="p1">[</bpt>Manage your Search service on Microsoft Azure<ept id="p1">](search-manage.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: In general it is considered poor security practice to pass sensitive data such as <ph id="ph1">`api-key`</ph> in the request URI.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: In general it is considered poor security practice to pass sensitive data such as <ph id="ph1">`api-key`</ph> in the request URI.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For this reason, Azure Search will only accept a query key as an <ph id="ph1">`api-key`</ph> in the query string, and you should avoid doing so unless the contents of your index should be publicly available.</source>
          <target state="new">For this reason, Azure Search will only accept a query key as an <ph id="ph1">`api-key`</ph> in the query string, and you should avoid doing so unless the contents of your index should be publicly available.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Instead, we recommend passing your <ph id="ph1">`api-key`</ph> as a request header.</source>
          <target state="new">Instead, we recommend passing your <ph id="ph1">`api-key`</ph> as a request header.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Summary of APIs</source>
          <target state="new">Summary of APIs</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Azure Search Service API supports two syntaxes for entity lookup: <bpt id="p1">[</bpt>simple<ept id="p1">](https://msdn.microsoft.com/library/dn798920.aspx)</ept> and alternate OData syntax (see <bpt id="p2">[</bpt>Support for OData (Azure Search API)<ept id="p2">](http://msdn.microsoft.com/library/azure/dn798932.aspx)</ept> for details).</source>
          <target state="new">The Azure Search Service API supports two syntaxes for entity lookup: <bpt id="p1">[</bpt>simple<ept id="p1">](https://msdn.microsoft.com/library/dn798920.aspx)</ept> and alternate OData syntax (see <bpt id="p2">[</bpt>Support for OData (Azure Search API)<ept id="p2">](http://msdn.microsoft.com/library/azure/dn798932.aspx)</ept> for details).</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The following list shows the simple syntax.</source>
          <target state="new">The following list shows the simple syntax.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Create Index</source>
          <target state="new">Create Index</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Update Index</source>
          <target state="new">Update Index</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Get Index</source>
          <target state="new">Get Index</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Listing Indexes</source>
          <target state="new">Listing Indexes</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Get Index Statistics</source>
          <target state="new">Get Index Statistics</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Delete an Index</source>
          <target state="new">Delete an Index</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Add, Delete, and Update Data within an Index</source>
          <target state="new">Add, Delete, and Update Data within an Index</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Search Documents</source>
          <target state="new">Search Documents</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Lookup Document</source>
          <target state="new">Lookup Document</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Count Documents</source>
          <target state="new">Count Documents</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Suggestions</source>
          <target state="new">Suggestions</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Index Operations</source>
          <target state="new">Index Operations</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can create and manage indexes in Azure Search service via simple HTTP requests (POST, GET, PUT, DELETE) against a given index resource.</source>
          <target state="new">You can create and manage indexes in Azure Search service via simple HTTP requests (POST, GET, PUT, DELETE) against a given index resource.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To create an index, you first POST a JSON document that describes the index schema.</source>
          <target state="new">To create an index, you first POST a JSON document that describes the index schema.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The schema defines the fields of the index, their data types, and how they can be used (for example, in full-text searches, filters, sorting, faceting, or suggestions).</source>
          <target state="new">The schema defines the fields of the index, their data types, and how they can be used (for example, in full-text searches, filters, sorting, faceting, or suggestions).</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It also defines scoring profiles and other attributes to configure the behavior of the index.</source>
          <target state="new">It also defines scoring profiles and other attributes to configure the behavior of the index.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration of a schema used for searching on hotel information with the Description field defined in two languages.</source>
          <target state="new">The following example provides an illustration of a schema used for searching on hotel information with the Description field defined in two languages.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Notice how attributes control how the field is used.</source>
          <target state="new">Notice how attributes control how the field is used.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For example the <ph id="ph1">`hotelId`</ph> is used as the document key (<ph id="ph2">`"key": true`</ph>) and is excluded from full-text searches (<ph id="ph3">`"searchable": false`</ph>).</source>
          <target state="new">For example the <ph id="ph1">`hotelId`</ph> is used as the document key (<ph id="ph2">`"key": true`</ph>) and is excluded from full-text searches (<ph id="ph3">`"searchable": false`</ph>).</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>After the index is created, you'll upload documents that populate the index.</source>
          <target state="new">After the index is created, you'll upload documents that populate the index.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Add or Update Documents<ept id="p1">](#AddOrUpdateDocuments)</ept> for this next step.</source>
          <target state="new">See <bpt id="p1">[</bpt>Add or Update Documents<ept id="p1">](#AddOrUpdateDocuments)</ept> for this next step.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For a video introduction to indexing in Azure Search, see the <bpt id="p1">[</bpt>Channel 9 Cloud Cover episode on Azure Search<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=511509)</ept>.</source>
          <target state="new">For a video introduction to indexing in Azure Search, see the <bpt id="p1">[</bpt>Channel 9 Cloud Cover episode on Azure Search<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=511509)</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Create Index</source>
          <target state="new">Create Index</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can create a new index within an Azure Search service using an HTTP POST request.</source>
          <target state="new">You can create a new index within an Azure Search service using an HTTP POST request.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The body of the request is a JSON document that specifies the index name, fields, attributes to control query behavior, scoring of results, and CORS options.</source>
          <target state="new">The body of the request is a JSON document that specifies the index name, fields, attributes to control query behavior, scoring of results, and CORS options.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use PUT and specify the index name on the URI.</source>
          <target state="new">Alternatively, you can use PUT and specify the index name on the URI.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If the index does not exist, it will be created.</source>
          <target state="new">If the index does not exist, it will be created.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: The maximum number of indexes allowed varies by pricing tier.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: The maximum number of indexes allowed varies by pricing tier.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The free service allows up to 3 indexes.</source>
          <target state="new">The free service allows up to 3 indexes.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Standard service allows 50 indexes per Search service.</source>
          <target state="new">Standard service allows 50 indexes per Search service.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Limits and constraints<ept id="p1">](http://msdn.microsoft.com/library/azure/dn798934.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Limits and constraints<ept id="p1">](http://msdn.microsoft.com/library/azure/dn798934.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>HTTPS is required for all service requests.</source>
          <target state="new">HTTPS is required for all service requests.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Create Index<ept id="p1">**</ept> request can be constructed using either a POST or PUT method.</source>
          <target state="new">The <bpt id="p1">**</bpt>Create Index<ept id="p1">**</ept> request can be constructed using either a POST or PUT method.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When using POST, you must provide an index name in the request body along with the index schema definition.</source>
          <target state="new">When using POST, you must provide an index name in the request body along with the index schema definition.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>With PUT, the index name is part of the URL.</source>
          <target state="new">With PUT, the index name is part of the URL.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If the index doesn't exist, it is created.</source>
          <target state="new">If the index doesn't exist, it is created.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If it already exists, it is updated to the new definition.</source>
          <target state="new">If it already exists, it is updated to the new definition.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The index name must be lower case, start with a letter or number, have no slashes or dots, and be less than 128 characters.</source>
          <target state="new">The index name must be lower case, start with a letter or number, have no slashes or dots, and be less than 128 characters.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>After starting the index name with a letter or number, the rest of the name can include any letter, number and dashes, as long as the dashes are not consecutive.</source>
          <target state="new">After starting the index name with a letter or number, the rest of the name can include any letter, number and dashes, as long as the dashes are not consecutive.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features, such as support for language analyzers expressed through the analyzer index attribute.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features, such as support for language analyzers expressed through the analyzer index attribute.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers.</source>
          <target state="new">The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Content-Type`</ph>: Required.</source>
          <target state="new"><ph id="ph1">`Content-Type`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Set this to <ph id="ph1">`application/json`</ph></source>
          <target state="new">Set this to <ph id="ph1">`application/json`</ph></target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: Required.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> is used to</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> is used to</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>authenticate the request to your Search service.</source>
          <target state="new">authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service.</source>
          <target state="new">It is a string value, unique to your service.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Create Index<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> header set to your admin key (as opposed to a query key).</source>
          <target state="new">The <bpt id="p1">**</bpt>Create Index<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> header set to your admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can get both the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get both the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Request Body Syntax<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Request Body Syntax<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The body of the request contains a schema definition, which includes the list of data fields within documents that will be fed into this index, data types, attributes, as well as an optional list of scoring profiles that are used to score matching documents at query time.</source>
          <target state="new">The body of the request contains a schema definition, which includes the list of data fields within documents that will be fed into this index, data types, attributes, as well as an optional list of scoring profiles that are used to score matching documents at query time.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Note that for a POST request, you must specify the index name in the request body.</source>
          <target state="new">Note that for a POST request, you must specify the index name in the request body.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>There can only be one key field in the index.</source>
          <target state="new">There can only be one key field in the index.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>It has to be a string field.</source>
          <target state="new">It has to be a string field.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This field represents the unique identifier for each document stored within the index.</source>
          <target state="new">This field represents the unique identifier for each document stored within the index.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The syntax for structuring the request payload is as follows.</source>
          <target state="new">The syntax for structuring the request payload is as follows.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A sample request is provided further on in this topic.</source>
          <target state="new">A sample request is provided further on in this topic.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Note: Data type <ph id="ph1">`Edm.Int64`</ph> is supported starting with API version 2014-10-20-Preview.</source>
          <target state="new">Note: Data type <ph id="ph1">`Edm.Int64`</ph> is supported starting with API version 2014-10-20-Preview.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Index Attributes</source>
          <target state="new">Index Attributes</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The following attributes can be set when creating an index.</source>
          <target state="new">The following attributes can be set when creating an index.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For details about scoring and scoring profiles, see <bpt id="p1">[</bpt>Add scoring profiles to a search index<ept id="p1">](http://msdn.microsoft.com/library/azure/dn798928.aspx)</ept>.</source>
          <target state="new">For details about scoring and scoring profiles, see <bpt id="p1">[</bpt>Add scoring profiles to a search index<ept id="p1">](http://msdn.microsoft.com/library/azure/dn798928.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`name`</ph> - Sets the name of the field.</source>
          <target state="new"><ph id="ph1">`name`</ph> - Sets the name of the field.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`type`</ph> - Sets the data type for the field.</source>
          <target state="new"><ph id="ph1">`type`</ph> - Sets the data type for the field.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Supported Data Types<ept id="p1">](#DataTypes)</ept> for a list of supported types.</source>
          <target state="new">See <bpt id="p1">[</bpt>Supported Data Types<ept id="p1">](#DataTypes)</ept> for a list of supported types.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`searchable`</ph> - Marks the field as full-text search-able.</source>
          <target state="new"><ph id="ph1">`searchable`</ph> - Marks the field as full-text search-able.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This means it will undergo analysis such as word-breaking during indexing.</source>
          <target state="new">This means it will undergo analysis such as word-breaking during indexing.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If you set a <ph id="ph1">`searchable`</ph> field to a value like "sunny day", internally it will be split into the individual tokens "sunny" and "day".</source>
          <target state="new">If you set a <ph id="ph1">`searchable`</ph> field to a value like "sunny day", internally it will be split into the individual tokens "sunny" and "day".</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This enables full-text searches for these terms.</source>
          <target state="new">This enables full-text searches for these terms.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Fields of type <ph id="ph1">`Edm.String`</ph> or <ph id="ph2">`Collection(Edm.String)`</ph> are <ph id="ph3">`searchable`</ph> by default.</source>
          <target state="new">Fields of type <ph id="ph1">`Edm.String`</ph> or <ph id="ph2">`Collection(Edm.String)`</ph> are <ph id="ph3">`searchable`</ph> by default.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Fields of other types cannot be <ph id="ph1">`searchable`</ph>.</source>
          <target state="new">Fields of other types cannot be <ph id="ph1">`searchable`</ph>.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: <ph id="ph1">`searchable`</ph> fields consume extra space in your index since Azure Search will store an additional tokenized version of the field value for full-text searches.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: <ph id="ph1">`searchable`</ph> fields consume extra space in your index since Azure Search will store an additional tokenized version of the field value for full-text searches.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If you want to save space in your index and you don't need a field to be included in searches, set <ph id="ph1">`searchable`</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="new">If you want to save space in your index and you don't need a field to be included in searches, set <ph id="ph1">`searchable`</ph> to <ph id="ph2">`false`</ph>.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`filterable`</ph> - Allows the field to be referenced in <ph id="ph2">`$filter`</ph> queries.</source>
          <target state="new"><ph id="ph1">`filterable`</ph> - Allows the field to be referenced in <ph id="ph2">`$filter`</ph> queries.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`filterable`</ph> differs from <ph id="ph2">`searchable`</ph> in how strings are handled.</source>
          <target state="new"><ph id="ph1">`filterable`</ph> differs from <ph id="ph2">`searchable`</ph> in how strings are handled.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Fields of type <ph id="ph1">`Edm.String`</ph> or <ph id="ph2">`Collection(Edm.String)`</ph> that are <ph id="ph3">`filterable`</ph> do not undergo word-breaking, so comparisons are for exact matches only.</source>
          <target state="new">Fields of type <ph id="ph1">`Edm.String`</ph> or <ph id="ph2">`Collection(Edm.String)`</ph> that are <ph id="ph3">`filterable`</ph> do not undergo word-breaking, so comparisons are for exact matches only.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For example, if you set such a field <ph id="ph1">`f`</ph> to "sunny day", <ph id="ph2">`$filter=f eq 'sunny'`</ph> will find no matches, but <ph id="ph3">`$filter=f eq 'sunny day'`</ph> will.</source>
          <target state="new">For example, if you set such a field <ph id="ph1">`f`</ph> to "sunny day", <ph id="ph2">`$filter=f eq 'sunny'`</ph> will find no matches, but <ph id="ph3">`$filter=f eq 'sunny day'`</ph> will.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>All fields are <ph id="ph1">`filterable`</ph> by default.</source>
          <target state="new">All fields are <ph id="ph1">`filterable`</ph> by default.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sortable`</ph> - By default the system sorts results by score, but in many experiences users will want to sort by fields in the documents.</source>
          <target state="new"><ph id="ph1">`sortable`</ph> - By default the system sorts results by score, but in many experiences users will want to sort by fields in the documents.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Fields of type <ph id="ph1">`Collection(Edm.String)`</ph> cannot be <ph id="ph2">`sortable`</ph>.</source>
          <target state="new">Fields of type <ph id="ph1">`Collection(Edm.String)`</ph> cannot be <ph id="ph2">`sortable`</ph>.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>All other fields are <ph id="ph1">`sortable`</ph> by default.</source>
          <target state="new">All other fields are <ph id="ph1">`sortable`</ph> by default.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`facetable`</ph>- Typically used in a presentation of search results that includes hit count by category (for example, search for digital cameras and see hits by brand, by megapixels, by price, etc.).</source>
          <target state="new"><ph id="ph1">`facetable`</ph>- Typically used in a presentation of search results that includes hit count by category (for example, search for digital cameras and see hits by brand, by megapixels, by price, etc.).</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This option cannot be used with fields of type <ph id="ph1">`Edm.GeographyPoint`</ph>.</source>
          <target state="new">This option cannot be used with fields of type <ph id="ph1">`Edm.GeographyPoint`</ph>.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>All other fields are <ph id="ph1">`facetable`</ph> by default.</source>
          <target state="new">All other fields are <ph id="ph1">`facetable`</ph> by default.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: Fields of type <ph id="ph1">`Edm.String`</ph> that are <ph id="ph2">`filterable`</ph>, <ph id="ph3">`sortable`</ph>, or <ph id="ph4">`facetable`</ph> can be at most 32KB in length.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: Fields of type <ph id="ph1">`Edm.String`</ph> that are <ph id="ph2">`filterable`</ph>, <ph id="ph3">`sortable`</ph>, or <ph id="ph4">`facetable`</ph> can be at most 32KB in length.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This is because such fields are treated as a single search term, and the maximum length of a term in Azure Search is 32KB.</source>
          <target state="new">This is because such fields are treated as a single search term, and the maximum length of a term in Azure Search is 32KB.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If you need to store more text than this in a single string field, you will need to explicitly set <ph id="ph1">`filterable`</ph>, <ph id="ph2">`sortable`</ph>, and <ph id="ph3">`facetable`</ph> to <ph id="ph4">`false`</ph> in your index definition.</source>
          <target state="new">If you need to store more text than this in a single string field, you will need to explicitly set <ph id="ph1">`filterable`</ph>, <ph id="ph2">`sortable`</ph>, and <ph id="ph3">`facetable`</ph> to <ph id="ph4">`false`</ph> in your index definition.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`suggestions`</ph> - Sets whether the field can be used for auto-complete for type ahead.</source>
          <target state="new"><ph id="ph1">`suggestions`</ph> - Sets whether the field can be used for auto-complete for type ahead.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>This can only be set for fields of type <ph id="ph1">`Edm.String`</ph> or <ph id="ph2">`Collection(Edm.String)`</ph>.</source>
          <target state="new">This can only be set for fields of type <ph id="ph1">`Edm.String`</ph> or <ph id="ph2">`Collection(Edm.String)`</ph>.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`suggestions`</ph> is <ph id="ph2">`false`</ph> by default since it requires extra space in your index.</source>
          <target state="new"><ph id="ph1">`suggestions`</ph> is <ph id="ph2">`false`</ph> by default since it requires extra space in your index.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: If a field has none of the above attributes set to <ph id="ph1">`true`</ph> (<ph id="ph2">`searchable`</ph>, <ph id="ph3">`filterable`</ph>, <ph id="ph4">`sortable`</ph>, <ph id="ph5">`facetable`</ph>, or <ph id="ph6">`suggestions`</ph>) the field is effectively excluded from the inverted index.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: If a field has none of the above attributes set to <ph id="ph1">`true`</ph> (<ph id="ph2">`searchable`</ph>, <ph id="ph3">`filterable`</ph>, <ph id="ph4">`sortable`</ph>, <ph id="ph5">`facetable`</ph>, or <ph id="ph6">`suggestions`</ph>) the field is effectively excluded from the inverted index.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This option is useful for fields that are not used in queries, but are needed in search results.</source>
          <target state="new">This option is useful for fields that are not used in queries, but are needed in search results.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Excluding such fields from the index improves performance.</source>
          <target state="new">Excluding such fields from the index improves performance.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`key`</ph> - Marks the field as containing unique identifiers for documents within the index.</source>
          <target state="new"><ph id="ph1">`key`</ph> - Marks the field as containing unique identifiers for documents within the index.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Exactly one field must be chosen as the <ph id="ph1">`key`</ph> field and it must be of type <ph id="ph2">`Edm.String`</ph>.</source>
          <target state="new">Exactly one field must be chosen as the <ph id="ph1">`key`</ph> field and it must be of type <ph id="ph2">`Edm.String`</ph>.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Key fields can be used to look up documents directly via the <bpt id="p1">[</bpt>Lookup API<ept id="p1">](#LookupAPI)</ept>.</source>
          <target state="new">Key fields can be used to look up documents directly via the <bpt id="p1">[</bpt>Lookup API<ept id="p1">](#LookupAPI)</ept>.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`retrievable`</ph> - Sets whether the field can be returned in a search result.</source>
          <target state="new"><ph id="ph1">`retrievable`</ph> - Sets whether the field can be returned in a search result.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This is useful when you want to use a field (for example, margin) as a filter, sorting, or scoring mechanism but do not want the field to be visible to the end user.</source>
          <target state="new">This is useful when you want to use a field (for example, margin) as a filter, sorting, or scoring mechanism but do not want the field to be visible to the end user.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This attribute must be <ph id="ph1">`true`</ph> for <ph id="ph2">`key`</ph> fields.</source>
          <target state="new">This attribute must be <ph id="ph1">`true`</ph> for <ph id="ph2">`key`</ph> fields.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`scoringProfiles`</ph> - Defines custom scoring behaviors that let you influence which items appear higher in search results.</source>
          <target state="new"><ph id="ph1">`scoringProfiles`</ph> - Defines custom scoring behaviors that let you influence which items appear higher in search results.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Scoring profiles are made up of weighted fields and functions.</source>
          <target state="new">Scoring profiles are made up of weighted fields and functions.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Add scoring profiles to a search index<ept id="p1">](http://msdn.microsoft.com/library/azure/dn798928.aspx)</ept> for more information about the attributes used in a scoring profile.</source>
          <target state="new">See <bpt id="p1">[</bpt>Add scoring profiles to a search index<ept id="p1">](http://msdn.microsoft.com/library/azure/dn798928.aspx)</ept> for more information about the attributes used in a scoring profile.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>CORS Options</source>
          <target state="new">CORS Options</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Client-side Javascript cannot call any APIs by default since the browser will prevent all cross-origin requests.</source>
          <target state="new">Client-side Javascript cannot call any APIs by default since the browser will prevent all cross-origin requests.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Enable CORS (Cross-Origin Resource Sharing) by setting the <ph id="ph1">`corsOptions`</ph> attribute to allow cross-origin queries to your index.</source>
          <target state="new">Enable CORS (Cross-Origin Resource Sharing) by setting the <ph id="ph1">`corsOptions`</ph> attribute to allow cross-origin queries to your index.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Note that only query APIs support CORS for security reasons.</source>
          <target state="new">Note that only query APIs support CORS for security reasons.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The following options can be set for CORS:</source>
          <target state="new">The following options can be set for CORS:</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`allowedOrigins`</ph> (required): This is a list of origins that will be granted access to your index.</source>
          <target state="new"><ph id="ph1">`allowedOrigins`</ph> (required): This is a list of origins that will be granted access to your index.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This means that any Javascript code served from those origins will be allowed to query your index (assuming it provides the correct API key).</source>
          <target state="new">This means that any Javascript code served from those origins will be allowed to query your index (assuming it provides the correct API key).</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Each origin is typically of the form <ph id="ph1">`protocol://fully-qualified-domain-name:port`</ph> although the port is often omitted.</source>
          <target state="new">Each origin is typically of the form <ph id="ph1">`protocol://fully-qualified-domain-name:port`</ph> although the port is often omitted.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this article<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330822)</ept> for more details.</source>
          <target state="new">See <bpt id="p1">[</bpt>this article<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330822)</ept> for more details.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>If you want to allow access to all origins, include <ph id="ph1">`*`</ph> as a single item in the <ph id="ph2">`allowedOrigins`</ph> array.</source>
          <target state="new">If you want to allow access to all origins, include <ph id="ph1">`*`</ph> as a single item in the <ph id="ph2">`allowedOrigins`</ph> array.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Note that <bpt id="p1">**</bpt>this is not recommended practice for production search services.<ept id="p1">**</ept> However, it may be useful for development or debugging purposes.</source>
          <target state="new">Note that <bpt id="p1">**</bpt>this is not recommended practice for production search services.<ept id="p1">**</ept> However, it may be useful for development or debugging purposes.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`maxAgeInSeconds`</ph> (optional): Browsers use this value to determine the duration (in seconds) to cache CORS preflight responses.</source>
          <target state="new"><ph id="ph1">`maxAgeInSeconds`</ph> (optional): Browsers use this value to determine the duration (in seconds) to cache CORS preflight responses.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This must be a non-negative integer.</source>
          <target state="new">This must be a non-negative integer.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The larger this value is, the better performance will be, but the longer it will take for CORS policy changes to take effect.</source>
          <target state="new">The larger this value is, the better performance will be, but the longer it will take for CORS policy changes to take effect.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>If it is not set, a default duration of 5 minutes will be used.</source>
          <target state="new">If it is not set, a default duration of 5 minutes will be used.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Request Body Example<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Request Body Example<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>For a successful request: "201 Created".</source>
          <target state="new">For a successful request: "201 Created".</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>By default the response body will contain the JSON for the index definition that was created.</source>
          <target state="new">By default the response body will contain the JSON for the index definition that was created.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`Prefer`</ph> request header is set to <ph id="ph2">`return=minimal`</ph>, the response body will be empty and the success status code will be "204 No Content" instead of "201 Created".</source>
          <target state="new">If the <ph id="ph1">`Prefer`</ph> request header is set to <ph id="ph2">`return=minimal`</ph>, the response body will be empty and the success status code will be "204 No Content" instead of "201 Created".</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>This is true regardless of whether PUT or POST was used to create the index.</source>
          <target state="new">This is true regardless of whether PUT or POST was used to create the index.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Update Index</source>
          <target state="new">Update Index</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>You can update an existing index within Azure Search using an HTTP PUT request.</source>
          <target state="new">You can update an existing index within Azure Search using an HTTP PUT request.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>In the Public Preview, updates can include adding new fields to the existing schema, modifying CORS options, and modifying scoring profiles (see <bpt id="p1">[</bpt>Add scoring profiles to a search index<ept id="p1">](http://msdn.microsoft.com/library/azure/dn798928.aspx)</ept>).</source>
          <target state="new">In the Public Preview, updates can include adding new fields to the existing schema, modifying CORS options, and modifying scoring profiles (see <bpt id="p1">[</bpt>Add scoring profiles to a search index<ept id="p1">](http://msdn.microsoft.com/library/azure/dn798928.aspx)</ept>).</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>You specify the name of the index to update on the request URI:</source>
          <target state="new">You specify the name of the index to update on the request URI:</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important:<ept id="p1">**</ept> In the Azure Search Public Preview, there is no support for schema updates that would require re-indexing, including changing field types.</source>
          <target state="new"><bpt id="p1">**</bpt>Important:<ept id="p1">**</ept> In the Azure Search Public Preview, there is no support for schema updates that would require re-indexing, including changing field types.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>New fields can be added at any time, but existing fields cannot be changed or deleted.</source>
          <target state="new">New fields can be added at any time, but existing fields cannot be changed or deleted.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>When adding a new field to an index, all existing documents in the index will automatically have a null value for that field.</source>
          <target state="new">When adding a new field to an index, all existing documents in the index will automatically have a null value for that field.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>No additional storage space will be consumed until new documents are added to the index.</source>
          <target state="new">No additional storage space will be consumed until new documents are added to the index.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>HTTPS is required for all service requests.</source>
          <target state="new">HTTPS is required for all service requests.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update Index<ept id="p1">**</ept> request is constructed using HTTP PUT.</source>
          <target state="new">The <bpt id="p1">**</bpt>Update Index<ept id="p1">**</ept> request is constructed using HTTP PUT.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>With PUT, the index name is part of the URL.</source>
          <target state="new">With PUT, the index name is part of the URL.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>If the index doesn't exist, it is created.</source>
          <target state="new">If the index doesn't exist, it is created.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>If the index already exists, it is updated to the new definition.</source>
          <target state="new">If the index already exists, it is updated to the new definition.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The index name must be lower case, start with a letter or number, have no slashes or dots, and be less than 128 characters.</source>
          <target state="new">The index name must be lower case, start with a letter or number, have no slashes or dots, and be less than 128 characters.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>After starting the index name with a letter or number, the rest of the name can include any letter, number and dashes, as long as the dashes are not consecutive.</source>
          <target state="new">After starting the index name with a letter or number, the rest of the name can include any letter, number and dashes, as long as the dashes are not consecutive.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> parameter is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> parameter is required.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers.</source>
          <target state="new">The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Content-Type`</ph>: Required.</source>
          <target state="new"><ph id="ph1">`Content-Type`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Set this to <ph id="ph1">`application/json`</ph></source>
          <target state="new">Set this to <ph id="ph1">`application/json`</ph></target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: Required.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service.</source>
          <target state="new">It is a string value, unique to your service.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update Index<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> header set to your admin key (as opposed to a query key).</source>
          <target state="new">The <bpt id="p1">**</bpt>Update Index<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> header set to your admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Request Body Syntax</source>
          <target state="new">Request Body Syntax</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>When updating an existing index, the body must include the original schema definition, plus the new fields you are adding, as well as the modified scoring profiles and CORS options, if any.</source>
          <target state="new">When updating an existing index, the body must include the original schema definition, plus the new fields you are adding, as well as the modified scoring profiles and CORS options, if any.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>If you are not modifying the scoring profiles and CORS options, you must include the originals from when the index was created.</source>
          <target state="new">If you are not modifying the scoring profiles and CORS options, you must include the originals from when the index was created.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>In general the best pattern to use for updates is to retrieve the index definition with a GET, modify it, then update it with PUT.</source>
          <target state="new">In general the best pattern to use for updates is to retrieve the index definition with a GET, modify it, then update it with PUT.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The schema syntax used to create an index is reproduced here for convenience.</source>
          <target state="new">The schema syntax used to create an index is reproduced here for convenience.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create Index<ept id="p1">](#CreateIndex)</ept> for more details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create Index<ept id="p1">](#CreateIndex)</ept> for more details.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Note: Data type <ph id="ph1">`Edm.Int64`</ph> is supported starting with API version 2014-10-20-Preview.</source>
          <target state="new">Note: Data type <ph id="ph1">`Edm.Int64`</ph> is supported starting with API version 2014-10-20-Preview.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>For a successful request: "204 No Content".</source>
          <target state="new">For a successful request: "204 No Content".</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>By default the response body will be empty.</source>
          <target state="new">By default the response body will be empty.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>However, if the <ph id="ph1">`Prefer`</ph> request header is set to <ph id="ph2">`return=representation`</ph>, the response body will contain the JSON for the index definition that was updated.</source>
          <target state="new">However, if the <ph id="ph1">`Prefer`</ph> request header is set to <ph id="ph2">`return=representation`</ph>, the response body will contain the JSON for the index definition that was updated.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>In this case, the success status code will be "200 OK".</source>
          <target state="new">In this case, the success status code will be "200 OK".</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>List Indexes</source>
          <target state="new">List Indexes</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>List Indexes<ept id="p1">**</ept> operation returns a list of the indexes currently in your Azure Search service.</source>
          <target state="new">The <bpt id="p1">**</bpt>List Indexes<ept id="p1">**</ept> operation returns a list of the indexes currently in your Azure Search service.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>HTTPS is required for all service requests.</source>
          <target state="new">HTTPS is required for all service requests.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>List Indexes<ept id="p1">**</ept> request can be constructed using the GET method.</source>
          <target state="new">The <bpt id="p1">**</bpt>List Indexes<ept id="p1">**</ept> request can be constructed using the GET method.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> parameter is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> parameter is required.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers.</source>
          <target state="new">The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: Required.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service.</source>
          <target state="new">It is a string value, unique to your service.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>List Indexes<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> set to an admin key (as opposed to a query key).</source>
          <target state="new">The <bpt id="p1">**</bpt>List Indexes<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> set to an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="new">Request Body</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="new">None.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Status Code: 200 OK is returned for a successful response.</source>
          <target state="new">Status Code: 200 OK is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Here is an example response body:</source>
          <target state="new">Here is an example response body:</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Note that you can filter the response down to just the properties you're interested in.</source>
          <target state="new">Note that you can filter the response down to just the properties you're interested in.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For example, if you want only a list of index names, use the OData <ph id="ph1">`$select`</ph> query option:</source>
          <target state="new">For example, if you want only a list of index names, use the OData <ph id="ph1">`$select`</ph> query option:</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>In this case, the response from the above example would appear as follows:</source>
          <target state="new">In this case, the response from the above example would appear as follows:</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>This is a useful technique to save bandwidth if you have a lot of indexes in your Search service.</source>
          <target state="new">This is a useful technique to save bandwidth if you have a lot of indexes in your Search service.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Get Index</source>
          <target state="new">Get Index</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get Index<ept id="p1">**</ept> operation gets the index definition from Azure Search.</source>
          <target state="new">The <bpt id="p1">**</bpt>Get Index<ept id="p1">**</ept> operation gets the index definition from Azure Search.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>HTTPS is required for service requests.</source>
          <target state="new">HTTPS is required for service requests.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get Index<ept id="p1">**</ept> request can be constructed using the GET method.</source>
          <target state="new">The <bpt id="p1">**</bpt>Get Index<ept id="p1">**</ept> request can be constructed using the GET method.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The [index name] in the request URI specifies which index to return from the indexes collection.</source>
          <target state="new">The [index name] in the request URI specifies which index to return from the indexes collection.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> parameter is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> parameter is required.</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers.</source>
          <target state="new">The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service.</source>
          <target state="new">It is a string value, unique to your service.</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get Index<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> set to an admin key (as opposed to a query key).</source>
          <target state="new">The <bpt id="p1">**</bpt>Get Index<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> set to an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="new">Request Body</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="new">None.</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Status Code: 200 OK is returned for a successful response.</source>
          <target state="new">Status Code: 200 OK is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>See the example JSON in <bpt id="p1">[</bpt>Creating and Updating an Index<ept id="p1">](#CreateUpdateIndexExample)</ept> for an example of the response payload.</source>
          <target state="new">See the example JSON in <bpt id="p1">[</bpt>Creating and Updating an Index<ept id="p1">](#CreateUpdateIndexExample)</ept> for an example of the response payload.</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Delete Index</source>
          <target state="new">Delete Index</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Delete Index<ept id="p1">**</ept> operation removes an index and associated documents from your Azure Search service.</source>
          <target state="new">The <bpt id="p1">**</bpt>Delete Index<ept id="p1">**</ept> operation removes an index and associated documents from your Azure Search service.</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>You can get the index name from the service dashboard in the Azure Preview portal, or from the API.</source>
          <target state="new">You can get the index name from the service dashboard in the Azure Preview portal, or from the API.</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>List Indexes<ept id="p1">](#ListIndexes)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>List Indexes<ept id="p1">](#ListIndexes)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>HTTPS is required for service requests.</source>
          <target state="new">HTTPS is required for service requests.</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Delete Index<ept id="p1">**</ept> request can be constructed using the DELETE method.</source>
          <target state="new">The <bpt id="p1">**</bpt>Delete Index<ept id="p1">**</ept> request can be constructed using the DELETE method.</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The [index name] in the request URI specifies which index to delete from the indexes collection.</source>
          <target state="new">The [index name] in the request URI specifies which index to delete from the indexes collection.</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> parameter is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> parameter is required.</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers.</source>
          <target state="new">The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: Required.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service URL.</source>
          <target state="new">It is a string value, unique to your service URL.</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Delete Index<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> header set to your admin key (as opposed to a query key).</source>
          <target state="new">The <bpt id="p1">**</bpt>Delete Index<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> header set to your admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="new">Request Body</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="new">None.</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Status Code: 204 No Content is returned for a successful response.</source>
          <target state="new">Status Code: 204 No Content is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Get Index Statistics</source>
          <target state="new">Get Index Statistics</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get Index Statistics<ept id="p1">**</ept> operation returns from Azure Search a document count for the current index, plus storage usage.</source>
          <target state="new">The <bpt id="p1">**</bpt>Get Index Statistics<ept id="p1">**</ept> operation returns from Azure Search a document count for the current index, plus storage usage.</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>HTTPS is required for all services requests.</source>
          <target state="new">HTTPS is required for all services requests.</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get Index Statistics<ept id="p1">**</ept> request can be constructed using the GET method.</source>
          <target state="new">The <bpt id="p1">**</bpt>Get Index Statistics<ept id="p1">**</ept> request can be constructed using the GET method.</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The [index name] in the request URI tells the service to return index statistics for the specified index.</source>
          <target state="new">The [index name] in the request URI tells the service to return index statistics for the specified index.</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> parameter is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> parameter is required.</target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers.</source>
          <target state="new">The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service.</source>
          <target state="new">It is a string value, unique to your service.</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get Index Statistics<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> set to an admin key (as opposed to a query key).</source>
          <target state="new">The <bpt id="p1">**</bpt>Get Index Statistics<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> set to an admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="new">Request Body</target>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="new">None.</target>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Status Code: 200 OK is returned for a successful response.</source>
          <target state="new">Status Code: 200 OK is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The response body is in the following format:</source>
          <target state="new">The response body is in the following format:</target>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Document Operations</source>
          <target state="new">Document Operations</target>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>In Azure Search, an index is stored in the cloud and populated using JSON documents that you upload to the service.</source>
          <target state="new">In Azure Search, an index is stored in the cloud and populated using JSON documents that you upload to the service.</target>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>All the documents that you upload comprise the corpus of your search data.</source>
          <target state="new">All the documents that you upload comprise the corpus of your search data.</target>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Documents contain fields, some of which are tokenized into search terms as they are uploaded.</source>
          <target state="new">Documents contain fields, some of which are tokenized into search terms as they are uploaded.</target>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`/docs`</ph> URL segment in the Azure Search API represents the collection of documents in an index.</source>
          <target state="new">The <ph id="ph1">`/docs`</ph> URL segment in the Azure Search API represents the collection of documents in an index.</target>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>All operations performed on the collection such as uploading, merging, deleting, or querying documents take place in the context of a single index, so the URLs for these operations will always start with <ph id="ph1">`/indexes/[index name]/docs`</ph> for a given index name.</source>
          <target state="new">All operations performed on the collection such as uploading, merging, deleting, or querying documents take place in the context of a single index, so the URLs for these operations will always start with <ph id="ph1">`/indexes/[index name]/docs`</ph> for a given index name.</target>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Your application code must generate JSON documents to upload to Azure Search.</source>
          <target state="new">Your application code must generate JSON documents to upload to Azure Search.</target>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Typically, indexes are populated from a single dataset that you provide.</source>
          <target state="new">Typically, indexes are populated from a single dataset that you provide.</target>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>You should plan on having one document for each item that you want to search.</source>
          <target state="new">You should plan on having one document for each item that you want to search.</target>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>A movie rental application might have one document per movie, a storefront application might have one document per SKU, an online courseware application might have one document per course, a research firm might have one document for each academic paper in their repository, and so on.</source>
          <target state="new">A movie rental application might have one document per movie, a storefront application might have one document per SKU, an online courseware application might have one document per course, a research firm might have one document for each academic paper in their repository, and so on.</target>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Documents consist of one or more fields.</source>
          <target state="new">Documents consist of one or more fields.</target>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Fields can contain text that is tokenized by Azure Search into search terms, as well as non-tokenized or non-text values that can be used in filters or scoring profiles.</source>
          <target state="new">Fields can contain text that is tokenized by Azure Search into search terms, as well as non-tokenized or non-text values that can be used in filters or scoring profiles.</target>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The names, data types, and search features supported for each field are determined by the index schema.</source>
          <target state="new">The names, data types, and search features supported for each field are determined by the index schema.</target>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>One of the fields in each index schema must be designated as an ID, and each document must have a value for the ID field that uniquely identifies that document in the index.</source>
          <target state="new">One of the fields in each index schema must be designated as an ID, and each document must have a value for the ID field that uniquely identifies that document in the index.</target>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>All other document fields are optional and will default to a null value if left unspecified.</source>
          <target state="new">All other document fields are optional and will default to a null value if left unspecified.</target>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Note that null values do not take up space in the search index.</source>
          <target state="new">Note that null values do not take up space in the search index.</target>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Before you can upload documents, you must have already created the index on the service.</source>
          <target state="new">Before you can upload documents, you must have already created the index on the service.</target>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create Index<ept id="p1">](#CreateIndex)</ept> for details about this first step.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create Index<ept id="p1">](#CreateIndex)</ept> for details about this first step.</target>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: This version of the API provides full-text search in English only.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: This version of the API provides full-text search in English only.</target>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Add, Update, or Delete Documents</source>
          <target state="new">Add, Update, or Delete Documents</target>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>You can upload, merge, merge-or-upload or delete documents from a specified index using HTTP POST.</source>
          <target state="new">You can upload, merge, merge-or-upload or delete documents from a specified index using HTTP POST.</target>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>For large numbers of updates, batching of documents (up to 1000 documents per batch or about 16 MB per batch) is recommended.</source>
          <target state="new">For large numbers of updates, batching of documents (up to 1000 documents per batch or about 16 MB per batch) is recommended.</target>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>HTTPS is required for all service requests.</source>
          <target state="new">HTTPS is required for all service requests.</target>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>You can upload, merge, merge-or-upload or delete documents from a specified index using HTTP POST.</source>
          <target state="new">You can upload, merge, merge-or-upload or delete documents from a specified index using HTTP POST.</target>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The request URI includes [index name], specifying which index to post documents.</source>
          <target state="new">The request URI includes [index name], specifying which index to post documents.</target>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>You can only post documents to one index at a time.</source>
          <target state="new">You can only post documents to one index at a time.</target>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> parameter is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> parameter is required.</target>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</target>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers.</source>
          <target state="new">The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Content-Type`</ph>: Required.</source>
          <target state="new"><ph id="ph1">`Content-Type`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Set this to <ph id="ph1">`application/json`</ph></source>
          <target state="new">Set this to <ph id="ph1">`application/json`</ph></target>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: Required.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: Required.</target>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new">The <ph id="ph1">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service.</source>
          <target state="new">It is a string value, unique to your service.</target>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add Documents<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> header set to your admin key (as opposed to a query key).</source>
          <target state="new">The <bpt id="p1">**</bpt>Add Documents<ept id="p1">**</ept> request must include an <ph id="ph1">`api-key`</ph> header set to your admin key (as opposed to a query key).</target>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="new">Request Body</target>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The body of the request contains one or more documents to be indexed.</source>
          <target state="new">The body of the request contains one or more documents to be indexed.</target>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Documents are identified by a unique key.</source>
          <target state="new">Documents are identified by a unique key.</target>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Each document is associated with an action: upload, merge, mergeOrUpload or delete.</source>
          <target state="new">Each document is associated with an action: upload, merge, mergeOrUpload or delete.</target>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Upload requests must include the document data as a set of key/value pairs.</source>
          <target state="new">Upload requests must include the document data as a set of key/value pairs.</target>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Document Actions</source>
          <target state="new">Document Actions</target>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`upload`</ph>: An upload action is similar to an "upsert" where the document will be inserted if it is new and updated/replaced if it exists.</source>
          <target state="new"><ph id="ph1">`upload`</ph>: An upload action is similar to an "upsert" where the document will be inserted if it is new and updated/replaced if it exists.</target>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Note that all fields are replaced in the update case.</source>
          <target state="new">Note that all fields are replaced in the update case.</target>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`merge`</ph>: Merge updates an existing document with the specified fields.</source>
          <target state="new"><ph id="ph1">`merge`</ph>: Merge updates an existing document with the specified fields.</target>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>If the document doesn't exist, the merge will fail.</source>
          <target state="new">If the document doesn't exist, the merge will fail.</target>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Any field you specify in a merge will replace the existing field in the document.</source>
          <target state="new">Any field you specify in a merge will replace the existing field in the document.</target>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>This includes fields of type <ph id="ph1">`Collection(Edm.String)`</ph>.</source>
          <target state="new">This includes fields of type <ph id="ph1">`Collection(Edm.String)`</ph>.</target>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>For example, if the document contains a field "tags" with value <ph id="ph1">`["budget"]`</ph> and you execute a merge with value <ph id="ph2">`["economy", "pool"]`</ph> for "tags", the final value of the "tags" field will be <ph id="ph3">`["economy", "pool"]`</ph>.</source>
          <target state="new">For example, if the document contains a field "tags" with value <ph id="ph1">`["budget"]`</ph> and you execute a merge with value <ph id="ph2">`["economy", "pool"]`</ph> for "tags", the final value of the "tags" field will be <ph id="ph3">`["economy", "pool"]`</ph>.</target>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>It will <bpt id="p1">**</bpt>not<ept id="p1">**</ept> be <ph id="ph1">`["budget", "economy", "pool"]`</ph>.</source>
          <target state="new">It will <bpt id="p1">**</bpt>not<ept id="p1">**</ept> be <ph id="ph1">`["budget", "economy", "pool"]`</ph>.</target>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`mergeOrUpload`</ph>: behaves like <ph id="ph2">`merge`</ph> if a document with the given key already exists in the index.</source>
          <target state="new"><ph id="ph1">`mergeOrUpload`</ph>: behaves like <ph id="ph2">`merge`</ph> if a document with the given key already exists in the index.</target>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>If the document does not exist it behaves like <ph id="ph1">`upload`</ph> with a new document.</source>
          <target state="new">If the document does not exist it behaves like <ph id="ph1">`upload`</ph> with a new document.</target>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`delete`</ph>: Delete removes the specified document from the index.</source>
          <target state="new"><ph id="ph1">`delete`</ph>: Delete removes the specified document from the index.</target>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Note that you can specify only the key field value in a <ph id="ph1">`delete`</ph> operation.</source>
          <target state="new">Note that you can specify only the key field value in a <ph id="ph1">`delete`</ph> operation.</target>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Attempting to specify other fields will result in an HTTP 400 error.</source>
          <target state="new">Attempting to specify other fields will result in an HTTP 400 error.</target>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>If you want to remove an individual field from a document, use <ph id="ph1">`merge`</ph> instead and simply set the field explicitly to <ph id="ph2">`null`</ph>.</source>
          <target state="new">If you want to remove an individual field from a document, use <ph id="ph1">`merge`</ph> instead and simply set the field explicitly to <ph id="ph2">`null`</ph>.</target>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Status code: 200 OK is returned for a successful response, meaning that all items have been successfully indexed (as indicated by the 'status' field set to true for all items):</source>
          <target state="new">Status code: 200 OK is returned for a successful response, meaning that all items have been successfully indexed (as indicated by the 'status' field set to true for all items):</target>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Status code: 207 is returned when at least one item was not successfully indexed (as indicated by the 'status' field set to false for items that have not been indexed):</source>
          <target state="new">Status code: 207 is returned when at least one item was not successfully indexed (as indicated by the 'status' field set to false for items that have not been indexed):</target>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`errorMessage`</ph> property will indicate the reason for the indexing error if possible.</source>
          <target state="new">The <ph id="ph1">`errorMessage`</ph> property will indicate the reason for the indexing error if possible.</target>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: If your client code frequently encounters a 207 response, one possible reason is that the system is under load.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: If your client code frequently encounters a 207 response, one possible reason is that the system is under load.</target>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>You can confirm this by checking the <ph id="ph1">`errorMessage`</ph> property.</source>
          <target state="new">You can confirm this by checking the <ph id="ph1">`errorMessage`</ph> property.</target>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>If this is the case, we recommend <bpt id="p1">***</bpt>throttling indexing requests<ept id="p1">***</ept>.</source>
          <target state="new">If this is the case, we recommend <bpt id="p1">***</bpt>throttling indexing requests<ept id="p1">***</ept>.</target>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Otherwise, if indexing traffic doesn't subside, the system could start rejecting all requests with 503 errors.</source>
          <target state="new">Otherwise, if indexing traffic doesn't subside, the system could start rejecting all requests with 503 errors.</target>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Status code: 429 indicates that you have exceeded your quota on the number of documents per index.</source>
          <target state="new">Status code: 429 indicates that you have exceeded your quota on the number of documents per index.</target>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>You must either create a new index or upgrade for higher capacity limits.</source>
          <target state="new">You must either create a new index or upgrade for higher capacity limits.</target>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="new">Example:</target>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Search Documents</source>
          <target state="new">Search Documents</target>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> operation is issued as a GET request and specifies query parameters that give the criteria for selecting matching documents.</source>
          <target state="new">A <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> operation is issued as a GET request and specifies query parameters that give the criteria for selecting matching documents.</target>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>HTTPS is required for service requests.</source>
          <target state="new">HTTPS is required for service requests.</target>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> request can be constructed using the GET method.</source>
          <target state="new">The <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> request can be constructed using the GET method.</target>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The request URI specifies which index to query, for all documents that match the query parameters.</source>
          <target state="new">The request URI specifies which index to query, for all documents that match the query parameters.</target>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Query Parameters</source>
          <target state="new">Query Parameters</target>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`search=[string]`</ph> (optional) - the text to search for.</source>
          <target state="new"><ph id="ph1">`search=[string]`</ph> (optional) - the text to search for.</target>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>All <ph id="ph1">`searchable`</ph> fields are searched by default unless <ph id="ph2">`searchFields`</ph> is specified.</source>
          <target state="new">All <ph id="ph1">`searchable`</ph> fields are searched by default unless <ph id="ph2">`searchFields`</ph> is specified.</target>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>When searching <ph id="ph1">`searchable`</ph> fields, the search text itself is tokenized, so multiple terms can be separated by white space (for example: <ph id="ph2">`search=hello world`</ph>).</source>
          <target state="new">When searching <ph id="ph1">`searchable`</ph> fields, the search text itself is tokenized, so multiple terms can be separated by white space (for example: <ph id="ph2">`search=hello world`</ph>).</target>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>To match any term, use <ph id="ph1">`*`</ph> (this can be useful for boolean filter queries).</source>
          <target state="new">To match any term, use <ph id="ph1">`*`</ph> (this can be useful for boolean filter queries).</target>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Omitting this parameter has the same effect as setting it to <ph id="ph1">`*`</ph>.</source>
          <target state="new">Omitting this parameter has the same effect as setting it to <ph id="ph1">`*`</ph>.</target>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Simple Query Syntax<ept id="p1">](https://msdn.microsoft.com/library/dn798920.aspx)</ept> for specifics on the search syntax.</source>
          <target state="new">See <bpt id="p1">[</bpt>Simple Query Syntax<ept id="p1">](https://msdn.microsoft.com/library/dn798920.aspx)</ept> for specifics on the search syntax.</target>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: The results can sometimes be surprising when querying over <ph id="ph1">`searchable`</ph> fields.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: The results can sometimes be surprising when querying over <ph id="ph1">`searchable`</ph> fields.</target>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The tokenizer includes logic to handle cases common to English text like apostrophes, commas in numbers, etc. For example, <ph id="ph1">`search=123,456`</ph> will match a single term 123,456 rather than the individual terms 123 and 456, since commas are used as thousand-separators for large numbers in English.</source>
          <target state="new">The tokenizer includes logic to handle cases common to English text like apostrophes, commas in numbers, etc. For example, <ph id="ph1">`search=123,456`</ph> will match a single term 123,456 rather than the individual terms 123 and 456, since commas are used as thousand-separators for large numbers in English.</target>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>For this reason, we recommend using white space rather than punctuation to separate terms in the <ph id="ph1">`search`</ph> parameter.</source>
          <target state="new">For this reason, we recommend using white space rather than punctuation to separate terms in the <ph id="ph1">`search`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`searchMode=any|all`</ph> (optional, defaults to <ph id="ph2">`any`</ph>) - whether any or all of the search terms must be matched in order to count the document as a match.</source>
          <target state="new"><ph id="ph1">`searchMode=any|all`</ph> (optional, defaults to <ph id="ph2">`any`</ph>) - whether any or all of the search terms must be matched in order to count the document as a match.</target>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`searchFields=[string]`</ph> (optional) - the list of comma-separated field names to search for the specified text.</source>
          <target state="new"><ph id="ph1">`searchFields=[string]`</ph> (optional) - the list of comma-separated field names to search for the specified text.</target>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Target fields must be marked as <ph id="ph1">`searchable`</ph>.</source>
          <target state="new">Target fields must be marked as <ph id="ph1">`searchable`</ph>.</target>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$skip=#`</ph> (optional) - the # of search results to skip; Cannot be greater than 100,000.</source>
          <target state="new"><ph id="ph1">`$skip=#`</ph> (optional) - the # of search results to skip; Cannot be greater than 100,000.</target>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>If you need to scan documents in sequence but cannot use <ph id="ph1">`$skip`</ph> due to this limitation, consider using <ph id="ph2">`$orderby`</ph> on a totally-ordered key and <ph id="ph3">`$filter`</ph> with a range query instead.</source>
          <target state="new">If you need to scan documents in sequence but cannot use <ph id="ph1">`$skip`</ph> due to this limitation, consider using <ph id="ph2">`$orderby`</ph> on a totally-ordered key and <ph id="ph3">`$filter`</ph> with a range query instead.</target>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$top=#`</ph> (optional) - the # of search results to retrieve.</source>
          <target state="new"><ph id="ph1">`$top=#`</ph> (optional) - the # of search results to retrieve.</target>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>This defaults to 50.</source>
          <target state="new">This defaults to 50.</target>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>If you specify a value greater than 1000 and there are more than 1000 results, only the first 1000 results will be returned, along with a link to the next page of results (see <ph id="ph1">`@odata.nextLink`</ph> in <bpt id="p1">[</bpt>the example below<ept id="p1">](#SearchResponse)</ept>).</source>
          <target state="new">If you specify a value greater than 1000 and there are more than 1000 results, only the first 1000 results will be returned, along with a link to the next page of results (see <ph id="ph1">`@odata.nextLink`</ph> in <bpt id="p1">[</bpt>the example below<ept id="p1">](#SearchResponse)</ept>).</target>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$count=true|false`</ph> (optional, defaults to <ph id="ph2">`false`</ph>) - whether to fetch the total count of results.</source>
          <target state="new"><ph id="ph1">`$count=true|false`</ph> (optional, defaults to <ph id="ph2">`false`</ph>) - whether to fetch the total count of results.</target>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Setting this value to <ph id="ph1">`true`</ph> may have a performance impact.</source>
          <target state="new">Setting this value to <ph id="ph1">`true`</ph> may have a performance impact.</target>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Note that the count returned is an approximation.</source>
          <target state="new">Note that the count returned is an approximation.</target>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$orderby=[string]`</ph> (optional) - a list of comma-separated expressions to sort the results by.</source>
          <target state="new"><ph id="ph1">`$orderby=[string]`</ph> (optional) - a list of comma-separated expressions to sort the results by.</target>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Each expression can be either a field name or a call to the <ph id="ph1">`geo.distance()`</ph> function.</source>
          <target state="new">Each expression can be either a field name or a call to the <ph id="ph1">`geo.distance()`</ph> function.</target>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Each expression can be followed by <ph id="ph1">`asc`</ph> to indicated ascending, and <ph id="ph2">`desc`</ph> to indicate descending.</source>
          <target state="new">Each expression can be followed by <ph id="ph1">`asc`</ph> to indicated ascending, and <ph id="ph2">`desc`</ph> to indicate descending.</target>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The default is ascending order.</source>
          <target state="new">The default is ascending order.</target>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Ties will be broken by the match scores of documents.</source>
          <target state="new">Ties will be broken by the match scores of documents.</target>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>If no <ph id="ph1">`$orderby`</ph> is specified, the default sort order is descending by document match score.</source>
          <target state="new">If no <ph id="ph1">`$orderby`</ph> is specified, the default sort order is descending by document match score.</target>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>There is a limit of 32 clauses for <ph id="ph1">`$orderby`</ph>.</source>
          <target state="new">There is a limit of 32 clauses for <ph id="ph1">`$orderby`</ph>.</target>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$select=[string]`</ph> (optional) - a list of comma-separated fields to retrieve.</source>
          <target state="new"><ph id="ph1">`$select=[string]`</ph> (optional) - a list of comma-separated fields to retrieve.</target>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>If unspecified, all fields marked as retrievable in the schema are included.</source>
          <target state="new">If unspecified, all fields marked as retrievable in the schema are included.</target>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>You can also explicitly request all fields by setting this parameter to <ph id="ph1">`*`</ph>.</source>
          <target state="new">You can also explicitly request all fields by setting this parameter to <ph id="ph1">`*`</ph>.</target>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`facet=[string]`</ph> (zero or more) - a field to facet by.</source>
          <target state="new"><ph id="ph1">`facet=[string]`</ph> (zero or more) - a field to facet by.</target>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Optionally the string may contain parameters to customize the faceting expressed as comma-separated <ph id="ph1">`name:value`</ph> pairs.</source>
          <target state="new">Optionally the string may contain parameters to customize the faceting expressed as comma-separated <ph id="ph1">`name:value`</ph> pairs.</target>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Valid parameters are:</source>
          <target state="new">Valid parameters are:</target>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`count`</ph> (max # of facet terms; default is 10).</source>
          <target state="new"><ph id="ph1">`count`</ph> (max # of facet terms; default is 10).</target>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>There is no maximum, but higher values incur a corresponding performance penalty, especially if the faceted field contains a large number of unique terms.</source>
          <target state="new">There is no maximum, but higher values incur a corresponding performance penalty, especially if the faceted field contains a large number of unique terms.</target>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>For example: <ph id="ph1">`facet=category,count:5`</ph> gets the top five categories in facet results.</source>
          <target state="new">For example: <ph id="ph1">`facet=category,count:5`</ph> gets the top five categories in facet results.</target>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: If the <ph id="ph1">`count`</ph> parameter is less than the number of unique terms, the results may not be accurate.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: If the <ph id="ph1">`count`</ph> parameter is less than the number of unique terms, the results may not be accurate.</target>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>This is due to the way faceting queries are distributed across shards.</source>
          <target state="new">This is due to the way faceting queries are distributed across shards.</target>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Increasing <ph id="ph1">`count`</ph> generally increases the accuracy of the term counts, but at a performance cost.</source>
          <target state="new">Increasing <ph id="ph1">`count`</ph> generally increases the accuracy of the term counts, but at a performance cost.</target>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sort`</ph> (one of <ph id="ph2">`count`</ph> to sort <bpt id="p1">*</bpt>descending<ept id="p1">*</ept> by count, <ph id="ph3">`-count`</ph> to sort <bpt id="p2">*</bpt>ascending<ept id="p2">*</ept> by count, <ph id="ph4">`value`</ph> to sort <bpt id="p3">*</bpt>ascending<ept id="p3">*</ept> by value, or <ph id="ph5">`-value`</ph> to sort <bpt id="p4">*</bpt>descending<ept id="p4">*</ept> by value)</source>
          <target state="new"><ph id="ph1">`sort`</ph> (one of <ph id="ph2">`count`</ph> to sort <bpt id="p1">*</bpt>descending<ept id="p1">*</ept> by count, <ph id="ph3">`-count`</ph> to sort <bpt id="p2">*</bpt>ascending<ept id="p2">*</ept> by count, <ph id="ph4">`value`</ph> to sort <bpt id="p3">*</bpt>ascending<ept id="p3">*</ept> by value, or <ph id="ph5">`-value`</ph> to sort <bpt id="p4">*</bpt>descending<ept id="p4">*</ept> by value)</target>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>For example: <ph id="ph1">`facet=category,count:3,sort:count`</ph> gets the top three categories in facet results in descending order by the number of documents with each city name.</source>
          <target state="new">For example: <ph id="ph1">`facet=category,count:3,sort:count`</ph> gets the top three categories in facet results in descending order by the number of documents with each city name.</target>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>For example, if the top three categories are Budget, Motel, and Luxury, and Budget has 5 hits, Motel has 6, and Luxury has 4, then the buckets will be in the order Motel, Budget, Luxury.</source>
          <target state="new">For example, if the top three categories are Budget, Motel, and Luxury, and Budget has 5 hits, Motel has 6, and Luxury has 4, then the buckets will be in the order Motel, Budget, Luxury.</target>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>For example: <ph id="ph1">`facet=rating,sort:-value`</ph> produces buckets for all possible ratings, in descending order by value.</source>
          <target state="new">For example: <ph id="ph1">`facet=rating,sort:-value`</ph> produces buckets for all possible ratings, in descending order by value.</target>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>For example, if the ratings are from 1 to 5, the buckets will be ordered 5, 4, 3, 2, 1, irrespective of how many documents match each rating.</source>
          <target state="new">For example, if the ratings are from 1 to 5, the buckets will be ordered 5, 4, 3, 2, 1, irrespective of how many documents match each rating.</target>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`values`</ph> (pipe-delimited numeric or <ph id="ph2">`Edm.DateTimeOffset`</ph> values specifying a dynamic set of facet entry values)</source>
          <target state="new"><ph id="ph1">`values`</ph> (pipe-delimited numeric or <ph id="ph2">`Edm.DateTimeOffset`</ph> values specifying a dynamic set of facet entry values)</target>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>For example: <ph id="ph1">`facet=baseRate,values:10|20`</ph> produces three buckets: One for base rate 0 up to but not including 10, one for 10 up to but not including 20, and one for 20 or higher.</source>
          <target state="new">For example: <ph id="ph1">`facet=baseRate,values:10|20`</ph> produces three buckets: One for base rate 0 up to but not including 10, one for 10 up to but not including 20, and one for 20 or higher.</target>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>For example: <ph id="ph1">`facet=lastRenovationDate,values:2010-02-01T00:00:00Z`</ph> produces two buckets: One for hotels renovated before February 2010, and one for hotels renovated February 1st, 2010 or later.</source>
          <target state="new">For example: <ph id="ph1">`facet=lastRenovationDate,values:2010-02-01T00:00:00Z`</ph> produces two buckets: One for hotels renovated before February 2010, and one for hotels renovated February 1st, 2010 or later.</target>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`interval`</ph> (integer interval greater than 0 for numbers, or <ph id="ph2">`minute`</ph>, <ph id="ph3">`hour`</ph>, <ph id="ph4">`day`</ph>, <ph id="ph5">`week`</ph>, <ph id="ph6">`month`</ph>, <ph id="ph7">`quarter`</ph>, <ph id="ph8">`year`</ph> for date time values)</source>
          <target state="new"><ph id="ph1">`interval`</ph> (integer interval greater than 0 for numbers, or <ph id="ph2">`minute`</ph>, <ph id="ph3">`hour`</ph>, <ph id="ph4">`day`</ph>, <ph id="ph5">`week`</ph>, <ph id="ph6">`month`</ph>, <ph id="ph7">`quarter`</ph>, <ph id="ph8">`year`</ph> for date time values)</target>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>For example: <ph id="ph1">`facet=baseRate,interval:100`</ph> produces buckets based on base rate ranges of size 100.</source>
          <target state="new">For example: <ph id="ph1">`facet=baseRate,interval:100`</ph> produces buckets based on base rate ranges of size 100.</target>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>For example, if base rates are all between $60 and $600, there will be buckets for 0-100, 100-200, 200-300, 300-400, 400-500, and 500-600.</source>
          <target state="new">For example, if base rates are all between $60 and $600, there will be buckets for 0-100, 100-200, 200-300, 300-400, 400-500, and 500-600.</target>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>For example: <ph id="ph1">`facet=lastRenovationDate,interval:year`</ph> produces one bucket for each year when hotels were renovated.</source>
          <target state="new">For example: <ph id="ph1">`facet=lastRenovationDate,interval:year`</ph> produces one bucket for each year when hotels were renovated.</target>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: <ph id="ph1">`count`</ph> and <ph id="ph2">`sort`</ph> can be combined in the same facet specification, but they cannot be combined with <ph id="ph3">`interval`</ph> or <ph id="ph4">`values`</ph>, and <ph id="ph5">`interval`</ph> and <ph id="ph6">`values`</ph> cannot be combined together.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: <ph id="ph1">`count`</ph> and <ph id="ph2">`sort`</ph> can be combined in the same facet specification, but they cannot be combined with <ph id="ph3">`interval`</ph> or <ph id="ph4">`values`</ph>, and <ph id="ph5">`interval`</ph> and <ph id="ph6">`values`</ph> cannot be combined together.</target>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$filter=[string]`</ph> (optional) - a structured search expression in standard OData syntax.</source>
          <target state="new"><ph id="ph1">`$filter=[string]`</ph> (optional) - a structured search expression in standard OData syntax.</target>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>OData Expression Syntax<ept id="p1">](#ODataExpressionSyntax)</ept> for details on the subset of the OData expression grammar that Azure Search supports.</source>
          <target state="new">See <bpt id="p1">[</bpt>OData Expression Syntax<ept id="p1">](#ODataExpressionSyntax)</ept> for details on the subset of the OData expression grammar that Azure Search supports.</target>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`highlight=[string]`</ph> (optional) - a set of comma-separated field names used for hit highlights.</source>
          <target state="new"><ph id="ph1">`highlight=[string]`</ph> (optional) - a set of comma-separated field names used for hit highlights.</target>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Only <ph id="ph1">`searchable`</ph> fields can be used for hit highlighting.</source>
          <target state="new">Only <ph id="ph1">`searchable`</ph> fields can be used for hit highlighting.</target>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`scoringProfile=[string]`</ph> (optional) - the name of a scoring profile to evaluate match scores for matching documents in order to sort the results.</source>
          <target state="new"><ph id="ph1">`scoringProfile=[string]`</ph> (optional) - the name of a scoring profile to evaluate match scores for matching documents in order to sort the results.</target>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`scoringParameter=[string]`</ph> (zero or more) - indicates the value for each parameter defined in a scoring function (for example, <ph id="ph2">`referencePointParameter`</ph>) using the format name:value.</source>
          <target state="new"><ph id="ph1">`scoringParameter=[string]`</ph> (zero or more) - indicates the value for each parameter defined in a scoring function (for example, <ph id="ph2">`referencePointParameter`</ph>) using the format name:value.</target>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>For example, if the scoring profile defines a function with a parameter called "mylocation" the query string option would be &amp;scoringParameter=mylocation:-122.2,44.8</source>
          <target state="new">For example, if the scoring profile defines a function with a parameter called "mylocation" the query string option would be &amp;scoringParameter=mylocation:-122.2,44.8</target>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-version=[string]`</ph> (required).</source>
          <target state="new"><ph id="ph1">`api-version=[string]`</ph> (required).</target>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</target>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Note: For this operation, the <ph id="ph1">`api-version`</ph> is specified as a query parameter.</source>
          <target state="new">Note: For this operation, the <ph id="ph1">`api-version`</ph> is specified as a query parameter.</target>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers.</source>
          <target state="new">The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service URL.</source>
          <target state="new">It is a string value, unique to your service URL.</target>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> request can specify either an admin key or query key for <ph id="ph1">`api-key`</ph>.</source>
          <target state="new">The <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> request can specify either an admin key or query key for <ph id="ph1">`api-key`</ph>.</target>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="new">Request Body</target>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="new">None.</target>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Response<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Response<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Status Code: 200 OK is returned for a successful response.</source>
          <target state="new">Status Code: 200 OK is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="new">Examples:</target>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>You can find additional examples on the <bpt id="p1">[</bpt>OData Expression Syntax for Azure Search<ept id="p1">](https://msdn.microsoft.com/library/azure/dn798921.aspx)</ept> page.</source>
          <target state="new">You can find additional examples on the <bpt id="p1">[</bpt>OData Expression Syntax for Azure Search<ept id="p1">](https://msdn.microsoft.com/library/azure/dn798921.aspx)</ept> page.</target>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Search the Index sorted descending by date.</source>
          <target state="new">Search the Index sorted descending by date.</target>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=*&amp;$orderby=lastRenovationDate desc&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=*&amp;$orderby=lastRenovationDate desc&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>NOTE: Precision of DateTime fields is limited to milliseconds.</source>
          <target state="new">NOTE: Precision of DateTime fields is limited to milliseconds.</target>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>If you push a timestamp that specifies values any smaller (for example, see the seconds portion of this timestamp: 10:30:09.7552052), the return value will be rounded up (or 10:30:09.7550000, per the example).</source>
          <target state="new">If you push a timestamp that specifies values any smaller (for example, see the seconds portion of this timestamp: 10:30:09.7552052), the return value will be rounded up (or 10:30:09.7550000, per the example).</target>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>In a faceted search, search the index and retrieve facets for categories, rating, tags, as well as items with baseRate in specific ranges:</source>
          <target state="new">In a faceted search, search the index and retrieve facets for categories, rating, tags, as well as items with baseRate in specific ranges:</target>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=test&amp;facet=category&amp;facet=rating&amp;facet=tags&amp;facet=baseRate,values:80|150|220&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=test&amp;facet=category&amp;facet=rating&amp;facet=tags&amp;facet=baseRate,values:80|150|220&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Using a filter, narrow down the previous faceted query results after the user clicks on rating 3 and category "Motel":</source>
          <target state="new">Using a filter, narrow down the previous faceted query results after the user clicks on rating 3 and category "Motel":</target>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=test&amp;facet=tags&amp;facet=baseRate,values:80|150|220&amp;$filter=rating eq 3 and category eq 'Motel'&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=test&amp;facet=tags&amp;facet=baseRate,values:80|150|220&amp;$filter=rating eq 3 and category eq 'Motel'&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>In a faceted search, set an upper limit on unique terms returned in a query.</source>
          <target state="new">In a faceted search, set an upper limit on unique terms returned in a query.</target>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The default is 10, but you can increase or decrease this value using the <ph id="ph1">`count`</ph> parameter on the <ph id="ph2">`facet`</ph> attribute:</source>
          <target state="new">The default is 10, but you can increase or decrease this value using the <ph id="ph1">`count`</ph> parameter on the <ph id="ph2">`facet`</ph> attribute:</target>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=test&amp;facet=city,count:5&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=test&amp;facet=city,count:5&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Search the Index within specific fields; For example, a language-specific field:</source>
          <target state="new">Search the Index within specific fields; For example, a language-specific field:</target>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=hôtel&amp;searchFields=description_fr&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=hôtel&amp;searchFields=description_fr&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Search the Index across multiple fields.</source>
          <target state="new">Search the Index across multiple fields.</target>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>For example, you can store and query searchable fields in multiple languages, all within the same index.</source>
          <target state="new">For example, you can store and query searchable fields in multiple languages, all within the same index.</target>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>If English and French descriptions co-exist in the same document, you can return any or all in the query results:</source>
          <target state="new">If English and French descriptions co-exist in the same document, you can return any or all in the query results:</target>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=hotel&amp;searchFields=description,description_fr&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=hotel&amp;searchFields=description,description_fr&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Note that you can only query one index at a time.</source>
          <target state="new">Note that you can only query one index at a time.</target>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Do not create multiple indexes for each language unless you plan to query one at a time.</source>
          <target state="new">Do not create multiple indexes for each language unless you plan to query one at a time.</target>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Paging - Get the 1st page of items (page size is 10):</source>
          <target state="new">Paging - Get the 1st page of items (page size is 10):</target>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=*&amp;$skip=0&amp;$top=10&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=*&amp;$skip=0&amp;$top=10&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Paging - Get the 2nd page of items (page size is 10):</source>
          <target state="new">Paging - Get the 2nd page of items (page size is 10):</target>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=*&amp;$skip=10&amp;$top=10&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=*&amp;$skip=10&amp;$top=10&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Retrieve a specific set of fields:</source>
          <target state="new">Retrieve a specific set of fields:</target>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=*&amp;$select=hotelName,description&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=*&amp;$select=hotelName,description&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Retrieve documents matching a specific query expression</source>
          <target state="new">Retrieve documents matching a specific query expression</target>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Search the index and return fragments with hit highlights</source>
          <target state="new">Search the index and return fragments with hit highlights</target>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=something&amp;highlight=description&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=something&amp;highlight=description&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Search the index and return documents sorted from closer to farther away from a reference location</source>
          <target state="new">Search the index and return documents sorted from closer to farther away from a reference location</target>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=something&amp;$orderby=geo.distance(location, geography'POINT(-122.12315 47.88121)')&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=something&amp;$orderby=geo.distance(location, geography'POINT(-122.12315 47.88121)')&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Search the index assuming there's a scoring profile called "geo" with two distance scoring functions, one defining a parameter called "currentLocation" and one defining a parameter called "lastLocation"</source>
          <target state="new">Search the index assuming there's a scoring profile called "geo" with two distance scoring functions, one defining a parameter called "currentLocation" and one defining a parameter called "lastLocation"</target>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>GET /indexes/hotels/docs?search=something&amp;scoringProfile=geo&amp;scoringParameter=currentLocation:-122.123,44.77233&amp;scoringParameter=lastLocation:-121.499,44.2113&amp;api-version=2014-07-31-Preview</source>
          <target state="new">GET /indexes/hotels/docs?search=something&amp;scoringProfile=geo&amp;scoringParameter=currentLocation:-122.123,44.77233&amp;scoringParameter=lastLocation:-121.499,44.2113&amp;api-version=2014-07-31-Preview</target>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Lookup Document</source>
          <target state="new">Lookup Document</target>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Lookup Document<ept id="p1">**</ept> operation retrieves a document from Azure Search.</source>
          <target state="new">The <bpt id="p1">**</bpt>Lookup Document<ept id="p1">**</ept> operation retrieves a document from Azure Search.</target>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>This is useful when a user clicks on a specific search result, and you want to look up specific details about that document.</source>
          <target state="new">This is useful when a user clicks on a specific search result, and you want to look up specific details about that document.</target>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>HTTPS is required for service requests.</source>
          <target state="new">HTTPS is required for service requests.</target>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Lookup Document<ept id="p1">**</ept> request can be constructed as follows.</source>
          <target state="new">The <bpt id="p1">**</bpt>Lookup Document<ept id="p1">**</ept> request can be constructed as follows.</target>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the traditional OData syntax for key lookup:</source>
          <target state="new">Alternatively, you can use the traditional OData syntax for key lookup:</target>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The request URI includes an [index name] and [key], specifying which document to retrieve from which index.</source>
          <target state="new">The request URI includes an [index name] and [key], specifying which document to retrieve from which index.</target>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>You can only get one document at a time.</source>
          <target state="new">You can only get one document at a time.</target>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> to get multiple documents in a single request.</source>
          <target state="new">Use <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> to get multiple documents in a single request.</target>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Query Parameters</source>
          <target state="new">Query Parameters</target>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$select=[string]`</ph> (optional) - a list of comma-separated fields to retrieve.</source>
          <target state="new"><ph id="ph1">`$select=[string]`</ph> (optional) - a list of comma-separated fields to retrieve.</target>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>If unspecified or set to <ph id="ph1">`*`</ph>, all fields marked as retrievable in the schema are included in the projection.</source>
          <target state="new">If unspecified or set to <ph id="ph1">`*`</ph>, all fields marked as retrievable in the schema are included in the projection.</target>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-version=[string]`</ph> (required).</source>
          <target state="new"><ph id="ph1">`api-version=[string]`</ph> (required).</target>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</target>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Note: For this operation, the <ph id="ph1">`api-version`</ph> is specified as a query parameter.</source>
          <target state="new">Note: For this operation, the <ph id="ph1">`api-version`</ph> is specified as a query parameter.</target>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers.</source>
          <target state="new">The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service URL.</source>
          <target state="new">It is a string value, unique to your service URL.</target>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Lookup Document<ept id="p1">**</ept> request can specify either an admin key or query key for <ph id="ph1">`api-key`</ph>.</source>
          <target state="new">The <bpt id="p1">**</bpt>Lookup Document<ept id="p1">**</ept> request can specify either an admin key or query key for <ph id="ph1">`api-key`</ph>.</target>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="new">Request Body</target>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="new">None.</target>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Status Code: 200 OK is returned for a successful response.</source>
          <target state="new">Status Code: 200 OK is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="new">Example</target>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Lookup the document that has key '2'</source>
          <target state="new">Lookup the document that has key '2'</target>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Lookup the document that has key '3' using OData syntax:</source>
          <target state="new">Lookup the document that has key '3' using OData syntax:</target>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Count Documents</source>
          <target state="new">Count Documents</target>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Count Documents<ept id="p1">**</ept> operation retrieves a count of the number of documents in a search index.</source>
          <target state="new">The <bpt id="p1">**</bpt>Count Documents<ept id="p1">**</ept> operation retrieves a count of the number of documents in a search index.</target>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`$count`</ph> syntax is part of the OData protocol.</source>
          <target state="new">The <ph id="ph1">`$count`</ph> syntax is part of the OData protocol.</target>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>HTTPS is required for service requests.</source>
          <target state="new">HTTPS is required for service requests.</target>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Count Documents<ept id="p1">**</ept> request can be constructed using the GET method.</source>
          <target state="new">The <bpt id="p1">**</bpt>Count Documents<ept id="p1">**</ept> request can be constructed using the GET method.</target>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>The [index name] in the request URI tells the service to return a count of all items in the docs collection of the specified index.</source>
          <target state="new">The [index name] in the request URI tells the service to return a count of all items in the docs collection of the specified index.</target>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> parameter is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> parameter is required.</target>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</target>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers.</source>
          <target state="new">The following list describes the required and optional request headers.</target>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Accept`</ph>: This value must be set to <ph id="ph2">`text/plain`</ph>.</source>
          <target state="new"><ph id="ph1">`Accept`</ph>: This value must be set to <ph id="ph2">`text/plain`</ph>.</target>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service URL.</source>
          <target state="new">It is a string value, unique to your service URL.</target>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Count Documents<ept id="p1">**</ept> request can specify either an admin key or query key for <ph id="ph1">`api-key`</ph>.</source>
          <target state="new">The <bpt id="p1">**</bpt>Count Documents<ept id="p1">**</ept> request can specify either an admin key or query key for <ph id="ph1">`api-key`</ph>.</target>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>You can get both the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get both the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="new">Request Body</target>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="new">None.</target>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>Status Code: 200 OK is returned for a successful response.</source>
          <target state="new">Status Code: 200 OK is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>The response body contains the count value as an integer formatted in plain text.</source>
          <target state="new">The response body contains the count value as an integer formatted in plain text.</target>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Suggestions</source>
          <target state="new">Suggestions</target>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Suggestions<ept id="p1">**</ept> operation retrieves suggestions based on partial search input.</source>
          <target state="new">The <bpt id="p1">**</bpt>Suggestions<ept id="p1">**</ept> operation retrieves suggestions based on partial search input.</target>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>It's typically used in search boxes to provide type-ahead suggestions as users are entering search terms.</source>
          <target state="new">It's typically used in search boxes to provide type-ahead suggestions as users are entering search terms.</target>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>Suggested text may be repeated if multiple candidates match the same search input.</source>
          <target state="new">Suggested text may be repeated if multiple candidates match the same search input.</target>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`$select`</ph> to retrieve other document fields (including the document key) so that you can tell which document is the source for each suggestion.</source>
          <target state="new">You can use <ph id="ph1">`$select`</ph> to retrieve other document fields (including the document key) so that you can tell which document is the source for each suggestion.</target>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="new">Request</target>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>HTTPS is required for service requests.</source>
          <target state="new">HTTPS is required for service requests.</target>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Suggestions<ept id="p1">**</ept> request can be constructed using the GET method.</source>
          <target state="new">The <bpt id="p1">**</bpt>Suggestions<ept id="p1">**</ept> request can be constructed using the GET method.</target>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>The request URI specifies the name of the index to query.</source>
          <target state="new">The request URI specifies the name of the index to query.</target>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>It also includes the partially input search term in the query string.</source>
          <target state="new">It also includes the partially input search term in the query string.</target>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>Query Parameters</source>
          <target state="new">Query Parameters</target>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`search=[string]`</ph> - the search text to use to suggest queries.</source>
          <target state="new"><ph id="ph1">`search=[string]`</ph> - the search text to use to suggest queries.</target>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>Must be at least 3 characters, and no more than 25 characters.</source>
          <target state="new">Must be at least 3 characters, and no more than 25 characters.</target>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`fuzzy=[boolean]`</ph> (optional, default = false) - when set to true this API will find suggestions even if there's a substituted or missing character in the search text.</source>
          <target state="new"><ph id="ph1">`fuzzy=[boolean]`</ph> (optional, default = false) - when set to true this API will find suggestions even if there's a substituted or missing character in the search text.</target>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>While this provides a better experience in some scenarios it comes at a performance cost as fuzzy suggestion searches are slower and consume more resources.</source>
          <target state="new">While this provides a better experience in some scenarios it comes at a performance cost as fuzzy suggestion searches are slower and consume more resources.</target>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`searchFields=[string]`</ph> (optional) - the list of comma-separated field names to search for the specified search text.</source>
          <target state="new"><ph id="ph1">`searchFields=[string]`</ph> (optional) - the list of comma-separated field names to search for the specified search text.</target>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>Target fields must be enabled for suggestions.</source>
          <target state="new">Target fields must be enabled for suggestions.</target>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$top=#`</ph> (optional, default = 5) - the number of suggestions to retrieve.</source>
          <target state="new"><ph id="ph1">`$top=#`</ph> (optional, default = 5) - the number of suggestions to retrieve.</target>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Must be a number between 1 and 10.</source>
          <target state="new">Must be a number between 1 and 10.</target>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$filter=[string]`</ph> (optional) - an expression that filters the documents considered for suggestions.</source>
          <target state="new"><ph id="ph1">`$filter=[string]`</ph> (optional) - an expression that filters the documents considered for suggestions.</target>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$orderby=[string]`</ph> (optional) - a list of comma-separated expressions to sort the results by.</source>
          <target state="new"><ph id="ph1">`$orderby=[string]`</ph> (optional) - a list of comma-separated expressions to sort the results by.</target>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>Each expression can be either a field name or a call to the <ph id="ph1">`geo.distance()`</ph> function.</source>
          <target state="new">Each expression can be either a field name or a call to the <ph id="ph1">`geo.distance()`</ph> function.</target>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>Each expression can be followed by <ph id="ph1">`asc`</ph> to indicated ascending, and <ph id="ph2">`desc`</ph> to indicate descending.</source>
          <target state="new">Each expression can be followed by <ph id="ph1">`asc`</ph> to indicated ascending, and <ph id="ph2">`desc`</ph> to indicate descending.</target>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>The default is ascending order.</source>
          <target state="new">The default is ascending order.</target>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>There is a limit of 32 clauses for <ph id="ph1">`$orderby`</ph>.</source>
          <target state="new">There is a limit of 32 clauses for <ph id="ph1">`$orderby`</ph>.</target>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`$select=[string]`</ph> (optional) - a list of comma-separated fields to retrieve.</source>
          <target state="new"><ph id="ph1">`$select=[string]`</ph> (optional) - a list of comma-separated fields to retrieve.</target>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>If unspecified, only the document key and suggestion text is returned.</source>
          <target state="new">If unspecified, only the document key and suggestion text is returned.</target>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-version=[string]`</ph> (required).</source>
          <target state="new"><ph id="ph1">`api-version=[string]`</ph> (required).</target>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</source>
          <target state="new">Valid values include <ph id="ph1">`2014-07-31-Preview`</ph> or <ph id="ph2">`2014-10-20-Preview`</ph>.</target>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</source>
          <target state="new">You can specify which one to use on each request to get version-specific behaviors, but as a best practice, use the same version throughout your code.</target>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</source>
          <target state="new">The recommended version is <ph id="ph1">`2014-07-31-Preview`</ph> for general use.</target>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</source>
          <target state="new">Alternatively, use <ph id="ph1">`2014-10-20-Preview`</ph> to evaluate experimental features.</target>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Search Service Versioning<ept id="p1">](http://msdn.microsoft.com/library/azure/dn864560.aspx)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Note: For this operation, the <ph id="ph1">`api-version`</ph> is specified as a query parameter.</source>
          <target state="new">Note: For this operation, the <ph id="ph1">`api-version`</ph> is specified as a query parameter.</target>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="new">Request Headers</target>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>The following list describes the required and optional request headers</source>
          <target state="new">The following list describes the required and optional request headers</target>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</source>
          <target state="new"><ph id="ph1">`api-key`</ph>: The <ph id="ph2">`api-key`</ph> is used to authenticate the request to your Search service.</target>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>It is a string value, unique to your service URL.</source>
          <target state="new">It is a string value, unique to your service URL.</target>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Suggestions<ept id="p1">**</ept> request can specify either an admin key or query key as the <ph id="ph1">`api-key`</ph>.</source>
          <target state="new">The <bpt id="p1">**</bpt>Suggestions<ept id="p1">**</ept> request can specify either an admin key or query key as the <ph id="ph1">`api-key`</ph>.</target>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>You will also need the service name to construct the request URL.</source>
          <target state="new">You will also need the service name to construct the request URL.</target>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>You can get both the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</source>
          <target state="new">You can get both the service name and <ph id="ph1">`api-key`</ph> from your service dashboard in the Azure Preview Portal.</target>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service.portal.md)</ept> for page navigation help.</target>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="new">Request Body</target>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="new">None.</target>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>Status Code: 200 OK is returned for a successful response.</source>
          <target state="new">Status Code: 200 OK is returned for a successful response.</target>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>If the projection option is used to retrieve fields they are included in each element of the array:</source>
          <target state="new">If the projection option is used to retrieve fields they are included in each element of the array:</target>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="new">Example</target>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Retrieve 5 suggestions where the partial search input is 'lux'</source>
          <target state="new">Retrieve 5 suggestions where the partial search input is 'lux'</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10c9e5024a96964788c0996666c9446203dcc594</xliffext:olfilehash>
  </header>
</xliff>