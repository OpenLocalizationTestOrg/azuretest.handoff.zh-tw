<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Get started with Azure Blob Storage and Visual Studio connected services | Microsoft Azure</source>
          <target state="new">Get started with Azure Blob Storage and Visual Studio connected services | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to get started using Azure Blob Storage in a cloud service project in Visual Studio</source>
          <target state="new">How to get started using Azure Blob Storage in a cloud service project in Visual Studio</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get started with Azure Blob Storage and Visual Studio connected services</source>
          <target state="new">Get started with Azure Blob Storage and Visual Studio connected services</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="new">Getting started</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>What happened</source>
          <target state="new">What happened</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Blobs</source>
          <target state="new">Blobs</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Queues</source>
          <target state="new">Queues</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="new">Tables</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This article describes how to get started with Azure Blob Storage after you created or referenced an Azure Storage account by using the Visual Studio <bpt id="p1">**</bpt>Add Connected Services<ept id="p1">**</ept> dialog in a Visual Studio cloud services project.</source>
          <target state="new">This article describes how to get started with Azure Blob Storage after you created or referenced an Azure Storage account by using the Visual Studio <bpt id="p1">**</bpt>Add Connected Services<ept id="p1">**</ept> dialog in a Visual Studio cloud services project.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>We'll show you how to access and create blob containers, and how to perform common tasks like uploading, listing, and downloading blobs.</source>
          <target state="new">We'll show you how to access and create blob containers, and how to perform common tasks like uploading, listing, and downloading blobs.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The samples are written in C\# and use the <bpt id="p1">[</bpt>Azure Storage Client Library for .NET<ept id="p1">](https://msdn.microsoft.com/library/azure/dn261237.aspx)</ept>.</source>
          <target state="new">The samples are written in C\# and use the <bpt id="p1">[</bpt>Azure Storage Client Library for .NET<ept id="p1">](https://msdn.microsoft.com/library/azure/dn261237.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Azure Blob Storage is a service for storing large amounts of unstructured data that can be accessed from anywhere in the world via HTTP or HTTPS.</source>
          <target state="new">Azure Blob Storage is a service for storing large amounts of unstructured data that can be accessed from anywhere in the world via HTTP or HTTPS.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A single blob can be any size.</source>
          <target state="new">A single blob can be any size.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Blobs can be things like images, audio and video files, raw data, and document files.</source>
          <target state="new">Blobs can be things like images, audio and video files, raw data, and document files.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Just as files live in folders, storage blobs live in containers.</source>
          <target state="new">Just as files live in folders, storage blobs live in containers.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>After you have created a storage, you create one or more containers in the storage.</source>
          <target state="new">After you have created a storage, you create one or more containers in the storage.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, in a storage called “Scrapbook,” you can create containers in the storage called “images” to store pictures and another called “audio” to store audio files.</source>
          <target state="new">For example, in a storage called “Scrapbook,” you can create containers in the storage called “images” to store pictures and another called “audio” to store audio files.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>After you create the containers, you can upload individual blob files to them.</source>
          <target state="new">After you create the containers, you can upload individual blob files to them.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information on programmatically manipulating blobs, see <bpt id="p1">[</bpt>How to use blob storage from .NET<ept id="p1">](storage-dotnet-how-to-use-blobs.md)</ept>.</source>
          <target state="new">For more information on programmatically manipulating blobs, see <bpt id="p1">[</bpt>How to use blob storage from .NET<ept id="p1">](storage-dotnet-how-to-use-blobs.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For general information about Azure Storage,see <bpt id="p1">[</bpt>Storage documentation<ept id="p1">](https://azure.microsoft.com/documentation/services/storage/)</ept>.</source>
          <target state="new">For general information about Azure Storage,see <bpt id="p1">[</bpt>Storage documentation<ept id="p1">](https://azure.microsoft.com/documentation/services/storage/)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For general information about Azure Cloud Services, see <bpt id="p1">[</bpt>Cloud Services documentation<ept id="p1">](http://azure.microsoft.com/documentation/services/cloud-services/)</ept>.</source>
          <target state="new">For general information about Azure Cloud Services, see <bpt id="p1">[</bpt>Cloud Services documentation<ept id="p1">](http://azure.microsoft.com/documentation/services/cloud-services/)</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about programming ASP.NET applications, see <bpt id="p1">[</bpt>ASP.NET<ept id="p1">](http://www.asp.net)</ept>.</source>
          <target state="new">For more information about programming ASP.NET applications, see <bpt id="p1">[</bpt>ASP.NET<ept id="p1">](http://www.asp.net)</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Access blob containers in code</source>
          <target state="new">Access blob containers in code</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To programmatically access blobs in cloud service projects, you need to add the following items, if they're not already present.</source>
          <target state="new">To programmatically access blobs in cloud service projects, you need to add the following items, if they're not already present.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Add the following code namespace declarations to the top of any C# file in which you wish to programmatically access Azure Storage.</source>
          <target state="new">Add the following code namespace declarations to the top of any C# file in which you wish to programmatically access Azure Storage.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Get a <ph id="ph1">`CloudStorageAccount`</ph> object that represents your storage account information.</source>
          <target state="new">Get a <ph id="ph1">`CloudStorageAccount`</ph> object that represents your storage account information.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the following code to get the your storage connection string and storage account information from the Azure service configuration.</source>
          <target state="new">Use the following code to get the your storage connection string and storage account information from the Azure service configuration.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Get a <ph id="ph1">`CloudBlobClient`</ph> object to reference an existing container in your storage account.</source>
          <target state="new">Get a <ph id="ph1">`CloudBlobClient`</ph> object to reference an existing container in your storage account.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Get a <ph id="ph1">`CloudBlobContainer`</ph> object to reference a specific blob container.</source>
          <target state="new">Get a <ph id="ph1">`CloudBlobContainer`</ph> object to reference a specific blob container.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Use all of the code shown in the previous procedure in front of the code shown in the following sections.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Use all of the code shown in the previous procedure in front of the code shown in the following sections.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Create a container in code</source>
          <target state="new">Create a container in code</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Some APIs that perform calls out to Azure Storage in ASP.NET are asynchronous.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Some APIs that perform calls out to Azure Storage in ASP.NET are asynchronous.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Asynchronous programming with Async and Await<ept id="p1">](http://msdn.microsoft.com/library/hh191443.aspx)</ept> for more information.</source>
          <target state="new">See <bpt id="p1">[</bpt>Asynchronous programming with Async and Await<ept id="p1">](http://msdn.microsoft.com/library/hh191443.aspx)</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The code in the following example assumes that you are using async programming methods.</source>
          <target state="new">The code in the following example assumes that you are using async programming methods.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To create a container in your storage account, all you need to do is add a call to <ph id="ph1">`CreateIfNotExistsAsync`</ph> as in the following code:</source>
          <target state="new">To create a container in your storage account, all you need to do is add a call to <ph id="ph1">`CreateIfNotExistsAsync`</ph> as in the following code:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To make the files within the container available to everyone, you can set the container to be public by using the following code.</source>
          <target state="new">To make the files within the container available to everyone, you can set the container to be public by using the following code.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Anyone on the Internet can see blobs in a public container, but you can</source>
          <target state="new">Anyone on the Internet can see blobs in a public container, but you can</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>modify or delete them only if you have the appropriate access key.</source>
          <target state="new">modify or delete them only if you have the appropriate access key.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Upload a blob into a container</source>
          <target state="new">Upload a blob into a container</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Azure Storage supports block blobs and page blobs.</source>
          <target state="new">Azure Storage supports block blobs and page blobs.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In the majority of cases, block blob is the recommended type to use.</source>
          <target state="new">In the majority of cases, block blob is the recommended type to use.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To upload a file to a block blob, get a container reference and use it to get a block blob reference.</source>
          <target state="new">To upload a file to a block blob, get a container reference and use it to get a block blob reference.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Once you have a blob reference, you can upload any stream of data to it by calling the <ph id="ph1">`UploadFromStream`</ph> method.</source>
          <target state="new">Once you have a blob reference, you can upload any stream of data to it by calling the <ph id="ph1">`UploadFromStream`</ph> method.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This operation creates the blob if it didn't previously exist, or overwrites it if it does exist.</source>
          <target state="new">This operation creates the blob if it didn't previously exist, or overwrites it if it does exist.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example shows how to upload a blob into a container and assumes that the container was already created.</source>
          <target state="new">The following example shows how to upload a blob into a container and assumes that the container was already created.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>List the blobs in a container</source>
          <target state="new">List the blobs in a container</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To list the blobs in a container, first get a container reference.</source>
          <target state="new">To list the blobs in a container, first get a container reference.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can then use the container's <ph id="ph1">`ListBlobs`</ph> method to retrieve the blobs and/or directories within it.</source>
          <target state="new">You can then use the container's <ph id="ph1">`ListBlobs`</ph> method to retrieve the blobs and/or directories within it.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To access the rich set of properties and methods for a  returned <ph id="ph1">`IListBlobItem`</ph>, you must cast it to a <ph id="ph2">`CloudBlockBlob`</ph>, <ph id="ph3">`CloudPageBlob`</ph>, or <ph id="ph4">`CloudBlobDirectory`</ph> object.</source>
          <target state="new">To access the rich set of properties and methods for a  returned <ph id="ph1">`IListBlobItem`</ph>, you must cast it to a <ph id="ph2">`CloudBlockBlob`</ph>, <ph id="ph3">`CloudPageBlob`</ph>, or <ph id="ph4">`CloudBlobDirectory`</ph> object.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If the type is unknown, you can use a type check to determine which to cast it to.</source>
          <target state="new">If the type is unknown, you can use a type check to determine which to cast it to.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following code demonstrates how to retrieve and output the URI of each item in the <ph id="ph1">`photos`</ph> container:</source>
          <target state="new">The following code demonstrates how to retrieve and output the URI of each item in the <ph id="ph1">`photos`</ph> container:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>As shown in the previous code sample, the blob service has the concept of directories within containers, as well.</source>
          <target state="new">As shown in the previous code sample, the blob service has the concept of directories within containers, as well.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This is so that you can organize your blobs in a more folder-like structure.</source>
          <target state="new">This is so that you can organize your blobs in a more folder-like structure.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, consider the following set of block blobs in a container named <ph id="ph1">`photos`</ph>:</source>
          <target state="new">For example, consider the following set of block blobs in a container named <ph id="ph1">`photos`</ph>:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When you call <ph id="ph1">`ListBlobs`</ph> on the container (as in the previous sample), the collection returned</source>
          <target state="new">When you call <ph id="ph1">`ListBlobs`</ph> on the container (as in the previous sample), the collection returned</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>contains <ph id="ph1">`CloudBlobDirectory`</ph> and <ph id="ph2">`CloudBlockBlob`</ph> objects representing the directories and blobs contained at the top level.</source>
          <target state="new">contains <ph id="ph1">`CloudBlobDirectory`</ph> and <ph id="ph2">`CloudBlockBlob`</ph> objects representing the directories and blobs contained at the top level.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Here is the resulting output:</source>
          <target state="new">Here is the resulting output:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Optionally, you can set the <ph id="ph1">`UseFlatBlobListing`</ph> parameter of of the <ph id="ph2">`ListBlobs`</ph> method to</source>
          <target state="new">Optionally, you can set the <ph id="ph1">`UseFlatBlobListing`</ph> parameter of of the <ph id="ph2">`ListBlobs`</ph> method to</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph>.</source>
          <target state="new"><ph id="ph1">`true`</ph>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This results in every blob being returned as a <ph id="ph1">`CloudBlockBlob`</ph>, regardless of directory.</source>
          <target state="new">This results in every blob being returned as a <ph id="ph1">`CloudBlockBlob`</ph>, regardless of directory.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Here is the call to <ph id="ph1">`ListBlobs`</ph>:</source>
          <target state="new">Here is the call to <ph id="ph1">`ListBlobs`</ph>:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>and here are the results:</source>
          <target state="new">and here are the results:</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information, see [CloudBlobContainer.ListBlobs][].</source>
          <target state="new">For more information, see [CloudBlobContainer.ListBlobs][].</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Download blobs</source>
          <target state="new">Download blobs</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To download blobs, first retrieve a blob reference and then call the <ph id="ph1">`DownloadToStream`</ph> method.</source>
          <target state="new">To download blobs, first retrieve a blob reference and then call the <ph id="ph1">`DownloadToStream`</ph> method.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following</source>
          <target state="new">The following</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>example uses the <ph id="ph1">`DownloadToStream`</ph> method to transfer the blob</source>
          <target state="new">example uses the <ph id="ph1">`DownloadToStream`</ph> method to transfer the blob</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>contents to a stream object that you can then persist to a local file.</source>
          <target state="new">contents to a stream object that you can then persist to a local file.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">`DownloadToStream`</ph> method to download the contents of a blob as a text string.</source>
          <target state="new">You can also use the <ph id="ph1">`DownloadToStream`</ph> method to download the contents of a blob as a text string.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Delete blobs</source>
          <target state="new">Delete blobs</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To delete a blob, first get a blob reference and then call the</source>
          <target state="new">To delete a blob, first get a blob reference and then call the</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Delete`</ph> method.</source>
          <target state="new"><ph id="ph1">`Delete`</ph> method.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>List blobs in pages asynchronously</source>
          <target state="new">List blobs in pages asynchronously</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If you are listing a large number of blobs, or you want to control the number of results you return in one listing operation, you can list blobs in pages of results.</source>
          <target state="new">If you are listing a large number of blobs, or you want to control the number of results you return in one listing operation, you can list blobs in pages of results.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This example shows how to return results in pages asynchronously, so that execution is not blocked while waiting to return a large set of results.</source>
          <target state="new">This example shows how to return results in pages asynchronously, so that execution is not blocked while waiting to return a large set of results.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This example shows a flat blob listing, but you can also perform a hierarchical listing, by setting the <ph id="ph1">`useFlatBlobListing`</ph> parameter of the <ph id="ph2">`ListBlobsSegmentedAsync`</ph> method to <ph id="ph3">`false`</ph>.</source>
          <target state="new">This example shows a flat blob listing, but you can also perform a hierarchical listing, by setting the <ph id="ph1">`useFlatBlobListing`</ph> parameter of the <ph id="ph2">`ListBlobsSegmentedAsync`</ph> method to <ph id="ph3">`false`</ph>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Because the sample method calls an asynchronous method, it must be prefaced with the <ph id="ph1">`async`</ph> keyword, and it must return a <ph id="ph2">`Task`</ph> object.</source>
          <target state="new">Because the sample method calls an asynchronous method, it must be prefaced with the <ph id="ph1">`async`</ph> keyword, and it must return a <ph id="ph2">`Task`</ph> object.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The await keyword specified for the <ph id="ph1">`ListBlobsSegmentedAsync`</ph> method suspends execution of the sample method until the listing task completes.</source>
          <target state="new">The await keyword specified for the <ph id="ph1">`ListBlobsSegmentedAsync`</ph> method suspends execution of the sample method until the listing task completes.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8706b426e59a2eebc0fe802bbaf6c4e58e2c95c7</xliffext:olfilehash>
  </header>
</xliff>