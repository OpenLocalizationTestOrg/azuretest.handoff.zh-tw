<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Deploy an API app in Azure App Service</source>
          <target state="new">Deploy an API app in Azure App Service</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to deploy an API app project to your Azure subscription.</source>
          <target state="new">Learn how to deploy an API app project to your Azure subscription.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Deploy an API app in Azure App Service</source>
          <target state="new">Deploy an API app in Azure App Service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this tutorial, you'll deploy the Web API project that you created in the <bpt id="p1">[</bpt>previous tutorial<ept id="p1">](app-service-dotnet-create-api-app.md)</ept> to a new <bpt id="p2">[</bpt>API app<ept id="p2">](app-service-api-apps-why-best-platform.md)</ept>.</source>
          <target state="new">In this tutorial, you'll deploy the Web API project that you created in the <bpt id="p1">[</bpt>previous tutorial<ept id="p1">](app-service-dotnet-create-api-app.md)</ept> to a new <bpt id="p2">[</bpt>API app<ept id="p2">](app-service-api-apps-why-best-platform.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You'll use Visual Studio to create the API app resource in <bpt id="p1">[</bpt>Azure App Service<ept id="p1">](../app-service/app-service-value-prop-what-is.md)</ept> and to deploy your Web API code to the Azure API app.</source>
          <target state="new">You'll use Visual Studio to create the API app resource in <bpt id="p1">[</bpt>Azure App Service<ept id="p1">](../app-service/app-service-value-prop-what-is.md)</ept> and to deploy your Web API code to the Azure API app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Other deployment options</source>
          <target state="new">Other deployment options</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>There are many other ways to deploy API apps.</source>
          <target state="new">There are many other ways to deploy API apps.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An API app is a <bpt id="p1">[</bpt>web app<ept id="p1">](../app-service-web/app-service-web-overview.md)</ept> with extra features for hosting web services, and all of the <bpt id="p2">[</bpt>the deployment methods that are available for web apps<ept id="p2">](../app-service-web/web-sites-deploy.md)</ept> can also be used with API apps.</source>
          <target state="new">An API app is a <bpt id="p1">[</bpt>web app<ept id="p1">](../app-service-web/app-service-web-overview.md)</ept> with extra features for hosting web services, and all of the <bpt id="p2">[</bpt>the deployment methods that are available for web apps<ept id="p2">](../app-service-web/web-sites-deploy.md)</ept> can also be used with API apps.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The web app that hosts an API app is called the API app host in the Azure preview portal, and you can configure deployment by using the API app host portal blade.</source>
          <target state="new">The web app that hosts an API app is called the API app host in the Azure preview portal, and you can configure deployment by using the API app host portal blade.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For information about the API app host blade, see <bpt id="p1">[</bpt>Manage an API app<ept id="p1">](app-service-api-manage-in-portal.md)</ept>.</source>
          <target state="new">For information about the API app host blade, see <bpt id="p1">[</bpt>Manage an API app<ept id="p1">](app-service-api-manage-in-portal.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The fact that API apps are based on web apps also means that you can deploy code written for platforms other than ASP.NET to API apps.</source>
          <target state="new">The fact that API apps are based on web apps also means that you can deploy code written for platforms other than ASP.NET to API apps.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For an example that uses Git to deploy Node.js code to an API app, see <bpt id="p1">[</bpt>Create a Node.js API app in Azure App Service<ept id="p1">](app-service-api-nodejs-api-app.md)</ept>.</source>
          <target state="new">For an example that uses Git to deploy Node.js code to an API app, see <bpt id="p1">[</bpt>Create a Node.js API app in Azure App Service<ept id="p1">](app-service-api-nodejs-api-app.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="provision"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create the API app in Azure</source>
          <target state="new"><ph id="ph1">&lt;a id="provision"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create the API app in Azure</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In this section, you use the Visual Studio <bpt id="p1">**</bpt>Publish Web<ept id="p1">**</ept> wizard to create an API app in Azure.</source>
          <target state="new">In this section, you use the Visual Studio <bpt id="p1">**</bpt>Publish Web<ept id="p1">**</ept> wizard to create an API app in Azure.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Where the instructions direct you to enter a name for the API app, enter <bpt id="p1">*</bpt>ContactsList<ept id="p1">*</ept>.</source>
          <target state="new">Where the instructions direct you to enter a name for the API app, enter <bpt id="p1">*</bpt>ContactsList<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="deploy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Deploy your code to the new Azure API app</source>
          <target state="new"><ph id="ph1">&lt;a id="deploy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Deploy your code to the new Azure API app</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You use the same <bpt id="p1">**</bpt>Publish Web<ept id="p1">**</ept> wizard to deploy your code to the new API app.</source>
          <target state="new">You use the same <bpt id="p1">**</bpt>Publish Web<ept id="p1">**</ept> wizard to deploy your code to the new API app.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Call the Azure API app</source>
          <target state="new">Call the Azure API app</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Since you enabled the Swagger UI in the previous tutorial, you can use that to verify that the API app is running in Azure.</source>
          <target state="new">Since you enabled the Swagger UI in the previous tutorial, you can use that to verify that the API app is running in Azure.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](https://portal.azure.com)</ept>, go to the <bpt id="p2">**</bpt>API app<ept id="p2">**</ept> blade for the API app that you deployed.</source>
          <target state="new">In the <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](https://portal.azure.com)</ept>, go to the <bpt id="p2">**</bpt>API app<ept id="p2">**</ept> blade for the API app that you deployed.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Click the API app's URL.</source>
          <target state="new">Click the API app's URL.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Click the URL</source>
          <target state="new">Click the URL</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An "API app successfully created" page appears.</source>
          <target state="new">An "API app successfully created" page appears.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add "/swagger" to the end of the URL in the browser address bar.</source>
          <target state="new">Add "/swagger" to the end of the URL in the browser address bar.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the Swagger page that appears, click <bpt id="p1">**</bpt>Contacts &gt; Get &gt; Try it Out<ept id="p1">**</ept>.</source>
          <target state="new">In the Swagger page that appears, click <bpt id="p1">**</bpt>Contacts &gt; Get &gt; Try it Out<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Try it out</source>
          <target state="new">Try it out</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>View the API definition in the portal</source>
          <target state="new">View the API definition in the portal</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](https://portal.azure.com)</ept>, go back to the <bpt id="p2">**</bpt>API app<ept id="p2">**</ept> blade for the API app that you deployed.</source>
          <target state="new">In the <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](https://portal.azure.com)</ept>, go back to the <bpt id="p2">**</bpt>API app<ept id="p2">**</ept> blade for the API app that you deployed.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>API Definition<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>API Definition<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The app's <bpt id="p1">**</bpt>API Definition<ept id="p1">**</ept> blade shows the list of API operations that you defined when you created the app.</source>
          <target state="new">The app's <bpt id="p1">**</bpt>API Definition<ept id="p1">**</ept> blade shows the list of API operations that you defined when you created the app.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>API Definition</source>
          <target state="new">API Definition</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Next, you'll make a change to the API definition and see the change reflected in the portal.</source>
          <target state="new">Next, you'll make a change to the API definition and see the change reflected in the portal.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Go back to the project in Visual Studio and add the following code to the <bpt id="p1">**</bpt>ContactsController.cs<ept id="p1">**</ept> file.</source>
          <target state="new">Go back to the project in Visual Studio and add the following code to the <bpt id="p1">**</bpt>ContactsController.cs<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This code adds a <bpt id="p1">**</bpt>Post<ept id="p1">**</ept> method that can be used to post new <ph id="ph1">`Contact`</ph> instances to the API.</source>
          <target state="new">This code adds a <bpt id="p1">**</bpt>Post<ept id="p1">**</ept> method that can be used to post new <ph id="ph1">`Contact`</ph> instances to the API.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The code for the Contacts class now looks like the following example.</source>
          <target state="new">The code for the Contacts class now looks like the following example.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the project and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the project and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Preview<ept id="p1">**</ept> tab</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Preview<ept id="p1">**</ept> tab</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Start Preview<ept id="p1">**</ept> to see which file(s) will be copied to Azure.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Start Preview<ept id="p1">**</ept> to see which file(s) will be copied to Azure.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Publish Web dialog</source>
          <target state="new">Publish Web dialog</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Restart the gateway as you did the first time you published.</source>
          <target state="new">Restart the gateway as you did the first time you published.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Once the publish process has completed, go back to the portal, and close and reopen the <bpt id="p1">**</bpt>API Definition<ept id="p1">**</ept> blade.</source>
          <target state="new">Once the publish process has completed, go back to the portal, and close and reopen the <bpt id="p1">**</bpt>API Definition<ept id="p1">**</ept> blade.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You will see the new API endpoint you just created and deployed directly into your Azure subscription.</source>
          <target state="new">You will see the new API endpoint you just created and deployed directly into your Azure subscription.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>API Definition</source>
          <target state="new">API Definition</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You've seen how the direct deployment capabilities in Visual Studio make it easy to iterate and deploy rapidly and test that your API works correctly.</source>
          <target state="new">You've seen how the direct deployment capabilities in Visual Studio make it easy to iterate and deploy rapidly and test that your API works correctly.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>next tutorial<ept id="p1">](../app-service-dotnet-remotely-debug-api-app.md)</ept>, you'll see how to debug your API app while it runs in Azure.</source>
          <target state="new">In the <bpt id="p1">[</bpt>next tutorial<ept id="p1">](../app-service-dotnet-remotely-debug-api-app.md)</ept>, you'll see how to debug your API app while it runs in Azure.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf2c03f66605b51086de8d2926c1e5a019ac35f8</xliffext:olfilehash>
  </header>
</xliff>