<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defining dependencies in Azure Resource Manager templates</source>
          <target state="new">Defining dependencies in Azure Resource Manager templates</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Describes how to set one resource as dependent on another resource during deployment.</source>
          <target state="new">Describes how to set one resource as dependent on another resource during deployment.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Defining dependencies in Azure Resource Manager templates</source>
          <target state="new">Defining dependencies in Azure Resource Manager templates</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For a given resource, there can be multiple upstream and child dependencies that are critical to the success of your topology.</source>
          <target state="new">For a given resource, there can be multiple upstream and child dependencies that are critical to the success of your topology.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can define dependencies on other resources using <bpt id="p1">**</bpt>dependsOn<ept id="p1">**</ept> and</source>
          <target state="new">You can define dependencies on other resources using <bpt id="p1">**</bpt>dependsOn<ept id="p1">**</ept> and</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>resources<ept id="p1">**</ept> property of a resource.</source>
          <target state="new"><bpt id="p1">**</bpt>resources<ept id="p1">**</ept> property of a resource.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A dependency can also be specified using the <bpt id="p1">**</bpt>reference<ept id="p1">**</ept> function.</source>
          <target state="new">A dependency can also be specified using the <bpt id="p1">**</bpt>reference<ept id="p1">**</ept> function.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>There are also resource links which can define relationships between resources, and support defining these relationships across resource groups.</source>
          <target state="new">There are also resource links which can define relationships between resources, and support defining these relationships across resource groups.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>dependsOn</source>
          <target state="new">dependsOn</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For a given virtual machine, you may be dependent on having a database resource successfully provisioned.</source>
          <target state="new">For a given virtual machine, you may be dependent on having a database resource successfully provisioned.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In another case, you may be dependent for multiple nodes in your cluster to be installed</source>
          <target state="new">In another case, you may be dependent for multiple nodes in your cluster to be installed</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>before deploying a virtual machine with the cluster management tool.</source>
          <target state="new">before deploying a virtual machine with the cluster management tool.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Within your template, the dependsOn property provides the ability to define this dependency for a resource.</source>
          <target state="new">Within your template, the dependsOn property provides the ability to define this dependency for a resource.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It's value can be a comma separated list of resource names.</source>
          <target state="new">It's value can be a comma separated list of resource names.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The dependencies between</source>
          <target state="new">The dependencies between</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>resources are evaluated and resources are deployed in their dependent order.</source>
          <target state="new">resources are evaluated and resources are deployed in their dependent order.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When resources are not dependent on each other, they are attempted to be deployed in parallel.</source>
          <target state="new">When resources are not dependent on each other, they are attempted to be deployed in parallel.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>While you may be inclined to use dependsOn to map dependencies between your resources, it's important to understand why you're doing it because it can impact the performance of your deployment.</source>
          <target state="new">While you may be inclined to use dependsOn to map dependencies between your resources, it's important to understand why you're doing it because it can impact the performance of your deployment.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, if you're doing this because you want to document how resources are interconnected, dependsOn is not the right approach.</source>
          <target state="new">For example, if you're doing this because you want to document how resources are interconnected, dependsOn is not the right approach.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The lifecycle of dependsOn is just for deployment and is</source>
          <target state="new">The lifecycle of dependsOn is just for deployment and is</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>not available post-deployment.</source>
          <target state="new">not available post-deployment.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Once deployed there is no way to query these dependencies.</source>
          <target state="new">Once deployed there is no way to query these dependencies.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>By using dependsOn you run the risk of impacting performance where you may inadvertently distract the</source>
          <target state="new">By using dependsOn you run the risk of impacting performance where you may inadvertently distract the</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>deployment engine from using parallelism where it might have otherwise.</source>
          <target state="new">deployment engine from using parallelism where it might have otherwise.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To document and provide query capabililty over the relationships between resources, you should instead use <bpt id="p1">[</bpt>resource linking<ept id="p1">](resource-group-link-resources.md)</ept>.</source>
          <target state="new">To document and provide query capabililty over the relationships between resources, you should instead use <bpt id="p1">[</bpt>resource linking<ept id="p1">](resource-group-link-resources.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This element is not needed if the reference function is used to get a representation of a resource because a reference object implies a dependency on the resource.</source>
          <target state="new">This element is not needed if the reference function is used to get a representation of a resource because a reference object implies a dependency on the resource.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In fact, if there is an</source>
          <target state="new">In fact, if there is an</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>option to use a reference vs. dependsOn, the guidance is to use the reference function and have implicit references.</source>
          <target state="new">option to use a reference vs. dependsOn, the guidance is to use the reference function and have implicit references.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The rationale here again is performance.</source>
          <target state="new">The rationale here again is performance.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>References define implicit dependencies</source>
          <target state="new">References define implicit dependencies</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>that are known to be required as they're referenced within the template.</source>
          <target state="new">that are known to be required as they're referenced within the template.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By their presence, they are relevant, avoiding again optimizing for performance and to avoid the potential risk of</source>
          <target state="new">By their presence, they are relevant, avoiding again optimizing for performance and to avoid the potential risk of</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>distracting the deployment engine from avoiding parallelism unnecessarily.</source>
          <target state="new">distracting the deployment engine from avoiding parallelism unnecessarily.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>resources</source>
          <target state="new">resources</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The resources property allows you to specify child resources that are related to the resource being defined.</source>
          <target state="new">The resources property allows you to specify child resources that are related to the resource being defined.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Child resources can only be defined 5 levels deep.</source>
          <target state="new">Child resources can only be defined 5 levels deep.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It is important to note that an implicit dependency is not created between a child resource and the parent resource.</source>
          <target state="new">It is important to note that an implicit dependency is not created between a child resource and the parent resource.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you need the child resource to be deployed after the parent resource, you must explicitly state that dependency with the dependsOn property.</source>
          <target state="new">If you need the child resource to be deployed after the parent resource, you must explicitly state that dependency with the dependsOn property.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>reference function</source>
          <target state="new">reference function</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The reference function enables an expression to derive its value from other JSON name and value pairs or runtime resources.</source>
          <target state="new">The reference function enables an expression to derive its value from other JSON name and value pairs or runtime resources.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Reference expressions implicitly declare that one resource depends on another.</source>
          <target state="new">Reference expressions implicitly declare that one resource depends on another.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The property represented by <bpt id="p1">**</bpt>propertyPath<ept id="p1">**</ept> below is optional, if it is not specified, the reference is to the resource.</source>
          <target state="new">The property represented by <bpt id="p1">**</bpt>propertyPath<ept id="p1">**</ept> below is optional, if it is not specified, the reference is to the resource.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can use either this element or the dependsOn element to specify dependencies, but you do not need to use both for the same dependent resource.</source>
          <target state="new">You can use either this element or the dependsOn element to specify dependencies, but you do not need to use both for the same dependent resource.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The guidance is to use the implicit reference to avoid the</source>
          <target state="new">The guidance is to use the implicit reference to avoid the</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>risk of inadvertently having an unnecessary dependsOn element stop the deployment engine from doing aspects of the deployment in parallel.</source>
          <target state="new">risk of inadvertently having an unnecessary dependsOn element stop the deployment engine from doing aspects of the deployment in parallel.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To learn more, see <bpt id="p1">[</bpt>reference function<ept id="p1">](../resource-group-template-functions/#reference)</ept>.</source>
          <target state="new">To learn more, see <bpt id="p1">[</bpt>reference function<ept id="p1">](../resource-group-template-functions/#reference)</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To learn about creating Azure Resource Manager templates, see <bpt id="p1">[</bpt>Authoring templates<ept id="p1">](resource-group-authoring-templates.md)</ept>.</source>
          <target state="new">To learn about creating Azure Resource Manager templates, see <bpt id="p1">[</bpt>Authoring templates<ept id="p1">](resource-group-authoring-templates.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For a list of the available functions in a template, see <bpt id="p1">[</bpt>Template functions<ept id="p1">](resource-group-template-functions.md)</ept>.</source>
          <target state="new">For a list of the available functions in a template, see <bpt id="p1">[</bpt>Template functions<ept id="p1">](resource-group-template-functions.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3697ba9985edbc3dd83dd82ea4395ea0ee9b7b91</xliffext:olfilehash>
  </header>
</xliff>