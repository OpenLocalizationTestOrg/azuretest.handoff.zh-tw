<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manipulate encoding tasks by customizing task presets</source>
          <target state="new">Manipulate encoding tasks by customizing task presets</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The Azure Media Services Encoder allows you to pass custom preset files to Azure Media Encoder.</source>
          <target state="new">The Azure Media Services Encoder allows you to pass custom preset files to Azure Media Encoder.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows how to customize preset files in order to achieve the following tasks: overlay an image onto an existing video, control the output file names that the encoder produces, stitch videos.</source>
          <target state="new">This topic shows how to customize preset files in order to achieve the following tasks: overlay an image onto an existing video, control the output file names that the encoder produces, stitch videos.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Manipulate encoding tasks by customizing task presets</source>
          <target state="new">Manipulate encoding tasks by customizing task presets</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Azure Media Services Encoder allows you to pass custom preset files to Azure Media Encoder.</source>
          <target state="new">The Azure Media Services Encoder allows you to pass custom preset files to Azure Media Encoder.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic shows how to customize preset files in order to achieve the following tasks:</source>
          <target state="new">This topic shows how to customize preset files in order to achieve the following tasks:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>overlay an image onto an existing video,</source>
          <target state="new">overlay an image onto an existing video,</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>control the output file names that the encoder produces,</source>
          <target state="new">control the output file names that the encoder produces,</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>stitch videos,</source>
          <target state="new">stitch videos,</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>encode presentations with mostly speech.</source>
          <target state="new">encode presentations with mostly speech.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Controlling Azure Media Encoder Output File Names</source>
          <target state="new">Controlling Azure Media Encoder Output File Names</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, the Azure Media Encoder creates output filenames by combining various attributes of the input asset and the encoding process.</source>
          <target state="new">By default, the Azure Media Encoder creates output filenames by combining various attributes of the input asset and the encoding process.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Each attribute is identified using a macro as discussed below.</source>
          <target state="new">Each attribute is identified using a macro as discussed below.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following is a complete list of the macros available for output file naming:</source>
          <target state="new">The following is a complete list of the macros available for output file naming:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Audio Bitrate - the bitrate used when encoding the audio, specified in kbps</source>
          <target state="new">Audio Bitrate - the bitrate used when encoding the audio, specified in kbps</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Audio Codec the codec used for encoding audio, valid values are: AAC, WMA, and DDP</source>
          <target state="new">Audio Codec the codec used for encoding audio, valid values are: AAC, WMA, and DDP</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Channel Count the number of audio channels encoded, valid values are: 1, 2, or 6</source>
          <target state="new">Channel Count the number of audio channels encoded, valid values are: 1, 2, or 6</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Default extension – the default file extension</source>
          <target state="new">Default extension – the default file extension</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Language the BCP-47 language code representing the language used in the audio.</source>
          <target state="new">Language the BCP-47 language code representing the language used in the audio.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This currently defaults to “und”.</source>
          <target state="new">This currently defaults to “und”.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Original File Name the name of the file uploaded into Azure Storage</source>
          <target state="new">Original File Name the name of the file uploaded into Azure Storage</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>StreamId – the stream ID as defined by the streamID attribute of the</source>
          <target state="new">StreamId – the stream ID as defined by the streamID attribute of the</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>element in the preset file</source>
          <target state="new">element in the preset file</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Video Codec the codec used for encoding, valid values are: H264 and VC1</source>
          <target state="new">Video Codec the codec used for encoding, valid values are: H264 and VC1</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Video Bitrate the bitrate used when encoding the video, specified in kbps</source>
          <target state="new">Video Bitrate the bitrate used when encoding the video, specified in kbps</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>These macros can be combine in any permutation to control the name of the files generated by the Media Services Encoder.</source>
          <target state="new">These macros can be combine in any permutation to control the name of the files generated by the Media Services Encoder.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, the default naming convention is:</source>
          <target state="new">For example, the default naming convention is:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The file naming convention is specified using the DefaultMediaOutputFileName attribute of the <bpt id="p1">[</bpt>Preset<ept id="p1">](https://msdn.microsoft.com/library/azure/dn554334.aspx)</ept> element.</source>
          <target state="new">The file naming convention is specified using the DefaultMediaOutputFileName attribute of the <bpt id="p1">[</bpt>Preset<ept id="p1">](https://msdn.microsoft.com/library/azure/dn554334.aspx)</ept> element.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The encoder will insert underscores between each macro, for example, configuration above would result in a file name like: MyVideo_H264_4500kpbs_AAC_und_ch2_128kbps.mp4.</source>
          <target state="new">The encoder will insert underscores between each macro, for example, configuration above would result in a file name like: MyVideo_H264_4500kpbs_AAC_und_ch2_128kbps.mp4.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creating Overlays</source>
          <target state="new">Creating Overlays</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The Azure Media Services Encoder allows you to overlay an image (jpg, bmp, gif, tif), a video, or an audio track (*.wma, *.mp3, *.wav) onto an existing video.</source>
          <target state="new">The Azure Media Services Encoder allows you to overlay an image (jpg, bmp, gif, tif), a video, or an audio track (*.wma, *.mp3, *.wav) onto an existing video.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This functionality is similar to that of Expression Encoder 4 (Service Pack 2).</source>
          <target state="new">This functionality is similar to that of Expression Encoder 4 (Service Pack 2).</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Overlays with the Media Services Encoder</source>
          <target state="new">Overlays with the Media Services Encoder</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can specify when the overlay will be presented, the duration the overlay will presented, and for image/video overlays where on the screen the overlay will appear.</source>
          <target state="new">You can specify when the overlay will be presented, the duration the overlay will presented, and for image/video overlays where on the screen the overlay will appear.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can also have the overlays fade in and/or fade out.</source>
          <target state="new">You can also have the overlays fade in and/or fade out.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The audio/video files to overlay can be contained in multiple assets or a single asset.</source>
          <target state="new">The audio/video files to overlay can be contained in multiple assets or a single asset.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Overlays are controlled by the preset XML that is passed to the encoder.</source>
          <target state="new">Overlays are controlled by the preset XML that is passed to the encoder.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For a complete description of the preset schema, see Azure Media Encoder Schemas.</source>
          <target state="new">For a complete description of the preset schema, see Azure Media Encoder Schemas.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Overlays are specified in the</source>
          <target state="new">Overlays are specified in the</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>element as shown in the following preset snippet:</source>
          <target state="new">element as shown in the following preset snippet:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Presets for Video or Image Overlays</source>
          <target state="new">Presets for Video or Image Overlays</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Overlays can be from a single or multiple assets.</source>
          <target state="new">Overlays can be from a single or multiple assets.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When creating video overlays using multiple assets, the overlay filename is specified in the OverlayFileName attribute using %n% syntax where n is the zero-based index of the input assets for the encoding task.</source>
          <target state="new">When creating video overlays using multiple assets, the overlay filename is specified in the OverlayFileName attribute using %n% syntax where n is the zero-based index of the input assets for the encoding task.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When creating video overlays with a single asset, the overlay file name is specified directly into the OverlayFileName attribute, as shown in the following preset snippets:</source>
          <target state="new">When creating video overlays with a single asset, the overlay file name is specified directly into the OverlayFileName attribute, as shown in the following preset snippets:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 1:</source>
          <target state="new">Example 1:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example 2:</source>
          <target state="new">Example 2:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The location and size of the video overlay is controlled by the OverlayRect attribute.</source>
          <target state="new">The location and size of the video overlay is controlled by the OverlayRect attribute.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The content that is to be overlaid will be re-sized to fit this rectangle.</source>
          <target state="new">The content that is to be overlaid will be re-sized to fit this rectangle.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Opacity is controlled by the OverlayOpacity attribute.</source>
          <target state="new">Opacity is controlled by the OverlayOpacity attribute.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Valid values are 0.0 – 1.0, where 1.0 is 100% opaque.</source>
          <target state="new">Valid values are 0.0 – 1.0, where 1.0 is 100% opaque.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The overlay will be displayed at the time specified by the OverlayStartTime attribute and will end at the time specified by the OverlayEndTime attribute.</source>
          <target state="new">The overlay will be displayed at the time specified by the OverlayStartTime attribute and will end at the time specified by the OverlayEndTime attribute.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Both OverlayStartTime and OverlayEndTime should fall within the timeline of the source video.</source>
          <target state="new">Both OverlayStartTime and OverlayEndTime should fall within the timeline of the source video.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information about each overlay-specific attribute, please see Azure Media Encoder Schemas.</source>
          <target state="new">For more information about each overlay-specific attribute, please see Azure Media Encoder Schemas.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Presets for Audio Overlays</source>
          <target state="new">Presets for Audio Overlays</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Audio overlays can be any supported audio file format, for example.</source>
          <target state="new">Audio overlays can be any supported audio file format, for example.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For a complete list of supported audio file formats, see Formats Supported by the Media Services Encoder.</source>
          <target state="new">For a complete list of supported audio file formats, see Formats Supported by the Media Services Encoder.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Audio overlays are also specified in the</source>
          <target state="new">Audio overlays are also specified in the</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>element as shown in the following preset snippet:</source>
          <target state="new">element as shown in the following preset snippet:</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For audio overlays stored in multiple assets, the audio overlay filename is specified in the AudioOverlayFileName attribute using %n% syntax, where n is the zero-based index of the collection of input assets to the encoding Task.</source>
          <target state="new">For audio overlays stored in multiple assets, the audio overlay filename is specified in the AudioOverlayFileName attribute using %n% syntax, where n is the zero-based index of the collection of input assets to the encoding Task.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For audio overlays stored in a single asset the overlay filename is specified directly in the AudioOverlayFileName attribute.</source>
          <target state="new">For audio overlays stored in a single asset the overlay filename is specified directly in the AudioOverlayFileName attribute.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The AudioOverlayLayoutMode determines when the audio overlay will be presented.</source>
          <target state="new">The AudioOverlayLayoutMode determines when the audio overlay will be presented.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When set to “WholeSequence” the audio track will be presented during the entire duration of the video.</source>
          <target state="new">When set to “WholeSequence” the audio track will be presented during the entire duration of the video.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When set to “Custom” the AudioOverlayStartTime and AudioOverlayEndTime attributes determine when the audio overlay begins and ends.</source>
          <target state="new">When set to “Custom” the AudioOverlayStartTime and AudioOverlayEndTime attributes determine when the audio overlay begins and ends.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Both OverlayStartTime and OverlayEndTime should fall within the timeline of the source video.</source>
          <target state="new">Both OverlayStartTime and OverlayEndTime should fall within the timeline of the source video.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information on all of the audio overlay attributes, see the Azure Media Encoder Schemas.</source>
          <target state="new">For more information on all of the audio overlay attributes, see the Azure Media Encoder Schemas.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Audio overlays can be combined with video overlays as shown in the following preset snippet:</source>
          <target state="new">Audio overlays can be combined with video overlays as shown in the following preset snippet:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Submitting Tasks with Overlays</source>
          <target state="new">Submitting Tasks with Overlays</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Once you have created a preset file you must do the following:</source>
          <target state="new">Once you have created a preset file you must do the following:</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Upload your asset(s)</source>
          <target state="new">Upload your asset(s)</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Load the preset configuration (Note: the code below assumes the Preset above.</source>
          <target state="new">Load the preset configuration (Note: the code below assumes the Preset above.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Create a job</source>
          <target state="new">Create a job</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Get a reference to the Media Services Encoder</source>
          <target state="new">Get a reference to the Media Services Encoder</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Create a task specifying the collection of input assets, the preset configuration, the media encoder, and the output asset</source>
          <target state="new">Create a task specifying the collection of input assets, the preset configuration, the media encoder, and the output asset</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Submit the job</source>
          <target state="new">Submit the job</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to do these steps:</source>
          <target state="new">The following code snippet shows how to do these steps:</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>This snippet loads each asset sequentially for simplicity.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>This snippet loads each asset sequentially for simplicity.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In production environments assets would be loaded in bulk.</source>
          <target state="new">In production environments assets would be loaded in bulk.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information on uploading multiple assets in bulk see <bpt id="p1">[</bpt>Ingesting Assets in Bulk with the Media Services SDK for .NET<ept id="p1">](media-services-dotnet-upload-files.md#ingest_in_bulk)</ept>.</source>
          <target state="new">For more information on uploading multiple assets in bulk see <bpt id="p1">[</bpt>Ingesting Assets in Bulk with the Media Services SDK for .NET<ept id="p1">](media-services-dotnet-upload-files.md#ingest_in_bulk)</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For complete sample code see <bpt id="p1">[</bpt>Creating Overlays with Media Services Encoder<ept id="p1">](https://code.msdn.microsoft.com/Creating-Audio-and-Video-c2942c47)</ept>.</source>
          <target state="new">For complete sample code see <bpt id="p1">[</bpt>Creating Overlays with Media Services Encoder<ept id="p1">](https://code.msdn.microsoft.com/Creating-Audio-and-Video-c2942c47)</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Error Conditions</source>
          <target state="new">Error Conditions</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When editing the Preset string, you must ensure the following:</source>
          <target state="new">When editing the Preset string, you must ensure the following:</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For video/image overlays, the overlay rectangle must fit entirely within the dimensions of the source video</source>
          <target state="new">For video/image overlays, the overlay rectangle must fit entirely within the dimensions of the source video</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The start and end time of the overlays should be within the timeline of the source video</source>
          <target state="new">The start and end time of the overlays should be within the timeline of the source video</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If the preset XML contains a reference to ?OverlayFileName=”%n%”, then the InputAssets collection for the Tasks should contain at least n+1 Assets</source>
          <target state="new">If the preset XML contains a reference to ?OverlayFileName=”%n%”, then the InputAssets collection for the Tasks should contain at least n+1 Assets</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Stitching Video Segments</source>
          <target state="new">Stitching Video Segments</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The media services encoder provides support for stitching together a set of videos.</source>
          <target state="new">The media services encoder provides support for stitching together a set of videos.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Videos can be stitched together end-to-end or you can specify portions of one or both videos to be stitched together.</source>
          <target state="new">Videos can be stitched together end-to-end or you can specify portions of one or both videos to be stitched together.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The result of the stitching is a single output asset that contains the specified video from the input assets.</source>
          <target state="new">The result of the stitching is a single output asset that contains the specified video from the input assets.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The videos to be stitched can be contained in multiple assets or a single asset.</source>
          <target state="new">The videos to be stitched can be contained in multiple assets or a single asset.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Stitching is controlled by the preset XML passed to the encoder.</source>
          <target state="new">Stitching is controlled by the preset XML passed to the encoder.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For a complete description of the preset schema, see <bpt id="p1">[</bpt>Azure Media Encoder Schema<ept id="p1">](https://msdn.microsoft.com/library/azure/dn584702.aspx)</ept>.</source>
          <target state="new">For a complete description of the preset schema, see <bpt id="p1">[</bpt>Azure Media Encoder Schema<ept id="p1">](https://msdn.microsoft.com/library/azure/dn584702.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Stitching with Media Services Encoder</source>
          <target state="new">Stitching with Media Services Encoder</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Stitching is controlled within the</source>
          <target state="new">Stitching is controlled within the</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>element as shown in the following preset:</source>
          <target state="new">element as shown in the following preset:</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For each video to be stitched, a</source>
          <target state="new">For each video to be stitched, a</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>element is added to the</source>
          <target state="new">element is added to the</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>element.</source>
          <target state="new">element.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Each</source>
          <target state="new">Each</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>element contains a</source>
          <target state="new">element contains a</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>element.</source>
          <target state="new">element.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Each</source>
          <target state="new">Each</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>element contains one or more</source>
          <target state="new">element contains one or more</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>element that specifies how much of the video will be stitched into the output asset, by specifying a start and end time.</source>
          <target state="new">element that specifies how much of the video will be stitched into the output asset, by specifying a start and end time.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="new">The</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>element references the asset on which it acts.</source>
          <target state="new">element references the asset on which it acts.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The format of the reference depends on whether the videos to be stitched are in separate assets or in a single asset.</source>
          <target state="new">The format of the reference depends on whether the videos to be stitched are in separate assets or in a single asset.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>If you want to stitch an entire video, simply omit the</source>
          <target state="new">If you want to stitch an entire video, simply omit the</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>element.</source>
          <target state="new">element.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Stitching Videos from Multiple Assets</source>
          <target state="new">Stitching Videos from Multiple Assets</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When stitching videos from multiple assets, a zero-based index is used for the MediaFile attribute of the</source>
          <target state="new">When stitching videos from multiple assets, a zero-based index is used for the MediaFile attribute of the</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>element to identify which asset the</source>
          <target state="new">element to identify which asset the</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>element corresponds to.</source>
          <target state="new">element corresponds to.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The zero index is not specified, the</source>
          <target state="new">The zero index is not specified, the</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>element that does not specify a MediaFile attribute references the first input asset.</source>
          <target state="new">element that does not specify a MediaFile attribute references the first input asset.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>All other</source>
          <target state="new">All other</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>elements must specify the zero-based index of the input asset to which it refers by using %n% syntax where n is the zero-based index of the input asset.</source>
          <target state="new">elements must specify the zero-based index of the input asset to which it refers by using %n% syntax where n is the zero-based index of the input asset.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In the preceding example the first</source>
          <target state="new">In the preceding example the first</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>element specifies the first input asset, the second</source>
          <target state="new">element specifies the first input asset, the second</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>element specifies the second input asset, and so on.</source>
          <target state="new">element specifies the second input asset, and so on.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>There is no requirement that the input assets be referenced in order, for example:</source>
          <target state="new">There is no requirement that the input assets be referenced in order, for example:</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This example stitches together portions of the second, the first, and the third input assets.</source>
          <target state="new">This example stitches together portions of the second, the first, and the third input assets.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Note that since each video is referenced by a zero-based index it is possible to stitch two videos together that have the same name.</source>
          <target state="new">Note that since each video is referenced by a zero-based index it is possible to stitch two videos together that have the same name.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Once you have created a preset file you must do the following:</source>
          <target state="new">Once you have created a preset file you must do the following:</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Upload your assets</source>
          <target state="new">Upload your assets</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Load the preset configuration</source>
          <target state="new">Load the preset configuration</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Create a job</source>
          <target state="new">Create a job</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Get a reference to the Media Services Encoder</source>
          <target state="new">Get a reference to the Media Services Encoder</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Create a task specifying the input assets, the preset configuration, the media encoder, and the output asset</source>
          <target state="new">Create a task specifying the input assets, the preset configuration, the media encoder, and the output asset</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Submit the job</source>
          <target state="new">Submit the job</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to do these steps:</source>
          <target state="new">The following code snippet shows how to do these steps:</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This snippet loads each asset sequentially for simplicity.</source>
          <target state="new">This snippet loads each asset sequentially for simplicity.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>In production environments assets would be loaded in bulk.</source>
          <target state="new">In production environments assets would be loaded in bulk.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For more information on uploading multiple assets in bulk see <bpt id="p1">[</bpt>Ingesting Assets in Bulk with the Media Services SDK for .NET<ept id="p1">](media-services-dotnet-upload-files.md#ingest_in_bulk)</ept>.</source>
          <target state="new">For more information on uploading multiple assets in bulk see <bpt id="p1">[</bpt>Ingesting Assets in Bulk with the Media Services SDK for .NET<ept id="p1">](media-services-dotnet-upload-files.md#ingest_in_bulk)</ept>.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For complete sample code see <bpt id="p1">[</bpt>Stitching with Media Services Encoder<ept id="p1">](https://code.msdn.microsoft.com/Stitching-with-Media-8fd5f203)</ept>.</source>
          <target state="new">For complete sample code see <bpt id="p1">[</bpt>Stitching with Media Services Encoder<ept id="p1">](https://code.msdn.microsoft.com/Stitching-with-Media-8fd5f203)</ept>.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Stitching Videos from a Single Asset</source>
          <target state="new">Stitching Videos from a Single Asset</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>When stitching videos within a single asset, each video must have a unique name.</source>
          <target state="new">When stitching videos within a single asset, each video must have a unique name.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The videos are specified using the MediaFile attribute using the filename as the attribute’s value.</source>
          <target state="new">The videos are specified using the MediaFile attribute using the filename as the attribute’s value.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This preset stitches parts of video1.mp4, video2.wmv, and video3.wmv into the output asset.</source>
          <target state="new">This preset stitches parts of video1.mp4, video2.wmv, and video3.wmv into the output asset.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The creation of the job and tasks is the same as stitching videos from multiple assets, you only need to upload a single asset as shown in the following code:</source>
          <target state="new">The creation of the job and tasks is the same as stitching videos from multiple assets, you only need to upload a single asset as shown in the following code:</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Encoding Presentations or Audio Streams With Mostly Speech</source>
          <target state="new">Encoding Presentations or Audio Streams With Mostly Speech</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>When encoding video whose audio track contains mostly speech, the default encoder presets may cause background noise to be amplified in the encoded asset.</source>
          <target state="new">When encoding video whose audio track contains mostly speech, the default encoder presets may cause background noise to be amplified in the encoded asset.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This behavior is caused by the NormalizeAudio attribute being set to true.</source>
          <target state="new">This behavior is caused by the NormalizeAudio attribute being set to true.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Encoding Presentations with Mostly Speech</source>
          <target state="new">Encoding Presentations with Mostly Speech</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>To prevent the amplification of background noise, do the following:</source>
          <target state="new">To prevent the amplification of background noise, do the following:</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Copy the contents of the encoder preset you are using into an XML file.</source>
          <target state="new">Copy the contents of the encoder preset you are using into an XML file.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The encoder presets can be found at: Azure Media Encoder Schemas</source>
          <target state="new">The encoder presets can be found at: Azure Media Encoder Schemas</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Delete the NormalizeAudio attribute, it can be found near the top of the preset file under the</source>
          <target state="new">Delete the NormalizeAudio attribute, it can be found near the top of the preset file under the</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>element:</source>
          <target state="new">element:</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Save the modified preset file to your local hard drive, and use code such as the following to encode with the custom preset:</source>
          <target state="new">Save the modified preset file to your local hard drive, and use code such as the following to encode with the custom preset:</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="new">See Also</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure Media Encoder XML Schema<ept id="p1">](https://msdn.microsoft.com/library/azure/dn584702.aspx)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Azure Media Encoder XML Schema<ept id="p1">](https://msdn.microsoft.com/library/azure/dn584702.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06cb88275839d1f556b05000c95db69350969da0</xliffext:olfilehash>
  </header>
</xliff>