<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reliable Actors Reentrancy</source>
          <target state="new">Reliable Actors Reentrancy</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Introduction to Reentrancy for Service Fabric Reliable Actors</source>
          <target state="new">Introduction to Reentrancy for Service Fabric Reliable Actors</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Reliable Actor Reentrancy</source>
          <target state="new">Reliable Actor Reentrancy</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Fabric Actors, by default, allow logical call context-based reentrancy.</source>
          <target state="new">Fabric Actors, by default, allow logical call context-based reentrancy.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This allows for actors to be reentrant if they are in the same call context chain.</source>
          <target state="new">This allows for actors to be reentrant if they are in the same call context chain.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example if Actor A sends message to Actor B who sends message to Actor C. As part of the message processing if Actor C calls Actor A, the message is reentrant so will be allowed.</source>
          <target state="new">For example if Actor A sends message to Actor B who sends message to Actor C. As part of the message processing if Actor C calls Actor A, the message is reentrant so will be allowed.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Any other messages that are part of different call context will be blocked on Actor A until it completes processing.</source>
          <target state="new">Any other messages that are part of different call context will be blocked on Actor A until it completes processing.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Actors that want to disallow logical call context-based reentrancy can disable it by decorating the actor class with <ph id="ph1">`ReentrantAttribute(ReentrancyMode.Disallowed)`</ph>.</source>
          <target state="new">Actors that want to disallow logical call context-based reentrancy can disable it by decorating the actor class with <ph id="ph1">`ReentrantAttribute(ReentrancyMode.Disallowed)`</ph>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following code shows actor class that sets the reentrancy mode to <ph id="ph1">`ReentrancyMode.Disallowed`</ph>.</source>
          <target state="new">The following code shows actor class that sets the reentrancy mode to <ph id="ph1">`ReentrancyMode.Disallowed`</ph>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In this case if an actor sends a reentrant message to another actor an exception of type <ph id="ph1">`FabricException`</ph> will be thrown.</source>
          <target state="new">In this case if an actor sends a reentrant message to another actor an exception of type <ph id="ph1">`FabricException`</ph> will be thrown.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0509b364958ce68d21e732c88c5f345d62dc970a</xliffext:olfilehash>
  </header>
</xliff>