<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Node.js application using Socket.io | Microsoft Azure</source>
          <target state="new">Node.js application using Socket.io | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use socket.io in a node.js application hosted on Azure.</source>
          <target state="new">Learn how to use socket.io in a node.js application hosted on Azure.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Build a Node.js Chat Application with Socket.IO on an Azure Cloud Service</source>
          <target state="new">Build a Node.js Chat Application with Socket.IO on an Azure Cloud Service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Socket.IO provides realtime communication between between your node.js</source>
          <target state="new">Socket.IO provides realtime communication between between your node.js</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>server and clients.</source>
          <target state="new">server and clients.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This tutorial will walk you through hosting a</source>
          <target state="new">This tutorial will walk you through hosting a</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>socket.IO based chat application on Azure.</source>
          <target state="new">socket.IO based chat application on Azure.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information</source>
          <target state="new">For more information</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>on Socket.IO, see <ph id="ph1">&lt;a href="http://socket.io/"&gt;</ph>http://socket.io/<ph id="ph2">&lt;/a&gt;</ph>.</source>
          <target state="new">on Socket.IO, see <ph id="ph1">&lt;a href="http://socket.io/"&gt;</ph>http://socket.io/<ph id="ph2">&lt;/a&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A screenshot of the completed application is below:</source>
          <target state="new">A screenshot of the completed application is below:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A browser window displaying the service hosted on Azure</source>
          <target state="new">A browser window displaying the service hosted on Azure</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Ensure that the following products and versions are installed to successfully complete the example in this article:</source>
          <target state="new">Ensure that the following products and versions are installed to successfully complete the example in this article:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Install <bpt id="p1">[</bpt>Visual Studio 2013<ept id="p1">](https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx)</ept></source>
          <target state="new">Install <bpt id="p1">[</bpt>Visual Studio 2013<ept id="p1">](https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Install <bpt id="p1">[</bpt>Node.js<ept id="p1">](https://nodejs.org/download/)</ept></source>
          <target state="new">Install <bpt id="p1">[</bpt>Node.js<ept id="p1">](https://nodejs.org/download/)</ept></target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Install <bpt id="p1">[</bpt>Python version 2.7.10<ept id="p1">](https://www.python.org/)</ept></source>
          <target state="new">Install <bpt id="p1">[</bpt>Python version 2.7.10<ept id="p1">](https://www.python.org/)</ept></target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create a Cloud Service Project</source>
          <target state="new">Create a Cloud Service Project</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following steps create the cloud service project that will host the Socket.IO application.</source>
          <target state="new">The following steps create the cloud service project that will host the Socket.IO application.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Start Menu<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Start Screen<ept id="p2">**</ept>, search for <bpt id="p3">**</bpt>Azure PowerShell<ept id="p3">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>Start Menu<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Start Screen<ept id="p2">**</ept>, search for <bpt id="p3">**</bpt>Azure PowerShell<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Finally, right-click <bpt id="p1">**</bpt>Azure PowerShell<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Run As Administrator<ept id="p2">**</ept>.</source>
          <target state="new">Finally, right-click <bpt id="p1">**</bpt>Azure PowerShell<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Run As Administrator<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Azure PowerShell icon</source>
          <target state="new">Azure PowerShell icon</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create a directory called <bpt id="p1">**</bpt>c:\\node<ept id="p1">**</ept>.</source>
          <target state="new">Create a directory called <bpt id="p1">**</bpt>c:\\node<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Change directories to the <bpt id="p1">**</bpt>c:\\node<ept id="p1">**</ept> directory</source>
          <target state="new">Change directories to the <bpt id="p1">**</bpt>c:\\node<ept id="p1">**</ept> directory</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Enter the following commands to create a new solution named <bpt id="p1">**</bpt>chatapp<ept id="p1">**</ept> and a worker role named <bpt id="p2">**</bpt>WorkerRole1<ept id="p2">**</ept>:</source>
          <target state="new">Enter the following commands to create a new solution named <bpt id="p1">**</bpt>chatapp<ept id="p1">**</ept> and a worker role named <bpt id="p2">**</bpt>WorkerRole1<ept id="p2">**</ept>:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You will see the following response:</source>
          <target state="new">You will see the following response:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The output of the new-azureservice and add-azurenodeworkerrolecmdlets</source>
          <target state="new">The output of the new-azureservice and add-azurenodeworkerrolecmdlets</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Download the Chat Example</source>
          <target state="new">Download the Chat Example</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For this project, we will use the chat example from the <bpt id="p1">[</bpt><ph id="ph1">Socket.IO</ph>
GitHub repository<ept id="p1">]</ept>.</source>
          <target state="new">For this project, we will use the chat example from the <bpt id="p1">[</bpt><ph id="ph1">Socket.IO</ph>
GitHub repository<ept id="p1">]</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Perform the following steps to download the example</source>
          <target state="new">Perform the following steps to download the example</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>and add it to the project you previously created.</source>
          <target state="new">and add it to the project you previously created.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Create a local copy of the repository by using the <bpt id="p1">**</bpt>Clone<ept id="p1">**</ept> button.</source>
          <target state="new">Create a local copy of the repository by using the <bpt id="p1">**</bpt>Clone<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You may also use the <bpt id="p1">**</bpt>ZIP<ept id="p1">**</ept> button to download the project.</source>
          <target state="new">You may also use the <bpt id="p1">**</bpt>ZIP<ept id="p1">**</ept> button to download the project.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A browser window viewing https://github.com/LearnBoost/socket.io/tree/master/examples/chat, with the ZIP download icon highlighted</source>
          <target state="new">A browser window viewing https://github.com/LearnBoost/socket.io/tree/master/examples/chat, with the ZIP download icon highlighted</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Navigate the directory structure of the local repository until you arrive at the <bpt id="p1">**</bpt>examples\\chat<ept id="p1">**</ept></source>
          <target state="new">Navigate the directory structure of the local repository until you arrive at the <bpt id="p1">**</bpt>examples\\chat<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>directory.</source>
          <target state="new">directory.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Copy the contents of this directory to the</source>
          <target state="new">Copy the contents of this directory to the</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p1">**</ept> directory created earlier.</source>
          <target state="new"><bpt id="p1">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p1">**</ept> directory created earlier.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Explorer, displaying the contents of the examples\\chat directory extracted from the archive</source>
          <target state="new">Explorer, displaying the contents of the examples\\chat directory extracted from the archive</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The highlighted items in the screenshot above are the files copied from the <bpt id="p1">**</bpt>examples\\chat<ept id="p1">**</ept> directory</source>
          <target state="new">The highlighted items in the screenshot above are the files copied from the <bpt id="p1">**</bpt>examples\\chat<ept id="p1">**</ept> directory</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p1">**</ept> directory, delete the <bpt id="p2">**</bpt>server.js<ept id="p2">**</ept> file, and then rename the <bpt id="p3">**</bpt>app.js<ept id="p3">**</ept> file to <bpt id="p4">**</bpt>server.js<ept id="p4">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p1">**</ept> directory, delete the <bpt id="p2">**</bpt>server.js<ept id="p2">**</ept> file, and then rename the <bpt id="p3">**</bpt>app.js<ept id="p3">**</ept> file to <bpt id="p4">**</bpt>server.js<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This removes the default <bpt id="p1">**</bpt>server.js<ept id="p1">**</ept> file created previously by the <bpt id="p2">**</bpt>Add-AzureNodeWorkerRole<ept id="p2">**</ept> cmdlet and replaces it with the application file from the chat example.</source>
          <target state="new">This removes the default <bpt id="p1">**</bpt>server.js<ept id="p1">**</ept> file created previously by the <bpt id="p2">**</bpt>Add-AzureNodeWorkerRole<ept id="p2">**</ept> cmdlet and replaces it with the application file from the chat example.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Modify Server.js and Install Modules</source>
          <target state="new">Modify Server.js and Install Modules</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Before testing the application in the Azure emulator, we must</source>
          <target state="new">Before testing the application in the Azure emulator, we must</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>make some minor modifications.</source>
          <target state="new">make some minor modifications.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Perform the following steps to the</source>
          <target state="new">Perform the following steps to the</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>server.js file:</source>
          <target state="new">server.js file:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>server.js<ept id="p1">**</ept> file in Visual Studio or any text editor.</source>
          <target state="new">Open the <bpt id="p1">**</bpt>server.js<ept id="p1">**</ept> file in Visual Studio or any text editor.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Find the <bpt id="p1">**</bpt>Module dependencies<ept id="p1">**</ept> section at the beginning of server.js and change the line containing <bpt id="p2">**</bpt>sio = require('..//..//lib//socket.io')<ept id="p2">**</ept> to <bpt id="p3">**</bpt>sio = require('socket.io')<ept id="p3">**</ept> as shown below:</source>
          <target state="new">Find the <bpt id="p1">**</bpt>Module dependencies<ept id="p1">**</ept> section at the beginning of server.js and change the line containing <bpt id="p2">**</bpt>sio = require('..//..//lib//socket.io')<ept id="p2">**</ept> to <bpt id="p3">**</bpt>sio = require('socket.io')<ept id="p3">**</ept> as shown below:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To ensure the application listens on the correct port, open</source>
          <target state="new">To ensure the application listens on the correct port, open</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>server.js in Notepad or your favorite editor, and then change the</source>
          <target state="new">server.js in Notepad or your favorite editor, and then change the</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>following line by replacing <bpt id="p1">**</bpt>3000<ept id="p1">**</ept> with <bpt id="p2">**</bpt>process.env.port<ept id="p2">**</ept> as shown below:</source>
          <target state="new">following line by replacing <bpt id="p1">**</bpt>3000<ept id="p1">**</ept> with <bpt id="p2">**</bpt>process.env.port<ept id="p2">**</ept> as shown below:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>After saving the changes to <bpt id="p1">**</bpt>server.js<ept id="p1">**</ept>, use the following steps to</source>
          <target state="new">After saving the changes to <bpt id="p1">**</bpt>server.js<ept id="p1">**</ept>, use the following steps to</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>install required modules, and then test the application in the</source>
          <target state="new">install required modules, and then test the application in the</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Azure emulator:</source>
          <target state="new">Azure emulator:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">**</bpt>Azure PowerShell<ept id="p1">**</ept>, change directories to the <bpt id="p2">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p2">**</ept> directory and use the following command to install the modules required by this application:</source>
          <target state="new">Using <bpt id="p1">**</bpt>Azure PowerShell<ept id="p1">**</ept>, change directories to the <bpt id="p2">**</bpt>C:\\node\\chatapp\\WorkerRole1<ept id="p2">**</ept> directory and use the following command to install the modules required by this application:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This will install the modules listed in the package.json file.</source>
          <target state="new">This will install the modules listed in the package.json file.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>After</source>
          <target state="new">After</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>the command completes, you should see output similar to the</source>
          <target state="new">the command completes, you should see output similar to the</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>following:</source>
          <target state="new">following:</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The output of the npm install command</source>
          <target state="new">The output of the npm install command</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Since this example was originally a part of the Socket.IO GitHub</source>
          <target state="new">Since this example was originally a part of the Socket.IO GitHub</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>repository, and directly referenced the Socket.IO library by</source>
          <target state="new">repository, and directly referenced the Socket.IO library by</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>relative path, Socket.IO was not referenced in the package.json</source>
          <target state="new">relative path, Socket.IO was not referenced in the package.json</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>file, so we must install it by issuing the following command:</source>
          <target state="new">file, so we must install it by issuing the following command:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Test and Deploy</source>
          <target state="new">Test and Deploy</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Launch the emulator by issuing the following command:</source>
          <target state="new">Launch the emulator by issuing the following command:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Open a browser and navigate to <bpt id="p1">**</bpt>http://127.0.0.1<ept id="p1">**</ept>.</source>
          <target state="new">Open a browser and navigate to <bpt id="p1">**</bpt>http://127.0.0.1<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When the browser window opens, enter a nickname and then hit enter.</source>
          <target state="new">When the browser window opens, enter a nickname and then hit enter.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This will all you to post messages as a specific nickname.</source>
          <target state="new">This will all you to post messages as a specific nickname.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To test</source>
          <target state="new">To test</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>multi-user functionality, open additional browser windows using the</source>
          <target state="new">multi-user functionality, open additional browser windows using the</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>same URL and enter different nicknames.</source>
          <target state="new">same URL and enter different nicknames.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Two browser windows displaying chat messages from User1 and User2</source>
          <target state="new">Two browser windows displaying chat messages from User1 and User2</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>After testing the application, stop the emulator by issuing the</source>
          <target state="new">After testing the application, stop the emulator by issuing the</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>following command:</source>
          <target state="new">following command:</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To deploy the application to Azure, use the</source>
          <target state="new">To deploy the application to Azure, use the</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Publish-AzureServiceProject<ept id="p1">**</ept> cmdlet.</source>
          <target state="new"><bpt id="p1">**</bpt>Publish-AzureServiceProject<ept id="p1">**</ept> cmdlet.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> Be sure to use a unique name, otherwise the publish process will fail.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> Be sure to use a unique name, otherwise the publish process will fail.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>After the deployment has completed, the browser will open and navigate to the deployed service.</source>
          <target state="new">After the deployment has completed, the browser will open and navigate to the deployed service.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If you receive an error stating that the provided subscription name doesn't exist in the imported publish profile, you must download and import the publishing profile for your subscription before deploying to Azure.</source>
          <target state="new">If you receive an error stating that the provided subscription name doesn't exist in the imported publish profile, you must download and import the publishing profile for your subscription before deploying to Azure.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">**</bpt>Deploying the Application to Azure<ept id="p1">**</ept> section of <bpt id="p2">[</bpt>Build and deploy a Node.js application to an Azure Cloud Service<ept id="p2">](https://www.windowsazure.com/develop/nodejs/tutorials/getting-started/)</ept></source>
          <target state="new">See the <bpt id="p1">**</bpt>Deploying the Application to Azure<ept id="p1">**</ept> section of <bpt id="p2">[</bpt>Build and deploy a Node.js application to an Azure Cloud Service<ept id="p2">](https://www.windowsazure.com/develop/nodejs/tutorials/getting-started/)</ept></target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A browser window displaying the service hosted on Azure</source>
          <target state="new">A browser window displaying the service hosted on Azure</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you receive an error stating that the provided subscription name doesn't exist in the imported publish profile, you must download and import the publishing profile for your subscription before deploying to Azure.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you receive an error stating that the provided subscription name doesn't exist in the imported publish profile, you must download and import the publishing profile for your subscription before deploying to Azure.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">**</bpt>Deploying the Application to Azure<ept id="p1">**</ept> section of <bpt id="p2">[</bpt>Build and deploy a Node.js application to an Azure Cloud Service<ept id="p2">](https://www.windowsazure.com/develop/nodejs/tutorials/getting-started/)</ept></source>
          <target state="new">See the <bpt id="p1">**</bpt>Deploying the Application to Azure<ept id="p1">**</ept> section of <bpt id="p2">[</bpt>Build and deploy a Node.js application to an Azure Cloud Service<ept id="p2">](https://www.windowsazure.com/develop/nodejs/tutorials/getting-started/)</ept></target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Your application is now running on Azure, and can relay chat</source>
          <target state="new">Your application is now running on Azure, and can relay chat</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>messages between different clients using Socket.IO.</source>
          <target state="new">messages between different clients using Socket.IO.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> For simplicity, this sample is limited to chatting between users connected to the same instance.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> For simplicity, this sample is limited to chatting between users connected to the same instance.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This means that if the cloud service creates two worker role instances, users will only be able to chat with others connected to the same worker role instance.</source>
          <target state="new">This means that if the cloud service creates two worker role instances, users will only be able to chat with others connected to the same worker role instance.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To scale the application to work with multiple role instances, you could use a technology like Service Bus to share the Socket.IO store state across instances.</source>
          <target state="new">To scale the application to work with multiple role instances, you could use a technology like Service Bus to share the Socket.IO store state across instances.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For examples, see the Service Bus Queues and Topics usage samples in the <bpt id="p1">[</bpt>Azure SDK for Node.js GitHub repository<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-node)</ept>.</source>
          <target state="new">For examples, see the Service Bus Queues and Topics usage samples in the <bpt id="p1">[</bpt>Azure SDK for Node.js GitHub repository<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-node)</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In this tutorial you learned how to create a basic chat application hosted in an Azure Cloud Service.</source>
          <target state="new">In this tutorial you learned how to create a basic chat application hosted in an Azure Cloud Service.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To learn how to host this application in an Azure Website, see <bpt id="p1">[</bpt>Build a Node.js Chat Application with Socket.IO on an Azure Web Site<ept id="p1">][chatwebsite]</ept>.</source>
          <target state="new">To learn how to host this application in an Azure Website, see <bpt id="p1">[</bpt>Build a Node.js Chat Application with Socket.IO on an Azure Web Site<ept id="p1">][chatwebsite]</ept>.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ea0477237da96f1a54ce6da59ebb149ed9db96e</xliffext:olfilehash>
  </header>
</xliff>