<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Elastic database jobs overview</source>
          <target state="new">Elastic database jobs overview</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Illustrates the elastic database job service</source>
          <target state="new">Illustrates the elastic database job service</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create and manage a SQL Database elastic database jobs using PowerShell (preview)</source>
          <target state="new">Create and manage a SQL Database elastic database jobs using PowerShell (preview)</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Azure portal</source>
          <target state="new">Azure portal</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>PowerShell</source>
          <target state="new">PowerShell</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> feature (preview) enables you to  reliably execute a Transact-SQL (T-SQL) script or apply a DACPAC across a group of databases including a custom-defined collection of databases, all databases in an <bpt id="p2">[</bpt>Elastic Database pool (preview)<ept id="p2">](sql-database-elastic-pool.md)</ept> or a shard set (created using <bpt id="p3">[</bpt>Elastic Database client library<ept id="p3">](sql-database-elastic-database-client-library.md)</ept>).</source>
          <target state="new">The <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> feature (preview) enables you to  reliably execute a Transact-SQL (T-SQL) script or apply a DACPAC across a group of databases including a custom-defined collection of databases, all databases in an <bpt id="p2">[</bpt>Elastic Database pool (preview)<ept id="p2">](sql-database-elastic-pool.md)</ept> or a shard set (created using <bpt id="p3">[</bpt>Elastic Database client library<ept id="p3">](sql-database-elastic-database-client-library.md)</ept>).</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>While in preview, <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> is currently a customer-hosted Azure Cloud Service that enables the execution of ad-hoc and scheduled administrative tasks, which are called jobs.</source>
          <target state="new">While in preview, <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> is currently a customer-hosted Azure Cloud Service that enables the execution of ad-hoc and scheduled administrative tasks, which are called jobs.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using this feature, you can easily and reliably manage large numbers of Azure SQL Databases at scale by running Transact-SQL scripts to perform administrative operations such as schema changes, credentials management, reference data updates, performance data collection or tenant (customer) telemetry collection.</source>
          <target state="new">Using this feature, you can easily and reliably manage large numbers of Azure SQL Databases at scale by running Transact-SQL scripts to perform administrative operations such as schema changes, credentials management, reference data updates, performance data collection or tenant (customer) telemetry collection.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about Elastic Database jobs, see <bpt id="p1">[</bpt>Elastic Database jobs overview<ept id="p1">](sql-database-elastic-jobs-overview.md)</ept>.</source>
          <target state="new">For more information about Elastic Database jobs, see <bpt id="p1">[</bpt>Elastic Database jobs overview<ept id="p1">](sql-database-elastic-jobs-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>With the PowerShell APIs for <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept>, you have flexibility to define which group of databases against which scripts will execute.</source>
          <target state="new">With the PowerShell APIs for <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept>, you have flexibility to define which group of databases against which scripts will execute.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Currently, <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> functionality via the Azure portal has reduced feature set and is limited to execution against Elastic Database pools.</source>
          <target state="new">Currently, <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> functionality via the Azure portal has reduced feature set and is limited to execution against Elastic Database pools.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> (preview) uses multiple Azure components to define the jobs to be performed, define when to perform the jobs, execute the jobs, track the success or failure of the jobs and optionally specify a results destination for results returning queries.</source>
          <target state="new"><bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> (preview) uses multiple Azure components to define the jobs to be performed, define when to perform the jobs, execute the jobs, track the success or failure of the jobs and optionally specify a results destination for results returning queries.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Since the Powershell APIs included in this preview contain additional functionality since the initial preview via the Portal, it is suggested you install the latest <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> components.</source>
          <target state="new">Since the Powershell APIs included in this preview contain additional functionality since the initial preview via the Portal, it is suggested you install the latest <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> components.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If already installed, you can simply upgrade the <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> components.</source>
          <target state="new">If already installed, you can simply upgrade the <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> components.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about installation from <bpt id="p1">[</bpt>Nuget<ept id="p1">](https://www.nuget.org/packages/Microsoft.Azure.SqlDatabase.Jobs)</ept>, see <bpt id="p2">[</bpt>Install the Elastic Database jobs components<ept id="p2">](sql-database-elastic-jobs-service-installation.md)</ept>.</source>
          <target state="new">For more information about installation from <bpt id="p1">[</bpt>Nuget<ept id="p1">](https://www.nuget.org/packages/Microsoft.Azure.SqlDatabase.Jobs)</ept>, see <bpt id="p2">[</bpt>Install the Elastic Database jobs components<ept id="p2">](sql-database-elastic-jobs-service-installation.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This article will show you how to create everything you need to create and manage <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept>, except for the Azure subscription.</source>
          <target state="new">This article will show you how to create everything you need to create and manage <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept>, except for the Azure subscription.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you need an Azure subscription, simply click FREE TRIAL at the top of this page, and then come back to finish this article.</source>
          <target state="new">If you need an Azure subscription, simply click FREE TRIAL at the top of this page, and then come back to finish this article.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This topic extends on the sample found in <bpt id="p1">[</bpt>Getting started with Elastic Database tools<ept id="p1">](sql-database-elastic-scale-get-started.md)</ept>.</source>
          <target state="new">This topic extends on the sample found in <bpt id="p1">[</bpt>Getting started with Elastic Database tools<ept id="p1">](sql-database-elastic-scale-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When completed, you will learn how to create and manage jobs to perform administrative operations against a group of sharded databases defined by a <bpt id="p1">**</bpt>shard set<ept id="p1">**</ept> and alternatively custom-collection of databases.</source>
          <target state="new">When completed, you will learn how to create and manage jobs to perform administrative operations against a group of sharded databases defined by a <bpt id="p1">**</bpt>shard set<ept id="p1">**</ept> and alternatively custom-collection of databases.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An Azure subscription.</source>
          <target state="new">An Azure subscription.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For a free trial, see <bpt id="p1">[</bpt>Free one-month trial<ept id="p1">](http://azure.microsoft.com/pricing/free-trial/)</ept>.</source>
          <target state="new">For a free trial, see <bpt id="p1">[</bpt>Free one-month trial<ept id="p1">](http://azure.microsoft.com/pricing/free-trial/)</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> PowerShell package must first be downloaded, imported and the Elastic Database jobs components installed.</source>
          <target state="new"><bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> PowerShell package must first be downloaded, imported and the Elastic Database jobs components installed.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Follow these steps: <bpt id="p1">[</bpt>Installing Elastic Database jobs<ept id="p1">](sql-database-elastic-jobs-service-installation.md)</ept></source>
          <target state="new">Follow these steps: <bpt id="p1">[</bpt>Installing Elastic Database jobs<ept id="p1">](sql-database-elastic-jobs-service-installation.md)</ept></target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Azure PowerShell version &gt;= 0.8.16.</source>
          <target state="new">Azure PowerShell version &gt;= 0.8.16.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Install the latest version (0.9.5) through the <bpt id="p1">[</bpt>Web Platform Installer<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=320376)</ept>.</source>
          <target state="new">Install the latest version (0.9.5) through the <bpt id="p1">[</bpt>Web Platform Installer<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=320376)</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For detailed information, see <bpt id="p1">[</bpt>How to install and configure Azure PowerShell<ept id="p1">](powershell-install-configure.md)</ept>.</source>
          <target state="new">For detailed information, see <bpt id="p1">[</bpt>How to install and configure Azure PowerShell<ept id="p1">](powershell-install-configure.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Select your Azure subscription</source>
          <target state="new">Select your Azure subscription</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To select the subscription you need your subscription Id (<bpt id="p1">**</bpt>-SubscriptionId<ept id="p1">**</ept>) or subscription name (<bpt id="p2">**</bpt>-SubscriptionName<ept id="p2">**</ept>).</source>
          <target state="new">To select the subscription you need your subscription Id (<bpt id="p1">**</bpt>-SubscriptionId<ept id="p1">**</ept>) or subscription name (<bpt id="p2">**</bpt>-SubscriptionName<ept id="p2">**</ept>).</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you have multiple subscriptions you can run the <bpt id="p1">**</bpt>Get-AzureSubscription<ept id="p1">**</ept> cmdlet and copy the desired subscription information from the result set.</source>
          <target state="new">If you have multiple subscriptions you can run the <bpt id="p1">**</bpt>Get-AzureSubscription<ept id="p1">**</ept> cmdlet and copy the desired subscription information from the result set.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Once you have your subscription information, run the following commandlet to set this subscription as the default, namely the target for creating and managing jobs:</source>
          <target state="new">Once you have your subscription information, run the following commandlet to set this subscription as the default, namely the target for creating and managing jobs:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>PowerShell ISE<ept id="p1">](https://technet.microsoft.com/library/dd315244.aspx)</ept> is recommended for usage to develop and execute PowerShell scripts against the Elastic Database jobs.</source>
          <target state="new">The <bpt id="p1">[</bpt>PowerShell ISE<ept id="p1">](https://technet.microsoft.com/library/dd315244.aspx)</ept> is recommended for usage to develop and execute PowerShell scripts against the Elastic Database jobs.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs objects</source>
          <target state="new">Elastic Database jobs objects</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following table lists out all the object types of <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> along with its description and relevant PowerShell APIs.</source>
          <target state="new">The following table lists out all the object types of <bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> along with its description and relevant PowerShell APIs.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Object Type</source>
          <target state="new">Object Type</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Related PowerShell APIs</source>
          <target state="new">Related PowerShell APIs</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Credential</source>
          <target state="new">Credential</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Username and password to use when connecting to databases for execution of scripts or application of DACPACs.</source>
          <target state="new">Username and password to use when connecting to databases for execution of scripts or application of DACPACs.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The password is encrypted before sending to and storing in the Elastic Database Jobs database.</source>
          <target state="new">The password is encrypted before sending to and storing in the Elastic Database Jobs database.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The password is decrypted by the Elastic Database Jobs service via the credential created and uploaded from the installation script.</source>
          <target state="new">The password is decrypted by the Elastic Database Jobs service via the credential created and uploaded from the installation script.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Get-AzureSqlJobCredential</source>
          <target state="new">Get-AzureSqlJobCredential</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>New-AzureSqlJobCredential</source>
          <target state="new">New-AzureSqlJobCredential</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Set-AzureSqlJobCredential</source>
          <target state="new">Set-AzureSqlJobCredential</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Script</source>
          <target state="new">Script</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Transact-SQL script to be used for execution across databases.</source>
          <target state="new">Transact-SQL script to be used for execution across databases.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The script should be authored to be idempotent since the service will retry execution of the script upon failures.</source>
          <target state="new">The script should be authored to be idempotent since the service will retry execution of the script upon failures.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Get-AzureSqlJobContent</source>
          <target state="new">Get-AzureSqlJobContent</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Get-AzureSqlJobContentDefinition</source>
          <target state="new">Get-AzureSqlJobContentDefinition</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>New-AzureSqlJobContent</source>
          <target state="new">New-AzureSqlJobContent</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Set-AzureSqlJobContentDefinition</source>
          <target state="new">Set-AzureSqlJobContentDefinition</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>DACPAC</source>
          <target state="new">DACPAC</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Data-tier application <ph id="ph1">&lt;/a&gt;</ph> package to be applied across databases.</source>
          <target state="new">Data-tier application <ph id="ph1">&lt;/a&gt;</ph> package to be applied across databases.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Database Target</source>
          <target state="new">Database Target</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Database and server name pointing to an Azure SQL Database.</source>
          <target state="new">Database and server name pointing to an Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Shard Map Target</source>
          <target state="new">Shard Map Target</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Combination of a database target and a credential to be used to determine information stored within an Elastic Database shard map.</source>
          <target state="new">Combination of a database target and a credential to be used to determine information stored within an Elastic Database shard map.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Get-AzureSqlJobTarget</source>
          <target state="new">Get-AzureSqlJobTarget</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>New-AzureSqlJobTarget</source>
          <target state="new">New-AzureSqlJobTarget</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Set-AzureSqlJobTarget</source>
          <target state="new">Set-AzureSqlJobTarget</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Custom Collection Target</source>
          <target state="new">Custom Collection Target</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Defined group of databases to collectively use for execution.</source>
          <target state="new">Defined group of databases to collectively use for execution.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Get-AzureSqlJobTarget</source>
          <target state="new">Get-AzureSqlJobTarget</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>New-AzureSqlJobTarget</source>
          <target state="new">New-AzureSqlJobTarget</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Custom Collection Child Target</source>
          <target state="new">Custom Collection Child Target</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Database target that is referenced from a custom collection.</source>
          <target state="new">Database target that is referenced from a custom collection.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Add-AzureSqlJobChildTarget</source>
          <target state="new">Add-AzureSqlJobChildTarget</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Remove-AzureSqlJobChildTarget</source>
          <target state="new">Remove-AzureSqlJobChildTarget</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Job</source>
          <target state="new">Job</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Definition of parameters for a job that can be used to trigger execution or to fulfill a schedule.</source>
          <target state="new">Definition of parameters for a job that can be used to trigger execution or to fulfill a schedule.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Get-AzureSqlJob</source>
          <target state="new">Get-AzureSqlJob</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>New-AzureSqlJob</source>
          <target state="new">New-AzureSqlJob</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Set-AzureSqlJob</source>
          <target state="new">Set-AzureSqlJob</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Job Execution</source>
          <target state="new">Job Execution</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Container of tasks necessary to fulfill either executing a script or applying a DACPAC to a target using credentials for database connections with failures handled in accordance to an execution policy.</source>
          <target state="new">Container of tasks necessary to fulfill either executing a script or applying a DACPAC to a target using credentials for database connections with failures handled in accordance to an execution policy.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Get-AzureSqlJobExecution</source>
          <target state="new">Get-AzureSqlJobExecution</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Start-AzureSqlJobExecution</source>
          <target state="new">Start-AzureSqlJobExecution</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Stop-AzureSqlJobExecution</source>
          <target state="new">Stop-AzureSqlJobExecution</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Wait-AzureSqlJobExecution</source>
          <target state="new">Wait-AzureSqlJobExecution</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Job Task Execution</source>
          <target state="new">Job Task Execution</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Single unit of work to fulfill a job.</source>
          <target state="new">Single unit of work to fulfill a job.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If a job task is not able to successfully execute, the resulting exception message will be logged and a new matching job task will be created and executed in accordance to the specified execution policy.</source>
          <target state="new">If a job task is not able to successfully execute, the resulting exception message will be logged and a new matching job task will be created and executed in accordance to the specified execution policy.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Get-AzureSqlJobExecution</source>
          <target state="new">Get-AzureSqlJobExecution</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Start-AzureSqlJobExecution</source>
          <target state="new">Start-AzureSqlJobExecution</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Stop-AzureSqlJobExecution</source>
          <target state="new">Stop-AzureSqlJobExecution</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Wait-AzureSqlJobExecution</source>
          <target state="new">Wait-AzureSqlJobExecution</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Job Execution Policy</source>
          <target state="new">Job Execution Policy</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Controls job execution timeouts, retry limits and intervals between retries.</source>
          <target state="new">Controls job execution timeouts, retry limits and intervals between retries.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs includes a default job execution policy which cause essentially infinite retries of job task failures with exponential backoff of intervals between each retry.</source>
          <target state="new">Elastic Database jobs includes a default job execution policy which cause essentially infinite retries of job task failures with exponential backoff of intervals between each retry.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Get-AzureSqlJobExecutionPolicy</source>
          <target state="new">Get-AzureSqlJobExecutionPolicy</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>New-AzureSqlJobExecutionPolicy</source>
          <target state="new">New-AzureSqlJobExecutionPolicy</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Set-AzureSqlJobExecutionPolicy</source>
          <target state="new">Set-AzureSqlJobExecutionPolicy</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Schedule</source>
          <target state="new">Schedule</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Time based specification for execution to take place either on a reoccurring interval or at a single time.</source>
          <target state="new">Time based specification for execution to take place either on a reoccurring interval or at a single time.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Get-AzureSqlJobSchedule</source>
          <target state="new">Get-AzureSqlJobSchedule</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>New-AzureSqlJobSchedule</source>
          <target state="new">New-AzureSqlJobSchedule</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Set-AzureSqlJobSchedule</source>
          <target state="new">Set-AzureSqlJobSchedule</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Job Triggers</source>
          <target state="new">Job Triggers</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A mapping between a job and a schedule to trigger job execution according to the schedule.</source>
          <target state="new">A mapping between a job and a schedule to trigger job execution according to the schedule.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>New-AzureSqlJobTrigger</source>
          <target state="new">New-AzureSqlJobTrigger</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Remove-AzureSqlJobTrigger</source>
          <target state="new">Remove-AzureSqlJobTrigger</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Supported Elastic Database jobs group types</source>
          <target state="new">Supported Elastic Database jobs group types</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> enables execution of Transact-SQL (T-SQL) scripts or application of DACPACs across a group of databases.</source>
          <target state="new"><bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> enables execution of Transact-SQL (T-SQL) scripts or application of DACPACs across a group of databases.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>When a job is submitted to be executed across a group of databases, Elastic Database jobs will “expand” the job into child jobs where each which job performs the requested execution against a single database in the group.</source>
          <target state="new">When a job is submitted to be executed across a group of databases, Elastic Database jobs will “expand” the job into child jobs where each which job performs the requested execution against a single database in the group.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following is a list of current supported group types:</source>
          <target state="new">The following is a list of current supported group types:</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shard Map<ept id="p1">](sql-database-elastic-scale-shard-map-management.md)</ept>: When a job is submitted to target a shard map, jobs will first query the shard map to determine its current set of shards and then expand the job to child jobs matching each shard within the shard map.</source>
          <target state="new"><bpt id="p1">[</bpt>Shard Map<ept id="p1">](sql-database-elastic-scale-shard-map-management.md)</ept>: When a job is submitted to target a shard map, jobs will first query the shard map to determine its current set of shards and then expand the job to child jobs matching each shard within the shard map.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Custom Collection: Specified to point to a custom defined set of databases.</source>
          <target state="new">Custom Collection: Specified to point to a custom defined set of databases.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When a job is submitted to target a custom collection, jobs will expand the job to child jobs matching each database currently defined within the custom collection.</source>
          <target state="new">When a job is submitted to target a custom collection, jobs will expand the job to child jobs matching each database currently defined within the custom collection.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Setting the Elastic Database jobs connection</source>
          <target state="new">Setting the Elastic Database jobs connection</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>After loading the PowerShell module, the connection needs to be set to the Elastic Database jobs <bpt id="p1">*</bpt>Control Database<ept id="p1">*</ept> prior to using the jobs APIs.</source>
          <target state="new">After loading the PowerShell module, the connection needs to be set to the Elastic Database jobs <bpt id="p1">*</bpt>Control Database<ept id="p1">*</ept> prior to using the jobs APIs.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Invocation of this cmdlet will trigger a credential window to pop up requesting the user name/password supplied when installing Elastic Database jobs.</source>
          <target state="new">Invocation of this cmdlet will trigger a credential window to pop up requesting the user name/password supplied when installing Elastic Database jobs.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>All examples provided within this topic assume that this first step has already been performed.</source>
          <target state="new">All examples provided within this topic assume that this first step has already been performed.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Open a connection to the Elastic Database jobs:</source>
          <target state="new">Open a connection to the Elastic Database jobs:</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Encrypted credentials within the Elastic Database jobs</source>
          <target state="new">Encrypted credentials within the Elastic Database jobs</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Database credentials can be inserted into Elastic Database jobs <bpt id="p1">*</bpt>Control Database<ept id="p1">*</ept>  with its password encrypted.</source>
          <target state="new">Database credentials can be inserted into Elastic Database jobs <bpt id="p1">*</bpt>Control Database<ept id="p1">*</ept>  with its password encrypted.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>It is necessary to store credentials to enable jobs to be executed at a later time, including using job schedules.</source>
          <target state="new">It is necessary to store credentials to enable jobs to be executed at a later time, including using job schedules.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Encryption works through a certificate created as part of the installation script.</source>
          <target state="new">Encryption works through a certificate created as part of the installation script.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The installation script creates and uploads the certificate into the Azure Cloud Service for decryption of the stored encrypted passwords.</source>
          <target state="new">The installation script creates and uploads the certificate into the Azure Cloud Service for decryption of the stored encrypted passwords.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The Azure Cloud Service later stores the public key within the Elastic Database jobs <bpt id="p1">*</bpt>Control Database<ept id="p1">*</ept> which enables the PowerShell API or Azure portal interface to encrypt a provided password without requiring the certificate to be locally installed.</source>
          <target state="new">The Azure Cloud Service later stores the public key within the Elastic Database jobs <bpt id="p1">*</bpt>Control Database<ept id="p1">*</ept> which enables the PowerShell API or Azure portal interface to encrypt a provided password without requiring the certificate to be locally installed.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>While the credential passwords are encrypted and secure from users with read-only access to Elastic Database jobs objects, it is possible for a malicious user with read-write access to Elastic Database Jobs objects to extract out a password.</source>
          <target state="new">While the credential passwords are encrypted and secure from users with read-only access to Elastic Database jobs objects, it is possible for a malicious user with read-write access to Elastic Database Jobs objects to extract out a password.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Credentials are designed to be reused across job executions.</source>
          <target state="new">Credentials are designed to be reused across job executions.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Credentials are passed to target databases when establishing connections.</source>
          <target state="new">Credentials are passed to target databases when establishing connections.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>There are currently not any restrictions on the target databases used for each credential so it is possible for a malicious user to add a database target for a database in their control and subsequently start a job targeting this database to gain knowledge of the credential's password.</source>
          <target state="new">There are currently not any restrictions on the target databases used for each credential so it is possible for a malicious user to add a database target for a database in their control and subsequently start a job targeting this database to gain knowledge of the credential's password.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>There are security best practices for Elastic Database jobs:</source>
          <target state="new">There are security best practices for Elastic Database jobs:</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Limit usage of the APIs to trusted individuals.</source>
          <target state="new">Limit usage of the APIs to trusted individuals.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Credentials should have the least privileges necessary to perform the job task.</source>
          <target state="new">Credentials should have the least privileges necessary to perform the job task.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>More information can be seen within this <bpt id="p1">[</bpt>Authorization and Permissions<ept id="p1">](https://msdn.microsoft.com/library/bb669084.aspx)</ept> SQL Server MSDN article.</source>
          <target state="new">More information can be seen within this <bpt id="p1">[</bpt>Authorization and Permissions<ept id="p1">](https://msdn.microsoft.com/library/bb669084.aspx)</ept> SQL Server MSDN article.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Creating an encrypted credential for job execution across databases</source>
          <target state="new">Creating an encrypted credential for job execution across databases</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To create a new encrypted credential, the Get-Credential cmdlet will prompt for a user name and password that can be passed to the <bpt id="p1">**</bpt>New-AzureSqlJobCredential<ept id="p1">**</ept> cmdlet.</source>
          <target state="new">To create a new encrypted credential, the Get-Credential cmdlet will prompt for a user name and password that can be passed to the <bpt id="p1">**</bpt>New-AzureSqlJobCredential<ept id="p1">**</ept> cmdlet.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Updating Credentials</source>
          <target state="new">Updating Credentials</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>To update an existing credential to support the case when passwords change, use the <bpt id="p1">**</bpt>Set-AzureSqlJobCredential<ept id="p1">**</ept> cmdlet and set the <bpt id="p2">**</bpt>CredentialName<ept id="p2">**</ept> parameter.</source>
          <target state="new">To update an existing credential to support the case when passwords change, use the <bpt id="p1">**</bpt>Set-AzureSqlJobCredential<ept id="p1">**</ept> cmdlet and set the <bpt id="p2">**</bpt>CredentialName<ept id="p2">**</ept> parameter.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Defining an Elastic Database Shard Map Target</source>
          <target state="new">Defining an Elastic Database Shard Map Target</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Execute a job against all databases in a shard set (created using <bpt id="p1">[</bpt>Elastic Database client library<ept id="p1">](sql-database-elastic-database-client-library.md)</ept>) using a shard map as the database target.</source>
          <target state="new">Execute a job against all databases in a shard set (created using <bpt id="p1">[</bpt>Elastic Database client library<ept id="p1">](sql-database-elastic-database-client-library.md)</ept>) using a shard map as the database target.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This example is dependent on you creating a sharded application using the Elastic Database client library.</source>
          <target state="new">This example is dependent on you creating a sharded application using the Elastic Database client library.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Download and run the <bpt id="p1">[</bpt>Getting started with Elastic Database tools sample<ept id="p1">](sql-database-elastic-scale-get-started.md)</ept>.</source>
          <target state="new">Download and run the <bpt id="p1">[</bpt>Getting started with Elastic Database tools sample<ept id="p1">](sql-database-elastic-scale-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Create a shard map manager using the sample app</source>
          <target state="new">Create a shard map manager using the sample app</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Here you will create a shard map manager along with several shards, followed by insertion of data into the shards.</source>
          <target state="new">Here you will create a shard map manager along with several shards, followed by insertion of data into the shards.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If you happen to already have shards setup, you can skip the following steps and move to the next section.</source>
          <target state="new">If you happen to already have shards setup, you can skip the following steps and move to the next section.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Build and run the <bpt id="p1">**</bpt>Getting started with Elastic Database tools<ept id="p1">**</ept> sample application.</source>
          <target state="new">Build and run the <bpt id="p1">**</bpt>Getting started with Elastic Database tools<ept id="p1">**</ept> sample application.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Follow the steps until step 7 in the section <bpt id="p1">[</bpt>Download and run the sample app<ept id="p1">](sql-database-elastic-scale-get-started.md#Getting-started-with-elastic-database-tools)</ept>.</source>
          <target state="new">Follow the steps until step 7 in the section <bpt id="p1">[</bpt>Download and run the sample app<ept id="p1">](sql-database-elastic-scale-get-started.md#Getting-started-with-elastic-database-tools)</ept>.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>At the end of Step 7, you will see the following command prompt:</source>
          <target state="new">At the end of Step 7, you will see the following command prompt:</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>![command prompt][1]</source>
          <target state="new">![command prompt][1]</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>In the command window, type "1" and press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>.</source>
          <target state="new">In the command window, type "1" and press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This creates the shard map manager, and adds two shards to the server.</source>
          <target state="new">This creates the shard map manager, and adds two shards to the server.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Then type "3" and press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>; repeat the action four times.</source>
          <target state="new">Then type "3" and press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>; repeat the action four times.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This inserts sample data rows in your shards.</source>
          <target state="new">This inserts sample data rows in your shards.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](https://portal.azure.com)</ept> should show three new databases in your v12 server:</source>
          <target state="new">The <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](https://portal.azure.com)</ept> should show three new databases in your v12 server:</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>![Visual Studio confirmation][2]</source>
          <target state="new">![Visual Studio confirmation][2]</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Now create a shard map target, using the <bpt id="p1">**</bpt>New-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet.</source>
          <target state="new">Now create a shard map target, using the <bpt id="p1">**</bpt>New-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The shard map manager database must be set as a database target and then the specific shard map is specified as a target.</source>
          <target state="new">The shard map manager database must be set as a database target and then the specific shard map is specified as a target.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Create a T-SQL Script for execution across databases</source>
          <target state="new">Create a T-SQL Script for execution across databases</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>When creating T-SQL scripts for execution, it is highly recommended to build them to be idempotent and resilient against failures.</source>
          <target state="new">When creating T-SQL scripts for execution, it is highly recommended to build them to be idempotent and resilient against failures.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs will retry execution of a script whenever execution encounters a failure, regardless of the classification of the failure.</source>
          <target state="new">Elastic Database jobs will retry execution of a script whenever execution encounters a failure, regardless of the classification of the failure.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>New-AzureSqlJobContent<ept id="p1">**</ept> cmdlet to create and save a script for execution and set the <bpt id="p2">**</bpt>-ContentName<ept id="p2">**</ept> and <bpt id="p3">**</bpt>-CommandText<ept id="p3">**</ept> parameters.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>New-AzureSqlJobContent<ept id="p1">**</ept> cmdlet to create and save a script for execution and set the <bpt id="p2">**</bpt>-ContentName<ept id="p2">**</ept> and <bpt id="p3">**</bpt>-CommandText<ept id="p3">**</ept> parameters.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Create a new script from a file</source>
          <target state="new">Create a new script from a file</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>If the T-SQL script is defined within a file, the following script could be used to import the script:</source>
          <target state="new">If the T-SQL script is defined within a file, the following script could be used to import the script:</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Update a T-SQL Script for Execution across Databases</source>
          <target state="new">Update a T-SQL Script for Execution across Databases</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to update the T-SQL command text for an existing script.</source>
          <target state="new">The following PowerShell script can be used to update the T-SQL command text for an existing script.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Set the following variables to reflect the desired script definition to be set:</source>
          <target state="new">Set the following variables to reflect the desired script definition to be set:</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Update the definition to an existing script</source>
          <target state="new">Update the definition to an existing script</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Create a Job to execute a script across an shard map</source>
          <target state="new">Create a Job to execute a script across an shard map</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to start a job for execution of a script across each shard in an Elastic Scale shard map.</source>
          <target state="new">The following PowerShell script can be used to start a job for execution of a script across each shard in an Elastic Scale shard map.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Set the following variables to reflect the desired script and target:</source>
          <target state="new">Set the following variables to reflect the desired script and target:</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Execute a job</source>
          <target state="new">Execute a job</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to execute an existing job:</source>
          <target state="new">The following PowerShell script can be used to execute an existing job:</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Update the following variable to reflect the desired job name to have executed:</source>
          <target state="new">Update the following variable to reflect the desired job name to have executed:</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Retrieve the state of a single job execution</source>
          <target state="new">Retrieve the state of a single job execution</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlets and set the <bpt id="p2">**</bpt>JobExecutionId<ept id="p2">**</ept> parameter to view the state of job execution.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlets and set the <bpt id="p2">**</bpt>JobExecutionId<ept id="p2">**</ept> parameter to view the state of job execution.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Use the same <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet with the <bpt id="p2">**</bpt>IncludeChildren<ept id="p2">**</ept> parameter to view the state of child job executions, namely the specific state for each job execution against each database targeted by the job.</source>
          <target state="new">Use the same <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet with the <bpt id="p2">**</bpt>IncludeChildren<ept id="p2">**</ept> parameter to view the state of child job executions, namely the specific state for each job execution against each database targeted by the job.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>View the state across multiple job executions</source>
          <target state="new">View the state across multiple job executions</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet has multiple optional parameters that can be used to display multiple job executions, filtered through the provided parameters.</source>
          <target state="new">The <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet has multiple optional parameters that can be used to display multiple job executions, filtered through the provided parameters.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The following demonstrates some of the possible ways to use Get-AzureSqlJobExecution:</source>
          <target state="new">The following demonstrates some of the possible ways to use Get-AzureSqlJobExecution:</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Retrieve all active top level job executions:</source>
          <target state="new">Retrieve all active top level job executions:</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Retrieve all top level job executions, including inactive job executions:</source>
          <target state="new">Retrieve all top level job executions, including inactive job executions:</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Retrieve all child job executions of a provided job execution ID, including inactive job executions:</source>
          <target state="new">Retrieve all child job executions of a provided job execution ID, including inactive job executions:</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Retrieve all job executions created using a schedule / job combination, including inactive jobs:</source>
          <target state="new">Retrieve all job executions created using a schedule / job combination, including inactive jobs:</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Retrieve all jobs targeting a specified shard map, including inactive jobs:</source>
          <target state="new">Retrieve all jobs targeting a specified shard map, including inactive jobs:</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Retrieve all jobs targeting a specified custom collection, including inactive jobs:</source>
          <target state="new">Retrieve all jobs targeting a specified custom collection, including inactive jobs:</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Retrieve the list of job task executions within a specific job execution:</source>
          <target state="new">Retrieve the list of job task executions within a specific job execution:</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Retrieve job task execution details:</source>
          <target state="new">Retrieve job task execution details:</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to view the details of a job task execution, which is particularly useful when debugging execution failures.</source>
          <target state="new">The following PowerShell script can be used to view the details of a job task execution, which is particularly useful when debugging execution failures.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Retrieve failures within job task executions</source>
          <target state="new">Retrieve failures within job task executions</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The JobTaskExecution object includes a property for the Lifecycle of the task along with a Message property.</source>
          <target state="new">The JobTaskExecution object includes a property for the Lifecycle of the task along with a Message property.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If a job task execution failed, the Lifecycle property will be set to <bpt id="p1">*</bpt>Failed<ept id="p1">*</ept> and the Message property will be set to the resulting exception message and its stack.</source>
          <target state="new">If a job task execution failed, the Lifecycle property will be set to <bpt id="p1">*</bpt>Failed<ept id="p1">*</ept> and the Message property will be set to the resulting exception message and its stack.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If a job did not succeed, it is important to view the details of job tasks that did not succeed for a given job.</source>
          <target state="new">If a job did not succeed, it is important to view the details of job tasks that did not succeed for a given job.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Waiting for a job execution to complete</source>
          <target state="new">Waiting for a job execution to complete</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to wait for a job task to complete:</source>
          <target state="new">The following PowerShell script can be used to wait for a job task to complete:</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Create a custom execution policy</source>
          <target state="new">Create a custom execution policy</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs supports creating custom execution policies that can be applied when starting jobs.</source>
          <target state="new">Elastic Database jobs supports creating custom execution policies that can be applied when starting jobs.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Execution policies currently allow for defining:</source>
          <target state="new">Execution policies currently allow for defining:</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Name: Identifier for the execution policy.</source>
          <target state="new">Name: Identifier for the execution policy.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Job Timeout: Total time before a job will be canceled by Elastic Database Jobs.</source>
          <target state="new">Job Timeout: Total time before a job will be canceled by Elastic Database Jobs.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Initial Retry Interval: Interval to wait before first retry.</source>
          <target state="new">Initial Retry Interval: Interval to wait before first retry.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Maximum Retry Interval: Cap of retry intervals to use.</source>
          <target state="new">Maximum Retry Interval: Cap of retry intervals to use.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Retry Interval Backoff Coefficient: Coefficient used to calculate the next interval between retries.</source>
          <target state="new">Retry Interval Backoff Coefficient: Coefficient used to calculate the next interval between retries.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The following formula is used: (Initial Retry Interval) * Math.pow((Interval Backoff Coefficient), (Number of Retries) - 2).</source>
          <target state="new">The following formula is used: (Initial Retry Interval) * Math.pow((Interval Backoff Coefficient), (Number of Retries) - 2).</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Maximum Attempts: The maximum number of retry attempts to perform within a job.</source>
          <target state="new">Maximum Attempts: The maximum number of retry attempts to perform within a job.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The default execution policy uses the following values:</source>
          <target state="new">The default execution policy uses the following values:</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Name: Default execution policy</source>
          <target state="new">Name: Default execution policy</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Job Timeout: 1 week</source>
          <target state="new">Job Timeout: 1 week</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Initial Retry Interval:  100 milliseconds</source>
          <target state="new">Initial Retry Interval:  100 milliseconds</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Maximum Retry Interval: 30 minutes</source>
          <target state="new">Maximum Retry Interval: 30 minutes</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Retry Interval Coefficient: 2</source>
          <target state="new">Retry Interval Coefficient: 2</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Maximum Attempts: 2,147,483,647</source>
          <target state="new">Maximum Attempts: 2,147,483,647</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Create the desired execution policy:</source>
          <target state="new">Create the desired execution policy:</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Update a custom execution policy</source>
          <target state="new">Update a custom execution policy</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Update the desired execution policy to update:</source>
          <target state="new">Update the desired execution policy to update:</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Cancel a job</source>
          <target state="new">Cancel a job</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Elastic Database Jobs supports cancellation requests of jobs.</source>
          <target state="new">Elastic Database Jobs supports cancellation requests of jobs.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>If Elastic Database Jobs detects a cancellation request for a job currently being executed, it will attempt to stop the job.</source>
          <target state="new">If Elastic Database Jobs detects a cancellation request for a job currently being executed, it will attempt to stop the job.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>There are two different ways that Elastic Database Jobs can perform a cancellation:</source>
          <target state="new">There are two different ways that Elastic Database Jobs can perform a cancellation:</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Canceling Currently Executing Tasks: If a cancellation is detected while a task is currently running, a cancellation will be attempted within the currently executing aspect of the task.</source>
          <target state="new">Canceling Currently Executing Tasks: If a cancellation is detected while a task is currently running, a cancellation will be attempted within the currently executing aspect of the task.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For example: If there is a long running query currently being performed when a cancellation is attempted, there will be an attempt to cancel the query.</source>
          <target state="new">For example: If there is a long running query currently being performed when a cancellation is attempted, there will be an attempt to cancel the query.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Canceling Task Retries: If a cancellation is detected by the control thread before a task is launched for execution, the control thread will avoid launching the task and declare the request as canceled.</source>
          <target state="new">Canceling Task Retries: If a cancellation is detected by the control thread before a task is launched for execution, the control thread will avoid launching the task and declare the request as canceled.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>If a job cancellation is requested for a parent job, the cancellation request will be honored for the parent job and for all of its child jobs.</source>
          <target state="new">If a job cancellation is requested for a parent job, the cancellation request will be honored for the parent job and for all of its child jobs.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>To submit a cancellation request, use the <bpt id="p1">**</bpt>Stop-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet and set the <bpt id="p2">**</bpt>JobExecutionId<ept id="p2">**</ept> parameter.</source>
          <target state="new">To submit a cancellation request, use the <bpt id="p1">**</bpt>Stop-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet and set the <bpt id="p2">**</bpt>JobExecutionId<ept id="p2">**</ept> parameter.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Delete a job by name and the job's history</source>
          <target state="new">Delete a job by name and the job's history</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs supports asynchronous deletion of jobs.</source>
          <target state="new">Elastic Database jobs supports asynchronous deletion of jobs.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A job can be marked for deletion and the system will delete the job and all its job history after all job executions have completed for the job.</source>
          <target state="new">A job can be marked for deletion and the system will delete the job and all its job history after all job executions have completed for the job.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The system will not automatically cancel active job executions.</source>
          <target state="new">The system will not automatically cancel active job executions.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Instead, Stop-AzureSqlJobExecution must be invoked to cancel active job executions.</source>
          <target state="new">Instead, Stop-AzureSqlJobExecution must be invoked to cancel active job executions.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>To trigger job deletion, use the <bpt id="p1">**</bpt>Remove-AzureSqlJob<ept id="p1">**</ept> cmdlet and set the <bpt id="p2">**</bpt>JobName<ept id="p2">**</ept> parameter.</source>
          <target state="new">To trigger job deletion, use the <bpt id="p1">**</bpt>Remove-AzureSqlJob<ept id="p1">**</ept> cmdlet and set the <bpt id="p2">**</bpt>JobName<ept id="p2">**</ept> parameter.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Create a custom database target</source>
          <target state="new">Create a custom database target</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Custom database targets can be defined in Elastic Database jobs which can be used either for execution directly or for inclusion within a custom database group.</source>
          <target state="new">Custom database targets can be defined in Elastic Database jobs which can be used either for execution directly or for inclusion within a custom database group.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Since <bpt id="p1">**</bpt>Elastic Database pools<ept id="p1">**</ept> are not yet directly supported via the PowerShell APIs, you simply create a custom database target and custom database collection target which encompasses all the databases in the pool.</source>
          <target state="new">Since <bpt id="p1">**</bpt>Elastic Database pools<ept id="p1">**</ept> are not yet directly supported via the PowerShell APIs, you simply create a custom database target and custom database collection target which encompasses all the databases in the pool.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Set the following variables to reflect the desired database information:</source>
          <target state="new">Set the following variables to reflect the desired database information:</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Create a custom database collection target</source>
          <target state="new">Create a custom database collection target</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>A custom database collection target can be defined to enable execution across multiple defined database targets.</source>
          <target state="new">A custom database collection target can be defined to enable execution across multiple defined database targets.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>After a database group is created, databases can be associated to the custom collection target.</source>
          <target state="new">After a database group is created, databases can be associated to the custom collection target.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Set the following variables to reflect the desired custom collection target configuration:</source>
          <target state="new">Set the following variables to reflect the desired custom collection target configuration:</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Add databases to a custom database collection target</source>
          <target state="new">Add databases to a custom database collection target</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Database targets can be associated with custom database collection targets to create a group of databases.</source>
          <target state="new">Database targets can be associated with custom database collection targets to create a group of databases.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Whenever a job is created that targets a custom database collection target, it will be expanded to target the databases associated to the group at the time of execution.</source>
          <target state="new">Whenever a job is created that targets a custom database collection target, it will be expanded to target the databases associated to the group at the time of execution.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Add the desired database to a specific custom collection:</source>
          <target state="new">Add the desired database to a specific custom collection:</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Review the databases within a custom database collection target</source>
          <target state="new">Review the databases within a custom database collection target</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>Get-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet to retrieve the child databases within a custom database collection target.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>Get-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet to retrieve the child databases within a custom database collection target.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Create a job to execute a script across a custom database collection target</source>
          <target state="new">Create a job to execute a script across a custom database collection target</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>New-AzureSqlJob<ept id="p1">**</ept> cmdlet to create a job against a group of databases defined by a custom database collection target.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>New-AzureSqlJob<ept id="p1">**</ept> cmdlet to create a job against a group of databases defined by a custom database collection target.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs will expand the job into multiple child jobs each corresponding to a database associated with the custom database collection target and ensure that the script is executed against each database.</source>
          <target state="new">Elastic Database jobs will expand the job into multiple child jobs each corresponding to a database associated with the custom database collection target and ensure that the script is executed against each database.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Again, it is important that scripts are idempotent to be resilient to retries.</source>
          <target state="new">Again, it is important that scripts are idempotent to be resilient to retries.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Data collection across databases</source>
          <target state="new">Data collection across databases</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> supports executing a query across a group of databases and sends the results to a specified database’s table.</source>
          <target state="new"><bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> supports executing a query across a group of databases and sends the results to a specified database’s table.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The table can be queried after the fact to see the query’s results from each database.</source>
          <target state="new">The table can be queried after the fact to see the query’s results from each database.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>This provides an asynchronous mechanism to execute a query across many databases.</source>
          <target state="new">This provides an asynchronous mechanism to execute a query across many databases.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Failure cases such as one of the databases being temporarily unavailable are handled automatically via retries.</source>
          <target state="new">Failure cases such as one of the databases being temporarily unavailable are handled automatically via retries.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The specified destination table will be automatically created if it does not yet exist matching the schema of the returned result set.</source>
          <target state="new">The specified destination table will be automatically created if it does not yet exist matching the schema of the returned result set.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>If a script execution returns multiple result sets, Elastic Database jobs will only send the first one to the provided destination table.</source>
          <target state="new">If a script execution returns multiple result sets, Elastic Database jobs will only send the first one to the provided destination table.</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to execute a script collecting its results into a specified table.</source>
          <target state="new">The following PowerShell script can be used to execute a script collecting its results into a specified table.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>This script assumes that a T-SQL script has been created which outputs a single result set and a custom database collection target has been created.</source>
          <target state="new">This script assumes that a T-SQL script has been created which outputs a single result set and a custom database collection target has been created.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Set the following to reflect the desired script, credentials, and execution target:</source>
          <target state="new">Set the following to reflect the desired script, credentials, and execution target:</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Create and start a job for data collection scenarios</source>
          <target state="new">Create and start a job for data collection scenarios</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Create a schedule for job execution using a job trigger</source>
          <target state="new">Create a schedule for job execution using a job trigger</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to create a reoccurring schedule.</source>
          <target state="new">The following PowerShell script can be used to create a reoccurring schedule.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This script uses a minute interval, but New-AzureSqlJobSchedule also supports -DayInterval, -HourInterval, -MonthInterval, and -WeekInterval parameters.</source>
          <target state="new">This script uses a minute interval, but New-AzureSqlJobSchedule also supports -DayInterval, -HourInterval, -MonthInterval, and -WeekInterval parameters.</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Schedules that execute only once can be created by passing -OneTime.</source>
          <target state="new">Schedules that execute only once can be created by passing -OneTime.</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Create a new schedule:</source>
          <target state="new">Create a new schedule:</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Create a job trigger to have a job executed on a time schedule</source>
          <target state="new">Create a job trigger to have a job executed on a time schedule</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>A job trigger can be defined to have a job executed according to a time schedule.</source>
          <target state="new">A job trigger can be defined to have a job executed according to a time schedule.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to create a job trigger.</source>
          <target state="new">The following PowerShell script can be used to create a job trigger.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Set the following variables to correspond to the desired job and schedule:</source>
          <target state="new">Set the following variables to correspond to the desired job and schedule:</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Remove a scheduled association to stop job from executing on schedule</source>
          <target state="new">Remove a scheduled association to stop job from executing on schedule</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>To discontinue reoccurring job execution through a job trigger, the job trigger can be removed.</source>
          <target state="new">To discontinue reoccurring job execution through a job trigger, the job trigger can be removed.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Remove a job trigger to stop a job from being executed according to a schedule using the <bpt id="p1">**</bpt>Remove-AzureSqlJobTrigger<ept id="p1">**</ept> cmdlet.</source>
          <target state="new">Remove a job trigger to stop a job from being executed according to a schedule using the <bpt id="p1">**</bpt>Remove-AzureSqlJobTrigger<ept id="p1">**</ept> cmdlet.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Retrieve job triggers bound to a time schedule</source>
          <target state="new">Retrieve job triggers bound to a time schedule</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to obtain and display the job triggers registered to a particular time schedule.</source>
          <target state="new">The following PowerShell script can be used to obtain and display the job triggers registered to a particular time schedule.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Retrieve job triggers bound to a job</source>
          <target state="new">Retrieve job triggers bound to a job</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to obtain and display schedules containing a registered job.</source>
          <target state="new">The following PowerShell script can be used to obtain and display schedules containing a registered job.</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Create a Data-tier Application Deployment (DACPAC) for execution across databases</source>
          <target state="new">Create a Data-tier Application Deployment (DACPAC) for execution across databases</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs can be used to deploy a data-tier application (DACPAC) to a group of databases.</source>
          <target state="new">Elastic Database jobs can be used to deploy a data-tier application (DACPAC) to a group of databases.</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>To create a DACPAC, please refer to this documentation.</source>
          <target state="new">To create a DACPAC, please refer to this documentation.</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>For Elastic Database Jobs to deploy a DACPAC to a group of databases, the DACPAC must be accessible to the service.</source>
          <target state="new">For Elastic Database Jobs to deploy a DACPAC to a group of databases, the DACPAC must be accessible to the service.</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>It is recommended to upload a created DACPAC to Azure Storage and create a signed URI for the DACPAC.</source>
          <target state="new">It is recommended to upload a created DACPAC to Azure Storage and create a signed URI for the DACPAC.</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to insert a DACPAC into Elastic Database Jobs:</source>
          <target state="new">The following PowerShell script can be used to insert a DACPAC into Elastic Database Jobs:</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Updating a Data-tier Application Deployment (DACPAC) for execution across databases</source>
          <target state="new">Updating a Data-tier Application Deployment (DACPAC) for execution across databases</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Existing DACPACs registered within Elastic Database Jobs can be updated to point to new URIs.</source>
          <target state="new">Existing DACPACs registered within Elastic Database Jobs can be updated to point to new URIs.</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to update the DACPAC URI on an existing registered DACPAC:</source>
          <target state="new">The following PowerShell script can be used to update the DACPAC URI on an existing registered DACPAC:</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Create a Job to Apply a Data-tier Application Deployment (DACPAC) across databases</source>
          <target state="new">Create a Job to Apply a Data-tier Application Deployment (DACPAC) across databases</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>After a DACPAC has been created within Elastic Database Jobs, a job can be created to apply the DACPAC across a group of databases.</source>
          <target state="new">After a DACPAC has been created within Elastic Database Jobs, a job can be created to apply the DACPAC across a group of databases.</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to create a DACPAC job across a custom collection of databases:</source>
          <target state="new">The following PowerShell script can be used to create a DACPAC job across a custom collection of databases:</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2029dc91fe8d8e2605d20795a2fc89757a4d9053</xliffext:olfilehash>
  </header>
</xliff>