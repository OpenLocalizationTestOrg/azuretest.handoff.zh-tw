<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating a Snapshot of a Blob</source>
          <target state="new">Creating a Snapshot of a Blob</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A how to guide for creating Azure Storage Blob Snapshots</source>
          <target state="new">A how to guide for creating Azure Storage Blob Snapshots</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create a blob snapshot</source>
          <target state="new">Create a blob snapshot</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A snapshot is a read-only version of a blob that's taken at a point in time.</source>
          <target state="new">A snapshot is a read-only version of a blob that's taken at a point in time.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Snapshots are useful for backing up blobs.</source>
          <target state="new">Snapshots are useful for backing up blobs.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Once a snapshot has been created, you can read, copy, or delete it, but you cannot modify it.</source>
          <target state="new">Once a snapshot has been created, you can read, copy, or delete it, but you cannot modify it.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A snapshot of a blob has the same name as the base blob from which the snapshot is taken, with a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> value appended to indicate the time at which the snapshot was taken.</source>
          <target state="new">A snapshot of a blob has the same name as the base blob from which the snapshot is taken, with a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> value appended to indicate the time at which the snapshot was taken.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, if a page blob URI is <ph id="ph1">`http://storagesample.core.blob.windows.net/mydrives/myvhd`</ph>, the snapshot URI will be similar to <ph id="ph2">`http://storagesample.core.blob.windows.net/mydrives/myvhd?snapshot=2011-03-09T01:42:34.9360000Z`</ph>.</source>
          <target state="new">For example, if a page blob URI is <ph id="ph1">`http://storagesample.core.blob.windows.net/mydrives/myvhd`</ph>, the snapshot URI will be similar to <ph id="ph2">`http://storagesample.core.blob.windows.net/mydrives/myvhd?snapshot=2011-03-09T01:42:34.9360000Z`</ph>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>All of a blob's snapshots share its URI and are distinguished only by the appended <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> value.</source>
          <target state="new">All of a blob's snapshots share its URI and are distinguished only by the appended <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> value.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A blob may have any number of snapshots.</source>
          <target state="new">A blob may have any number of snapshots.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Snapshots persist until they are explicitly deleted.</source>
          <target state="new">Snapshots persist until they are explicitly deleted.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Note that a snapshot cannot outlive its source blob.</source>
          <target state="new">Note that a snapshot cannot outlive its source blob.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can enumerate the snapshots associated with your blob to track your current snapshots.</source>
          <target state="new">You can enumerate the snapshots associated with your blob to track your current snapshots.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you create a snapshot of a blob, the blob's system properties are copied to the snapshot with the same values.</source>
          <target state="new">When you create a snapshot of a blob, the blob's system properties are copied to the snapshot with the same values.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Any leases associated with the base blob do not affect the snapshot.</source>
          <target state="new">Any leases associated with the base blob do not affect the snapshot.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You cannot acquire a lease on a snapshot.</source>
          <target state="new">You cannot acquire a lease on a snapshot.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Copying snapshots</source>
          <target state="new">Copying snapshots</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Copy operations involving blobs and snapshots follow these rules:</source>
          <target state="new">Copy operations involving blobs and snapshots follow these rules:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can copy a snapshot over its base blob.</source>
          <target state="new">You can copy a snapshot over its base blob.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>By promoting a snapshot to the position of the base blob, you can restore an earlier version of a blob.</source>
          <target state="new">By promoting a snapshot to the position of the base blob, you can restore an earlier version of a blob.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The snapshot remains, but the base blob is overwritten with a writable copy of the snapshot.</source>
          <target state="new">The snapshot remains, but the base blob is overwritten with a writable copy of the snapshot.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can copy a snapshot to a destination blob with a different name.</source>
          <target state="new">You can copy a snapshot to a destination blob with a different name.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The resulting destination blob is a writable blob and not a snapshot.</source>
          <target state="new">The resulting destination blob is a writable blob and not a snapshot.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When a source blob is copied, any snapshots of the source blob are not copied to the destination.</source>
          <target state="new">When a source blob is copied, any snapshots of the source blob are not copied to the destination.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When a destination blob is overwritten with a copy, any snapshots associated with the destination blob at the time it was overwritten remain intact under its name.</source>
          <target state="new">When a destination blob is overwritten with a copy, any snapshots associated with the destination blob at the time it was overwritten remain intact under its name.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When you create a snapshot of a block blob, the blob's committed block list is also copied to the snapshot.</source>
          <target state="new">When you create a snapshot of a block blob, the blob's committed block list is also copied to the snapshot.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Any uncommitted blocks are not copied.</source>
          <target state="new">Any uncommitted blocks are not copied.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specifying an access condition</source>
          <target state="new">Specifying an access condition</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can specify an access condition so that the snapshot is created only if a condition is met.</source>
          <target state="new">You can specify an access condition so that the snapshot is created only if a condition is met.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To specify an access condition, use the AccessCondition property.</source>
          <target state="new">To specify an access condition, use the AccessCondition property.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the specified condition is not met, the snapshot is not created, and the Blob service returns status code HTTPStatusCode.PreconditionFailed.</source>
          <target state="new">If the specified condition is not met, the snapshot is not created, and the Blob service returns status code HTTPStatusCode.PreconditionFailed.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Deleting snapshots</source>
          <target state="new">Deleting snapshots</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A blob that has snapshots cannot be deleted unless the snapshots are also deleted.</source>
          <target state="new">A blob that has snapshots cannot be deleted unless the snapshots are also deleted.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can delete a snapshot individually, or tell the storage service to delete all snapshots when deleting the source blob.</source>
          <target state="new">You can delete a snapshot individually, or tell the storage service to delete all snapshots when deleting the source blob.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you attempt to delete a blob that still has snapshots, you'll get an error.</source>
          <target state="new">If you attempt to delete a blob that still has snapshots, you'll get an error.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Snapshots with Premium Storage</source>
          <target state="new">Snapshots with Premium Storage</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Using snapshots with Premium Storage follow these rules:</source>
          <target state="new">Using snapshots with Premium Storage follow these rules:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The number of snapshots per page blob in a Premium Storage account is limited to 100.</source>
          <target state="new">The number of snapshots per page blob in a Premium Storage account is limited to 100.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If that limit is exceeded, the Snapshot Blob operation returns error code 409 (<bpt id="p1">**</bpt>SnapshotCountExceeded<ept id="p1">**</ept>).</source>
          <target state="new">If that limit is exceeded, the Snapshot Blob operation returns error code 409 (<bpt id="p1">**</bpt>SnapshotCountExceeded<ept id="p1">**</ept>).</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A snapshot of a page blob in a Premium Storage account may be taken once every ten minutes.</source>
          <target state="new">A snapshot of a page blob in a Premium Storage account may be taken once every ten minutes.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If that rate is exceeded, the Snapshot Blob operation returns error code 409 (<bpt id="p1">**</bpt>SnaphotOperationRateExceeded<ept id="p1">**</ept>).</source>
          <target state="new">If that rate is exceeded, the Snapshot Blob operation returns error code 409 (<bpt id="p1">**</bpt>SnaphotOperationRateExceeded<ept id="p1">**</ept>).</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Reading a snapshot of a page blob in a Premium Storage account via Get Blob is not supported.</source>
          <target state="new">Reading a snapshot of a page blob in a Premium Storage account via Get Blob is not supported.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Calling Get Blob on a snapshot in a Premium Storage account returns error code 400 (<bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept>).</source>
          <target state="new">Calling Get Blob on a snapshot in a Premium Storage account returns error code 400 (<bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept>).</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>However, calling Get Blob Properties and Get Blob Metadata against a snapshot is supported.</source>
          <target state="new">However, calling Get Blob Properties and Get Blob Metadata against a snapshot is supported.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To read a snapshot, you can use the Copy Blob operation to copy a snapshot to another page blob in the account.</source>
          <target state="new">To read a snapshot, you can use the Copy Blob operation to copy a snapshot to another page blob in the account.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The destination blob for the copy operation must not have any existing snapshots.</source>
          <target state="new">The destination blob for the copy operation must not have any existing snapshots.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the destination blob does have snapshots, then Copy Blob returns error code 409 (<bpt id="p1">**</bpt>SnapshotsPresent<ept id="p1">**</ept>).</source>
          <target state="new">If the destination blob does have snapshots, then Copy Blob returns error code 409 (<bpt id="p1">**</bpt>SnapshotsPresent<ept id="p1">**</ept>).</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returning the absolute URI to a snapshot</source>
          <target state="new">Returning the absolute URI to a snapshot</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This C# code example creates a new snapshot and writes out the absolute URI for the primary location.</source>
          <target state="new">This C# code example creates a new snapshot and writes out the absolute URI for the primary location.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Understanding how snapshots accrue charges</source>
          <target state="new">Understanding how snapshots accrue charges</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Creating a snapshot, which is a read-only copy of a blob, can result in additional data storage charges to your account.</source>
          <target state="new">Creating a snapshot, which is a read-only copy of a blob, can result in additional data storage charges to your account.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When designing your application, it is important to be aware how these charges may accrue so that you can minimize unnecessary costs.</source>
          <target state="new">When designing your application, it is important to be aware how these charges may accrue so that you can minimize unnecessary costs.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Important billing considerations</source>
          <target state="new">Important billing considerations</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following list includes key points to consider when creating a snapshot.</source>
          <target state="new">The following list includes key points to consider when creating a snapshot.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Charges are incurred for unique blocks or pages, whether they are in the blob or in the snapshot.</source>
          <target state="new">Charges are incurred for unique blocks or pages, whether they are in the blob or in the snapshot.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Your account does not incur additional charges for snapshots associated with a blob until you update the blob on which they are based.</source>
          <target state="new">Your account does not incur additional charges for snapshots associated with a blob until you update the blob on which they are based.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Once you update the base blob, it diverges from its snapshots, and you will be charged for the unique blocks or pages in each blob or snapshot.</source>
          <target state="new">Once you update the base blob, it diverges from its snapshots, and you will be charged for the unique blocks or pages in each blob or snapshot.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When you replace a block within a block blob, that block is subsequently charged as a unique block.</source>
          <target state="new">When you replace a block within a block blob, that block is subsequently charged as a unique block.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This is true even if the block has the same block ID and the same data as it has in the snapshot.</source>
          <target state="new">This is true even if the block has the same block ID and the same data as it has in the snapshot.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Once the block is committed again, it diverges from its counterpart in any snapshot, and you will be charged for its data.</source>
          <target state="new">Once the block is committed again, it diverges from its counterpart in any snapshot, and you will be charged for its data.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The same holds true for a page in a page blob that’s updated with identical data.</source>
          <target state="new">The same holds true for a page in a page blob that’s updated with identical data.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Replacing a block blob by calling the UploadFile, UploadText, UploadStream, or UploadByteArray method replaces all of the blocks in that blob.</source>
          <target state="new">Replacing a block blob by calling the UploadFile, UploadText, UploadStream, or UploadByteArray method replaces all of the blocks in that blob.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you have a snapshot associated with that blob, all of the blocks in the base blob and snapshot will now diverge and you will be charged for all of the blocks in both blobs.</source>
          <target state="new">If you have a snapshot associated with that blob, all of the blocks in the base blob and snapshot will now diverge and you will be charged for all of the blocks in both blobs.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This is true even if the data in the base blob and the snapshot remain identical.</source>
          <target state="new">This is true even if the data in the base blob and the snapshot remain identical.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The Azure Blob service does not have a means to determine whether two blocks contain identical data.</source>
          <target state="new">The Azure Blob service does not have a means to determine whether two blocks contain identical data.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Each block that is uploaded and committed is treated as unique, even if it has the same data and the same block ID.</source>
          <target state="new">Each block that is uploaded and committed is treated as unique, even if it has the same data and the same block ID.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Because charges accrue for unique blocks, it is important to consider that updating a blob that has a snapshot will result in additional unique blocks and additional charges.</source>
          <target state="new">Because charges accrue for unique blocks, it is important to consider that updating a blob that has a snapshot will result in additional unique blocks and additional charges.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Best practices dictate that you manage snapshots carefully to avoid extra charges.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Best practices dictate that you manage snapshots carefully to avoid extra charges.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>It’s recommended that you manage snapshots in the following manner:</source>
          <target state="new">It’s recommended that you manage snapshots in the following manner:</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Delete and re-create snapshots associated with a blob whenever you update the blob, even if you are updating with identical data, unless your application design requires that you maintain snapshots.</source>
          <target state="new">Delete and re-create snapshots associated with a blob whenever you update the blob, even if you are updating with identical data, unless your application design requires that you maintain snapshots.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>By deleting and re-creating the blob’s snapshots, you can ensure that the blob and snapshots do not diverge.</source>
          <target state="new">By deleting and re-creating the blob’s snapshots, you can ensure that the blob and snapshots do not diverge.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If you are maintaining snapshots for a blob, avoid calling UploadFile, UploadText, UploadStream, or UploadByteArray to update the blob, as those methods replace all of the blocks in the blob.</source>
          <target state="new">If you are maintaining snapshots for a blob, avoid calling UploadFile, UploadText, UploadStream, or UploadByteArray to update the blob, as those methods replace all of the blocks in the blob.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Instead, update the fewest possible number of blocks by using the PutBlock and PutBlockList methods.</source>
          <target state="new">Instead, update the fewest possible number of blocks by using the PutBlock and PutBlockList methods.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Snapshot billing scenarios</source>
          <target state="new">Snapshot billing scenarios</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The following scenarios demonstrate how charges accrue for a block blob and its snapshots.</source>
          <target state="new">The following scenarios demonstrate how charges accrue for a block blob and its snapshots.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In Scenario 1, the base blob has not been updated since the snapshot was taken, so charges are incurred only for unique blocks 1, 2, and 3.</source>
          <target state="new">In Scenario 1, the base blob has not been updated since the snapshot was taken, so charges are incurred only for unique blocks 1, 2, and 3.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Azure Storage Resources</source>
          <target state="new">Azure Storage Resources</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In Scenario 2, the base blob has been updated, but the snapshot has not.</source>
          <target state="new">In Scenario 2, the base blob has been updated, but the snapshot has not.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Block 3 was updated, and even though it contains the same data and the same ID, it is not the same as block 3 in the snapshot.</source>
          <target state="new">Block 3 was updated, and even though it contains the same data and the same ID, it is not the same as block 3 in the snapshot.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>As a result, the account is charged for four blocks.</source>
          <target state="new">As a result, the account is charged for four blocks.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Azure Storage Resources</source>
          <target state="new">Azure Storage Resources</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In Scenario 3, the base blob has been updated, but the snapshot has not.</source>
          <target state="new">In Scenario 3, the base blob has been updated, but the snapshot has not.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Block 3 was replaced with block 4 in the base blob, but the snapshot still reflects block 3.</source>
          <target state="new">Block 3 was replaced with block 4 in the base blob, but the snapshot still reflects block 3.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>As a result, the account is charged for four blocks.</source>
          <target state="new">As a result, the account is charged for four blocks.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Azure Storage Resources</source>
          <target state="new">Azure Storage Resources</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In Scenario 4, the base blob has been completely updated and contains none of its original blocks.</source>
          <target state="new">In Scenario 4, the base blob has been completely updated and contains none of its original blocks.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>As a result, the account is charged for all eight unique blocks.</source>
          <target state="new">As a result, the account is charged for all eight unique blocks.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This scenario can occur if you are using an update method such as UploadFile, UploadText, UploadFromStream, or UploadByteArray, because these methods replace all of the contents of a blob.</source>
          <target state="new">This scenario can occur if you are using an update method such as UploadFile, UploadText, UploadFromStream, or UploadByteArray, because these methods replace all of the contents of a blob.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Azure Storage Resources</source>
          <target state="new">Azure Storage Resources</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aca721981bb3d7c8cbd426ff058b9b2a2a6cccd2</xliffext:olfilehash>
  </header>
</xliff>