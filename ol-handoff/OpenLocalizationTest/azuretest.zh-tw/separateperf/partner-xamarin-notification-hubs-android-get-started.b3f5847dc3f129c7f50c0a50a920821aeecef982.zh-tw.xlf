<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Get started with Notification Hubs for Xamarin.Android apps | Microsoft Azure</source>
          <target state="new">Get started with Notification Hubs for Xamarin.Android apps | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this tutorial, you learn how to use Azure Notification Hubs to send push notifications to a Xamarin Android application.</source>
          <target state="new">In this tutorial, you learn how to use Azure Notification Hubs to send push notifications to a Xamarin Android application.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get started with Notification Hubs</source>
          <target state="new">Get started with Notification Hubs</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to use Azure Notification Hubs to send push notifications to a Xamarin.Android application.</source>
          <target state="new">This tutorial shows you how to use Azure Notification Hubs to send push notifications to a Xamarin.Android application.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You'll create a blank Xamarin.Android app that receives push notifications by using Google Cloud Messaging (GCM).</source>
          <target state="new">You'll create a blank Xamarin.Android app that receives push notifications by using Google Cloud Messaging (GCM).</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you're finished, you'll be able to use your notification hub to broadcast push notifications to all the devices running your app.</source>
          <target state="new">When you're finished, you'll be able to use your notification hub to broadcast push notifications to all the devices running your app.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The finished code is available in the [NotificationHubs app][GitHub] sample.</source>
          <target state="new">The finished code is available in the [NotificationHubs app][GitHub] sample.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates the simple broadcast scenario in using Notification Hubs.</source>
          <target state="new">This tutorial demonstrates the simple broadcast scenario in using Notification Hubs.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This tutorial requires the following:</source>
          <target state="new">This tutorial requires the following:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>[Xamarin.Android]</source>
          <target state="new">[Xamarin.Android]</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Active Google account</source>
          <target state="new">Active Google account</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>[Azure Mobile Services Component]</source>
          <target state="new">[Azure Mobile Services Component]</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>[Azure Messaging Component]</source>
          <target state="new">[Azure Messaging Component]</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>[Google Cloud Messaging Client Component]</source>
          <target state="new">[Google Cloud Messaging Client Component]</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Completing this tutorial is a prerequisite for all other Notification Hubs tutorials for Xamarin.Android apps.</source>
          <target state="new">Completing this tutorial is a prerequisite for all other Notification Hubs tutorials for Xamarin.Android apps.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> To complete this tutorial, you must have an active Azure account.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> To complete this tutorial, you must have an active Azure account.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you don't have an account, you can create a free trial account in just a couple of minutes.</source>
          <target state="new">If you don't have an account, you can create a free trial account in just a couple of minutes.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A9C9624B5&amp;amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fdocumentation%2Farticles%2Fpartner-xamarin-notification-hubs-android-get-started%2F)</ept>.</source>
          <target state="new">For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A9C9624B5&amp;amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fdocumentation%2Farticles%2Fpartner-xamarin-notification-hubs-android-get-started%2F)</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="register"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Enable Google Cloud Messaging</source>
          <target state="new"><ph id="ph1">&lt;a name="register"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Enable Google Cloud Messaging</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="configure-hub"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Configure your notification hub</source>
          <target state="new"><ph id="ph1">&lt;a name="configure-hub"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Configure your notification hub</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="connecting-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Connect your app to the notification hub</source>
          <target state="new"><ph id="ph1">&lt;a name="connecting-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Connect your app to the notification hub</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Create a new project</source>
          <target state="new">Create a new project</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In Xamarin Studio (or Visual Studio), click <bpt id="p1">**</bpt>File<ept id="p1">**</ept> and <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Android Application<ept id="p3">**</ept> in the <bpt id="p4">**</bpt>New Solution<ept id="p4">**</ept> dialog, and finally click <bpt id="p5">**</bpt>OK<ept id="p5">**</ept>.</source>
          <target state="new">In Xamarin Studio (or Visual Studio), click <bpt id="p1">**</bpt>File<ept id="p1">**</ept> and <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Android Application<ept id="p3">**</ept> in the <bpt id="p4">**</bpt>New Solution<ept id="p4">**</ept> dialog, and finally click <bpt id="p5">**</bpt>OK<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This creates a new Android project.</source>
          <target state="new">This creates a new Android project.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Open the project properties by right-clicking your new project in the Solution view and choosing <bpt id="p1">**</bpt>Options<ept id="p1">**</ept>.</source>
          <target state="new">Open the project properties by right-clicking your new project in the Solution view and choosing <bpt id="p1">**</bpt>Options<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Android Application<ept id="p1">**</ept> item in the <bpt id="p2">**</bpt>Build<ept id="p2">**</ept> section.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Android Application<ept id="p1">**</ept> item in the <bpt id="p2">**</bpt>Build<ept id="p2">**</ept> section.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>Minimum Android version<ept id="p1">**</ept> to API Level 8.</source>
          <target state="new">Set the <bpt id="p1">**</bpt>Minimum Android version<ept id="p1">**</ept> to API Level 8.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>Target Android version<ept id="p1">**</ept> to the API version that you want to target (must be API level 8 or higher).</source>
          <target state="new">Set the <bpt id="p1">**</bpt>Target Android version<ept id="p1">**</ept> to the API version that you want to target (must be API level 8 or higher).</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Ensure that the first letter of your <bpt id="p1">**</bpt>Package name<ept id="p1">**</ept> is lowercase.</source>
          <target state="new">Ensure that the first letter of your <bpt id="p1">**</bpt>Package name<ept id="p1">**</ept> is lowercase.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> The first letter of the package name must be lowercase.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> The first letter of the package name must be lowercase.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Otherwise, you will receive application manifest errors when you register your <bpt id="p1">**</bpt>BroadcastReceiver<ept id="p1">**</ept> and <bpt id="p2">**</bpt>IntentFilter<ept id="p2">**</ept> for push notifications below.</source>
          <target state="new">Otherwise, you will receive application manifest errors when you register your <bpt id="p1">**</bpt>BroadcastReceiver<ept id="p1">**</ept> and <bpt id="p2">**</bpt>IntentFilter<ept id="p2">**</ept> for push notifications below.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Add the required components to your project</source>
          <target state="new">Add the required components to your project</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The Google Cloud Messaging Client available on the Xamarin Component Store simplifies the process of supporting push notifications in Xamarin.Android.</source>
          <target state="new">The Google Cloud Messaging Client available on the Xamarin Component Store simplifies the process of supporting push notifications in Xamarin.Android.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Right-click the Components folder in Xamarin.Android app and choose <bpt id="p1">**</bpt>Get More Components<ept id="p1">**</ept>.</source>
          <target state="new">Right-click the Components folder in Xamarin.Android app and choose <bpt id="p1">**</bpt>Get More Components<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Search for the <bpt id="p1">**</bpt>Azure Messaging<ept id="p1">**</ept> component and add it to the project.</source>
          <target state="new">Search for the <bpt id="p1">**</bpt>Azure Messaging<ept id="p1">**</ept> component and add it to the project.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Search for the <bpt id="p1">**</bpt>Google Cloud Messaging Client<ept id="p1">**</ept> component and add it to the project.</source>
          <target state="new">Search for the <bpt id="p1">**</bpt>Google Cloud Messaging Client<ept id="p1">**</ept> component and add it to the project.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Set up notification hubs in your project</source>
          <target state="new">Set up notification hubs in your project</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gather the following information for your Android app and notification hub:</source>
          <target state="new">Gather the following information for your Android app and notification hub:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GoogleProjectNumber<ept id="p1">**</ept>:  Get this Project Number value from the overview of your app on the Google Developer Portal.</source>
          <target state="new"><bpt id="p1">**</bpt>GoogleProjectNumber<ept id="p1">**</ept>:  Get this Project Number value from the overview of your app on the Google Developer Portal.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You made a note of this value earlier when you created the app on the portal.</source>
          <target state="new">You made a note of this value earlier when you created the app on the portal.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Listen connection string<ept id="p1">**</ept>: On the dashboard in the Azure portal, click <bpt id="p2">**</bpt>View connection strings<ept id="p2">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Listen connection string<ept id="p1">**</ept>: On the dashboard in the Azure portal, click <bpt id="p2">**</bpt>View connection strings<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Copy the <bpt id="p1">*</bpt>DefaultListenSharedAccessSignature<ept id="p1">*</ept> connection string for this value.</source>
          <target state="new">Copy the <bpt id="p1">*</bpt>DefaultListenSharedAccessSignature<ept id="p1">*</ept> connection string for this value.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hub name<ept id="p1">**</ept>: This is the name of your hub from the Azure portal.</source>
          <target state="new"><bpt id="p1">**</bpt>Hub name<ept id="p1">**</ept>: This is the name of your hub from the Azure portal.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">*</bpt>mynotificationhub2<ept id="p1">*</ept>.</source>
          <target state="new">For example, <bpt id="p1">*</bpt>mynotificationhub2<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">**</bpt>Constants.cs<ept id="p1">**</ept> class for your Xamarin project and define the following constant values in the class.</source>
          <target state="new">Create a <bpt id="p1">**</bpt>Constants.cs<ept id="p1">**</ept> class for your Xamarin project and define the following constant values in the class.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Replace the placeholders with your values.</source>
          <target state="new">Replace the placeholders with your values.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Add the following using statements to <bpt id="p1">**</bpt>MainActivity.cs<ept id="p1">**</ept>:</source>
          <target state="new">Add the following using statements to <bpt id="p1">**</bpt>MainActivity.cs<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Add an instance variable to the <ph id="ph1">`MainActivity`</ph> class that will be used to show an alert dialog when the app is running:</source>
          <target state="new">Add an instance variable to the <ph id="ph1">`MainActivity`</ph> class that will be used to show an alert dialog when the app is running:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Create the following method in the <bpt id="p1">**</bpt>MainActivity<ept id="p1">**</ept> class:</source>
          <target state="new">Create the following method in the <bpt id="p1">**</bpt>MainActivity<ept id="p1">**</ept> class:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Add a call to <ph id="ph1">`RegisterWithGCM`</ph> in the <ph id="ph2">`OnCreate`</ph> method of <bpt id="p1">**</bpt>MainActivity.cs<ept id="p1">**</ept>:</source>
          <target state="new">Add a call to <ph id="ph1">`RegisterWithGCM`</ph> in the <ph id="ph2">`OnCreate`</ph> method of <bpt id="p1">**</bpt>MainActivity.cs<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Create a new class, <bpt id="p1">**</bpt>MyBroadcastReceiver<ept id="p1">**</ept>.</source>
          <target state="new">Create a new class, <bpt id="p1">**</bpt>MyBroadcastReceiver<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> We will walk through creating a <bpt id="p1">**</bpt>BroadcastReceiver<ept id="p1">**</ept> class from scratch below.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> We will walk through creating a <bpt id="p1">**</bpt>BroadcastReceiver<ept id="p1">**</ept> class from scratch below.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>However, a quick alternative to manually creating <bpt id="p1">**</bpt>MyBroadcastReceiver.cs<ept id="p1">**</ept> is to refer to the <bpt id="p2">**</bpt>GcmService.cs<ept id="p2">**</ept> file found in the sample Xamarin.Android project included with the [NotificationHubs samples][GitHub].</source>
          <target state="new">However, a quick alternative to manually creating <bpt id="p1">**</bpt>MyBroadcastReceiver.cs<ept id="p1">**</ept> is to refer to the <bpt id="p2">**</bpt>GcmService.cs<ept id="p2">**</ept> file found in the sample Xamarin.Android project included with the [NotificationHubs samples][GitHub].</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Duplicating <bpt id="p1">**</bpt>GcmService.cs<ept id="p1">**</ept> and changing class names can be a great place to start as well.</source>
          <target state="new">Duplicating <bpt id="p1">**</bpt>GcmService.cs<ept id="p1">**</ept> and changing class names can be a great place to start as well.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Add the following using statements to <bpt id="p1">**</bpt>MyBroadcastReceiver.cs<ept id="p1">**</ept> (referring to the component and assembly that you added earlier):</source>
          <target state="new">Add the following using statements to <bpt id="p1">**</bpt>MyBroadcastReceiver.cs<ept id="p1">**</ept> (referring to the component and assembly that you added earlier):</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Add the following permission requests between the <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statements and the <bpt id="p2">**</bpt>namespace<ept id="p2">**</ept> declaration:</source>
          <target state="new">Add the following permission requests between the <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statements and the <bpt id="p2">**</bpt>namespace<ept id="p2">**</ept> declaration:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>MyBroadcastReceiver.cs<ept id="p1">**</ept>, change the <bpt id="p2">**</bpt>MyBroadcastReceiver<ept id="p2">**</ept> class to match the following:</source>
          <target state="new">In <bpt id="p1">**</bpt>MyBroadcastReceiver.cs<ept id="p1">**</ept>, change the <bpt id="p2">**</bpt>MyBroadcastReceiver<ept id="p2">**</ept> class to match the following:</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Add another class in <bpt id="p1">**</bpt>MyBroadcastReceiver.cs<ept id="p1">**</ept> named <bpt id="p2">**</bpt>PushHandlerService<ept id="p2">**</ept>, which derives from <bpt id="p3">**</bpt>GcmServiceBase<ept id="p3">**</ept>.</source>
          <target state="new">Add another class in <bpt id="p1">**</bpt>MyBroadcastReceiver.cs<ept id="p1">**</ept> named <bpt id="p2">**</bpt>PushHandlerService<ept id="p2">**</ept>, which derives from <bpt id="p3">**</bpt>GcmServiceBase<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Make sure to apply the <bpt id="p1">**</bpt>Service<ept id="p1">**</ept> attribute to the class:</source>
          <target state="new">Make sure to apply the <bpt id="p1">**</bpt>Service<ept id="p1">**</ept> attribute to the class:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GcmServiceBase<ept id="p1">**</ept> implements methods <bpt id="p2">**</bpt>OnRegistered()<ept id="p2">**</ept>, <bpt id="p3">**</bpt>OnUnRegistered()<ept id="p3">**</ept>, <bpt id="p4">**</bpt>OnMessage()<ept id="p4">**</ept>, <bpt id="p5">**</bpt>OnRecoverableError()<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>OnError()<ept id="p6">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>GcmServiceBase<ept id="p1">**</ept> implements methods <bpt id="p2">**</bpt>OnRegistered()<ept id="p2">**</ept>, <bpt id="p3">**</bpt>OnUnRegistered()<ept id="p3">**</ept>, <bpt id="p4">**</bpt>OnMessage()<ept id="p4">**</ept>, <bpt id="p5">**</bpt>OnRecoverableError()<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>OnError()<ept id="p6">**</ept>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Our implementation class <bpt id="p1">**</bpt>PushHandlerService<ept id="p1">**</ept> must override these methods, and these methods will fire in response to interacting with the notification hub.</source>
          <target state="new">Our implementation class <bpt id="p1">**</bpt>PushHandlerService<ept id="p1">**</ept> must override these methods, and these methods will fire in response to interacting with the notification hub.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p1">**</bpt>OnRegistered()<ept id="p1">**</ept> method in <bpt id="p2">**</bpt>PushHandlerService<ept id="p2">**</ept> by using the following code:</source>
          <target state="new">Override the <bpt id="p1">**</bpt>OnRegistered()<ept id="p1">**</ept> method in <bpt id="p2">**</bpt>PushHandlerService<ept id="p2">**</ept> by using the following code:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> In the <bpt id="p1">**</bpt>OnRegistered()<ept id="p1">**</ept> code above, you should note the ability to specify tags to register for specific messaging channels.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> In the <bpt id="p1">**</bpt>OnRegistered()<ept id="p1">**</ept> code above, you should note the ability to specify tags to register for specific messaging channels.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p1">**</bpt>OnMessage<ept id="p1">**</ept> method in <bpt id="p2">**</bpt>PushHandlerService<ept id="p2">**</ept> by using the following code:</source>
          <target state="new">Override the <bpt id="p1">**</bpt>OnMessage<ept id="p1">**</ept> method in <bpt id="p2">**</bpt>PushHandlerService<ept id="p2">**</ept> by using the following code:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Add the following <bpt id="p1">**</bpt>createNotification<ept id="p1">**</ept> and <bpt id="p2">**</bpt>dialogNotify<ept id="p2">**</ept> methods to <bpt id="p3">**</bpt>PushHandlerService<ept id="p3">**</ept> for notifying users when a notification is received.</source>
          <target state="new">Add the following <bpt id="p1">**</bpt>createNotification<ept id="p1">**</ept> and <bpt id="p2">**</bpt>dialogNotify<ept id="p2">**</ept> methods to <bpt id="p3">**</bpt>PushHandlerService<ept id="p3">**</ept> for notifying users when a notification is received.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Notification design in Android version 5.0 and later represents a significant departure from that of previous versions.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Notification design in Android version 5.0 and later represents a significant departure from that of previous versions.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you test this on Android 5.0 or later, the app will need to be running to receive the notification.</source>
          <target state="new">If you test this on Android 5.0 or later, the app will need to be running to receive the notification.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Android Notifications<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=615880)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Android Notifications<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=615880)</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Override abstract members <bpt id="p1">**</bpt>OnUnRegistered()<ept id="p1">**</ept>, <bpt id="p2">**</bpt>OnRecoverableError()<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>OnError()<ept id="p3">**</ept> so that your code compiles:</source>
          <target state="new">Override abstract members <bpt id="p1">**</bpt>OnUnRegistered()<ept id="p1">**</ept>, <bpt id="p2">**</bpt>OnRecoverableError()<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>OnError()<ept id="p3">**</ept> so that your code compiles:</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="run-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Run your app in the emulator</source>
          <target state="new"><ph id="ph1">&lt;a name="run-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Run your app in the emulator</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If you run this app in the emulator, make sure that you use an Android Virtual Device (AVD) that supports Google APIs.</source>
          <target state="new">If you run this app in the emulator, make sure that you use an Android Virtual Device (AVD) that supports Google APIs.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> In order to receive push notifications, you must set up a Google account on your Android Virtual Device.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> In order to receive push notifications, you must set up a Google account on your Android Virtual Device.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>(In the emulator, navigate to <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Add Account<ept id="p2">**</ept>.) Also, make sure that the emulator is connected to the Internet.</source>
          <target state="new">(In the emulator, navigate to <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Add Account<ept id="p2">**</ept>.) Also, make sure that the emulator is connected to the Internet.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Notification design in Android version 5.0 and later represents a significant departure from that of previous versions.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Notification design in Android version 5.0 and later represents a significant departure from that of previous versions.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If you test this on Android 5.0 or later, the app will need to be running to receive the notification.</source>
          <target state="new">If you test this on Android 5.0 or later, the app will need to be running to receive the notification.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Android Notifications<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=615880)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Android Notifications<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=615880)</ept>.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>From <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Open Android Emulator Manager<ept id="p2">**</ept>, select your device, and then click <bpt id="p3">**</bpt>Edit<ept id="p3">**</ept>.</source>
          <target state="new">From <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Open Android Emulator Manager<ept id="p2">**</ept>, select your device, and then click <bpt id="p3">**</bpt>Edit<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Google APIs<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Target<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Google APIs<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Target<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>On the top toolbar, click <bpt id="p1">**</bpt>Run<ept id="p1">**</ept>, and then select your app.</source>
          <target state="new">On the top toolbar, click <bpt id="p1">**</bpt>Run<ept id="p1">**</ept>, and then select your app.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This starts the emulator and runs the app.</source>
          <target state="new">This starts the emulator and runs the app.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The app retrieves the <bpt id="p1">*</bpt>registrationId<ept id="p1">*</ept> from GCM and registers with the notification hub.</source>
          <target state="new">The app retrieves the <bpt id="p1">*</bpt>registrationId<ept id="p1">*</ept> from GCM and registers with the notification hub.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Send notifications from your backend</source>
          <target state="new">Send notifications from your backend</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can test receiving notifications in your app by sending notifications in the Azure portal via the debug tab on the notification hub, as shown in the screen below.</source>
          <target state="new">You can test receiving notifications in your app by sending notifications in the Azure portal via the debug tab on the notification hub, as shown in the screen below.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Push notifications are normally sent in a backend service like Mobile Services or ASP.NET through a compatible library.</source>
          <target state="new">Push notifications are normally sent in a backend service like Mobile Services or ASP.NET through a compatible library.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can also use the REST API directly to send notification messages if a library is not available for your backend.</source>
          <target state="new">You can also use the REST API directly to send notification messages if a library is not available for your backend.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Here is a list of some other tutorials that you may want to review for sending notifications:</source>
          <target state="new">Here is a list of some other tutorials that you may want to review for sending notifications:</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>ASP.NET: See [Use Notification Hubs to push notifications to users].</source>
          <target state="new">ASP.NET: See [Use Notification Hubs to push notifications to users].</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs Java SDK: See <bpt id="p1">[</bpt>How to use Notification Hubs from Java<ept id="p1">](notification-hubs-java-backend-how-to.md)</ept> for sending notifications from Java.</source>
          <target state="new">Azure Notification Hubs Java SDK: See <bpt id="p1">[</bpt>How to use Notification Hubs from Java<ept id="p1">](notification-hubs-java-backend-how-to.md)</ept> for sending notifications from Java.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This has been tested in Eclipse for Android Development.</source>
          <target state="new">This has been tested in Eclipse for Android Development.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PHP: See <bpt id="p1">[</bpt>How to use Notification Hubs from PHP<ept id="p1">](notification-hubs-php-backend-how-to.md)</ept>.</source>
          <target state="new">PHP: See <bpt id="p1">[</bpt>How to use Notification Hubs from PHP<ept id="p1">](notification-hubs-php-backend-how-to.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In the next subsections of the tutorial, you send notifications by using a .NET console app, and by using a mobile service through a node script.</source>
          <target state="new">In the next subsections of the tutorial, you send notifications by using a .NET console app, and by using a mobile service through a node script.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Send notifications by using a .NET app</source>
          <target state="new">Send notifications by using a .NET app</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Microsoft provides the Azure Service Bus SDK for sending notifications on the .NET platform.</source>
          <target state="new">Microsoft provides the Azure Service Bus SDK for sending notifications on the .NET platform.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>In this section, you will create a .NET console application with Visual Studio to use the Azure Service Bus SDK to send a notification.</source>
          <target state="new">In this section, you will create a .NET console application with Visual Studio to use the Azure Service Bus SDK to send a notification.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Create a new Visual C# console application:</source>
          <target state="new">Create a new Visual C# console application:</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Add a reference to the Azure Service Bus SDK by using the <ph id="ph1">&lt;a href="http://nuget.org/packages/WindowsAzure.ServiceBus/"&gt;</ph>WindowsAzure.ServiceBus NuGet package<ph id="ph2">&lt;/a&gt;</ph>.</source>
          <target state="new">Add a reference to the Azure Service Bus SDK by using the <ph id="ph1">&lt;a href="http://nuget.org/packages/WindowsAzure.ServiceBus/"&gt;</ph>WindowsAzure.ServiceBus NuGet package<ph id="ph2">&lt;/a&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In the Visual Studio main menu, click <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Library Package Manager<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Package Manager Console<ept id="p3">**</ept>.</source>
          <target state="new">In the Visual Studio main menu, click <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Library Package Manager<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Package Manager Console<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Then, in the console window, type:</source>
          <target state="new">Then, in the console window, type:</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>and press Enter.</source>
          <target state="new">and press Enter.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Open the file Program.cs and add the following using statement:</source>
          <target state="new">Open the file Program.cs and add the following using statement:</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>In your <ph id="ph1">`Program`</ph> class, add the following method.</source>
          <target state="new">In your <ph id="ph1">`Program`</ph> class, add the following method.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Update the placeholder text with your <bpt id="p1">*</bpt>DefaultFullSharedAccessSignature<ept id="p1">*</ept> connection string and hub name from the Azure portal.</source>
          <target state="new">Update the placeholder text with your <bpt id="p1">*</bpt>DefaultFullSharedAccessSignature<ept id="p1">*</ept> connection string and hub name from the Azure portal.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Add the following lines in your <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method:</source>
          <target state="new">Add the following lines in your <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method:</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Press the F5 key to run the app.</source>
          <target state="new">Press the F5 key to run the app.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You should receive a notification in the app.</source>
          <target state="new">You should receive a notification in the app.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Send notifications by using a mobile service</source>
          <target state="new">Send notifications by using a mobile service</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Follow [Get started with Mobile Services].</source>
          <target state="new">Follow [Get started with Mobile Services].</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Sign in to the [Azure portal], and select your mobile service.</source>
          <target state="new">Sign in to the [Azure portal], and select your mobile service.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Scheduler<ept id="p1">**</ept> tab on the top.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Scheduler<ept id="p1">**</ept> tab on the top.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Create a new scheduled job, insert a name, and select <bpt id="p1">**</bpt>On demand<ept id="p1">**</ept>.</source>
          <target state="new">Create a new scheduled job, insert a name, and select <bpt id="p1">**</bpt>On demand<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When the job is created, click the job name.</source>
          <target state="new">When the job is created, click the job name.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Then click the <bpt id="p1">**</bpt>Script<ept id="p1">**</ept> tab on the top bar.</source>
          <target state="new">Then click the <bpt id="p1">**</bpt>Script<ept id="p1">**</ept> tab on the top bar.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Insert the following script inside your scheduler function.</source>
          <target state="new">Insert the following script inside your scheduler function.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Make sure to replace the placeholders with your notification hub name and the connection string for <bpt id="p1">*</bpt>DefaultFullSharedAccessSignature<ept id="p1">*</ept> that you obtained earlier.</source>
          <target state="new">Make sure to replace the placeholders with your notification hub name and the connection string for <bpt id="p1">*</bpt>DefaultFullSharedAccessSignature<ept id="p1">*</ept> that you obtained earlier.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Run Once<ept id="p1">**</ept> on the bottom bar.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Run Once<ept id="p1">**</ept> on the bottom bar.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>You should receive a toast notification.</source>
          <target state="new">You should receive a toast notification.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="next-steps"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Next steps</source>
          <target state="new"><ph id="ph1">&lt;a name="next-steps"&gt;</ph> <ph id="ph2">&lt;/a&gt;</ph>Next steps</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In this simple example, you broadcasted notifications to all your Android devices.</source>
          <target state="new">In this simple example, you broadcasted notifications to all your Android devices.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In order to target specific users, refer to the tutorial [Use Notification Hubs to push notifications to users].</source>
          <target state="new">In order to target specific users, refer to the tutorial [Use Notification Hubs to push notifications to users].</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If you want to segment your users by interest groups, you can read [Use Notification Hubs to send breaking news].</source>
          <target state="new">If you want to segment your users by interest groups, you can read [Use Notification Hubs to send breaking news].</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Learn more about how to use Notification Hubs in [Notification Hubs Guidance] and in the [Notification Hubs How-To for Android].</source>
          <target state="new">Learn more about how to use Notification Hubs in [Notification Hubs Guidance] and in the [Notification Hubs How-To for Android].</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7c8f4a5d6973a9c45e966020301418e88e4f0c7</xliffext:olfilehash>
  </header>
</xliff>