<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Recover your mobile service in the event of a disaster | Microsoft Azure</source>
          <target state="new">Recover your mobile service in the event of a disaster | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to recover your mobile service in the event of a disaster.</source>
          <target state="new">Learn how to recover your mobile service in the event of a disaster.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Recover your mobile service in the event of a disaster</source>
          <target state="new">Recover your mobile service in the event of a disaster</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When you use Azure Mobile Services to deploy an app, you can use its built-in features to ensure business continuity in the event of availability problems, such as server failures, network disruptions, data loss, and widespread facilities loss.</source>
          <target state="new">When you use Azure Mobile Services to deploy an app, you can use its built-in features to ensure business continuity in the event of availability problems, such as server failures, network disruptions, data loss, and widespread facilities loss.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By deploying your app using Azure Mobile Services you are taking advantage of many fault tolerance and infrastructure capabilities that you would have to design, implement, and manage if you were to deploy a traditional on-premise solution.</source>
          <target state="new">By deploying your app using Azure Mobile Services you are taking advantage of many fault tolerance and infrastructure capabilities that you would have to design, implement, and manage if you were to deploy a traditional on-premise solution.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Azure mitigates a large fraction of potential failures at a fraction of the cost.</source>
          <target state="new">Azure mitigates a large fraction of potential failures at a fraction of the cost.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="prepare"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Prepare for possible disasters</source>
          <target state="new"><ph id="ph1">&lt;a name="prepare"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Prepare for possible disasters</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To make recovery easier in case of an availability problem, you can prepare for it in advance:</source>
          <target state="new">To make recovery easier in case of an availability problem, you can prepare for it in advance:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Back up your data in the Azure mobile service SQL Database<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Back up your data in the Azure mobile service SQL Database<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Your mobile service application data is stored in an Azure SQL Database.</source>
          <target state="new">Your mobile service application data is stored in an Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>We recommend that you back it up as prescribed in the [SQL Database business continuity guidance].</source>
          <target state="new">We recommend that you back it up as prescribed in the [SQL Database business continuity guidance].</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Back up your mobile service scripts<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Back up your mobile service scripts<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>We recommend that you store your mobile service scripts in a source-control system such as [Team Foundation Service] or [GitHub] and not rely only on the copies in the mobile service itself.</source>
          <target state="new">We recommend that you store your mobile service scripts in a source-control system such as [Team Foundation Service] or [GitHub] and not rely only on the copies in the mobile service itself.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can download the scripts via the Azure portal, using the Mobile Services [source control feature], or [using the Azure CLI].</source>
          <target state="new">You can download the scripts via the Azure portal, using the Mobile Services [source control feature], or [using the Azure CLI].</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Pay close attention to features labeled as "preview" in the portal, as recovery for those scripts is not guaranteed and you might need to recover them from your own source control original.</source>
          <target state="new">Pay close attention to features labeled as "preview" in the portal, as recovery for those scripts is not guaranteed and you might need to recover them from your own source control original.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Reserve a secondary mobile service<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Reserve a secondary mobile service<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the event of an availability problem with your mobile service, you may have to redeploy it to an alternate Azure region.</source>
          <target state="new">In the event of an availability problem with your mobile service, you may have to redeploy it to an alternate Azure region.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To ensure capacity is available (for example under rare circumstances such as the loss of an entire region), we recommend that you create a secondary mobile service in your alternate region and set its mode the same as or higher than the mode of your primary service.</source>
          <target state="new">To ensure capacity is available (for example under rare circumstances such as the loss of an entire region), we recommend that you create a secondary mobile service in your alternate region and set its mode the same as or higher than the mode of your primary service.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>(If your primary service is in Basic mode, you can make the secondary service either Basic or Standard.</source>
          <target state="new">(If your primary service is in Basic mode, you can make the secondary service either Basic or Standard.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>But if the primary is Standard, then the secondary must also be Standard.)</source>
          <target state="new">But if the primary is Standard, then the secondary must also be Standard.)</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="watch"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Watch for signs of a problem</source>
          <target state="new"><ph id="ph1">&lt;a name="watch"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Watch for signs of a problem</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These circumstances indicate a problem that might require a recovery operation:</source>
          <target state="new">These circumstances indicate a problem that might require a recovery operation:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Apps that are connected to your mobile service can't communicate with it for an extended period of time.</source>
          <target state="new">Apps that are connected to your mobile service can't communicate with it for an extended period of time.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Mobile service status is displayed as <bpt id="p1">**</bpt>Unhealthy<ept id="p1">**</ept> in the [Azure portal].</source>
          <target state="new">Mobile service status is displayed as <bpt id="p1">**</bpt>Unhealthy<ept id="p1">**</ept> in the [Azure portal].</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>Unhealthy<ept id="p1">**</ept> banner appears at the top of every tab for your mobile service in the Azure portal, and management operations produce error messages.</source>
          <target state="new">An <bpt id="p1">**</bpt>Unhealthy<ept id="p1">**</ept> banner appears at the top of every tab for your mobile service in the Azure portal, and management operations produce error messages.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The [Azure Service Dashboard] indicates an availability problem.</source>
          <target state="new">The [Azure Service Dashboard] indicates an availability problem.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="recover"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Recover from a disaster</source>
          <target state="new"><ph id="ph1">&lt;a name="recover"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Recover from a disaster</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When a problem occurs, use the Service Dashboard to get guidance and updates.</source>
          <target state="new">When a problem occurs, use the Service Dashboard to get guidance and updates.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you're prompted by the Service Dashboard, execute the following steps to restore your mobile service to a running state in an alternate Azure region.</source>
          <target state="new">If you're prompted by the Service Dashboard, execute the following steps to restore your mobile service to a running state in an alternate Azure region.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you created a secondary service in advance, its capacity will be used to restore the primary service.</source>
          <target state="new">If you created a secondary service in advance, its capacity will be used to restore the primary service.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Because the URL and application key of the primary service is unchanged after recovery, you don't have to update any apps that refer to it.</source>
          <target state="new">Because the URL and application key of the primary service is unchanged after recovery, you don't have to update any apps that refer to it.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To recover your mobile service after an outage:</source>
          <target state="new">To recover your mobile service after an outage:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the Azure portal, ensure that the status of your service is reported as <bpt id="p1">**</bpt>Unhealthy<ept id="p1">**</ept>.</source>
          <target state="new">In the Azure portal, ensure that the status of your service is reported as <bpt id="p1">**</bpt>Unhealthy<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you already reserved a secondary mobile service, you can skip this step.</source>
          <target state="new">If you already reserved a secondary mobile service, you can skip this step.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you haven't already reserved a secondary mobile service, create one now in another Azure region.</source>
          <target state="new">If you haven't already reserved a secondary mobile service, create one now in another Azure region.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Set its scale mode the same as the mode of your primary service.</source>
          <target state="new">Set its scale mode the same as the mode of your primary service.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Configure the Azure Command-Line Interface (Azure CLI) to work with your subscription, as described in [Automate mobile services with the Azure CLI].</source>
          <target state="new">Configure the Azure Command-Line Interface (Azure CLI) to work with your subscription, as described in [Automate mobile services with the Azure CLI].</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Now you can use your secondary service to recover your primary one.</source>
          <target state="new">Now you can use your secondary service to recover your primary one.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> In addition to migrating your files, the migrate command also updates the host name of your primary service to point to your secondary service so that client applications do not need to be updated.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> In addition to migrating your files, the migrate command also updates the host name of your primary service to point to your secondary service so that client applications do not need to be updated.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, it will take up to 30 minutes for the host name to resolve to the new service.</source>
          <target state="new">However, it will take up to 30 minutes for the host name to resolve to the new service.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For this reason, it is recommended that the migrate command only be used in disaster recovery scenarios.</source>
          <target state="new">For this reason, it is recommended that the migrate command only be used in disaster recovery scenarios.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> When you execute the command in this step, the secondary service is deleted so that its capacity can be used to recover the primary service.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> When you execute the command in this step, the secondary service is deleted so that its capacity can be used to recover the primary service.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>We recommend that you back up your scripts and settings before you run the command, if you would like to keep them.</source>
          <target state="new">We recommend that you back up your scripts and settings before you run the command, if you would like to keep them.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When you're ready, execute this command:</source>
          <target state="new">When you're ready, execute this command:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> It may take a few minutes after the command completes until you can see the changes in the portal.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> It may take a few minutes after the command completes until you can see the changes in the portal.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Verify that all scripts have been recovered correctly by comparing them to your originals in source control.</source>
          <target state="new">Verify that all scripts have been recovered correctly by comparing them to your originals in source control.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In most cases, scripts are automatically recovered without data loss, but if you find a discrepancy, you can recover that script manually.</source>
          <target state="new">In most cases, scripts are automatically recovered without data loss, but if you find a discrepancy, you can recover that script manually.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Make sure that your recovered service is communicating with your Azure SQL Database.</source>
          <target state="new">Make sure that your recovered service is communicating with your Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The recover command recovers the mobile service, but retains the connection to the original database.</source>
          <target state="new">The recover command recovers the mobile service, but retains the connection to the original database.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the problem in the primary Azure region also affects the database, the recovered service may still not be running correctly.</source>
          <target state="new">If the problem in the primary Azure region also affects the database, the recovered service may still not be running correctly.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can use the Azure Service Dashboard to examine the database status for a given region.</source>
          <target state="new">You can use the Azure Service Dashboard to examine the database status for a given region.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the original database is not working, you can recover it:</source>
          <target state="new">If the original database is not working, you can recover it:</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Recover your Azure SQL Database to the Azure region where you just recovered your mobile service, as described in [SQL Database business continuity guidance].</source>
          <target state="new">Recover your Azure SQL Database to the Azure region where you just recovered your mobile service, as described in [SQL Database business continuity guidance].</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the Azure portal, on the <bpt id="p1">**</bpt>"Configure"<ept id="p1">**</ept> tab of your mobile service, choose "Change database" and then select the newly recovered database.</source>
          <target state="new">In the Azure portal, on the <bpt id="p1">**</bpt>"Configure"<ept id="p1">**</ept> tab of your mobile service, choose "Change database" and then select the newly recovered database.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Your mobile service is now hosted in a different physical location.</source>
          <target state="new">Your mobile service is now hosted in a different physical location.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You'll need to update your publishing and/or git credentials to allow for updating your running site.</source>
          <target state="new">You'll need to update your publishing and/or git credentials to allow for updating your running site.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If you are using a <bpt id="p1">**</bpt>.NET backend<ept id="p1">**</ept>, set up your publishing profile again, as described in <bpt id="p2">[</bpt>Publish your mobile service<ept id="p2">](mobile-services-dotnet-backend-windows-store-dotnet-get-started/#publish-your-mobile-service)</ept>.</source>
          <target state="new">If you are using a <bpt id="p1">**</bpt>.NET backend<ept id="p1">**</ept>, set up your publishing profile again, as described in <bpt id="p2">[</bpt>Publish your mobile service<ept id="p2">](mobile-services-dotnet-backend-windows-store-dotnet-get-started/#publish-your-mobile-service)</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This will update your publishing details to point to the new service location.</source>
          <target state="new">This will update your publishing details to point to the new service location.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you are using a <bpt id="p1">**</bpt>Javascript backend<ept id="p1">**</ept> and managing your service with the Portal, you don't need to take any extra action.</source>
          <target state="new">If you are using a <bpt id="p1">**</bpt>Javascript backend<ept id="p1">**</ept> and managing your service with the Portal, you don't need to take any extra action.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you are using a <bpt id="p1">**</bpt>Javascript backend<ept id="p1">**</ept> and managing your service with node, update your git remote to point to the new repository.</source>
          <target state="new">If you are using a <bpt id="p1">**</bpt>Javascript backend<ept id="p1">**</ept> and managing your service with node, update your git remote to point to the new repository.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To do this, you remove the .git file path from your git remote:</source>
          <target state="new">To do this, you remove the .git file path from your git remote:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Find your current origin remote:</source>
          <target state="new">Find your current origin remote:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>git remote -v</source>
          <target state="new">git remote -v</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>origin  https://myservice.scm.azure-mobile.net/myservice.git (fetch)</source>
          <target state="new">origin  https://myservice.scm.azure-mobile.net/myservice.git (fetch)</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>origin  https://myservice.scm.azure-mobile.net/myservice.git (push)</source>
          <target state="new">origin  https://myservice.scm.azure-mobile.net/myservice.git (push)</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Update the remote using with the same url, but without the final .git file path:</source>
          <target state="new">Update the remote using with the same url, but without the final .git file path:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>git remote set-url origin https://myservice.scm.azure-mobile.net</source>
          <target state="new">git remote set-url origin https://myservice.scm.azure-mobile.net</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Pull from origin to verify that it is working correctly.</source>
          <target state="new">Pull from origin to verify that it is working correctly.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Now you should be in a state where your mobile service has been recovered to a new Azure region and is now accepting traffic from your store apps using its original URL.</source>
          <target state="new">Now you should be in a state where your mobile service has been recovered to a new Azure region and is now accepting traffic from your store apps using its original URL.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c0509703ab21131cb3ce367ee9e8ca7e702f60a</xliffext:olfilehash>
  </header>
</xliff>