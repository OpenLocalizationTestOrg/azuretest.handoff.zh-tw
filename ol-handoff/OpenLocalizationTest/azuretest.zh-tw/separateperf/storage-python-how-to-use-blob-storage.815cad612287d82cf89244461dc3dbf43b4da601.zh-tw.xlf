<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to use Azure Blob storage from Python | Microsoft Azure</source>
          <target state="new">How to use Azure Blob storage from Python | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use the Azure Blob storage from Python to upload, list, download, and delete blobs.</source>
          <target state="new">Learn how to use the Azure Blob storage from Python to upload, list, download, and delete blobs.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to use Azure Blob storage from Python</source>
          <target state="new">How to use Azure Blob storage from Python</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article will show you how to perform common scenarios using Blob storage.</source>
          <target state="new">This article will show you how to perform common scenarios using Blob storage.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The samples are written in Python and use the <bpt id="p1">[</bpt>Python Azure Storage package<ept id="p1">][]</ept>.</source>
          <target state="new">The samples are written in Python and use the <bpt id="p1">[</bpt>Python Azure Storage package<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The scenarios covered include uploading, listing,</source>
          <target state="new">The scenarios covered include uploading, listing,</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>downloading, and deleting blobs.</source>
          <target state="new">downloading, and deleting blobs.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Create a container</source>
          <target state="new">Create a container</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you need to install Python or the <bpt id="p1">[</bpt>Python Azure package<ept id="p1">][]</ept>, see the <bpt id="p2">[</bpt>Python Installation Guide<ept id="p2">](../python-how-to-install.md)</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you need to install Python or the <bpt id="p1">[</bpt>Python Azure package<ept id="p1">][]</ept>, see the <bpt id="p2">[</bpt>Python Installation Guide<ept id="p2">](../python-how-to-install.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>BlobService<ept id="p1">**</ept> object lets you work with containers and blobs.</source>
          <target state="new">The <bpt id="p1">**</bpt>BlobService<ept id="p1">**</ept> object lets you work with containers and blobs.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="new">The</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>following code creates a <bpt id="p1">**</bpt>BlobService<ept id="p1">**</ept> object.</source>
          <target state="new">following code creates a <bpt id="p1">**</bpt>BlobService<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add the following near</source>
          <target state="new">Add the following near</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>the top of any Python file in which you wish to programmatically access Azure Storage.</source>
          <target state="new">the top of any Python file in which you wish to programmatically access Azure Storage.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code creates a <bpt id="p1">**</bpt>BlobService<ept id="p1">**</ept> object using the storage account name and account key.</source>
          <target state="new">The following code creates a <bpt id="p1">**</bpt>BlobService<ept id="p1">**</ept> object using the storage account name and account key.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Replace 'myaccount' and 'mykey' with the real account and key.</source>
          <target state="new">Replace 'myaccount' and 'mykey' with the real account and key.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the following code example, you can use a <bpt id="p1">**</bpt>BlobService<ept id="p1">**</ept> object to create the container if it doesn't exist.</source>
          <target state="new">In the following code example, you can use a <bpt id="p1">**</bpt>BlobService<ept id="p1">**</ept> object to create the container if it doesn't exist.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>By default, the new container is private, so you must specify your storage access key (as you did earlier) to download blobs from this container.</source>
          <target state="new">By default, the new container is private, so you must specify your storage access key (as you did earlier) to download blobs from this container.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you want to make the files within the container available to everyone, you can create the container and pass the public access level using the following code.</source>
          <target state="new">If you want to make the files within the container available to everyone, you can create the container and pass the public access level using the following code.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Alternatively, you can modify a container after you have created it using the following code.</source>
          <target state="new">Alternatively, you can modify a container after you have created it using the following code.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>After this change, anyone on the Internet can see blobs in a public</source>
          <target state="new">After this change, anyone on the Internet can see blobs in a public</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>container, but only you can modify or delete them.</source>
          <target state="new">container, but only you can modify or delete them.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Upload a blob into a container</source>
          <target state="new">Upload a blob into a container</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To upload data to a blob, use the <bpt id="p1">**</bpt>put\_block\_blob\_from\_path<ept id="p1">**</ept>, <bpt id="p2">**</bpt>put\_block\_blob\_from\_file<ept id="p2">**</ept>, <bpt id="p3">**</bpt>put\_block\_blob\_from\_bytes<ept id="p3">**</ept> or <bpt id="p4">**</bpt>put\_block\_blob\_from\_text<ept id="p4">**</ept> methods.</source>
          <target state="new">To upload data to a blob, use the <bpt id="p1">**</bpt>put\_block\_blob\_from\_path<ept id="p1">**</ept>, <bpt id="p2">**</bpt>put\_block\_blob\_from\_file<ept id="p2">**</ept>, <bpt id="p3">**</bpt>put\_block\_blob\_from\_bytes<ept id="p3">**</ept> or <bpt id="p4">**</bpt>put\_block\_blob\_from\_text<ept id="p4">**</ept> methods.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>They are high-level methods that perform the necessary chunking when the size of the data exceeds 64 MB.</source>
          <target state="new">They are high-level methods that perform the necessary chunking when the size of the data exceeds 64 MB.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>put\_block\_blob\_from\_path<ept id="p1">**</ept> uploads the contents of a file from the specified path, and <bpt id="p2">**</bpt>put\_block\_blob\_from\_file<ept id="p2">**</ept> uploads the contents from an already opened file/stream.</source>
          <target state="new"><bpt id="p1">**</bpt>put\_block\_blob\_from\_path<ept id="p1">**</ept> uploads the contents of a file from the specified path, and <bpt id="p2">**</bpt>put\_block\_blob\_from\_file<ept id="p2">**</ept> uploads the contents from an already opened file/stream.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>put\_block\_blob\_from\_bytes<ept id="p1">**</ept> uploads an array of bytes, and <bpt id="p2">**</bpt>put\_block\_blob\_from\_text<ept id="p2">**</ept> uploads the specified text value using the specified encoding (defaults to UTF-8).</source>
          <target state="new"><bpt id="p1">**</bpt>put\_block\_blob\_from\_bytes<ept id="p1">**</ept> uploads an array of bytes, and <bpt id="p2">**</bpt>put\_block\_blob\_from\_text<ept id="p2">**</ept> uploads the specified text value using the specified encoding (defaults to UTF-8).</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example uploads the contents of the <bpt id="p1">**</bpt>sunset.png<ept id="p1">**</ept> file into the <bpt id="p2">**</bpt>myblob<ept id="p2">**</ept> blob.</source>
          <target state="new">The following example uploads the contents of the <bpt id="p1">**</bpt>sunset.png<ept id="p1">**</ept> file into the <bpt id="p2">**</bpt>myblob<ept id="p2">**</ept> blob.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>List the blobs in a container</source>
          <target state="new">List the blobs in a container</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To list the blobs in a container, use the <bpt id="p1">**</bpt>list\_blobs<ept id="p1">**</ept> method.</source>
          <target state="new">To list the blobs in a container, use the <bpt id="p1">**</bpt>list\_blobs<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Each</source>
          <target state="new">Each</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>call to <bpt id="p1">**</bpt>list\_blobs<ept id="p1">**</ept> will return a segment of results.</source>
          <target state="new">call to <bpt id="p1">**</bpt>list\_blobs<ept id="p1">**</ept> will return a segment of results.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To get all results,</source>
          <target state="new">To get all results,</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>check the <bpt id="p1">**</bpt>next\_marker<ept id="p1">**</ept> of the results and call <bpt id="p2">**</bpt>list\_blobs<ept id="p2">**</ept> again as</source>
          <target state="new">check the <bpt id="p1">**</bpt>next\_marker<ept id="p1">**</ept> of the results and call <bpt id="p2">**</bpt>list\_blobs<ept id="p2">**</ept> again as</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>needed.</source>
          <target state="new">needed.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following code outputs the <bpt id="p1">**</bpt>name<ept id="p1">**</ept> of each blob in a container</source>
          <target state="new">The following code outputs the <bpt id="p1">**</bpt>name<ept id="p1">**</ept> of each blob in a container</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>to the console.</source>
          <target state="new">to the console.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Download blobs</source>
          <target state="new">Download blobs</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Each segment of results can contain a variable number of blobs up to a maximum</source>
          <target state="new">Each segment of results can contain a variable number of blobs up to a maximum</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>of 5000.</source>
          <target state="new">of 5000.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>next\_marker<ept id="p1">**</ept> exists for a particular segment, there may be</source>
          <target state="new">If <bpt id="p1">**</bpt>next\_marker<ept id="p1">**</ept> exists for a particular segment, there may be</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>more blobs in the container.</source>
          <target state="new">more blobs in the container.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To download data from a blob, use <bpt id="p1">**</bpt>get\_blob\_to\_path<ept id="p1">**</ept>, <bpt id="p2">**</bpt>get\_blob\_to\_file<ept id="p2">**</ept>, <bpt id="p3">**</bpt>get\_blob\_to\_bytes<ept id="p3">**</ept>, or <bpt id="p4">**</bpt>get\_blob\_to\_text<ept id="p4">**</ept>.</source>
          <target state="new">To download data from a blob, use <bpt id="p1">**</bpt>get\_blob\_to\_path<ept id="p1">**</ept>, <bpt id="p2">**</bpt>get\_blob\_to\_file<ept id="p2">**</ept>, <bpt id="p3">**</bpt>get\_blob\_to\_bytes<ept id="p3">**</ept>, or <bpt id="p4">**</bpt>get\_blob\_to\_text<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>They are high-level methods that perform the necessary chunking when the size of the data exceeds 64 MB.</source>
          <target state="new">They are high-level methods that perform the necessary chunking when the size of the data exceeds 64 MB.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example demonstrates using <bpt id="p1">**</bpt>get\_blob\_to\_path<ept id="p1">**</ept> to download the contents of the <bpt id="p2">**</bpt>myblob<ept id="p2">**</ept> blob and store it to the <bpt id="p3">**</bpt>out-sunset.png<ept id="p3">**</ept> file.</source>
          <target state="new">The following example demonstrates using <bpt id="p1">**</bpt>get\_blob\_to\_path<ept id="p1">**</ept> to download the contents of the <bpt id="p2">**</bpt>myblob<ept id="p2">**</ept> blob and store it to the <bpt id="p3">**</bpt>out-sunset.png<ept id="p3">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Delete a blob</source>
          <target state="new">Delete a blob</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Finally, to delete a blob, call <bpt id="p1">**</bpt>delete_blob<ept id="p1">**</ept>.</source>
          <target state="new">Finally, to delete a blob, call <bpt id="p1">**</bpt>delete_blob<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Now that you have learned the basics of Blob storage, follow these links</source>
          <target state="new">Now that you have learned the basics of Blob storage, follow these links</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>to learn about more complex storage tasks.</source>
          <target state="new">to learn about more complex storage tasks.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See the MSDN Reference: <bpt id="p1">[</bpt>Storing and Accessing Data in Azure<ept id="p1">][]</ept></source>
          <target state="new">See the MSDN Reference: <bpt id="p1">[</bpt>Storing and Accessing Data in Azure<ept id="p1">][]</ept></target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Visit the <bpt id="p1">[</bpt>Azure Storage Team Blog<ept id="p1">][]</ept></source>
          <target state="new">Visit the <bpt id="p1">[</bpt>Azure Storage Team Blog<ept id="p1">][]</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f13c6f0c02d73e4115b1dd38b7fd5389014c019</xliffext:olfilehash>
  </header>
</xliff>