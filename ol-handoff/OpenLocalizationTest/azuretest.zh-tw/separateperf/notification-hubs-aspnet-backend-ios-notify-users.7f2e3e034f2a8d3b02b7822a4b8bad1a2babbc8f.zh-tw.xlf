<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs Notify Users</source>
          <target state="new">Azure Notification Hubs Notify Users</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to send push notifications to users in Azure.</source>
          <target state="new">Learn how to send push notifications to users in Azure.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Code samples written in Objective-C and the .NET API for the backend.</source>
          <target state="new">Code samples written in Objective-C and the .NET API for the backend.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs Notify Users</source>
          <target state="new">Azure Notification Hubs Notify Users</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Push notification support in Azure enables you to access an easy-to-use, multiplatform, and scaled-out push infrastructure, which greatly simplifies the implementation of push notifications for both consumer and enterprise applications for mobile platforms.</source>
          <target state="new">Push notification support in Azure enables you to access an easy-to-use, multiplatform, and scaled-out push infrastructure, which greatly simplifies the implementation of push notifications for both consumer and enterprise applications for mobile platforms.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to use Azure Notification Hubs to send push notifications to a specific app user on a specific device.</source>
          <target state="new">This tutorial shows you how to use Azure Notification Hubs to send push notifications to a specific app user on a specific device.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An ASP.NET WebAPI backend is used to authenticate clients and to generate notifications, as shown in the guidance topic <bpt id="p1">[</bpt>Registering from your app backend<ept id="p1">](http://msdn.microsoft.com/library/dn743807.aspx)</ept>.</source>
          <target state="new">An ASP.NET WebAPI backend is used to authenticate clients and to generate notifications, as shown in the guidance topic <bpt id="p1">[</bpt>Registering from your app backend<ept id="p1">](http://msdn.microsoft.com/library/dn743807.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This tutorial assumes that you have created and configured your notification hub as described in <bpt id="p1">[</bpt>Getting Started with Notification Hubs (iOS)<ept id="p1">](notification-hubs-ios-get-started.md)</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This tutorial assumes that you have created and configured your notification hub as described in <bpt id="p1">[</bpt>Getting Started with Notification Hubs (iOS)<ept id="p1">](notification-hubs-ios-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This tutorial is also the prerequisite to the <bpt id="p1">[</bpt>Secure Push (iOS)<ept id="p1">](notification-hubs-aspnet-backend-ios-secure-push.md)</ept> tutorial.</source>
          <target state="new">This tutorial is also the prerequisite to the <bpt id="p1">[</bpt>Secure Push (iOS)<ept id="p1">](notification-hubs-aspnet-backend-ios-secure-push.md)</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you are using Mobile Services as your backend service, see the <bpt id="p1">[</bpt>Mobile Services version<ept id="p1">](../mobile-services-javascript-backend-ios-push-notifications-app-users.md)</ept> of this tutorial.</source>
          <target state="new">If you are using Mobile Services as your backend service, see the <bpt id="p1">[</bpt>Mobile Services version<ept id="p1">](../mobile-services-javascript-backend-ios-push-notifications-app-users.md)</ept> of this tutorial.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Modify your iOS app</source>
          <target state="new">Modify your iOS app</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Open the Single Page view app you created in the <bpt id="p1">[</bpt>Getting Started with Notification Hubs (iOS)<ept id="p1">](notification-hubs-ios-get-started.md)</ept> tutorial.</source>
          <target state="new">Open the Single Page view app you created in the <bpt id="p1">[</bpt>Getting Started with Notification Hubs (iOS)<ept id="p1">](notification-hubs-ios-get-started.md)</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> In this section we assume that your project is configured with an empty organization name.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> In this section we assume that your project is configured with an empty organization name.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If not, you will need to prepend your organization name to all class names.</source>
          <target state="new">If not, you will need to prepend your organization name to all class names.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In your Main.storyboard add the components shown in the screenshot below from the object library.</source>
          <target state="new">In your Main.storyboard add the components shown in the screenshot below from the object library.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Username<ept id="p1">**</ept>: A UITextField with placeholder text, <bpt id="p2">*</bpt>Enter Username<ept id="p2">*</ept>, immediately beneath the send results label and constrained to the left and right margins and beneath the send results label.</source>
          <target state="new"><bpt id="p1">**</bpt>Username<ept id="p1">**</ept>: A UITextField with placeholder text, <bpt id="p2">*</bpt>Enter Username<ept id="p2">*</ept>, immediately beneath the send results label and constrained to the left and right margins and beneath the send results label.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Password<ept id="p1">**</ept>: A UITextField with placeholder text, <bpt id="p2">*</bpt>Enter Password<ept id="p2">*</ept>, immediately beneath the username text field and constrained to the left and right margins and beneath the username text field.</source>
          <target state="new"><bpt id="p1">**</bpt>Password<ept id="p1">**</ept>: A UITextField with placeholder text, <bpt id="p2">*</bpt>Enter Password<ept id="p2">*</ept>, immediately beneath the username text field and constrained to the left and right margins and beneath the username text field.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Check the <bpt id="p1">**</bpt>Secure Text Entry<ept id="p1">**</ept> option in the Attribute Inspector, under <bpt id="p2">*</bpt>Return Key<ept id="p2">*</ept>.</source>
          <target state="new">Check the <bpt id="p1">**</bpt>Secure Text Entry<ept id="p1">**</ept> option in the Attribute Inspector, under <bpt id="p2">*</bpt>Return Key<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Log in<ept id="p1">**</ept>: A UIButton labeled immediately beneath the password text field and uncheck the <bpt id="p2">**</bpt>Enabled<ept id="p2">**</ept> option in the Attributes Inspector, under <bpt id="p3">*</bpt>Control-Content<ept id="p3">*</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Log in<ept id="p1">**</ept>: A UIButton labeled immediately beneath the password text field and uncheck the <bpt id="p2">**</bpt>Enabled<ept id="p2">**</ept> option in the Attributes Inspector, under <bpt id="p3">*</bpt>Control-Content<ept id="p3">*</ept></target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WNS<ept id="p1">**</ept>: Label and switch to enable sending the notification Windows Notification Service if it has been setup on the hub.</source>
          <target state="new"><bpt id="p1">**</bpt>WNS<ept id="p1">**</ept>: Label and switch to enable sending the notification Windows Notification Service if it has been setup on the hub.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Windows Getting Started<ept id="p1">](notification-hubs-windows-store-dotnet-get-started.md)</ept> tutorial.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Windows Getting Started<ept id="p1">](notification-hubs-windows-store-dotnet-get-started.md)</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GCM<ept id="p1">**</ept>: Label and switch to enable sending the notification to Google Cloud Messaging if it has been setup on the hub.</source>
          <target state="new"><bpt id="p1">**</bpt>GCM<ept id="p1">**</ept>: Label and switch to enable sending the notification to Google Cloud Messaging if it has been setup on the hub.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Android Getting Started<ept id="p1">](notification-hubs-android-get-started.md)</ept> tutorial.</source>
          <target state="new">See <bpt id="p1">[</bpt>Android Getting Started<ept id="p1">](notification-hubs-android-get-started.md)</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>APNS<ept id="p1">**</ept>: Label and switch to enable sending the notification to the Apple Platform Notification Service.</source>
          <target state="new"><bpt id="p1">**</bpt>APNS<ept id="p1">**</ept>: Label and switch to enable sending the notification to the Apple Platform Notification Service.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Recipent Username<ept id="p1">**</ept>:A UITextField with placeholder text, <bpt id="p2">*</bpt>Recipient username tag<ept id="p2">*</ept>, immediately beneath the GCM label and constrained to the left and right margins and beneath the GCM label.</source>
          <target state="new"><bpt id="p1">**</bpt>Recipent Username<ept id="p1">**</ept>:A UITextField with placeholder text, <bpt id="p2">*</bpt>Recipient username tag<ept id="p2">*</ept>, immediately beneath the GCM label and constrained to the left and right margins and beneath the GCM label.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Ctrl<ept id="p1">**</ept> drag from the components in the view to ViewController.h and add these new outlets.</source>
          <target state="new"><bpt id="p1">**</bpt>Ctrl<ept id="p1">**</ept> drag from the components in the view to ViewController.h and add these new outlets.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In ViewController.h, add the following <ph id="ph1">`#define`</ph> just below your import statements.</source>
          <target state="new">In ViewController.h, add the following <ph id="ph1">`#define`</ph> just below your import statements.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Substitute the <bpt id="p1">*</bpt>&lt;Enter Your Backend Endpoint\&gt;<ept id="p1">*</ept> placeholder with the Destination URL you used to deploy your app backend in the previous section.</source>
          <target state="new">Substitute the <bpt id="p1">*</bpt>&lt;Enter Your Backend Endpoint\&gt;<ept id="p1">*</ept> placeholder with the Destination URL you used to deploy your app backend in the previous section.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">*</bpt>http://you_backend.azurewebsites.net<ept id="p1">*</ept>.</source>
          <target state="new">For example, <bpt id="p1">*</bpt>http://you_backend.azurewebsites.net<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In your project, create a new <bpt id="p1">**</bpt>Cocoa Touch class<ept id="p1">**</ept> named <bpt id="p2">**</bpt>RegisterClient<ept id="p2">**</ept> to interface with the ASP.NET back-end you created.</source>
          <target state="new">In your project, create a new <bpt id="p1">**</bpt>Cocoa Touch class<ept id="p1">**</ept> named <bpt id="p2">**</bpt>RegisterClient<ept id="p2">**</ept> to interface with the ASP.NET back-end you created.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Create the class inheriting from <ph id="ph1">`NSObject`</ph>.</source>
          <target state="new">Create the class inheriting from <ph id="ph1">`NSObject`</ph>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Then add the following code in the RegisterClient.h.</source>
          <target state="new">Then add the following code in the RegisterClient.h.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the RegisterClient.m update the <ph id="ph1">`@interface`</ph> section:</source>
          <target state="new">In the RegisterClient.m update the <ph id="ph1">`@interface`</ph> section:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Replace the <ph id="ph1">`@implementation`</ph> section in the RegisterClient.m with the following code.</source>
          <target state="new">Replace the <ph id="ph1">`@implementation`</ph> section in the RegisterClient.m with the following code.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In ViewController.h, add a <ph id="ph1">`#import`</ph> statement for RegisterClient.h.</source>
          <target state="new">In ViewController.h, add a <ph id="ph1">`#import`</ph> statement for RegisterClient.h.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Then add a declaration for the device token and reference to a <ph id="ph1">`RegisterClient`</ph> instance in the <ph id="ph2">`@interface`</ph> section:</source>
          <target state="new">Then add a declaration for the device token and reference to a <ph id="ph1">`RegisterClient`</ph> instance in the <ph id="ph2">`@interface`</ph> section:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In ViewController.m, add a private method declaration in the <ph id="ph1">`@interface`</ph> section:</source>
          <target state="new">In ViewController.m, add a private method declaration in the <ph id="ph1">`@interface`</ph> section:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The following snippet is not a secure authentication scheme, you should substitute the implementation of the <bpt id="p1">**</bpt>createAndSetAuthenticationHeaderWithUsername:AndPassword:<ept id="p1">**</ept> with your specific authentication mechanism that generates an authentication token to be consumed by the register client class, e.g. OAuth, Active Directory.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The following snippet is not a secure authentication scheme, you should substitute the implementation of the <bpt id="p1">**</bpt>createAndSetAuthenticationHeaderWithUsername:AndPassword:<ept id="p1">**</ept> with your specific authentication mechanism that generates an authentication token to be consumed by the register client class, e.g. OAuth, Active Directory.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Then in the <ph id="ph1">`@implementation`</ph> section of ViewController.m add the following code which adds the implementation for setting the device token and authentication header.</source>
          <target state="new">Then in the <ph id="ph1">`@implementation`</ph> section of ViewController.m add the following code which adds the implementation for setting the device token and authentication header.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Note how setting the device token enables the log in button.</source>
          <target state="new">Note how setting the device token enables the log in button.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This is becasue as a part of the login action, the view controller registers for push notifications with the app backend.</source>
          <target state="new">This is becasue as a part of the login action, the view controller registers for push notifications with the app backend.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Hence, we do not want Log In action to be accessible till the device token has been properly set up.</source>
          <target state="new">Hence, we do not want Log In action to be accessible till the device token has been properly set up.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can decouple the log in from the push registration as long as the former happens before the latter.</source>
          <target state="new">You can decouple the log in from the push registration as long as the former happens before the latter.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In ViewController.m, use the following snippets to implement the action method for your <bpt id="p1">**</bpt>Log In<ept id="p1">**</ept> button and a method to send the notification message using the ASP.NET backend.</source>
          <target state="new">In ViewController.m, use the following snippets to implement the action method for your <bpt id="p1">**</bpt>Log In<ept id="p1">**</ept> button and a method to send the notification message using the ASP.NET backend.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Update the action for the <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> button to use the ASP.NET backend and send to any PNS enabled by a switch.</source>
          <target state="new">Update the action for the <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> button to use the ASP.NET backend and send to any PNS enabled by a switch.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In function <bpt id="p1">**</bpt>ViewDidLoad<ept id="p1">**</ept>, add the following to instantiate the RegisterClient instance and set the delegate for your text fields.</source>
          <target state="new">In function <bpt id="p1">**</bpt>ViewDidLoad<ept id="p1">**</ept>, add the following to instantiate the RegisterClient instance and set the delegate for your text fields.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Now in <bpt id="p1">**</bpt>AppDelegate.m<ept id="p1">**</ept>, remove all the content of the method <bpt id="p2">**</bpt>application:didRegisterForPushNotificationWithDeviceToken:<ept id="p2">**</ept> and replace it with the following to make sure that the view controller contains the latest device token retrieved from APNs:</source>
          <target state="new">Now in <bpt id="p1">**</bpt>AppDelegate.m<ept id="p1">**</ept>, remove all the content of the method <bpt id="p2">**</bpt>application:didRegisterForPushNotificationWithDeviceToken:<ept id="p2">**</ept> and replace it with the following to make sure that the view controller contains the latest device token retrieved from APNs:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Finally in <bpt id="p1">**</bpt>AppDelegate.m<ept id="p1">**</ept>, make sure you have the following method:</source>
          <target state="new">Finally in <bpt id="p1">**</bpt>AppDelegate.m<ept id="p1">**</ept>, make sure you have the following method:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Test the Application</source>
          <target state="new">Test the Application</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In XCode, run the app on a physical iOS device (push notifications will not work in the simulator).</source>
          <target state="new">In XCode, run the app on a physical iOS device (push notifications will not work in the simulator).</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the iOS app UI, enter a username and password.</source>
          <target state="new">In the iOS app UI, enter a username and password.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>These can be any string, but they must both be the same string value.</source>
          <target state="new">These can be any string, but they must both be the same string value.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Then click <bpt id="p1">**</bpt>Log In<ept id="p1">**</ept>.</source>
          <target state="new">Then click <bpt id="p1">**</bpt>Log In<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You should see a pop-up informing you of registration success.</source>
          <target state="new">You should see a pop-up informing you of registration success.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the *<bpt id="p1">*</bpt>Recipient username tag<ept id="p1">*</ept> text field, enter the user name tag used with the registration from another device.</source>
          <target state="new">In the *<bpt id="p1">*</bpt>Recipient username tag<ept id="p1">*</ept> text field, enter the user name tag used with the registration from another device.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enter a notification message and click <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept>.</source>
          <target state="new">Enter a notification message and click <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Only the devices that have a registration with the recipient user name tag receive the notification message.</source>
          <target state="new">Only the devices that have a registration with the recipient user name tag receive the notification message.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It is only sent to those users.</source>
          <target state="new">It is only sent to those users.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af890323e170769bfb79d41e81d69cec03284d79</xliffext:olfilehash>
  </header>
</xliff>