<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to use Blob storage from Ruby | Microsoft Azure</source>
          <target state="new">How to use Blob storage from Ruby | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use the Azure Blob service to upload, download, list, and delete blob content.</source>
          <target state="new">Learn how to use the Azure Blob service to upload, download, list, and delete blob content.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Samples written in Ruby.</source>
          <target state="new">Samples written in Ruby.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to use Blob storage from Ruby</source>
          <target state="new">How to use Blob storage from Ruby</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This guide will show you how to perform common scenarios using the Azure Blob service.</source>
          <target state="new">This guide will show you how to perform common scenarios using the Azure Blob service.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The samples are written using the Ruby API.</source>
          <target state="new">The samples are written using the Ruby API.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The scenarios covered include <bpt id="p1">**</bpt>uploading, listing, downloading,<ept id="p1">**</ept> and <bpt id="p2">**</bpt>deleting<ept id="p2">**</ept> blobs.</source>
          <target state="new">The scenarios covered include <bpt id="p1">**</bpt>uploading, listing, downloading,<ept id="p1">**</ept> and <bpt id="p2">**</bpt>deleting<ept id="p2">**</ept> blobs.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Create a Ruby application</source>
          <target state="new">Create a Ruby application</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a Ruby application.</source>
          <target state="new">Create a Ruby application.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For instructions,</source>
          <target state="new">For instructions,</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>see <bpt id="p1">[</bpt>Create a Ruby application on Azure<ept id="p1">](/develop/ruby/tutorials/web-app-with-linux-vm/)</ept>.</source>
          <target state="new">see <bpt id="p1">[</bpt>Create a Ruby application on Azure<ept id="p1">](/develop/ruby/tutorials/web-app-with-linux-vm/)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Configure your application to access Storage</source>
          <target state="new">Configure your application to access Storage</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To use Azure Storage, you need to download and use the Ruby azure package, which includes a set of convenience libraries that communicate with the storage REST services.</source>
          <target state="new">To use Azure Storage, you need to download and use the Ruby azure package, which includes a set of convenience libraries that communicate with the storage REST services.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use RubyGems to obtain the package</source>
          <target state="new">Use RubyGems to obtain the package</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use a command-line interface such as <bpt id="p1">**</bpt>PowerShell<ept id="p1">**</ept> (Windows), <bpt id="p2">**</bpt>Terminal<ept id="p2">**</ept> (Mac), or <bpt id="p3">**</bpt>Bash<ept id="p3">**</ept> (Unix).</source>
          <target state="new">Use a command-line interface such as <bpt id="p1">**</bpt>PowerShell<ept id="p1">**</ept> (Windows), <bpt id="p2">**</bpt>Terminal<ept id="p2">**</ept> (Mac), or <bpt id="p3">**</bpt>Bash<ept id="p3">**</ept> (Unix).</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Type "gem install azure" in the command window to install the gem and dependencies.</source>
          <target state="new">Type "gem install azure" in the command window to install the gem and dependencies.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Import the package</source>
          <target state="new">Import the package</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Using your favorite text editor, add the following to the top of the Ruby file where you intend to use storage:</source>
          <target state="new">Using your favorite text editor, add the following to the top of the Ruby file where you intend to use storage:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Setup an Azure Storage Connection</source>
          <target state="new">Setup an Azure Storage Connection</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The azure module will read the environment variables <bpt id="p1">**</bpt>AZURE\_STORAGE\_ACCOUNT<ept id="p1">**</ept> and <bpt id="p2">**</bpt>AZURE\_STORAGE\_ACCESS_KEY<ept id="p2">**</ept></source>
          <target state="new">The azure module will read the environment variables <bpt id="p1">**</bpt>AZURE\_STORAGE\_ACCOUNT<ept id="p1">**</ept> and <bpt id="p2">**</bpt>AZURE\_STORAGE\_ACCESS_KEY<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>for information required to connect to your Azure storage account.</source>
          <target state="new">for information required to connect to your Azure storage account.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If these environment variables are not set, you must specify the account information before using <bpt id="p1">**</bpt>Azure::BlobService<ept id="p1">**</ept> with the following code:</source>
          <target state="new">If these environment variables are not set, you must specify the account information before using <bpt id="p1">**</bpt>Azure::BlobService<ept id="p1">**</ept> with the following code:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To obtain these values:</source>
          <target state="new">To obtain these values:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Log in to the <bpt id="p1">[</bpt>Azure Management Portal<ept id="p1">](https://manage.windowsazure.com/)</ept>.</source>
          <target state="new">Log in to the <bpt id="p1">[</bpt>Azure Management Portal<ept id="p1">](https://manage.windowsazure.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Navigate to the storage account you want to use.</source>
          <target state="new">Navigate to the storage account you want to use.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>MANAGE KEYS<ept id="p1">**</ept> at the bottom of the navigation pane.</source>
          <target state="new">Click <bpt id="p1">**</bpt>MANAGE KEYS<ept id="p1">**</ept> at the bottom of the navigation pane.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the pop up dialog, you'll see the storage account name, primary access key and secondary access key.</source>
          <target state="new">In the pop up dialog, you'll see the storage account name, primary access key and secondary access key.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For access key, you can use either the primary one or the secondary one.</source>
          <target state="new">For access key, you can use either the primary one or the secondary one.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Create a container</source>
          <target state="new">Create a container</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Azure::BlobService<ept id="p1">**</ept> object lets you work with containers and blobs.</source>
          <target state="new">The <bpt id="p1">**</bpt>Azure::BlobService<ept id="p1">**</ept> object lets you work with containers and blobs.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To create a container, use the <bpt id="p1">**</bpt>create\_container()<ept id="p1">**</ept> method.</source>
          <target state="new">To create a container, use the <bpt id="p1">**</bpt>create\_container()<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following code example creates a container or print out the error if there is any.</source>
          <target state="new">The following code example creates a container or print out the error if there is any.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you want to make the files in the container public, you can set the container's permissions.</source>
          <target state="new">If you want to make the files in the container public, you can set the container's permissions.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can just modify the <ph id="ph1">&lt;strong&gt;</ph>create\_container()<ph id="ph2">&lt;/strong&gt;</ph> call to pass the <bpt id="p1">**</bpt>:public\_access\_level<ept id="p1">**</ept> option:</source>
          <target state="new">You can just modify the <ph id="ph1">&lt;strong&gt;</ph>create\_container()<ph id="ph2">&lt;/strong&gt;</ph> call to pass the <bpt id="p1">**</bpt>:public\_access\_level<ept id="p1">**</ept> option:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Valid values for the <bpt id="p1">**</bpt>:public\_access\_level<ept id="p1">**</ept> option are:</source>
          <target state="new">Valid values for the <bpt id="p1">**</bpt>:public\_access\_level<ept id="p1">**</ept> option are:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>blob:<ept id="p1">**</ept> Specifies full public read access for container and blob data.</source>
          <target state="new"><bpt id="p1">**</bpt>blob:<ept id="p1">**</ept> Specifies full public read access for container and blob data.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Clients can enumerate blobs within the container via anonymous request, but cannot enumerate containers within the storage account.</source>
          <target state="new">Clients can enumerate blobs within the container via anonymous request, but cannot enumerate containers within the storage account.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>container:<ept id="p1">**</ept> Specifies public read access for blobs.</source>
          <target state="new"><bpt id="p1">**</bpt>container:<ept id="p1">**</ept> Specifies public read access for blobs.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Blob data within this container can be read via anonymous request, but container data is not available.</source>
          <target state="new">Blob data within this container can be read via anonymous request, but container data is not available.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Clients cannot enumerate blobs within the container via anonymous request.</source>
          <target state="new">Clients cannot enumerate blobs within the container via anonymous request.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Alternatively, you can modify the public access level of a container by using <bpt id="p1">**</bpt>set\_container\_acl()<ept id="p1">**</ept> method to specify the public access level.</source>
          <target state="new">Alternatively, you can modify the public access level of a container by using <bpt id="p1">**</bpt>set\_container\_acl()<ept id="p1">**</ept> method to specify the public access level.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following code example changes the public access level to <bpt id="p1">**</bpt>container<ept id="p1">**</ept>:</source>
          <target state="new">The following code example changes the public access level to <bpt id="p1">**</bpt>container<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Upload a blob into a container</source>
          <target state="new">Upload a blob into a container</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To upload content to a blob, use the <bpt id="p1">**</bpt>create\_block\_blob()<ept id="p1">**</ept> method to create the blob, use a file or string as the content of the blob.</source>
          <target state="new">To upload content to a blob, use the <bpt id="p1">**</bpt>create\_block\_blob()<ept id="p1">**</ept> method to create the blob, use a file or string as the content of the blob.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following code uploads the file <bpt id="p1">**</bpt>test.png<ept id="p1">**</ept> as a new blob named "image-blob" in the container.</source>
          <target state="new">The following code uploads the file <bpt id="p1">**</bpt>test.png<ept id="p1">**</ept> as a new blob named "image-blob" in the container.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>List the blobs in a container</source>
          <target state="new">List the blobs in a container</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To list the containers, use <bpt id="p1">**</bpt>list_containers()<ept id="p1">**</ept> method.</source>
          <target state="new">To list the containers, use <bpt id="p1">**</bpt>list_containers()<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To list the blobs within a container, use <bpt id="p1">**</bpt>list\_blobs()<ept id="p1">**</ept> method.</source>
          <target state="new">To list the blobs within a container, use <bpt id="p1">**</bpt>list\_blobs()<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This outputs the urls of all the blobs in all the containers for the account.</source>
          <target state="new">This outputs the urls of all the blobs in all the containers for the account.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Download blobs</source>
          <target state="new">Download blobs</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To download blobs, use the <bpt id="p1">**</bpt>get\_blob()<ept id="p1">**</ept> method to retrieve the contents.</source>
          <target state="new">To download blobs, use the <bpt id="p1">**</bpt>get\_blob()<ept id="p1">**</ept> method to retrieve the contents.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates using <bpt id="p1">**</bpt>get\_blob()<ept id="p1">**</ept> to download the contents of "image-blob" and write it to a local file.</source>
          <target state="new">The following code example demonstrates using <bpt id="p1">**</bpt>get\_blob()<ept id="p1">**</ept> to download the contents of "image-blob" and write it to a local file.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Delete a Blob</source>
          <target state="new">Delete a Blob</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Finally, to delete a blob, use the <bpt id="p1">**</bpt>delete\_blob()<ept id="p1">**</ept> method.</source>
          <target state="new">Finally, to delete a blob, use the <bpt id="p1">**</bpt>delete\_blob()<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to delete a blob.</source>
          <target state="new">The following code example demonstrates how to delete a blob.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To learn about more complex storage tasks, follow these links:</source>
          <target state="new">To learn about more complex storage tasks, follow these links:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>MSDN Reference: <bpt id="p1">[</bpt>Azure Storage<ept id="p1">](http://msdn.microsoft.com/library/azure/gg433040.aspx)</ept></source>
          <target state="new">MSDN Reference: <bpt id="p1">[</bpt>Azure Storage<ept id="p1">](http://msdn.microsoft.com/library/azure/gg433040.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Azure Storage Team Blog</source>
          <target state="new">Azure Storage Team Blog</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure SDK for Ruby<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> repository on GitHub</source>
          <target state="new"><bpt id="p1">[</bpt>Azure SDK for Ruby<ept id="p1">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> repository on GitHub</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70fbe3495800609a679616a176d11e95093957e4</xliffext:olfilehash>
  </header>
</xliff>