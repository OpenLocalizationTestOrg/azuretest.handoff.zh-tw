<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a .NET WebJob in Azure App Service</source>
          <target state="new">Create a .NET WebJob in Azure App Service</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to create a multi-tier app using ASP.NET MVC and Azure.</source>
          <target state="new">Learn how to create a multi-tier app using ASP.NET MVC and Azure.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The frontend runs in a web app in Azure App Service, and the backend runs as a WebJob.</source>
          <target state="new">The frontend runs in a web app in Azure App Service, and the backend runs as a WebJob.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The app uses Entity Framework, SQL Database, and Azure storage queues and blobs.</source>
          <target state="new">The app uses Entity Framework, SQL Database, and Azure storage queues and blobs.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Create a .NET WebJob in Azure App Service</source>
          <target state="new">Create a .NET WebJob in Azure App Service</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This tutorial shows how to create a multi-tier ASP.NET MVC application that uses the WebJobs SDK to work with <bpt id="p1">[</bpt>Azure queues<ept id="p1">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/queue-centric-work-pattern)</ept> and <bpt id="p2">[</bpt>Azure blobs<ept id="p2">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/unstructured-blob-storage)</ept> in a web app in <bpt id="p3">[</bpt>Azure App Service<ept id="p3">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept>.</source>
          <target state="new">This tutorial shows how to create a multi-tier ASP.NET MVC application that uses the WebJobs SDK to work with <bpt id="p1">[</bpt>Azure queues<ept id="p1">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/queue-centric-work-pattern)</ept> and <bpt id="p2">[</bpt>Azure blobs<ept id="p2">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/unstructured-blob-storage)</ept> in a web app in <bpt id="p3">[</bpt>Azure App Service<ept id="p3">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The application also uses <bpt id="p1">[</bpt>Azure SQL Database<ept id="p1">](http://msdn.microsoft.com/library/azure/ee336279)</ept>.</source>
          <target state="new">The application also uses <bpt id="p1">[</bpt>Azure SQL Database<ept id="p1">](http://msdn.microsoft.com/library/azure/ee336279)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The sample application is an advertising bulletin board.</source>
          <target state="new">The sample application is an advertising bulletin board.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Users create an ad by entering text and uploading an image.</source>
          <target state="new">Users create an ad by entering text and uploading an image.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>They can see a list of ads with thumbnail images, and they can see the full size image when they select an ad to see the details.</source>
          <target state="new">They can see a list of ads with thumbnail images, and they can see the full size image when they select an ad to see the details.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Here's a screenshot:</source>
          <target state="new">Here's a screenshot:</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Ad list</source>
          <target state="new">Ad list</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can <bpt id="p1">[</bpt>download the Visual Studio project<ept id="p1">][download]</ept> from the MSDN Code Gallery.</source>
          <target state="new">You can <bpt id="p1">[</bpt>download the Visual Studio project<ept id="p1">][download]</ept> from the MSDN Code Gallery.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="prerequisites"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Prerequisites</source>
          <target state="new"><ph id="ph1">&lt;a id="prerequisites"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Prerequisites</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The tutorial assumes that you know how to work with <bpt id="p1">[</bpt>ASP.NET MVC<ept id="p1">](http://www.asp.net/mvc/tutorials/mvc-5/introduction/getting-started)</ept> or <bpt id="p2">[</bpt>Web Forms<ept id="p2">](http://www.asp.net/web-forms/tutorials/aspnet-45/getting-started-with-aspnet-45-web-forms/introduction-and-overview)</ept> projects in Visual Studio.</source>
          <target state="new">The tutorial assumes that you know how to work with <bpt id="p1">[</bpt>ASP.NET MVC<ept id="p1">](http://www.asp.net/mvc/tutorials/mvc-5/introduction/getting-started)</ept> or <bpt id="p2">[</bpt>Web Forms<ept id="p2">](http://www.asp.net/web-forms/tutorials/aspnet-45/getting-started-with-aspnet-45-web-forms/introduction-and-overview)</ept> projects in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The sample application uses MVC, but most of the tutorial also applies to Web Forms.</source>
          <target state="new">The sample application uses MVC, but most of the tutorial also applies to Web Forms.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The tutorial instructions work with the following products:</source>
          <target state="new">The tutorial instructions work with the following products:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013</source>
          <target state="new">Visual Studio 2013</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013 Community</source>
          <target state="new">Visual Studio 2013 Community</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013 Express for Web</source>
          <target state="new">Visual Studio 2013 Express for Web</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you don't have one of these, Visual Studio 2013 Express for Web will be installed automatically when you install the Azure SDK.</source>
          <target state="new">If you don't have one of these, Visual Studio 2013 Express for Web will be installed automatically when you install the Azure SDK.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id="p1">[</bpt>Try App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id="p1">[</bpt>Try App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>No credit cards required; no commitments.</source>
          <target state="new">No credit cards required; no commitments.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="learn"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>What you'll learn</source>
          <target state="new"><ph id="ph1">&lt;a id="learn"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>What you'll learn</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The tutorial shows how to do the following tasks:</source>
          <target state="new">The tutorial shows how to do the following tasks:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Enable your machine for Azure development by installing the Azure SDK.</source>
          <target state="new">Enable your machine for Azure development by installing the Azure SDK.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Create a Console Application project that automatically deploys as an Azure WebJob when you deploy the associated web project.</source>
          <target state="new">Create a Console Application project that automatically deploys as an Azure WebJob when you deploy the associated web project.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Test a WebJobs SDK backend locally on the development computer.</source>
          <target state="new">Test a WebJobs SDK backend locally on the development computer.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Publish an application with a WebJobs backend to a web app in App Service.</source>
          <target state="new">Publish an application with a WebJobs backend to a web app in App Service.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Upload files and store them in the Azure Blob service.</source>
          <target state="new">Upload files and store them in the Azure Blob service.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Use the Azure WebJobs SDK to work with Azure Storage queues and blobs.</source>
          <target state="new">Use the Azure WebJobs SDK to work with Azure Storage queues and blobs.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="contosoads"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Application architecture</source>
          <target state="new"><ph id="ph1">&lt;a id="contosoads"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Application architecture</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The sample application uses the <bpt id="p1">[</bpt>queue-centric work pattern<ept id="p1">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/queue-centric-work-pattern)</ept> to off-load the CPU-intensive work of creating thumbnails to a backend process.</source>
          <target state="new">The sample application uses the <bpt id="p1">[</bpt>queue-centric work pattern<ept id="p1">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/queue-centric-work-pattern)</ept> to off-load the CPU-intensive work of creating thumbnails to a backend process.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The app stores ads in a SQL database, using Entity Framework Code First to create the tables and access the data.</source>
          <target state="new">The app stores ads in a SQL database, using Entity Framework Code First to create the tables and access the data.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For each ad, the database stores two URLs: one for the full-size image and one for the thumbnail.</source>
          <target state="new">For each ad, the database stores two URLs: one for the full-size image and one for the thumbnail.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Ad table</source>
          <target state="new">Ad table</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When a user uploads an image, the frontend of the web app stores the image in an <bpt id="p1">[</bpt>Azure blob<ept id="p1">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/unstructured-blob-storage)</ept>, and it stores the ad information in the database with a URL that points to the blob.</source>
          <target state="new">When a user uploads an image, the frontend of the web app stores the image in an <bpt id="p1">[</bpt>Azure blob<ept id="p1">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/unstructured-blob-storage)</ept>, and it stores the ad information in the database with a URL that points to the blob.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>At the same time, it writes a message to an Azure queue.</source>
          <target state="new">At the same time, it writes a message to an Azure queue.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A backend process running as an Azure WebJob uses the WebJobs SDK to poll the queue for new messages.</source>
          <target state="new">A backend process running as an Azure WebJob uses the WebJobs SDK to poll the queue for new messages.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When a new message appears, the WebJob creates a thumbnail for that image and updates the thumbnail URL database field for that ad.</source>
          <target state="new">When a new message appears, the WebJob creates a thumbnail for that image and updates the thumbnail URL database field for that ad.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Here's a diagram that shows how the parts of the application interact:</source>
          <target state="new">Here's a diagram that shows how the parts of the application interact:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Contoso Ads architecture</source>
          <target state="new">Contoso Ads architecture</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Alternative architecture</source>
          <target state="new">Alternative architecture</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>WebJobs run in the context of a web app and are not scalable separately.</source>
          <target state="new">WebJobs run in the context of a web app and are not scalable separately.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, if you have one Standard web app instance, you have only one instance of your background process running, and it is using some of the server resources (CPU, memory, etc.) that otherwise would be available to serve web content.</source>
          <target state="new">For example, if you have one Standard web app instance, you have only one instance of your background process running, and it is using some of the server resources (CPU, memory, etc.) that otherwise would be available to serve web content.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If traffic varies by time of day or day of week, and if the backend processing you need to do can wait, you could schedule your WebJobs to run at low-traffic times.</source>
          <target state="new">If traffic varies by time of day or day of week, and if the backend processing you need to do can wait, you could schedule your WebJobs to run at low-traffic times.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the load is still too high for that solution, you can consider alternative environments for your backend program, such as the following:</source>
          <target state="new">If the load is still too high for that solution, you can consider alternative environments for your backend program, such as the following:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Run the program as a WebJob in a separate web app dedicated for that purpose.</source>
          <target state="new">Run the program as a WebJob in a separate web app dedicated for that purpose.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can then scale your backend web app independently from your frontend web app.</source>
          <target state="new">You can then scale your backend web app independently from your frontend web app.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Run the program in an Azure Cloud Service worker role.</source>
          <target state="new">Run the program in an Azure Cloud Service worker role.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you choose this option, you could run the frontend in either a Cloud Service web role or a web app.</source>
          <target state="new">If you choose this option, you could run the frontend in either a Cloud Service web role or a web app.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This tutorial shows how to run the frontend in a web app and the backend as a WebJob in the same web app.</source>
          <target state="new">This tutorial shows how to run the frontend in a web app and the backend as a WebJob in the same web app.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For information about how to choose the best environment for your scenario, see <bpt id="p1">[</bpt>Azure web app, cloud services, and virtual machines comparison<ept id="p1">](../choose-web-site-cloud-service-vm/)</ept>.</source>
          <target state="new">For information about how to choose the best environment for your scenario, see <bpt id="p1">[</bpt>Azure web app, cloud services, and virtual machines comparison<ept id="p1">](../choose-web-site-cloud-service-vm/)</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The tutorial instructions apply to Azure SDK for .NET 2.5.1 or later.</source>
          <target state="new">The tutorial instructions apply to Azure SDK for .NET 2.5.1 or later.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the create-from-scratch section where you create the WebJob project, the WebJobs SDK packages are automatically included in the project; with earlier versions of the SDK you have to install the packages manually.</source>
          <target state="new">In the create-from-scratch section where you create the WebJob project, the WebJobs SDK packages are automatically included in the project; with earlier versions of the SDK you have to install the packages manually.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="storage"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create an Azure Storage account</source>
          <target state="new"><ph id="ph1">&lt;a id="storage"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create an Azure Storage account</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An Azure storage account provides resources for storing queue and blob data in the cloud.</source>
          <target state="new">An Azure storage account provides resources for storing queue and blob data in the cloud.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>It is also used by the WebJobs SDK to store logging data for the dashboard.</source>
          <target state="new">It is also used by the WebJobs SDK to store logging data for the dashboard.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In a real-world application, you typically create separate accounts for application data versus logging data, and separate accounts for test data versus production data.</source>
          <target state="new">In a real-world application, you typically create separate accounts for application data versus logging data, and separate accounts for test data versus production data.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For this tutorial you'll use just one account.</source>
          <target state="new">For this tutorial you'll use just one account.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept> window in Visual Studio.</source>
          <target state="new">Open the <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept> window in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept> node, and then click <bpt id="p2">**</bpt>Connect to Microsoft Azure<ept id="p2">**</ept>.</source>
          <target state="new">Right-click the <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept> node, and then click <bpt id="p2">**</bpt>Connect to Microsoft Azure<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Connect to Azure</source>
          <target state="new">Connect to Azure</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Sign in using your Azure credentials.</source>
          <target state="new">Sign in using your Azure credentials.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Storage<ept id="p1">**</ept> under the Azure node, and then click <bpt id="p2">**</bpt>Create Storage Account<ept id="p2">**</ept>.</source>
          <target state="new">Right-click <bpt id="p1">**</bpt>Storage<ept id="p1">**</ept> under the Azure node, and then click <bpt id="p2">**</bpt>Create Storage Account<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Create Storage Account</source>
          <target state="new">Create Storage Account</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Create Storage Account<ept id="p1">**</ept> dialog, enter a name for the storage account.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Create Storage Account<ept id="p1">**</ept> dialog, enter a name for the storage account.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The name must be must be unique (no other Azure storage account can have the same name).</source>
          <target state="new">The name must be must be unique (no other Azure storage account can have the same name).</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If the name you enter is already in use you'll get a chance to change it.</source>
          <target state="new">If the name you enter is already in use you'll get a chance to change it.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The URL to access your storage account will be <bpt id="p1">*</bpt>{name}<ept id="p1">*</ept>.core.windows.net.</source>
          <target state="new">The URL to access your storage account will be <bpt id="p1">*</bpt>{name}<ept id="p1">*</ept>.core.windows.net.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>Region or Affinity Group<ept id="p1">**</ept> drop-down list to the region closest to you.</source>
          <target state="new">Set the <bpt id="p1">**</bpt>Region or Affinity Group<ept id="p1">**</ept> drop-down list to the region closest to you.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This setting specifies which Azure datacenter will host your storage account.</source>
          <target state="new">This setting specifies which Azure datacenter will host your storage account.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For this tutorial, your choice won't make a noticeable difference.</source>
          <target state="new">For this tutorial, your choice won't make a noticeable difference.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>However, for a production web app, you want your web server and your storage account to be in the same region to minimize latency and data egress charges.</source>
          <target state="new">However, for a production web app, you want your web server and your storage account to be in the same region to minimize latency and data egress charges.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The web app (which you'll create later) datacenter should be as close as possible to the browsers accessing the web app in order to minimize latency.</source>
          <target state="new">The web app (which you'll create later) datacenter should be as close as possible to the browsers accessing the web app in order to minimize latency.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>Replication<ept id="p1">**</ept> drop-down list to <bpt id="p2">**</bpt>Locally redundant<ept id="p2">**</ept>.</source>
          <target state="new">Set the <bpt id="p1">**</bpt>Replication<ept id="p1">**</ept> drop-down list to <bpt id="p2">**</bpt>Locally redundant<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When geo-replication is enabled for a storage account, the stored content is replicated to a secondary datacenter to enable failover to that location in case of a major disaster in the primary location.</source>
          <target state="new">When geo-replication is enabled for a storage account, the stored content is replicated to a secondary datacenter to enable failover to that location in case of a major disaster in the primary location.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Geo-replication can incur additional costs.</source>
          <target state="new">Geo-replication can incur additional costs.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For test and development accounts, you generally don't want to pay for geo-replication.</source>
          <target state="new">For test and development accounts, you generally don't want to pay for geo-replication.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Create, manage, or delete a storage account<ept id="p1">](../storage-create-storage-account/#replication-options)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Create, manage, or delete a storage account<ept id="p1">](../storage-create-storage-account/#replication-options)</ept>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>New storage account</source>
          <target state="new">New storage account</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="download"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Download the application</source>
          <target state="new"><ph id="ph1">&lt;a id="download"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Download the application</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Download and unzip the <bpt id="p1">[</bpt>completed solution<ept id="p1">][download]</ept>.</source>
          <target state="new">Download and unzip the <bpt id="p1">[</bpt>completed solution<ept id="p1">][download]</ept>.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Start Visual Studio.</source>
          <target state="new">Start Visual Studio.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu choose <bpt id="p2">**</bpt>Open<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Project/Solution<ept id="p3">**</ept>, navigate to where you downloaded the solution, and then open the solution file.</source>
          <target state="new">From the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu choose <bpt id="p2">**</bpt>Open<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Project/Solution<ept id="p3">**</ept>, navigate to where you downloaded the solution, and then open the solution file.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Press CTRL+SHIFT+B to build the solution.</source>
          <target state="new">Press CTRL+SHIFT+B to build the solution.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>By default, Visual Studio automatically restores the NuGet package content, which was not included in the <bpt id="p1">*</bpt>.zip<ept id="p1">*</ept> file.</source>
          <target state="new">By default, Visual Studio automatically restores the NuGet package content, which was not included in the <bpt id="p1">*</bpt>.zip<ept id="p1">*</ept> file.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If the packages don't restore, install them manually by going to the <bpt id="p1">**</bpt>Manage NuGet Packages for Solution<ept id="p1">**</ept> dialog and clicking the <bpt id="p2">**</bpt>Restore<ept id="p2">**</ept> button at the top right.</source>
          <target state="new">If the packages don't restore, install them manually by going to the <bpt id="p1">**</bpt>Manage NuGet Packages for Solution<ept id="p1">**</ept> dialog and clicking the <bpt id="p2">**</bpt>Restore<ept id="p2">**</ept> button at the top right.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, make sure that <bpt id="p2">**</bpt>ContosoAdsWeb<ept id="p2">**</ept> is selected as the startup project.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, make sure that <bpt id="p2">**</bpt>ContosoAdsWeb<ept id="p2">**</ept> is selected as the startup project.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="configurestorage"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Configure the application to use your storage account</source>
          <target state="new"><ph id="ph1">&lt;a id="configurestorage"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Configure the application to use your storage account</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Open the application <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file in the ContosoAdsWeb project.</source>
          <target state="new">Open the application <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file in the ContosoAdsWeb project.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The file contains a SQL connection string and an Azure storage connection string for working with blobs and queues.</source>
          <target state="new">The file contains a SQL connection string and an Azure storage connection string for working with blobs and queues.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The SQL connection string points to a <bpt id="p1">[</bpt>SQL Server Express LocalDB<ept id="p1">](http://msdn.microsoft.com/library/hh510202.aspx)</ept> database.</source>
          <target state="new">The SQL connection string points to a <bpt id="p1">[</bpt>SQL Server Express LocalDB<ept id="p1">](http://msdn.microsoft.com/library/hh510202.aspx)</ept> database.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The storage connection string is an example that has placeholders for the storage account name and access key.</source>
          <target state="new">The storage connection string is an example that has placeholders for the storage account name and access key.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You'll replace this with a connection string that has the name and key of your storage account.</source>
          <target state="new">You'll replace this with a connection string that has the name and key of your storage account.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>&amp;lt;connectionStrings&amp;gt;</source>
          <target state="new">&amp;lt;connectionStrings&amp;gt;</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>&amp;lt;add name="ContosoAdsContext" connectionString="Data Source=(localdb)\v11.0; Initial Catalog=ContosoAds; Integrated Security=True; MultipleActiveResultSets=True;" providerName="System.Data.SqlClient" /&amp;gt;</source>
          <target state="new">&amp;lt;add name="ContosoAdsContext" connectionString="Data Source=(localdb)\v11.0; Initial Catalog=ContosoAds; Integrated Security=True; MultipleActiveResultSets=True;" providerName="System.Data.SqlClient" /&amp;gt;</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>&amp;lt;add name="AzureWebJobsStorage" connectionString="DefaultEndpointsProtocol=https;AccountName=</source>
          <target state="new">&amp;lt;add name="AzureWebJobsStorage" connectionString="DefaultEndpointsProtocol=https;AccountName=</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>[accountname]</source>
          <target state="new">[accountname]</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>;AccountKey=</source>
          <target state="new">;AccountKey=</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>[accesskey]</source>
          <target state="new">[accesskey]</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>"/&amp;gt;</source>
          <target state="new">"/&amp;gt;</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>&amp;lt;/connectionStrings&amp;gt;</source>
          <target state="new">&amp;lt;/connectionStrings&amp;gt;</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The storage connection string is named AzureWebJobsStorage because that's the name the WebJobs SDK uses by default.</source>
          <target state="new">The storage connection string is named AzureWebJobsStorage because that's the name the WebJobs SDK uses by default.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The same name is used here so you have to set only one connection string value in the Azure environment.</source>
          <target state="new">The same name is used here so you have to set only one connection string value in the Azure environment.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>, right-click your storage account under the <bpt id="p2">**</bpt>Storage<ept id="p2">**</ept> node, and then click <bpt id="p3">**</bpt>Properties<ept id="p3">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>, right-click your storage account under the <bpt id="p2">**</bpt>Storage<ept id="p2">**</ept> node, and then click <bpt id="p3">**</bpt>Properties<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Click Storage Account Properties</source>
          <target state="new">Click Storage Account Properties</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, click <bpt id="p2">**</bpt>Storage Account Keys<ept id="p2">**</ept>, and then click the ellipsis.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, click <bpt id="p2">**</bpt>Storage Account Keys<ept id="p2">**</ept>, and then click the ellipsis.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>New storage account</source>
          <target state="new">New storage account</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Copy the <bpt id="p1">**</bpt>Connection String<ept id="p1">**</ept>.</source>
          <target state="new">Copy the <bpt id="p1">**</bpt>Connection String<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Storage Account Keys dialog</source>
          <target state="new">Storage Account Keys dialog</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Replace the storage connection string in the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file with the connection string you just copied.</source>
          <target state="new">Replace the storage connection string in the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file with the connection string you just copied.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Make sure you select everything inside the quotation marks but not including the quotation marks before pasting.</source>
          <target state="new">Make sure you select everything inside the quotation marks but not including the quotation marks before pasting.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>App.config<ept id="p1">*</ept> file in the ContosoAdsWebJob project.</source>
          <target state="new">Open the <bpt id="p1">*</bpt>App.config<ept id="p1">*</ept> file in the ContosoAdsWebJob project.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This file has two storage connection strings, one for application data and one for logging.</source>
          <target state="new">This file has two storage connection strings, one for application data and one for logging.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For this tutorial you'll use the same account for both.</source>
          <target state="new">For this tutorial you'll use the same account for both.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The connection strings have placeholders for the storage account keys.</source>
          <target state="new">The connection strings have placeholders for the storage account keys.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>&amp;lt;configuration&amp;gt;</source>
          <target state="new">&amp;lt;configuration&amp;gt;</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>&amp;lt;connectionStrings&amp;gt;</source>
          <target state="new">&amp;lt;connectionStrings&amp;gt;</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>&amp;lt;add name="AzureWebJobsDashboard" connectionString="DefaultEndpointsProtocol=https;AccountName=</source>
          <target state="new">&amp;lt;add name="AzureWebJobsDashboard" connectionString="DefaultEndpointsProtocol=https;AccountName=</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>[accountname]</source>
          <target state="new">[accountname]</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>;AccountKey=</source>
          <target state="new">;AccountKey=</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>[accesskey]</source>
          <target state="new">[accesskey]</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>"/&amp;gt;</source>
          <target state="new">"/&amp;gt;</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>&amp;lt;add name="AzureWebJobsStorage" connectionString="DefaultEndpointsProtocol=https;AccountName=</source>
          <target state="new">&amp;lt;add name="AzureWebJobsStorage" connectionString="DefaultEndpointsProtocol=https;AccountName=</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>[accountname]</source>
          <target state="new">[accountname]</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>;AccountKey=</source>
          <target state="new">;AccountKey=</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>[accesskey]</source>
          <target state="new">[accesskey]</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>"/&amp;gt;</source>
          <target state="new">"/&amp;gt;</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>&amp;lt;add name="ContosoAdsContext" connectionString="Data Source=(localdb)\v11.0; Initial Catalog=ContosoAds; Integrated Security=True; MultipleActiveResultSets=True;"/&amp;gt;</source>
          <target state="new">&amp;lt;add name="ContosoAdsContext" connectionString="Data Source=(localdb)\v11.0; Initial Catalog=ContosoAds; Integrated Security=True; MultipleActiveResultSets=True;"/&amp;gt;</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>&amp;lt;/connectionStrings&amp;gt;</source>
          <target state="new">&amp;lt;/connectionStrings&amp;gt;</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>&amp;lt;startup&amp;gt;</source>
          <target state="new">&amp;lt;startup&amp;gt;</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>&amp;lt;supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" /&amp;gt;</source>
          <target state="new">&amp;lt;supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" /&amp;gt;</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>&amp;lt;/startup&amp;gt;</source>
          <target state="new">&amp;lt;/startup&amp;gt;</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>&amp;lt;/configuration&amp;gt;</source>
          <target state="new">&amp;lt;/configuration&amp;gt;</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>By default, the WebJobs SDK looks for connection strings named AzureWebJobsStorage and AzureWebJobsDashboard.</source>
          <target state="new">By default, the WebJobs SDK looks for connection strings named AzureWebJobsStorage and AzureWebJobsDashboard.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>As an alternative, you can <bpt id="p1">[</bpt>store the connection string however you want and pass it in explicitly to the <ph id="ph1">`JobHost`</ph> object<ept id="p1">](websites-dotnet-webjobs-sdk-storage-queues-how-to.md#config)</ept>.</source>
          <target state="new">As an alternative, you can <bpt id="p1">[</bpt>store the connection string however you want and pass it in explicitly to the <ph id="ph1">`JobHost`</ph> object<ept id="p1">](websites-dotnet-webjobs-sdk-storage-queues-how-to.md#config)</ept>.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Replace both storage connection strings with the connection string you copied earlier.</source>
          <target state="new">Replace both storage connection strings with the connection string you copied earlier.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Save your changes.</source>
          <target state="new">Save your changes.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="run"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Run the application locally</source>
          <target state="new"><ph id="ph1">&lt;a id="run"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Run the application locally</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>To start the web frontend of the application, press CTRL+F5.</source>
          <target state="new">To start the web frontend of the application, press CTRL+F5.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The default browser opens to the home page.</source>
          <target state="new">The default browser opens to the home page.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>(The web project runs because you've made it the startup project.)</source>
          <target state="new">(The web project runs because you've made it the startup project.)</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Contoso Ads home page</source>
          <target state="new">Contoso Ads home page</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>To start the WebJob backend of the application, right-click the ContosoAdsWebJob project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Start new instance<ept id="p3">**</ept>.</source>
          <target state="new">To start the WebJob backend of the application, right-click the ContosoAdsWebJob project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Start new instance<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A console application window opens and displays logging messages indicating the WebJobs SDK JobHost object has started to run.</source>
          <target state="new">A console application window opens and displays logging messages indicating the WebJobs SDK JobHost object has started to run.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Console application window showing that the backend is running</source>
          <target state="new">Console application window showing that the backend is running</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>In your browser, click  <bpt id="p1">**</bpt>Create an Ad<ept id="p1">**</ept>.</source>
          <target state="new">In your browser, click  <bpt id="p1">**</bpt>Create an Ad<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Enter some test data and select an image to upload, and then click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
          <target state="new">Enter some test data and select an image to upload, and then click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Create page</source>
          <target state="new">Create page</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The app goes to the Index page, but it doesn't show a thumbnail for the new ad because that processing hasn't happened yet.</source>
          <target state="new">The app goes to the Index page, but it doesn't show a thumbnail for the new ad because that processing hasn't happened yet.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Meanwhile, after a short wait a logging message in the console application window shows that a queue message was received and has been processed.</source>
          <target state="new">Meanwhile, after a short wait a logging message in the console application window shows that a queue message was received and has been processed.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Console application window showing that a queue message has been processed</source>
          <target state="new">Console application window showing that a queue message has been processed</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>After you see the logging messages in the console application window, refresh the Index page to see the thumbnail.</source>
          <target state="new">After you see the logging messages in the console application window, refresh the Index page to see the thumbnail.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Index page</source>
          <target state="new">Index page</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Details<ept id="p1">**</ept> for your ad to see the full-size image.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Details<ept id="p1">**</ept> for your ad to see the full-size image.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Details page</source>
          <target state="new">Details page</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>You've been running the application on your local computer, and it's using a SQL Server database located on your computer, but it's working with queues and blobs in the cloud.</source>
          <target state="new">You've been running the application on your local computer, and it's using a SQL Server database located on your computer, but it's working with queues and blobs in the cloud.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>In the following section you'll run the application in the cloud, using a cloud database as well as cloud blobs and queues.</source>
          <target state="new">In the following section you'll run the application in the cloud, using a cloud database as well as cloud blobs and queues.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="runincloud"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Run the application in the cloud</source>
          <target state="new"><ph id="ph1">&lt;a id="runincloud"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Run the application in the cloud</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>You'll do the following steps to run the application in the cloud:</source>
          <target state="new">You'll do the following steps to run the application in the cloud:</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Deploy to Web Apps.</source>
          <target state="new">Deploy to Web Apps.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Visual Studio will automatically create a new web app in App Service and SQL Database instance.</source>
          <target state="new">Visual Studio will automatically create a new web app in App Service and SQL Database instance.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Configure the web app to use your Azure SQL database and storage account.</source>
          <target state="new">Configure the web app to use your Azure SQL database and storage account.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>After you've created some ads while running in the cloud, you'll view the WebJobs SDK dashboard to see the rich monitoring features it has to offer.</source>
          <target state="new">After you've created some ads while running in the cloud, you'll view the WebJobs SDK dashboard to see the rich monitoring features it has to offer.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Deploy to Web Apps</source>
          <target state="new">Deploy to Web Apps</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Close the browser and the console application window.</source>
          <target state="new">Close the browser and the console application window.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the ContosoAdsWeb project, and then click <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the ContosoAdsWeb project, and then click <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Profile<ept id="p1">**</ept> step of the <bpt id="p2">**</bpt>Publish Web<ept id="p2">**</ept> wizard, click <bpt id="p3">**</bpt>Microsoft Azure web apps<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Profile<ept id="p1">**</ept> step of the <bpt id="p2">**</bpt>Publish Web<ept id="p2">**</ept> wizard, click <bpt id="p3">**</bpt>Microsoft Azure web apps<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Select Azure web app publish target</source>
          <target state="new">Select Azure web app publish target</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Select existing web app<ept id="p1">**</ept> box, click <bpt id="p2">**</bpt>Sign In<ept id="p2">**</ept> and enter your credentials if you're not already signed in.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Select existing web app<ept id="p1">**</ept> box, click <bpt id="p2">**</bpt>Sign In<ept id="p2">**</ept> and enter your credentials if you're not already signed in.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>After you're signed in, click <bpt id="p1">**</bpt>New<ept id="p1">**</ept>.</source>
          <target state="new">After you're signed in, click <bpt id="p1">**</bpt>New<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Click New</source>
          <target state="new">Click New</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Create web app on Microsoft Azure<ept id="p1">**</ept> dialog box, enter a unique name in the <bpt id="p2">**</bpt>Web app name<ept id="p2">**</ept> box.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Create web app on Microsoft Azure<ept id="p1">**</ept> dialog box, enter a unique name in the <bpt id="p2">**</bpt>Web app name<ept id="p2">**</ept> box.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The complete URL will consist of what you enter here plus .azurewebsites.net (as shown next to the <bpt id="p1">**</bpt>Web app name<ept id="p1">**</ept> text box).</source>
          <target state="new">The complete URL will consist of what you enter here plus .azurewebsites.net (as shown next to the <bpt id="p1">**</bpt>Web app name<ept id="p1">**</ept> text box).</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For example, if the web app name is ContosoAds, the URL will be ContosoAds.azurewebsites.net.</source>
          <target state="new">For example, if the web app name is ContosoAds, the URL will be ContosoAds.azurewebsites.net.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>App Service plan<ept id="p1">](../app-service/azure-web-sites-web-hosting-plans-in-depth-overview.md)</ept> drop-down list choose <bpt id="p2">**</bpt>Create new App Service plan<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">[</bpt>App Service plan<ept id="p1">](../app-service/azure-web-sites-web-hosting-plans-in-depth-overview.md)</ept> drop-down list choose <bpt id="p2">**</bpt>Create new App Service plan<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Enter a name for the App Service plan, such as ContosoAdsPlan.</source>
          <target state="new">Enter a name for the App Service plan, such as ContosoAdsPlan.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>Resource group<ept id="p1">](../resource-group-overview.md)</ept> drop-down list choose <bpt id="p2">**</bpt>Create new resource group<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">[</bpt>Resource group<ept id="p1">](../resource-group-overview.md)</ept> drop-down list choose <bpt id="p2">**</bpt>Create new resource group<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Enter a name for the resource group, such as ContosoAdsGroup.</source>
          <target state="new">Enter a name for the resource group, such as ContosoAdsGroup.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Region<ept id="p1">**</ept> drop-down list choose the same region you chose for your storage account.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Region<ept id="p1">**</ept> drop-down list choose the same region you chose for your storage account.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This setting specifies which Azure datacenter your web app will run in.</source>
          <target state="new">This setting specifies which Azure datacenter your web app will run in.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Keeping the web app and storage account in the same datacenter minimizes latency and data egress charges.</source>
          <target state="new">Keeping the web app and storage account in the same datacenter minimizes latency and data egress charges.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Database server<ept id="p1">**</ept> drop-down list choose <bpt id="p2">**</bpt>Create new server<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Database server<ept id="p1">**</ept> drop-down list choose <bpt id="p2">**</bpt>Create new server<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Alternatively, if your subscription already has a server, you can select that server from the drop-down list.</source>
          <target state="new">Alternatively, if your subscription already has a server, you can select that server from the drop-down list.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Enter a name for the database server, such as ContosoAdsServer.</source>
          <target state="new">Enter a name for the database server, such as ContosoAdsServer.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Enter an administrator <bpt id="p1">**</bpt>Database username<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Database password<ept id="p2">**</ept>.</source>
          <target state="new">Enter an administrator <bpt id="p1">**</bpt>Database username<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Database password<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>If you selected <bpt id="p1">**</bpt>New SQL Database server<ept id="p1">**</ept> you aren't entering an existing name and password here, you're entering a new name and password that you're defining now to use later when you access the database.</source>
          <target state="new">If you selected <bpt id="p1">**</bpt>New SQL Database server<ept id="p1">**</ept> you aren't entering an existing name and password here, you're entering a new name and password that you're defining now to use later when you access the database.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>If you selected a server that you created previously, you'll be prompted for the password to the administrative user account you already created.</source>
          <target state="new">If you selected a server that you created previously, you'll be prompted for the password to the administrative user account you already created.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Create web app on Microsoft Azure dialog</source>
          <target state="new">Create web app on Microsoft Azure dialog</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Visual Studio creates the solution, the web project, the web app in Azure, and the Azure SQL Database instance.</source>
          <target state="new">Visual Studio creates the solution, the web project, the web app in Azure, and the Azure SQL Database instance.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Connection<ept id="p1">**</ept> step of the <bpt id="p2">**</bpt>Publish Web<ept id="p2">**</ept> wizard, click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Connection<ept id="p1">**</ept> step of the <bpt id="p2">**</bpt>Publish Web<ept id="p2">**</ept> wizard, click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Connection step</source>
          <target state="new">Connection step</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> step, clear the <bpt id="p2">**</bpt>Use this connection string at runtime<ept id="p2">**</ept> check box, and then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> step, clear the <bpt id="p2">**</bpt>Use this connection string at runtime<ept id="p2">**</ept> check box, and then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Settings step</source>
          <target state="new">Settings step</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>You don't need to use the publish dialog to set the SQL connection string because you'll set that value in the Azure environment later.</source>
          <target state="new">You don't need to use the publish dialog to set the SQL connection string because you'll set that value in the Azure environment later.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>You can ignore the warnings on this page.</source>
          <target state="new">You can ignore the warnings on this page.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Normally the storage account you use when running in Azure would be different from the one you use when running locally, but for this tutorial you're using the same one in both environments.</source>
          <target state="new">Normally the storage account you use when running in Azure would be different from the one you use when running locally, but for this tutorial you're using the same one in both environments.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>So the AzureWebJobsStorage connection string does not need to be transformed.</source>
          <target state="new">So the AzureWebJobsStorage connection string does not need to be transformed.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Even if you did want to use a different storage account in the cloud, you wouldn't need to transform the connection string because the app will use an Azure environment setting when it runs in Azure.</source>
          <target state="new">Even if you did want to use a different storage account in the cloud, you wouldn't need to transform the connection string because the app will use an Azure environment setting when it runs in Azure.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>You'll see this later in the tutorial.</source>
          <target state="new">You'll see this later in the tutorial.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>For this tutorial you aren't going to be making changes to the data model used for the ContosoAdsContext database, so there is no need to use Entity Framework Code First Migrations for deployment.</source>
          <target state="new">For this tutorial you aren't going to be making changes to the data model used for the ContosoAdsContext database, so there is no need to use Entity Framework Code First Migrations for deployment.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Code First will automatically create a new database the first time the app tries to access SQL data.</source>
          <target state="new">Code First will automatically create a new database the first time the app tries to access SQL data.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>For this tutorial, the default values of the options under <bpt id="p1">**</bpt>File Publish Options<ept id="p1">**</ept> are fine.</source>
          <target state="new">For this tutorial, the default values of the options under <bpt id="p1">**</bpt>File Publish Options<ept id="p1">**</ept> are fine.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Preview<ept id="p1">**</ept> step, click <bpt id="p2">**</bpt>Start Preview<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Preview<ept id="p1">**</ept> step, click <bpt id="p2">**</bpt>Start Preview<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Click Start Preview</source>
          <target state="new">Click Start Preview</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>You can ignore the warning about no databases being published.</source>
          <target state="new">You can ignore the warning about no databases being published.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Entity Framework Code First will create the database; it doesn't need to be published.</source>
          <target state="new">Entity Framework Code First will create the database; it doesn't need to be published.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>the preview window shows that binaries and configuration files from the WebJob project will be copied to the <bpt id="p1">*</bpt>app_data\jobs\continuous<ept id="p1">*</ept> folder of the web app.</source>
          <target state="new">the preview window shows that binaries and configuration files from the WebJob project will be copied to the <bpt id="p1">*</bpt>app_data\jobs\continuous<ept id="p1">*</ept> folder of the web app.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>WebJobs files in preview window</source>
          <target state="new">WebJobs files in preview window</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Visual Studio deploys the application and opens the home page URL in the browser.</source>
          <target state="new">Visual Studio deploys the application and opens the home page URL in the browser.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>You won't be able to use the web app until you set connection strings in the Azure environment in the next section.</source>
          <target state="new">You won't be able to use the web app until you set connection strings in the Azure environment in the next section.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>You'll see either an error page or the home page depending on web app and database creation options you chose earlier.</source>
          <target state="new">You'll see either an error page or the home page depending on web app and database creation options you chose earlier.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Configure the web app to use your Azure SQL database and storage account.</source>
          <target state="new">Configure the web app to use your Azure SQL database and storage account.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>It's a security best practice to <bpt id="p1">[</bpt>avoid putting sensitive information such as connection strings in files that are stored in source code repositories<ept id="p1">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/source-control#secrets)</ept>.</source>
          <target state="new">It's a security best practice to <bpt id="p1">[</bpt>avoid putting sensitive information such as connection strings in files that are stored in source code repositories<ept id="p1">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/source-control#secrets)</ept>.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Azure provides a way to do that: you can set connection string and other setting values in the Azure environment, and ASP.NET configuration APIs automatically pick up these values when the app runs in Azure.</source>
          <target state="new">Azure provides a way to do that: you can set connection string and other setting values in the Azure environment, and ASP.NET configuration APIs automatically pick up these values when the app runs in Azure.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>You can set these values in Azure by using <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>, the portal, Windows PowerShell, or the cross-platform command-line interface.</source>
          <target state="new">You can set these values in Azure by using <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>, the portal, Windows PowerShell, or the cross-platform command-line interface.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How Application Strings and Connection Strings Work<ept id="p1">](/blog/2013/07/17/windows-azure-web-sites-how-application-strings-and-connection-strings-work/)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>How Application Strings and Connection Strings Work<ept id="p1">](/blog/2013/07/17/windows-azure-web-sites-how-application-strings-and-connection-strings-work/)</ept>.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>In this section you use <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept> to set connection string values in Azure.</source>
          <target state="new">In this section you use <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept> to set connection string values in Azure.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>, right-click your web app under the <bpt id="p2">**</bpt>Web Apps<ept id="p2">**</ept> node, and then click <bpt id="p3">**</bpt>View Settings<ept id="p3">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>, right-click your web app under the <bpt id="p2">**</bpt>Web Apps<ept id="p2">**</ept> node, and then click <bpt id="p3">**</bpt>View Settings<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Azure Web App<ept id="p1">**</ept> window opens on the <bpt id="p2">**</bpt>Configuration<ept id="p2">**</ept> tab.</source>
          <target state="new">The <bpt id="p1">**</bpt>Azure Web App<ept id="p1">**</ept> window opens on the <bpt id="p2">**</bpt>Configuration<ept id="p2">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Change the name of the DefaultConnection connection string to ContosoAdsContext.</source>
          <target state="new">Change the name of the DefaultConnection connection string to ContosoAdsContext.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Azure automatically created this connection string when you created the web app with an associated database, so it already has the right connection string value.</source>
          <target state="new">Azure automatically created this connection string when you created the web app with an associated database, so it already has the right connection string value.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>You're changing just the name to what your code is looking for.</source>
          <target state="new">You're changing just the name to what your code is looking for.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Add two new connection strings, named AzureWebJobsStorage and AzureWebJobsDashboard.</source>
          <target state="new">Add two new connection strings, named AzureWebJobsStorage and AzureWebJobsDashboard.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Set type to Custom, and set the connection string value to the same value that you used earlier for the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> and <bpt id="p2">*</bpt>App.config<ept id="p2">*</ept> files.</source>
          <target state="new">Set type to Custom, and set the connection string value to the same value that you used earlier for the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> and <bpt id="p2">*</bpt>App.config<ept id="p2">*</ept> files.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>(Make sure you include the entire connection string, not just the access key, and don't include the quotation marks.)</source>
          <target state="new">(Make sure you include the entire connection string, not just the access key, and don't include the quotation marks.)</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>These connection strings are used by the WebJobs SDK, one for application data and one for logging.</source>
          <target state="new">These connection strings are used by the WebJobs SDK, one for application data and one for logging.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>As you saw earlier, the one for application data is also used by the web frontend code.</source>
          <target state="new">As you saw earlier, the one for application data is also used by the web frontend code.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Connection strings in Azure portal</source>
          <target state="new">Connection strings in Azure portal</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>, right-click the web app, and then click <bpt id="p2">**</bpt>Stop web app<ept id="p2">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>, right-click the web app, and then click <bpt id="p2">**</bpt>Stop web app<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>After the web app stops, right-click the web app again, and then click <bpt id="p1">**</bpt>Start web app<ept id="p1">**</ept>.</source>
          <target state="new">After the web app stops, right-click the web app again, and then click <bpt id="p1">**</bpt>Start web app<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The WebJob automatically starts when you publish, but it stops when you make a configuration change.</source>
          <target state="new">The WebJob automatically starts when you publish, but it stops when you make a configuration change.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>To restart it you can either restart the web app or restart the WebJob in the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept>.</source>
          <target state="new">To restart it you can either restart the web app or restart the WebJob in the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept>.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>It's generally recommended to restart the web app after a configuration change.</source>
          <target state="new">It's generally recommended to restart the web app after a configuration change.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Refresh the browser window that has the web app URL in its address bar.</source>
          <target state="new">Refresh the browser window that has the web app URL in its address bar.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The home page appears.</source>
          <target state="new">The home page appears.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Create an ad, as you did when you ran the application locally.</source>
          <target state="new">Create an ad, as you did when you ran the application locally.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The Index page shows without a thumbnail at first.</source>
          <target state="new">The Index page shows without a thumbnail at first.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Refresh the page after a few seconds, and the thumbnail appears.</source>
          <target state="new">Refresh the page after a few seconds, and the thumbnail appears.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>If the thumbnail doesn't appear, the WebJob may not have started automatically.</source>
          <target state="new">If the thumbnail doesn't appear, the WebJob may not have started automatically.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>In that case, go to the WebJobs tab in the</source>
          <target state="new">In that case, go to the WebJobs tab in the</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>View the WebJobs SDK dashboard</source>
          <target state="new">View the WebJobs SDK dashboard</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">](https://manage.windowsazure.com)</ept>, select your web app.</source>
          <target state="new">In the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">](https://manage.windowsazure.com)</ept>, select your web app.</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>WebJobs<ept id="p1">**</ept> tab.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>WebJobs<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>click the URL in the Logs column for your WebJob.</source>
          <target state="new">click the URL in the Logs column for your WebJob.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>WebJobs tab</source>
          <target state="new">WebJobs tab</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>A new browser tab opens to the WebJobs SDK dashboard.</source>
          <target state="new">A new browser tab opens to the WebJobs SDK dashboard.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The dashboard shows that the WebJob is running and shows a list of functions in your code that the WebJobs SDK triggered.</source>
          <target state="new">The dashboard shows that the WebJob is running and shows a list of functions in your code that the WebJobs SDK triggered.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Click one of the functions to see details about its execution</source>
          <target state="new">Click one of the functions to see details about its execution</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>WebJobs SDK dashboard</source>
          <target state="new">WebJobs SDK dashboard</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>WebJobs SDK dashboard</source>
          <target state="new">WebJobs SDK dashboard</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Replay Function<ept id="p1">**</ept> button on this page causes the WebJobs SDK framework to call the function again, and it gives you a chance to change the data passed to the function first.</source>
          <target state="new">The <bpt id="p1">**</bpt>Replay Function<ept id="p1">**</ept> button on this page causes the WebJobs SDK framework to call the function again, and it gives you a chance to change the data passed to the function first.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> When you're finished testing, delete the web app and the SQL Database instance.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> When you're finished testing, delete the web app and the SQL Database instance.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The web app is free, but the SQL Database instance and storage account accrue charges (minimal due to small size).</source>
          <target state="new">The web app is free, but the SQL Database instance and storage account accrue charges (minimal due to small size).</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Also, if you leave the web app running, anyone who finds your URL can create and view ads.</source>
          <target state="new">Also, if you leave the web app running, anyone who finds your URL can create and view ads.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>In the Azure portal, go to the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> tab for your web app, and then click the <bpt id="p2">**</bpt>Delete<ept id="p2">**</ept> button at the bottom of the page.</source>
          <target state="new">In the Azure portal, go to the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> tab for your web app, and then click the <bpt id="p2">**</bpt>Delete<ept id="p2">**</ept> button at the bottom of the page.</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>You can then select a check box to delete the SQL Database instance at the same time.</source>
          <target state="new">You can then select a check box to delete the SQL Database instance at the same time.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>If you just want to temporarily prevent others from accessing the web app, click <bpt id="p1">**</bpt>Stop<ept id="p1">**</ept> instead.</source>
          <target state="new">If you just want to temporarily prevent others from accessing the web app, click <bpt id="p1">**</bpt>Stop<ept id="p1">**</ept> instead.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>In that case, charges will continue to accrue for the SQL Database and Storage account.</source>
          <target state="new">In that case, charges will continue to accrue for the SQL Database and Storage account.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>You can follow a similar procedure to delete the SQL database and storage account when you no longer need them.</source>
          <target state="new">You can follow a similar procedure to delete the SQL database and storage account when you no longer need them.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Enable AlwaysOn for long-running processes</source>
          <target state="new">Enable AlwaysOn for long-running processes</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>To make sure your WebJobs are always running, and running on all instances of your web app you have to enabled the <bpt id="p1">[</bpt>AlwaysOn<ept id="p1">](http://weblogs.asp.net/scottgu/archive/2014/01/16/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance.aspx)</ept> feature.</source>
          <target state="new">To make sure your WebJobs are always running, and running on all instances of your web app you have to enabled the <bpt id="p1">[</bpt>AlwaysOn<ept id="p1">](http://weblogs.asp.net/scottgu/archive/2014/01/16/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance.aspx)</ept> feature.</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="create"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create the application from scratch</source>
          <target state="new"><ph id="ph1">&lt;a id="create"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create the application from scratch</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>In this section you'll do the following tasks:</source>
          <target state="new">In this section you'll do the following tasks:</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Create a Visual Studio solution with a web project.</source>
          <target state="new">Create a Visual Studio solution with a web project.</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Add a class library project for the data access layer that is shared between frontend and backend.</source>
          <target state="new">Add a class library project for the data access layer that is shared between frontend and backend.</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Add a Console Application project for the backend, with WebJobs deployment enabled.</source>
          <target state="new">Add a Console Application project for the backend, with WebJobs deployment enabled.</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Add NuGet packages.</source>
          <target state="new">Add NuGet packages.</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Set project references.</source>
          <target state="new">Set project references.</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Copy application code and configuration files from the downloaded application that you worked with in the previous section of the tutorial.</source>
          <target state="new">Copy application code and configuration files from the downloaded application that you worked with in the previous section of the tutorial.</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Review the parts of the code that work with Azure blobs and queues and the WebJobs SDK.</source>
          <target state="new">Review the parts of the code that work with Azure blobs and queues and the WebJobs SDK.</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Create a Visual Studio solution with a web project and class library project</source>
          <target state="new">Create a Visual Studio solution with a web project and class library project</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>In Visual Studio, choose <bpt id="p1">**</bpt>New<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> from the <bpt id="p3">**</bpt>File<ept id="p3">**</ept> menu.</source>
          <target state="new">In Visual Studio, choose <bpt id="p1">**</bpt>New<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> from the <bpt id="p3">**</bpt>File<ept id="p3">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Web<ept id="p3">**</ept> &gt; <bpt id="p4">**</bpt>ASP.NET Web Application<ept id="p4">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Web<ept id="p3">**</ept> &gt; <bpt id="p4">**</bpt>ASP.NET Web Application<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Name the project ContosoAdsWeb, name the solution ContosoAdsWebJobsSDK (change the solution name if you're putting it in the same folder as the downloaded solution), and then click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">Name the project ContosoAdsWeb, name the solution ContosoAdsWebJobsSDK (change the solution name if you're putting it in the same folder as the downloaded solution), and then click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>New Project</source>
          <target state="new">New Project</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New ASP.NET Project<ept id="p1">**</ept> dialog, choose the MVC template, and clear the <bpt id="p2">**</bpt>Host in the cloud<ept id="p2">**</ept> check box under <bpt id="p3">**</bpt>Microsoft Azure<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>New ASP.NET Project<ept id="p1">**</ept> dialog, choose the MVC template, and clear the <bpt id="p2">**</bpt>Host in the cloud<ept id="p2">**</ept> check box under <bpt id="p3">**</bpt>Microsoft Azure<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Selecting <bpt id="p1">**</bpt>Host in the cloud<ept id="p1">**</ept> enables Visual Studio to automatically create a new Azure web app and SQL Database.</source>
          <target state="new">Selecting <bpt id="p1">**</bpt>Host in the cloud<ept id="p1">**</ept> enables Visual Studio to automatically create a new Azure web app and SQL Database.</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Since you already created these earlier, you don't need to do so now while creating the project.</source>
          <target state="new">Since you already created these earlier, you don't need to do so now while creating the project.</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>If you want to create a new one, select the check box.</source>
          <target state="new">If you want to create a new one, select the check box.</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>You can then configure the new web app and SQL database the same way you did earlier when you were deploying the application.</source>
          <target state="new">You can then configure the new web app and SQL database the same way you did earlier when you were deploying the application.</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Change Authentication<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Change Authentication<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Change Authentication</source>
          <target state="new">Change Authentication</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Change Authentication<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>No Authentication<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Change Authentication<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>No Authentication<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>No Authentication</source>
          <target state="new">No Authentication</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New ASP.NET Project<ept id="p1">**</ept> dialog, click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>New ASP.NET Project<ept id="p1">**</ept> dialog, click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Visual Studio creates the solution and the web project.</source>
          <target state="new">Visual Studio creates the solution and the web project.</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the solution (not the project), and choose <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>New Project<ept id="p3">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the solution (not the project), and choose <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>New Project<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Project<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Windows Desktop<ept id="p3">**</ept> &gt; <bpt id="p4">**</bpt>Class Library<ept id="p4">**</ept> template.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Add New Project<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Windows Desktop<ept id="p3">**</ept> &gt; <bpt id="p4">**</bpt>Class Library<ept id="p4">**</ept> template.</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Name the project <bpt id="p1">*</bpt>ContosoAdsCommon<ept id="p1">*</ept>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new">Name the project <bpt id="p1">*</bpt>ContosoAdsCommon<ept id="p1">*</ept>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>This project will contain the Entity Framework context and the data model which both the frontend and backend will use.</source>
          <target state="new">This project will contain the Entity Framework context and the data model which both the frontend and backend will use.</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>As an alternative you could define the EF-related classes in the web project and reference that project from the WebJob project.</source>
          <target state="new">As an alternative you could define the EF-related classes in the web project and reference that project from the WebJob project.</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>But then your WebJob project would have a reference to web assemblies which it doesn't need.</source>
          <target state="new">But then your WebJob project would have a reference to web assemblies which it doesn't need.</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Add a Console Application project that has WebJobs deployment enabled</source>
          <target state="new">Add a Console Application project that has WebJobs deployment enabled</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Right-click the web project (not the solution or the class library project), and then click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>New Azure WebJob Project<ept id="p2">**</ept>.</source>
          <target state="new">Right-click the web project (not the solution or the class library project), and then click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>New Azure WebJob Project<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>New Azure WebJob Project menu selection</source>
          <target state="new">New Azure WebJob Project menu selection</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Azure WebJob<ept id="p1">**</ept> dialog, enter ContosoAdsWebJob as both the <bpt id="p2">**</bpt>Project name<ept id="p2">**</ept> and the <bpt id="p3">**</bpt>WebJob name<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Add Azure WebJob<ept id="p1">**</ept> dialog, enter ContosoAdsWebJob as both the <bpt id="p2">**</bpt>Project name<ept id="p2">**</ept> and the <bpt id="p3">**</bpt>WebJob name<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Leave <bpt id="p1">**</bpt>WebJob run mode<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>Run Continuously<ept id="p2">**</ept>.</source>
          <target state="new">Leave <bpt id="p1">**</bpt>WebJob run mode<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>Run Continuously<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Visual Studio creates a Console application that is configured to deploy as a WebJob whenever you deploy the web project.</source>
          <target state="new">Visual Studio creates a Console application that is configured to deploy as a WebJob whenever you deploy the web project.</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>To do that it performed the following tasks after creating the project:</source>
          <target state="new">To do that it performed the following tasks after creating the project:</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Added a <bpt id="p1">*</bpt>webjob-publish-settings.json<ept id="p1">*</ept> file in the WebJob project Properties folder.</source>
          <target state="new">Added a <bpt id="p1">*</bpt>webjob-publish-settings.json<ept id="p1">*</ept> file in the WebJob project Properties folder.</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Added a <bpt id="p1">*</bpt>webjobs-list.json<ept id="p1">*</ept> file in the web project Properties folder.</source>
          <target state="new">Added a <bpt id="p1">*</bpt>webjobs-list.json<ept id="p1">*</ept> file in the web project Properties folder.</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Installed the Microsoft.Web.WebJobs.Publish NuGet package in the WebJob project.</source>
          <target state="new">Installed the Microsoft.Web.WebJobs.Publish NuGet package in the WebJob project.</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>For more information about these changes, see <bpt id="p1">[</bpt>How to Deploy WebJobs by using Visual Studio<ept id="p1">](websites-dotnet-deploy-webjobs.md)</ept>.</source>
          <target state="new">For more information about these changes, see <bpt id="p1">[</bpt>How to Deploy WebJobs by using Visual Studio<ept id="p1">](websites-dotnet-deploy-webjobs.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Add NuGet packages</source>
          <target state="new">Add NuGet packages</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The new-project template for a WebJob project automatically installs the WebJobs SDK NuGet package <bpt id="p1">[</bpt>Microsoft.Azure.WebJobs<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.WebJobs)</ept> and its dependencies.</source>
          <target state="new">The new-project template for a WebJob project automatically installs the WebJobs SDK NuGet package <bpt id="p1">[</bpt>Microsoft.Azure.WebJobs<ept id="p1">](http://www.nuget.org/packages/Microsoft.Azure.WebJobs)</ept> and its dependencies.</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>One of the WebJobs SDK dependencies that is installed automatically in the WebJob project is the Azure Storage Client Library (SCL).</source>
          <target state="new">One of the WebJobs SDK dependencies that is installed automatically in the WebJob project is the Azure Storage Client Library (SCL).</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>However, you need to add it to the web project to work with blobs and queues.</source>
          <target state="new">However, you need to add it to the web project to work with blobs and queues.</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Manage NuGet Packages<ept id="p1">**</ept> dialog for the solution.</source>
          <target state="new">Open the <bpt id="p1">**</bpt>Manage NuGet Packages<ept id="p1">**</ept> dialog for the solution.</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>In the left pane, select <bpt id="p1">**</bpt>Installed packages<ept id="p1">**</ept>.</source>
          <target state="new">In the left pane, select <bpt id="p1">**</bpt>Installed packages<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Find the <bpt id="p1">*</bpt>Azure Storage<ept id="p1">*</ept> package, and then click <bpt id="p2">**</bpt>Manage<ept id="p2">**</ept>.</source>
          <target state="new">Find the <bpt id="p1">*</bpt>Azure Storage<ept id="p1">*</ept> package, and then click <bpt id="p2">**</bpt>Manage<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Select Projects<ept id="p1">**</ept> box, select the <bpt id="p2">**</bpt>ContosoAdsWeb<ept id="p2">**</ept> check box, and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Select Projects<ept id="p1">**</ept> box, select the <bpt id="p2">**</bpt>ContosoAdsWeb<ept id="p2">**</ept> check box, and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>All three projects use the Entity Framework to work with data in SQL Database.</source>
          <target state="new">All three projects use the Entity Framework to work with data in SQL Database.</target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>In the left pane, select <bpt id="p1">**</bpt>Online<ept id="p1">**</ept>.</source>
          <target state="new">In the left pane, select <bpt id="p1">**</bpt>Online<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Find the <bpt id="p1">*</bpt>EntityFramework<ept id="p1">*</ept> NuGet package, and install it in all three projects.</source>
          <target state="new">Find the <bpt id="p1">*</bpt>EntityFramework<ept id="p1">*</ept> NuGet package, and install it in all three projects.</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Set project references</source>
          <target state="new">Set project references</target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Both web and WebJob projects will work with the SQL database, so both need a reference to the ContosoAdsCommon project.</source>
          <target state="new">Both web and WebJob projects will work with the SQL database, so both need a reference to the ContosoAdsCommon project.</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>In the ContosoAdsWeb project, set a reference to the ContosoAdsCommon project.</source>
          <target state="new">In the ContosoAdsWeb project, set a reference to the ContosoAdsCommon project.</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>(Right-click the ContosoAdsWeb project, and then click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Reference<ept id="p2">**</ept>.</source>
          <target state="new">(Right-click the ContosoAdsWeb project, and then click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Reference<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Reference Manager<ept id="p1">**</ept> dialog box, select <bpt id="p2">**</bpt>Solution<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Projects<ept id="p3">**</ept> &gt; <bpt id="p4">**</bpt>ContosoAdsCommon<ept id="p4">**</ept>, and then click <bpt id="p5">**</bpt>OK<ept id="p5">**</ept>.)</source>
          <target state="new">In the <bpt id="p1">**</bpt>Reference Manager<ept id="p1">**</ept> dialog box, select <bpt id="p2">**</bpt>Solution<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Projects<ept id="p3">**</ept> &gt; <bpt id="p4">**</bpt>ContosoAdsCommon<ept id="p4">**</ept>, and then click <bpt id="p5">**</bpt>OK<ept id="p5">**</ept>.)</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>In the ContosoAdsWebJob project, set a reference to the ContosAdsCommon project.</source>
          <target state="new">In the ContosoAdsWebJob project, set a reference to the ContosAdsCommon project.</target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The WebJob project needs references for working with images and for accessing connection strings.</source>
          <target state="new">The WebJob project needs references for working with images and for accessing connection strings.</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>In the ContosoAdsWebJob project, set a reference to <ph id="ph1">`System.Drawing`</ph> and <ph id="ph2">`System.Configuration`</ph>.</source>
          <target state="new">In the ContosoAdsWebJob project, set a reference to <ph id="ph1">`System.Drawing`</ph> and <ph id="ph2">`System.Configuration`</ph>.</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Add code and configuration files</source>
          <target state="new">Add code and configuration files</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>This tutorial does not show how to <bpt id="p1">[</bpt>create MVC controllers and views using scaffolding<ept id="p1">](http://www.asp.net/mvc/tutorials/mvc-5/introduction/getting-started)</ept>, how to <bpt id="p2">[</bpt>write Entity Framework code that works with SQL Server databases<ept id="p2">](http://www.asp.net/mvc/tutorials/getting-started-with-ef-using-mvc)</ept>, or <bpt id="p3">[</bpt>the basics of asynchronous programming in ASP.NET 4.5<ept id="p3">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/web-development-best-practices#async)</ept>.</source>
          <target state="new">This tutorial does not show how to <bpt id="p1">[</bpt>create MVC controllers and views using scaffolding<ept id="p1">](http://www.asp.net/mvc/tutorials/mvc-5/introduction/getting-started)</ept>, how to <bpt id="p2">[</bpt>write Entity Framework code that works with SQL Server databases<ept id="p2">](http://www.asp.net/mvc/tutorials/getting-started-with-ef-using-mvc)</ept>, or <bpt id="p3">[</bpt>the basics of asynchronous programming in ASP.NET 4.5<ept id="p3">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/web-development-best-practices#async)</ept>.</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>So all that remains to do is copy code and configuration files from the downloaded solution into the new solution.</source>
          <target state="new">So all that remains to do is copy code and configuration files from the downloaded solution into the new solution.</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>After you do that, the following sections will show and explain key parts of the code.</source>
          <target state="new">After you do that, the following sections will show and explain key parts of the code.</target>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>To add files to a project or a folder, right-click the project or folder and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Existing Item<ept id="p2">**</ept>.</source>
          <target state="new">To add files to a project or a folder, right-click the project or folder and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Existing Item<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Select the files you want and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</source>
          <target state="new">Select the files you want and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>If asked whether you want to replace existing files, click <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>.</source>
          <target state="new">If asked whether you want to replace existing files, click <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>In the ContosoAdsCommon project, delete the <bpt id="p1">*</bpt>Class1.cs<ept id="p1">*</ept> file and add in its place the following files from the downloaded project.</source>
          <target state="new">In the ContosoAdsCommon project, delete the <bpt id="p1">*</bpt>Class1.cs<ept id="p1">*</ept> file and add in its place the following files from the downloaded project.</target>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Ad.cs</source>
          <target state="new">Ad.cs</target>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>ContosoAdscontext.cs</source>
          <target state="new">ContosoAdscontext.cs</target>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>BlobInformation.cs<ept id="p1">*</ept></source>
          <target state="new"><bpt id="p1">*</bpt>BlobInformation.cs<ept id="p1">*</ept></target>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>In the ContosoAdsWeb project, add the following files from the downloaded project.</source>
          <target state="new">In the ContosoAdsWeb project, add the following files from the downloaded project.</target>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Web.config</source>
          <target state="new">Web.config</target>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Global.asax.cs</source>
          <target state="new">Global.asax.cs</target>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>Controllers<ept id="p1">*</ept> folder: <bpt id="p2">*</bpt>AdController.cs<ept id="p2">*</ept></source>
          <target state="new">In the <bpt id="p1">*</bpt>Controllers<ept id="p1">*</ept> folder: <bpt id="p2">*</bpt>AdController.cs<ept id="p2">*</ept></target>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>Views\Shared<ept id="p1">*</ept> folder: <ph id="ph1">&lt;em&gt;</ph>_Layout.cshtml<ph id="ph2">&lt;/em&gt;</ph> file.</source>
          <target state="new">In the <bpt id="p1">*</bpt>Views\Shared<ept id="p1">*</ept> folder: <ph id="ph1">&lt;em&gt;</ph>_Layout.cshtml<ph id="ph2">&lt;/em&gt;</ph> file.</target>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>Views\Home<ept id="p1">*</ept> folder: <bpt id="p2">*</bpt>Index.cshtml<ept id="p2">*</ept>.</source>
          <target state="new">In the <bpt id="p1">*</bpt>Views\Home<ept id="p1">*</ept> folder: <bpt id="p2">*</bpt>Index.cshtml<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>Views\Ad<ept id="p1">*</ept> folder (create the folder first): five <bpt id="p2">*</bpt>.cshtml<ept id="p2">*</ept> files.</source>
          <target state="new">In the <bpt id="p1">*</bpt>Views\Ad<ept id="p1">*</ept> folder (create the folder first): five <bpt id="p2">*</bpt>.cshtml<ept id="p2">*</ept> files.</target>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>In the ContosoAdsWebJob project, add the following files from the downloaded project.</source>
          <target state="new">In the ContosoAdsWebJob project, add the following files from the downloaded project.</target>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>App.config<ept id="p1">*</ept> (change the file type filter to <bpt id="p2">**</bpt>All Files<ept id="p2">**</ept>)</source>
          <target state="new"><bpt id="p1">*</bpt>App.config<ept id="p1">*</ept> (change the file type filter to <bpt id="p2">**</bpt>All Files<ept id="p2">**</ept>)</target>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Program.cs</source>
          <target state="new">Program.cs</target>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Functions.cs</source>
          <target state="new">Functions.cs</target>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>You can now build, run, and deploy the application as instructed earlier in the tutorial.</source>
          <target state="new">You can now build, run, and deploy the application as instructed earlier in the tutorial.</target>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Before you do that, however, stop the WebJob that is still running in the first web app you deployed to.</source>
          <target state="new">Before you do that, however, stop the WebJob that is still running in the first web app you deployed to.</target>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Otherwise that WebJob will process queue messages created locally or by the app running in a new web app, since all are using the same storage account.</source>
          <target state="new">Otherwise that WebJob will process queue messages created locally or by the app running in a new web app, since all are using the same storage account.</target>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="code"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Review the application code</source>
          <target state="new"><ph id="ph1">&lt;a id="code"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Review the application code</target>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The following sections explain the code related to working with the WebJobs SDK and Azure Storage blobs and queues.</source>
          <target state="new">The following sections explain the code related to working with the WebJobs SDK and Azure Storage blobs and queues.</target>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  For the code specific to the WebJobs SDK, see <bpt id="p2">[</bpt>Program.cs and Functions.cs<ept id="p2">](#programcs)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  For the code specific to the WebJobs SDK, see <bpt id="p2">[</bpt>Program.cs and Functions.cs<ept id="p2">](#programcs)</ept>.</target>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>ContosoAdsCommon - Ad.cs</source>
          <target state="new">ContosoAdsCommon - Ad.cs</target>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The Ad.cs file defines an enum for ad categories and a POCO entity class for ad information.</source>
          <target state="new">The Ad.cs file defines an enum for ad categories and a POCO entity class for ad information.</target>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>ContosoAdsCommon - ContosoAdsContext.cs</source>
          <target state="new">ContosoAdsCommon - ContosoAdsContext.cs</target>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The ContosoAdsContext class specifies that the Ad class is used in a DbSet collection, which Entity Framework will store in a SQL database.</source>
          <target state="new">The ContosoAdsContext class specifies that the Ad class is used in a DbSet collection, which Entity Framework will store in a SQL database.</target>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The class has two constructors.</source>
          <target state="new">The class has two constructors.</target>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The first of them is used by the web project, and specifies the name of a connection string that is stored in the Web.config file or the Azure runtime environment.</source>
          <target state="new">The first of them is used by the web project, and specifies the name of a connection string that is stored in the Web.config file or the Azure runtime environment.</target>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The second constructor enables you to pass in the actual connection string.</source>
          <target state="new">The second constructor enables you to pass in the actual connection string.</target>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>That is needed by the WebJob project, since it doesn't have a Web.config file.</source>
          <target state="new">That is needed by the WebJob project, since it doesn't have a Web.config file.</target>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>You saw earlier where this connection string was stored, and you'll see later how the code retrieves the connection string when it instantiates the DbContext class.</source>
          <target state="new">You saw earlier where this connection string was stored, and you'll see later how the code retrieves the connection string when it instantiates the DbContext class.</target>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>ContosoAdsCommon - BlobInformation.cs</source>
          <target state="new">ContosoAdsCommon - BlobInformation.cs</target>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`BlobInformation`</ph> class is used to store information about an image blob in a queue message.</source>
          <target state="new">The <ph id="ph1">`BlobInformation`</ph> class is used to store information about an image blob in a queue message.</target>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>ContosoAdsWeb - Global.asax.cs</source>
          <target state="new">ContosoAdsWeb - Global.asax.cs</target>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Code that is called from the <ph id="ph1">`Application_Start`</ph> method creates an <bpt id="p1">*</bpt>images<ept id="p1">*</ept> blob container and an <bpt id="p2">*</bpt>images<ept id="p2">*</ept> queue if they don't already exist.</source>
          <target state="new">Code that is called from the <ph id="ph1">`Application_Start`</ph> method creates an <bpt id="p1">*</bpt>images<ept id="p1">*</ept> blob container and an <bpt id="p2">*</bpt>images<ept id="p2">*</ept> queue if they don't already exist.</target>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>This ensures that whenever you start using a new storage account, the required blob container and queue will be created automatically.</source>
          <target state="new">This ensures that whenever you start using a new storage account, the required blob container and queue will be created automatically.</target>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The code gets access to the storage account by using the storage connection string from the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file or Azure runtime environment.</source>
          <target state="new">The code gets access to the storage account by using the storage connection string from the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file or Azure runtime environment.</target>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Then it gets a reference to the <bpt id="p1">*</bpt>images<ept id="p1">*</ept> blob container, creates the container if it doesn't already exist, and sets access permissions on the new container.</source>
          <target state="new">Then it gets a reference to the <bpt id="p1">*</bpt>images<ept id="p1">*</ept> blob container, creates the container if it doesn't already exist, and sets access permissions on the new container.</target>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>By default new containers allow only clients with storage account credentials to access blobs.</source>
          <target state="new">By default new containers allow only clients with storage account credentials to access blobs.</target>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The web app needs the blobs to be public so that it can display images using URLs that point to the image blobs.</source>
          <target state="new">The web app needs the blobs to be public so that it can display images using URLs that point to the image blobs.</target>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Similar code gets a reference to the <bpt id="p1">*</bpt>blobnamerequest<ept id="p1">*</ept> queue and creates a new queue.</source>
          <target state="new">Similar code gets a reference to the <bpt id="p1">*</bpt>blobnamerequest<ept id="p1">*</ept> queue and creates a new queue.</target>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>In this case no permissions change is needed.</source>
          <target state="new">In this case no permissions change is needed.</target>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>ResolveBlobName<ept id="p1">](#resolveblobname)</ept> section later in the tutorial explains why the queue that the web application writes to is used just for getting blob names and not for generating thumbnails.</source>
          <target state="new">The <bpt id="p1">[</bpt>ResolveBlobName<ept id="p1">](#resolveblobname)</ept> section later in the tutorial explains why the queue that the web application writes to is used just for getting blob names and not for generating thumbnails.</target>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>ContosoAdsWeb - _Layout.cshtml</source>
          <target state="new">ContosoAdsWeb - _Layout.cshtml</target>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>_Layout.cshtml<ept id="p1">*</ept> file sets the app name in the header and footer, and creates an "Ads" menu entry.</source>
          <target state="new">The <bpt id="p1">*</bpt>_Layout.cshtml<ept id="p1">*</ept> file sets the app name in the header and footer, and creates an "Ads" menu entry.</target>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>ContosoAdsWeb - Views\Home\Index.cshtml</source>
          <target state="new">ContosoAdsWeb - Views\Home\Index.cshtml</target>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Views\Home\Index.cshtml<ept id="p1">*</ept> file displays category links on the home page.</source>
          <target state="new">The <bpt id="p1">*</bpt>Views\Home\Index.cshtml<ept id="p1">*</ept> file displays category links on the home page.</target>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The links pass the integer value of the <ph id="ph1">`Category`</ph> enum in a querystring variable to the Ads Index page.</source>
          <target state="new">The links pass the integer value of the <ph id="ph1">`Category`</ph> enum in a querystring variable to the Ads Index page.</target>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>ContosoAdsWeb - AdController.cs</source>
          <target state="new">ContosoAdsWeb - AdController.cs</target>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>AdController.cs<ept id="p1">*</ept> file the constructor calls the <ph id="ph1">`InitializeStorage`</ph> method to create Azure Storage Client Library objects that provide an API for working with blobs and queues.</source>
          <target state="new">In the <bpt id="p1">*</bpt>AdController.cs<ept id="p1">*</ept> file the constructor calls the <ph id="ph1">`InitializeStorage`</ph> method to create Azure Storage Client Library objects that provide an API for working with blobs and queues.</target>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Then the code gets a reference to the <bpt id="p1">*</bpt>images<ept id="p1">*</ept> blob container as you saw earlier in <bpt id="p2">*</bpt>Global.asax.cs<ept id="p2">*</ept>.</source>
          <target state="new">Then the code gets a reference to the <bpt id="p1">*</bpt>images<ept id="p1">*</ept> blob container as you saw earlier in <bpt id="p2">*</bpt>Global.asax.cs<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>While doing that it sets a default <bpt id="p1">[</bpt>retry policy<ept id="p1">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/transient-fault-handling)</ept> appropriate for a web app.</source>
          <target state="new">While doing that it sets a default <bpt id="p1">[</bpt>retry policy<ept id="p1">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/transient-fault-handling)</ept> appropriate for a web app.</target>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The default exponential backoff retry policy could hang the web app for longer than a minute on repeated retries for a transient fault.</source>
          <target state="new">The default exponential backoff retry policy could hang the web app for longer than a minute on repeated retries for a transient fault.</target>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The retry policy specified here waits 3 seconds after each try for up to 3 tries.</source>
          <target state="new">The retry policy specified here waits 3 seconds after each try for up to 3 tries.</target>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Similar code gets a reference to the <bpt id="p1">*</bpt>images<ept id="p1">*</ept> queue.</source>
          <target state="new">Similar code gets a reference to the <bpt id="p1">*</bpt>images<ept id="p1">*</ept> queue.</target>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Most of the controller code is typical for working with an Entity Framework data model using a DbContext class.</source>
          <target state="new">Most of the controller code is typical for working with an Entity Framework data model using a DbContext class.</target>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>An exception is the HttpPost <ph id="ph1">`Create`</ph> method, which uploads a file and saves it in blob storage.</source>
          <target state="new">An exception is the HttpPost <ph id="ph1">`Create`</ph> method, which uploads a file and saves it in blob storage.</target>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The model binder provides an <bpt id="p1">[</bpt>HttpPostedFileBase<ept id="p1">](http://msdn.microsoft.com/library/system.web.httppostedfilebase.aspx)</ept> object to the method.</source>
          <target state="new">The model binder provides an <bpt id="p1">[</bpt>HttpPostedFileBase<ept id="p1">](http://msdn.microsoft.com/library/system.web.httppostedfilebase.aspx)</ept> object to the method.</target>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>If the user selected a file to upload, the code uploads the file, saves it in a blob, and updates the Ad database record with a URL that points to the blob.</source>
          <target state="new">If the user selected a file to upload, the code uploads the file, saves it in a blob, and updates the Ad database record with a URL that points to the blob.</target>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The code that does the upload is in the <ph id="ph1">`UploadAndSaveBlobAsync`</ph> method.</source>
          <target state="new">The code that does the upload is in the <ph id="ph1">`UploadAndSaveBlobAsync`</ph> method.</target>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>It creates a GUID name for the blob, uploads and saves the file, and returns a reference to the saved blob.</source>
          <target state="new">It creates a GUID name for the blob, uploads and saves the file, and returns a reference to the saved blob.</target>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>After the HttpPost <ph id="ph1">`Create`</ph> method uploads a blob and updates the database, it creates a queue message to inform the back-end process that an image is ready for conversion to a thumbnail.</source>
          <target state="new">After the HttpPost <ph id="ph1">`Create`</ph> method uploads a blob and updates the database, it creates a queue message to inform the back-end process that an image is ready for conversion to a thumbnail.</target>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The code for the HttpPost <ph id="ph1">`Edit`</ph> method is similar except that if the user selects a new image file any blobs that already exist for this ad must be deleted.</source>
          <target state="new">The code for the HttpPost <ph id="ph1">`Edit`</ph> method is similar except that if the user selects a new image file any blobs that already exist for this ad must be deleted.</target>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Here is the code that deletes blobs when you delete an ad:</source>
          <target state="new">Here is the code that deletes blobs when you delete an ad:</target>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>ContosoAdsWeb - Views\Ad\Index.cshtml and Details.cshtml</source>
          <target state="new">ContosoAdsWeb - Views\Ad\Index.cshtml and Details.cshtml</target>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Index.cshtml<ept id="p1">*</ept> file displays thumbnails with the other ad data:</source>
          <target state="new">The <bpt id="p1">*</bpt>Index.cshtml<ept id="p1">*</ept> file displays thumbnails with the other ad data:</target>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Details.cshtml<ept id="p1">*</ept> file displays the full-size image:</source>
          <target state="new">The <bpt id="p1">*</bpt>Details.cshtml<ept id="p1">*</ept> file displays the full-size image:</target>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>ContosoAdsWeb - Views\Ad\Create.cshtml and Edit.cshtml</source>
          <target state="new">ContosoAdsWeb - Views\Ad\Create.cshtml and Edit.cshtml</target>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Create.cshtml<ept id="p1">*</ept> and <bpt id="p2">*</bpt>Edit.cshtml<ept id="p2">*</ept> files specify form encoding that enables the controller to get the <ph id="ph1">`HttpPostedFileBase`</ph> object.</source>
          <target state="new">The <bpt id="p1">*</bpt>Create.cshtml<ept id="p1">*</ept> and <bpt id="p2">*</bpt>Edit.cshtml<ept id="p2">*</ept> files specify form encoding that enables the controller to get the <ph id="ph1">`HttpPostedFileBase`</ph> object.</target>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`&lt;input&gt;`</ph> element tells the browser to provide a file selection dialog.</source>
          <target state="new">An <ph id="ph1">`&lt;input&gt;`</ph> element tells the browser to provide a file selection dialog.</target>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="programcs"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ContosoAdsWebJob - Program.cs</source>
          <target state="new"><ph id="ph1">&lt;a id="programcs"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ContosoAdsWebJob - Program.cs</target>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>When the WebJob starts, the <ph id="ph1">`Main`</ph> method calls the WebJobs SDK <ph id="ph2">`JobHost.RunAndBlock`</ph> method to begin execution of triggered functions on the current thread.</source>
          <target state="new">When the WebJob starts, the <ph id="ph1">`Main`</ph> method calls the WebJobs SDK <ph id="ph2">`JobHost.RunAndBlock`</ph> method to begin execution of triggered functions on the current thread.</target>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="generatethumbnail"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ContosoAdsWebJob - Functions.cs - GenerateThumbnail method</source>
          <target state="new"><ph id="ph1">&lt;a id="generatethumbnail"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>ContosoAdsWebJob - Functions.cs - GenerateThumbnail method</target>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The WebJobs SDK calls this method when a queue message is received.</source>
          <target state="new">The WebJobs SDK calls this method when a queue message is received.</target>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The method creates a thumbnail and puts the thumbnail URL in the database.</source>
          <target state="new">The method creates a thumbnail and puts the thumbnail URL in the database.</target>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`QueueTrigger`</ph> attribute directs the WebJobs SDK to call this method when a new message is received on the thumbnailrequest queue.</source>
          <target state="new">The <ph id="ph1">`QueueTrigger`</ph> attribute directs the WebJobs SDK to call this method when a new message is received on the thumbnailrequest queue.</target>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`BlobInformation`</ph> object in the queue message is automatically deserialized into the <ph id="ph2">`blobInfo`</ph> parameter.</source>
          <target state="new">The <ph id="ph1">`BlobInformation`</ph> object in the queue message is automatically deserialized into the <ph id="ph2">`blobInfo`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>When the method completes, the queue message is deleted.</source>
          <target state="new">When the method completes, the queue message is deleted.</target>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>If the method fails before completing, the queue message is not deleted; after a 10-minute lease expires, the message is released to be picked up again and processed.</source>
          <target state="new">If the method fails before completing, the queue message is not deleted; after a 10-minute lease expires, the message is released to be picked up again and processed.</target>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>This sequence won't be repeated indefinitely if a message always causes an exception.</source>
          <target state="new">This sequence won't be repeated indefinitely if a message always causes an exception.</target>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>After 5 unsuccessful attempts to process a message, the message is moved to a queue named {queuename}-poison.</source>
          <target state="new">After 5 unsuccessful attempts to process a message, the message is moved to a queue named {queuename}-poison.</target>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The maximum number of attempts is configurable.</source>
          <target state="new">The maximum number of attempts is configurable.</target>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The two <ph id="ph1">`Blob`</ph> attributes provide objects that are bound to blobs: one to the existing image blob and one to a new thumbnail blob that the method creates.</source>
          <target state="new">The two <ph id="ph1">`Blob`</ph> attributes provide objects that are bound to blobs: one to the existing image blob and one to a new thumbnail blob that the method creates.</target>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Blob names come from properties of the <ph id="ph1">`BlobInformation`</ph> object received in the queue message (<ph id="ph2">`BlobName`</ph> and <ph id="ph3">`BlobNameWithoutExtension`</ph>).</source>
          <target state="new">Blob names come from properties of the <ph id="ph1">`BlobInformation`</ph> object received in the queue message (<ph id="ph2">`BlobName`</ph> and <ph id="ph3">`BlobNameWithoutExtension`</ph>).</target>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>To get the full functionality of the Storage Client Library you can use the <ph id="ph1">`CloudBlockBlob`</ph> class to work with blobs.</source>
          <target state="new">To get the full functionality of the Storage Client Library you can use the <ph id="ph1">`CloudBlockBlob`</ph> class to work with blobs.</target>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>If you want to reuse code that was written to work with <ph id="ph1">`Stream`</ph> objects, you can use the <ph id="ph2">`Stream`</ph> class.</source>
          <target state="new">If you want to reuse code that was written to work with <ph id="ph1">`Stream`</ph> objects, you can use the <ph id="ph2">`Stream`</ph> class.</target>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>For more information about how to write functions that use  WebJobs SDK attributes, see the following resources:</source>
          <target state="new">For more information about how to write functions that use  WebJobs SDK attributes, see the following resources:</target>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>How to use Azure queue storage with the WebJobs SDK</source>
          <target state="new">How to use Azure queue storage with the WebJobs SDK</target>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>How to use Azure blob storage with the WebJobs SDK</source>
          <target state="new">How to use Azure blob storage with the WebJobs SDK</target>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>How to use Azure table storage with the WebJobs SDK</source>
          <target state="new">How to use Azure table storage with the WebJobs SDK</target>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>How to use Azure Service Bus with the WebJobs SDK</source>
          <target state="new">How to use Azure Service Bus with the WebJobs SDK</target>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>If your web app runs on multiple VMs, multiple WebJobs will be running simultaneously, and in some scenarios this can result in the same data getting processed multiple times.</source>
          <target state="new">If your web app runs on multiple VMs, multiple WebJobs will be running simultaneously, and in some scenarios this can result in the same data getting processed multiple times.</target>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>This is not a problem if you use the built-in queue, blob, and Service Bus triggers.</source>
          <target state="new">This is not a problem if you use the built-in queue, blob, and Service Bus triggers.</target>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The SDK ensures that your functions will be processed only once for each message or blob.</source>
          <target state="new">The SDK ensures that your functions will be processed only once for each message or blob.</target>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>For information about how to implement graceful shutdown, see <bpt id="p1">[</bpt>Graceful Shutdown<ept id="p1">](websites-dotnet-webjobs-sdk-storage-queues-how-to.md#graceful)</ept>.</source>
          <target state="new">For information about how to implement graceful shutdown, see <bpt id="p1">[</bpt>Graceful Shutdown<ept id="p1">](websites-dotnet-webjobs-sdk-storage-queues-how-to.md#graceful)</ept>.</target>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The code in the <ph id="ph1">`ConvertImageToThumbnailJPG`</ph> method (not shown) uses classes in the <ph id="ph2">`System.Drawing`</ph> namespace for simplicity.</source>
          <target state="new">The code in the <ph id="ph1">`ConvertImageToThumbnailJPG`</ph> method (not shown) uses classes in the <ph id="ph2">`System.Drawing`</ph> namespace for simplicity.</target>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>However, the classes in this namespace were designed for use with Windows Forms.</source>
          <target state="new">However, the classes in this namespace were designed for use with Windows Forms.</target>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>They are not supported for use in a Windows or ASP.NET service.</source>
          <target state="new">They are not supported for use in a Windows or ASP.NET service.</target>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>For more information about image processing options, see <bpt id="p1">[</bpt>Dynamic Image Generation<ept id="p1">](http://www.hanselman.com/blog/BackToBasicsDynamicImageGenerationASPNETControllersRoutingIHttpHandlersAndRunAllManagedModulesForAllRequests.aspx)</ept> and <bpt id="p2">[</bpt>Deep Inside Image Resizing<ept id="p2">](http://www.hanselminutes.com/313/deep-inside-image-resizing-and-scaling-with-aspnet-and-iis-with-imageresizingnet-author-na)</ept>.</source>
          <target state="new">For more information about image processing options, see <bpt id="p1">[</bpt>Dynamic Image Generation<ept id="p1">](http://www.hanselman.com/blog/BackToBasicsDynamicImageGenerationASPNETControllersRoutingIHttpHandlersAndRunAllManagedModulesForAllRequests.aspx)</ept> and <bpt id="p2">[</bpt>Deep Inside Image Resizing<ept id="p2">](http://www.hanselminutes.com/313/deep-inside-image-resizing-and-scaling-with-aspnet-and-iis-with-imageresizingnet-author-na)</ept>.</target>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>WebJobs SDK versus Cloud Service worker role without WebJobs SDK</source>
          <target state="new">WebJobs SDK versus Cloud Service worker role without WebJobs SDK</target>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>If you compare the amount of code in the <ph id="ph1">`GenerateThumbnails`</ph> method in this sample application with the worker role code in the <bpt id="p1">[</bpt>Cloud Service version of the application<ept id="p1">](../cloud-services-dotnet-get-started.md)</ept>, you can see how much work the WebJobs SDK is doing for you.</source>
          <target state="new">If you compare the amount of code in the <ph id="ph1">`GenerateThumbnails`</ph> method in this sample application with the worker role code in the <bpt id="p1">[</bpt>Cloud Service version of the application<ept id="p1">](../cloud-services-dotnet-get-started.md)</ept>, you can see how much work the WebJobs SDK is doing for you.</target>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The advantage is greater than it appears, because the Cloud Service sample application code doesn't do all of the things (such as poison message handling) that you would do in a production application, and which the WebJobs SDK does for you.</source>
          <target state="new">The advantage is greater than it appears, because the Cloud Service sample application code doesn't do all of the things (such as poison message handling) that you would do in a production application, and which the WebJobs SDK does for you.</target>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>In the Cloud Service version of the application, the record ID is the only information in the queue message, and the background process gets the image URL from the database.</source>
          <target state="new">In the Cloud Service version of the application, the record ID is the only information in the queue message, and the background process gets the image URL from the database.</target>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>In the WebJobs SDK version of the application, the queue message includes the image URL so that it can be provided to the <ph id="ph1">`Blob`</ph> attributes.</source>
          <target state="new">In the WebJobs SDK version of the application, the queue message includes the image URL so that it can be provided to the <ph id="ph1">`Blob`</ph> attributes.</target>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>If the queue message didn't have the blob URL, you could <bpt id="p1">[</bpt>use the Blob attribute in the body of the method instead of in the method signature<ept id="p1">](websites-dotnet-webjobs-sdk-storage-queues-how-to.md#blobbody)</ept>.</source>
          <target state="new">If the queue message didn't have the blob URL, you could <bpt id="p1">[</bpt>use the Blob attribute in the body of the method instead of in the method signature<ept id="p1">](websites-dotnet-webjobs-sdk-storage-queues-how-to.md#blobbody)</ept>.</target>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Using the WebJobs SDK outside of WebJobs</source>
          <target state="new">Using the WebJobs SDK outside of WebJobs</target>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>A program that uses the WebJobs SDK doesn't have to run in Azure in a WebJob.</source>
          <target state="new">A program that uses the WebJobs SDK doesn't have to run in Azure in a WebJob.</target>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>It can run locally, and it can also run in other environments such as a Cloud Service worker role or a Windows service.</source>
          <target state="new">It can run locally, and it can also run in other environments such as a Cloud Service worker role or a Windows service.</target>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>However, you can only access the WebJobs SDK dashboard through an Azure web app.</source>
          <target state="new">However, you can only access the WebJobs SDK dashboard through an Azure web app.</target>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>To use the dashboard you have to connect the web app to the storage account you're using by setting the AzureWebJobsDashboard connection string on the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab of the Azure portal.</source>
          <target state="new">To use the dashboard you have to connect the web app to the storage account you're using by setting the AzureWebJobsDashboard connection string on the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab of the Azure portal.</target>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Then you can get to the Dashboard by using the following URL:</source>
          <target state="new">Then you can get to the Dashboard by using the following URL:</target>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>https://{webappname}.scm.azurewebsites.net/azurejobs/#/functions</source>
          <target state="new">https://{webappname}.scm.azurewebsites.net/azurejobs/#/functions</target>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Getting a dashboard for local development with the WebJobs SDK<ept id="p1">](http://blogs.msdn.com/b/jmstall/archive/2014/01/27/getting-a-dashboard-for-local-development-with-the-webjobs-sdk.aspx)</ept>, but note that it shows an old connection string name.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Getting a dashboard for local development with the WebJobs SDK<ept id="p1">](http://blogs.msdn.com/b/jmstall/archive/2014/01/27/getting-a-dashboard-for-local-development-with-the-webjobs-sdk.aspx)</ept>, but note that it shows an old connection string name.</target>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>In this tutorial you've seen a simple multi-tier application that uses the WebJobs SDK for backend processing.</source>
          <target state="new">In this tutorial you've seen a simple multi-tier application that uses the WebJobs SDK for backend processing.</target>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The application has been kept simple for a getting-started tutorial.</source>
          <target state="new">The application has been kept simple for a getting-started tutorial.</target>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>For example, it doesn't implement <bpt id="p1">[</bpt>dependency injection<ept id="p1">](http://www.asp.net/mvc/tutorials/hands-on-labs/aspnet-mvc-4-dependency-injection)</ept> or the <bpt id="p2">[</bpt>repository and unit of work patterns<ept id="p2">](http://www.asp.net/mvc/tutorials/getting-started-with-ef-using-mvc/advanced-entity-framework-scenarios-for-an-mvc-web-application#repo)</ept>, it doesn't <bpt id="p3">[</bpt>use an interface for logging<ept id="p3">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/monitoring-and-telemetry#log)</ept>, it doesn't use <bpt id="p4">[</bpt>EF Code First Migrations<ept id="p4">](http://www.asp.net/mvc/tutorials/getting-started-with-ef-using-mvc/migrations-and-deployment-with-the-entity-framework-in-an-asp-net-mvc-application)</ept> to manage data model changes or <bpt id="p5">[</bpt>EF Connection Resiliency<ept id="p5">](http://www.asp.net/mvc/tutorials/getting-started-with-ef-using-mvc/connection-resiliency-and-command-interception-with-the-entity-framework-in-an-asp-net-mvc-application)</ept> to manage transient network errors, and so forth.</source>
          <target state="new">For example, it doesn't implement <bpt id="p1">[</bpt>dependency injection<ept id="p1">](http://www.asp.net/mvc/tutorials/hands-on-labs/aspnet-mvc-4-dependency-injection)</ept> or the <bpt id="p2">[</bpt>repository and unit of work patterns<ept id="p2">](http://www.asp.net/mvc/tutorials/getting-started-with-ef-using-mvc/advanced-entity-framework-scenarios-for-an-mvc-web-application#repo)</ept>, it doesn't <bpt id="p3">[</bpt>use an interface for logging<ept id="p3">](http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/monitoring-and-telemetry#log)</ept>, it doesn't use <bpt id="p4">[</bpt>EF Code First Migrations<ept id="p4">](http://www.asp.net/mvc/tutorials/getting-started-with-ef-using-mvc/migrations-and-deployment-with-the-entity-framework-in-an-asp-net-mvc-application)</ept> to manage data model changes or <bpt id="p5">[</bpt>EF Connection Resiliency<ept id="p5">](http://www.asp.net/mvc/tutorials/getting-started-with-ef-using-mvc/connection-resiliency-and-command-interception-with-the-entity-framework-in-an-asp-net-mvc-application)</ept> to manage transient network errors, and so forth.</target>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Azure Web Jobs Recommended Resources<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=390226)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Azure Web Jobs Recommended Resources<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=390226)</ept>.</target>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>What's changed</source>
          <target state="new">What's changed</target>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>For a guide to the change from Websites to App Service see: <bpt id="p1">[</bpt>Azure App Service and Its Impact on Existing Azure Services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept></source>
          <target state="new">For a guide to the change from Websites to App Service see: <bpt id="p1">[</bpt>Azure App Service and Its Impact on Existing Azure Services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept></target>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>For a guide to the change of the Azure portal to the Azure preview portal see: <bpt id="p1">[</bpt>Reference for navigating the preview portal<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept></source>
          <target state="new">For a guide to the change of the Azure portal to the Azure preview portal see: <bpt id="p1">[</bpt>Reference for navigating the preview portal<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept></target>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00647e1b7adc29df834ad8bfb77f57f0fec0a3bf</xliffext:olfilehash>
  </header>
</xliff>