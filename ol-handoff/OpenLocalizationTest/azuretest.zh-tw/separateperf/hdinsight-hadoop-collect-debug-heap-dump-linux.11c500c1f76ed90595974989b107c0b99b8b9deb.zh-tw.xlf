<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enable heap dumps for Hadoop services on HDInsight | Microsoft Azure</source>
          <target state="new">Enable heap dumps for Hadoop services on HDInsight | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Enable heap dumps for Hadoop services from Linux-based HDInsight clusters for debugging and analysis.</source>
          <target state="new">Enable heap dumps for Hadoop services from Linux-based HDInsight clusters for debugging and analysis.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enable heap dumps for Hadoop services on Linux-based HDInsight (Preview)</source>
          <target state="new">Enable heap dumps for Hadoop services on Linux-based HDInsight (Preview)</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Heap dumps contain a snapshot of the application's memory, including the values of variables at the time the dump was created.</source>
          <target state="new">Heap dumps contain a snapshot of the application's memory, including the values of variables at the time the dump was created.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>So they are very useful for diagnosing problems that occur at run-time.</source>
          <target state="new">So they are very useful for diagnosing problems that occur at run-time.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The information in this article only applies to Linux-based HDInsight.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The information in this article only applies to Linux-based HDInsight.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For information on Windows-based HDInsight, see <bpt id="p1">[</bpt>Enable heap dumps for Hadoop services on Windows-based HDInsight<ept id="p1">](hdinsight-hadoop-collect-debug-heap-dumps.md)</ept></source>
          <target state="new">For information on Windows-based HDInsight, see <bpt id="p1">[</bpt>Enable heap dumps for Hadoop services on Windows-based HDInsight<ept id="p1">](hdinsight-hadoop-collect-debug-heap-dumps.md)</ept></target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="whichServices"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Services</source>
          <target state="new"><ph id="ph1">&lt;a name="whichServices"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Services</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can enable heap dumps for the following services:</source>
          <target state="new">You can enable heap dumps for the following services:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>hcatalog<ept id="p1">**</ept> - tempelton</source>
          <target state="new"><bpt id="p1">**</bpt>hcatalog<ept id="p1">**</ept> - tempelton</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>hive<ept id="p1">**</ept> - hiveserver2, metastore, derbyserver</source>
          <target state="new"><bpt id="p1">**</bpt>hive<ept id="p1">**</ept> - hiveserver2, metastore, derbyserver</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>mapreduce<ept id="p1">**</ept> - jobhistoryserver</source>
          <target state="new"><bpt id="p1">**</bpt>mapreduce<ept id="p1">**</ept> - jobhistoryserver</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>yarn<ept id="p1">**</ept> - resourcemanager, nodemanager, timelineserver</source>
          <target state="new"><bpt id="p1">**</bpt>yarn<ept id="p1">**</ept> - resourcemanager, nodemanager, timelineserver</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>hdfs<ept id="p1">**</ept> - datanode, secondarynamenode, namenode</source>
          <target state="new"><bpt id="p1">**</bpt>hdfs<ept id="p1">**</ept> - datanode, secondarynamenode, namenode</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can also enable heap dumps for the map and reduce processes ran by HDInsight.</source>
          <target state="new">You can also enable heap dumps for the map and reduce processes ran by HDInsight.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="configuration"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Understanding heap dump configuration</source>
          <target state="new"><ph id="ph1">&lt;a name="configuration"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Understanding heap dump configuration</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Heap dumps are enabled by passing options (sometimes known as opts, or parameters) to the JVM when a service is started.</source>
          <target state="new">Heap dumps are enabled by passing options (sometimes known as opts, or parameters) to the JVM when a service is started.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For most Hadoop services, this can be accomplished by modifying the shell script used to start the service.</source>
          <target state="new">For most Hadoop services, this can be accomplished by modifying the shell script used to start the service.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In each script, there is an export for <bpt id="p1">**</bpt>\*\_OPTS<ept id="p1">**</ept>, which contains the options passed to the JVM.</source>
          <target state="new">In each script, there is an export for <bpt id="p1">**</bpt>\*\_OPTS<ept id="p1">**</ept>, which contains the options passed to the JVM.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, in the <bpt id="p1">**</bpt>hadoop-env.sh<ept id="p1">**</ept> script, the line that begins with <ph id="ph1">`export HADOOP_NAMENODE_OPTS=`</ph> contains the options for the NameNode service.</source>
          <target state="new">For example, in the <bpt id="p1">**</bpt>hadoop-env.sh<ept id="p1">**</ept> script, the line that begins with <ph id="ph1">`export HADOOP_NAMENODE_OPTS=`</ph> contains the options for the NameNode service.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Map and reduce processes are slightly different, as these are a child process of the MapReduce service.</source>
          <target state="new">Map and reduce processes are slightly different, as these are a child process of the MapReduce service.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each map or reduce process runs in a child container, and there are two entries that contain the JVM options for these.</source>
          <target state="new">Each map or reduce process runs in a child container, and there are two entries that contain the JVM options for these.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Both contained in <bpt id="p1">**</bpt>mapred-site.xml<ept id="p1">**</ept>:</source>
          <target state="new">Both contained in <bpt id="p1">**</bpt>mapred-site.xml<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>mapreduce.admin.map.child.java.opts</source>
          <target state="new">mapreduce.admin.map.child.java.opts</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>mapreduce.admin.reduce.child.java.opts</source>
          <target state="new">mapreduce.admin.reduce.child.java.opts</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> We recommend using Ambari to modify both the scripts and mapred-site.xml settings, as Ambari will handle replicating changes across nodes in the cluster.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> We recommend using Ambari to modify both the scripts and mapred-site.xml settings, as Ambari will handle replicating changes across nodes in the cluster.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Using Ambari<ept id="p1">](#using-ambari)</ept> section for specific steps.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Using Ambari<ept id="p1">](#using-ambari)</ept> section for specific steps.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Enable heap dumps</source>
          <target state="new">Enable heap dumps</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following option enables heap dumps when an OutOfMemoryError occurs:</source>
          <target state="new">The following option enables heap dumps when an OutOfMemoryError occurs:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>+<ept id="p1">**</ept> indicates that this option is enabled.</source>
          <target state="new">The <bpt id="p1">**</bpt>+<ept id="p1">**</ept> indicates that this option is enabled.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default is disabled.</source>
          <target state="new">The default is disabled.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.WARNING]</ph> Heap dumps are not enabled for Hadoop services on HDInsight by default, as the dump files can be large.</source>
          <target state="new"><ph id="ph1">[AZURE.WARNING]</ph> Heap dumps are not enabled for Hadoop services on HDInsight by default, as the dump files can be large.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you do enable them for troubleshooting, remember to disable them once you have reproduced the problem and gathered the dump files.</source>
          <target state="new">If you do enable them for troubleshooting, remember to disable them once you have reproduced the problem and gathered the dump files.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Dump location</source>
          <target state="new">Dump location</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default location for the dump file is the current working directory.</source>
          <target state="new">The default location for the dump file is the current working directory.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can control where the file is stored using the following option:</source>
          <target state="new">You can control where the file is stored using the following option:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, using <ph id="ph1">`-XX:HeapDumpPath=/tmp`</ph> will cause the dumps to be stored in the /tmp directory.</source>
          <target state="new">For example, using <ph id="ph1">`-XX:HeapDumpPath=/tmp`</ph> will cause the dumps to be stored in the /tmp directory.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Scripts</source>
          <target state="new">Scripts</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can also trigger a script when an <bpt id="p1">**</bpt>OutOfMemoryError<ept id="p1">**</ept> occurs.</source>
          <target state="new">You can also trigger a script when an <bpt id="p1">**</bpt>OutOfMemoryError<ept id="p1">**</ept> occurs.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, triggering a notification so you know that the error has occurred.</source>
          <target state="new">For example, triggering a notification so you know that the error has occurred.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This is controlled using the following option:</source>
          <target state="new">This is controlled using the following option:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Since Hadoop is a distributed system, any script used must be placed on all nodes in the cluster that the service runs on.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Since Hadoop is a distributed system, any script used must be placed on all nodes in the cluster that the service runs on.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The script must also be in a location that is accessible by the account the service runs as, and must provide execute permissions.</source>
          <target state="new">The script must also be in a location that is accessible by the account the service runs as, and must provide execute permissions.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, you may wish to store scripts in <ph id="ph1">`/usr/local/bin`</ph> and use <ph id="ph2">`chmod go+rx /usr/local/bin/filename.sh`</ph> to grant read and execute permissions.</source>
          <target state="new">For example, you may wish to store scripts in <ph id="ph1">`/usr/local/bin`</ph> and use <ph id="ph2">`chmod go+rx /usr/local/bin/filename.sh`</ph> to grant read and execute permissions.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Using Ambari</source>
          <target state="new">Using Ambari</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To modify the configuration for a service, use the following steps:</source>
          <target state="new">To modify the configuration for a service, use the following steps:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Open the Ambari web UI for your cluster.</source>
          <target state="new">Open the Ambari web UI for your cluster.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The URL will be https://YOURCLUSTERNAME.azurehdinsight.net.</source>
          <target state="new">The URL will be https://YOURCLUSTERNAME.azurehdinsight.net.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When prompted, authenticate to the site using the HTTP account name (default: admin,) and password for your cluster.</source>
          <target state="new">When prompted, authenticate to the site using the HTTP account name (default: admin,) and password for your cluster.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> You may be prompted a second time by Ambari for the user name and password.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> You may be prompted a second time by Ambari for the user name and password.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If so, just re-enter the same account name and password</source>
          <target state="new">If so, just re-enter the same account name and password</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Using the list of on the left, select the service area you want to modify.</source>
          <target state="new">Using the list of on the left, select the service area you want to modify.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">**</bpt>HDFS<ept id="p1">**</ept>.</source>
          <target state="new">For example, <bpt id="p1">**</bpt>HDFS<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the center area, select the <bpt id="p1">**</bpt>Configs<ept id="p1">**</ept> tab.</source>
          <target state="new">In the center area, select the <bpt id="p1">**</bpt>Configs<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Image of Ambari web with HDFS Configs tab selected</source>
          <target state="new">Image of Ambari web with HDFS Configs tab selected</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">**</bpt>Filter...<ept id="p1">**</ept> entry, enter <bpt id="p2">**</bpt>opts<ept id="p2">**</ept>.</source>
          <target state="new">Using the <bpt id="p1">**</bpt>Filter...<ept id="p1">**</ept> entry, enter <bpt id="p2">**</bpt>opts<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This will filter the list of configuration items to only those containing this text, and is a quick way to find the shell script, or <bpt id="p1">**</bpt>template<ept id="p1">**</ept> that can be used to set these options.</source>
          <target state="new">This will filter the list of configuration items to only those containing this text, and is a quick way to find the shell script, or <bpt id="p1">**</bpt>template<ept id="p1">**</ept> that can be used to set these options.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Filtered list</source>
          <target state="new">Filtered list</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Find the <bpt id="p1">**</bpt>\*\_OPTS<ept id="p1">**</ept> entry for the service you want to enable heap dumps for, and add the options you wish to enable.</source>
          <target state="new">Find the <bpt id="p1">**</bpt>\*\_OPTS<ept id="p1">**</ept> entry for the service you want to enable heap dumps for, and add the options you wish to enable.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In the following image, I've added <ph id="ph1">`-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/`</ph> to the <bpt id="p1">**</bpt>HADOOP\_NAMENODE\_OPTS<ept id="p1">**</ept> entry:</source>
          <target state="new">In the following image, I've added <ph id="ph1">`-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/`</ph> to the <bpt id="p1">**</bpt>HADOOP\_NAMENODE\_OPTS<ept id="p1">**</ept> entry:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>HADOOP_NAMENODE_OPTS with -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/</source>
          <target state="new">HADOOP_NAMENODE_OPTS with -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> When enabling heap dumps for the map or reduce child process, you will instead look for the fields labled <bpt id="p1">**</bpt>mapreduce.admin.map.child.java.opts<ept id="p1">**</ept> and <bpt id="p2">**</bpt>mapreduce.admin.reduce.child.java.opts<ept id="p2">**</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> When enabling heap dumps for the map or reduce child process, you will instead look for the fields labled <bpt id="p1">**</bpt>mapreduce.admin.map.child.java.opts<ept id="p1">**</ept> and <bpt id="p2">**</bpt>mapreduce.admin.reduce.child.java.opts<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>Save<ept id="p1">**</ept> button to save the changes.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>Save<ept id="p1">**</ept> button to save the changes.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You will be allowed to enter a short note describing the changes.</source>
          <target state="new">You will be allowed to enter a short note describing the changes.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Once the changes have been applied, the <bpt id="p1">**</bpt>Restart required<ept id="p1">**</ept> icon will appear beside one or more services.</source>
          <target state="new">Once the changes have been applied, the <bpt id="p1">**</bpt>Restart required<ept id="p1">**</ept> icon will appear beside one or more services.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>restart required icon and restart button</source>
          <target state="new">restart required icon and restart button</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Select each service that needs a restart, and use the <bpt id="p1">**</bpt>Service Actions<ept id="p1">**</ept> button to <bpt id="p2">**</bpt>Turn On Maintenance Mode<ept id="p2">**</ept>.</source>
          <target state="new">Select each service that needs a restart, and use the <bpt id="p1">**</bpt>Service Actions<ept id="p1">**</ept> button to <bpt id="p2">**</bpt>Turn On Maintenance Mode<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This prevents alerts from being generated from this service when you restart it.</source>
          <target state="new">This prevents alerts from being generated from this service when you restart it.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Turn on maintenance mode menu</source>
          <target state="new">Turn on maintenance mode menu</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Once you have enabled maintenance mode, use the <bpt id="p1">**</bpt>Restart<ept id="p1">**</ept> button for the service to <bpt id="p2">**</bpt>Restart All Effected<ept id="p2">**</ept></source>
          <target state="new">Once you have enabled maintenance mode, use the <bpt id="p1">**</bpt>Restart<ept id="p1">**</ept> button for the service to <bpt id="p2">**</bpt>Restart All Effected<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Restart All Affected entry</source>
          <target state="new">Restart All Affected entry</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> the entries for the <bpt id="p1">**</bpt>Restart<ept id="p1">**</ept> button may be different for other services.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> the entries for the <bpt id="p1">**</bpt>Restart<ept id="p1">**</ept> button may be different for other services.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Once the services have been restarted, use the <bpt id="p1">**</bpt>Service Actions<ept id="p1">**</ept> button to <bpt id="p2">**</bpt>Turn Off Maintenance Mode<ept id="p2">**</ept>.</source>
          <target state="new">Once the services have been restarted, use the <bpt id="p1">**</bpt>Service Actions<ept id="p1">**</ept> button to <bpt id="p2">**</bpt>Turn Off Maintenance Mode<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This Ambari to resume monitoring for alerts for the service.</source>
          <target state="new">This Ambari to resume monitoring for alerts for the service.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">734c2e6d2a8e522bff24667bb3b2a6e7672c048d</xliffext:olfilehash>
  </header>
</xliff>