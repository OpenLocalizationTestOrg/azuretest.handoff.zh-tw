<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a Queue</source>
          <target state="new">Create a Queue</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> object lets you get reference objects for queues.</source>
          <target state="new">A <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> object lets you get reference objects for queues.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following code creates a <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> object.</source>
          <target state="new">The following code creates a <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>All code in this topic uses a storage connection string stored in the Azure application's service configuration.</source>
          <target state="new">All code in this topic uses a storage connection string stored in the Azure application's service configuration.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are also other ways to create a <bpt id="p1">**</bpt>CloudStorageAccount<ept id="p1">**</ept> object.</source>
          <target state="new">There are also other ways to create a <bpt id="p1">**</bpt>CloudStorageAccount<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>CloudStorageAccount<ept id="p1">](http://msdn.microsoft.com/library/azure/microsoft.windowsazure.cloudstorageaccount_methods.aspx "CloudStorageAccount")</ept> documentation for details.</source>
          <target state="new">See the <bpt id="p1">[</bpt>CloudStorageAccount<ept id="p1">](http://msdn.microsoft.com/library/azure/microsoft.windowsazure.cloudstorageaccount_methods.aspx "CloudStorageAccount")</ept> documentation for details.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>queueClient<ept id="p1">**</ept> object to get a reference to the queue you want to use.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>queueClient<ept id="p1">**</ept> object to get a reference to the queue you want to use.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The code tries to reference a queue named “myqueue.”</source>
          <target state="new">The code tries to reference a queue named “myqueue.”</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If it can’t find a queue with that name, it creates one.</source>
          <target state="new">If it can’t find a queue with that name, it creates one.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NOTE:<ept id="p1">**</ept> Use this code block in front of the code in the following sections.</source>
          <target state="new"><bpt id="p1">**</bpt>NOTE:<ept id="p1">**</ept> Use this code block in front of the code in the following sections.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Insert a Message into a Queue</source>
          <target state="new">Insert a Message into a Queue</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To insert a message into an existing queue, first create a new <bpt id="p1">**</bpt>CloudQueueMessage<ept id="p1">**</ept> object.</source>
          <target state="new">To insert a message into an existing queue, first create a new <bpt id="p1">**</bpt>CloudQueueMessage<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Next, call the AddMessage() method.</source>
          <target state="new">Next, call the AddMessage() method.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>CloudQueueMessage<ept id="p1">**</ept> object can be created from either a string (in UTF-8 format) or a byte array.</source>
          <target state="new">A <bpt id="p1">**</bpt>CloudQueueMessage<ept id="p1">**</ept> object can be created from either a string (in UTF-8 format) or a byte array.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Here is code which creates a queue (if it doesn't exist) and inserts the message 'Hello, World'.</source>
          <target state="new">Here is code which creates a queue (if it doesn't exist) and inserts the message 'Hello, World'.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Peek at the Next Message</source>
          <target state="new">Peek at the Next Message</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can peek at the message in the front of a queue without removing it from the queue by calling the PeekMessage() method.</source>
          <target state="new">You can peek at the message in the front of a queue without removing it from the queue by calling the PeekMessage() method.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remove the Next Message</source>
          <target state="new">Remove the Next Message</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Your code can remove (de-queue) a message from a queue in two steps.</source>
          <target state="new">Your code can remove (de-queue) a message from a queue in two steps.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Call GetMessage() to get the next message in a queue.</source>
          <target state="new">Call GetMessage() to get the next message in a queue.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A message returned from GetMessage() becomes invisible to any other code reading messages from this queue.</source>
          <target state="new">A message returned from GetMessage() becomes invisible to any other code reading messages from this queue.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>By default, this message stays invisible for 30 seconds.</source>
          <target state="new">By default, this message stays invisible for 30 seconds.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To finish removing the message from the queue, call DeleteMessage().</source>
          <target state="new">To finish removing the message from the queue, call DeleteMessage().</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</source>
          <target state="new">This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following code calls DeleteMessage() right after the message has been processed.</source>
          <target state="new">The following code calls DeleteMessage() right after the message has been processed.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Learn more about Azure Storage<ept id="p1">](http://azure.microsoft.com/documentation/services/storage/)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Learn more about Azure Storage<ept id="p1">](http://azure.microsoft.com/documentation/services/storage/)</ept></target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See also <bpt id="p1">[</bpt>Browsing Storage Resources in Server Explorer<ept id="p1">](http://msdn.microsoft.com/library/azure/ff683677.aspx)</ept>.</source>
          <target state="new">See also <bpt id="p1">[</bpt>Browsing Storage Resources in Server Explorer<ept id="p1">](http://msdn.microsoft.com/library/azure/ff683677.aspx)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c8c05038ae0f515974237d856a98acd80e6597b</xliffext:olfilehash>
  </header>
</xliff>