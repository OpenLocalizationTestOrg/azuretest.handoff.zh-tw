<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enable offline sync for your Azure Mobile App (Xamarin Android)</source>
          <target state="new">Enable offline sync for your Azure Mobile App (Xamarin Android)</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use App Service Mobile App to cache and sync offline data in your Xamarin Android application</source>
          <target state="new">Learn how to use App Service Mobile App to cache and sync offline data in your Xamarin Android application</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enable offline sync for your Xamarin.Android mobile app</source>
          <target state="new">Enable offline sync for your Xamarin.Android mobile app</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This tutorial introduces the offline sync feature of Azure Mobile Apps for Xamarin.Android.</source>
          <target state="new">This tutorial introduces the offline sync feature of Azure Mobile Apps for Xamarin.Android.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Offline sync allows end-users to interact with a mobile app--viewing, adding, or modifying data--even when there is no network connection.</source>
          <target state="new">Offline sync allows end-users to interact with a mobile app--viewing, adding, or modifying data--even when there is no network connection.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Changes are stored in a local database; once the device is back online, these changes are synced with the remote service.</source>
          <target state="new">Changes are stored in a local database; once the device is back online, these changes are synced with the remote service.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will update the client project from the tutorial <bpt id="p1">[</bpt><ept id="p1">Create a Xamarin Android app]</ept> to support the offline features of Azure Mobile Apps.</source>
          <target state="new">In this tutorial, you will update the client project from the tutorial <bpt id="p1">[</bpt><ept id="p1">Create a Xamarin Android app]</ept> to support the offline features of Azure Mobile Apps.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you do not use the downloaded quick start server project, you must add the data access extension packages to your project.</source>
          <target state="new">If you do not use the downloaded quick start server project, you must add the data access extension packages to your project.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about server extension packages, see <bpt id="p1">[</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept>.</source>
          <target state="new">For more information about server extension packages, see <bpt id="p1">[</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To learn more about the offline sync feature, see the topic <bpt id="p1">[</bpt><ept id="p1">Offline Data Sync in Azure Mobile Apps]</ept>.</source>
          <target state="new">To learn more about the offline sync feature, see the topic <bpt id="p1">[</bpt><ept id="p1">Offline Data Sync in Azure Mobile Apps]</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="new">Requirements</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013</source>
          <target state="new">Visual Studio 2013</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Visual Studio <bpt id="p1">[</bpt><ept id="p1">Xamarin extension] </ept><bpt id="p2">**</bpt>or<ept id="p2">**</ept> <bpt id="p3">[</bpt><ept id="p3">Xamarin Studio]</ept></source>
          <target state="new">Visual Studio <bpt id="p1">[</bpt><ept id="p1">Xamarin extension] </ept><bpt id="p2">**</bpt>or<ept id="p2">**</ept> <bpt id="p3">[</bpt><ept id="p3">Xamarin Studio]</ept></target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Completion of the tutorial <bpt id="p1">[</bpt><ept id="p1">Create a Xamarin Android app]</ept>.</source>
          <target state="new">Completion of the tutorial <bpt id="p1">[</bpt><ept id="p1">Create a Xamarin Android app]</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This tutorial uses the completed app covered in that tutorial.</source>
          <target state="new">This tutorial uses the completed app covered in that tutorial.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Review the client sync code</source>
          <target state="new">Review the client sync code</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Xamarin client project that you downloaded when you completed the tutorial <bpt id="p1">[</bpt><ept id="p1">Create a Xamarin Android app]</ept> already contains code supporting offline synchronization using a local SQLite database.</source>
          <target state="new">The Xamarin client project that you downloaded when you completed the tutorial <bpt id="p1">[</bpt><ept id="p1">Create a Xamarin Android app]</ept> already contains code supporting offline synchronization using a local SQLite database.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Here is a brief overview of what is already included in the tutorial code.</source>
          <target state="new">Here is a brief overview of what is already included in the tutorial code.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For a conceptual overview of the feature, see <bpt id="p1">[</bpt><ept id="p1">Offline Data Sync in Azure Mobile Apps]</ept>.</source>
          <target state="new">For a conceptual overview of the feature, see <bpt id="p1">[</bpt><ept id="p1">Offline Data Sync in Azure Mobile Apps]</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Before any table operations can be performed, the local store must be initialized.</source>
          <target state="new">Before any table operations can be performed, the local store must be initialized.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The local store database is initialized when <ph id="ph1">`ToDoActivity.OnCreate()`</ph> executes <ph id="ph2">`ToDoActivity.InitLocalStoreAsync()`</ph>.</source>
          <target state="new">The local store database is initialized when <ph id="ph1">`ToDoActivity.OnCreate()`</ph> executes <ph id="ph2">`ToDoActivity.InitLocalStoreAsync()`</ph>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This creates a new local SQLite database using the <ph id="ph1">`MobileServiceSQLiteStore`</ph> class provided by the Azure Mobile Apps client SDK.</source>
          <target state="new">This creates a new local SQLite database using the <ph id="ph1">`MobileServiceSQLiteStore`</ph> class provided by the Azure Mobile Apps client SDK.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DefineTable`</ph> method creates a table in the local store that matches the fields in the provided type, <ph id="ph2">`ToDoItem`</ph> in this case.</source>
          <target state="new">The <ph id="ph1">`DefineTable`</ph> method creates a table in the local store that matches the fields in the provided type, <ph id="ph2">`ToDoItem`</ph> in this case.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The type doesn't have to include all of the columns that are in the remote database.</source>
          <target state="new">The type doesn't have to include all of the columns that are in the remote database.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It is possible to store just a subset of columns.</source>
          <target state="new">It is possible to store just a subset of columns.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>// ToDoActivity.cs</source>
          <target state="new">// ToDoActivity.cs</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`toDoTable`</ph> member of <ph id="ph2">`ToDoActivity`</ph> is of the <ph id="ph3">`IMobileServiceSyncTable`</ph> type instead of <ph id="ph4">`IMobileServiceTable`</ph>.</source>
          <target state="new">The <ph id="ph1">`toDoTable`</ph> member of <ph id="ph2">`ToDoActivity`</ph> is of the <ph id="ph3">`IMobileServiceSyncTable`</ph> type instead of <ph id="ph4">`IMobileServiceTable`</ph>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This directs all create, read, update, and delete (CRUD) table operations to the local store database.</source>
          <target state="new">This directs all create, read, update, and delete (CRUD) table operations to the local store database.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You decide when those changes are pushed up to the Azure Mobile App backend by calling <ph id="ph1">`IMobileServiceSyncContext.PushAsync()`</ph> using the sync context for the client connection.</source>
          <target state="new">You decide when those changes are pushed up to the Azure Mobile App backend by calling <ph id="ph1">`IMobileServiceSyncContext.PushAsync()`</ph> using the sync context for the client connection.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The sync context helps preserve table relationships by tracking and pushing changes in all tables a client app has modified when <ph id="ph1">`PushAsync`</ph> is called.</source>
          <target state="new">The sync context helps preserve table relationships by tracking and pushing changes in all tables a client app has modified when <ph id="ph1">`PushAsync`</ph> is called.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The provided code calls <ph id="ph1">`ToDoActivity.SyncAsync()`</ph> to sync whenever the todoitem list is refreshed or a todoitem is added or completed.</source>
          <target state="new">The provided code calls <ph id="ph1">`ToDoActivity.SyncAsync()`</ph> to sync whenever the todoitem list is refreshed or a todoitem is added or completed.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>So it syncs after every local change executing a push on the sync context and a pull on the sync table.</source>
          <target state="new">So it syncs after every local change executing a push on the sync context and a pull on the sync table.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>However, it is important to realize that if a pull is executed against a table that has pending local updates tracked by the context, that pull operation will automatically trigger a context push first.</source>
          <target state="new">However, it is important to realize that if a pull is executed against a table that has pending local updates tracked by the context, that pull operation will automatically trigger a context push first.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>So in these cases (refresh, adding and completing items) you could omit the explicit <ph id="ph1">`PushAsync`</ph> call.</source>
          <target state="new">So in these cases (refresh, adding and completing items) you could omit the explicit <ph id="ph1">`PushAsync`</ph> call.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It is redundant.</source>
          <target state="new">It is redundant.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the provided code, all records in the remote <ph id="ph1">`TodoItem`</ph> table are queried, but it is also possible to filter records by passing a query id and query to <ph id="ph2">`PushAsync`</ph>.</source>
          <target state="new">In the provided code, all records in the remote <ph id="ph1">`TodoItem`</ph> table are queried, but it is also possible to filter records by passing a query id and query to <ph id="ph2">`PushAsync`</ph>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information see the section <bpt id="p1">*</bpt>Incremental Sync<ept id="p1">*</ept> in <bpt id="p2">[</bpt><ept id="p2">Offline Data Sync in Azure Mobile Apps]</ept>.</source>
          <target state="new">For more information see the section <bpt id="p1">*</bpt>Incremental Sync<ept id="p1">*</ept> in <bpt id="p2">[</bpt><ept id="p2">Offline Data Sync in Azure Mobile Apps]</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Run the client app</source>
          <target state="new">Run the client app</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Run the client application  at least once to to populate the local store database.</source>
          <target state="new">Run the client application  at least once to to populate the local store database.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the next section, you will simulate an offline scenario and modify the data in the local store while the app is offline.</source>
          <target state="new">In the next section, you will simulate an offline scenario and modify the data in the local store while the app is offline.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Update the sync behavior of the client app</source>
          <target state="new">Update the sync behavior of the client app</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In this section, you will modify the client app to simulate an offline scenario by using an invalid application URL for your backend.</source>
          <target state="new">In this section, you will modify the client app to simulate an offline scenario by using an invalid application URL for your backend.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When you add or change data items, these changes will be held in the local store, but not synced to the backend data store until the connection is re-established.</source>
          <target state="new">When you add or change data items, these changes will be held in the local store, but not synced to the backend data store until the connection is re-established.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>At the top of <ph id="ph1">`ToDoActivity.cs`</ph>, change the initialization of <ph id="ph2">`applicationURL`</ph> and <ph id="ph3">`gatewayURL`</ph> to point to invalid URLs:</source>
          <target state="new">At the top of <ph id="ph1">`ToDoActivity.cs`</ph>, change the initialization of <ph id="ph2">`applicationURL`</ph> and <ph id="ph3">`gatewayURL`</ph> to point to invalid URLs:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Update <ph id="ph1">`ToDoActivity.SyncAsync`</ph> so that <ph id="ph2">`MobileServicePushFailedException`</ph> are caught and simply ignored assuming you are offline.</source>
          <target state="new">Update <ph id="ph1">`ToDoActivity.SyncAsync`</ph> so that <ph id="ph2">`MobileServicePushFailedException`</ph> are caught and simply ignored assuming you are offline.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Build and run the app.</source>
          <target state="new">Build and run the app.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you get an exception dialog reporting name resolution exception close it.</source>
          <target state="new">If you get an exception dialog reporting name resolution exception close it.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Add some new todo items and notice the app behaves as if it is connected because <ph id="ph1">`MobileServicePushFailedException`</ph> is handled without displaying the dialog.</source>
          <target state="new">Add some new todo items and notice the app behaves as if it is connected because <ph id="ph1">`MobileServicePushFailedException`</ph> is handled without displaying the dialog.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The new items you add exist only in the local store until they can be pushed to the mobile backend.</source>
          <target state="new">The new items you add exist only in the local store until they can be pushed to the mobile backend.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Close the app and restart it to verify that the new items you created are persisted to the local store.</source>
          <target state="new">Close the app and restart it to verify that the new items you created are persisted to the local store.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>(Optional) Use Visual Studio to view your Azure SQL Database table to see that the data in the backend database has not changed.</source>
          <target state="new">(Optional) Use Visual Studio to view your Azure SQL Database table to see that the data in the backend database has not changed.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>.</source>
          <target state="new">In Visual Studio, open <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Navigate to your database in <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept>-&gt;<bpt id="p2">**</bpt>SQL Databases<ept id="p2">**</ept>.</source>
          <target state="new">Navigate to your database in <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept>-&gt;<bpt id="p2">**</bpt>SQL Databases<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Right-click your database and select <bpt id="p1">**</bpt>Open in SQL Server Object Explorer<ept id="p1">**</ept>.</source>
          <target state="new">Right-click your database and select <bpt id="p1">**</bpt>Open in SQL Server Object Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Now you can browse to your SQL database table and its contents.</source>
          <target state="new">Now you can browse to your SQL database table and its contents.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>(Optional) Use a REST tool such as Fiddler or Postman to query your mobile backend, using a GET query in the form <ph id="ph1">`https://your-mobile-app-backend-name.azurewebsites.net/tables/TodoItem`</ph>.</source>
          <target state="new">(Optional) Use a REST tool such as Fiddler or Postman to query your mobile backend, using a GET query in the form <ph id="ph1">`https://your-mobile-app-backend-name.azurewebsites.net/tables/TodoItem`</ph>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Update the client app to reconnect your mobile backend</source>
          <target state="new">Update the client app to reconnect your mobile backend</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In this section you will reconnect the app to the mobile backend, which simulates the app coming back to an online state.</source>
          <target state="new">In this section you will reconnect the app to the mobile backend, which simulates the app coming back to an online state.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When you perform the refresh gesture, data will be synced to your mobile backend.</source>
          <target state="new">When you perform the refresh gesture, data will be synced to your mobile backend.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">`ToDoActivity.cs`</ph>.</source>
          <target state="new">Open <ph id="ph1">`ToDoActivity.cs`</ph>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Correct the <ph id="ph1">`applicationURL`</ph> and <ph id="ph2">`gatewayURL`</ph> to point to the correct URLs.</source>
          <target state="new">Correct the <ph id="ph1">`applicationURL`</ph> and <ph id="ph2">`gatewayURL`</ph> to point to the correct URLs.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Rebuild and run the app.</source>
          <target state="new">Rebuild and run the app.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The app attempts to sync with the Azure Mobile App backend after launching.</source>
          <target state="new">The app attempts to sync with the Azure Mobile App backend after launching.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Verify no exception dialogs are created.</source>
          <target state="new">Verify no exception dialogs are created.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>(Optional) View the updated data using either SQL Server Object Explorer or a REST tool like Fiddler.</source>
          <target state="new">(Optional) View the updated data using either SQL Server Object Explorer or a REST tool like Fiddler.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Notice the data has been synchronized between the Azure Mobile App backend database and the local store.</source>
          <target state="new">Notice the data has been synchronized between the Azure Mobile App backend database and the local store.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Notice the data has been synchronized between the database and the local store and contains the items you added while in an offline situation.</source>
          <target state="new">Notice the data has been synchronized between the database and the local store and contains the items you added while in an offline situation.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Additional Resources</source>
          <target state="new">Additional Resources</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Offline Data Sync in Azure Mobile Apps</source>
          <target state="new">Offline Data Sync in Azure Mobile Apps</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Cloud Cover: Offline Sync in Azure Mobile Services]</ept> \(note: the video is on Mobile Services, but offline sync works in a similar way in Azure Mobile Apps\)</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Cloud Cover: Offline Sync in Azure Mobile Services]</ept> \(note: the video is on Mobile Services, but offline sync works in a similar way in Azure Mobile Apps\)</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96eb68dd7f10fcbfccffaa30cabb56a63266d463</xliffext:olfilehash>
  </header>
</xliff>