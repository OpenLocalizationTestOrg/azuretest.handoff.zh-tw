<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Overview of Service Fabric | Microsoft Azure</source>
          <target state="new">Overview of Service Fabric | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>An overview of Service Fabric where applications are composed of microservices.</source>
          <target state="new">An overview of Service Fabric where applications are composed of microservices.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Service Fabric is a distributed systems platform used to build scalable, reliable, and easily-managed applications for the cloud</source>
          <target state="new">Service Fabric is a distributed systems platform used to build scalable, reliable, and easily-managed applications for the cloud</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview of Service Fabric</source>
          <target state="new">Overview of Service Fabric</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Service Fabric is a distributed systems platform used to build scalable, reliable, and easily-managed applications for the cloud.</source>
          <target state="new">Service Fabric is a distributed systems platform used to build scalable, reliable, and easily-managed applications for the cloud.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Service Fabric addresses the significant challenges in developing and managing cloud applications.</source>
          <target state="new">Service Fabric addresses the significant challenges in developing and managing cloud applications.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>By using Service Fabric developers and administrators can avoid solving complex infrastructure problems and focus instead on implementing mission critical, demanding workloads knowing that they are scalable, reliable, and manageable.</source>
          <target state="new">By using Service Fabric developers and administrators can avoid solving complex infrastructure problems and focus instead on implementing mission critical, demanding workloads knowing that they are scalable, reliable, and manageable.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Service Fabric represents the next-generation middleware platform for building and managing these enterprise class, Tier-1 cloud scale services.</source>
          <target state="new">Service Fabric represents the next-generation middleware platform for building and managing these enterprise class, Tier-1 cloud scale services.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Applications composed of microservices</source>
          <target state="new">Applications composed of microservices</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Service Fabric enables you to build and manage scalable and reliable applications composed of microservices running at very high density on a shared pool of machines (commonly referred to as a Service Fabric cluster).</source>
          <target state="new">Service Fabric enables you to build and manage scalable and reliable applications composed of microservices running at very high density on a shared pool of machines (commonly referred to as a Service Fabric cluster).</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It provides a sophisticated runtime for building distributed, scalable stateless and stateful microservices and comprehensive application management capabilities for provisioning, deploying, monitoring, upgrading/patching, and deleting deployed applications.</source>
          <target state="new">It provides a sophisticated runtime for building distributed, scalable stateless and stateful microservices and comprehensive application management capabilities for provisioning, deploying, monitoring, upgrading/patching, and deleting deployed applications.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Service Fabric powers many Microsoft services today such as Azure SQL Databases, Azure DocumentDB, Cortana, Power BI, Microsoft Intune, Azure Event Hubs, many core Azure Services, and Skype for Business to name a few.</source>
          <target state="new">Service Fabric powers many Microsoft services today such as Azure SQL Databases, Azure DocumentDB, Cortana, Power BI, Microsoft Intune, Azure Event Hubs, many core Azure Services, and Skype for Business to name a few.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Service Fabric is tailored to creating “born in the cloud” services that can start small, as needed, and grow to massive scale with hundreds or thousands of machines, creating Service Fabric clusters across availability sets in a region or across regions.</source>
          <target state="new">Service Fabric is tailored to creating “born in the cloud” services that can start small, as needed, and grow to massive scale with hundreds or thousands of machines, creating Service Fabric clusters across availability sets in a region or across regions.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Today's Internet scale services are built using microservices.</source>
          <target state="new">Today's Internet scale services are built using microservices.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example microservices are protocol gateways, user profiles, shopping carts, inventory processing, queues, caches, etc. Service Fabric is a microservices platform giving every microservice a unique name that can either be stateless or stateful.</source>
          <target state="new">Example microservices are protocol gateways, user profiles, shopping carts, inventory processing, queues, caches, etc. Service Fabric is a microservices platform giving every microservice a unique name that can either be stateless or stateful.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Service Fabric provides comprehensive runtime and lifecycle management capabilities to applications composed of these microservices.</source>
          <target state="new">Service Fabric provides comprehensive runtime and lifecycle management capabilities to applications composed of these microservices.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It hosts microservices inside containers that are deployed and activated across the Service Fabric cluster.</source>
          <target state="new">It hosts microservices inside containers that are deployed and activated across the Service Fabric cluster.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Just like an order of magnitude increase in density is made possible by moving from VMs to containers, a similar order of magnitude in density becomes possible when moving from containers to microservices.</source>
          <target state="new">Just like an order of magnitude increase in density is made possible by moving from VMs to containers, a similar order of magnitude in density becomes possible when moving from containers to microservices.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, a single Azure SQL Database cluster, which is built on Service Fabric, comprises of hundreds of machines running ten of thousands of containers hosting a total of hundreds of thousands of databases (each database is a Service Fabric stateful microservice).</source>
          <target state="new">For example, a single Azure SQL Database cluster, which is built on Service Fabric, comprises of hundreds of machines running ten of thousands of containers hosting a total of hundreds of thousands of databases (each database is a Service Fabric stateful microservice).</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The same is true of Event Hubs and the other service mentioned above.</source>
          <target state="new">The same is true of Event Hubs and the other service mentioned above.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is why the term hyperscale can be used to describe Service Fabric capabilities — if containers give you high density, then microservices give you hyperscale.</source>
          <target state="new">This is why the term hyperscale can be used to describe Service Fabric capabilities — if containers give you high density, then microservices give you hyperscale.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>![Service Fabric Platform][Image1]</source>
          <target state="new">![Service Fabric Platform][Image1]</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Stateless and stateful Service Fabric microservices</source>
          <target state="new">Stateless and stateful Service Fabric microservices</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Stateless microservices (e.g. protocol gateways, web proxies, etc.) do not maintain any mutable state outside of any request and its response from the service.</source>
          <target state="new">Stateless microservices (e.g. protocol gateways, web proxies, etc.) do not maintain any mutable state outside of any request and its response from the service.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Azure Cloud Services worker roles are an example of stateless service.</source>
          <target state="new">Azure Cloud Services worker roles are an example of stateless service.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Stateful microservices (e.g. user accounts, databases, devices, shopping carts, queues etc.) maintain mutable, authoritative state beyond the request and its response.</source>
          <target state="new">Stateful microservices (e.g. user accounts, databases, devices, shopping carts, queues etc.) maintain mutable, authoritative state beyond the request and its response.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Today's Internet scale applications consist of a combination of stateless and stateful microservices.</source>
          <target state="new">Today's Internet scale applications consist of a combination of stateless and stateful microservices.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Why are stateful microservices important?</source>
          <target state="new">Why are stateful microservices important?</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Why not simply use stateless services for everything?</source>
          <target state="new">Why not simply use stateless services for everything?</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Two reasons:</source>
          <target state="new">Two reasons:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The ability to build high-throughput, low-latency, failure-tolerant OLTP services like interactive store fronts, search, Internet of Things (IoT) systems, trading systems, credit card processing and fraud detection systems, personal record management etc by keeping code and data close on the same machine.</source>
          <target state="new">The ability to build high-throughput, low-latency, failure-tolerant OLTP services like interactive store fronts, search, Internet of Things (IoT) systems, trading systems, credit card processing and fraud detection systems, personal record management etc by keeping code and data close on the same machine.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Application design simplification as stateful microservices remove the need for additional queues and caches that have traditionally been required to address the availability and latency requirements of a purely stateless application.</source>
          <target state="new">Application design simplification as stateful microservices remove the need for additional queues and caches that have traditionally been required to address the availability and latency requirements of a purely stateless application.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Since stateful service are naturally highly-available and low-latency this means less moving parts to manage in your application as a whole.</source>
          <target state="new">Since stateful service are naturally highly-available and low-latency this means less moving parts to manage in your application as a whole.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information on application patterns and design using Service Fabric see <bpt id="p1">[</bpt>Application Scenarios<ept id="p1">](service-fabric-application-scenarios.md)</ept></source>
          <target state="new">For more information on application patterns and design using Service Fabric see <bpt id="p1">[</bpt>Application Scenarios<ept id="p1">](service-fabric-application-scenarios.md)</ept></target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Application lifecycle management</source>
          <target state="new">Application lifecycle management</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Service Fabric provides first class support for the full application lifecycle management (ALM) of cloud applications: from development to deployment, to daily management, to maintenance, and to eventual decommissioning.</source>
          <target state="new">Service Fabric provides first class support for the full application lifecycle management (ALM) of cloud applications: from development to deployment, to daily management, to maintenance, and to eventual decommissioning.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The Service Fabric ALM capabilities enable application administrators/IT operators to use simple, low-touch workflows to provision, deploy, patch, and monitor applications.</source>
          <target state="new">The Service Fabric ALM capabilities enable application administrators/IT operators to use simple, low-touch workflows to provision, deploy, patch, and monitor applications.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>These built-in workflows greatly reduce the burden on IT Operators to keep applications continuously available.</source>
          <target state="new">These built-in workflows greatly reduce the burden on IT Operators to keep applications continuously available.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Most applications consist of a combination of stateless and stateful microservices and other EXE/runtimes that are deployed together.</source>
          <target state="new">Most applications consist of a combination of stateless and stateful microservices and other EXE/runtimes that are deployed together.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>By having strong types on the applications and the packaged microservices, Service Fabric enables the deployment of multiple application instances each of which can be managed and upgraded independently.</source>
          <target state="new">By having strong types on the applications and the packaged microservices, Service Fabric enables the deployment of multiple application instances each of which can be managed and upgraded independently.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Importantly Service Fabric is able to deploy <bpt id="p1">*</bpt>any<ept id="p1">*</ept> executables or runtimes and make these reliable.</source>
          <target state="new">Importantly Service Fabric is able to deploy <bpt id="p1">*</bpt>any<ept id="p1">*</ept> executables or runtimes and make these reliable.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example it can be used to deploy ASP.NET 5, node.js, scripts, or anything that makes up your application.</source>
          <target state="new">For example it can be used to deploy ASP.NET 5, node.js, scripts, or anything that makes up your application.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information on application lifecycle management see <bpt id="p1">[</bpt>Application Lifecycle<ept id="p1">](service-fabric-application-lifecycle.md)</ept></source>
          <target state="new">For more information on application lifecycle management see <bpt id="p1">[</bpt>Application Lifecycle<ept id="p1">](service-fabric-application-lifecycle.md)</ept></target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Key capabilities</source>
          <target state="new">Key capabilities</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>By using Service Fabric, you can:</source>
          <target state="new">By using Service Fabric, you can:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Develop massively scalable applications, that are self-healing.</source>
          <target state="new">Develop massively scalable applications, that are self-healing.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Develop with a "data center on your machine" approach.</source>
          <target state="new">Develop with a "data center on your machine" approach.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The local development environment is the same code that runs in the Azure data centers.</source>
          <target state="new">The local development environment is the same code that runs in the Azure data centers.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Develop applications composed of microservices, executables and other application frameworks of your choice such as ASP.NET, nodejs, etc.</source>
          <target state="new">Develop applications composed of microservices, executables and other application frameworks of your choice such as ASP.NET, nodejs, etc.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Develop stateless and stateful (micro)services and make these highly reliable.</source>
          <target state="new">Develop stateless and stateful (micro)services and make these highly reliable.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Simplify the design of your application, by using stateful (micro)services in place of caches and queues.</source>
          <target state="new">Simplify the design of your application, by using stateful (micro)services in place of caches and queues.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Deploy applications in seconds.</source>
          <target state="new">Deploy applications in seconds.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Deploy to Azure or to on-premise clouds running Windows Server with zero code changes.</source>
          <target state="new">Deploy to Azure or to on-premise clouds running Windows Server with zero code changes.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Write once and then deploy to any Service Fabric cluster.</source>
          <target state="new">Write once and then deploy to any Service Fabric cluster.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Deploy applications at higher density than virtual machines, deploying hundreds or thousand of applications per machine.</source>
          <target state="new">Deploy applications at higher density than virtual machines, deploying hundreds or thousand of applications per machine.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Deploy different versions of the same application side-by-side, each independently upgradable.</source>
          <target state="new">Deploy different versions of the same application side-by-side, each independently upgradable.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Manage the lifecycle of your stateful applications without any downtime, including breaking and non-breaking upgrades.</source>
          <target state="new">Manage the lifecycle of your stateful applications without any downtime, including breaking and non-breaking upgrades.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Manage applications using .NET APIs, Powershell or REST interfaces.</source>
          <target state="new">Manage applications using .NET APIs, Powershell or REST interfaces.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Upgrade and patch microservices within applications independently.</source>
          <target state="new">Upgrade and patch microservices within applications independently.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Monitor and diagnose the health of your applications and set policies to perform automatic repairs.</source>
          <target state="new">Monitor and diagnose the health of your applications and set policies to perform automatic repairs.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Scale-up or scale-down your Service Fabric cluster easily, knowing that the applications scales according to the available resources.</source>
          <target state="new">Scale-up or scale-down your Service Fabric cluster easily, knowing that the applications scales according to the available resources.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Watch the self healing resource balancer orchestrate the redistribution of applications across the Service Fabric cluster to recover from failures and to optimize the distribution of load based on available resources.</source>
          <target state="new">Watch the self healing resource balancer orchestrate the redistribution of applications across the Service Fabric cluster to recover from failures and to optimize the distribution of load based on available resources.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
##</ph> Next steps

* For more information: <bpt id="p1">[</bpt><ept id="p1">Technical Overview](service-fabric-technical-overview.md)</ept>.</source>
          <target state="new"><ph id="ph1">
##</ph> Next steps

* For more information: <bpt id="p1">[</bpt><ept id="p1">Technical Overview](service-fabric-technical-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>* Setup your Service Fabric <bpt id="p1">[</bpt><ept id="p1">development environment](service-fabric-get-started.md)</ept>.</source>
          <target state="new">* Setup your Service Fabric <bpt id="p1">[</bpt><ept id="p1">development environment](service-fabric-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>* Choosing a <bpt id="p1">[</bpt><ept id="p1">framework](service-fabric-choose-framework.md)</ept> for your service.</source>
          <target state="new">* Choosing a <bpt id="p1">[</bpt><ept id="p1">framework](service-fabric-choose-framework.md)</ept> for your service.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[Image1]: media/service-fabric-overview/Service-Fabric-Overview.png</ph></source>
          <target state="new"><ph id="ph1">[Image1]: media/service-fabric-overview/Service-Fabric-Overview.png</ph></target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59b0edc528fa3be3709e6a3d75cfc19a422b186f</xliffext:olfilehash>
  </header>
</xliff>