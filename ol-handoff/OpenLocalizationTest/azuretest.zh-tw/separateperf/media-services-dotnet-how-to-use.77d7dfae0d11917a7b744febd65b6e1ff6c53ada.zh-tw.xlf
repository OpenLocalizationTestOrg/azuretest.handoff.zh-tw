<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to Set Up Computer for Media Services Development with .NET</source>
          <target state="new">How to Set Up Computer for Media Services Development with .NET</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn about the prerequisites for Media Services using the Media Services SDK for .NET.</source>
          <target state="new">Learn about the prerequisites for Media Services using the Media Services SDK for .NET.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Also learn how to create a Visual Studio app.</source>
          <target state="new">Also learn how to create a Visual Studio app.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Media Services development with .NET</source>
          <target state="new">Media Services development with .NET</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic discusses how to start developing Media Services applications using .NET.</source>
          <target state="new">This topic discusses how to start developing Media Services applications using .NET.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Azure Media Services .NET SDK<ept id="p1">**</ept> library enables you to program against Media Services using .NET.</source>
          <target state="new">The <bpt id="p1">**</bpt>Azure Media Services .NET SDK<ept id="p1">**</ept> library enables you to program against Media Services using .NET.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To make it even easier to develop with .NET, the <bpt id="p1">**</bpt>Azure Media Services .NET SDK Extensions<ept id="p1">**</ept> library is provided.</source>
          <target state="new">To make it even easier to develop with .NET, the <bpt id="p1">**</bpt>Azure Media Services .NET SDK Extensions<ept id="p1">**</ept> library is provided.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This library contains a set of extension methods and helper functions that will simplify your .NET code.</source>
          <target state="new">This library contains a set of extension methods and helper functions that will simplify your .NET code.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Both libraries are available through <bpt id="p1">**</bpt>NuGet<ept id="p1">**</ept> and <bpt id="p2">**</bpt>GitHub<ept id="p2">**</ept>.</source>
          <target state="new">Both libraries are available through <bpt id="p1">**</bpt>NuGet<ept id="p1">**</ept> and <bpt id="p2">**</bpt>GitHub<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A Media Services account in a new or existing Azure subscription.</source>
          <target state="new">A Media Services account in a new or existing Azure subscription.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See the topic <bpt id="p1">[</bpt>How to Create a Media Services Account<ept id="p1">](media-services-create-account.md)</ept>.</source>
          <target state="new">See the topic <bpt id="p1">[</bpt>How to Create a Media Services Account<ept id="p1">](media-services-create-account.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Operating Systems: Windows 7, Windows 2008 R2, or Windows 8.</source>
          <target state="new">Operating Systems: Windows 7, Windows 2008 R2, or Windows 8.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5.</source>
          <target state="new">.NET Framework 4.5.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013, Visual Studio 2012, or Visual Studio 2010 SP1 (Professional, Premium, Ultimate, or Express).</source>
          <target state="new">Visual Studio 2013, Visual Studio 2012, or Visual Studio 2010 SP1 (Professional, Premium, Ultimate, or Express).</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Create and configure a Visual Studio project</source>
          <target state="new">Create and configure a Visual Studio project</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This section shows you how to create a project in Visual Studio and set it up for Media Services development.</source>
          <target state="new">This section shows you how to create a project in Visual Studio and set it up for Media Services development.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In this case the project is a C# Windows console application, but the same setup steps shown here apply to other types of projects you can create for Media Services applications (for example, a Windows Forms application or an ASP.NET Web application).</source>
          <target state="new">In this case the project is a C# Windows console application, but the same setup steps shown here apply to other types of projects you can create for Media Services applications (for example, a Windows Forms application or an ASP.NET Web application).</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This section shows how to use <bpt id="p1">**</bpt>NuGet<ept id="p1">**</ept> to add Media Services .NET SDK and other dependent libraries.</source>
          <target state="new">This section shows how to use <bpt id="p1">**</bpt>NuGet<ept id="p1">**</ept> to add Media Services .NET SDK and other dependent libraries.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Alternatively, you can get the latest Media Services .NET SDK bits from GitHub (<bpt id="p1">[</bpt>github.com/Azure/azure-sdk-for-media-services<ept id="p1">](https://github.com/Azure/azure-sdk-for-media-services)</ept> and <bpt id="p2">[</bpt>github.com/Azure/azure-sdk-for-media-services-extensions<ept id="p2">](https://github.com/Azure/azure-sdk-for-media-services-extensions)</ept>), build the solution, and add the references to the client project.</source>
          <target state="new">Alternatively, you can get the latest Media Services .NET SDK bits from GitHub (<bpt id="p1">[</bpt>github.com/Azure/azure-sdk-for-media-services<ept id="p1">](https://github.com/Azure/azure-sdk-for-media-services)</ept> and <bpt id="p2">[</bpt>github.com/Azure/azure-sdk-for-media-services-extensions<ept id="p2">](https://github.com/Azure/azure-sdk-for-media-services-extensions)</ept>), build the solution, and add the references to the client project.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Note that all the necessary dependencies get downloaded and extracted automatically.</source>
          <target state="new">Note that all the necessary dependencies get downloaded and extracted automatically.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create a new C# Console Application in Visual Studio 2013, Visual Studio 2012 or Visual Studio 2010 SP1.</source>
          <target state="new">Create a new C# Console Application in Visual Studio 2013, Visual Studio 2012 or Visual Studio 2010 SP1.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Enter the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Location<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Solution name<ept id="p3">**</ept>, and then click OK.</source>
          <target state="new">Enter the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Location<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Solution name<ept id="p3">**</ept>, and then click OK.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Build the solution.</source>
          <target state="new">Build the solution.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>NuGet<ept id="p1">**</ept> to install and add <bpt id="p2">**</bpt>Azure Media Services .NET SDK Extensions<ept id="p2">**</ept>.</source>
          <target state="new">Use <bpt id="p1">**</bpt>NuGet<ept id="p1">**</ept> to install and add <bpt id="p2">**</bpt>Azure Media Services .NET SDK Extensions<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Installing this package, also installs <bpt id="p1">**</bpt>Media Services .NET SDK<ept id="p1">**</ept> and adds all other required dependencies.</source>
          <target state="new">Installing this package, also installs <bpt id="p1">**</bpt>Media Services .NET SDK<ept id="p1">**</ept> and adds all other required dependencies.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Ensure that you have the newest version of NuGet installed.</source>
          <target state="new">Ensure that you have the newest version of NuGet installed.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information and installation instructions, see <bpt id="p1">[</bpt>NuGet<ept id="p1">](http://nuget.codeplex.com/)</ept>.</source>
          <target state="new">For more information and installation instructions, see <bpt id="p1">[</bpt>NuGet<ept id="p1">](http://nuget.codeplex.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right-click the name of the project and choose Manage NuGet packages ….</source>
          <target state="new">In Solution Explorer, right-click the name of the project and choose Manage NuGet packages ….</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The Manage NuGet Packages dialog box appears.</source>
          <target state="new">The Manage NuGet Packages dialog box appears.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the Online gallery, search for Azure MediaServices Extensions, choose Azure Media Services .NET SDK Extensions, and then click the Install button.</source>
          <target state="new">In the Online gallery, search for Azure MediaServices Extensions, choose Azure Media Services .NET SDK Extensions, and then click the Install button.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The project is modified and references to the Media Services .NET SDK Extensions,  Media Services .NET SDK, and other dependent assemblies are added.</source>
          <target state="new">The project is modified and references to the Media Services .NET SDK Extensions,  Media Services .NET SDK, and other dependent assemblies are added.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To promote a cleaner development environment, consider enabling NuGet Package Restore.</source>
          <target state="new">To promote a cleaner development environment, consider enabling NuGet Package Restore.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>NuGet Package Restore"<ept id="p1">](http://docs.nuget.org/consume/package-restore)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>NuGet Package Restore"<ept id="p1">](http://docs.nuget.org/consume/package-restore)</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Add a reference to <bpt id="p1">**</bpt>System.Configuratio<ept id="p1">**</ept>n assembly.</source>
          <target state="new">Add a reference to <bpt id="p1">**</bpt>System.Configuratio<ept id="p1">**</ept>n assembly.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This assembly contains the System.Configuration.<bpt id="p1">**</bpt>ConfigurationManager<ept id="p1">**</ept> class that is used to access configuration files (for example, App.config).</source>
          <target state="new">This assembly contains the System.Configuration.<bpt id="p1">**</bpt>ConfigurationManager<ept id="p1">**</ept> class that is used to access configuration files (for example, App.config).</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To add references using the Manage References dialog, do the following:</source>
          <target state="new">To add references using the Manage References dialog, do the following:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right-click the project name.</source>
          <target state="new">In Solution Explorer, right-click the project name.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Then, select Add and References.</source>
          <target state="new">Then, select Add and References.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The Manage References dialog appears.</source>
          <target state="new">The Manage References dialog appears.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Under .NET framework assemblies, find and select the System.Configuration assembly.</source>
          <target state="new">Under .NET framework assemblies, find and select the System.Configuration assembly.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Press OK.</source>
          <target state="new">Press OK.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Open the App.config file (add the file to your project if it was not added by default) and add an <bpt id="p1">*</bpt>appSettings<ept id="p1">*</ept> section to the file.</source>
          <target state="new">Open the App.config file (add the file to your project if it was not added by default) and add an <bpt id="p1">*</bpt>appSettings<ept id="p1">*</ept> section to the file.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Set the values for your Azure Media Services account name and account key, as shown in the following example.</source>
          <target state="new">Set the values for your Azure Media Services account name and account key, as shown in the following example.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To obtain the <bpt id="p1">**</bpt>account name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>account key<ept id="p2">**</ept> information, open the <bpt id="p3">**</bpt>Azure Management Portal<ept id="p3">**</ept>, select your media services account and click the <bpt id="p4">**</bpt>MANAGE KEYS<ept id="p4">**</ept> button.</source>
          <target state="new">To obtain the <bpt id="p1">**</bpt>account name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>account key<ept id="p2">**</ept> information, open the <bpt id="p3">**</bpt>Azure Management Portal<ept id="p3">**</ept>, select your media services account and click the <bpt id="p4">**</bpt>MANAGE KEYS<ept id="p4">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Overwrite the existing using statements at the beginning of the Program.cs file with the following code.</source>
          <target state="new">Overwrite the existing using statements at the beginning of the Program.cs file with the following code.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>At this point, you are ready to start developing a Media Services application.</source>
          <target state="new">At this point, you are ready to start developing a Media Services application.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a0a6c6dbdfb54526d08efa7d4348ef278efdf82</xliffext:olfilehash>
  </header>
</xliff>