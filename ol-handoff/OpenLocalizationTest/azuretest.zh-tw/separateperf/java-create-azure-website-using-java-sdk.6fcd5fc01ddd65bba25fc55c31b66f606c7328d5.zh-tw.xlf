<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a Web App in Azure App Service using the Azure SDK for Java</source>
          <target state="new">Create a Web App in Azure App Service using the Azure SDK for Java</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to create a Web App on Azure App Service programmatically using the Azure SDK for Java.</source>
          <target state="new">Learn how to create a Web App on Azure App Service programmatically using the Azure SDK for Java.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create a Web App in Azure App Service using the Azure SDK for Java</source>
          <target state="new">Create a Web App in Azure App Service using the Azure SDK for Java</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">

##</ph> Overview

This walkthrough shows you how to create an Azure SDK for Java application that creates a Web App in [Azure App Service][], then deploy an application to it.</source>
          <target state="new"><ph id="ph1">

##</ph> Overview

This walkthrough shows you how to create an Azure SDK for Java application that creates a Web App in [Azure App Service][], then deploy an application to it.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It consists of two parts:

- Part 1 demonstrates how to build a Java application that creates a web app.</source>
          <target state="new">It consists of two parts:

- Part 1 demonstrates how to build a Java application that creates a web app.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>- Part 2 demonstrates how to create a simple JSP "Hello World" application, then use an FTP client to deploy code to App Service.</source>
          <target state="new">- Part 2 demonstrates how to create a simple JSP "Hello World" application, then use an FTP client to deploy code to App Service.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Prerequisites

### Software Installations

The AzureWebDemo application code in this article was written using Azure Java SDK 0.7.0, which you can install using the [Web Platform Installer][] (WebPI).</source>
          <target state="new">Prerequisites

### Software Installations

The AzureWebDemo application code in this article was written using Azure Java SDK 0.7.0, which you can install using the [Web Platform Installer][] (WebPI).</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In addition, make sure to use the latest version of the [Azure Toolkit for Eclipse][].</source>
          <target state="new">In addition, make sure to use the latest version of the [Azure Toolkit for Eclipse][].</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>After you install the SDK, update the dependencies in your Eclipse project by running <bpt id="p1">**</bpt>Update Index<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Maven Repositories<ept id="p2">**</ept>, then re-add the latest version of each package in the <bpt id="p3">**</bpt>Dependencies<ept id="p3">**</ept> window.</source>
          <target state="new">After you install the SDK, update the dependencies in your Eclipse project by running <bpt id="p1">**</bpt>Update Index<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Maven Repositories<ept id="p2">**</ept>, then re-add the latest version of each package in the <bpt id="p3">**</bpt>Dependencies<ept id="p3">**</ept> window.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can verify the version of your installed software in Eclipse by clicking <bpt id="p1">**</bpt>Help &gt; Installation Details<ept id="p1">**</ept>; you should have at least the following versions:

- Package for Microsoft Azure Libraries for Java 0.7.0.20150309
- Eclipse IDE for Java EE Developers 4.4.2.20150219


### Create and Configure Cloud Resources in Azure

Before you begin this procedure, you need to have an active Azure subscription and set up a default Active Directory (AD) on Azure.</source>
          <target state="new">You can verify the version of your installed software in Eclipse by clicking <bpt id="p1">**</bpt>Help &gt; Installation Details<ept id="p1">**</ept>; you should have at least the following versions:

- Package for Microsoft Azure Libraries for Java 0.7.0.20150309
- Eclipse IDE for Java EE Developers 4.4.2.20150219


### Create and Configure Cloud Resources in Azure

Before you begin this procedure, you need to have an active Azure subscription and set up a default Active Directory (AD) on Azure.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create an Active Directory (AD) in Azure

If you do not already have an Active Directory (AD) on your Azure subscription, log into the [Azure classic portal][] with your Microsoft account.</source>
          <target state="new">Create an Active Directory (AD) in Azure

If you do not already have an Active Directory (AD) on your Azure subscription, log into the [Azure classic portal][] with your Microsoft account.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you have multiple subscriptions, click <bpt id="p1">**</bpt>Subscriptions<ept id="p1">**</ept> and select the default directory for the subscription you want to use for this project.</source>
          <target state="new">If you have multiple subscriptions, click <bpt id="p1">**</bpt>Subscriptions<ept id="p1">**</ept> and select the default directory for the subscription you want to use for this project.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Then click <bpt id="p1">**</bpt>Apply<ept id="p1">**</ept> to switch to that subscription view.</source>
          <target state="new">Then click <bpt id="p1">**</bpt>Apply<ept id="p1">**</ept> to switch to that subscription view.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Active Directory<ept id="p1">**</ept> from the menu at left.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Active Directory<ept id="p1">**</ept> from the menu at left.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Click New &gt; Directory &gt; Custom Create<ept id="p1">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Click New &gt; Directory &gt; Custom Create<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Add Directory<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Create New Directory<ept id="p2">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Add Directory<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Create New Directory<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, enter a directory name.</source>
          <target state="new">In <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, enter a directory name.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="new">4.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Domain<ept id="p1">**</ept>, enter a domain name.</source>
          <target state="new">In <bpt id="p1">**</bpt>Domain<ept id="p1">**</ept>, enter a domain name.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is a basic domain name that is included by default with your directory; it has the form `</source>
          <target state="new">This is a basic domain name that is included by default with your directory; it has the form `</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>.onmicrosoft.com`.</source>
          <target state="new">.onmicrosoft.com`.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can name it based on the directory name or another domain name that you own.</source>
          <target state="new">You can name it based on the directory name or another domain name that you own.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Later, you can add another domain name that your organization already uses.</source>
          <target state="new">Later, you can add another domain name that your organization already uses.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="new">5.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Country or region<ept id="p1">**</ept>, select your locale.</source>
          <target state="new">In <bpt id="p1">**</bpt>Country or region<ept id="p1">**</ept>, select your locale.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information on AD, see [What is an Azure AD directory][]?</source>
          <target state="new">For more information on AD, see [What is an Azure AD directory][]?</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Create a Management Certificate for Azure

The Azure SDK for Java uses management certificates to authenticate with Azure subscriptions.</source>
          <target state="new">Create a Management Certificate for Azure

The Azure SDK for Java uses management certificates to authenticate with Azure subscriptions.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These are X.509 v3 certificates you use to authenticate a client application that uses the Service Management API to act on behalf of the subscription owner to manage subscription resources.</source>
          <target state="new">These are X.509 v3 certificates you use to authenticate a client application that uses the Service Management API to act on behalf of the subscription owner to manage subscription resources.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The code in this procedure uses a self-signed certificate to authenticate with Azure.</source>
          <target state="new">The code in this procedure uses a self-signed certificate to authenticate with Azure.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For this procedure, you need to create a certificate and upload it to the [Azure classic portal][] beforehand.</source>
          <target state="new">For this procedure, you need to create a certificate and upload it to the [Azure classic portal][] beforehand.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This involves the following steps:

- Generate a PFX file representing your client certificate and save it locally.</source>
          <target state="new">This involves the following steps:

- Generate a PFX file representing your client certificate and save it locally.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>- Generate a management certificate (CER file) from the PFX file.</source>
          <target state="new">- Generate a management certificate (CER file) from the PFX file.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>- Upload the CER file to your Azure subscription.</source>
          <target state="new">- Upload the CER file to your Azure subscription.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>- Convert the PFX file into JKS, because Java uses that format to authenticate using certificates.</source>
          <target state="new">- Convert the PFX file into JKS, because Java uses that format to authenticate using certificates.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>- Write the application's authentication code, which refers to the local JKS file.</source>
          <target state="new">- Write the application's authentication code, which refers to the local JKS file.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When you complete this procedure, the CER certificate will reside in your Azure subscription and the JKS certificate will reside on your local drive.</source>
          <target state="new">When you complete this procedure, the CER certificate will reside in your Azure subscription and the JKS certificate will reside on your local drive.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information on management certificates, see [Create and Upload a Management Certificate for Azure][].</source>
          <target state="new">For more information on management certificates, see [Create and Upload a Management Certificate for Azure][].</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Create a certificate

To create your own self-signed certificate, open a command console on your operating system and run the following commands.</source>
          <target state="new">Create a certificate

To create your own self-signed certificate, open a command console on your operating system and run the following commands.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&gt; **</bpt>Note:<ept id="p1">**</ept>  The computer on which you run this command must have the JDK installed.</source>
          <target state="new"><bpt id="p1">&gt; **</bpt>Note:<ept id="p1">**</ept>  The computer on which you run this command must have the JDK installed.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Also, the path to the keytool depends on the location in which you install the JDK.</source>
          <target state="new">Also, the path to the keytool depends on the location in which you install the JDK.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information, see [Key and Certificate Management Tool (keytool)][] in the Java online docs.</source>
          <target state="new">For more information, see [Key and Certificate Management Tool (keytool)][] in the Java online docs.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To create the .pfx file:</source>
          <target state="new">To create the .pfx file:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>/bin/keytool -genkey -alias</source>
          <target state="new">/bin/keytool -genkey -alias</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>.pfx -storepass</source>
          <target state="new">.pfx -storepass</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
     -validity 3650 -keyalg RSA -keysize 2048 -storetype pkcs12
     -dname "CN=Self Signed Certificate 20141118170652"</ph>

To create the .cer file:</source>
          <target state="new"><ph id="ph1">
     -validity 3650 -keyalg RSA -keysize 2048 -storetype pkcs12
     -dname "CN=Self Signed Certificate 20141118170652"</ph>

To create the .cer file:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>/bin/keytool -export -alias</source>
          <target state="new">/bin/keytool -export -alias</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>.pfx</source>
          <target state="new">.pfx</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-storepass</source>
          <target state="new">-storepass</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-rfc -file</source>
          <target state="new">-rfc -file</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>.cer

where:

- `</source>
          <target state="new">.cer

where:

- `</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>` is the path to the directory in which you installed Java.</source>
          <target state="new">` is the path to the directory in which you installed Java.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">` is the keystore entry identifier (for example, `</ph>AzureRemoteAccess`).</source>
          <target state="new"><ph id="ph1">` is the keystore entry identifier (for example, `</ph>AzureRemoteAccess`).</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">` is the path to the directory in which you want to store certificates (for example `</ph>C:/Certificates`).</source>
          <target state="new"><ph id="ph1">` is the path to the directory in which you want to store certificates (for example `</ph>C:/Certificates`).</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">` is the name of the certificate file (for example `</ph>AzureWebDemoCert`).</source>
          <target state="new"><ph id="ph1">` is the name of the certificate file (for example `</ph>AzureWebDemoCert`).</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>` is the password you choose to protect the certificate; it must be at least 6 characters long.</source>
          <target state="new">` is the password you choose to protect the certificate; it must be at least 6 characters long.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can enter no password, although this is not recommended.</source>
          <target state="new">You can enter no password, although this is not recommended.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>` is the X.500 Distinguished Name to be associated with alias, and is used as the issuer and subject fields in the self-signed certificate.</source>
          <target state="new">` is the X.500 Distinguished Name to be associated with alias, and is used as the issuer and subject fields in the self-signed certificate.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see [Create and Upload a Management Certificate for Azure][].</source>
          <target state="new">For more information, see [Create and Upload a Management Certificate for Azure][].</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Upload the certificate

To upload a self-signed certificate to Azure, go to the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> page in the classic portal, then click the <bpt id="p2">**</bpt>Management Certificates<ept id="p2">**</ept> tab.</source>
          <target state="new">Upload the certificate

To upload a self-signed certificate to Azure, go to the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> page in the classic portal, then click the <bpt id="p2">**</bpt>Management Certificates<ept id="p2">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Upload<ept id="p1">**</ept> at the bottom of the page and navigate to the location of the CER file you created.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Upload<ept id="p1">**</ept> at the bottom of the page and navigate to the location of the CER file you created.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Convert the PFX file into JKS

In the Windows Command Prompt (running as admin), cd to the directory containing the certificates and run the following command, where `</source>
          <target state="new">Convert the PFX file into JKS

In the Windows Command Prompt (running as admin), cd to the directory containing the certificates and run the following command, where `</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>` is the directory in which you installed Java on your computer:</source>
          <target state="new">` is the directory in which you installed Java on your computer:</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>/bin/keytool.exe -importkeystore</source>
          <target state="new">/bin/keytool.exe -importkeystore</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>-srckeystore</source>
          <target state="new">-srckeystore</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>.pfx</source>
          <target state="new">.pfx</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-destkeystore</source>
          <target state="new">-destkeystore</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>.jks</source>
          <target state="new">.jks</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-srcstoretype pkcs12 -deststoretype JKS

1.</source>
          <target state="new">-srcstoretype pkcs12 -deststoretype JKS

1.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When prompted, enter the destination keystore password; this will be the password for the JKS file.</source>
          <target state="new">When prompted, enter the destination keystore password; this will be the password for the JKS file.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When prompted, enter the source keystore password; this is the password you specified for the PFX file.</source>
          <target state="new">When prompted, enter the source keystore password; this is the password you specified for the PFX file.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The two passwords do not have to be the same.</source>
          <target state="new">The two passwords do not have to be the same.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can enter no password, although this is not recommended.</source>
          <target state="new">You can enter no password, although this is not recommended.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Build a Web App creation application

### Create the Eclipse Workspace and Maven Project

In this section you create a workspace and a Maven project for the web app creation application, named AzureWebDemo.</source>
          <target state="new">Build a Web App creation application

### Create the Eclipse Workspace and Maven Project

In this section you create a workspace and a Maven project for the web app creation application, named AzureWebDemo.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Create a new Maven project.</source>
          <target state="new">Create a new Maven project.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>File &gt; New &gt; Maven Project<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>File &gt; New &gt; Maven Project<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>New Maven Project<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Create a simple project<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Use default workspace location<ept id="p3">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>New Maven Project<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Create a simple project<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Use default workspace location<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>On the second page of <bpt id="p1">**</bpt>New Maven Project<ept id="p1">**</ept>, specify the following:

    - Group ID: `com.</source>
          <target state="new">On the second page of <bpt id="p1">**</bpt>New Maven Project<ept id="p1">**</ept>, specify the following:

    - Group ID: `com.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>.azure.webdemo`</source>
          <target state="new">.azure.webdemo`</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>- Artifact ID: AzureWebDemo</source>
          <target state="new">- Artifact ID: AzureWebDemo</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>- Version: 0.0.1-SNAPSHOT</source>
          <target state="new">- Version: 0.0.1-SNAPSHOT</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>- Packaging: jar</source>
          <target state="new">- Packaging: jar</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>- Name: AzureWebDemo

    Click **Finish**.</source>
          <target state="new">- Name: AzureWebDemo

    Click **Finish**.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Open the new project's pom.xml file in Project Explorer.</source>
          <target state="new">Open the new project's pom.xml file in Project Explorer.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Dependencies<ept id="p1">**</ept> tab.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Dependencies<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>As this is a new project, no packages are listed yet.</source>
          <target state="new">As this is a new project, no packages are listed yet.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="new">4.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Open the Maven Repositories view.</source>
          <target state="new">Open the Maven Repositories view.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Click Window &gt; Show View &gt; Other &gt; Maven &gt; Maven Repositories<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Click Window &gt; Show View &gt; Other &gt; Maven &gt; Maven Repositories<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Maven Repositories<ept id="p1">**</ept> view will appear at the bottom of the IDE.</source>
          <target state="new">The <bpt id="p1">**</bpt>Maven Repositories<ept id="p1">**</ept> view will appear at the bottom of the IDE.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="new">5.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt>Global Repositories<ept id="p1">**</ept>, right-click the <bpt id="p2">**</bpt>central<ept id="p2">**</ept> repository, and select <bpt id="p3">**</bpt>Rebuild Index<ept id="p3">**</ept>.</source>
          <target state="new">Open <bpt id="p1">**</bpt>Global Repositories<ept id="p1">**</ept>, right-click the <bpt id="p2">**</bpt>central<ept id="p2">**</ept> repository, and select <bpt id="p3">**</bpt>Rebuild Index<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>![][1]
    
    This step can take several minutes depending on the speed of your connection.</source>
          <target state="new">![][1]
    
    This step can take several minutes depending on the speed of your connection.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When the index rebuilds, you should see the Microsoft Azure packages in the <bpt id="p1">**</bpt>central<ept id="p1">**</ept> Maven repository.</source>
          <target state="new">When the index rebuilds, you should see the Microsoft Azure packages in the <bpt id="p1">**</bpt>central<ept id="p1">**</ept> Maven repository.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="new">6.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Dependencies<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Dependencies<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Enter Group ID...<ept id="p1">**</ept> enter <ph id="ph1">`azure-management`</ph>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Enter Group ID...<ept id="p1">**</ept> enter <ph id="ph1">`azure-management`</ph>.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Select the packages for base management and App Service Web Apps management:

        <bpt id="p1">com.microsoft.azure  azure-management
        com.microsoft.azure  azure-management-websites

    &gt; **</bpt>Note:<ept id="p1">**</ept> If you are updating the dependencies after a new version</source>
          <target state="new">Select the packages for base management and App Service Web Apps management:

        <bpt id="p1">com.microsoft.azure  azure-management
        com.microsoft.azure  azure-management-websites

    &gt; **</bpt>Note:<ept id="p1">**</ept> If you are updating the dependencies after a new version</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>&gt; release, you need to re-add each of the dependencies in this</source>
          <target state="new">&gt; release, you need to re-add each of the dependencies in this</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>list.</source>
          <target state="new">list.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>&gt; Aft<bpt id="p1">er</bpt> you <ept id="p1">c</ept><ph id="ph1">l</ph>ick **Add** and select each dependency</source>
          <target state="new">&gt; Aft<bpt id="p1">er</bpt> you <ept id="p1">c</ept><ph id="ph1">l</ph>ick **Add** and select each dependency</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>it appears
    &gt; with the new ver<bpt id="p1">sio</bpt>n number in <ept id="p1">th</ept><ph id="ph1">e</ph> **Dependencies** list.</source>
          <target state="new">it appears
    &gt; with the new ver<bpt id="p1">sio</bpt>n number in <ept id="p1">th</ept><ph id="ph1">e</ph> **Dependencies** list.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The Azure packages then appear in the <bpt id="p1">**</bpt>Dependencies<ept id="p1">**</ept> list.</source>
          <target state="new">The Azure packages then appear in the <bpt id="p1">**</bpt>Dependencies<ept id="p1">**</ept> list.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Writing Java Code to Create a Web App by Calling the Azure SDK

Next, write the code that calls APIs in the Azure SDK for Java to create the App Service web app.</source>
          <target state="new">Writing Java Code to Create a Web App by Calling the Azure SDK

Next, write the code that calls APIs in the Azure SDK for Java to create the App Service web app.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Create a Java class to contain the main entry point code.</source>
          <target state="new">Create a Java class to contain the main entry point code.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>In Project Explorer, right-click on the project node and select <bpt id="p1">**</bpt>New &gt; Class<ept id="p1">**</ept>.</source>
          <target state="new">In Project Explorer, right-click on the project node and select <bpt id="p1">**</bpt>New &gt; Class<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>New Java Class<ept id="p1">**</ept>, name the class <ph id="ph1">`WebCreator`</ph> and check the <bpt id="p2">**</bpt>public static void main<ept id="p2">**</ept> checkbox.</source>
          <target state="new">In <bpt id="p1">**</bpt>New Java Class<ept id="p1">**</ept>, name the class <ph id="ph1">`WebCreator`</ph> and check the <bpt id="p2">**</bpt>public static void main<ept id="p2">**</ept> checkbox.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The selections should appear as follows:

    ![][2]

3.</source>
          <target state="new">The selections should appear as follows:

    ![][2]

3.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The WebCreator.java file appears in Project Explorer.</source>
          <target state="new">The WebCreator.java file appears in Project Explorer.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Calling the Azure API to Create an App Service Web App


#### Add necessary imports

In WebCreator.java, add the following imports; these imports provide access to classes in the management libraries for consuming Azure APIs:

    // General imports
    import java.net.URI;
    import java.util.ArrayList;
    
    // Imports for Exceptions
    import java.io.IOException;
    import java.net.URISyntaxException;
    import javax.xml.parsers.ParserConfigurationException;
    import com.microsoft.windowsazure.exception.ServiceException;
    import org.xml.sax.SAXException;
    
    // Imports for Azure App Service management configuration
    import com.microsoft.windowsazure.Configuration;
    import com.microsoft.windowsazure.management.configuration.ManagementConfiguration;
    
    // Service management imports for App Service Web Apps creation
    import com.microsoft.windowsazure.management.websites.*;
    import com.microsoft.windowsazure.management.websites.models.*;
    
    // Imports for authentication
    import com.microsoft.windowsazure.core.utils.KeyStoreType;


#### Define the main entry point class

Because the purpose of the AzureWebDemo application is to create an App Service Web App, name the main class for this application <ph id="ph1">`WebAppCreator`</ph>.</source>
          <target state="new">Calling the Azure API to Create an App Service Web App


#### Add necessary imports

In WebCreator.java, add the following imports; these imports provide access to classes in the management libraries for consuming Azure APIs:

    // General imports
    import java.net.URI;
    import java.util.ArrayList;
    
    // Imports for Exceptions
    import java.io.IOException;
    import java.net.URISyntaxException;
    import javax.xml.parsers.ParserConfigurationException;
    import com.microsoft.windowsazure.exception.ServiceException;
    import org.xml.sax.SAXException;
    
    // Imports for Azure App Service management configuration
    import com.microsoft.windowsazure.Configuration;
    import com.microsoft.windowsazure.management.configuration.ManagementConfiguration;
    
    // Service management imports for App Service Web Apps creation
    import com.microsoft.windowsazure.management.websites.*;
    import com.microsoft.windowsazure.management.websites.models.*;
    
    // Imports for authentication
    import com.microsoft.windowsazure.core.utils.KeyStoreType;


#### Define the main entry point class

Because the purpose of the AzureWebDemo application is to create an App Service Web App, name the main class for this application <ph id="ph1">`WebAppCreator`</ph>.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This class provides the main entry point code that calls the Azure Service Management API to create the web app.</source>
          <target state="new">This class provides the main entry point code that calls the Azure Service Management API to create the web app.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Add the following parameter definitions for the web app and webspace.</source>
          <target state="new">Add the following parameter definitions for the web app and webspace.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>You will need to provide your own Azure subscription ID and certificate information.</source>
          <target state="new">You will need to provide your own Azure subscription ID and certificate information.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">public class WebAppCreator {
    
        // Parameter definitions used for authentication.
        private static String uri = "https://management.core.windows.net/";
        private static String subscriptionId = "</ph></source>
          <target state="new"><ph id="ph1">public class WebAppCreator {
    
        // Parameter definitions used for authentication.
        private static String uri = "https://management.core.windows.net/";
        private static String subscriptionId = "</ph></target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>private static String keyStoreLocation = "</source>
          <target state="new">private static String keyStoreLocation = "</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>private static String keyStorePassword = "</source>
          <target state="new">private static String keyStorePassword = "</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>";
    
        // Define web app parameter values.</source>
          <target state="new">";
    
        // Define web app parameter values.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>private static String webAppName = "WebDemoWebApp";
        private static String domainName = ".azurewebsites.net";
        private static String webSpaceName = WebSpaceNames.WESTUSWEBSPACE;
        private static String appServicePlanName = "WebDemoAppServicePlan";

where:

- `</source>
          <target state="new">private static String webAppName = "WebDemoWebApp";
        private static String domainName = ".azurewebsites.net";
        private static String webSpaceName = WebSpaceNames.WESTUSWEBSPACE;
        private static String appServicePlanName = "WebDemoAppServicePlan";

where:

- `</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>` is the Azure subscription ID in which you want to create the resource.</source>
          <target state="new">` is the Azure subscription ID in which you want to create the resource.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">` is the path and filename to the JKS file in your local certificate store directory. For example, `</ph>C:/Certificates/CertificateName.jks<ph id="ph2">` for Linux and `</ph>C:\Certificates\CertificateName.jks` for Windows.</source>
          <target state="new"><ph id="ph1">` is the path and filename to the JKS file in your local certificate store directory. For example, `</ph>C:/Certificates/CertificateName.jks<ph id="ph2">` for Linux and `</ph>C:\Certificates\CertificateName.jks` for Windows.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>` is the password you specified when you created your JKS certificate.</source>
          <target state="new">` is the password you specified when you created your JKS certificate.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `webAppName`</ph> can be any name you choose; this procedure uses the name <ph id="ph2">`WebDemoWebApp`</ph>.</source>
          <target state="new"><ph id="ph1">- `webAppName`</ph> can be any name you choose; this procedure uses the name <ph id="ph2">`WebDemoWebApp`</ph>.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The full domain name is the <ph id="ph1">`webAppName`</ph> with the <ph id="ph2">`domainName`</ph> appended, so in this case the full domain is <ph id="ph3">`webdemowebapp.azurewebsites.net`</ph>.</source>
          <target state="new">The full domain name is the <ph id="ph1">`webAppName`</ph> with the <ph id="ph2">`domainName`</ph> appended, so in this case the full domain is <ph id="ph3">`webdemowebapp.azurewebsites.net`</ph>.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `domainName`</ph> should be specified as shown above.</source>
          <target state="new"><ph id="ph1">- `domainName`</ph> should be specified as shown above.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `webSpaceName`</ph> should be one of the values defined in the [WebSpaceNames][] class.</source>
          <target state="new"><ph id="ph1">- `webSpaceName`</ph> should be one of the values defined in the [WebSpaceNames][] class.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `appServicePlanName`</ph> should be specified as shown above.</source>
          <target state="new"><ph id="ph1">- `appServicePlanName`</ph> should be specified as shown above.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&gt; **</bpt>Note:<ept id="p1">**</ept> Each time you run this application, you need to change the value</source>
          <target state="new"><bpt id="p1">&gt; **</bpt>Note:<ept id="p1">**</ept> Each time you run this application, you need to change the value</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">of `webAppNam</ph><ph id="ph2">e</ph>` a<ph id="ph3">nd `appServicePlanNam</ph><ph id="ph4">e</ph>` (or delete the web app on the Azu</source>
          <target state="new">&gt; <ph id="ph1">of `webAppNam</ph><ph id="ph2">e</ph>` a<ph id="ph3">nd `appServicePlanNam</ph><ph id="ph4">e</ph>` (or delete the web app on the Azu</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>&gt; Portal) before running the application again.</source>
          <target state="new">&gt; Portal) before running the application again.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Otherwise, execution</source>
          <target state="new">Otherwise, execution</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>ll 
&gt; fail because the same resource already exists on Azure.</source>
          <target state="new">ll 
&gt; fail because the same resource already exists on Azure.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Define the web creation method

Next, define a method to create the web app.</source>
          <target state="new">Define the web creation method

Next, define a method to create the web app.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>This method, <ph id="ph1">`createWebApp`</ph>, specifies the parameters of the web app and the webspace.</source>
          <target state="new">This method, <ph id="ph1">`createWebApp`</ph>, specifies the parameters of the web app and the webspace.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>It also creates and configures the App Service Web Apps management client, which is defined by the [WebSiteManagementClient][] object.</source>
          <target state="new">It also creates and configures the App Service Web Apps management client, which is defined by the [WebSiteManagementClient][] object.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The management client is key to creating Web Apps.</source>
          <target state="new">The management client is key to creating Web Apps.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>It provides RESTful web services that allow applications to manage web apps (performing operations such as create, update, and delete) by calling the service management API.</source>
          <target state="new">It provides RESTful web services that allow applications to manage web apps (performing operations such as create, update, and delete) by calling the service management API.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">private static void createWebApp() throws Exception {

        // Specify configuration settings for the App Service management client.
        Configuration config = ManagementConfiguration.configure(
            new URI(uri),
            subscriptionId,
            keyStoreLocation,  // Path to the JKS file
            keyStorePassword,  // Password for the JKS file
            KeyStoreType.jks   // Flag that you are using a JKS keystore
        );

        // Create the App Service Web Apps management client to call Azure APIs
        // and pass it the App Service management configuration object.
        WebSiteManagementClient webAppManagementClient = WebSiteManagementService.create(config);

        // Create an App Service plan for the web app with the specified parameters.
        WebHostingPlanCreateParameters appServicePlanParams = new WebHostingPlanCreateParameters();
        appServicePlanParams.setName(appServicePlanName);
        appServicePlanParams.setSKU(SkuOptions.Free);
        webAppManagementClient.getWebHostingPlansOperations().create(webSpaceName, appServicePlanParams);

        // Set webspace parameters.
        WebSiteCreateParameters.WebSpaceDetails webSpaceDetails = new WebSiteCreateParameters.WebSpaceDetails();
        webSpaceDetails.setGeoRegion(GeoRegionNames.WESTUS);
        webSpaceDetails.setPlan(WebSpacePlanNames.VIRTUALDEDICATEDPLAN);
        webSpaceDetails.setName(webSpaceName);

        // Set web app parameters.
        // Note that the server farm name takes the Azure App Service plan name.
        WebSiteCreateParameters webAppCreateParameters = new WebSiteCreateParameters();
        webAppCreateParameters.setName(webAppName);
        webAppCreateParameters.setServerFarm(appServicePlanName);
        webAppCreateParameters.setWebSpace(webSpaceDetails);

        // Set usage metrics attributes.
        WebSiteGetUsageMetricsResponse.UsageMetric usageMetric = new WebSiteGetUsageMetricsResponse.UsageMetric();
        usageMetric.setSiteMode(WebSiteMode.Basic);
        usageMetric.setComputeMode(WebSiteComputeMode.Shared);

        // Define the web app object.
        ArrayList</ph></source>
          <target state="new"><ph id="ph1">private static void createWebApp() throws Exception {

        // Specify configuration settings for the App Service management client.
        Configuration config = ManagementConfiguration.configure(
            new URI(uri),
            subscriptionId,
            keyStoreLocation,  // Path to the JKS file
            keyStorePassword,  // Password for the JKS file
            KeyStoreType.jks   // Flag that you are using a JKS keystore
        );

        // Create the App Service Web Apps management client to call Azure APIs
        // and pass it the App Service management configuration object.
        WebSiteManagementClient webAppManagementClient = WebSiteManagementService.create(config);

        // Create an App Service plan for the web app with the specified parameters.
        WebHostingPlanCreateParameters appServicePlanParams = new WebHostingPlanCreateParameters();
        appServicePlanParams.setName(appServicePlanName);
        appServicePlanParams.setSKU(SkuOptions.Free);
        webAppManagementClient.getWebHostingPlansOperations().create(webSpaceName, appServicePlanParams);

        // Set webspace parameters.
        WebSiteCreateParameters.WebSpaceDetails webSpaceDetails = new WebSiteCreateParameters.WebSpaceDetails();
        webSpaceDetails.setGeoRegion(GeoRegionNames.WESTUS);
        webSpaceDetails.setPlan(WebSpacePlanNames.VIRTUALDEDICATEDPLAN);
        webSpaceDetails.setName(webSpaceName);

        // Set web app parameters.
        // Note that the server farm name takes the Azure App Service plan name.
        WebSiteCreateParameters webAppCreateParameters = new WebSiteCreateParameters();
        webAppCreateParameters.setName(webAppName);
        webAppCreateParameters.setServerFarm(appServicePlanName);
        webAppCreateParameters.setWebSpace(webSpaceDetails);

        // Set usage metrics attributes.
        WebSiteGetUsageMetricsResponse.UsageMetric usageMetric = new WebSiteGetUsageMetricsResponse.UsageMetric();
        usageMetric.setSiteMode(WebSiteMode.Basic);
        usageMetric.setComputeMode(WebSiteComputeMode.Shared);

        // Define the web app object.
        ArrayList</ph></target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>fullWebAppName = new ArrayList</source>
          <target state="new">fullWebAppName = new ArrayList</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>fullWebAppName.add(webAppName + domainName);</source>
          <target state="new">fullWebAppName.add(webAppName + domainName);</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>WebSite webApp = new WebSite();</source>
          <target state="new">WebSite webApp = new WebSite();</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>webApp.setHostNames(fullWebAppName);

        // Create the web app.</source>
          <target state="new">webApp.setHostNames(fullWebAppName);

        // Create the web app.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>WebSiteCreateResponse webAppCreateResponse = webAppManagementClient.getWebSitesOperations().create(webSpaceName, webAppCreateParameters);

        // Output the HTTP status code of the response; 200 indicates the request succeeded; 4xx indicates failure.</source>
          <target state="new">WebSiteCreateResponse webAppCreateResponse = webAppManagementClient.getWebSitesOperations().create(webSpaceName, webAppCreateParameters);

        // Output the HTTP status code of the response; 200 indicates the request succeeded; 4xx indicates failure.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>System.out.println("----------");
        System.out.println("Web app created - HTTP response " + webAppCreateResponse.getStatusCode() + "\n");

        // Output the name of the web app that this application created.</source>
          <target state="new">System.out.println("----------");
        System.out.println("Web app created - HTTP response " + webAppCreateResponse.getStatusCode() + "\n");

        // Output the name of the web app that this application created.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>String shinyNewWebAppName = webAppCreateResponse.getWebSite().getName();
        System.out.println("----------\n");
        System.out.println("Name of web app created: " + shinyNewWebAppName + "\n");
        System.out.println("----------\n");
    }

The code will output the HTTP status of the response indicating success or failure, and if successful, will output the name of the created web app.</source>
          <target state="new">String shinyNewWebAppName = webAppCreateResponse.getWebSite().getName();
        System.out.println("----------\n");
        System.out.println("Name of web app created: " + shinyNewWebAppName + "\n");
        System.out.println("----------\n");
    }

The code will output the HTTP status of the response indicating success or failure, and if successful, will output the name of the created web app.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Define the main() method

Provide the main() method code that calls createWebApp() to create the web app.</source>
          <target state="new">Define the main() method

Provide the main() method code that calls createWebApp() to create the web app.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Finally, call <ph id="ph1">`createWebApp`</ph> from <ph id="ph2">`main`</ph>:

        public static void main(String[] args)
            throws IOException, URISyntaxException, ServiceException,
            ParserConfigurationException, SAXException, Exception {

            // Create web app
            createWebApp();

        }  // end of main()

    }  // end of WebAppCreator class


#### Run the application and verify web app creation

To verify that your application runs, click <bpt id="p1">**</bpt>Run &gt; Run<ept id="p1">**</ept>.</source>
          <target state="new">Finally, call <ph id="ph1">`createWebApp`</ph> from <ph id="ph2">`main`</ph>:

        public static void main(String[] args)
            throws IOException, URISyntaxException, ServiceException,
            ParserConfigurationException, SAXException, Exception {

            // Create web app
            createWebApp();

        }  // end of main()

    }  // end of WebAppCreator class


#### Run the application and verify web app creation

To verify that your application runs, click <bpt id="p1">**</bpt>Run &gt; Run<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>When the application completes running, you should see the following output in the Eclipse console:

    ----------
    Web app created - HTTP response 200
    
    ----------
    
    Name of web app created: WebDemoWebApp
    
    ----------

Log into the Azure classic portal and click <bpt id="p1">**</bpt>Web Apps<ept id="p1">**</ept>.</source>
          <target state="new">When the application completes running, you should see the following output in the Eclipse console:

    ----------
    Web app created - HTTP response 200
    
    ----------
    
    Name of web app created: WebDemoWebApp
    
    ----------

Log into the Azure classic portal and click <bpt id="p1">**</bpt>Web Apps<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The new web app should appear in the Web Apps list within a few minutes.</source>
          <target state="new">The new web app should appear in the Web Apps list within a few minutes.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Deploying an Application to the Web App

After you have run AzureWebDemo and created the new web app, log into the classic portal, click <bpt id="p1">**</bpt>Web Apps<ept id="p1">**</ept>, and select <bpt id="p2">**</bpt>WebDemoWebApp<ept id="p2">**</ept> in the <bpt id="p3">**</bpt>Web Apps<ept id="p3">**</ept> list.</source>
          <target state="new">Deploying an Application to the Web App

After you have run AzureWebDemo and created the new web app, log into the classic portal, click <bpt id="p1">**</bpt>Web Apps<ept id="p1">**</ept>, and select <bpt id="p2">**</bpt>WebDemoWebApp<ept id="p2">**</ept> in the <bpt id="p3">**</bpt>Web Apps<ept id="p3">**</ept> list.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>In the web app's dashboard page, click <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> (or click the URL, <ph id="ph1">`webdemowebapp.azurewebsites.net`</ph>) to navigate to it.</source>
          <target state="new">In the web app's dashboard page, click <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> (or click the URL, <ph id="ph1">`webdemowebapp.azurewebsites.net`</ph>) to navigate to it.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>You will see a blank placeholder page, because no content has been published to the web app yet.</source>
          <target state="new">You will see a blank placeholder page, because no content has been published to the web app yet.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Next you will create a "Hello World" application and deploy it to the web app.</source>
          <target state="new">Next you will create a "Hello World" application and deploy it to the web app.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Create a JSP Hello World application

#### Create the application

In order to demonstrate how to deploy an application to the web, the following procedure shows you how to create a simple "Hello World" Java application and upload it to the App Service Web App that your application created.</source>
          <target state="new">Create a JSP Hello World application

#### Create the application

In order to demonstrate how to deploy an application to the web, the following procedure shows you how to create a simple "Hello World" Java application and upload it to the App Service Web App that your application created.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>File &gt; New &gt; Dynamic Web Project<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>File &gt; New &gt; Dynamic Web Project<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Name it <ph id="ph1">`JSPHello`</ph>.</source>
          <target state="new">Name it <ph id="ph1">`JSPHello`</ph>.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>You do not need to change any other settings in this dialog.</source>
          <target state="new">You do not need to change any other settings in this dialog.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>![][3]

2.</source>
          <target state="new">![][3]

2.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>In Project Explorer, expand the <bpt id="p1">**</bpt>JSPHello<ept id="p1">**</ept> project, right-click <bpt id="p2">**</bpt>WebContent<ept id="p2">**</ept>, then click <bpt id="p3">**</bpt>New &gt; JSP File<ept id="p3">**</ept>.</source>
          <target state="new">In Project Explorer, expand the <bpt id="p1">**</bpt>JSPHello<ept id="p1">**</ept> project, right-click <bpt id="p2">**</bpt>WebContent<ept id="p2">**</ept>, then click <bpt id="p3">**</bpt>New &gt; JSP File<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>In the New JSP File dialog, name the new file <ph id="ph1">`index.jsp`</ph>.</source>
          <target state="new">In the New JSP File dialog, name the new file <ph id="ph1">`index.jsp`</ph>.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Next<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Next<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Select JSP Template<ept id="p1">**</ept> dialog, select <bpt id="p2">**</bpt>New JSP File (html)<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Finish<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Select JSP Template<ept id="p1">**</ept> dialog, select <bpt id="p2">**</bpt>New JSP File (html)<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Finish<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="new">4.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>In index.jsp, add the following code in the `</source>
          <target state="new">In index.jsp, add the following code in the `</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>` tag sections:</source>
          <target state="new">` tag sections:</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><ph id="ph1">


####</ph> Run the Hello World application in localhost

Before you run this application, you need to configure a few properties.</source>
          <target state="new"><ph id="ph1">


####</ph> Run the Hello World application in localhost

Before you run this application, you need to configure a few properties.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>JSPHello<ept id="p1">**</ept> project and select <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
          <target state="new">Right-click the <bpt id="p1">**</bpt>JSPHello<ept id="p1">**</ept> project and select <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> dialog: select <bpt id="p2">**</bpt>Java Build Path<ept id="p2">**</ept>, select the <bpt id="p3">**</bpt>Order and Export<ept id="p3">**</ept> tab, check <bpt id="p4">**</bpt>JRE System Library<ept id="p4">**</ept>, then click <bpt id="p5">**</bpt>Up<ept id="p5">**</ept> to move it to the top of the list.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> dialog: select <bpt id="p2">**</bpt>Java Build Path<ept id="p2">**</ept>, select the <bpt id="p3">**</bpt>Order and Export<ept id="p3">**</ept> tab, check <bpt id="p4">**</bpt>JRE System Library<ept id="p4">**</ept>, then click <bpt id="p5">**</bpt>Up<ept id="p5">**</ept> to move it to the top of the list.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>![][4]

3.</source>
          <target state="new">![][4]

3.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Also in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> dialog: select <bpt id="p2">**</bpt>Targeted Runtimes<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>New<ept id="p3">**</ept>.</source>
          <target state="new">Also in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> dialog: select <bpt id="p2">**</bpt>Targeted Runtimes<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>New<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="new">4.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Server Runtime Environment<ept id="p1">**</ept> dialog, select a server such as <bpt id="p2">**</bpt>Apache Tomcat v7.0<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>New Server Runtime Environment<ept id="p1">**</ept> dialog, select a server such as <bpt id="p2">**</bpt>Apache Tomcat v7.0<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Tomcat Server<ept id="p1">**</ept> dialog, set <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> to <ph id="ph1">`Apache Tomcat v7.0`</ph>, and set <bpt id="p3">**</bpt>Tomcat Installation Directory<ept id="p3">**</ept> to the directory in which you installed the version of Tomcat server you want to use.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Tomcat Server<ept id="p1">**</ept> dialog, set <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> to <ph id="ph1">`Apache Tomcat v7.0`</ph>, and set <bpt id="p3">**</bpt>Tomcat Installation Directory<ept id="p3">**</ept> to the directory in which you installed the version of Tomcat server you want to use.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>![][5]

    Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
          <target state="new">![][5]

    Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="new">5.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>You then return to the <bpt id="p1">**</bpt>Targeted Runtimes<ept id="p1">**</ept> page of the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> dialog.</source>
          <target state="new">You then return to the <bpt id="p1">**</bpt>Targeted Runtimes<ept id="p1">**</ept> page of the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> dialog.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Apache Tomcat v7.0<ept id="p1">**</ept>, then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Apache Tomcat v7.0<ept id="p1">**</ept>, then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>![][6]

6.</source>
          <target state="new">![][6]

6.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>In the Eclipse <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Run<ept id="p2">**</ept>.</source>
          <target state="new">In the Eclipse <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Run<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Run As<ept id="p1">**</ept> dialog, select <bpt id="p2">**</bpt>Run on Server<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Run As<ept id="p1">**</ept> dialog, select <bpt id="p2">**</bpt>Run on Server<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Run on Server<ept id="p1">**</ept> dialog, select <bpt id="p2">**</bpt>Tomcat v7.0 Server<ept id="p2">**</ept>:

    ![][7]

    Click <bpt id="p3">**</bpt>Finish<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Run on Server<ept id="p1">**</ept> dialog, select <bpt id="p2">**</bpt>Tomcat v7.0 Server<ept id="p2">**</ept>:

    ![][7]

    Click <bpt id="p3">**</bpt>Finish<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="new">7.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>When the application runs, you should see the <bpt id="p1">**</bpt>JSPHello<ept id="p1">**</ept> page appear in a localhost window in Eclipse (<ph id="ph1">`http://localhost:8080/JSPHello/`</ph>), displaying the following message:

    <ph id="ph2">`Hello World, the time is Tue Mar 24 23:21:10 GMT 2015`</ph><ph id="ph3">


####</ph> Export the application as a WAR

Export the web project files as a web archive (WAR) file so that you can deploy it to the web app.</source>
          <target state="new">When the application runs, you should see the <bpt id="p1">**</bpt>JSPHello<ept id="p1">**</ept> page appear in a localhost window in Eclipse (<ph id="ph1">`http://localhost:8080/JSPHello/`</ph>), displaying the following message:

    <ph id="ph2">`Hello World, the time is Tue Mar 24 23:21:10 GMT 2015`</ph><ph id="ph3">


####</ph> Export the application as a WAR

Export the web project files as a web archive (WAR) file so that you can deploy it to the web app.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The following web project files reside in the WebContent folder:

    META-INF
    WEB-INF
    index.jsp

1.</source>
          <target state="new">The following web project files reside in the WebContent folder:

    META-INF
    WEB-INF
    index.jsp

1.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Right-click the WebContent folder and select <bpt id="p1">**</bpt>Export<ept id="p1">**</ept>.</source>
          <target state="new">Right-click the WebContent folder and select <bpt id="p1">**</bpt>Export<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Export Select<ept id="p1">**</ept> dialog, click <bpt id="p2">**</bpt>Web &gt; WAR<ept id="p2">**</ept> file, then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Export Select<ept id="p1">**</ept> dialog, click <bpt id="p2">**</bpt>Web &gt; WAR<ept id="p2">**</ept> file, then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>WAR Export<ept id="p1">**</ept> dialog, select the src directory in the current project, and include the name of the WAR file at the end.</source>
          <target state="new">In the <bpt id="p1">**</bpt>WAR Export<ept id="p1">**</ept> dialog, select the src directory in the current project, and include the name of the WAR file at the end.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>For example:

    `</source>
          <target state="new">For example:

    `</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>/JSPHello/src/JSPHello.war`

For more information on deploying WAR files, see <bpt id="p1">[</bpt><ept id="p1">Add a Java application to Azure App Service Web Apps](web-sites-java-add-app.md)</ept>.</source>
          <target state="new">/JSPHello/src/JSPHello.war`

For more information on deploying WAR files, see <bpt id="p1">[</bpt><ept id="p1">Add a Java application to Azure App Service Web Apps](web-sites-java-add-app.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Deploying the Hello World Application Using FTP

Select a third-party FTP client to publish the application.</source>
          <target state="new">Deploying the Hello World Application Using FTP

Select a third-party FTP client to publish the application.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This procedure describes two options: the Kudu console built into Azure; and FileZilla, a popular tool with a convenient, graphical UI.</source>
          <target state="new">This procedure describes two options: the Kudu console built into Azure; and FileZilla, a popular tool with a convenient, graphical UI.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&gt; **</bpt>Note:<ept id="p1">**</ept> The Azure Plugin for Eclipse with Java 2.4 supports deployment to storage accounts and cloud services, but does not currently support deployment to web apps.</source>
          <target state="new"><bpt id="p1">&gt; **</bpt>Note:<ept id="p1">**</ept> The Azure Plugin for Eclipse with Java 2.4 supports deployment to storage accounts and cloud services, but does not currently support deployment to web apps.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>You can deploy to storage accounts and cloud services using an Azure Deployment Project as described in <bpt id="p1">[</bpt><ept id="p1">Creating a Hello World Application for Azure in Eclipse](http://msdn.microsoft.com/library/azure/hh690944.aspx)</ept>, but not to web apps.</source>
          <target state="new">You can deploy to storage accounts and cloud services using an Azure Deployment Project as described in <bpt id="p1">[</bpt><ept id="p1">Creating a Hello World Application for Azure in Eclipse](http://msdn.microsoft.com/library/azure/hh690944.aspx)</ept>, but not to web apps.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Use other methods such as FTP or GitHub to transfer files to your web app.</source>
          <target state="new">Use other methods such as FTP or GitHub to transfer files to your web app.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&gt; **</bpt>Note:<ept id="p1">**</ept> We do not recommend using FTP from the Windows command prompt (the command-line FTP.EXE utility that ships with Windows).</source>
          <target state="new"><bpt id="p1">&gt; **</bpt>Note:<ept id="p1">**</ept> We do not recommend using FTP from the Windows command prompt (the command-line FTP.EXE utility that ships with Windows).</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>FTP clients that use active FTP, such as FTP.EXE, often fail to work over firewalls.</source>
          <target state="new">FTP clients that use active FTP, such as FTP.EXE, often fail to work over firewalls.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Active FTP specifies an internal LAN-based address, to which an FTP server will likely fail to connect.</source>
          <target state="new">Active FTP specifies an internal LAN-based address, to which an FTP server will likely fail to connect.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>For more information on deployment to an App Service web app using FTP, see the following topics:

<bpt id="p1">- [</bpt><ept id="p1">Deploy using an FTP utility](web-sites-deploy.md)</ept><ph id="ph1">


####</ph> Set up deployment credentials

Make sure you have run the <bpt id="p2">**</bpt>AzureWebDemo<ept id="p2">**</ept> application to create a web app.</source>
          <target state="new">For more information on deployment to an App Service web app using FTP, see the following topics:

<bpt id="p1">- [</bpt><ept id="p1">Deploy using an FTP utility](web-sites-deploy.md)</ept><ph id="ph1">


####</ph> Set up deployment credentials

Make sure you have run the <bpt id="p2">**</bpt>AzureWebDemo<ept id="p2">**</ept> application to create a web app.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>You will transfer files to this location.</source>
          <target state="new">You will transfer files to this location.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Log into the classic portal and click <bpt id="p1">**</bpt>Web Apps<ept id="p1">**</ept>.</source>
          <target state="new">Log into the classic portal and click <bpt id="p1">**</bpt>Web Apps<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Make sure <bpt id="p1">**</bpt>WebDemoWebApp<ept id="p1">**</ept> appears in the list of web apps, and make sure that it is running.</source>
          <target state="new">Make sure <bpt id="p1">**</bpt>WebDemoWebApp<ept id="p1">**</ept> appears in the list of web apps, and make sure that it is running.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>WebDemoWebApp<ept id="p1">**</ept> to open its <bpt id="p2">**</bpt>Dashboard<ept id="p2">**</ept> page.</source>
          <target state="new">Click <bpt id="p1">**</bpt>WebDemoWebApp<ept id="p1">**</ept> to open its <bpt id="p2">**</bpt>Dashboard<ept id="p2">**</ept> page.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> page, under <bpt id="p2">**</bpt>Quick Glance<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Set up your deployment credentials<ept id="p3">**</ept> (if you already have deployment credentials, this reads <bpt id="p4">**</bpt>Reset your deployment credentials<ept id="p4">**</ept>).</source>
          <target state="new">On the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> page, under <bpt id="p2">**</bpt>Quick Glance<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Set up your deployment credentials<ept id="p3">**</ept> (if you already have deployment credentials, this reads <bpt id="p4">**</bpt>Reset your deployment credentials<ept id="p4">**</ept>).</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Deployment credentials are associated with a Microsoft account.</source>
          <target state="new">Deployment credentials are associated with a Microsoft account.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>You need to specify a username and password that you can use to deploy using Git and FTP.</source>
          <target state="new">You need to specify a username and password that you can use to deploy using Git and FTP.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>You can use these credentials to deploy to any web app in all Azure subscriptions associated with your Microsoft account.</source>
          <target state="new">You can use these credentials to deploy to any web app in all Azure subscriptions associated with your Microsoft account.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Provide Git and FTP deployment credentials in the dialog, and record the username and password for future use.</source>
          <target state="new">Provide Git and FTP deployment credentials in the dialog, and record the username and password for future use.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Get FTP connection information

To use FTP to deploy application files to the newly created web app, you need to obtain connection information.</source>
          <target state="new">Get FTP connection information

To use FTP to deploy application files to the newly created web app, you need to obtain connection information.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>There are two ways to obtain connection information.</source>
          <target state="new">There are two ways to obtain connection information.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>One way is to visit the web app's <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> page; the other way is to download the web app's publish profile.</source>
          <target state="new">One way is to visit the web app's <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> page; the other way is to download the web app's publish profile.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The publish profile is an XML file that provides information such as FTP host name and logon credentials for your web apps in Azure App Service.</source>
          <target state="new">The publish profile is an XML file that provides information such as FTP host name and logon credentials for your web apps in Azure App Service.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>You can use this username and password to deploy to any web app in all subscriptions associated with the Azure account, not only this one.</source>
          <target state="new">You can use this username and password to deploy to any web app in all subscriptions associated with the Azure account, not only this one.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>To obtain FTP connection information from the web app's blade in the [Azure Portal][]:

1.</source>
          <target state="new">To obtain FTP connection information from the web app's blade in the [Azure Portal][]:

1.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Essentials<ept id="p1">**</ept>, find and copy the <bpt id="p2">**</bpt>FTP hostname<ept id="p2">**</ept>.</source>
          <target state="new">Under <bpt id="p1">**</bpt>Essentials<ept id="p1">**</ept>, find and copy the <bpt id="p2">**</bpt>FTP hostname<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>This is a URI similar to <ph id="ph1">`ftp://waws-prod-bay-NNN.ftp.azurewebsites.windows.net`</ph>.</source>
          <target state="new">This is a URI similar to <ph id="ph1">`ftp://waws-prod-bay-NNN.ftp.azurewebsites.windows.net`</ph>.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Essentials<ept id="p1">**</ept>, find and copy <bpt id="p2">**</bpt>FTP/Deployment username<ept id="p2">**</ept>.</source>
          <target state="new">Under <bpt id="p1">**</bpt>Essentials<ept id="p1">**</ept>, find and copy <bpt id="p2">**</bpt>FTP/Deployment username<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>This will have the form <bpt id="p1">*</bpt>webappname\deployment-username<ept id="p1">*</ept>; for example <ph id="ph1">`WebDemoWebApp\deployer77`</ph>.</source>
          <target state="new">This will have the form <bpt id="p1">*</bpt>webappname\deployment-username<ept id="p1">*</ept>; for example <ph id="ph1">`WebDemoWebApp\deployer77`</ph>.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>To obtain FTP connection information from the publish profile:

1.</source>
          <target state="new">To obtain FTP connection information from the publish profile:

1.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>In the web app's blade, click <bpt id="p1">**</bpt>Get publish profile<ept id="p1">**</ept>.</source>
          <target state="new">In the web app's blade, click <bpt id="p1">**</bpt>Get publish profile<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>This will download a .publishsettings file to your local drive.</source>
          <target state="new">This will download a .publishsettings file to your local drive.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Open the .publishsettings file in an XML editor or text editor and find the `</source>
          <target state="new">Open the .publishsettings file in an XML editor or text editor and find the `</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><ph id="ph1">` element containing `</ph>publishMethod="FTP"`.</source>
          <target state="new"><ph id="ph1">` element containing `</ph>publishMethod="FTP"`.</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>It should look like the following:</source>
          <target state="new">It should look like the following:</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><ph id="ph1">

3.</ph> Note that the web app's <ph id="ph2">`publishProfile`</ph> settings map to the FileZilla Site Manager settings as follows:

<ph id="ph3">- `publishUrl`</ph> is the same as <bpt id="p1">**</bpt>FTP host name<ept id="p1">**</ept>, the value you set in <bpt id="p2">**</bpt>Host<ept id="p2">**</ept>.</source>
          <target state="new"><ph id="ph1">

3.</ph> Note that the web app's <ph id="ph2">`publishProfile`</ph> settings map to the FileZilla Site Manager settings as follows:

<ph id="ph3">- `publishUrl`</ph> is the same as <bpt id="p1">**</bpt>FTP host name<ept id="p1">**</ept>, the value you set in <bpt id="p2">**</bpt>Host<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `publishMethod="FTP"`</ph> means that you set <bpt id="p1">**</bpt>Protocol<ept id="p1">**</ept> to <bpt id="p2">**</bpt>FTP - File Transfer Protocol<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Encryption<ept id="p3">**</ept> to <bpt id="p4">**</bpt>Use plain FTP<ept id="p4">**</ept>.</source>
          <target state="new"><ph id="ph1">- `publishMethod="FTP"`</ph> means that you set <bpt id="p1">**</bpt>Protocol<ept id="p1">**</ept> to <bpt id="p2">**</bpt>FTP - File Transfer Protocol<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Encryption<ept id="p3">**</ept> to <bpt id="p4">**</bpt>Use plain FTP<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `userName`</ph> and <ph id="ph2">`userPWD`</ph> are keys for the actual username and password values you specified when you reset the deployment credentials.</source>
          <target state="new"><ph id="ph1">- `userName`</ph> and <ph id="ph2">`userPWD`</ph> are keys for the actual username and password values you specified when you reset the deployment credentials.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`userName`</ph> is the same as <bpt id="p1">**</bpt>Deployment / FTP user<ept id="p1">**</ept>.</source>
          <target state="new"><ph id="ph1">`userName`</ph> is the same as <bpt id="p1">**</bpt>Deployment / FTP user<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>They map to <bpt id="p1">**</bpt>User<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Password<ept id="p2">**</ept> in FileZilla.</source>
          <target state="new">They map to <bpt id="p1">**</bpt>User<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Password<ept id="p2">**</ept> in FileZilla.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- `ftpPassiveMode="True"`</ph> means that the FTP site uses passive FTP transfer; select <bpt id="p1">**</bpt>Passive<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Transfer Settings<ept id="p2">**</ept> tab.</source>
          <target state="new"><ph id="ph1">- `ftpPassiveMode="True"`</ph> means that the FTP site uses passive FTP transfer; select <bpt id="p1">**</bpt>Passive<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Transfer Settings<ept id="p2">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Configure the Web App to host a Java application

Before you publish the application, you need to change a few configuration settings so that the web app can host a Java application.</source>
          <target state="new">Configure the Web App to host a Java application

Before you publish the application, you need to change a few configuration settings so that the web app can host a Java application.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>In the classic portal, go to the web app's <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> page and click <bpt id="p2">**</bpt>Configure<ept id="p2">**</ept>.</source>
          <target state="new">In the classic portal, go to the web app's <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> page and click <bpt id="p2">**</bpt>Configure<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> page, specify the following settings.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> page, specify the following settings.</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Java version<ept id="p1">**</ept> the default is <bpt id="p2">**</bpt>Off<ept id="p2">**</ept>; select the Java version your application targets; for example 1.7.0_51.</source>
          <target state="new">In <bpt id="p1">**</bpt>Java version<ept id="p1">**</ept> the default is <bpt id="p2">**</bpt>Off<ept id="p2">**</ept>; select the Java version your application targets; for example 1.7.0_51.</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>After you do this, also make sure that <bpt id="p1">**</bpt>Web container<ept id="p1">**</ept> is set to a version of Tomcat Server.</source>
          <target state="new">After you do this, also make sure that <bpt id="p1">**</bpt>Web container<ept id="p1">**</ept> is set to a version of Tomcat Server.</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Default Documents<ept id="p1">**</ept>, add index.jsp and move it up to the top of the list.</source>
          <target state="new">In <bpt id="p1">**</bpt>Default Documents<ept id="p1">**</ept>, add index.jsp and move it up to the top of the list.</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>(The default file for web apps is hostingstart.html.)

4.</source>
          <target state="new">(The default file for web apps is hostingstart.html.)

4.</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Publish your application using Kudu

One way to publish the application is to use the Kudu debug console built into Azure.</source>
          <target state="new">Publish your application using Kudu

One way to publish the application is to use the Kudu debug console built into Azure.</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Kudu is known to be stable and consistent with App Service Web Apps and Tomcat Server.</source>
          <target state="new">Kudu is known to be stable and consistent with App Service Web Apps and Tomcat Server.</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>You access the console for the web app by browsing to a URL of the following form:

`https://</source>
          <target state="new">You access the console for the web app by browsing to a URL of the following form:

`https://</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>.scm.azurewebsites.net/DebugConsole`

1.</source>
          <target state="new">.scm.azurewebsites.net/DebugConsole`

1.</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>For this procedure, the Kudu console is located at the following URL; browse to this location:

    <ph id="ph1">`https://webdemowebapp.scm.azurewebsites.net/DebugConsole`</ph><ph id="ph2">

2.</ph> From the top menu, select <bpt id="p1">**</bpt>Debug Console &gt; CMD<ept id="p1">**</ept>.</source>
          <target state="new">For this procedure, the Kudu console is located at the following URL; browse to this location:

    <ph id="ph1">`https://webdemowebapp.scm.azurewebsites.net/DebugConsole`</ph><ph id="ph2">

2.</ph> From the top menu, select <bpt id="p1">**</bpt>Debug Console &gt; CMD<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>In the console command line, navigate to <ph id="ph1">`/site/wwwroot`</ph> (or click <ph id="ph2">`site`</ph>, then <ph id="ph3">`wwwroot`</ph> in the directory view at the top of the page):

    <ph id="ph4">`cd /site/wwwroot`</ph><ph id="ph5">

4.</ph> After you specify <bpt id="p1">**</bpt>Java version<ept id="p1">**</ept>, Tomcat server should create a webapps directory.</source>
          <target state="new">In the console command line, navigate to <ph id="ph1">`/site/wwwroot`</ph> (or click <ph id="ph2">`site`</ph>, then <ph id="ph3">`wwwroot`</ph> in the directory view at the top of the page):

    <ph id="ph4">`cd /site/wwwroot`</ph><ph id="ph5">

4.</ph> After you specify <bpt id="p1">**</bpt>Java version<ept id="p1">**</ept>, Tomcat server should create a webapps directory.</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>In the console command line, navigate to the webapps directory:

    <ph id="ph1">`mkdir webapps`</ph><ph id="ph2">

    `cd webapps`</ph><ph id="ph3">

5.</ph> Drag JSPHello.war from `</source>
          <target state="new">In the console command line, navigate to the webapps directory:

    <ph id="ph1">`mkdir webapps`</ph><ph id="ph2">

    `cd webapps`</ph><ph id="ph3">

5.</ph> Drag JSPHello.war from `</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>/JSPHello/src/<ph id="ph1">` and drop it into the Kudu directory view under `</ph>/site/wwwroot/webapps`.</source>
          <target state="new">/JSPHello/src/<ph id="ph1">` and drop it into the Kudu directory view under `</ph>/site/wwwroot/webapps`.</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Do not drag it to the "Drag here to upload and zip" area, because Tomcat will unzip it.</source>
          <target state="new">Do not drag it to the "Drag here to upload and zip" area, because Tomcat will unzip it.</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>![][8]

At first JSPHello.war appears in the directory area by itself:

  ![][9]

In a short time (probably less than 5 minutes) Tomcat Server will unzip the WAR file into an unpacked JSPHello directory.</source>
          <target state="new">![][8]

At first JSPHello.war appears in the directory area by itself:

  ![][9]

In a short time (probably less than 5 minutes) Tomcat Server will unzip the WAR file into an unpacked JSPHello directory.</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Click the ROOT directory to see whether index.jsp has been unzipped and copied there.</source>
          <target state="new">Click the ROOT directory to see whether index.jsp has been unzipped and copied there.</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>If so, navigate back to the webapps directory to see whether the unpacked JSPHello directory has been created.</source>
          <target state="new">If so, navigate back to the webapps directory to see whether the unpacked JSPHello directory has been created.</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>If you do not see these items, wait and repeat.</source>
          <target state="new">If you do not see these items, wait and repeat.</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>![][10]


#### Publish your application using FileZilla (optional)

Another tool you can use to publish the application is FileZilla, a popular third-party FTP client with a convenient, graphical UI.</source>
          <target state="new">![][10]


#### Publish your application using FileZilla (optional)

Another tool you can use to publish the application is FileZilla, a popular third-party FTP client with a convenient, graphical UI.</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>You can download and install FileZilla from <bpt id="p1">[</bpt><ept id="p1">http://filezilla-project.org/](http://filezilla-project.org/)</ept> if you do not already have it.</source>
          <target state="new">You can download and install FileZilla from <bpt id="p1">[</bpt><ept id="p1">http://filezilla-project.org/](http://filezilla-project.org/)</ept> if you do not already have it.</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>For more information on using the client, see the <bpt id="p1">[</bpt><ept id="p1">FileZilla documentation](https://wiki.filezilla-project.org/Documentation)</ept> and this blog entry on <bpt id="p2">[</bpt><ept id="p2">FTP Clients - Part 4: FileZilla](http://blogs.msdn.com/b/robert_mcmurray/archive/2008/12/17/ftp-clients-part-4-filezilla.aspx)</ept>.</source>
          <target state="new">For more information on using the client, see the <bpt id="p1">[</bpt><ept id="p1">FileZilla documentation](https://wiki.filezilla-project.org/Documentation)</ept> and this blog entry on <bpt id="p2">[</bpt><ept id="p2">FTP Clients - Part 4: FileZilla](http://blogs.msdn.com/b/robert_mcmurray/archive/2008/12/17/ftp-clients-part-4-filezilla.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>In FileZilla, click <bpt id="p1">**</bpt>File &gt; Site Manager<ept id="p1">**</ept>.</source>
          <target state="new">In FileZilla, click <bpt id="p1">**</bpt>File &gt; Site Manager<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Site Manager<ept id="p1">**</ept> dialog, click <bpt id="p2">**</bpt>New Site<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Site Manager<ept id="p1">**</ept> dialog, click <bpt id="p2">**</bpt>New Site<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>A new blank FTP site will appear in <bpt id="p1">**</bpt>Select Entry<ept id="p1">**</ept> prompting you to provide a name.</source>
          <target state="new">A new blank FTP site will appear in <bpt id="p1">**</bpt>Select Entry<ept id="p1">**</ept> prompting you to provide a name.</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>For this procedure, name it <ph id="ph1">`AzureWebDemo-FTP`</ph>.</source>
          <target state="new">For this procedure, name it <ph id="ph1">`AzureWebDemo-FTP`</ph>.</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>General<ept id="p1">**</ept> tab, specify the following settings:
    <bpt id="p2">- **</bpt>Host:<ept id="p2">**</ept> Enter the <bpt id="p3">**</bpt>FTP Host Name<ept id="p3">**</ept> that you copied from the dashboard.</source>
          <target state="new">On the <bpt id="p1">**</bpt>General<ept id="p1">**</ept> tab, specify the following settings:
    <bpt id="p2">- **</bpt>Host:<ept id="p2">**</ept> Enter the <bpt id="p3">**</bpt>FTP Host Name<ept id="p3">**</ept> that you copied from the dashboard.</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><bpt id="p1">- **</bpt>Port:<ept id="p1">**</ept> (Leave this blank, as this is a passive transfer and the server will determine the port to use.)
    <bpt id="p2">- **</bpt>Protocol:<ept id="p2">**</ept> FTP File Transfer Protocol
    <bpt id="p3">- **</bpt>Encryption:<ept id="p3">**</ept> Use plain FTP
    <bpt id="p4">- **</bpt>Logon Type:<ept id="p4">**</ept> Normal
    <bpt id="p5">- **</bpt>User:<ept id="p5">**</ept> Enter the Deployment / FTP user that you copied from the dashboard.</source>
          <target state="new"><bpt id="p1">- **</bpt>Port:<ept id="p1">**</ept> (Leave this blank, as this is a passive transfer and the server will determine the port to use.)
    <bpt id="p2">- **</bpt>Protocol:<ept id="p2">**</ept> FTP File Transfer Protocol
    <bpt id="p3">- **</bpt>Encryption:<ept id="p3">**</ept> Use plain FTP
    <bpt id="p4">- **</bpt>Logon Type:<ept id="p4">**</ept> Normal
    <bpt id="p5">- **</bpt>User:<ept id="p5">**</ept> Enter the Deployment / FTP user that you copied from the dashboard.</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>This is the full FTP username, which has the form <bpt id="p1">*</bpt>webappname\username<ept id="p1">*</ept>.</source>
          <target state="new">This is the full FTP username, which has the form <bpt id="p1">*</bpt>webappname\username<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><bpt id="p1">- **</bpt>Password:<ept id="p1">**</ept> Enter the password that you specified when you set the deployment credentials.</source>
          <target state="new"><bpt id="p1">- **</bpt>Password:<ept id="p1">**</ept> Enter the password that you specified when you set the deployment credentials.</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Transfer Settings<ept id="p1">**</ept> tab, select <bpt id="p2">**</bpt>Passive<ept id="p2">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Transfer Settings<ept id="p1">**</ept> tab, select <bpt id="p2">**</bpt>Passive<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Connect<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Connect<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>If successful, FileZilla's console will display a <ph id="ph1">`Status: Connected`</ph> message and issue a <ph id="ph2">`LIST`</ph> command to list the directory contents.</source>
          <target state="new">If successful, FileZilla's console will display a <ph id="ph1">`Status: Connected`</ph> message and issue a <ph id="ph2">`LIST`</ph> command to list the directory contents.</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="new">4.</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Local<ept id="p1">**</ept> site panel, select the source directory in which the JSPHello.war file resides; the path will be similar to the following:

    `</source>
          <target state="new">In the <bpt id="p1">**</bpt>Local<ept id="p1">**</ept> site panel, select the source directory in which the JSPHello.war file resides; the path will be similar to the following:

    `</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>/JSPHello/src/`

5.</source>
          <target state="new">/JSPHello/src/`

5.</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Remote<ept id="p1">**</ept> site panel, select the destination folder.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Remote<ept id="p1">**</ept> site panel, select the destination folder.</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>You will deploy the WAR file to the <ph id="ph1">`webapps`</ph> directory under the web app's root.</source>
          <target state="new">You will deploy the WAR file to the <ph id="ph1">`webapps`</ph> directory under the web app's root.</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Navigate to <ph id="ph1">`/site/wwwroot`</ph>, right-click on <ph id="ph2">`wwwroot`</ph>, and select <bpt id="p1">**</bpt>Create directory<ept id="p1">**</ept>.</source>
          <target state="new">Navigate to <ph id="ph1">`/site/wwwroot`</ph>, right-click on <ph id="ph2">`wwwroot`</ph>, and select <bpt id="p1">**</bpt>Create directory<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Name the directory <ph id="ph1">`webapps`</ph> and enter that directory.</source>
          <target state="new">Name the directory <ph id="ph1">`webapps`</ph> and enter that directory.</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="new">6.</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Transfer JSPHello.war to <ph id="ph1">`/site/wwwroot/webapps`</ph>.</source>
          <target state="new">Transfer JSPHello.war to <ph id="ph1">`/site/wwwroot/webapps`</ph>.</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Select JSPHello.war in the <bpt id="p1">**</bpt>Local<ept id="p1">**</ept> file list, right-click on it and select <bpt id="p2">**</bpt>Upload<ept id="p2">**</ept>.</source>
          <target state="new">Select JSPHello.war in the <bpt id="p1">**</bpt>Local<ept id="p1">**</ept> file list, right-click on it and select <bpt id="p2">**</bpt>Upload<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>You should see it appear in <ph id="ph1">`/site/wwwroot/webapps`</ph>.</source>
          <target state="new">You should see it appear in <ph id="ph1">`/site/wwwroot/webapps`</ph>.</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="new">7.</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>After you copy JSPHello.war to the webapps directory, Tomcat Server will automatically unpack (unzip) the files in the WAR file.</source>
          <target state="new">After you copy JSPHello.war to the webapps directory, Tomcat Server will automatically unpack (unzip) the files in the WAR file.</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Although Tomcat Server begins unpacking almost immediately, it might take a long time (possibly hours) for the files to appear in the FTP client.</source>
          <target state="new">Although Tomcat Server begins unpacking almost immediately, it might take a long time (possibly hours) for the files to appear in the FTP client.</target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Run the Hello World application on the Web App

1.</source>
          <target state="new">Run the Hello World application on the Web App

1.</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>After you have uploaded the WAR file and verified that Tomcat server has created an unpacked <ph id="ph1">`JSPHello`</ph> directory, browse to <ph id="ph2">`http://webdemowebapp.azurewebsites.net/JSPHello`</ph> to run the application.</source>
          <target state="new">After you have uploaded the WAR file and verified that Tomcat server has created an unpacked <ph id="ph1">`JSPHello`</ph> directory, browse to <ph id="ph2">`http://webdemowebapp.azurewebsites.net/JSPHello`</ph> to run the application.</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&gt; **</bpt>Note:<ept id="p1">**</ept> If you click <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> from the classic portal, you might</source>
          <target state="new"><bpt id="p1">&gt; **</bpt>Note:<ept id="p1">**</ept> If you click <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> from the classic portal, you might</target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>get the default webpage, saying "This Java based web application has</source>
          <target state="new">get the default webpage, saying "This Java based web application has</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>been successfully created."</source>
          <target state="new">been successfully created."</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>You might have to refresh the webpage in</source>
          <target state="new">You might have to refresh the webpage in</target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>order to view the application output instead of the default webpage.</source>
          <target state="new">order to view the application output instead of the default webpage.</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>When the application runs, you should see a web page with the following output:

    <ph id="ph1">`Hello World, the time is Tue Mar 24 23:21:10 GMT 2015`</ph><ph id="ph2">


####</ph> Clean up Azure resources

This procedure creates an App Service web app.</source>
          <target state="new">When the application runs, you should see a web page with the following output:

    <ph id="ph1">`Hello World, the time is Tue Mar 24 23:21:10 GMT 2015`</ph><ph id="ph2">


####</ph> Clean up Azure resources

This procedure creates an App Service web app.</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>You will be billed for the resource as long as it exists.</source>
          <target state="new">You will be billed for the resource as long as it exists.</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Unless you plan to continue using the web app for testing or development, you should consider stopping or deleting it.</source>
          <target state="new">Unless you plan to continue using the web app for testing or development, you should consider stopping or deleting it.</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>A web app that has been stopped will still incur a small charge, but you can restart it at any time.</source>
          <target state="new">A web app that has been stopped will still incur a small charge, but you can restart it at any time.</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Deleting a web app erases all data you have uploaded to it.</source>
          <target state="new">Deleting a web app erases all data you have uploaded to it.</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.INCLUDE [app-service-web-whats-changed](../../includes/app-service-web-whats-changed.md)]</ph><ph id="ph2">

[AZURE.INCLUDE [app-service-web-try-app-service](../../includes/app-service-web-try-app-service.md)]</ph><ph id="ph3">

  [1]: ./media/java-create-azure-website-using-java-sdk/eclipse-maven-repositories-rebuild-index.png
  [2]: ./media/java-create-azure-website-using-java-sdk/eclipse-new-java-class.png
  [3]: ./media/java-create-azure-website-using-java-sdk/eclipse-new-dynamic-web-project.png
  [4]: ./media/java-create-azure-website-using-java-sdk/eclipse-java-build-path.png
  [5]: ./media/java-create-azure-website-using-java-sdk/eclipse-targeted-runtimes-tomcat-server.png
  [6]: ./media/java-create-azure-website-using-java-sdk/eclipse-targeted-runtimes-properties-page.png
  [7]: ./media/java-create-azure-website-using-java-sdk/eclipse-run-on-server.png
  [8]: ./media/java-create-azure-website-using-java-sdk/kudu-console-drag-drop.png
  [9]: ./media/java-create-azure-website-using-java-sdk/kudu-console-jsphello-war-1.png
  [10]: ./media/java-create-azure-website-using-java-sdk/kudu-console-jsphello-war-2.png
 

[Azure App Service]: http://go.microsoft.com/fwlink/?LinkId=529714
[Web Platform Installer]: http://go.microsoft.com/fwlink/?LinkID=252838
[Azure Toolkit for Eclipse]: https://msdn.microsoft.com/library/azure/hh690946.aspx
[Azure classic portal]: https://manage.windowsazure.com
[What is an Azure AD directory]: http://technet.microsoft.com/library/jj573650.aspx
[Create and Upload a Management Certificate for Azure]: http://msdn.microsoft.com/library/azure/gg551722.aspx
[Key and Certificate Management Tool (keytool)]: http://docs.oracle.com/javase/6/docs/technotes/tools/windows/keytool.html
[WebSiteManagementClient]: http://dl.windowsazure.com/javadoc/com/microsoft/windowsazure/management/websites/WebSiteManagementClient.html
[WebSpaceNames]: http://dl.windowsazure.com/javadoc/com/microsoft/windowsazure/management/websites/models/WebSpaceNames.html
[Azure Portal]: https://portal.azure.com</ph>

test</source>
          <target state="new"><ph id="ph1">[AZURE.INCLUDE [app-service-web-whats-changed](../../includes/app-service-web-whats-changed.md)]</ph><ph id="ph2">

[AZURE.INCLUDE [app-service-web-try-app-service](../../includes/app-service-web-try-app-service.md)]</ph><ph id="ph3">

  [1]: ./media/java-create-azure-website-using-java-sdk/eclipse-maven-repositories-rebuild-index.png
  [2]: ./media/java-create-azure-website-using-java-sdk/eclipse-new-java-class.png
  [3]: ./media/java-create-azure-website-using-java-sdk/eclipse-new-dynamic-web-project.png
  [4]: ./media/java-create-azure-website-using-java-sdk/eclipse-java-build-path.png
  [5]: ./media/java-create-azure-website-using-java-sdk/eclipse-targeted-runtimes-tomcat-server.png
  [6]: ./media/java-create-azure-website-using-java-sdk/eclipse-targeted-runtimes-properties-page.png
  [7]: ./media/java-create-azure-website-using-java-sdk/eclipse-run-on-server.png
  [8]: ./media/java-create-azure-website-using-java-sdk/kudu-console-drag-drop.png
  [9]: ./media/java-create-azure-website-using-java-sdk/kudu-console-jsphello-war-1.png
  [10]: ./media/java-create-azure-website-using-java-sdk/kudu-console-jsphello-war-2.png
 

[Azure App Service]: http://go.microsoft.com/fwlink/?LinkId=529714
[Web Platform Installer]: http://go.microsoft.com/fwlink/?LinkID=252838
[Azure Toolkit for Eclipse]: https://msdn.microsoft.com/library/azure/hh690946.aspx
[Azure classic portal]: https://manage.windowsazure.com
[What is an Azure AD directory]: http://technet.microsoft.com/library/jj573650.aspx
[Create and Upload a Management Certificate for Azure]: http://msdn.microsoft.com/library/azure/gg551722.aspx
[Key and Certificate Management Tool (keytool)]: http://docs.oracle.com/javase/6/docs/technotes/tools/windows/keytool.html
[WebSiteManagementClient]: http://dl.windowsazure.com/javadoc/com/microsoft/windowsazure/management/websites/WebSiteManagementClient.html
[WebSpaceNames]: http://dl.windowsazure.com/javadoc/com/microsoft/windowsazure/management/websites/models/WebSpaceNames.html
[Azure Portal]: https://portal.azure.com</ph>

test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10b22be43aac1d91bba36f3348950f0d4c8f9578</xliffext:olfilehash>
  </header>
</xliff>