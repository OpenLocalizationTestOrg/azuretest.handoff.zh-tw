<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Common startup tasks for Cloud Services | Microsoft Azure</source>
          <target state="new">Common startup tasks for Cloud Services | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Provides some examples of common startup tasks you may want to perform in your cloud services web role or worker role.</source>
          <target state="new">Provides some examples of common startup tasks you may want to perform in your cloud services web role or worker role.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Common Cloud Service startup tasks</source>
          <target state="new">Common Cloud Service startup tasks</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This article provides some examples of common startup tasks you may want to perform in your cloud service.</source>
          <target state="new">This article provides some examples of common startup tasks you may want to perform in your cloud service.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can use startup tasks to perform operations before a role starts.</source>
          <target state="new">You can use startup tasks to perform operations before a role starts.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Operations that you might want to perform include installing a component, registering COM components, setting registry keys, or starting a long running process.</source>
          <target state="new">Operations that you might want to perform include installing a component, registering COM components, setting registry keys, or starting a long running process.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this article<ept id="p1">](cloud-services-startup-tasks.md)</ept> to understand how startup tasks work, and specifically how to create the entries that define a startup task.</source>
          <target state="new">See <bpt id="p1">[</bpt>this article<ept id="p1">](cloud-services-startup-tasks.md)</ept> to understand how startup tasks work, and specifically how to create the entries that define a startup task.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Many of the tasks here use the</source>
          <target state="new">Many of the tasks here use the</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Startup tasks are not applicable to Virtual Machines, only to Cloud Service Web and Worker roles.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Startup tasks are not applicable to Virtual Machines, only to Cloud Service Web and Worker roles.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Define environment variables before a role starts</source>
          <target state="new">Define environment variables before a role starts</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can define environment variables for an entire role by adding the <bpt id="p1">[</bpt><ept id="p1">Runtime]</ept> element to the definition of the role in the service definition file.</source>
          <target state="new">You can define environment variables for an entire role by adding the <bpt id="p1">[</bpt><ept id="p1">Runtime]</ept> element to the definition of the role in the service definition file.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you need environment variables defined for a specific task, that isn't shared by other tasks, you can use the <bpt id="p1">[</bpt><ept id="p1">Environment]</ept> element inside of the <bpt id="p2">[</bpt><ept id="p2">Task]</ept> element.</source>
          <target state="new">If you need environment variables defined for a specific task, that isn't shared by other tasks, you can use the <bpt id="p1">[</bpt><ept id="p1">Environment]</ept> element inside of the <bpt id="p2">[</bpt><ept id="p2">Task]</ept> element.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Variables can also use a <bpt id="p1">[</bpt>valid Azure XPath value<ept id="p1">](https://msdn.microsoft.com/library/azure/hh404006.aspx)</ept> to reference something about the deployment.</source>
          <target state="new">Variables can also use a <bpt id="p1">[</bpt>valid Azure XPath value<ept id="p1">](https://msdn.microsoft.com/library/azure/hh404006.aspx)</ept> to reference something about the deployment.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Instead of using the <ph id="ph1">`value`</ph> attribute, define a <bpt id="p1">[</bpt><ept id="p1">RoleInstanceValue]</ept> child element.</source>
          <target state="new">Instead of using the <ph id="ph1">`value`</ph> attribute, define a <bpt id="p1">[</bpt><ept id="p1">RoleInstanceValue]</ept> child element.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Configure IIS startup with AppCmd.exe</source>
          <target state="new">Configure IIS startup with AppCmd.exe</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>AppCmd.exe<ept id="p1">](https://technet.microsoft.com/library/jj635852.aspx)</ept> command line tool can be used to manage IIS settings at startup on Azure.</source>
          <target state="new">The <bpt id="p1">[</bpt>AppCmd.exe<ept id="p1">](https://technet.microsoft.com/library/jj635852.aspx)</ept> command line tool can be used to manage IIS settings at startup on Azure.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept> provides convenient, command line access to configuration settings for use in startup tasks on Azure.</source>
          <target state="new"><bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept> provides convenient, command line access to configuration settings for use in startup tasks on Azure.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept>, Website settings can be added, modified, or removed for applications and sites.</source>
          <target state="new">Using <bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept>, Website settings can be added, modified, or removed for applications and sites.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>However, there are a few things to watch out for in the use of <bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept> as a startup task:</source>
          <target state="new">However, there are a few things to watch out for in the use of <bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept> as a startup task:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Startup tasks can be run more than once between reboots.</source>
          <target state="new">Startup tasks can be run more than once between reboots.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This can happen if the role recycles, for instance.</source>
          <target state="new">This can happen if the role recycles, for instance.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Some <bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept> actions can generate errors if they are performed more than once.</source>
          <target state="new">Some <bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept> actions can generate errors if they are performed more than once.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Attempting to add a section to <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> twice could generate an error.</source>
          <target state="new">Attempting to add a section to <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> twice could generate an error.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Startup tasks fail if they return a non-zero exit code or <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept>.</source>
          <target state="new">Startup tasks fail if they return a non-zero exit code or <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This can happen if <bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept> generates an error.</source>
          <target state="new">This can happen if <bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept> generates an error.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For the reasons listed, it is often wise to check the <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept> after calling <bpt id="p2">*</bpt>AppCmd.exe<ept id="p2">*</ept>, which is easy to do if you wrap the call to <bpt id="p3">*</bpt>AppCmd.exe<ept id="p3">*</ept> with a <bpt id="p4">*</bpt>.cmd<ept id="p4">*</ept> file.</source>
          <target state="new">For the reasons listed, it is often wise to check the <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept> after calling <bpt id="p2">*</bpt>AppCmd.exe<ept id="p2">*</ept>, which is easy to do if you wrap the call to <bpt id="p3">*</bpt>AppCmd.exe<ept id="p3">*</ept> with a <bpt id="p4">*</bpt>.cmd<ept id="p4">*</ept> file.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you detect a known <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept> response, you can ignore it, otherwise return it.</source>
          <target state="new">If you detect a known <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept> response, you can ignore it, otherwise return it.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This is demonstrated in the example below.</source>
          <target state="new">This is demonstrated in the example below.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The errorlevels returned by <bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept> are listed in the winerror.h file, and can also be seen on <bpt id="p2">[</bpt>MSDN<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms681382.aspx)</ept>.</source>
          <target state="new">The errorlevels returned by <bpt id="p1">*</bpt>AppCmd.exe<ept id="p1">*</ept> are listed in the winerror.h file, and can also be seen on <bpt id="p2">[</bpt>MSDN<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms681382.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="new">Example</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This example adds a compression section and a compression entry for JSON to the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file, with error handling and logging.</source>
          <target state="new">This example adds a compression section and a compression entry for JSON to the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file, with error handling and logging.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The relevant sections of the <bpt id="p1">[</bpt><ept id="p1">ServiceDefinition.csdef]</ept> file are shown here, which include setting the <bpt id="p2">[</bpt>executionContext<ept id="p2">](https://msdn.microsoft.com/library/azure/gg557552.aspx#Task)</ept> attribute to <ph id="ph1">`elevated`</ph> to give <bpt id="p3">*</bpt>AppCmd.exe<ept id="p3">*</ept> sufficient permissions to change the settings in the <bpt id="p4">*</bpt>Web.config<ept id="p4">*</ept> file:</source>
          <target state="new">The relevant sections of the <bpt id="p1">[</bpt><ept id="p1">ServiceDefinition.csdef]</ept> file are shown here, which include setting the <bpt id="p2">[</bpt>executionContext<ept id="p2">](https://msdn.microsoft.com/library/azure/gg557552.aspx#Task)</ept> attribute to <ph id="ph1">`elevated`</ph> to give <bpt id="p3">*</bpt>AppCmd.exe<ept id="p3">*</ept> sufficient permissions to change the settings in the <bpt id="p4">*</bpt>Web.config<ept id="p4">*</ept> file:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The Startup.cmd batch file uses AppCmd.exe to add a compression section and a compression entry for JSON to the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file.</source>
          <target state="new">The Startup.cmd batch file uses AppCmd.exe to add a compression section and a compression entry for JSON to the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The expected <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept> of 183 is set to zero using the VERIFY.EXE command line program.</source>
          <target state="new">The expected <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept> of 183 is set to zero using the VERIFY.EXE command line program.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Unexpected errorlevels are logged to StartupErrorLog.txt.</source>
          <target state="new">Unexpected errorlevels are logged to StartupErrorLog.txt.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Add firewall rules</source>
          <target state="new">Add firewall rules</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In Azure, there are effectively two firewalls.</source>
          <target state="new">In Azure, there are effectively two firewalls.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The first firewall controls connections between the virtual machine and the outside world.</source>
          <target state="new">The first firewall controls connections between the virtual machine and the outside world.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This is controlled by the <bpt id="p1">[</bpt><ept id="p1">EndPoints]</ept> element in the <bpt id="p2">[</bpt><ept id="p2">ServiceDefinition.csdef]</ept> file.</source>
          <target state="new">This is controlled by the <bpt id="p1">[</bpt><ept id="p1">EndPoints]</ept> element in the <bpt id="p2">[</bpt><ept id="p2">ServiceDefinition.csdef]</ept> file.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The second firewall controls connections between the virtual machine and the processes within that virtual machine.</source>
          <target state="new">The second firewall controls connections between the virtual machine and the processes within that virtual machine.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This is controlled by the <ph id="ph1">`netsh advfirewall firewall`</ph> command line tool, and is the focus of this article.</source>
          <target state="new">This is controlled by the <ph id="ph1">`netsh advfirewall firewall`</ph> command line tool, and is the focus of this article.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Azure creates firewall rules for the processes started within your roles.</source>
          <target state="new">Azure creates firewall rules for the processes started within your roles.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, when you start a service or program, Azure automatically creates the necessary firewall rules to allow that service to communicate with the Internet.</source>
          <target state="new">For example, when you start a service or program, Azure automatically creates the necessary firewall rules to allow that service to communicate with the Internet.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>However, if you create a service that is started by a process outside your role (for example, a COM+ service, or a program that starts by using the Windows Scheduler), you will need to manually create a firewall rule to allow access to that service.</source>
          <target state="new">However, if you create a service that is started by a process outside your role (for example, a COM+ service, or a program that starts by using the Windows Scheduler), you will need to manually create a firewall rule to allow access to that service.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>These firewall rules can be created by using a startup task.</source>
          <target state="new">These firewall rules can be created by using a startup task.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A startup task that creates a firewall rule must have an <bpt id="p1">[</bpt>executionContext<ept id="p1">][Task]</ept> of <bpt id="p2">**</bpt>elevated<ept id="p2">**</ept>.</source>
          <target state="new">A startup task that creates a firewall rule must have an <bpt id="p1">[</bpt>executionContext<ept id="p1">][Task]</ept> of <bpt id="p2">**</bpt>elevated<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Add the following startup task to the <bpt id="p1">[</bpt><ept id="p1">ServiceDefinition.csdef]</ept> file.</source>
          <target state="new">Add the following startup task to the <bpt id="p1">[</bpt><ept id="p1">ServiceDefinition.csdef]</ept> file.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To add the firewall rule, you must use the appropriate <ph id="ph1">`netsh advfirewall firewall`</ph> commands in your startup batch file.</source>
          <target state="new">To add the firewall rule, you must use the appropriate <ph id="ph1">`netsh advfirewall firewall`</ph> commands in your startup batch file.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In this example, the startup task requires security and encryption for TCP port 80.</source>
          <target state="new">In this example, the startup task requires security and encryption for TCP port 80.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Block a specific IP address</source>
          <target state="new">Block a specific IP address</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can restrict an Azure web role access to a set of specified IP addresses by modifying your IIS <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file and creating a command file which unlocks the <bpt id="p2">**</bpt>ipSecurity<ept id="p2">**</ept> section of the <bpt id="p3">**</bpt>ApplicationHost.config<ept id="p3">**</ept> file.</source>
          <target state="new">You can restrict an Azure web role access to a set of specified IP addresses by modifying your IIS <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file and creating a command file which unlocks the <bpt id="p2">**</bpt>ipSecurity<ept id="p2">**</ept> section of the <bpt id="p3">**</bpt>ApplicationHost.config<ept id="p3">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>First, create a command file that runs when your role starts which unlocks the <bpt id="p1">**</bpt>ipSecurity<ept id="p1">**</ept> section of the <bpt id="p2">**</bpt>ApplicationHost.config<ept id="p2">**</ept> file.</source>
          <target state="new">First, create a command file that runs when your role starts which unlocks the <bpt id="p1">**</bpt>ipSecurity<ept id="p1">**</ept> section of the <bpt id="p2">**</bpt>ApplicationHost.config<ept id="p2">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Create a new folder at the root level of your web role called <bpt id="p1">**</bpt>startup<ept id="p1">**</ept> and, within this folder, create a batch file called <bpt id="p2">**</bpt>startup.cmd<ept id="p2">**</ept>.</source>
          <target state="new">Create a new folder at the root level of your web role called <bpt id="p1">**</bpt>startup<ept id="p1">**</ept> and, within this folder, create a batch file called <bpt id="p2">**</bpt>startup.cmd<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Set the properties of this file to <bpt id="p1">**</bpt>Copy Always<ept id="p1">**</ept> to ensure that it will be deployed.</source>
          <target state="new">Set the properties of this file to <bpt id="p1">**</bpt>Copy Always<ept id="p1">**</ept> to ensure that it will be deployed.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Add the following startup task to the <bpt id="p1">[</bpt><ept id="p1">ServiceDefinition.csdef]</ept> file.</source>
          <target state="new">Add the following startup task to the <bpt id="p1">[</bpt><ept id="p1">ServiceDefinition.csdef]</ept> file.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Add this command to the <bpt id="p1">**</bpt>startup.cmd<ept id="p1">**</ept> file:</source>
          <target state="new">Add this command to the <bpt id="p1">**</bpt>startup.cmd<ept id="p1">**</ept> file:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This causes the <bpt id="p1">**</bpt>startup.cmd<ept id="p1">**</ept> batch file to be run every time the web role is initialized, ensuring that the required <bpt id="p2">**</bpt>ipSecurity<ept id="p2">**</ept> section is unlocked.</source>
          <target state="new">This causes the <bpt id="p1">**</bpt>startup.cmd<ept id="p1">**</ept> batch file to be run every time the web role is initialized, ensuring that the required <bpt id="p2">**</bpt>ipSecurity<ept id="p2">**</ept> section is unlocked.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Finally, modify the <bpt id="p1">[</bpt>system.webServer section<ept id="p1">](http://www.iis.net/configreference/system.webserver/security/ipsecurity#005)</ept> your web role’s <bpt id="p2">**</bpt>web.config<ept id="p2">**</ept> file to add a list of IP addresses that are granted access, as shown in the following example:</source>
          <target state="new">Finally, modify the <bpt id="p1">[</bpt>system.webServer section<ept id="p1">](http://www.iis.net/configreference/system.webserver/security/ipsecurity#005)</ept> your web role’s <bpt id="p2">**</bpt>web.config<ept id="p2">**</ept> file to add a list of IP addresses that are granted access, as shown in the following example:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This sample config <bpt id="p1">**</bpt>allows<ept id="p1">**</ept> all IPs to access the server except the two defined</source>
          <target state="new">This sample config <bpt id="p1">**</bpt>allows<ept id="p1">**</ept> all IPs to access the server except the two defined</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This sample config <bpt id="p1">**</bpt>denies<ept id="p1">**</ept> all IPs from accessing the server except for the two defined.</source>
          <target state="new">This sample config <bpt id="p1">**</bpt>denies<ept id="p1">**</ept> all IPs from accessing the server except for the two defined.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Create a PowerShell startup task</source>
          <target state="new">Create a PowerShell startup task</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Windows PowerShell scripts cannot be called directly from the <bpt id="p1">[</bpt><ept id="p1">ServiceDefinition.csdef]</ept> file, but they can be invoked from within a startup batch file.</source>
          <target state="new">Windows PowerShell scripts cannot be called directly from the <bpt id="p1">[</bpt><ept id="p1">ServiceDefinition.csdef]</ept> file, but they can be invoked from within a startup batch file.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>PowerShell, by default, will not run an unsigned script.</source>
          <target state="new">PowerShell, by default, will not run an unsigned script.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Unless you sign your scripts, you need to configure Windows PowerShell to run unsigned scripts.</source>
          <target state="new">Unless you sign your scripts, you need to configure Windows PowerShell to run unsigned scripts.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To run unsigned scripts, <bpt id="p1">**</bpt>ExecutionPolicy<ept id="p1">**</ept> must be set to <bpt id="p2">**</bpt>Unrestricted<ept id="p2">**</ept>.</source>
          <target state="new">To run unsigned scripts, <bpt id="p1">**</bpt>ExecutionPolicy<ept id="p1">**</ept> must be set to <bpt id="p2">**</bpt>Unrestricted<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ExecutionPolicy<ept id="p1">**</ept> setting that you use is based on the version of Windows PowerShell.</source>
          <target state="new">The <bpt id="p1">**</bpt>ExecutionPolicy<ept id="p1">**</ept> setting that you use is based on the version of Windows PowerShell.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If you're using a Guest OS that is runs PowerShell 2.0 or 1.0 you can force version 2 to run, and if unavailable, use version 1.</source>
          <target state="new">If you're using a Guest OS that is runs PowerShell 2.0 or 1.0 you can force version 2 to run, and if unavailable, use version 1.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Create files in local storage from a startup task</source>
          <target state="new">Create files in local storage from a startup task</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use a local storage resource to store files created by your startup task which will be accessed later by your application.</source>
          <target state="new">You can use a local storage resource to store files created by your startup task which will be accessed later by your application.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To create the local storage resource, add a <bpt id="p1">[</bpt><ept id="p1">LocalResources]</ept> section to the <bpt id="p2">[</bpt><ept id="p2">ServiceDefinition.csdef]</ept> file and then add the <bpt id="p3">[</bpt><ept id="p3">LocalStorage]</ept> child element.</source>
          <target state="new">To create the local storage resource, add a <bpt id="p1">[</bpt><ept id="p1">LocalResources]</ept> section to the <bpt id="p2">[</bpt><ept id="p2">ServiceDefinition.csdef]</ept> file and then add the <bpt id="p3">[</bpt><ept id="p3">LocalStorage]</ept> child element.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Give the local storage resource a unique name and an appropriate size for your startup task.</source>
          <target state="new">Give the local storage resource a unique name and an appropriate size for your startup task.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To use a local storage resource in your startup task, you need to create an environment variable to reference the local storage resource location.</source>
          <target state="new">To use a local storage resource in your startup task, you need to create an environment variable to reference the local storage resource location.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Then the Startup task and the application will be able to read and write files to the local storage resource.</source>
          <target state="new">Then the Startup task and the application will be able to read and write files to the local storage resource.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The relevant sections of the <bpt id="p1">**</bpt>ServiceDefinition.csdef<ept id="p1">**</ept> file are shown here:</source>
          <target state="new">The relevant sections of the <bpt id="p1">**</bpt>ServiceDefinition.csdef<ept id="p1">**</ept> file are shown here:</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>As an example, this <bpt id="p1">**</bpt>Startup.cmd<ept id="p1">**</ept> batch file uses the <bpt id="p2">**</bpt>PathToStartupStorage<ept id="p2">**</ept> environment variable to create the file <bpt id="p3">**</bpt>MyTest.txt<ept id="p3">**</ept> on the local storage location.</source>
          <target state="new">As an example, this <bpt id="p1">**</bpt>Startup.cmd<ept id="p1">**</ept> batch file uses the <bpt id="p2">**</bpt>PathToStartupStorage<ept id="p2">**</ept> environment variable to create the file <bpt id="p3">**</bpt>MyTest.txt<ept id="p3">**</ept> on the local storage location.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can access local storage from the Azure SDK by using the <bpt id="p1">[</bpt>GetLocalResource<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.roleenvironment.getlocalresource.aspx)</ept> method.</source>
          <target state="new">You can access local storage from the Azure SDK by using the <bpt id="p1">[</bpt>GetLocalResource<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.roleenvironment.getlocalresource.aspx)</ept> method.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Standard file read and write operations will then work to read and write the contents of the local storage resource.</source>
          <target state="new">Standard file read and write operations will then work to read and write the contents of the local storage resource.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Differentiate between running in the Emulator and the Cloud</source>
          <target state="new">Differentiate between running in the Emulator and the Cloud</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can have your startup task perform different steps when it is operating in the cloud compared to when it is in the compute emulator.</source>
          <target state="new">You can have your startup task perform different steps when it is operating in the cloud compared to when it is in the compute emulator.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, you may want to use a fresh copy of your SQL data only when running in the emulator.</source>
          <target state="new">For example, you may want to use a fresh copy of your SQL data only when running in the emulator.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Or you may want to do some sort of performance optimizations for the cloud that you don't need to do when running in the emulator.</source>
          <target state="new">Or you may want to do some sort of performance optimizations for the cloud that you don't need to do when running in the emulator.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This ability to perform different actions on the compute emulator and the cloud can be accomplished by creating an environment variable in the <bpt id="p1">[</bpt><ept id="p1">ServiceDefinition.csdef]</ept> file, then testing the environment variable in your startup task.</source>
          <target state="new">This ability to perform different actions on the compute emulator and the cloud can be accomplished by creating an environment variable in the <bpt id="p1">[</bpt><ept id="p1">ServiceDefinition.csdef]</ept> file, then testing the environment variable in your startup task.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To create the environment variable, add the <bpt id="p1">[</bpt><ept id="p1">Variable]</ept>/<bpt id="p2">[</bpt><ept id="p2">RoleInstanceValue]</ept> element and create an XPath value of <ph id="ph1">`/RoleEnvironment/Deployment/@emulated`</ph>.</source>
          <target state="new">To create the environment variable, add the <bpt id="p1">[</bpt><ept id="p1">Variable]</ept>/<bpt id="p2">[</bpt><ept id="p2">RoleInstanceValue]</ept> element and create an XPath value of <ph id="ph1">`/RoleEnvironment/Deployment/@emulated`</ph>.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">**</bpt>%ComputeEmulatorRunning%<ept id="p1">**</ept> environment variable will be <ph id="ph1">`"true"`</ph> when running on the compute emulator, and <ph id="ph2">`"false"`</ph> when running on the cloud.</source>
          <target state="new">The value of the <bpt id="p1">**</bpt>%ComputeEmulatorRunning%<ept id="p1">**</ept> environment variable will be <ph id="ph1">`"true"`</ph> when running on the compute emulator, and <ph id="ph2">`"false"`</ph> when running on the cloud.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Any task run can now use the <bpt id="p1">**</bpt>%ComputeEmulatorRunning%<ept id="p1">**</ept> environment variable to perform different actions based on whether or not the role is running in the cloud or the emulator.</source>
          <target state="new">Any task run can now use the <bpt id="p1">**</bpt>%ComputeEmulatorRunning%<ept id="p1">**</ept> environment variable to perform different actions based on whether or not the role is running in the cloud or the emulator.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Here is a .cmd shell script that checks for that environment variable.</source>
          <target state="new">Here is a .cmd shell script that checks for that environment variable.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Detect that your task has already run</source>
          <target state="new">Detect that your task has already run</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The role may recycle without a reboot causing your startup tasks to run again.</source>
          <target state="new">The role may recycle without a reboot causing your startup tasks to run again.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>There is flag to indicate a task has already run on the hosting VM.</source>
          <target state="new">There is flag to indicate a task has already run on the hosting VM.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You may have some tasks where it doesn't matter that they run multiple times.</source>
          <target state="new">You may have some tasks where it doesn't matter that they run multiple times.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>However you may run into a situation where you need to prevent a task from running more than once.</source>
          <target state="new">However you may run into a situation where you need to prevent a task from running more than once.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The simplest way to detect that a task has already run is to create a file in the <bpt id="p1">**</bpt>%TEMP%<ept id="p1">**</ept> folder when the task is successful and look for it at the start of the task.</source>
          <target state="new">The simplest way to detect that a task has already run is to create a file in the <bpt id="p1">**</bpt>%TEMP%<ept id="p1">**</ept> folder when the task is successful and look for it at the start of the task.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Here is a sample cmd shell script that does that for you.</source>
          <target state="new">Here is a sample cmd shell script that does that for you.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Task best practices</source>
          <target state="new">Task best practices</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Here are some best practices you should follow when configuring task for your web or worker role.</source>
          <target state="new">Here are some best practices you should follow when configuring task for your web or worker role.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Always log startup activities</source>
          <target state="new">Always log startup activities</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Visual Studio does not provide a debugger to step through batch files, so it's good to get as much data on the operation of batch files as possible.</source>
          <target state="new">Visual Studio does not provide a debugger to step through batch files, so it's good to get as much data on the operation of batch files as possible.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Logging the output of batch files, both <bpt id="p1">**</bpt>stdout<ept id="p1">**</ept> and <bpt id="p2">**</bpt>stderr<ept id="p2">**</ept>, can give you important information when trying to debug and fix batch files.</source>
          <target state="new">Logging the output of batch files, both <bpt id="p1">**</bpt>stdout<ept id="p1">**</ept> and <bpt id="p2">**</bpt>stderr<ept id="p2">**</ept>, can give you important information when trying to debug and fix batch files.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>To log both <bpt id="p1">**</bpt>stdout<ept id="p1">**</ept> and <bpt id="p2">**</bpt>stderr<ept id="p2">**</ept> to the StartupLog.txt file in the directory pointed to by the <bpt id="p3">**</bpt>%TEMP%<ept id="p3">**</ept> environment variable, add the text <ph id="ph1">`&gt;&gt;  "%TEMP%\\StartupLog.txt" 2&gt;&amp;1`</ph> to the end of specific lines you want to log.</source>
          <target state="new">To log both <bpt id="p1">**</bpt>stdout<ept id="p1">**</ept> and <bpt id="p2">**</bpt>stderr<ept id="p2">**</ept> to the StartupLog.txt file in the directory pointed to by the <bpt id="p3">**</bpt>%TEMP%<ept id="p3">**</ept> environment variable, add the text <ph id="ph1">`&gt;&gt;  "%TEMP%\\StartupLog.txt" 2&gt;&amp;1`</ph> to the end of specific lines you want to log.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For example, to execute setup.exe in the <bpt id="p1">**</bpt>%PathToApp1Install%<ept id="p1">**</ept> directory:</source>
          <target state="new">For example, to execute setup.exe in the <bpt id="p1">**</bpt>%PathToApp1Install%<ept id="p1">**</ept> directory:</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If you want to log all output from the startup task without adding <ph id="ph1">`&gt;&gt; "%TEMP%\StartupLog.txt" 2&gt;&amp;1`</ph>to the end of each line, two startup batch files are needed.</source>
          <target state="new">If you want to log all output from the startup task without adding <ph id="ph1">`&gt;&gt; "%TEMP%\StartupLog.txt" 2&gt;&amp;1`</ph>to the end of each line, two startup batch files are needed.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The first batch file will call the second batch file with redirection to log all of the activities of the second batch file.</source>
          <target state="new">The first batch file will call the second batch file with redirection to log all of the activities of the second batch file.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This is necessary for proper redirection to occur.</source>
          <target state="new">This is necessary for proper redirection to occur.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The following shows how to redirect all output from a startup batch file.</source>
          <target state="new">The following shows how to redirect all output from a startup batch file.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>In this example, the ServerDefinition.csdef file creates a startup task that calls Startup1.cmd.</source>
          <target state="new">In this example, the ServerDefinition.csdef file creates a startup task that calls Startup1.cmd.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Startup1.cmd calls Startup2.cmd, redirecting all output to %TEMP%\\StartupLog.txt.</source>
          <target state="new">Startup1.cmd calls Startup2.cmd, redirecting all output to %TEMP%\\StartupLog.txt.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>ServiceDefinition.cmd:</source>
          <target state="new">ServiceDefinition.cmd:</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Startup1.cmd:</source>
          <target state="new">Startup1.cmd:</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Startup2.cmd:</source>
          <target state="new">Startup2.cmd:</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Set executionContext appropriately for startup tasks</source>
          <target state="new">Set executionContext appropriately for startup tasks</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Set privileges appropriately for the startup task.</source>
          <target state="new">Set privileges appropriately for the startup task.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Sometimes startup tasks must run with elevated privileges even though the role runs with normal privileges.</source>
          <target state="new">Sometimes startup tasks must run with elevated privileges even though the role runs with normal privileges.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>executionContext<ept id="p1">][Task]</ept> attribute sets the privilege level of the startup task.</source>
          <target state="new">The <bpt id="p1">[</bpt>executionContext<ept id="p1">][Task]</ept> attribute sets the privilege level of the startup task.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">`executionContext="limited"`</ph> means the startup task will have the same privilege level as the role.</source>
          <target state="new">Using <ph id="ph1">`executionContext="limited"`</ph> means the startup task will have the same privilege level as the role.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">`executionContext="elevated"`</ph> means the startup task will have administrator privileges, which allows the startup task to perform administrator tasks without giving administrator privileges to your role.</source>
          <target state="new">Using <ph id="ph1">`executionContext="elevated"`</ph> means the startup task will have administrator privileges, which allows the startup task to perform administrator tasks without giving administrator privileges to your role.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>An example of a startup task that requires elevated privileges is a startup task that uses <bpt id="p1">**</bpt>AppCmd.exe<ept id="p1">**</ept> to configure IIS.</source>
          <target state="new">An example of a startup task that requires elevated privileges is a startup task that uses <bpt id="p1">**</bpt>AppCmd.exe<ept id="p1">**</ept> to configure IIS.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AppCmd.exe<ept id="p1">**</ept> requires <ph id="ph1">`executionContext="elevated"`</ph>.</source>
          <target state="new"><bpt id="p1">**</bpt>AppCmd.exe<ept id="p1">**</ept> requires <ph id="ph1">`executionContext="elevated"`</ph>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Use the appropriate taskType</source>
          <target state="new">Use the appropriate taskType</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>taskType<ept id="p1">][Task]</ept> attribute determines the way the startup task will be executed.</source>
          <target state="new">The <bpt id="p1">[</bpt>taskType<ept id="p1">][Task]</ept> attribute determines the way the startup task will be executed.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>There are three values: <bpt id="p1">**</bpt>simple<ept id="p1">**</ept>, <bpt id="p2">**</bpt>background<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>foreground<ept id="p3">**</ept>.</source>
          <target state="new">There are three values: <bpt id="p1">**</bpt>simple<ept id="p1">**</ept>, <bpt id="p2">**</bpt>background<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>foreground<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The background and foreground tasks are started asynchronously, and then the simple tasks are executed synchronously one at a time.</source>
          <target state="new">The background and foreground tasks are started asynchronously, and then the simple tasks are executed synchronously one at a time.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>With <bpt id="p1">**</bpt>simple<ept id="p1">**</ept> startup tasks, you can set the order in which the tasks will occur by the order in which the tasks are listed in the ServiceDefinition.csdef file.</source>
          <target state="new">With <bpt id="p1">**</bpt>simple<ept id="p1">**</ept> startup tasks, you can set the order in which the tasks will occur by the order in which the tasks are listed in the ServiceDefinition.csdef file.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If a <bpt id="p1">**</bpt>simple<ept id="p1">**</ept> task ends with a non-zero exit code, then the startup procedure will stop and the role will not start.</source>
          <target state="new">If a <bpt id="p1">**</bpt>simple<ept id="p1">**</ept> task ends with a non-zero exit code, then the startup procedure will stop and the role will not start.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The difference between <bpt id="p1">**</bpt>background<ept id="p1">**</ept> startup tasks and <bpt id="p2">**</bpt>foreground<ept id="p2">**</ept> startup tasks is that <bpt id="p3">**</bpt>foreground<ept id="p3">**</ept> tasks will keep the role running until the <bpt id="p4">**</bpt>foreground<ept id="p4">**</ept> task ends.</source>
          <target state="new">The difference between <bpt id="p1">**</bpt>background<ept id="p1">**</ept> startup tasks and <bpt id="p2">**</bpt>foreground<ept id="p2">**</ept> startup tasks is that <bpt id="p3">**</bpt>foreground<ept id="p3">**</ept> tasks will keep the role running until the <bpt id="p4">**</bpt>foreground<ept id="p4">**</ept> task ends.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>This also means that if the <bpt id="p1">**</bpt>foreground<ept id="p1">**</ept> task hangs or crashes, the role will not recycle until the <bpt id="p2">**</bpt>foreground<ept id="p2">**</ept> task is forced closed.</source>
          <target state="new">This also means that if the <bpt id="p1">**</bpt>foreground<ept id="p1">**</ept> task hangs or crashes, the role will not recycle until the <bpt id="p2">**</bpt>foreground<ept id="p2">**</ept> task is forced closed.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For this reason, <bpt id="p1">**</bpt>background<ept id="p1">**</ept> tasks are recommended for asynchronous startup tasks unless you need that feature of the <bpt id="p2">**</bpt>foreground<ept id="p2">**</ept> task.</source>
          <target state="new">For this reason, <bpt id="p1">**</bpt>background<ept id="p1">**</ept> tasks are recommended for asynchronous startup tasks unless you need that feature of the <bpt id="p2">**</bpt>foreground<ept id="p2">**</ept> task.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>End batch files with EXIT /B 0</source>
          <target state="new">End batch files with EXIT /B 0</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The role will only start if the <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept> from each of your simple startup task is zero.</source>
          <target state="new">The role will only start if the <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept> from each of your simple startup task is zero.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Not all programs set the <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept> (exit code) correctly, so the batch file should end with an <ph id="ph1">`EXIT /B 0`</ph> if everything ran correctly.</source>
          <target state="new">Not all programs set the <bpt id="p1">**</bpt>errorlevel<ept id="p1">**</ept> (exit code) correctly, so the batch file should end with an <ph id="ph1">`EXIT /B 0`</ph> if everything ran correctly.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A missing <ph id="ph1">`EXIT /B 0`</ph> at the end of a startup batch file is a common cause of roles that do not start.</source>
          <target state="new">A missing <ph id="ph1">`EXIT /B 0`</ph> at the end of a startup batch file is a common cause of roles that do not start.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Expect startup tasks to run more than once</source>
          <target state="new">Expect startup tasks to run more than once</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Not all role recycles include a reboot, but all role recycles include running all startup tasks.</source>
          <target state="new">Not all role recycles include a reboot, but all role recycles include running all startup tasks.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This means that startup tasks must be able to run multiple times between reboots without any problems.</source>
          <target state="new">This means that startup tasks must be able to run multiple times between reboots without any problems.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This is discussed <bpt id="p1">[</bpt>above<ept id="p1">](#detect-that-your-task-has-already-run)</ept>.</source>
          <target state="new">This is discussed <bpt id="p1">[</bpt>above<ept id="p1">](#detect-that-your-task-has-already-run)</ept>.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Use local storage to store files that must be accessed in the role</source>
          <target state="new">Use local storage to store files that must be accessed in the role</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If you want to copy or create a file during your startup task that is then accessible to your role, then that file must be placed in local storage.</source>
          <target state="new">If you want to copy or create a file during your startup task that is then accessible to your role, then that file must be placed in local storage.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>section<ept id="p1">](#create-files-in-local-storage-from-a-startup-task)</ept> above.</source>
          <target state="new">See the <bpt id="p1">[</bpt>section<ept id="p1">](#create-files-in-local-storage-from-a-startup-task)</ept> above.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Review the cloud <bpt id="p1">[</bpt>service model and package<ept id="p1">](cloud-services-model-and-package.md)</ept></source>
          <target state="new">Review the cloud <bpt id="p1">[</bpt>service model and package<ept id="p1">](cloud-services-model-and-package.md)</ept></target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Learn more about how <bpt id="p1">[</bpt>Tasks<ept id="p1">](cloud-services-startup-tasks.md)</ept> work.</source>
          <target state="new">Learn more about how <bpt id="p1">[</bpt>Tasks<ept id="p1">](cloud-services-startup-tasks.md)</ept> work.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Create and deploy<ept id="p1">](cloud-services-how-to-create-deploy-portal.md)</ept> your cloud service package.</source>
          <target state="new"><bpt id="p1">[</bpt>Create and deploy<ept id="p1">](cloud-services-how-to-create-deploy-portal.md)</ept> your cloud service package.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8891c9ddf0370bb4cccab66c40f8e5e796bc96ef</xliffext:olfilehash>
  </header>
</xliff>