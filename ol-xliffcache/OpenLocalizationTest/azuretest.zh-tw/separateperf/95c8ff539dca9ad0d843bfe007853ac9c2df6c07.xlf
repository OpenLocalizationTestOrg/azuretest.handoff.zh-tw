<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Getting started with elastic database jobs</source>
          <target state="new">Getting started with elastic database jobs</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>how to use elastic database jobs</source>
          <target state="new">how to use elastic database jobs</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Getting started with Elastic Database jobs</source>
          <target state="new">Getting started with Elastic Database jobs</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs (preview) for Azure SQL Database allows you to reliability execute T-SQL scripts that span multiple databases while automatically retrying and providing eventual completion guarantees.</source>
          <target state="new">Elastic Database jobs (preview) for Azure SQL Database allows you to reliability execute T-SQL scripts that span multiple databases while automatically retrying and providing eventual completion guarantees.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information about the Elastic Database job feature, please see the <bpt id="p1">[</bpt>feature overview page<ept id="p1">](sql-database-elastic-jobs-overview.md)</ept>.</source>
          <target state="new">For more information about the Elastic Database job feature, please see the <bpt id="p1">[</bpt>feature overview page<ept id="p1">](sql-database-elastic-jobs-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic extends the sample found in <bpt id="p1">[</bpt>Getting started with Elastic Database tools<ept id="p1">](sql-database-elastic-scale-get-started.md)</ept>.</source>
          <target state="new">This topic extends the sample found in <bpt id="p1">[</bpt>Getting started with Elastic Database tools<ept id="p1">](sql-database-elastic-scale-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When completed, you will: learn how to create and manage jobs that manage a group of related databases.</source>
          <target state="new">When completed, you will: learn how to create and manage jobs that manage a group of related databases.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Download and run the <bpt id="p1">[</bpt>Getting started with Elastic Database tools sample<ept id="p1">](sql-database-elastic-scale-get-started.md)</ept>.</source>
          <target state="new">Download and run the <bpt id="p1">[</bpt>Getting started with Elastic Database tools sample<ept id="p1">](sql-database-elastic-scale-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a shard map manager using the sample app</source>
          <target state="new">Create a shard map manager using the sample app</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Here you will create a shard map manager along with several shards, followed by insertion of data into the shards.</source>
          <target state="new">Here you will create a shard map manager along with several shards, followed by insertion of data into the shards.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you happen to already have shards setup with sharded data in them, you can skip the following steps and move to the next section.</source>
          <target state="new">If you happen to already have shards setup with sharded data in them, you can skip the following steps and move to the next section.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Build and run the <bpt id="p1">**</bpt>Getting started with Elastic Database tools<ept id="p1">**</ept> sample application.</source>
          <target state="new">Build and run the <bpt id="p1">**</bpt>Getting started with Elastic Database tools<ept id="p1">**</ept> sample application.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Follow the steps until step 7 in the section <bpt id="p1">[</bpt>Download and run the sample app<ept id="p1">](sql-database-elastic-scale-get-started.md#Getting-started-with-elastic-database-tools)</ept>.</source>
          <target state="new">Follow the steps until step 7 in the section <bpt id="p1">[</bpt>Download and run the sample app<ept id="p1">](sql-database-elastic-scale-get-started.md#Getting-started-with-elastic-database-tools)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>At the end of Step 7, you will see the following command prompt:</source>
          <target state="new">At the end of Step 7, you will see the following command prompt:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>![command prompt][1]</source>
          <target state="new">![command prompt][1]</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the command window, type "1" and press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>.</source>
          <target state="new">In the command window, type "1" and press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This creates the shard map manager, and adds two shards to the server.</source>
          <target state="new">This creates the shard map manager, and adds two shards to the server.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Then type "3" and press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>; repeat the action four times.</source>
          <target state="new">Then type "3" and press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>; repeat the action four times.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This inserts sample data rows in your shards.</source>
          <target state="new">This inserts sample data rows in your shards.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](https://portal.azure.com)</ept> should show three new databases in your v12 server:</source>
          <target state="new">The <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](https://portal.azure.com)</ept> should show three new databases in your v12 server:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>![Visual Studio confirmation][2]</source>
          <target state="new">![Visual Studio confirmation][2]</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>At this point, we will create a custom database collection that reflects all the databases in the shard map.</source>
          <target state="new">At this point, we will create a custom database collection that reflects all the databases in the shard map.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This will allow us to create and execute a job that add a new table across shards.</source>
          <target state="new">This will allow us to create and execute a job that add a new table across shards.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Now here we would usually create a shard map target, using the <bpt id="p1">**</bpt>New-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet.</source>
          <target state="new">Now here we would usually create a shard map target, using the <bpt id="p1">**</bpt>New-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The shard map manager database must be set as a database target and then the specific shard map is specified as a target.</source>
          <target state="new">The shard map manager database must be set as a database target and then the specific shard map is specified as a target.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Instead, we are going to enumerate all the databases in the server and add the databases to the new custom collection with the exception of master database.</source>
          <target state="new">Instead, we are going to enumerate all the databases in the server and add the databases to the new custom collection with the exception of master database.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creates a custom collection and adds all databases in the server to the custom collection target with the exception of master.</source>
          <target state="new">Creates a custom collection and adds all databases in the server to the custom collection target with the exception of master.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Create a T-SQL Script for execution across databases</source>
          <target state="new">Create a T-SQL Script for execution across databases</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Create the job to execute a script across the custom group of databases</source>
          <target state="new">Create the job to execute a script across the custom group of databases</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Execute the job</source>
          <target state="new">Execute the job</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to execute an existing job:</source>
          <target state="new">The following PowerShell script can be used to execute an existing job:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Update the following variable to reflect the desired job name to have executed:</source>
          <target state="new">Update the following variable to reflect the desired job name to have executed:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Retrieve the state of a single job execution</source>
          <target state="new">Retrieve the state of a single job execution</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Use the same <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet with the <bpt id="p2">**</bpt>IncludeChildren<ept id="p2">**</ept> parameter to view the state of child job executions, namely the specific state for each job execution against each database targeted by the job.</source>
          <target state="new">Use the same <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet with the <bpt id="p2">**</bpt>IncludeChildren<ept id="p2">**</ept> parameter to view the state of child job executions, namely the specific state for each job execution against each database targeted by the job.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>View the state across multiple job executions</source>
          <target state="new">View the state across multiple job executions</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet has multiple optional parameters that can be used to display multiple job executions, filtered through the provided parameters.</source>
          <target state="new">The <bpt id="p1">**</bpt>Get-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet has multiple optional parameters that can be used to display multiple job executions, filtered through the provided parameters.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following demonstrates some of the possible ways to use Get-AzureSqlJobExecution:</source>
          <target state="new">The following demonstrates some of the possible ways to use Get-AzureSqlJobExecution:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Retrieve all active top level job executions:</source>
          <target state="new">Retrieve all active top level job executions:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Retrieve all top level job executions, including inactive job executions:</source>
          <target state="new">Retrieve all top level job executions, including inactive job executions:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Retrieve all child job executions of a provided job execution ID, including inactive job executions:</source>
          <target state="new">Retrieve all child job executions of a provided job execution ID, including inactive job executions:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Retrieve all job executions created using a schedule / job combination, including inactive jobs:</source>
          <target state="new">Retrieve all job executions created using a schedule / job combination, including inactive jobs:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Retrieve all jobs targeting a specified shard map, including inactive jobs:</source>
          <target state="new">Retrieve all jobs targeting a specified shard map, including inactive jobs:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Retrieve all jobs targeting a specified custom collection, including inactive jobs:</source>
          <target state="new">Retrieve all jobs targeting a specified custom collection, including inactive jobs:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Retrieve the list of job task executions within a specific job execution:</source>
          <target state="new">Retrieve the list of job task executions within a specific job execution:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Retrieve job task execution details:</source>
          <target state="new">Retrieve job task execution details:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to view the details of a job task execution, which is particularly useful when debugging execution failures.</source>
          <target state="new">The following PowerShell script can be used to view the details of a job task execution, which is particularly useful when debugging execution failures.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Retrieve failures within job task executions</source>
          <target state="new">Retrieve failures within job task executions</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The JobTaskExecution object includes a property for the Lifecycle of the task along with a Message property.</source>
          <target state="new">The JobTaskExecution object includes a property for the Lifecycle of the task along with a Message property.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If a job task execution failed, the Lifecycle property will be set to <bpt id="p1">*</bpt>Failed<ept id="p1">*</ept> and the Message property will be set to the resulting exception message and its stack.</source>
          <target state="new">If a job task execution failed, the Lifecycle property will be set to <bpt id="p1">*</bpt>Failed<ept id="p1">*</ept> and the Message property will be set to the resulting exception message and its stack.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If a job did not succeed, it is important to view the details of job tasks that did not succeed for a given job.</source>
          <target state="new">If a job did not succeed, it is important to view the details of job tasks that did not succeed for a given job.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Waiting for a job execution to complete</source>
          <target state="new">Waiting for a job execution to complete</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to wait for a job task to complete:</source>
          <target state="new">The following PowerShell script can be used to wait for a job task to complete:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Create a custom execution policy</source>
          <target state="new">Create a custom execution policy</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs supports creating custom execution policies that can be applied when starting jobs.</source>
          <target state="new">Elastic Database jobs supports creating custom execution policies that can be applied when starting jobs.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Execution policies currently allow for defining:</source>
          <target state="new">Execution policies currently allow for defining:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Name: Identifier for the execution policy.</source>
          <target state="new">Name: Identifier for the execution policy.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Job Timeout: Total time before a job will be canceled by Elastic Database Jobs.</source>
          <target state="new">Job Timeout: Total time before a job will be canceled by Elastic Database Jobs.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Initial Retry Interval: Interval to wait before first retry.</source>
          <target state="new">Initial Retry Interval: Interval to wait before first retry.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Maximum Retry Interval: Cap of retry intervals to use.</source>
          <target state="new">Maximum Retry Interval: Cap of retry intervals to use.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Retry Interval Backoff Coefficient: Coefficient used to calculate the next interval between retries.</source>
          <target state="new">Retry Interval Backoff Coefficient: Coefficient used to calculate the next interval between retries.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following formula is used: (Initial Retry Interval) * Math.pow((Interval Backoff Coefficient), (Number of Retries) - 2).</source>
          <target state="new">The following formula is used: (Initial Retry Interval) * Math.pow((Interval Backoff Coefficient), (Number of Retries) - 2).</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Maximum Attempts: The maximum number of retry attempts to perform within a job.</source>
          <target state="new">Maximum Attempts: The maximum number of retry attempts to perform within a job.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default execution policy uses the following values:</source>
          <target state="new">The default execution policy uses the following values:</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Name: Default execution policy</source>
          <target state="new">Name: Default execution policy</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Job Timeout: 1 week</source>
          <target state="new">Job Timeout: 1 week</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Initial Retry Interval:  100 milliseconds</source>
          <target state="new">Initial Retry Interval:  100 milliseconds</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Maximum Retry Interval: 30 minutes</source>
          <target state="new">Maximum Retry Interval: 30 minutes</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Retry Interval Coefficient: 2</source>
          <target state="new">Retry Interval Coefficient: 2</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Maximum Attempts: 2,147,483,647</source>
          <target state="new">Maximum Attempts: 2,147,483,647</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Create the desired execution policy:</source>
          <target state="new">Create the desired execution policy:</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Update a custom execution policy</source>
          <target state="new">Update a custom execution policy</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Update the desired execution policy to update:</source>
          <target state="new">Update the desired execution policy to update:</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Cancel a job</source>
          <target state="new">Cancel a job</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Elastic Database Jobs supports cancellation requests of jobs.</source>
          <target state="new">Elastic Database Jobs supports cancellation requests of jobs.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If Elastic Database Jobs detects a cancellation request for a job currently being executed, it will attempt to stop the job.</source>
          <target state="new">If Elastic Database Jobs detects a cancellation request for a job currently being executed, it will attempt to stop the job.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>There are two different ways that Elastic Database Jobs can perform a cancellation:</source>
          <target state="new">There are two different ways that Elastic Database Jobs can perform a cancellation:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Canceling Currently Executing Tasks: If a cancellation is detected while a task is currently running, a cancellation will be attempted within the currently executing aspect of the task.</source>
          <target state="new">Canceling Currently Executing Tasks: If a cancellation is detected while a task is currently running, a cancellation will be attempted within the currently executing aspect of the task.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example: If there is a long running query currently being performed when a cancellation is attempted, there will be an attempt to cancel the query.</source>
          <target state="new">For example: If there is a long running query currently being performed when a cancellation is attempted, there will be an attempt to cancel the query.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Canceling Task Retries: If a cancellation is detected by the control thread before a task is launched for execution, the control thread will avoid launching the task and declare the request as canceled.</source>
          <target state="new">Canceling Task Retries: If a cancellation is detected by the control thread before a task is launched for execution, the control thread will avoid launching the task and declare the request as canceled.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If a job cancellation is requested for a parent job, the cancellation request will be honored for the parent job and for all of its child jobs.</source>
          <target state="new">If a job cancellation is requested for a parent job, the cancellation request will be honored for the parent job and for all of its child jobs.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To submit a cancellation request, use the <bpt id="p1">**</bpt>Stop-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet and set the <bpt id="p2">**</bpt>JobExecutionId<ept id="p2">**</ept> parameter.</source>
          <target state="new">To submit a cancellation request, use the <bpt id="p1">**</bpt>Stop-AzureSqlJobExecution<ept id="p1">**</ept> cmdlet and set the <bpt id="p2">**</bpt>JobExecutionId<ept id="p2">**</ept> parameter.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Delete a job by name and the job's history</source>
          <target state="new">Delete a job by name and the job's history</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs supports asynchronous deletion of jobs.</source>
          <target state="new">Elastic Database jobs supports asynchronous deletion of jobs.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A job can be marked for deletion and the system will delete the job and all its job history after all job executions have completed for the job.</source>
          <target state="new">A job can be marked for deletion and the system will delete the job and all its job history after all job executions have completed for the job.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The system will not automatically cancel active job executions.</source>
          <target state="new">The system will not automatically cancel active job executions.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Instead, Stop-AzureSqlJobExecution must be invoked to cancel active job executions.</source>
          <target state="new">Instead, Stop-AzureSqlJobExecution must be invoked to cancel active job executions.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To trigger job deletion, use the <bpt id="p1">**</bpt>Remove-AzureSqlJob<ept id="p1">**</ept> cmdlet and set the <bpt id="p2">**</bpt>JobName<ept id="p2">**</ept> parameter.</source>
          <target state="new">To trigger job deletion, use the <bpt id="p1">**</bpt>Remove-AzureSqlJob<ept id="p1">**</ept> cmdlet and set the <bpt id="p2">**</bpt>JobName<ept id="p2">**</ept> parameter.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Create a custom database target</source>
          <target state="new">Create a custom database target</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Custom database targets can be defined in Elastic Database jobs which can be used either for execution directly or for inclusion within a custom database group.</source>
          <target state="new">Custom database targets can be defined in Elastic Database jobs which can be used either for execution directly or for inclusion within a custom database group.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Since <bpt id="p1">**</bpt>Elastic Database pools<ept id="p1">**</ept> are not yet directly supported via the PowerShell APIs, you simply create a custom database target and custom database collection target which encompasses all the databases in the pool.</source>
          <target state="new">Since <bpt id="p1">**</bpt>Elastic Database pools<ept id="p1">**</ept> are not yet directly supported via the PowerShell APIs, you simply create a custom database target and custom database collection target which encompasses all the databases in the pool.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Set the following variables to reflect the desired database information:</source>
          <target state="new">Set the following variables to reflect the desired database information:</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Create a custom database collection target</source>
          <target state="new">Create a custom database collection target</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A custom database collection target can be defined to enable execution across multiple defined database targets.</source>
          <target state="new">A custom database collection target can be defined to enable execution across multiple defined database targets.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>After a database group is created, databases can be associated to the custom collection target.</source>
          <target state="new">After a database group is created, databases can be associated to the custom collection target.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Set the following variables to reflect the desired custom collection target configuration:</source>
          <target state="new">Set the following variables to reflect the desired custom collection target configuration:</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Add databases to a custom database collection target</source>
          <target state="new">Add databases to a custom database collection target</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Database targets can be associated with custom database collection targets to create a group of databases.</source>
          <target state="new">Database targets can be associated with custom database collection targets to create a group of databases.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Whenever a job is created that targets a custom database collection target, it will be expanded to target the databases associated to the group at the time of execution.</source>
          <target state="new">Whenever a job is created that targets a custom database collection target, it will be expanded to target the databases associated to the group at the time of execution.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Add the desired database to a specific custom collection:</source>
          <target state="new">Add the desired database to a specific custom collection:</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Review the databases within a custom database collection target</source>
          <target state="new">Review the databases within a custom database collection target</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>Get-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet to retrieve the child databases within a custom database collection target.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>Get-AzureSqlJobTarget<ept id="p1">**</ept> cmdlet to retrieve the child databases within a custom database collection target.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Create a job to execute a script across a custom database collection target</source>
          <target state="new">Create a job to execute a script across a custom database collection target</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>New-AzureSqlJob<ept id="p1">**</ept> cmdlet to create a job against a group of databases defined by a custom database collection target.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>New-AzureSqlJob<ept id="p1">**</ept> cmdlet to create a job against a group of databases defined by a custom database collection target.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Elastic Database jobs will expand the job into multiple child jobs each corresponding to a database associated with the custom database collection target and ensure that the script is executed against each database.</source>
          <target state="new">Elastic Database jobs will expand the job into multiple child jobs each corresponding to a database associated with the custom database collection target and ensure that the script is executed against each database.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Again, it is important that scripts are idempotent to be resilient to retries.</source>
          <target state="new">Again, it is important that scripts are idempotent to be resilient to retries.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Data collection across databases</source>
          <target state="new">Data collection across databases</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> supports executing a query across a group of databases and sends the results to a specified database’s table.</source>
          <target state="new"><bpt id="p1">**</bpt>Elastic Database jobs<ept id="p1">**</ept> supports executing a query across a group of databases and sends the results to a specified database’s table.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The table can be queried after the fact to see the query’s results from each database.</source>
          <target state="new">The table can be queried after the fact to see the query’s results from each database.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This provides an asynchronous mechanism to execute a query across many databases.</source>
          <target state="new">This provides an asynchronous mechanism to execute a query across many databases.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Failure cases such as one of the databases being temporarily unavailable are handled automatically via retries.</source>
          <target state="new">Failure cases such as one of the databases being temporarily unavailable are handled automatically via retries.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The specified destination table will be automatically created if it does not yet exist matching the schema of the returned result set.</source>
          <target state="new">The specified destination table will be automatically created if it does not yet exist matching the schema of the returned result set.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If a script execution returns multiple result sets, Elastic Database jobs will only send the first one to the provided destination table.</source>
          <target state="new">If a script execution returns multiple result sets, Elastic Database jobs will only send the first one to the provided destination table.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to execute a script collecting its results into a specified table.</source>
          <target state="new">The following PowerShell script can be used to execute a script collecting its results into a specified table.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This script assumes that a T-SQL script has been created which outputs a single result set and a custom database collection target has been created.</source>
          <target state="new">This script assumes that a T-SQL script has been created which outputs a single result set and a custom database collection target has been created.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Set the following to reflect the desired script, credentials, and execution target:</source>
          <target state="new">Set the following to reflect the desired script, credentials, and execution target:</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Create and start a job for data collection scenarios</source>
          <target state="new">Create and start a job for data collection scenarios</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Create a schedule for job execution using a job trigger</source>
          <target state="new">Create a schedule for job execution using a job trigger</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to create a reoccurring schedule.</source>
          <target state="new">The following PowerShell script can be used to create a reoccurring schedule.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This script uses a minute interval, but New-AzureSqlJobSchedule also supports -DayInterval, -HourInterval, -MonthInterval, and -WeekInterval parameters.</source>
          <target state="new">This script uses a minute interval, but New-AzureSqlJobSchedule also supports -DayInterval, -HourInterval, -MonthInterval, and -WeekInterval parameters.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Schedules that execute only once can be created by passing -OneTime.</source>
          <target state="new">Schedules that execute only once can be created by passing -OneTime.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Create a new schedule:</source>
          <target state="new">Create a new schedule:</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Create a job trigger to have a job executed on a time schedule</source>
          <target state="new">Create a job trigger to have a job executed on a time schedule</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A job trigger can be defined to have a job executed according to a time schedule.</source>
          <target state="new">A job trigger can be defined to have a job executed according to a time schedule.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The following PowerShell script can be used to create a job trigger.</source>
          <target state="new">The following PowerShell script can be used to create a job trigger.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Set the following variables to correspond to the desired job and schedule:</source>
          <target state="new">Set the following variables to correspond to the desired job and schedule:</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Remove a scheduled association to stop job from executing on schedule</source>
          <target state="new">Remove a scheduled association to stop job from executing on schedule</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To discontinue reoccurring job execution through a job trigger, the job trigger can be removed.</source>
          <target state="new">To discontinue reoccurring job execution through a job trigger, the job trigger can be removed.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Remove a job trigger to stop a job from being executed according to a schedule using the <bpt id="p1">**</bpt>Remove-AzureSqlJobTrigger<ept id="p1">**</ept> cmdlet.</source>
          <target state="new">Remove a job trigger to stop a job from being executed according to a schedule using the <bpt id="p1">**</bpt>Remove-AzureSqlJobTrigger<ept id="p1">**</ept> cmdlet.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Import elastic database query results to Excel</source>
          <target state="new">Import elastic database query results to Excel</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>You can import the results from of a query to an Excel file.</source>
          <target state="new">You can import the results from of a query to an Excel file.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Launch Excel 2013.</source>
          <target state="new">Launch Excel 2013.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Navigate to the <bpt id="p1">**</bpt>Data<ept id="p1">**</ept> ribbon.</source>
          <target state="new">Navigate to the <bpt id="p1">**</bpt>Data<ept id="p1">**</ept> ribbon.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>From Other Sources<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>From SQL Server<ept id="p2">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>From Other Sources<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>From SQL Server<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>![Excel import from other sources][5]</source>
          <target state="new">![Excel import from other sources][5]</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Data Connection Wizard<ept id="p1">**</ept> type the server name and login credentials.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Data Connection Wizard<ept id="p1">**</ept> type the server name and login credentials.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Then click <bpt id="p1">**</bpt>Next<ept id="p1">**</ept>.</source>
          <target state="new">Then click <bpt id="p1">**</bpt>Next<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>In the dialog box <bpt id="p1">**</bpt>Select the database that contains the data you want<ept id="p1">**</ept>, select the <bpt id="p2">**</bpt>ElasticDBQuery<ept id="p2">**</ept> database.</source>
          <target state="new">In the dialog box <bpt id="p1">**</bpt>Select the database that contains the data you want<ept id="p1">**</ept>, select the <bpt id="p2">**</bpt>ElasticDBQuery<ept id="p2">**</ept> database.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Customers<ept id="p1">**</ept> table in the list view and click <bpt id="p2">**</bpt>Next<ept id="p2">**</ept>.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Customers<ept id="p1">**</ept> table in the list view and click <bpt id="p2">**</bpt>Next<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Then click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
          <target state="new">Then click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Import Data<ept id="p1">**</ept> form, under <bpt id="p2">**</bpt>Select how you want to view this data in your workbook<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Table<ept id="p3">**</ept> and click <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Import Data<ept id="p1">**</ept> form, under <bpt id="p2">**</bpt>Select how you want to view this data in your workbook<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Table<ept id="p3">**</ept> and click <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>All the rows from <bpt id="p1">**</bpt>Customers<ept id="p1">**</ept> table, stored in different shards populate the Excel sheet.</source>
          <target state="new">All the rows from <bpt id="p1">**</bpt>Customers<ept id="p1">**</ept> table, stored in different shards populate the Excel sheet.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>You can now use Excel’s powerful data functions.</source>
          <target state="new">You can now use Excel’s powerful data functions.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>You can use the connection string with your server name, database name and credentials to connect your BI and data integration tools to the elastic query database.</source>
          <target state="new">You can use the connection string with your server name, database name and credentials to connect your BI and data integration tools to the elastic query database.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Make sure that SQL Server is supported as a data source for your tool.</source>
          <target state="new">Make sure that SQL Server is supported as a data source for your tool.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>You can refer to the elastic query database and external tables just like any other SQL Server database and SQL Server tables that you would connect to with your tool.</source>
          <target state="new">You can refer to the elastic query database and external tables just like any other SQL Server database and SQL Server tables that you would connect to with your tool.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Cost</source>
          <target state="new">Cost</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>There is no additional charge for using the Elastic Database Query feature.</source>
          <target state="new">There is no additional charge for using the Elastic Database Query feature.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>However, at this time this feature is available only on premium databases as an end point, but the shards can be of any service tier.</source>
          <target state="new">However, at this time this feature is available only on premium databases as an end point, but the shards can be of any service tier.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>For pricing information see <bpt id="p1">[</bpt>SQL Database Pricing Details<ept id="p1">](http://azure.microsoft.com/pricing/details/sql-database/)</ept>.</source>
          <target state="new">For pricing information see <bpt id="p1">[</bpt>SQL Database Pricing Details<ept id="p1">](http://azure.microsoft.com/pricing/details/sql-database/)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95c8ff539dca9ad0d843bfe007853ac9c2df6c07</xliffext:olfilehash>
  </header>
</xliff>