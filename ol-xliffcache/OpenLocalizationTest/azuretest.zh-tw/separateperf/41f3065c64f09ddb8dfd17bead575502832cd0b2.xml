{
  "nodes": [
    {
      "content": "Monitor availability and responsiveness of any web site | Microsoft Azure",
      "pos": [
        27,
        100
      ]
    },
    {
      "content": "Set up web tests in Application Insights.",
      "pos": [
        119,
        160
      ]
    },
    {
      "content": "Get alerts if a website becomes unavailable or responds slowly.",
      "pos": [
        161,
        224
      ]
    },
    {
      "content": "Monitor availability and responsiveness of any web site",
      "pos": [
        543,
        598
      ]
    },
    {
      "content": "After you've deployed your web application, you can set up web tests to monitor its availability and responsiveness.",
      "pos": [
        706,
        822
      ]
    },
    {
      "content": "Application Insights will send web requests at regular intervals from points around the world, and can alert you if your application responds slowly or not at all.",
      "pos": [
        823,
        986
      ]
    },
    {
      "content": "Web test example",
      "pos": [
        990,
        1006
      ]
    },
    {
      "content": "You can set up web tests for any HTTP endpoint that is accessible from the public internet.",
      "pos": [
        1092,
        1183
      ]
    },
    {
      "content": "There are two types of web test:",
      "pos": [
        1185,
        1217
      ]
    },
    {
      "pos": [
        1221,
        1317
      ],
      "content": "<bpt id=\"p1\">[</bpt>URL ping test<ept id=\"p1\">](#set-up-a-url-ping-test)</ept>: a simple test that you can create in the Azure portal."
    },
    {
      "pos": [
        1320,
        1462
      ],
      "content": "<bpt id=\"p1\">[</bpt>Multi-step web test<ept id=\"p1\">](#multi-step-web-tests)</ept>: which you create in Visual Studio Ultimate or Visual Studio Enterprise and upload to the portal."
    },
    {
      "content": "Set up a URL ping test",
      "pos": [
        1469,
        1491
      ]
    },
    {
      "pos": [
        1497,
        1543
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"create\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>1. Create a new resource?"
    },
    {
      "content": "Skip this step if you've already [set up an Application Insights resource][start] for this application, and you want to see the availability data in the same place.",
      "pos": [
        1545,
        1709
      ]
    },
    {
      "pos": [
        1711,
        1858
      ],
      "content": "Sign up to <bpt id=\"p1\">[</bpt>Microsoft Azure<ept id=\"p1\">](http://azure.com)</ept>, go to the <bpt id=\"p2\">[</bpt>Azure portal<ept id=\"p2\">](https://portal.azure.com)</ept>, and create a new Application Insights resource."
    },
    {
      "content": "New &gt; Application Insights",
      "pos": [
        1862,
        1888
      ]
    },
    {
      "content": "The Overview blade for the new resource will open.",
      "pos": [
        1957,
        2007
      ]
    },
    {
      "content": "To find this at any time in the <bpt id=\"p1\">[</bpt>Azure portal<ept id=\"p1\">](https://portal.azure.com)</ept>, click <bpt id=\"p2\">**</bpt>Browse<ept id=\"p2\">**</ept>.",
      "pos": [
        2008,
        2099
      ]
    },
    {
      "pos": [
        2105,
        2145
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"setup\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>2. Create a web test"
    },
    {
      "content": "In your Application Insights resource, look for the Availability tile.",
      "pos": [
        2147,
        2217
      ]
    },
    {
      "content": "Click it to open the Web tests blade for your application, and add a web test.",
      "pos": [
        2218,
        2296
      ]
    },
    {
      "content": "Fill at least the URL of your website",
      "pos": [
        2300,
        2337
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>The URL<ept id=\"p1\">**</ept> must be visible from the public internet.",
      "pos": [
        2413,
        2466
      ]
    },
    {
      "content": "It can include a query string&amp;#151;so, for example, you can exercise your database a little.",
      "pos": [
        2467,
        2559
      ]
    },
    {
      "content": "If the URL resolves to a redirect, we will follow it up to 10 redirects.",
      "pos": [
        2560,
        2632
      ]
    },
    {
      "content": "If <bpt id=\"p1\">**</bpt>Enable retries<ept id=\"p1\">**</ept> is selected, then when the test fails, it is retried after a short interval.",
      "pos": [
        2636,
        2734
      ]
    },
    {
      "content": "A failure is reported only if three successive attempts fail.",
      "pos": [
        2735,
        2796
      ]
    },
    {
      "content": "Subsequent tests are then performed at the usual interval.",
      "pos": [
        2797,
        2855
      ]
    },
    {
      "content": "Retry is temporarily suspended until the next success.",
      "pos": [
        2856,
        2910
      ]
    },
    {
      "content": "This rule is applied independently at each test location.",
      "pos": [
        2911,
        2968
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Test locations<ept id=\"p1\">**</ept> are the places from where our servers send web requests to your URL.",
      "pos": [
        2972,
        3059
      ]
    },
    {
      "content": "Choose more than one so that you can distinguish problems in your website from network issues.",
      "pos": [
        3060,
        3154
      ]
    },
    {
      "content": "You can select up to 16 locations.",
      "pos": [
        3155,
        3189
      ]
    },
    {
      "pos": [
        3193,
        3214
      ],
      "content": "<bpt id=\"p1\">**</bpt>Success criteria<ept id=\"p1\">**</ept>:"
    },
    {
      "pos": [
        3220,
        3255
      ],
      "content": "<bpt id=\"p1\">**</bpt>HTTP status code<ept id=\"p1\">**</ept>: 200 is usual."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Content match<ept id=\"p1\">**</ept>: a string, like \"Welcome!\"",
      "pos": [
        3261,
        3305
      ]
    },
    {
      "content": "We'll test that it occurs in every response.",
      "pos": [
        3306,
        3350
      ]
    },
    {
      "content": "It must be a plain string, without wildcards.",
      "pos": [
        3351,
        3396
      ]
    },
    {
      "content": "Don't forget that if your page content changes you might have to update it.",
      "pos": [
        3397,
        3472
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Alerts<ept id=\"p1\">**</ept> are, by default, sent to you if there are repeated failures over 15 minutes.",
      "pos": [
        3477,
        3564
      ]
    },
    {
      "content": "But you can change it to be more or less sensitive, and you can also change the notified email addresses.",
      "pos": [
        3565,
        3670
      ]
    },
    {
      "content": "Test more URLs",
      "pos": [
        3677,
        3691
      ]
    },
    {
      "content": "Add more tests.",
      "pos": [
        3693,
        3708
      ]
    },
    {
      "content": "For example, as well as testing your home page, you can make sure your database is running by testing the URL for a search.",
      "pos": [
        3709,
        3832
      ]
    },
    {
      "pos": [
        3839,
        3889
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"monitor\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>3. View availability reports"
    },
    {
      "content": "After 1-2 minutes, click <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept> on the availability/web tests blade.",
      "pos": [
        3891,
        3964
      ]
    },
    {
      "content": "(It doesn't refresh automatically.)",
      "pos": [
        3965,
        4000
      ]
    },
    {
      "content": "Summary results on the home blade",
      "pos": [
        4004,
        4037
      ]
    },
    {
      "content": "Click any bar on the summary chart at the top for a more detailed view of that time period.",
      "pos": [
        4111,
        4202
      ]
    },
    {
      "content": "These charts combine results for all the web tests of this application.",
      "pos": [
        4204,
        4275
      ]
    },
    {
      "content": "Components of your web page",
      "pos": [
        4282,
        4309
      ]
    },
    {
      "content": "Images, style sheets and scripts and other static components of the web page you're testing are requested as part of the test.",
      "pos": [
        4311,
        4437
      ]
    },
    {
      "content": "The recorded response time is the time taken for all the components to complete loading.",
      "pos": [
        4441,
        4529
      ]
    },
    {
      "content": "If any component fails to load, the test is marked failed.",
      "pos": [
        4531,
        4589
      ]
    },
    {
      "pos": [
        4594,
        4639
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"failures\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>If you see failures..."
    },
    {
      "content": "Click a red dot.",
      "pos": [
        4641,
        4657
      ]
    },
    {
      "content": "Click a red dot",
      "pos": [
        4661,
        4676
      ]
    },
    {
      "content": "Or, scroll down and click a test where you see less than 100% success.",
      "pos": [
        4749,
        4819
      ]
    },
    {
      "content": "Click a specific webtest",
      "pos": [
        4823,
        4847
      ]
    },
    {
      "content": "This shows you the results for that test.",
      "pos": [
        4920,
        4961
      ]
    },
    {
      "content": "Click a specific webtest",
      "pos": [
        4965,
        4989
      ]
    },
    {
      "content": "The test is run from several locations&amp;#151;pick one where the results are less than 100%.",
      "pos": [
        5056,
        5146
      ]
    },
    {
      "content": "Click a specific webtest",
      "pos": [
        5150,
        5174
      ]
    },
    {
      "pos": [
        5253,
        5303
      ],
      "content": "Scroll down to <bpt id=\"p1\">**</bpt>Failed tests<ept id=\"p1\">**</ept> and pick a result."
    },
    {
      "content": "Click the result to evaluate it in the portal and see why it failed.",
      "pos": [
        5305,
        5373
      ]
    },
    {
      "content": "Webtest run result",
      "pos": [
        5377,
        5395
      ]
    },
    {
      "content": "Alternatively, you can download the result file and inspect it in Visual Studio.",
      "pos": [
        5470,
        5550
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>Looks OK but reported as a failure?<ept id=\"p1\">*</ept> Check all the images, scripts, style sheets and any other files loaded by the page.",
      "pos": [
        5553,
        5674
      ]
    },
    {
      "content": "If any of them fails, the test will be reported as failed, even if the main html page loads OK.",
      "pos": [
        5675,
        5770
      ]
    },
    {
      "content": "Multi-step web tests",
      "pos": [
        5777,
        5797
      ]
    },
    {
      "content": "You can monitor a scenario that involves a sequence of URLs.",
      "pos": [
        5799,
        5859
      ]
    },
    {
      "content": "For example, if you are monitoring a sales website, you can test that adding items to the shopping cart works correctly.",
      "pos": [
        5860,
        5980
      ]
    },
    {
      "content": "To create a multi-step test, you record the scenario by using Visual Studio, and then upload the recording to Application Insights.",
      "pos": [
        5982,
        6113
      ]
    },
    {
      "content": "Application Insights will replay the scenario at intervals and verify the responses.",
      "pos": [
        6114,
        6198
      ]
    },
    {
      "content": "Note that you can't use coded functions in your tests: the scenario steps must be contained as a script in the .webtest file.",
      "pos": [
        6200,
        6325
      ]
    },
    {
      "content": "1. Record a scenario",
      "pos": [
        6332,
        6352
      ]
    },
    {
      "content": "Use Visual Studio Ultimate to record a web session.",
      "pos": [
        6354,
        6405
      ]
    },
    {
      "content": "Create a web performance test project.",
      "pos": [
        6411,
        6449
      ]
    },
    {
      "content": "In Visual Studio, create a new project from the Web Performance and Load Test template.",
      "pos": [
        6457,
        6544
      ]
    },
    {
      "content": "Open the .webtest file and start recording.",
      "pos": [
        6643,
        6686
      ]
    },
    {
      "content": "Open the .webtest file and click Record.",
      "pos": [
        6694,
        6734
      ]
    },
    {
      "content": "Do the user actions you want to simulate in your test: open your website, add a product to the cart, and so on.",
      "pos": [
        6832,
        6943
      ]
    },
    {
      "content": "Then stop your test.",
      "pos": [
        6944,
        6964
      ]
    },
    {
      "content": "The web test recorder runs in Internet Explorer.",
      "pos": [
        6972,
        7020
      ]
    },
    {
      "content": "Don't make a long scenario.",
      "pos": [
        7120,
        7147
      ]
    },
    {
      "content": "There's a limit of 100 steps and 2 minutes.",
      "pos": [
        7148,
        7191
      ]
    },
    {
      "content": "Run the test in Visual Studio to make sure it works.",
      "pos": [
        7196,
        7248
      ]
    },
    {
      "content": "The web test runner opens a web browser and repeats the actions you recorded.",
      "pos": [
        7254,
        7331
      ]
    },
    {
      "content": "Make sure it works as you expect.",
      "pos": [
        7332,
        7365
      ]
    },
    {
      "content": "In Visual Studio, open the .webtest file and click Run.",
      "pos": [
        7373,
        7428
      ]
    },
    {
      "content": "(Don't insert loops in your web test.)",
      "pos": [
        7522,
        7560
      ]
    },
    {
      "content": "2. Upload the web test to Application Insights",
      "pos": [
        7567,
        7613
      ]
    },
    {
      "content": "In the Application Insights portal, create a new web test.",
      "pos": [
        7618,
        7676
      ]
    },
    {
      "content": "On the web tests blade, choose Add.",
      "pos": [
        7684,
        7719
      ]
    },
    {
      "content": "Select multi-step test, and upload the .webtest file.",
      "pos": [
        7796,
        7849
      ]
    },
    {
      "content": "Select multi-step webtest.",
      "pos": [
        7857,
        7883
      ]
    },
    {
      "content": "View your test results and any failures in the same way as for single-url tests.",
      "pos": [
        7969,
        8049
      ]
    },
    {
      "content": "A common reason for failure is that the test runs too long.",
      "pos": [
        8051,
        8110
      ]
    },
    {
      "content": "It mustn't run longer than two minutes.",
      "pos": [
        8111,
        8150
      ]
    },
    {
      "content": "Don't forget that all the resources of a page must load correctly for the test to succeed, including scripts, style sheets, images and so forth.",
      "pos": [
        8152,
        8296
      ]
    },
    {
      "content": "Note that the web test must be entirely contained in the .webtest file: you can't use coded functions in the test.",
      "pos": [
        8298,
        8412
      ]
    },
    {
      "content": "Plugging time and random numbers into your multi-step test",
      "pos": [
        8419,
        8477
      ]
    },
    {
      "content": "Suppose you're testing a tool that gets time-dependent data such as stocks from an external feed.",
      "pos": [
        8479,
        8576
      ]
    },
    {
      "content": "When you record your web test, you have to use specific times, but you set them as parameters of the test, StartTime and EndTime.",
      "pos": [
        8577,
        8706
      ]
    },
    {
      "content": "A web test with parameters.",
      "pos": [
        8710,
        8737
      ]
    },
    {
      "content": "When you run the test, you'd like EndTime always to be the present time, and StartTime should be 15 minutes ago.",
      "pos": [
        8828,
        8940
      ]
    },
    {
      "content": "Web Test Plug-ins provide the way to do this.",
      "pos": [
        8942,
        8987
      ]
    },
    {
      "content": "Add a web test plug-in for each variable parameter value you want.",
      "pos": [
        8992,
        9058
      ]
    },
    {
      "content": "In the web test toolbar, choose <bpt id=\"p1\">**</bpt>Add Web Test Plugin<ept id=\"p1\">**</ept>.",
      "pos": [
        9059,
        9115
      ]
    },
    {
      "content": "Choose Add Web Test Plugin and select a type.",
      "pos": [
        9123,
        9168
      ]
    },
    {
      "content": "In this example, we'll use two instances of the Date Time Plug-in.",
      "pos": [
        9260,
        9326
      ]
    },
    {
      "content": "One instance is for \"15 minutes ago\" and another for \"now\".",
      "pos": [
        9327,
        9386
      ]
    },
    {
      "content": "Open the properties of each plug-in.",
      "pos": [
        9391,
        9427
      ]
    },
    {
      "content": "Give it a name and set it to use the current time.",
      "pos": [
        9428,
        9478
      ]
    },
    {
      "content": "For one of them, set Add Minutes = -15.",
      "pos": [
        9479,
        9518
      ]
    },
    {
      "content": "Set name, Use Current Time, and Add Minutes.",
      "pos": [
        9526,
        9570
      ]
    },
    {
      "content": "In the web test parameters, use {{plug-in name}} to reference a plug-in name.",
      "pos": [
        9671,
        9748
      ]
    },
    {
      "content": "In the test parameter, use {{plug-in name}}.",
      "pos": [
        9756,
        9800
      ]
    },
    {
      "content": "Now, upload your test to the portal.",
      "pos": [
        9892,
        9928
      ]
    },
    {
      "content": "It will use the dynamic values on every run of the test.",
      "pos": [
        9929,
        9985
      ]
    },
    {
      "pos": [
        9990,
        10032
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"edit\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph> Edit or disable a test"
    },
    {
      "content": "Open an individual test to edit or disable it.",
      "pos": [
        10034,
        10080
      ]
    },
    {
      "content": "Edit or disable a web test",
      "pos": [
        10084,
        10110
      ]
    },
    {
      "content": "You might want to disable web tests while you are performing maintenance on your service.",
      "pos": [
        10181,
        10270
      ]
    },
    {
      "content": "Questions?",
      "pos": [
        10275,
        10285
      ]
    },
    {
      "content": "Problems?",
      "pos": [
        10286,
        10295
      ]
    },
    {
      "content": "Is there a difference between \"web tests\" and \"availability\"?",
      "pos": [
        10301,
        10362
      ]
    },
    {
      "content": "We use the two terms interchangeably.",
      "pos": [
        10369,
        10406
      ]
    },
    {
      "content": "Can I call code from my web test?",
      "pos": [
        10411,
        10444
      ]
    },
    {
      "content": "No.",
      "pos": [
        10451,
        10454
      ]
    },
    {
      "content": "The steps of the test must be in the .webtest file.",
      "pos": [
        10455,
        10506
      ]
    },
    {
      "pos": [
        10511,
        10536
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"video\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Video"
    },
    {
      "pos": [
        10608,
        10637
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"next\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Next steps"
    },
    {
      "content": "[Search diagnostic logs][diagnostic]",
      "pos": [
        10639,
        10675
      ]
    },
    {
      "content": "[Troubleshooting][qna]",
      "pos": [
        10677,
        10699
      ]
    },
    {
      "content": "test",
      "pos": [
        10908,
        10912
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Monitor availability and responsiveness of any web site | Microsoft Azure\"\n    description=\"Set up web tests in Application Insights. Get alerts if a website becomes unavailable or responds slowly.\"\n    services=\"application-insights\"\n    documentationCenter=\"\"\n    authors=\"alancameronwills\"\n    manager=\"douge\"/>\n\n<tags\n    ms.service=\"application-insights\"\n    ms.workload=\"tbd\"\n    ms.tgt_pltfrm=\"ibiza\"\n    ms.devlang=\"na\"\n    ms.topic=\"get-started-article\"\n    ms.date=\"07/08/2015\"\n    ms.author=\"awills\"/>\n\n# Monitor availability and responsiveness of any web site\n\n[AZURE.INCLUDE [app-insights-selector-get-started](../../includes/app-insights-selector-get-started.md)]\n\nAfter you've deployed your web application, you can set up web tests to monitor its availability and responsiveness. Application Insights will send web requests at regular intervals from points around the world, and can alert you if your application responds slowly or not at all.\n\n![Web test example](./media/app-insights-monitor-web-app-availability/appinsights-10webtestresult.png)\n\nYou can set up web tests for any HTTP endpoint that is accessible from the public internet.\n\nThere are two types of web test:\n\n* [URL ping test](#set-up-a-url-ping-test): a simple test that you can create in the Azure portal.\n* [Multi-step web test](#multi-step-web-tests): which you create in Visual Studio Ultimate or Visual Studio Enterprise and upload to the portal.\n\n\n\n## Set up a URL ping test\n\n### <a name=\"create\"></a>1. Create a new resource?\n\nSkip this step if you've already [set up an Application Insights resource][start] for this application, and you want to see the availability data in the same place.\n\nSign up to [Microsoft Azure](http://azure.com), go to the [Azure portal](https://portal.azure.com), and create a new Application Insights resource.\n\n![New > Application Insights](./media/app-insights-monitor-web-app-availability/11-new-app.png)\n\nThe Overview blade for the new resource will open. To find this at any time in the [Azure portal](https://portal.azure.com), click **Browse**.\n\n### <a name=\"setup\"></a>2. Create a web test\n\nIn your Application Insights resource, look for the Availability tile. Click it to open the Web tests blade for your application, and add a web test.\n\n![Fill at least the URL of your website](./media/app-insights-monitor-web-app-availability/13-availability.png)\n\n- **The URL** must be visible from the public internet. It can include a query string&#151;so, for example, you can exercise your database a little. If the URL resolves to a redirect, we will follow it up to 10 redirects.\n\n- If **Enable retries** is selected, then when the test fails, it is retried after a short interval. A failure is reported only if three successive attempts fail. Subsequent tests are then performed at the usual interval. Retry is temporarily suspended until the next success. This rule is applied independently at each test location.\n\n- **Test locations** are the places from where our servers send web requests to your URL. Choose more than one so that you can distinguish problems in your website from network issues. You can select up to 16 locations.\n\n- **Success criteria**:\n\n    **HTTP status code**: 200 is usual.\n\n    **Content match**: a string, like \"Welcome!\" We'll test that it occurs in every response. It must be a plain string, without wildcards. Don't forget that if your page content changes you might have to update it.\n\n\n- **Alerts** are, by default, sent to you if there are repeated failures over 15 minutes. But you can change it to be more or less sensitive, and you can also change the notified email addresses.\n\n#### Test more URLs\n\nAdd more tests. For example, as well as testing your home page, you can make sure your database is running by testing the URL for a search.\n\n\n### <a name=\"monitor\"></a>3. View availability reports\n\nAfter 1-2 minutes, click **Refresh** on the availability/web tests blade. (It doesn't refresh automatically.)\n\n![Summary results on the home blade](./media/app-insights-monitor-web-app-availability/14-availSummary.png)\n\nClick any bar on the summary chart at the top for a more detailed view of that time period.\n\nThese charts combine results for all the web tests of this application.\n\n#### Components of your web page\n\nImages, style sheets and scripts and other static components of the web page you're testing are requested as part of the test.  \n\nThe recorded response time is the time taken for all the components to complete loading.\n\nIf any component fails to load, the test is marked failed.\n\n## <a name=\"failures\"></a>If you see failures...\n\nClick a red dot.\n\n![Click a red dot](./media/app-insights-monitor-web-app-availability/14-availRedDot.png)\n\nOr, scroll down and click a test where you see less than 100% success.\n\n![Click a specific webtest](./media/app-insights-monitor-web-app-availability/15-webTestList.png)\n\nThis shows you the results for that test.\n\n![Click a specific webtest](./media/app-insights-monitor-web-app-availability/16-1test.png)\n\nThe test is run from several locations&#151;pick one where the results are less than 100%.\n\n![Click a specific webtest](./media/app-insights-monitor-web-app-availability/17-availViewDetails.png)\n\n\nScroll down to **Failed tests** and pick a result.\n\nClick the result to evaluate it in the portal and see why it failed.\n\n![Webtest run result](./media/app-insights-monitor-web-app-availability/18-availDetails.png)\n\n\nAlternatively, you can download the result file and inspect it in Visual Studio.\n\n\n*Looks OK but reported as a failure?* Check all the images, scripts, style sheets and any other files loaded by the page. If any of them fails, the test will be reported as failed, even if the main html page loads OK.\n\n\n\n## Multi-step web tests\n\nYou can monitor a scenario that involves a sequence of URLs. For example, if you are monitoring a sales website, you can test that adding items to the shopping cart works correctly.\n\nTo create a multi-step test, you record the scenario by using Visual Studio, and then upload the recording to Application Insights. Application Insights will replay the scenario at intervals and verify the responses.\n\nNote that you can't use coded functions in your tests: the scenario steps must be contained as a script in the .webtest file.\n\n#### 1. Record a scenario\n\nUse Visual Studio Ultimate to record a web session. \n\n1. Create a web performance test project.\n\n    ![In Visual Studio, create a new project from the Web Performance and Load Test template.](./media/app-insights-monitor-web-app-availability/appinsights-71webtest-multi-vs-create.png)\n\n2. Open the .webtest file and start recording.\n\n    ![Open the .webtest file and click Record.](./media/app-insights-monitor-web-app-availability/appinsights-71webtest-multi-vs-start.png)\n\n3. Do the user actions you want to simulate in your test: open your website, add a product to the cart, and so on. Then stop your test.\n\n    ![The web test recorder runs in Internet Explorer.](./media/app-insights-monitor-web-app-availability/appinsights-71webtest-multi-vs-record.png)\n\n    Don't make a long scenario. There's a limit of 100 steps and 2 minutes.\n\n4. Run the test in Visual Studio to make sure it works.\n\n    The web test runner opens a web browser and repeats the actions you recorded. Make sure it works as you expect.\n\n    ![In Visual Studio, open the .webtest file and click Run.](./media/app-insights-monitor-web-app-availability/appinsights-71webtest-multi-vs-run.png)\n\n\n(Don't insert loops in your web test.)\n\n#### 2. Upload the web test to Application Insights\n\n1. In the Application Insights portal, create a new web test.\n\n    ![On the web tests blade, choose Add.](./media/app-insights-monitor-web-app-availability/16-another-test.png)\n\n2. Select multi-step test, and upload the .webtest file.\n\n    ![Select multi-step webtest.](./media/app-insights-monitor-web-app-availability/appinsights-71webtestUpload.png)\n\nView your test results and any failures in the same way as for single-url tests.\n\nA common reason for failure is that the test runs too long. It mustn't run longer than two minutes.\n\nDon't forget that all the resources of a page must load correctly for the test to succeed, including scripts, style sheets, images and so forth.\n\nNote that the web test must be entirely contained in the .webtest file: you can't use coded functions in the test.\n\n\n### Plugging time and random numbers into your multi-step test\n\nSuppose you're testing a tool that gets time-dependent data such as stocks from an external feed. When you record your web test, you have to use specific times, but you set them as parameters of the test, StartTime and EndTime.\n\n![A web test with parameters.](./media/app-insights-monitor-web-app-availability/appinsights-72webtest-parameters.png)\n\nWhen you run the test, you'd like EndTime always to be the present time, and StartTime should be 15 minutes ago.\n\nWeb Test Plug-ins provide the way to do this.\n\n1. Add a web test plug-in for each variable parameter value you want. In the web test toolbar, choose **Add Web Test Plugin**.\n\n    ![Choose Add Web Test Plugin and select a type.](./media/app-insights-monitor-web-app-availability/appinsights-72webtest-plugins.png)\n\n    In this example, we'll use two instances of the Date Time Plug-in. One instance is for \"15 minutes ago\" and another for \"now\".\n\n2. Open the properties of each plug-in. Give it a name and set it to use the current time. For one of them, set Add Minutes = -15.\n\n    ![Set name, Use Current Time, and Add Minutes.](./media/app-insights-monitor-web-app-availability/appinsights-72webtest-plugin-parameters.png)\n\n3. In the web test parameters, use {{plug-in name}} to reference a plug-in name.\n\n    ![In the test parameter, use {{plug-in name}}.](./media/app-insights-monitor-web-app-availability/appinsights-72webtest-plugin-name.png)\n\nNow, upload your test to the portal. It will use the dynamic values on every run of the test.\n\n## <a name=\"edit\"></a> Edit or disable a test\n\nOpen an individual test to edit or disable it.\n\n![Edit or disable a web test](./media/app-insights-monitor-web-app-availability/19-availEdit.png)\n\nYou might want to disable web tests while you are performing maintenance on your service.\n\n## Questions? Problems?\n\n\n* *Is there a difference between \"web tests\" and \"availability\"?*\n\n    We use the two terms interchangeably.\n\n* *Can I call code from my web test?*\n\n    No. The steps of the test must be in the .webtest file.\n\n## <a name=\"video\"></a>Video\n\n> [AZURE.VIDEO monitoring-availability-with-application-insights]\n\n## <a name=\"next\"></a>Next steps\n\n[Search diagnostic logs][diagnostic]\n\n[Troubleshooting][qna]\n\n\n\n\n<!--Link references-->\n\n[azure-availability]: ../insights-create-web-tests.md\n[diagnostic]: app-insights-diagnostic-search.md\n[qna]: app-insights-troubleshoot-faq.md\n[start]: app-insights-get-started.md\n\ntest\n"
}