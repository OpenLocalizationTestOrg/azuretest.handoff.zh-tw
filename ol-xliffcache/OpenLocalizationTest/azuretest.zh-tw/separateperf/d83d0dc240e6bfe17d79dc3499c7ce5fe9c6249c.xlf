<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Pig Activity</source>
          <target state="new">Pig Activity</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how you can use the Pig Activity in an Azure data factory to run Pig scripts on an on-demand/your own HDInsight cluster.</source>
          <target state="new">Learn how you can use the Pig Activity in an Azure data factory to run Pig scripts on an on-demand/your own HDInsight cluster.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Pig Activity</source>
          <target state="new">Pig Activity</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The HDInsight Pig activity in a Data Factory <bpt id="p1">[</bpt>pipeline<ept id="p1">](data-factory-create-pipelines.md)</ept> executes Pig queries on <bpt id="p2">[</bpt>your own<ept id="p2">](data-factory-compute-linked-services.md#azure-hdinsight-linked-service)</ept> or <bpt id="p3">[</bpt>on-demand<ept id="p3">](data-factory-compute-linked-services.md#azure-hdinsight-on-demand-linked-service)</ept> HDInsight cluster..</source>
          <target state="new">The HDInsight Pig activity in a Data Factory <bpt id="p1">[</bpt>pipeline<ept id="p1">](data-factory-create-pipelines.md)</ept> executes Pig queries on <bpt id="p2">[</bpt>your own<ept id="p2">](data-factory-compute-linked-services.md#azure-hdinsight-linked-service)</ept> or <bpt id="p3">[</bpt>on-demand<ept id="p3">](data-factory-compute-linked-services.md#azure-hdinsight-on-demand-linked-service)</ept> HDInsight cluster..</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article builds on the <bpt id="p1">[</bpt>data transformation activities<ept id="p1">](data-factory-data-transformation-activities.md)</ept> article which presents a general overview of data transformation and the supported transformation activities.</source>
          <target state="new">This article builds on the <bpt id="p1">[</bpt>data transformation activities<ept id="p1">](data-factory-data-transformation-activities.md)</ept> article which presents a general overview of data transformation and the supported transformation activities.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Syntax details</source>
          <target state="new">Syntax details</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new">Property</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="new">name</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name of the activity</source>
          <target state="new">Name of the activity</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>description</source>
          <target state="new">description</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Text describing what the activity is used for</source>
          <target state="new">Text describing what the activity is used for</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="new">type</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>HDinsightPig</source>
          <target state="new">HDinsightPig</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>inputs</source>
          <target state="new">inputs</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Input(s) consumed by the Pig activity</source>
          <target state="new">Input(s) consumed by the Pig activity</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>outputs</source>
          <target state="new">outputs</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Output(s) produced by the Pig activity</source>
          <target state="new">Output(s) produced by the Pig activity</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>linkedServiceName</source>
          <target state="new">linkedServiceName</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Reference to the HDInsight cluster registered as a linked service in Data Factory</source>
          <target state="new">Reference to the HDInsight cluster registered as a linked service in Data Factory</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>script</source>
          <target state="new">script</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specify the Pig script inline</source>
          <target state="new">Specify the Pig script inline</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>script path</source>
          <target state="new">script path</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Store the Pig script in an Azure blob storage and provide the path to the file.</source>
          <target state="new">Store the Pig script in an Azure blob storage and provide the path to the file.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Use 'script' or 'scriptPath' property.</source>
          <target state="new">Use 'script' or 'scriptPath' property.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Both cannot be used together</source>
          <target state="new">Both cannot be used together</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>defines</source>
          <target state="new">defines</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Specify parameters as key/value pairs for referencing within the Pig script</source>
          <target state="new">Specify parameters as key/value pairs for referencing within the Pig script</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="new">Example</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Let’s consider an example of game logs analytics where you want to identify the time spent by users playing games launched by your company.</source>
          <target state="new">Let’s consider an example of game logs analytics where you want to identify the time spent by users playing games launched by your company.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Below is a sample game log, which is comma (,) separated and contains the following fields – ProfileID, SessionStart, Duration, SrcIPAddress, and GameType.</source>
          <target state="new">Below is a sample game log, which is comma (,) separated and contains the following fields – ProfileID, SessionStart, Duration, SrcIPAddress, and GameType.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Pig script<ept id="p1">**</ept> to process this data looks like this:</source>
          <target state="new">The <bpt id="p1">**</bpt>Pig script<ept id="p1">**</ept> to process this data looks like this:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To execute this Pig script in a Data Factory pipeline, you need to the do the following:</source>
          <target state="new">To execute this Pig script in a Data Factory pipeline, you need to the do the following:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Create a linked service to register <bpt id="p1">[</bpt>your own HDInsight compute cluster<ept id="p1">](data-factory-compute-linked-services.md#azure-hdinsight-linked-service)</ept> or configure <bpt id="p2">[</bpt>on-demand HDInsight compute cluster<ept id="p2">](data-factory-compute-linked-services.md#azure-hdinsight-on-demand-linked-service)</ept>.</source>
          <target state="new">Create a linked service to register <bpt id="p1">[</bpt>your own HDInsight compute cluster<ept id="p1">](data-factory-compute-linked-services.md#azure-hdinsight-linked-service)</ept> or configure <bpt id="p2">[</bpt>on-demand HDInsight compute cluster<ept id="p2">](data-factory-compute-linked-services.md#azure-hdinsight-on-demand-linked-service)</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Let’s call this linked service “HDInsightLinkedService”.</source>
          <target state="new">Let’s call this linked service “HDInsightLinkedService”.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">[</bpt>linked service<ept id="p1">](data-factory-azure-storage-connector.md)</ept> to configure the connection to Azure Blob storage hosting the data.</source>
          <target state="new">Create a <bpt id="p1">[</bpt>linked service<ept id="p1">](data-factory-azure-storage-connector.md)</ept> to configure the connection to Azure Blob storage hosting the data.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Let’s call this linked service “StorageLinkedService”.</source>
          <target state="new">Let’s call this linked service “StorageLinkedService”.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Create <bpt id="p1">[</bpt>datasets<ept id="p1">](data-factory-create-datasets.md)</ept> pointing to the input and the output data.</source>
          <target state="new">Create <bpt id="p1">[</bpt>datasets<ept id="p1">](data-factory-create-datasets.md)</ept> pointing to the input and the output data.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Let’s call the input dataset “PigSampleIn” and the output dataset “PigSampleOut”.</source>
          <target state="new">Let’s call the input dataset “PigSampleIn” and the output dataset “PigSampleOut”.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Copy the Pig query in a file the Azure Blob Storage configured in step #2 above.</source>
          <target state="new">Copy the Pig query in a file the Azure Blob Storage configured in step #2 above.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>if the linked service for hosting the data is different from the one hosting this query file, create a separate Azure Storage linked service and refer to it in the activity configuration.</source>
          <target state="new">if the linked service for hosting the data is different from the one hosting this query file, create a separate Azure Storage linked service and refer to it in the activity configuration.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Use **scriptPath **to specify the path to pig script file and <bpt id="p1">**</bpt>scriptLinkedService<ept id="p1">**</ept> to specify the Azure storage that contains the script file.</source>
          <target state="new">Use **scriptPath **to specify the path to pig script file and <bpt id="p1">**</bpt>scriptLinkedService<ept id="p1">**</ept> to specify the Azure storage that contains the script file.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> You can also provide the Pig script inline in the activity definition by using the <bpt id="p1">**</bpt>script<ept id="p1">**</ept> property but this is not recommended as all special characters in the script within the JSON document needs to be escaped and may cause debugging issues.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> You can also provide the Pig script inline in the activity definition by using the <bpt id="p1">**</bpt>script<ept id="p1">**</ept> property but this is not recommended as all special characters in the script within the JSON document needs to be escaped and may cause debugging issues.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The best practice is to follow step #4.</source>
          <target state="new">The best practice is to follow step #4.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Create the below pipeline with the HDInsightPig activity to process the data.</source>
          <target state="new">Create the below pipeline with the HDInsightPig activity to process the data.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Deploy the pipeline.</source>
          <target state="new">Deploy the pipeline.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Creating pipelines<ept id="p1">](data-factory-create-pipelines.md)</ept> article for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Creating pipelines<ept id="p1">](data-factory-create-pipelines.md)</ept> article for details.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Monitor the pipeline using the data factory monitoring and management views.</source>
          <target state="new">Monitor the pipeline using the data factory monitoring and management views.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Monitoring and manage Data Factory pipelines<ept id="p1">](data-factory-monitor-manage-pipelines.md)</ept> article for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Monitoring and manage Data Factory pipelines<ept id="p1">](data-factory-monitor-manage-pipelines.md)</ept> article for details.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Specifying parameters for a Pig script using the defines element</source>
          <target state="new">Specifying parameters for a Pig script using the defines element</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Consider the example where the game logs are ingested daily into Azure Blob Storage and stored in a folder partitioned with date and time.</source>
          <target state="new">Consider the example where the game logs are ingested daily into Azure Blob Storage and stored in a folder partitioned with date and time.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You want to parameterize the Pig script and pass the input folder location dynamically during runtime and also produce the output partitioned with date and time.</source>
          <target state="new">You want to parameterize the Pig script and pass the input folder location dynamically during runtime and also produce the output partitioned with date and time.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To use parameterize Pig script, do the following:</source>
          <target state="new">To use parameterize Pig script, do the following:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Define the parameters in <bpt id="p1">**</bpt>defines<ept id="p1">**</ept>.</source>
          <target state="new">Define the parameters in <bpt id="p1">**</bpt>defines<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In the Pig Script, refer to the parameters using '<bpt id="p1">**</bpt>$parameterName<ept id="p1">**</ept>' as shown in the following example:</source>
          <target state="new">In the Pig Script, refer to the parameters using '<bpt id="p1">**</bpt>$parameterName<ept id="p1">**</ept>' as shown in the following example:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Send Feedback</source>
          <target state="new">Send Feedback</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>We would really appreciate your feedback on this article.</source>
          <target state="new">We would really appreciate your feedback on this article.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Please take a few minutes to submit your feedback via <bpt id="p1">[</bpt>email<ept id="p1">](mailto:adfdocfeedback@microsoft.com?subject=data-factory-pig-activity.md)</ept>.</source>
          <target state="new">Please take a few minutes to submit your feedback via <bpt id="p1">[</bpt>email<ept id="p1">](mailto:adfdocfeedback@microsoft.com?subject=data-factory-pig-activity.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d83d0dc240e6bfe17d79dc3499c7ce5fe9c6249c</xliffext:olfilehash>
  </header>
</xliff>