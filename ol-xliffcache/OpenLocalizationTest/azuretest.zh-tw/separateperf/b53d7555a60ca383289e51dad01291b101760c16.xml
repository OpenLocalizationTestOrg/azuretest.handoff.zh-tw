{
  "nodes": [
    {
      "content": "Authenticating a Service Principal with Azure Resource Manager",
      "pos": [
        26,
        88
      ]
    },
    {
      "content": "Describes how to grant access to a Service Principal through role-based access control and authenticate it.",
      "pos": [
        106,
        213
      ]
    },
    {
      "content": "Shows how to perform these tasks with PowerShell and Azure CLI.",
      "pos": [
        214,
        277
      ]
    },
    {
      "content": "Authenticating a service principal with Azure Resource Manager",
      "pos": [
        590,
        652
      ]
    },
    {
      "content": "This topic shows you how to permit a service principal (such as an automated process, application, or service) to access other resources in your subscription.",
      "pos": [
        654,
        812
      ]
    },
    {
      "content": "With Azure Resource Manager, you can use role-based access control to grant permitted actions to a service principal, and authenticate that service principal.",
      "pos": [
        813,
        971
      ]
    },
    {
      "content": "This topic shows you how to use PowerShell and Azure CLI to assign a role to service prinicpal and authenticate the serivce principal.",
      "pos": [
        972,
        1106
      ]
    },
    {
      "content": "It shows how to authenticate with either a user name and password or a certificate.",
      "pos": [
        1108,
        1191
      ]
    },
    {
      "content": "You can use either Azure PowerShell or Azure CLI for Mac, Linux and Windows.",
      "pos": [
        1193,
        1269
      ]
    },
    {
      "content": "If you do not have Azure PowerShell installed, see <bpt id=\"p1\">[</bpt>How to install and configure Azure PowerShell<ept id=\"p1\">](./powershell-install-configure.md)</ept>.",
      "pos": [
        1270,
        1404
      ]
    },
    {
      "content": "If you do not have Azure CLI installed, see <bpt id=\"p1\">[</bpt>Install and Configure the Azure CLI<ept id=\"p1\">](xplat-cli-install.md)</ept>.",
      "pos": [
        1405,
        1509
      ]
    },
    {
      "content": "Concepts",
      "pos": [
        1514,
        1522
      ]
    },
    {
      "content": "Azure Active Directory (AAD) - an identity and access management service for the cloud.",
      "pos": [
        1526,
        1613
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>What is Azure active Directory<ept id=\"p1\">](active-directory/active-directory-whatis.md)</ept>",
      "pos": [
        1614,
        1717
      ]
    },
    {
      "content": "Service Principal - An instance of an application in a directory that needs to access other resources.",
      "pos": [
        1721,
        1823
      ]
    },
    {
      "content": "AD Application - Directory record that identifies an application to AAD.",
      "pos": [
        1827,
        1899
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>Basics of Authentication in Azure AD<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/874839d9-6de6-43aa-9a5c-613b0c93247e#BKMK_Auth)</ept>.",
      "pos": [
        1900,
        2054
      ]
    },
    {
      "content": "Authenticate service principal with password - PowerShell",
      "pos": [
        2059,
        2116
      ]
    },
    {
      "content": "In this section, you will perform the steps to create a service principal for an Azure Active Directory application, assign a role to the service principal, and authenticate as the service principal by providing the application identifier and password.",
      "pos": [
        2118,
        2370
      ]
    },
    {
      "content": "Switch to Azure Resource Manager mode and sign in to your account.",
      "pos": [
        2375,
        2441
      ]
    },
    {
      "content": "Create a new AAD Application by running the <bpt id=\"p1\">**</bpt>New-AzureADApplication<ept id=\"p1\">**</ept> command.",
      "pos": [
        2534,
        2613
      ]
    },
    {
      "content": "Provide a display name for your application, the URI to a page that describes your application (the link is not verified), the URIs that identify your application, and the password for your application identity.",
      "pos": [
        2614,
        2825
      ]
    },
    {
      "content": "Examine the new application object.",
      "pos": [
        3061,
        3096
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>ApplicationId<ept id=\"p1\">**</ept> property is needed for creating service principals, role assignments and acquiring JWT tokens.",
      "pos": [
        3097,
        3213
      ]
    },
    {
      "content": "Create a service principal for your application.",
      "pos": [
        4698,
        4746
      ]
    },
    {
      "content": "You have now created a service principal in the directory, but the service does not have any permissions or scope assigned.",
      "pos": [
        4847,
        4970
      ]
    },
    {
      "content": "You will need to explicitly grant the service principal permissions to perform operations at some scope.",
      "pos": [
        4971,
        5075
      ]
    },
    {
      "content": "Grant the service principal permissions on your subscription.",
      "pos": [
        5080,
        5141
      ]
    },
    {
      "content": "In this sample you will grant the service principal the permission to Read all resources in the subscription.",
      "pos": [
        5142,
        5251
      ]
    },
    {
      "content": "For the <bpt id=\"p1\">**</bpt>ServicePrincipalName<ept id=\"p1\">**</ept> parameter, provie either the <bpt id=\"p2\">**</bpt>ApplicationId<ept id=\"p2\">**</ept> or the <bpt id=\"p3\">**</bpt>IdentifierUris<ept id=\"p3\">**</ept> that you used when creating the application.",
      "pos": [
        5252,
        5402
      ]
    },
    {
      "content": "For more information on role-based access control, see <bpt id=\"p1\">[</bpt>Managing and Auditing Access to Resources<ept id=\"p1\">](azure-portal/resource-group-rbac.md)</ept>",
      "pos": [
        5403,
        5538
      ]
    },
    {
      "content": "Retrieve the subscription in which the role assignment was created.",
      "pos": [
        5667,
        5734
      ]
    },
    {
      "content": "This subscription will be used later to get the <bpt id=\"p1\">**</bpt>TenantId<ept id=\"p1\">**</ept> of the tenant that the service principal's role assignment resides in.",
      "pos": [
        5735,
        5866
      ]
    },
    {
      "pos": [
        5953,
        6164
      ],
      "content": "If you created the role assignment in a subscription other than the currently selected subscription, you can specify the <bpt id=\"p1\">**</bpt>SubscriptoinId<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>SubscriptionName<ept id=\"p2\">**</ept> parameters to retrive a different subscription."
    },
    {
      "pos": [
        6169,
        6280
      ],
      "content": "Create a new <bpt id=\"p1\">**</bpt>PSCredential<ept id=\"p1\">**</ept> object which contains your credentials by running the <bpt id=\"p2\">**</bpt>Get-Credential<ept id=\"p2\">**</ept> command."
    },
    {
      "content": "You will be prompted you to enter your credentials.",
      "pos": [
        6328,
        6379
      ]
    },
    {
      "content": "![][1]",
      "pos": [
        6386,
        6392
      ]
    },
    {
      "content": "For the user name, use the <bpt id=\"p1\">**</bpt>ApplicationId<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>IdentifierUris<ept id=\"p2\">**</ept> that you used when creating the application.",
      "pos": [
        6399,
        6510
      ]
    },
    {
      "content": "For the password, use the one you specified when creating the account.",
      "pos": [
        6511,
        6581
      ]
    },
    {
      "pos": [
        6586,
        6712
      ],
      "content": "Use the credentials that you entered as an input to the <bpt id=\"p1\">**</bpt>Add-AzureAccount<ept id=\"p1\">**</ept> cmdlet, which will sign the service principal in:"
    },
    {
      "content": "You should now be authenticated as the service principal for the AAD application that you created.",
      "pos": [
        6821,
        6919
      ]
    },
    {
      "content": "To authenticate from an application, include the following .NET code.",
      "pos": [
        6924,
        6993
      ]
    },
    {
      "content": "After retrieving the token, you can access resources in the subscription.",
      "pos": [
        6994,
        7067
      ]
    },
    {
      "content": "Authenticate service principal with certificate - PowerShell",
      "pos": [
        7714,
        7774
      ]
    },
    {
      "content": "In this section, you will perform the steps to create a service principal for an Azure Active Directory application, assign a role to the service principal, and authenticate as the service principal by",
      "pos": [
        7776,
        7977
      ]
    },
    {
      "content": "providing a certificate.",
      "pos": [
        7979,
        8003
      ]
    },
    {
      "content": "This topic assumes you have been issued a certificate.",
      "pos": [
        8004,
        8058
      ]
    },
    {
      "content": "It shows two ways to work with certificates - key credentials and key values.",
      "pos": [
        8060,
        8137
      ]
    },
    {
      "content": "You can use either approach.",
      "pos": [
        8138,
        8166
      ]
    },
    {
      "content": "First, you must set up some values in PowerShell that you will use later when creating the application.",
      "pos": [
        8168,
        8271
      ]
    },
    {
      "content": "Switch to Azure Resource Manager mode and sign in to your account.",
      "pos": [
        8276,
        8342
      ]
    },
    {
      "content": "For both approaches, create an X509Certificate object from your certificate and retrieve the key value.",
      "pos": [
        8435,
        8538
      ]
    },
    {
      "content": "Use the path to your certificate and the password for that certificate.",
      "pos": [
        8539,
        8610
      ]
    },
    {
      "pos": [
        8833,
        8962
      ],
      "content": "If you are using key credentials, create the key credentials object and sets its value to the <ph id=\"ph1\">`$keyValue`</ph> from the previous step."
    },
    {
      "content": "Create an application in the directory.",
      "pos": [
        9451,
        9490
      ]
    },
    {
      "content": "The first command shows how to use key values.",
      "pos": [
        9491,
        9537
      ]
    },
    {
      "content": "Or, use the second example to assign key credentials.",
      "pos": [
        9799,
        9852
      ]
    },
    {
      "content": "Examine the new application object.",
      "pos": [
        10083,
        10118
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>ApplicationId<ept id=\"p1\">**</ept> property is needed for creating service principals, role assignments and acquiring JWT tokens.",
      "pos": [
        10119,
        10235
      ]
    },
    {
      "content": "Create a service principal for your application.",
      "pos": [
        11745,
        11793
      ]
    },
    {
      "content": "You have now created a service principal in the directory, but the service does not have any permissions or scope assigned.",
      "pos": [
        11893,
        12016
      ]
    },
    {
      "content": "You will need to explicitly grant the service principal permissions to perform operations at some scope.",
      "pos": [
        12017,
        12121
      ]
    },
    {
      "content": "Grant the service principal permissions on your subscription.",
      "pos": [
        12126,
        12187
      ]
    },
    {
      "content": "In this sample you will grant the service principal the permission to Read all resources in the subscription.",
      "pos": [
        12188,
        12297
      ]
    },
    {
      "content": "For the <bpt id=\"p1\">**</bpt>ServicePrincipalName<ept id=\"p1\">**</ept> parameter, provie either the <bpt id=\"p2\">**</bpt>ApplicationId<ept id=\"p2\">**</ept> or the <bpt id=\"p3\">**</bpt>IdentifierUris<ept id=\"p3\">**</ept> that you used when creating the application.",
      "pos": [
        12298,
        12448
      ]
    },
    {
      "content": "For more information on role-based access control, see <bpt id=\"p1\">[</bpt>Managing and Auditing Access to Resources<ept id=\"p1\">](azure-portal/resource-group-rbac.md)</ept>",
      "pos": [
        12449,
        12584
      ]
    },
    {
      "content": "To authenticate from an application, include the following .NET code.",
      "pos": [
        12713,
        12782
      ]
    },
    {
      "content": "After retrieving the client, you can access resources in the subscription.",
      "pos": [
        12783,
        12857
      ]
    },
    {
      "content": "Authenticate service principal with password - Azure CLI",
      "pos": [
        13973,
        14029
      ]
    },
    {
      "content": "You will start by creating a service principal.",
      "pos": [
        14031,
        14078
      ]
    },
    {
      "content": "To do this we must use create an application in the directory.",
      "pos": [
        14079,
        14141
      ]
    },
    {
      "content": "This section will walk through creating a new application in the directory.",
      "pos": [
        14142,
        14217
      ]
    },
    {
      "content": "Switch to Azure Resource Manager mode and sign in to your account.",
      "pos": [
        14222,
        14288
      ]
    },
    {
      "content": "Create a new AAD Application by running the <bpt id=\"p1\">**</bpt>azure ad app create<ept id=\"p1\">**</ept> command.",
      "pos": [
        14344,
        14420
      ]
    },
    {
      "content": "Provide a display name for your application, the URI to a page that describes your application (the link is not verified), the URIs that identify your application, and the password for your application identity.",
      "pos": [
        14421,
        14632
      ]
    },
    {
      "content": "The Azure AD application is returned.",
      "pos": [
        14839,
        14876
      ]
    },
    {
      "content": "The ApplicationId property is needed for creating service principals, role assignments and acquiring JWT tokens.",
      "pos": [
        14877,
        14989
      ]
    },
    {
      "content": "Create a service principal for your application.",
      "pos": [
        15597,
        15645
      ]
    },
    {
      "content": "Provide the application id that was returned in the previous step.",
      "pos": [
        15646,
        15712
      ]
    },
    {
      "content": "The new service principal is returned.",
      "pos": [
        15791,
        15829
      ]
    },
    {
      "content": "The Object Id is needed when granting permissions.",
      "pos": [
        15830,
        15880
      ]
    },
    {
      "content": "You have now created a service principal in the directory, but the service does not have any permissions or scope assigned.",
      "pos": [
        16214,
        16337
      ]
    },
    {
      "content": "You will need to explicitly grant the service principal permissions to perform operations at some scope.",
      "pos": [
        16338,
        16442
      ]
    },
    {
      "content": "Grant the service principal permissions on your subscription.",
      "pos": [
        16447,
        16508
      ]
    },
    {
      "content": "In this sample you will grant the service principal the permission to Read all resources in the subscription.",
      "pos": [
        16509,
        16618
      ]
    },
    {
      "content": "For the <bpt id=\"p1\">**</bpt>ServicePrincipalName<ept id=\"p1\">**</ept> parameter, provie either the <bpt id=\"p2\">**</bpt>ApplicationId<ept id=\"p2\">**</ept> or the <bpt id=\"p3\">**</bpt>IdentifierUris<ept id=\"p3\">**</ept> that you used when creating the application.",
      "pos": [
        16619,
        16769
      ]
    },
    {
      "content": "For more information on role-based access control, see <bpt id=\"p1\">[</bpt>Managing and Auditing Access to Resources<ept id=\"p1\">](azure-portal/resource-group-rbac.md)</ept>",
      "pos": [
        16770,
        16905
      ]
    },
    {
      "pos": [
        17042,
        17216
      ],
      "content": "Determine the <bpt id=\"p1\">**</bpt>TenantId<ept id=\"p1\">**</ept> of the tenant that the service principal's role assignment resides by listing the accounts and looking for the <bpt id=\"p2\">**</bpt>TenantId<ept id=\"p2\">**</ept> property in the output."
    },
    {
      "content": "Sign-in using the service principal as your identity.",
      "pos": [
        17249,
        17302
      ]
    },
    {
      "content": "For the user name, use the <bpt id=\"p1\">**</bpt>ApplicationId<ept id=\"p1\">**</ept> that you used when creating the application.",
      "pos": [
        17303,
        17392
      ]
    },
    {
      "content": "For the password, use the one you specified when creating the account.",
      "pos": [
        17393,
        17463
      ]
    },
    {
      "content": "You should now be authenticated as the service principal for the AAD application that you created.",
      "pos": [
        17569,
        17667
      ]
    },
    {
      "content": "Next Steps",
      "pos": [
        17672,
        17682
      ]
    },
    {
      "pos": [
        17688,
        17818
      ],
      "content": "For an overivew of role-based access control, see <bpt id=\"p1\">[</bpt>Managing and Auditing Access to Resources<ept id=\"p1\">](azure-portal/resource-group-rbac.md)</ept>"
    },
    {
      "pos": [
        17823,
        17998
      ],
      "content": "To learn about using the portal with service principals, see <bpt id=\"p1\">[</bpt>Create a new Azure Service Principal using the Azure portal<ept id=\"p1\">](./resource-group-create-service-principal-portal.md)</ept>"
    },
    {
      "pos": [
        18003,
        18171
      ],
      "content": "For guidance on implementing security with Azure Resource Manager, see <bpt id=\"p1\">[</bpt>Security considerations for Azure Resource Manager<ept id=\"p1\">](best-practices-resource-manager-security.md)</ept>"
    },
    {
      "content": "test",
      "pos": [
        18274,
        18278
      ]
    }
  ],
  "content": "<properties\n   pageTitle=\"Authenticating a Service Principal with Azure Resource Manager\"\n   description=\"Describes how to grant access to a Service Principal through role-based access control and authenticate it. Shows how to perform these tasks with PowerShell and Azure CLI.\"\n   services=\"azure-resource-manager\"\n   documentationCenter=\"na\"\n   authors=\"tfitzmac\"\n   manager=\"wpickett\"\n   editor=\"\"/>\n\n<tags\n   ms.service=\"azure-resource-manager\"\n   ms.devlang=\"na\"\n   ms.topic=\"article\"\n   ms.tgt_pltfrm=\"multiple\"\n   ms.workload=\"na\"\n   ms.date=\"08/25/2015\"\n   ms.author=\"tomfitz\"/>\n\n# Authenticating a service principal with Azure Resource Manager\n\nThis topic shows you how to permit a service principal (such as an automated process, application, or service) to access other resources in your subscription. With Azure Resource Manager, you can use role-based access control to grant permitted actions to a service principal, and authenticate that service principal. This topic shows you how to use PowerShell and Azure CLI to assign a role to service prinicpal and authenticate the serivce principal.\n\nIt shows how to authenticate with either a user name and password or a certificate.\n\nYou can use either Azure PowerShell or Azure CLI for Mac, Linux and Windows. If you do not have Azure PowerShell installed, see [How to install and configure Azure PowerShell](./powershell-install-configure.md). If you do not have Azure CLI installed, see [Install and Configure the Azure CLI](xplat-cli-install.md).\n\n## Concepts\n1. Azure Active Directory (AAD) - an identity and access management service for the cloud. For more information, see [What is Azure active Directory](active-directory/active-directory-whatis.md)\n2. Service Principal - An instance of an application in a directory that needs to access other resources.\n3. AD Application - Directory record that identifies an application to AAD. For more information, see [Basics of Authentication in Azure AD](https://msdn.microsoft.com/library/azure/874839d9-6de6-43aa-9a5c-613b0c93247e#BKMK_Auth).\n\n## Authenticate service principal with password - PowerShell\n\nIn this section, you will perform the steps to create a service principal for an Azure Active Directory application, assign a role to the service principal, and authenticate as the service principal by providing the application identifier and password.\n\n1. Switch to Azure Resource Manager mode and sign in to your account.\n\n        PS C:\\> Switch-AzureMode AzureResourceManager\n        PS C:\\> Add-AzureAccount\n\n1. Create a new AAD Application by running the **New-AzureADApplication** command. Provide a display name for your application, the URI to a page that describes your application (the link is not verified), the URIs that identify your application, and the password for your application identity.\n\n        PS C:\\> $azureAdApplication = New-AzureADApplication -DisplayName \"<Your Application Display Name>\" -HomePage \"<https://YourApplicationHomePage>\" -IdentifierUris \"<https://YouApplicationUri>\" -Password \"<Your_Password>\"\n\n     Examine the new application object. The **ApplicationId** property is needed for creating service principals, role assignments and acquiring JWT tokens.\n\n        PS C:\\> $azureAdApplication\n\n        Type                    : Application\n        ApplicationId           : a41acfda-d588-47c9-8166-d659a335a865\n        ApplicationObjectId     : a26aaa48-bd52-4a7f-b29f-1bebf74c91e3\n        AvailableToOtherTenants : False\n        AppPermissions          : {{\n                            \"claimValue\": \"user_impersonation\",\n                            \"description\": \"Allow the application to access <Your Application Display Name> on behalf of the signed-in user.\",\n                            \"directAccessGrantTypes\": [],\n                            \"displayName\": \"Access <Your Application Display Name>\",\n                            \"impersonationAccessGrantTypes\": [\n                              {\n                                \"impersonated\": \"User\",\n                                \"impersonator\": \"Application\"\n                              }\n                            ],\n                            \"isDisabled\": false,\n                            \"origin\": \"Application\",\n                            \"permissionId\": \"b866ef28-9abb-4698-8c8f-eb4328533831\",\n                            \"resourceScopeType\": \"Personal\",\n                            \"userConsentDescription\": \"Allow the application to access <Your Application Display Name> on your behalf.\",\n                            \"userConsentDisplayName\": \"Access <Your Application Display Name>\",\n                            \"lang\": null\n                          }}\n\n\n2. Create a service principal for your application.\n\n        PS C:\\> New-AzureADServicePrincipal -ApplicationId $azureAdApplication.ApplicationId\n\n     You have now created a service principal in the directory, but the service does not have any permissions or scope assigned. You will need to explicitly grant the service principal permissions to perform operations at some scope.\n\n3. Grant the service principal permissions on your subscription. In this sample you will grant the service principal the permission to Read all resources in the subscription. For the **ServicePrincipalName** parameter, provie either the **ApplicationId** or the **IdentifierUris** that you used when creating the application. For more information on role-based access control, see [Managing and Auditing Access to Resources](azure-portal/resource-group-rbac.md)\n\n        PS C:\\> New-AzureRoleAssignment -RoleDefinitionName Reader -ServicePrincipalName $azureAdApplication.ApplicationId\n\n4. Retrieve the subscription in which the role assignment was created. This subscription will be used later to get the **TenantId** of the tenant that the service principal's role assignment resides in.\n\n        PS C:\\> $subscription = Get-AzureSubscription | where { $_.IsCurrent }\n\n     If you created the role assignment in a subscription other than the currently selected subscription, you can specify the **SubscriptoinId** or **SubscriptionName** parameters to retrive a different subscription.\n\n5. Create a new **PSCredential** object which contains your credentials by running the **Get-Credential** command.\n\n        PS C:\\> $creds = Get-Credential\n\n     You will be prompted you to enter your credentials.\n\n     ![][1]\n\n     For the user name, use the **ApplicationId** or **IdentifierUris** that you used when creating the application. For the password, use the one you specified when creating the account.\n\n6. Use the credentials that you entered as an input to the **Add-AzureAccount** cmdlet, which will sign the service principal in:\n\n        PS C:\\> Add-AzureAccount -Credential $creds -ServicePrincipal -Tenant $subscription.TenantId\n\n     You should now be authenticated as the service principal for the AAD application that you created.\n\n7. To authenticate from an application, include the following .NET code. After retrieving the token, you can access resources in the subscription.\n\n        public static string GetAToken()\n        {\n          var authenticationContext = new AuthenticationContext(\"https://login.windows.net/{tenantId or tenant name}\");  \n          var credential = new ClientCredential(clientId: \"{application id}\", clientSecret: \"{application password}\");\n          var result = authenticationContext.AcquireToken(resource: \"https://management.core.windows.net/\", clientCredential:credential);\n\n          if (result == null) {\n            throw new InvalidOperationException(\"Failed to obtain the JWT token\");\n          }\n\n          string token = result.AccessToken;\n\n          return token;\n        }\n\n\n\n## Authenticate service principal with certificate - PowerShell\n\nIn this section, you will perform the steps to create a service principal for an Azure Active Directory application, assign a role to the service principal, and authenticate as the service principal by \nproviding a certificate. This topic assumes you have been issued a certificate.\n\nIt shows two ways to work with certificates - key credentials and key values. You can use either approach.\n\nFirst, you must set up some values in PowerShell that you will use later when creating the application.\n\n1. Switch to Azure Resource Manager mode and sign in to your account.\n\n        PS C:\\> Switch-AzureMode AzureResourceManager\n        PS C:\\> Add-AzureAccount\n\n1. For both approaches, create an X509Certificate object from your certificate and retrieve the key value. Use the path to your certificate and the password for that certificate.\n\n        $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate(\"C:\\certificates\\examplecert.pfx\", \"yourpassword\")\n        $keyValue = [System.Convert]::ToBase64String($cert.GetRawCertData())\n\n2. If you are using key credentials, create the key credentials object and sets its value to the `$keyValue` from the previous step.\n\n        $currentDate = Get-Date\n        $endDate = $currentDate.AddYears(1)\n        $keyId = [guid]::NewGuid()\n        $keyCredential = New-Object  Microsoft.Azure.Commands.Resources.Models.ActiveDirectory.PSADKeyCredential\n        $keyCredential.StartDate = $currentDate\n        $keyCredential.EndDate= $endDate\n        $keyCredential.KeyId = $keyId\n        $keyCredential.Type = \"AsymmetricX509Cert\"\n        $keyCredential.Usage = \"Verify\"\n        $keyCredential.Value = $keyValue\n\n3. Create an application in the directory. The first command shows how to use key values.\n\n        $azureAdApplication = New-AzureADApplication -DisplayName \"<Your Application Display Name>\" -HomePage \"<https://YourApplicationHomePage>\" -IdentifierUris \"<https://YouApplicationUri>\" -KeyValue $keyValue -KeyType AsymmetricX509Cert       \n        \n    Or, use the second example to assign key credentials.\n\n         $azureAdApplication = New-AzureADApplication -DisplayName \"<Your Application Display Name>\" -HomePage \"<https://YourApplicationHomePage>\" -IdentifierUris \"<https://YouApplicationUri>\" -KeyCredentials $keyCredential\n\n    Examine the new application object. The **ApplicationId** property is needed for creating service principals, role assignments and acquiring JWT tokens.\n\n        PS C:\\> $azureAdApplication\n\n        Type                    : Application\n        ApplicationId           : 76fa8d97-f07e-4b9a-b871-a57a7acd777a\n        ApplicationObjectId     : c36b7b57-a949-4401-b381-18a5210aff10\n        AvailableToOtherTenants : False\n        AppPermissions          : {{\n                            \"claimValue\": \"user_impersonation\",\n                            \"description\": \"Allow the application to access <Your Application Display Name> on behalf of the signed-in\n                          user.\",\n                            \"directAccessGrantTypes\": [],\n                            \"displayName\": \"Access <Your Application Display Name>\",\n                            \"impersonationAccessGrantTypes\": [\n                              {\n                                \"impersonated\": \"User\",\n                                \"impersonator\": \"Application\"\n                              }\n                            ],\n                            \"isDisabled\": false,\n                            \"origin\": \"Application\",\n                            \"permissionId\": \"9f13c6c6-35ba-43d6-b8b3-6a87aa641388\",\n                            \"resourceScopeType\": \"Personal\",\n                            \"userConsentDescription\": \"Allow the application to access <Your Application Display Name> on your behalf.\",\n                            \"userConsentDisplayName\": \"Access <Your Application Display Name>\",\n                            \"lang\": null\n                          }}\n\n4. Create a service principal for your application.\n\n        PS C:\\> New-AzureADServicePrincipal -ApplicationId $azureAdApplication.ApplicationId\n\n    You have now created a service principal in the directory, but the service does not have any permissions or scope assigned. You will need to explicitly grant the service principal permissions to perform operations at some scope.\n\n5. Grant the service principal permissions on your subscription. In this sample you will grant the service principal the permission to Read all resources in the subscription. For the **ServicePrincipalName** parameter, provie either the **ApplicationId** or the **IdentifierUris** that you used when creating the application. For more information on role-based access control, see [Managing and Auditing Access to Resources](azure-portal/resource-group-rbac.md)\n\n        PS C:\\> New-AzureRoleAssignment -RoleDefinitionName Reader -ServicePrincipalName $azureAdApplication.ApplicationId\n\n6. To authenticate from an application, include the following .NET code. After retrieving the client, you can access resources in the subscription.\n\n        string clientId = \"<Application ID for your AAD app>\"; \n        var subscriptionId = \"<Your Azure SubscriptionId>\"; \n        string tenant = \"<Tenant id or tenant name>\"; \n\n        var authContext = new AuthenticationContext(string.Format(\"https://login.windows.net/{0}\", tenant)); \n\n        X509Certificate2 cert = null; \n        X509Store store = new X509Store(StoreName.My, StoreLocation.CurrentUser); \n        string certName = \"examplecert\"; \n        try \n        { \n            store.Open(OpenFlags.ReadOnly); \n            var certCollection = store.Certificates; \n            var certs = certCollection.Find(X509FindType.FindBySubjectName, certName, false); \n            cert = certs[0]; \n        } \n        finally \n        { \n            store.Close(); \n        }        \n\n        var certCred = new ClientAssertionCertificate(clientId, cert); \n        var token = authContext.AcquireToken(\"https://management.core.windows.net/\", certCred); \n        var creds = new TokenCloudCredentials(subscriptionId, token.AccessToken); \n        var client = new ResourceManagementClient(creds); \n        \n\n## Authenticate service principal with password - Azure CLI\n\nYou will start by creating a service principal. To do this we must use create an application in the directory. This section will walk through creating a new application in the directory.\n\n1. Switch to Azure Resource Manager mode and sign in to your account.\n\n        azure config mode arm\n        azure login\n\n2. Create a new AAD Application by running the **azure ad app create** command. Provide a display name for your application, the URI to a page that describes your application (the link is not verified), the URIs that identify your application, and the password for your application identity.\n\n        azure ad app create --name \"<Your Application Display Name>\" --home-page \"<https://YourApplicationHomePage>\" --identifier-uris \"<https://YouApplicationUri>\" --password <Your_Password>\n        \n    The Azure AD application is returned. The ApplicationId property is needed for creating service principals, role assignments and acquiring JWT tokens. \n\n        info:    Executing command ad app create\n        + Creating application exampleapp                                                \n        data:    Application Id:          b57dd71d-036c-4840-865e-23b71d8098ec\n        data:    Application Object Id:   d5c519e2-6149-447e-b323-88d2c4ea27de\n        data:    Application Permissions:  \n        data:                             claimValue:  user_impersonation\n        data:                             description:  Allow the application to access exampleapp on behalf of the signed-in user.\n        ...\n        info:    ad app create command OK\n\n3. Create a service principal for your application. Provide the application id that was returned in the previous step.\n\n        azure ad sp create b57dd71d-036c-4840-865e-23b71d8098ec\n        \n    The new service principal is returned. The Object Id is needed when granting permissions.\n    \n        info:    Executing command ad sp create\n        + Creating service principal for application b57dd71d-036c-4840-865e-23b71d8098ec\n        data:    Object Id:               47193a0a-63e4-46bd-9bee-6a9f6f9c03cb\n        data:    Display Name:            exampleapp\n        ...\n        info:    ad sp create command OK\n\n    You have now created a service principal in the directory, but the service does not have any permissions or scope assigned. You will need to explicitly grant the service principal permissions to perform operations at some scope.\n\n4. Grant the service principal permissions on your subscription. In this sample you will grant the service principal the permission to Read all resources in the subscription. For the **ServicePrincipalName** parameter, provie either the **ApplicationId** or the **IdentifierUris** that you used when creating the application. For more information on role-based access control, see [Managing and Auditing Access to Resources](azure-portal/resource-group-rbac.md)\n\n        azure role assignment create --objectId 47193a0a-63e4-46bd-9bee-6a9f6f9c03cb -o Reader -c /subscriptions/{subscriptionId}/\n\n5. Determine the **TenantId** of the tenant that the service principal's role assignment resides by listing the accounts and looking for the **TenantId** property in the output.\n\n        azure account list\n\n6. Sign-in using the service principal as your identity. For the user name, use the **ApplicationId** that you used when creating the application. For the password, use the one you specified when creating the account.\n\n        azure login -u \"<ApplicationId>\" -p \"<password>\" --service-principal --tenant \"<TenantId>\"\n\n    You should now be authenticated as the service principal for the AAD application that you created.\n\n## Next Steps\n  \n- For an overivew of role-based access control, see [Managing and Auditing Access to Resources](azure-portal/resource-group-rbac.md)  \n- To learn about using the portal with service principals, see [Create a new Azure Service Principal using the Azure portal](./resource-group-create-service-principal-portal.md)  \n- For guidance on implementing security with Azure Resource Manager, see [Security considerations for Azure Resource Manager](best-practices-resource-manager-security.md)\n\n\n<!-- Images. -->\n[1]: ./media/resource-group-authenticate-service-principal/arm-get-credential.png\n\ntest\n"
}