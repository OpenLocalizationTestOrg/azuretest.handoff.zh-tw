<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to Encode an Asset using Azure Media Encoder</source>
          <target state="new">How to Encode an Asset using Azure Media Encoder</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use the Azure Media Encoder to encode media content on Media Services.</source>
          <target state="new">Learn how to use the Azure Media Encoder to encode media content on Media Services.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Code samples use REST API.</source>
          <target state="new">Code samples use REST API.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to encode an asset using Azure Media Encoder</source>
          <target state="new">How to encode an asset using Azure Media Encoder</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>.NET</source>
          <target state="new">.NET</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>REST</source>
          <target state="new">REST</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Portal</source>
          <target state="new">Portal</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In order to deliver digital video over the internet you must compress the media.</source>
          <target state="new">In order to deliver digital video over the internet you must compress the media.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Digital video files are quite large and may be too big to deliver over the internet or for your customers’ devices to display properly.</source>
          <target state="new">Digital video files are quite large and may be too big to deliver over the internet or for your customers’ devices to display properly.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Encoding is the process of compressing video and audio so your customers can view your media.</source>
          <target state="new">Encoding is the process of compressing video and audio so your customers can view your media.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Encoding jobs are one of the most common processing operations in Media Services.</source>
          <target state="new">Encoding jobs are one of the most common processing operations in Media Services.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You create encoding jobs to convert media files from one encoding to another.</source>
          <target state="new">You create encoding jobs to convert media files from one encoding to another.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you encode, you can use the Media Services built-in Media Encoder.</source>
          <target state="new">When you encode, you can use the Media Services built-in Media Encoder.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also use an encoder provided by a Media Services partner; third party encoders are available through the Azure Marketplace.</source>
          <target state="new">You can also use an encoder provided by a Media Services partner; third party encoders are available through the Azure Marketplace.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can specify the details of encoding tasks by using preset strings defined for your encoder, or by using preset configuration files.</source>
          <target state="new">You can specify the details of encoding tasks by using preset strings defined for your encoder, or by using preset configuration files.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To see the types of presets that are available, see <bpt id="p1">[</bpt>Task Presets for Azure Media Services<ept id="p1">](https://msdn.microsoft.com/library/azure/dn619392.aspx)</ept>.</source>
          <target state="new">To see the types of presets that are available, see <bpt id="p1">[</bpt>Task Presets for Azure Media Services<ept id="p1">](https://msdn.microsoft.com/library/azure/dn619392.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you used a third party encoder, you should <bpt id="p1">[</bpt>validate your files<ept id="p1">](https://msdn.microsoft.com/library/azure/dn750842.aspx)</ept>.</source>
          <target state="new">If you used a third party encoder, you should <bpt id="p1">[</bpt>validate your files<ept id="p1">](https://msdn.microsoft.com/library/azure/dn750842.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Each Job can have one or more Tasks depending on the type of processing that you want to accomplish.</source>
          <target state="new">Each Job can have one or more Tasks depending on the type of processing that you want to accomplish.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Through the REST API, you can create Jobs and their related Tasks in one of two ways:</source>
          <target state="new">Through the REST API, you can create Jobs and their related Tasks in one of two ways:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Tasks can be defined inline through the Tasks navigation property on Job entities, or</source>
          <target state="new">Tasks can be defined inline through the Tasks navigation property on Job entities, or</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>through OData batch processing.</source>
          <target state="new">through OData batch processing.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It is recommended to always encode your mezzanine files into an adaptive bitrate MP4 set and then convert the set to the desired format using the <bpt id="p1">[</bpt>Dynamic Packaging<ept id="p1">](https://msdn.microsoft.com/library/azure/jj889436.aspx)</ept>.</source>
          <target state="new">It is recommended to always encode your mezzanine files into an adaptive bitrate MP4 set and then convert the set to the desired format using the <bpt id="p1">[</bpt>Dynamic Packaging<ept id="p1">](https://msdn.microsoft.com/library/azure/jj889436.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To take advantage of dynamic packaging, you must first get at least one On-demand streaming unit for the streaming endpoint from which you plan to delivery your content.</source>
          <target state="new">To take advantage of dynamic packaging, you must first get at least one On-demand streaming unit for the streaming endpoint from which you plan to delivery your content.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to Scale Media Services<ept id="p1">](media-services-manage-origins.md#scale_streaming_endpoints)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>How to Scale Media Services<ept id="p1">](media-services-manage-origins.md#scale_streaming_endpoints)</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If your output asset is storage encrypted, you must configure asset delivery policy.</source>
          <target state="new">If your output asset is storage encrypted, you must configure asset delivery policy.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Configuring asset delivery policy<ept id="p1">](media-services-rest-configure-asset-delivery-policy.md)</ept>.</source>
          <target state="new">For more information see <bpt id="p1">[</bpt>Configuring asset delivery policy<ept id="p1">](media-services-rest-configure-asset-delivery-policy.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>Before you start referencing media processors, verify that you have the correct media processor ID.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>Before you start referencing media processors, verify that you have the correct media processor ID.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Get Media Processors<ept id="p1">](media-services-rest-get-media-processor.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Get Media Processors<ept id="p1">](media-services-rest-get-media-processor.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Create a job with a single encoding task</source>
          <target state="new">Create a job with a single encoding task</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> When working with the Media Services REST API, the following considerations apply:</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> When working with the Media Services REST API, the following considerations apply:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.</source>
          <target state="new">When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Setup for Media Services REST API Development<ept id="p1">](media-services-rest-how-to-use.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Setup for Media Services REST API Development<ept id="p1">](media-services-rest-how-to-use.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.</source>
          <target state="new">After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You must make subsequent calls to the new URI as described in <bpt id="p1">[</bpt>Connecting to Media Services using REST API<ept id="p1">](media-services-rest-connect_programmatically.md)</ept>.</source>
          <target state="new">You must make subsequent calls to the new URI as described in <bpt id="p1">[</bpt>Connecting to Media Services using REST API<ept id="p1">](media-services-rest-connect_programmatically.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following example shows you how to create and post a Job with one Task set to encode a video at a specific resolution and quality.</source>
          <target state="new">The following example shows you how to create and post a Job with one Task set to encode a video at a specific resolution and quality.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When encoding with Azure Media Encoder, you can use task configuration presets specified <bpt id="p1">[</bpt>here<ept id="p1">](https://msdn.microsoft.com/library/azure/dn619389.aspx)</ept>.</source>
          <target state="new">When encoding with Azure Media Encoder, you can use task configuration presets specified <bpt id="p1">[</bpt>here<ept id="p1">](https://msdn.microsoft.com/library/azure/dn619389.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="new">Request:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Response:</source>
          <target state="new">Response:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Set the output asset's name</source>
          <target state="new">Set the output asset's name</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following example shows how to set the assetName attribute:</source>
          <target state="new">The following example shows how to set the assetName attribute:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Considerations</source>
          <target state="new">Considerations</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>TaskBody properties MUST use literal XML to define the number of input, or output assets that will be used by the Task.</source>
          <target state="new">TaskBody properties MUST use literal XML to define the number of input, or output assets that will be used by the Task.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The Task topic contains the XML Schema Definition for the XML.</source>
          <target state="new">The Task topic contains the XML Schema Definition for the XML.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the TaskBody definition, each inner value for</source>
          <target state="new">In the TaskBody definition, each inner value for</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="new">and</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>must be set as JobInputAsset(value) or JobOutputAsset(value).</source>
          <target state="new">must be set as JobInputAsset(value) or JobOutputAsset(value).</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A task can have multiple output assets.</source>
          <target state="new">A task can have multiple output assets.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>One JobOutputAsset(x) can only be used once as an output of a task in a job.</source>
          <target state="new">One JobOutputAsset(x) can only be used once as an output of a task in a job.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can specify JobInputAsset or JobOutputAsset as an input asset of a task.</source>
          <target state="new">You can specify JobInputAsset or JobOutputAsset as an input asset of a task.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Tasks must not form a cycle.</source>
          <target state="new">Tasks must not form a cycle.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The value parameter that you pass to JobInputAsset or JobOutputAsset represents the index value for an Asset.</source>
          <target state="new">The value parameter that you pass to JobInputAsset or JobOutputAsset represents the index value for an Asset.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The actual Assets are defined in the InputMediaAssets and OutputMediaAssets navigation properties on the Job entity definition.</source>
          <target state="new">The actual Assets are defined in the InputMediaAssets and OutputMediaAssets navigation properties on the Job entity definition.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Because Media Services is built on OData v3, the individual assets in InputMediaAssets and OutputMediaAssets navigation property collections are referenced through a "__metadata : uri" name-value pair.</source>
          <target state="new">Because Media Services is built on OData v3, the individual assets in InputMediaAssets and OutputMediaAssets navigation property collections are referenced through a "__metadata : uri" name-value pair.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>InputMediaAssets maps to one or more Assets you have created in Media Services.</source>
          <target state="new">InputMediaAssets maps to one or more Assets you have created in Media Services.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>OutputMediaAssets are created by the system.</source>
          <target state="new">OutputMediaAssets are created by the system.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>They do not reference an existing asset.</source>
          <target state="new">They do not reference an existing asset.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>OutputMediaAssets can be named using the assetName attribute.</source>
          <target state="new">OutputMediaAssets can be named using the assetName attribute.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If this attribute is not present, then the name of the OutputMediaAsset will be whatever the inner text value of the</source>
          <target state="new">If this attribute is not present, then the name of the OutputMediaAsset will be whatever the inner text value of the</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>element is with a suffix of either the Job Name value, or the Job Id value (in the case where the Name property isn't defined).</source>
          <target state="new">element is with a suffix of either the Job Name value, or the Job Id value (in the case where the Name property isn't defined).</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For example, if you set a value for assetName to "Sample", then the OutputMediaAsset Name property would be set to "Sample".</source>
          <target state="new">For example, if you set a value for assetName to "Sample", then the OutputMediaAsset Name property would be set to "Sample".</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>However, if you did not set a value for assetName, but did set the job name to "NewJob", then the OutputMediaAsset Name would be "JobOutputAsset(value)_NewJob".</source>
          <target state="new">However, if you did not set a value for assetName, but did set the job name to "NewJob", then the OutputMediaAsset Name would be "JobOutputAsset(value)_NewJob".</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Create a job with chained tasks</source>
          <target state="new">Create a job with chained tasks</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In many application scenarios, developers want to create a series of processing tasks.</source>
          <target state="new">In many application scenarios, developers want to create a series of processing tasks.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In Media Services, you can create a series of chained tasks.</source>
          <target state="new">In Media Services, you can create a series of chained tasks.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Each task performs different processing steps and can use different media processors.</source>
          <target state="new">Each task performs different processing steps and can use different media processors.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The chained tasks can hand off an asset from one task to another, performing a linear sequence of tasks on the asset.</source>
          <target state="new">The chained tasks can hand off an asset from one task to another, performing a linear sequence of tasks on the asset.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>However, the tasks performed in a job are not required to be in a sequence.</source>
          <target state="new">However, the tasks performed in a job are not required to be in a sequence.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When you create a chained task, the chained <bpt id="p1">**</bpt>ITask<ept id="p1">**</ept> objects are created in a single <bpt id="p2">**</bpt>IJob<ept id="p2">**</ept> object.</source>
          <target state="new">When you create a chained task, the chained <bpt id="p1">**</bpt>ITask<ept id="p1">**</ept> objects are created in a single <bpt id="p2">**</bpt>IJob<ept id="p2">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> There is currently a limit of 30 tasks per job.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> There is currently a limit of 30 tasks per job.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you need to chain more than 30 tasks, create more than one job to contain the tasks.</source>
          <target state="new">If you need to chain more than 30 tasks, create more than one job to contain the tasks.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Considerations</source>
          <target state="new">Considerations</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To enable task chaining:</source>
          <target state="new">To enable task chaining:</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A job must have at least 2 tasks</source>
          <target state="new">A job must have at least 2 tasks</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>There must be at least one task whose input is output of another task in the job.</source>
          <target state="new">There must be at least one task whose input is output of another task in the job.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Use OData batch processing</source>
          <target state="new">Use OData batch processing</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following example shows how to use OData batch processing to create a job and tasks.</source>
          <target state="new">The following example shows how to use OData batch processing to create a job and tasks.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For information on batch processing, see <bpt id="p1">[</bpt>Open Data Protocol (OData) Batch Processing<ept id="p1">](http://www.odata.org/documentation/odata-version-3-0/batch-processing/)</ept>.</source>
          <target state="new">For information on batch processing, see <bpt id="p1">[</bpt>Open Data Protocol (OData) Batch Processing<ept id="p1">](http://www.odata.org/documentation/odata-version-3-0/batch-processing/)</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Create a Job using a JobTemplate</source>
          <target state="new">Create a Job using a JobTemplate</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When processing multiple Assets using a common set of Tasks, JobTemplates are useful to specify the default Task presets, order of Tasks, and so on.</source>
          <target state="new">When processing multiple Assets using a common set of Tasks, JobTemplates are useful to specify the default Task presets, order of Tasks, and so on.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a JobTemplate with a TaskTemplate defined inline.</source>
          <target state="new">The following example shows how to create a JobTemplate with a TaskTemplate defined inline.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The TaskTemplate uses the Azure Media Encoder as the MediaProcessor to encode the Asset file; however, other MediaProcessors could be used as well.</source>
          <target state="new">The TaskTemplate uses the Azure Media Encoder as the MediaProcessor to encode the Asset file; however, other MediaProcessors could be used as well.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>Unlike other Media Services entities, you must define a new GUID identifier for each TaskTemplate and place it in the taskTemplateId and Id property in your request body.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>Unlike other Media Services entities, you must define a new GUID identifier for each TaskTemplate and place it in the taskTemplateId and Id property in your request body.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The content identification scheme must follow the scheme described in Identify Azure Media Services Entities.</source>
          <target state="new">The content identification scheme must follow the scheme described in Identify Azure Media Services Entities.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Also, JobTemplates cannot be updated.</source>
          <target state="new">Also, JobTemplates cannot be updated.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Instead, you must create a new one with your updated changes.</source>
          <target state="new">Instead, you must create a new one with your updated changes.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If successful, the following response is returned:</source>
          <target state="new">If successful, the following response is returned:</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a Job referencing a JobTemplate Id:</source>
          <target state="new">The following example shows how to create a Job referencing a JobTemplate Id:</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If successful, the following response is returned:</source>
          <target state="new">If successful, the following response is returned:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Now that you know how to create a job to encode an assset, go to the <bpt id="p1">[</bpt>How To Check Job Progress with Media Services<ept id="p1">](media-services-rest-check-job-progress.md)</ept> topic.</source>
          <target state="new">Now that you know how to create a job to encode an assset, go to the <bpt id="p1">[</bpt>How To Check Job Progress with Media Services<ept id="p1">](media-services-rest-check-job-progress.md)</ept> topic.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="new">See Also</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Get Media Processors<ept id="p1">](media-services-rest-get-media-processor.md)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Get Media Processors<ept id="p1">](media-services-rest-get-media-processor.md)</ept></target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf8c6faba10b3eb2870a1e5d499b4d8c7c02a702</xliffext:olfilehash>
  </header>
</xliff>