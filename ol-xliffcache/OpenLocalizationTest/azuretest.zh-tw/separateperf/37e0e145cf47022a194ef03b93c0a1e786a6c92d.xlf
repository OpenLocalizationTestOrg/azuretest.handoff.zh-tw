<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use C# with Hive and Pig on Hadoop in HDInsight | Microsoft Azure</source>
          <target state="new">Use C# with Hive and Pig on Hadoop in HDInsight | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use C# user-defined functions (UDF) with Hive and Pig streaming in Azure HDInsight.</source>
          <target state="new">Learn how to use C# user-defined functions (UDF) with Hive and Pig streaming in Azure HDInsight.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use C# user-defined functions with Hive and Pig streaming on Hadoop in HDInsight</source>
          <target state="new">Use C# user-defined functions with Hive and Pig streaming on Hadoop in HDInsight</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Hive and Pig are great for working with data in Azure HDInsight, but sometimes you need a more general-purpose language.</source>
          <target state="new">Hive and Pig are great for working with data in Azure HDInsight, but sometimes you need a more general-purpose language.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Both Hive and Pig allow you to call external code through user-defined functions (UDFs) or streaming.</source>
          <target state="new">Both Hive and Pig allow you to call external code through user-defined functions (UDFs) or streaming.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this document, learn how to use C# with Hive and Pig.</source>
          <target state="new">In this document, learn how to use C# with Hive and Pig.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows 7, Windows 8, or Windows 8.1.</source>
          <target state="new">Windows 7, Windows 8, or Windows 8.1.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Visual Studio with the following versions:</source>
          <target state="new">Visual Studio with the following versions:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Visual Studio 2012 Professional/Premium/Ultimate with <bpt id="p1">[</bpt>Update 4<ept id="p1">](http://www.microsoft.com/download/details.aspx?id=39305)</ept></source>
          <target state="new">Visual Studio 2012 Professional/Premium/Ultimate with <bpt id="p1">[</bpt>Update 4<ept id="p1">](http://www.microsoft.com/download/details.aspx?id=39305)</ept></target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013 Community/Professional/Premium/Ultimate with <bpt id="p1">[</bpt>Update 4<ept id="p1">](https://www.microsoft.com/download/details.aspx?id=44921)</ept></source>
          <target state="new">Visual Studio 2013 Community/Professional/Premium/Ultimate with <bpt id="p1">[</bpt>Update 4<ept id="p1">](https://www.microsoft.com/download/details.aspx?id=44921)</ept></target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Visual Studio 2015 Preview</source>
          <target state="new">Visual Studio 2015 Preview</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Hadoop on HDInsight cluster - see <bpt id="p1">[</bpt>Provision an HDInsight cluster<ept id="p1">](hdinsight-provision-clusters.md)</ept> for steps to create a cluster</source>
          <target state="new">Hadoop on HDInsight cluster - see <bpt id="p1">[</bpt>Provision an HDInsight cluster<ept id="p1">](hdinsight-provision-clusters.md)</ept> for steps to create a cluster</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Hadoop Tools for Visual Studio.</source>
          <target state="new">Hadoop Tools for Visual Studio.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Get started using HDInsight Hadoop Tools for Visual Studio<ept id="p1">](hdinsight-hadoop-visual-studio-tools-get-started.md)</ept> for steps on installing and configuring the tools.</source>
          <target state="new">See <bpt id="p1">[</bpt>Get started using HDInsight Hadoop Tools for Visual Studio<ept id="p1">](hdinsight-hadoop-visual-studio-tools-get-started.md)</ept> for steps on installing and configuring the tools.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>.NET on HDInsight</source>
          <target state="new">.NET on HDInsight</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The .NET common language runtime (CLR) and frameworks are installed by default on Windows-based HDInsight clusters.</source>
          <target state="new">The .NET common language runtime (CLR) and frameworks are installed by default on Windows-based HDInsight clusters.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This allows you to use C# applications with Hive and Pig streaming (data is passed between Hive/Pig and the C# application via stdout/stdin).</source>
          <target state="new">This allows you to use C# applications with Hive and Pig streaming (data is passed between Hive/Pig and the C# application via stdout/stdin).</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Currently there is no support for running .NET Framework applications on Linux-based HDInsight clusters.</source>
          <target state="new">Currently there is no support for running .NET Framework applications on Linux-based HDInsight clusters.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>.NET and streaming</source>
          <target state="new">.NET and streaming</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Streaming involves Hive and Pig passing data to an external application over stdout, and receiving the results over stdin.</source>
          <target state="new">Streaming involves Hive and Pig passing data to an external application over stdout, and receiving the results over stdin.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For C# applications, this is most easily accomplished via <ph id="ph1">`Console.ReadLine()`</ph> and <ph id="ph2">`Console.WriteLine()`</ph>.</source>
          <target state="new">For C# applications, this is most easily accomplished via <ph id="ph1">`Console.ReadLine()`</ph> and <ph id="ph2">`Console.WriteLine()`</ph>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Since Hive and Pig need to invoke the application at run time, the <bpt id="p1">**</bpt>Console Application<ept id="p1">**</ept> template should be used for your C# projects.</source>
          <target state="new">Since Hive and Pig need to invoke the application at run time, the <bpt id="p1">**</bpt>Console Application<ept id="p1">**</ept> template should be used for your C# projects.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Hive and C&amp;#35;</source>
          <target state="new">Hive and C&amp;#35;</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Create the C# project</source>
          <target state="new">Create the C# project</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Open Visual Studio and create a new solution.</source>
          <target state="new">Open Visual Studio and create a new solution.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For the project type, select <bpt id="p1">**</bpt>Console Application<ept id="p1">**</ept>, and name the new project <bpt id="p2">**</bpt>HiveCSharp<ept id="p2">**</ept>.</source>
          <target state="new">For the project type, select <bpt id="p1">**</bpt>Console Application<ept id="p1">**</ept>, and name the new project <bpt id="p2">**</bpt>HiveCSharp<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Replace the contents of <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> with the following:</source>
          <target state="new">Replace the contents of <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> with the following:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Build the project.</source>
          <target state="new">Build the project.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Upload to storage</source>
          <target state="new">Upload to storage</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>.</source>
          <target state="new">In Visual Studio, open <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept>, and then expand <bpt id="p2">**</bpt>HDInsight<ept id="p2">**</ept>.</source>
          <target state="new">Expand <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept>, and then expand <bpt id="p2">**</bpt>HDInsight<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If prompted, enter your Azure subscription credentials, and then click <bpt id="p1">**</bpt>Sign In<ept id="p1">**</ept>.</source>
          <target state="new">If prompted, enter your Azure subscription credentials, and then click <bpt id="p1">**</bpt>Sign In<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Expand the HDInsight cluster that you wish to deploy this application to, and then expand <bpt id="p1">**</bpt>Default Storage Account<ept id="p1">**</ept>.</source>
          <target state="new">Expand the HDInsight cluster that you wish to deploy this application to, and then expand <bpt id="p1">**</bpt>Default Storage Account<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Server Explorer showing the storage account for the cluster</source>
          <target state="new">Server Explorer showing the storage account for the cluster</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Double-click <bpt id="p1">**</bpt>Default Container<ept id="p1">**</ept> for the cluster.</source>
          <target state="new">Double-click <bpt id="p1">**</bpt>Default Container<ept id="p1">**</ept> for the cluster.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This will open a new window that displays the contents of the default container.</source>
          <target state="new">This will open a new window that displays the contents of the default container.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Click the upload icon, and then browse to the <bpt id="p1">**</bpt>bin\debug<ept id="p1">**</ept> folder for the <bpt id="p2">**</bpt>HiveCSharp<ept id="p2">**</ept> project.</source>
          <target state="new">Click the upload icon, and then browse to the <bpt id="p1">**</bpt>bin\debug<ept id="p1">**</ept> folder for the <bpt id="p2">**</bpt>HiveCSharp<ept id="p2">**</ept> project.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Finally, select the <bpt id="p1">**</bpt>HiveCSharp.exe<ept id="p1">**</ept> file and click <bpt id="p2">**</bpt>Ok<ept id="p2">**</ept>.</source>
          <target state="new">Finally, select the <bpt id="p1">**</bpt>HiveCSharp.exe<ept id="p1">**</ept> file and click <bpt id="p2">**</bpt>Ok<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>upload icon</source>
          <target state="new">upload icon</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Once the upload has finished, you will be able to use the application from a Hive query.</source>
          <target state="new">Once the upload has finished, you will be able to use the application from a Hive query.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Hive query</source>
          <target state="new">Hive query</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>.</source>
          <target state="new">In Visual Studio, open <bpt id="p1">**</bpt>Server Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept>, and then expand <bpt id="p2">**</bpt>HDInsight<ept id="p2">**</ept>.</source>
          <target state="new">Expand <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept>, and then expand <bpt id="p2">**</bpt>HDInsight<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Right-click the cluster that you deployed the <bpt id="p1">**</bpt>HiveCSharp<ept id="p1">**</ept> application to, and then select <bpt id="p2">**</bpt>Write a Hive Query<ept id="p2">**</ept>.</source>
          <target state="new">Right-click the cluster that you deployed the <bpt id="p1">**</bpt>HiveCSharp<ept id="p1">**</ept> application to, and then select <bpt id="p2">**</bpt>Write a Hive Query<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Use the following for the Hive query:</source>
          <target state="new">Use the following for the Hive query:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This selects the <ph id="ph1">`clientid`</ph>, <ph id="ph2">`devicemake`</ph>, and <ph id="ph3">`devicemodel`</ph> fields from <ph id="ph4">`hivesampletable`</ph>, and passes the fields to the HiveCSharp.exe application.</source>
          <target state="new">This selects the <ph id="ph1">`clientid`</ph>, <ph id="ph2">`devicemake`</ph>, and <ph id="ph3">`devicemodel`</ph> fields from <ph id="ph4">`hivesampletable`</ph>, and passes the fields to the HiveCSharp.exe application.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The query expects the application to return three fields, which are stored as <ph id="ph1">`clientid`</ph>, <ph id="ph2">`phoneLabel`</ph>, and <ph id="ph3">`phoneHash`</ph>.</source>
          <target state="new">The query expects the application to return three fields, which are stored as <ph id="ph1">`clientid`</ph>, <ph id="ph2">`phoneLabel`</ph>, and <ph id="ph3">`phoneHash`</ph>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The query also expects to find HiveCSharp.exe in the root of the default storage container (<ph id="ph1">`add file wasb:///HiveCSharp.exe`</ph>).</source>
          <target state="new">The query also expects to find HiveCSharp.exe in the root of the default storage container (<ph id="ph1">`add file wasb:///HiveCSharp.exe`</ph>).</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> to submit the job to the HDInsight cluster.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> to submit the job to the HDInsight cluster.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Hive Job Summary<ept id="p1">**</ept> window will open.</source>
          <target state="new">The <bpt id="p1">**</bpt>Hive Job Summary<ept id="p1">**</ept> window will open.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> to refresh the summary until <bpt id="p2">**</bpt>Job Status<ept id="p2">**</ept> changes to <bpt id="p3">**</bpt>Completed<ept id="p3">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> to refresh the summary until <bpt id="p2">**</bpt>Job Status<ept id="p2">**</ept> changes to <bpt id="p3">**</bpt>Completed<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To view the job output, click <bpt id="p1">**</bpt>Job Output<ept id="p1">**</ept>.</source>
          <target state="new">To view the job output, click <bpt id="p1">**</bpt>Job Output<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Pig and C&amp;#35;</source>
          <target state="new">Pig and C&amp;#35;</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Create the C# project</source>
          <target state="new">Create the C# project</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Open Visual Studio and create a new solution.</source>
          <target state="new">Open Visual Studio and create a new solution.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For the project type, select <bpt id="p1">**</bpt>Console Application<ept id="p1">**</ept>, and name the new project <bpt id="p2">**</bpt>PigUDF<ept id="p2">**</ept>.</source>
          <target state="new">For the project type, select <bpt id="p1">**</bpt>Console Application<ept id="p1">**</ept>, and name the new project <bpt id="p2">**</bpt>PigUDF<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Replace the contents of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file with the following:</source>
          <target state="new">Replace the contents of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file with the following:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This application will parse the lines sent from Pig, and reformat lines that begin with <ph id="ph1">`java.lang.Exception`</ph>.</source>
          <target state="new">This application will parse the lines sent from Pig, and reformat lines that begin with <ph id="ph1">`java.lang.Exception`</ph>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Save <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept>, and then build the project.</source>
          <target state="new">Save <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept>, and then build the project.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Upload the application</source>
          <target state="new">Upload the application</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Pig streaming expects the application to be local on the cluster file system.</source>
          <target state="new">Pig streaming expects the application to be local on the cluster file system.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Enable Remote Desktop for the HDInsight cluster, and then connect to it by following the instructions at <bpt id="p1">[</bpt>Connect to HDInsight clusters using RDP<ept id="p1">](hdinsight-administer-use-management-portal.md#rdp)</ept>.</source>
          <target state="new">Enable Remote Desktop for the HDInsight cluster, and then connect to it by following the instructions at <bpt id="p1">[</bpt>Connect to HDInsight clusters using RDP<ept id="p1">](hdinsight-administer-use-management-portal.md#rdp)</ept>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Once connected, copy <bpt id="p1">**</bpt>PigUDF.exe<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>bin/debug<ept id="p2">**</ept> directory for the PigUDF project on your local machine, and paste it to the <bpt id="p3">**</bpt>%PIG_HOME%<ept id="p3">**</ept> directory on the cluster.</source>
          <target state="new">Once connected, copy <bpt id="p1">**</bpt>PigUDF.exe<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>bin/debug<ept id="p2">**</ept> directory for the PigUDF project on your local machine, and paste it to the <bpt id="p3">**</bpt>%PIG_HOME%<ept id="p3">**</ept> directory on the cluster.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Use the application from Pig Latin</source>
          <target state="new">Use the application from Pig Latin</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>From the Remote Desktop session, start the Hadoop command line by using the <bpt id="p1">**</bpt>Hadoop Command Line<ept id="p1">**</ept> icon on the desktop.</source>
          <target state="new">From the Remote Desktop session, start the Hadoop command line by using the <bpt id="p1">**</bpt>Hadoop Command Line<ept id="p1">**</ept> icon on the desktop.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Use the following to start the Pig command line:</source>
          <target state="new">Use the following to start the Pig command line:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You will be presented with a <ph id="ph1">`grunt&gt;`</ph> prompt.</source>
          <target state="new">You will be presented with a <ph id="ph1">`grunt&gt;`</ph> prompt.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Enter the following to run a simple Pig job by using the .NET Framework application:</source>
          <target state="new">Enter the following to run a simple Pig job by using the .NET Framework application:</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DEFINE`</ph> statement creates an alias of <ph id="ph2">`streamer`</ph> for the pigudf.exe applications, and <ph id="ph3">`SHIP`</ph> distributes it across the nodes in the cluster.</source>
          <target state="new">The <ph id="ph1">`DEFINE`</ph> statement creates an alias of <ph id="ph2">`streamer`</ph> for the pigudf.exe applications, and <ph id="ph3">`SHIP`</ph> distributes it across the nodes in the cluster.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Later, <ph id="ph1">`streamer`</ph> is used with the <ph id="ph2">`STREAM`</ph> operator to process the single lines contained in LOG and return the data as a series of columns.</source>
          <target state="new">Later, <ph id="ph1">`streamer`</ph> is used with the <ph id="ph2">`STREAM`</ph> operator to process the single lines contained in LOG and return the data as a series of columns.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The application name that is used for streaming must be surrounded by the \` (backtick) character when aliased, and ' (single quote) when used with <ph id="ph2">`SHIP`</ph>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The application name that is used for streaming must be surrounded by the \` (backtick) character when aliased, and ' (single quote) when used with <ph id="ph2">`SHIP`</ph>.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>After entering the last line, the job should start.</source>
          <target state="new">After entering the last line, the job should start.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Eventually it will return output similar to the following:</source>
          <target state="new">Eventually it will return output similar to the following:</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In this document, you have learned how to use a .NET Framework application from Hive and Pig on HDInsight.</source>
          <target state="new">In this document, you have learned how to use a .NET Framework application from Hive and Pig on HDInsight.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If you would like to learn how to use Python with Hive and Pig, see <bpt id="p1">[</bpt>Use Python with Hive and Pig in HDInsight<ept id="p1">](hdinsight-python.md)</ept>.</source>
          <target state="new">If you would like to learn how to use Python with Hive and Pig, see <bpt id="p1">[</bpt>Use Python with Hive and Pig in HDInsight<ept id="p1">](hdinsight-python.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For other ways to use Pig and Hive, and to learn about using MapReduce, see the following:</source>
          <target state="new">For other ways to use Pig and Hive, and to learn about using MapReduce, see the following:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Use Hive with HDInsight</source>
          <target state="new">Use Hive with HDInsight</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Use Pig with HDInsight</source>
          <target state="new">Use Pig with HDInsight</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Use MapReduce with HDInsight</source>
          <target state="new">Use MapReduce with HDInsight</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37e0e145cf47022a194ef03b93c0a1e786a6c92d</xliffext:olfilehash>
  </header>
</xliff>