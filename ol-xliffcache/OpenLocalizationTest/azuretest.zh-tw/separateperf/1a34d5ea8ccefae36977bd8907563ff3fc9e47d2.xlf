<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to Use iOS Client Library for Azure Mobile Services</source>
          <target state="new">How to Use iOS Client Library for Azure Mobile Services</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to Use iOS Client Library for Mobile Services</source>
          <target state="new">How to Use iOS Client Library for Mobile Services</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to Use iOS Client Library for Azure Mobile Services</source>
          <target state="new">How to Use iOS Client Library for Azure Mobile Services</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This guide teaches you to perform common scenarios using the Azure Mobile Services [iOS SDK].</source>
          <target state="new">This guide teaches you to perform common scenarios using the Azure Mobile Services [iOS SDK].</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you are new to Mobile Services, first complete [Mobile Services Quick Start] or [Add Mobile Services to Existing App] to configure your account, create a table, and create a mobile service.</source>
          <target state="new">If you are new to Mobile Services, first complete [Mobile Services Quick Start] or [Add Mobile Services to Existing App] to configure your account, create a table, and create a mobile service.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This guide uses the latest <bpt id="p1">[</bpt>iOS Mobile Services SDK<ept id="p1">](https://go.microsoft.com/fwLink/?LinkID=266533&amp;clcid=0x409)</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This guide uses the latest <bpt id="p1">[</bpt>iOS Mobile Services SDK<ept id="p1">](https://go.microsoft.com/fwLink/?LinkID=266533&amp;clcid=0x409)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If your project uses an older version of the SDK, first upgrade the framework in Xcode.</source>
          <target state="new">If your project uses an older version of the SDK, first upgrade the framework in Xcode.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="Setup"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Setup and Prerequisites</source>
          <target state="new"><ph id="ph1">&lt;a name="Setup"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Setup and Prerequisites</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This guide assumes that you have created a mobile service with a table.</source>
          <target state="new">This guide assumes that you have created a mobile service with a table.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information see [Create a table], or reuse the <ph id="ph1">`TodoItem`</ph> table created in [Mobile Services Quick Start] or [Add Mobile Services to Existing App].</source>
          <target state="new">For more information see [Create a table], or reuse the <ph id="ph1">`TodoItem`</ph> table created in [Mobile Services Quick Start] or [Add Mobile Services to Existing App].</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This guide assumes that the table has the same schema as the tables in those tutorials.</source>
          <target state="new">This guide assumes that the table has the same schema as the tables in those tutorials.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This guide also assumes that your Xcode references <ph id="ph1">`WindowsAzureMobileServices.framework`</ph> and imports <ph id="ph2">`WindowsAzureMobileServices/WindowsAzureMobileServices.h`</ph>.</source>
          <target state="new">This guide also assumes that your Xcode references <ph id="ph1">`WindowsAzureMobileServices.framework`</ph> and imports <ph id="ph2">`WindowsAzureMobileServices/WindowsAzureMobileServices.h`</ph>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="create-client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Create Mobile Services Client</source>
          <target state="new"><ph id="ph1">&lt;a name="create-client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Create Mobile Services Client</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To access an Azure mobile service in your project, create an <ph id="ph1">`MSClient`</ph> client object.</source>
          <target state="new">To access an Azure mobile service in your project, create an <ph id="ph1">`MSClient`</ph> client object.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Replace <ph id="ph1">`AppUrl`</ph> and <ph id="ph2">`AppKey`</ph> with the mobile service URL and the application key Dashboard values, respectively.</source>
          <target state="new">Replace <ph id="ph1">`AppUrl`</ph> and <ph id="ph2">`AppKey`</ph> with the mobile service URL and the application key Dashboard values, respectively.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="table-reference"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Create Table Reference</source>
          <target state="new"><ph id="ph1">&lt;a name="table-reference"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Create Table Reference</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To access or update data for your Azure mobile service, create a reference to the table.</source>
          <target state="new">To access or update data for your Azure mobile service, create a reference to the table.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Replace <ph id="ph1">`TodoItem`</ph> with the name of your table.</source>
          <target state="new">Replace <ph id="ph1">`TodoItem`</ph> with the name of your table.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="querying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Query Data</source>
          <target state="new"><ph id="ph1">&lt;a name="querying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Query Data</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To create a database query, query the <ph id="ph1">`MSTable`</ph> object.</source>
          <target state="new">To create a database query, query the <ph id="ph1">`MSTable`</ph> object.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following query gets all the items in <ph id="ph1">`TodoItem`</ph> and logs the text of each item.</source>
          <target state="new">The following query gets all the items in <ph id="ph1">`TodoItem`</ph> and logs the text of each item.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="filtering"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Filter Returned Data</source>
          <target state="new"><ph id="ph1">&lt;a name="filtering"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Filter Returned Data</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To filter results, there are many available options.</source>
          <target state="new">To filter results, there are many available options.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To filter using a predicate, use an <ph id="ph1">`NSPredicate`</ph> and <ph id="ph2">`readWithPredicate`</ph>.</source>
          <target state="new">To filter using a predicate, use an <ph id="ph1">`NSPredicate`</ph> and <ph id="ph2">`readWithPredicate`</ph>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following filters returned data to find only incomplete Todo items.</source>
          <target state="new">The following filters returned data to find only incomplete Todo items.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="query-object"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Use MSQuery</source>
          <target state="new"><ph id="ph1">&lt;a name="query-object"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Use MSQuery</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To perform a complex query (including sorting and paging), create an <ph id="ph1">`MSQuery`</ph> object, directly or by using a predicate:</source>
          <target state="new">To perform a complex query (including sorting and paging), create an <ph id="ph1">`MSQuery`</ph> object, directly or by using a predicate:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MSQuery`</ph> lets you control several query behaviors, including the following.</source>
          <target state="new"><ph id="ph1">`MSQuery`</ph> lets you control several query behaviors, including the following.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Execute an <ph id="ph1">`MSQuery`</ph> query by calling <ph id="ph2">`readWithCompletion`</ph> on it, as shown in the next example.</source>
          <target state="new">Execute an <ph id="ph1">`MSQuery`</ph> query by calling <ph id="ph2">`readWithCompletion`</ph> on it, as shown in the next example.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specify order of results</source>
          <target state="new">Specify order of results</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Limit which fields to return</source>
          <target state="new">Limit which fields to return</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Limit how many records to return</source>
          <target state="new">Limit how many records to return</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specify total count in response</source>
          <target state="new">Specify total count in response</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Specify custom query string parameters in request</source>
          <target state="new">Specify custom query string parameters in request</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Apply additional functions</source>
          <target state="new">Apply additional functions</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="sorting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Sort Data with MSQuery</source>
          <target state="new"><ph id="ph1">&lt;a name="sorting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Sort Data with MSQuery</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To sort results, let's look at an example.</source>
          <target state="new">To sort results, let's look at an example.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To first ascendingly by field <ph id="ph1">`text`</ph> and then descendingly by field <ph id="ph2">`completion`</ph>, invoke <ph id="ph3">`MSQuery`</ph> like so:</source>
          <target state="new">To first ascendingly by field <ph id="ph1">`text`</ph> and then descendingly by field <ph id="ph2">`completion`</ph>, invoke <ph id="ph3">`MSQuery`</ph> like so:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="paging"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Return Data in Pages with MSQuery</source>
          <target state="new"><ph id="ph1">&lt;a name="paging"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Return Data in Pages with MSQuery</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Mobile Services limits the amount of records that are returned in a single response.</source>
          <target state="new">Mobile Services limits the amount of records that are returned in a single response.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To control the number of records displayed to your users you must implement a paging system.</source>
          <target state="new">To control the number of records displayed to your users you must implement a paging system.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Paging is performed by using the following three properties of the <bpt id="p1">**</bpt>MSQuery<ept id="p1">**</ept> object:</source>
          <target state="new">Paging is performed by using the following three properties of the <bpt id="p1">**</bpt>MSQuery<ept id="p1">**</ept> object:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the following example, a simple function requests 5 records from the server and then appends them to the local collection of previously loaded records:</source>
          <target state="new">In the following example, a simple function requests 5 records from the server and then appends them to the local collection of previously loaded records:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="selecting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph><ph id="ph3">&lt;a name="parameters"&gt;</ph><ph id="ph4">&lt;/a&gt;</ph>How to: Limit Fields and Expand Query String Parameters with MSQuery</source>
          <target state="new"><ph id="ph1">&lt;a name="selecting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph><ph id="ph3">&lt;a name="parameters"&gt;</ph><ph id="ph4">&lt;/a&gt;</ph>How to: Limit Fields and Expand Query String Parameters with MSQuery</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To limit fields to be returned in a query, specify the names of the fields in the <bpt id="p1">**</bpt>selectFields<ept id="p1">**</ept> property.</source>
          <target state="new">To limit fields to be returned in a query, specify the names of the fields in the <bpt id="p1">**</bpt>selectFields<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This returns only the text and completed fields:</source>
          <target state="new">This returns only the text and completed fields:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To include additional query string parameters in the server request (for example, because a custom server-side script uses them), populate <ph id="ph1">`query.parameters`</ph> like so:</source>
          <target state="new">To include additional query string parameters in the server request (for example, because a custom server-side script uses them), populate <ph id="ph1">`query.parameters`</ph> like so:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="inserting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Insert Data</source>
          <target state="new"><ph id="ph1">&lt;a name="inserting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Insert Data</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To insert a new table row, create a new <ph id="ph1">`NSDictionary`</ph> and invoke <ph id="ph2">`table insert`</ph>.</source>
          <target state="new">To insert a new table row, create a new <ph id="ph1">`NSDictionary`</ph> and invoke <ph id="ph2">`table insert`</ph>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Mobile Services automatically generates new columns based on the <ph id="ph1">`NSDictionary`</ph> if [Dynamic Schema] is not disabled.</source>
          <target state="new">Mobile Services automatically generates new columns based on the <ph id="ph1">`NSDictionary`</ph> if [Dynamic Schema] is not disabled.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`id`</ph> is not provided, the backend automatically generates a new unique ID.</source>
          <target state="new">If <ph id="ph1">`id`</ph> is not provided, the backend automatically generates a new unique ID.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Provide your own <ph id="ph1">`id`</ph> to use email addresses, usernames, or your own custom values as ID.</source>
          <target state="new">Provide your own <ph id="ph1">`id`</ph> to use email addresses, usernames, or your own custom values as ID.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Providing your own ID may ease joins and business-oriented database logic.</source>
          <target state="new">Providing your own ID may ease joins and business-oriented database logic.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="modifying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Modify Data</source>
          <target state="new"><ph id="ph1">&lt;a name="modifying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Modify Data</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To update an existing row, modify an item and call <ph id="ph1">`update`</ph>:</source>
          <target state="new">To update an existing row, modify an item and call <ph id="ph1">`update`</ph>:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Alternatively, supply the row ID and the updated field:</source>
          <target state="new">Alternatively, supply the row ID and the updated field:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>At minimum, the <ph id="ph1">`id`</ph> attribute must be set when making updates.</source>
          <target state="new">At minimum, the <ph id="ph1">`id`</ph> attribute must be set when making updates.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="deleting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Delete Data</source>
          <target state="new"><ph id="ph1">&lt;a name="deleting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Delete Data</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To delete an item, invoke <ph id="ph1">`delete`</ph> with the item:</source>
          <target state="new">To delete an item, invoke <ph id="ph1">`delete`</ph> with the item:</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Alternatively, delete by providing a row ID:</source>
          <target state="new">Alternatively, delete by providing a row ID:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>At minimum, the <ph id="ph1">`id`</ph> attribute must be set when making deletes.</source>
          <target state="new">At minimum, the <ph id="ph1">`id`</ph> attribute must be set when making deletes.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Authenticate Users</source>
          <target state="new"><ph id="ph1">&lt;a name="authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Authenticate Users</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Azure Mobile Services supports various identity providers.</source>
          <target state="new">Azure Mobile Services supports various identity providers.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For a basic tutorial, see [Authentication].</source>
          <target state="new">For a basic tutorial, see [Authentication].</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Azure Mobile Services supports two authentication workflows:</source>
          <target state="new">Azure Mobile Services supports two authentication workflows:</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Server-managed Login<ept id="p1">**</ept>: Azure Mobile Services manages the login process on behalf of your app.</source>
          <target state="new"><bpt id="p1">**</bpt>Server-managed Login<ept id="p1">**</ept>: Azure Mobile Services manages the login process on behalf of your app.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It displays a provider-specific login page and authenticates with the chosen provider.</source>
          <target state="new">It displays a provider-specific login page and authenticates with the chosen provider.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Client-managed Login<ept id="p1">**</ept>: The <bpt id="p2">_</bpt>app<ept id="p2">_</ept> requests a token from the identity provider and presents this token to Azure Mobile Services for authentication.</source>
          <target state="new"><bpt id="p1">**</bpt>Client-managed Login<ept id="p1">**</ept>: The <bpt id="p2">_</bpt>app<ept id="p2">_</ept> requests a token from the identity provider and presents this token to Azure Mobile Services for authentication.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When authentication succeeds, you get back a user object with a user ID value and the auth token.</source>
          <target state="new">When authentication succeeds, you get back a user object with a user ID value and the auth token.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To use this user ID to authorize users, see [Service-side Authorization].</source>
          <target state="new">To use this user ID to authorize users, see [Service-side Authorization].</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To restrict table access to only authenticated users, see [Permissions].</source>
          <target state="new">To restrict table access to only authenticated users, see [Permissions].</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Server-managed Login</source>
          <target state="new">Server-managed Login</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Here is how you can add server-managed login to the [Mobile Services Quick Start] project; you may use similar code for your other projects.</source>
          <target state="new">Here is how you can add server-managed login to the [Mobile Services Quick Start] project; you may use similar code for your other projects.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information and to see an end-to-end example in action, see [Authentication].</source>
          <target state="new">For more information and to see an end-to-end example in action, see [Authentication].</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Client-managed Login (Single Sign-on)</source>
          <target state="new">Client-managed Login (Single Sign-on)</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You may do the login process outside the Mobile Services client, either to enable single sign-on or if your app contacts the identity provider directly.</source>
          <target state="new">You may do the login process outside the Mobile Services client, either to enable single sign-on or if your app contacts the identity provider directly.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In such cases, you can log in to Mobile Services by providing a token obtained independently from a supported identity provider.</source>
          <target state="new">In such cases, you can log in to Mobile Services by providing a token obtained independently from a supported identity provider.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following example uses the [Live Connect SDK] to enable single sign-on for iOS apps.</source>
          <target state="new">The following example uses the [Live Connect SDK] to enable single sign-on for iOS apps.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>It assumes that you have a <bpt id="p1">**</bpt>LiveConnectClient<ept id="p1">**</ept> instance named <ph id="ph1">`liveClient`</ph> in the controller and the user is logged in.</source>
          <target state="new">It assumes that you have a <bpt id="p1">**</bpt>LiveConnectClient<ept id="p1">**</ept> instance named <ph id="ph1">`liveClient`</ph> in the controller and the user is logged in.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="caching-tokens"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Cache Authentication Tokens</source>
          <target state="new"><ph id="ph1">&lt;a name="caching-tokens"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Cache Authentication Tokens</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Let's see how you may cache tokens in the [Mobile Services Quick Start] project; you may apply similar steps to any project.</source>
          <target state="new">Let's see how you may cache tokens in the [Mobile Services Quick Start] project; you may apply similar steps to any project.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.INCLUDE [mobile-services-ios-authenticate-app-with-token](../../includes/mobile-services-ios-authenticate-app-with-token.md)]</ph></source>
          <target state="new"><ph id="ph1">[AZURE.INCLUDE [mobile-services-ios-authenticate-app-with-token](../../includes/mobile-services-ios-authenticate-app-with-token.md)]</ph></target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="errors"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Handle Errors</source>
          <target state="new"><ph id="ph1">&lt;a name="errors"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Handle Errors</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you call a mobile service, the completion block contains an <ph id="ph1">`NSError *error`</ph> parameter.</source>
          <target state="new">When you call a mobile service, the completion block contains an <ph id="ph1">`NSError *error`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When an error occurs, this parameter is non-nil.</source>
          <target state="new">When an error occurs, this parameter is non-nil.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In your code, you should check this parameter and handle the error as needed.</source>
          <target state="new">In your code, you should check this parameter and handle the error as needed.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The file <bpt id="p1">[</bpt><ph id="ph1">`&lt;WindowsAzureMobileServices/MSError.h&gt;`</ph><ept id="p1">](https://github.com/Azure/azure-mobile-services/blob/master/sdk/iOS/src/MSError.h)</ept> defines the constants <ph id="ph2">`MSErrorResponseKey`</ph>, <ph id="ph3">`MSErrorRequestKey`</ph>, and <ph id="ph4">`MSErrorServerItemKey`</ph> to get more data related to the error.</source>
          <target state="new">The file <bpt id="p1">[</bpt><ph id="ph1">`&lt;WindowsAzureMobileServices/MSError.h&gt;`</ph><ept id="p1">](https://github.com/Azure/azure-mobile-services/blob/master/sdk/iOS/src/MSError.h)</ept> defines the constants <ph id="ph2">`MSErrorResponseKey`</ph>, <ph id="ph3">`MSErrorRequestKey`</ph>, and <ph id="ph4">`MSErrorServerItemKey`</ph> to get more data related to the error.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In addition, the file defines constants for each error code.</source>
          <target state="new">In addition, the file defines constants for each error code.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For an example on how to use these constants, see [Conflict-Handler] for its usage of <ph id="ph1">`MSErrorServerItemKey`</ph> and <ph id="ph2">`MSErrorPreconditionFailed`</ph>.</source>
          <target state="new">For an example on how to use these constants, see [Conflict-Handler] for its usage of <ph id="ph1">`MSErrorServerItemKey`</ph> and <ph id="ph2">`MSErrorPreconditionFailed`</ph>.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a34d5ea8ccefae36977bd8907563ff3fc9e47d2</xliffext:olfilehash>
  </header>
</xliff>