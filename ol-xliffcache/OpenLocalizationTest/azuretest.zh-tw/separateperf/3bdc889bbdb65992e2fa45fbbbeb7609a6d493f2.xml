{
  "nodes": [
    {
      "content": "Create ContentKeys with REST",
      "pos": [
        28,
        56
      ]
    },
    {
      "content": "Learn how to create content keys that provide secure access to Assets.",
      "pos": [
        76,
        146
      ]
    },
    {
      "content": "Create ContentKeys with REST",
      "pos": [
        459,
        487
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        492,
        508
      ]
    },
    {
      "content": "REST",
      "pos": [
        512,
        516
      ]
    },
    {
      "content": ".NET",
      "pos": [
        563,
        567
      ]
    },
    {
      "content": "Media Services enables you to create new and deliver encrypted assets.",
      "pos": [
        615,
        685
      ]
    },
    {
      "content": "A <bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept> provides secure access to your <bpt id=\"p2\">**</bpt>Asset<ept id=\"p2\">**</ept>s.",
      "pos": [
        686,
        745
      ]
    },
    {
      "pos": [
        748,
        993
      ],
      "content": "When you create a new asset (for example, before you <bpt id=\"p1\">[</bpt>upload files<ept id=\"p1\">](media-services-rest-upload-files.md)</ept>), you can specify the following encryption options: <bpt id=\"p2\">**</bpt>StorageEncrypted<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>CommonEncryptionProtected<ept id=\"p3\">**</ept>, or <bpt id=\"p4\">**</bpt>EnvelopeEncryptionProtected<ept id=\"p4\">**</ept>."
    },
    {
      "pos": [
        996,
        1256
      ],
      "content": "When you deliver assets to your clients, you can <bpt id=\"p1\">[</bpt>configure for assets to be dynamically encrypted<ept id=\"p1\">](media-services-rest-configure-asset-delivery-policy.md)</ept> with one of the following two encryptions: <bpt id=\"p2\">**</bpt>DynamicEnvelopeEncryption<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>DynamicCommonEncryption<ept id=\"p3\">**</ept>."
    },
    {
      "content": "Encrypted assets have to be associated with <bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept>s.",
      "pos": [
        1258,
        1318
      ]
    },
    {
      "content": "This article describes how to create a content key.",
      "pos": [
        1319,
        1370
      ]
    },
    {
      "content": "The following are general steps for generating content keys that you will associate with assets that you want to be encrypted.",
      "pos": [
        1372,
        1498
      ]
    },
    {
      "content": "Randomly generate a 16-byte AES key (for common and envelope encryption) or a 32-byte AES key (for storage encryption).",
      "pos": [
        1504,
        1623
      ]
    },
    {
      "content": "This will be the content key for your asset, which means all files associated with that asset will need to use the same content key during decryption.",
      "pos": [
        1630,
        1780
      ]
    },
    {
      "pos": [
        1786,
        2078
      ],
      "content": "Call the <bpt id=\"p1\">[</bpt>GetProtectionKeyId<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/jj683097.aspx#getprotectionkeyid)</ept> and <bpt id=\"p2\">[</bpt>GetProtectionKey<ept id=\"p2\">](https://msdn.microsoft.com/library/azure/jj683097.aspx#getprotectionkey)</ept> methods to get the correct X.509 Certificate that must be used to encrypt your content key."
    },
    {
      "content": "Encrypt your content key with the public key of the X.509 Certificate.",
      "pos": [
        2083,
        2153
      ]
    },
    {
      "content": "Media Services .NET SDK uses RSA with OAEP when doing the encryption.",
      "pos": [
        2160,
        2229
      ]
    },
    {
      "content": "You can see an example in the <bpt id=\"p1\">[</bpt>EncryptSymmetricKeyData function<ept id=\"p1\">](https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.FileEncryption/EncryptionUtils.cs)</ept>.",
      "pos": [
        2231,
        2423
      ]
    },
    {
      "content": "Create a checksum value (based on the PlayReady AES key checksum algorithm) calculated using the key identifier and content key.",
      "pos": [
        2428,
        2556
      ]
    },
    {
      "content": "For more information, see the “PlayReady AES Key Checksum Algorithm” section of the PlayReady Header Object document located <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](http://www.microsoft.com/playready/documents/)</ept>.",
      "pos": [
        2557,
        2736
      ]
    },
    {
      "content": "The following .NET example calculates the checksum using the GUID part of the key identifier and the clear content key.",
      "pos": [
        2742,
        2861
      ]
    },
    {
      "pos": [
        3678,
        3896
      ],
      "content": "Create the Content key with the <bpt id=\"p1\">**</bpt>EncryptedContentKey<ept id=\"p1\">**</ept> (converted to base64-encoded string), <bpt id=\"p2\">**</bpt>ProtectionKeyId<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>ProtectionKeyType<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>ContentKeyType<ept id=\"p4\">**</ept>, and <bpt id=\"p5\">**</bpt>Checksum<ept id=\"p5\">**</ept> values you have received in previous steps."
    },
    {
      "pos": [
        3900,
        3992
      ],
      "content": "Associate the <bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept> entity with your <bpt id=\"p2\">**</bpt>Asset<ept id=\"p2\">**</ept> entity through the $links operation."
    },
    {
      "content": "Note that examples that generate an AES key, encrypt the key, and calculate the checksum have been omitted from this topic.",
      "pos": [
        3994,
        4117
      ]
    },
    {
      "content": "Only the examples that show how to interact with Media Services are provided.",
      "pos": [
        4118,
        4195
      ]
    },
    {
      "pos": [
        4199,
        4294
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> When working with the Media Services REST API, the following considerations apply:"
    },
    {
      "content": "When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.",
      "pos": [
        4298,
        4410
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>Setup for Media Services REST API Development<ept id=\"p1\">](media-services-rest-how-to-use.md)</ept>.",
      "pos": [
        4411,
        4520
      ]
    },
    {
      "content": "After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.",
      "pos": [
        4523,
        4653
      ]
    },
    {
      "content": "You must make subsequent calls to the new URI as described in <bpt id=\"p1\">[</bpt>Connecting to Media Services using REST API<ept id=\"p1\">](media-services-rest-connect_programmatically.md)</ept>.",
      "pos": [
        4654,
        4811
      ]
    },
    {
      "content": "Retrieve the ProtectionKeyId",
      "pos": [
        4816,
        4844
      ]
    },
    {
      "content": "The following example shows how to retrieve the ProtectionKeyId, a certificate thumbprint, for the certificate you must use when encrypting your content key.",
      "pos": [
        4849,
        5006
      ]
    },
    {
      "content": "Do this step to make sure that you already have the appropriate certificate on your machine.",
      "pos": [
        5007,
        5099
      ]
    },
    {
      "content": "Request:",
      "pos": [
        5102,
        5110
      ]
    },
    {
      "content": "Response:",
      "pos": [
        5940,
        5949
      ]
    },
    {
      "content": "Retrieve the ProtectionKey for the ProtectionKeyId",
      "pos": [
        6604,
        6654
      ]
    },
    {
      "content": "The following example shows how to retrieve the X.509 certificate using the ProtectionKeyId you received in the previous step.",
      "pos": [
        6656,
        6782
      ]
    },
    {
      "content": "Request:",
      "pos": [
        6784,
        6792
      ]
    },
    {
      "content": "Response:",
      "pos": [
        7723,
        7732
      ]
    },
    {
      "content": "Create the ContentKey",
      "pos": [
        9546,
        9567
      ]
    },
    {
      "pos": [
        9570,
        9741
      ],
      "content": "After you have retrieved the X.509 certificate and used its public key to encrypt your content key, create a <bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept> entity and set its property values accordingly."
    },
    {
      "content": "One of the values that you must set when create the content key is the type.",
      "pos": [
        9743,
        9819
      ]
    },
    {
      "content": "Choose from one of the following values.",
      "pos": [
        9820,
        9860
      ]
    },
    {
      "pos": [
        10528,
        10762
      ],
      "content": "The following example shows how to create a <bpt id=\"p1\">**</bpt>ContentKey<ept id=\"p1\">**</ept> with a <bpt id=\"p2\">**</bpt>ContentKeyType<ept id=\"p2\">**</ept> set for storage encryption (\"1\") and the <bpt id=\"p3\">**</bpt>ProtectionKeyType<ept id=\"p3\">**</ept> set to \"0\" to indicate that the protection key Id is the X.509 certificate thumbprint."
    },
    {
      "content": "Request",
      "pos": [
        10767,
        10774
      ]
    },
    {
      "content": "Response:",
      "pos": [
        11890,
        11899
      ]
    },
    {
      "content": "Associate the ContentKey with an Asset",
      "pos": [
        13021,
        13059
      ]
    },
    {
      "content": "After creating the ContentKey, associate it with your Asset using the $links operation, as shown in the following example:",
      "pos": [
        13061,
        13183
      ]
    },
    {
      "content": "Request:",
      "pos": [
        13189,
        13197
      ]
    },
    {
      "content": "Response:",
      "pos": [
        14220,
        14229
      ]
    },
    {
      "content": "test",
      "pos": [
        14261,
        14265
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Create ContentKeys with REST\" \n    description=\"Learn how to create content keys that provide secure access to Assets.\" \n    services=\"media-services\" \n    documentationCenter=\"\" \n    authors=\"Juliako\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"media-services\" \n    ms.workload=\"media\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"08/11/2015\" \n    ms.author=\"juliako\"/>\n\n\n#Create ContentKeys with REST\n\n\n> [AZURE.SELECTOR]\n- [REST](media-services-rest-create-contentkey.md)\n- [.NET](media-services-dotnet-create-contentkey.md)\n\n\nMedia Services enables you to create new and deliver encrypted assets. A **ContentKey** provides secure access to your **Asset**s. \n\nWhen you create a new asset (for example, before you [upload files](media-services-rest-upload-files.md)), you can specify the following encryption options: **StorageEncrypted**, **CommonEncryptionProtected**, or **EnvelopeEncryptionProtected**. \n\nWhen you deliver assets to your clients, you can [configure for assets to be dynamically encrypted](media-services-rest-configure-asset-delivery-policy.md) with one of the following two encryptions: **DynamicEnvelopeEncryption** or **DynamicCommonEncryption**.\n\nEncrypted assets have to be associated with **ContentKey**s. This article describes how to create a content key.\n\nThe following are general steps for generating content keys that you will associate with assets that you want to be encrypted. \n\n1. Randomly generate a 16-byte AES key (for common and envelope encryption) or a 32-byte AES key (for storage encryption). \n\n    This will be the content key for your asset, which means all files associated with that asset will need to use the same content key during decryption. \n2.  Call the [GetProtectionKeyId](https://msdn.microsoft.com/library/azure/jj683097.aspx#getprotectionkeyid) and [GetProtectionKey](https://msdn.microsoft.com/library/azure/jj683097.aspx#getprotectionkey) methods to get the correct X.509 Certificate that must be used to encrypt your content key.\n3.  Encrypt your content key with the public key of the X.509 Certificate. \n\n    Media Services .NET SDK uses RSA with OAEP when doing the encryption.  You can see an example in the [EncryptSymmetricKeyData function](https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.FileEncryption/EncryptionUtils.cs).\n4.  Create a checksum value (based on the PlayReady AES key checksum algorithm) calculated using the key identifier and content key. For more information, see the “PlayReady AES Key Checksum Algorithm” section of the PlayReady Header Object document located [here](http://www.microsoft.com/playready/documents/).\n\n    The following .NET example calculates the checksum using the GUID part of the key identifier and the clear content key.\n    \n        public static string CalculateChecksum(byte[] contentKey, Guid keyId)\n        {\n            byte[] array = null;\n            using (AesCryptoServiceProvider aesCryptoServiceProvider = new AesCryptoServiceProvider())\n            {\n                aesCryptoServiceProvider.Mode = CipherMode.ECB;\n                aesCryptoServiceProvider.Key = contentKey;\n                aesCryptoServiceProvider.Padding = PaddingMode.None;\n                ICryptoTransform cryptoTransform = aesCryptoServiceProvider.CreateEncryptor();\n                array = new byte[16];\n                cryptoTransform.TransformBlock(keyId.ToByteArray(), 0, 16, array, 0);\n            }\n            byte[] array2 = new byte[8];\n            Array.Copy(array, array2, 8);\n            return Convert.ToBase64String(array2);\n        }\n\n5. Create the Content key with the **EncryptedContentKey** (converted to base64-encoded string), **ProtectionKeyId**, **ProtectionKeyType**, **ContentKeyType**, and **Checksum** values you have received in previous steps.\n6. Associate the **ContentKey** entity with your **Asset** entity through the $links operation.\n\nNote that examples that generate an AES key, encrypt the key, and calculate the checksum have been omitted from this topic. Only the examples that show how to interact with Media Services are provided.\n\n\n>[AZURE.NOTE] When working with the Media Services REST API, the following considerations apply:\n>\n>When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests. For more information, see [Setup for Media Services REST API Development](media-services-rest-how-to-use.md).\n\n>After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI. You must make subsequent calls to the new URI as described in [Connecting to Media Services using REST API](media-services-rest-connect_programmatically.md). \n\n##Retrieve the ProtectionKeyId \n \n\nThe following example shows how to retrieve the ProtectionKeyId, a certificate thumbprint, for the certificate you must use when encrypting your content key. Do this step to make sure that you already have the appropriate certificate on your machine.\n\n\nRequest:\n    \n    \n    GET https://media.windows.net/api/GetProtectionKeyId?contentKeyType=0 HTTP/1.1\n    MaxDataServiceVersion: 3.0;NetFx\n    Accept: application/json\n    Accept-Charset: UTF-8\n    User-Agent: Microsoft ADO.NET Data Services\n    Authorization: Bearer http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=juliakoams1&urn%3aSubscriptionId=zbbef702-2233-477b-9f16-bc4d3aa97387&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.windows.net%2f&Audience=urn%3aWindowsAzureMediaServices&ExpiresOn=1423034908&Issuer=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.windows.net%2f&HMACSHA256=7eSLe1GHnxgilr3F2FPCGxdL2%2bwy%2f39XhMPGY9IizfU%3d\n    x-ms-version: 2.8\n    Host: media.windows.net\n    \n\nResponse:\n    \n    HTTP/1.1 200 OK\n    Cache-Control: no-cache\n    Content-Length: 139\n    Content-Type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8\n    Server: Microsoft-IIS/8.5\n    request-id: 2b6aa7a4-3a09-4b08-b581-26b55667f817\n    x-ms-request-id: 2b6aa7a4-3a09-4b08-b581-26b55667f817\n    X-Content-Type-Options: nosniff\n    DataServiceVersion: 3.0;\n    X-Powered-By: ASP.NET\n    Strict-Transport-Security: max-age=31536000; includeSubDomains\n    Date: Wed, 04 Feb 2015 02:42:52 GMT\n    \n    {\"odata.metadata\":\"https://wamsbayclus001rest-hs.cloudapp.net/api/$metadata#Edm.String\",\"value\":\"7D9BB04D9D0A4A24800CADBFEF232689E048F69C\"}\n\n##Retrieve the ProtectionKey for the ProtectionKeyId\n\nThe following example shows how to retrieve the X.509 certificate using the ProtectionKeyId you received in the previous step.\n\nRequest:\n        \n    GET https://media.windows.net/api/GetProtectionKey?ProtectionKeyId='7D9BB04D9D0A4A24800CADBFEF232689E048F69C' HTTP/1.1\n    MaxDataServiceVersion: 3.0;NetFx\n    Accept: application/json\n    Accept-Charset: UTF-8\n    User-Agent: Microsoft ADO.NET Data Services\n    Authorization: Bearer http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=juliakoams1&urn%3aSubscriptionId=zbbef702-e769-2233-9f16-bc4d3aa97387&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.windows.net%2f&Audience=urn%3aWindowsAzureMediaServices&ExpiresOn=1423141026&Issuer=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.windows.net%2f&HMACSHA256=lDBz5YXKiWe5L7eXOHsLHc9kKEUcUiFJvrNFFSksgkM%3d\n    x-ms-version: 2.8\n    x-ms-client-request-id: 78d1247a-58d7-40e5-96cc-70ff0dfa7382\n    Host: media.windows.net\n    \n\n\nResponse:\n    \n    HTTP/1.1 200 OK\n    Cache-Control: no-cache\n    Content-Length: 1227\n    Content-Type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8\n    Server: Microsoft-IIS/8.5\n    x-ms-client-request-id: 78d1247a-58d7-40e5-96cc-70ff0dfa7382\n    request-id: 1523e8f3-8ed2-40fe-8a9a-5d81eb572cc8\n    x-ms-request-id: 1523e8f3-8ed2-40fe-8a9a-5d81eb572cc8\n    X-Content-Type-Options: nosniff\n    DataServiceVersion: 3.0;\n    X-Powered-By: ASP.NET\n    Strict-Transport-Security: max-age=31536000; includeSubDomains\n    Date: Thu, 05 Feb 2015 07:52:30 GMT\n    \n    {\"odata.metadata\":\"https://wamsbayclus001rest-hs.cloudapp.net/api/$metadata#Edm.String\",\n    \"value\":\"MIIDSTCCAjGgAwIBAgIQqf92wku/HLJGCbMAU8GEnDANBgkqhkiG9w0BAQQFADAuMSwwKgYDVQQDEyN3YW1zYmx1cmVnMDAxZW5jcnlwdGFsbHNlY3JldHMtY2VydDAeFw0xMjA1MjkwNzAwMDBaFw0zMjA1MjkwNzAwMDBaMC4xLDAqBgNVBAMTI3dhbXNibHVyZWcwMDFlbmNyeXB0YWxsc2VjcmV0cy1jZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzR0SEbXefvUjb9wCUfkEiKtGQ5Gc328qFPrhMjSo+YHe0AVviZ9YaxPPb0m1AaaRV4dqWpST2+JtDhLOmGpWmmA60tbATJDdmRzKi2eYAyhhE76MgJgL3myCQLP42jDusWXWSMabui3/tMDQs+zfi1sJ4Ch/lm5EvksYsu6o8sCv29VRwxfDLJPBy2NlbV4GbWz5Qxp2tAmHoROnfaRhwp6WIbquk69tEtu2U50CpPN2goLAqx2PpXAqA+prxCZYGTHqfmFJEKtZHhizVBTFPGS3ncfnQC9QIEwFbPw6E5PO5yNaB68radWsp5uvDg33G1i8IT39GstMW6zaaG7cNQIDAQABo2MwYTBfBgNVHQEEWDBWgBCOGT2hPhsvQioZimw8M+jOoTAwLjEsMCoGA1UEAxMjd2Ftc2JsdXJlZzAwMWVuY3J5cHRhbGxzZWNyZXRzLWNlcnSCEKn/dsJLvxyyRgmzAFPBhJwwDQYJKoZIhvcNAQEEBQADggEBABcrQPma2ekNS3Wc5wGXL/aHyQaQRwFGymnUJ+VR8jVUZaC/U/f6lR98eTlwycjVwRL7D15BfClGEHw66QdHejaViJCjbEIJJ3p2c9fzBKhjLhzB3VVNiLIaH6RSI1bMPd2eddSCqhDIn3VBN605GcYXMzhYp+YA6g9+YMNeS1b+LxX3fqixMQIxSHOLFZ1G/H2xfNawv0VikH3djNui3EKT1w/8aRkUv/AAV0b3rYkP/jA1I0CPn0XFk7STYoiJ3gJoKq9EMXhit+Iwfz0sMkfhWG12/XO+TAWqsK1ZxEjuC9OzrY7pFnNxs4Mu4S8iinehduSpY+9mDd3dHynNwT4=\"}\n\n##Create the ContentKey \n\nAfter you have retrieved the X.509 certificate and used its public key to encrypt your content key, create a **ContentKey** entity and set its property values accordingly.\n\nOne of the values that you must set when create the content key is the type. Choose from one of the following values.\n\n    /// <summary>\n    /// Specifies the type of a content key.\n    /// </summary>\n    public enum ContentKeyType\n    {\n        /// <summary>\n        /// Specifies a content key for common encryption.\n        /// </summary>\n        /// <remarks>This is the default value.</remarks>\n        CommonEncryption = 0,\n\n        /// <summary>\n        /// Specifies a content key for storage encryption.\n        /// </summary>\n        StorageEncryption = 1,\n\n        /// <summary>\n        /// Specifies a content key for encrypting encoding configuration data that may contain sensitive preset information. \n        /// </summary>\n        ConfigurationEncryption = 2,\n    }\n\n\nThe following example shows how to create a **ContentKey** with a **ContentKeyType** set for storage encryption (\"1\") and the **ProtectionKeyType** set to \"0\" to indicate that the protection key Id is the X.509 certificate thumbprint.  \n\n\nRequest\n\n    POST https://media.windows.net/api/ContentKeys HTTP/1.1\n    Content-Type: application/json\n    DataServiceVersion: 1.0;NetFx\n    MaxDataServiceVersion: 3.0;NetFx\n    Accept: application/json\n    Accept-Charset: UTF-8\n    User-Agent: Microsoft ADO.NET Data Services\n    Authorization: Bearer http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=juliakoams1&urn%3aSubscriptionId=zbbef702-2233-477b-9f16-bc4d3aa97387&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.windows.net%2f&Audience=urn%3aWindowsAzureMediaServices&ExpiresOn=1423034908&Issuer=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.windows.net%2f&HMACSHA256=7eSLe1GHnxgilr3F2FPCGxdL2%2bwy%2f39XhMPGY9IizfU%3d\n    x-ms-version: 2.8\n    Host: media.windows.net\n    {\n    \"Name\":\"ContentKey\",\n    \"ProtectionKeyId\":\"7D9BB04D9D0A4A24800CADBFEF232689E048F69C\", \n    \"ContentKeyType\":\"1\", \n    \"ProtectionKeyType\":\"0\",\n    \"EncryptedContentKey\":\"your encrypted content key\",\n    \"Checksum\":\"calculated checksum\"\n    }\n\n\nResponse:\n    \n    HTTP/1.1 201 Created\n    Cache-Control: no-cache\n    Content-Length: 777\n    Content-Type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8\n    Location: https://media.windows.net/api/ContentKeys('nb%3Akid%3AUUID%3A9c8ea9c6-52bd-4232-8a43-8e43d8564a99')\n    Server: Microsoft-IIS/8.5\n    request-id: 76e85e0f-5cf1-44cb-b689-b3455888682c\n    x-ms-request-id: 76e85e0f-5cf1-44cb-b689-b3455888682c\n    X-Content-Type-Options: nosniff\n    DataServiceVersion: 3.0;\n    X-Powered-By: ASP.NET\n    Strict-Transport-Security: max-age=31536000; includeSubDomains\n    Date: Wed, 04 Feb 2015 02:37:46 GMT\n    \n    {\"odata.metadata\":\"https://wamsbayclus001rest-hs.cloudapp.net/api/$metadata#ContentKeys/@Element\",\n    \"Id\":\"nb:kid:UUID:9c8ea9c6-52bd-4232-8a43-8e43d8564a99\",\"Created\":\"2015-02-04T02:37:46.9684379Z\",\n    \"LastModified\":\"2015-02-04T02:37:46.9684379Z\",\n    \"ContentKeyType\":1,\n    \"EncryptedContentKey\":\"your encrypted content key\",\n    \"Name\":\"ContentKey\",\n    \"ProtectionKeyId\":\"7D9BB04D9D0A4A24800CADBFEF232689E048F69C\",\n    \"ProtectionKeyType\":0,\n    \"Checksum\":\"calculated checksum\"}\n\n##Associate the ContentKey with an Asset\n\nAfter creating the ContentKey, associate it with your Asset using the $links operation, as shown in the following example:\n    \nRequest:\n    \n    POST https://media.windows.net/api/Assets('nb%3Acid%3AUUID%3Afbd7ce05-1087-401b-aaae-29f16383c801')/$links/ContentKeys HTTP/1.1\n    DataServiceVersion: 1.0;NetFx\n    MaxDataServiceVersion: 3.0;NetFx\n    Accept: application/json\n    Accept-Charset: UTF-8\n    Content-Type: application/json\n    Authorization: Bearer http%3a%2f%2fschemas.xmlsoap.org%2fws%2f2005%2f05%2fidentity%2fclaims%2fnameidentifier=juliakoams1&urn%3aSubscriptionId=zbbef702-2233-477b-9f16-bc4d3aa97387&http%3a%2f%2fschemas.microsoft.com%2faccesscontrolservice%2f2010%2f07%2fclaims%2fidentityprovider=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.windows.net%2f&Audience=urn%3aWindowsAzureMediaServices&ExpiresOn=1423141026&Issuer=https%3a%2f%2fwamsprodglobal001acs.accesscontrol.windows.net%2f&HMACSHA256=lDBz5YXKiWe5L7eXOHsLHc9kKEUcUiFJvrNFFSksgkM%3d\n    x-ms-version: 2.8\n    Host: media.windows.net\n\n    \n    {\"uri\":\"https://wamsbayclus001rest-hs.cloudapp.net/api/ContentKeys('nb%3Akid%3AUUID%3A01e6ea36-2285-4562-91f1-82c45736047c')\"}\n\nResponse:\n\n    HTTP/1.1 204 No Content \n\ntest\n"
}