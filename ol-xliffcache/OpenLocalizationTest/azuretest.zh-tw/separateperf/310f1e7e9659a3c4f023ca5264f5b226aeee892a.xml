{
  "nodes": [
    {
      "content": "Get started with Azure Batch PowerShell cmdlets | Microsoft Azure",
      "pos": [
        26,
        91
      ]
    },
    {
      "content": "Introduces the Azure PowerShell cmdlets used to manage the Azure Batch service",
      "pos": [
        109,
        187
      ]
    },
    {
      "content": "Get started with Azure Batch PowerShell cmdlets",
      "pos": [
        481,
        528
      ]
    },
    {
      "content": "This article is a quick introduction to the Azure PowerShell cmdlets you can use to manage your Batch accounts and get information about your Batch jobs, tasks, and other details.",
      "pos": [
        529,
        708
      ]
    },
    {
      "pos": [
        710,
        866
      ],
      "content": "For detailed cmdlet syntax, type <ph id=\"ph1\">`get-help &lt;Cmdlet_name&gt;`</ph> or see the <bpt id=\"p1\">[</bpt>Azure Batch cmdlet reference<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/mt125957.aspx)</ept>."
    },
    {
      "content": "Prerequisites",
      "pos": [
        871,
        884
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Azure PowerShell<ept id=\"p1\">**</ept> - See <bpt id=\"p2\">[</bpt>How to install and configure Azure PowerShell<ept id=\"p2\">](../powershell-install-configure.md)</ept> for prerequisites and download and installation instructions.",
      "pos": [
        888,
        1060
      ]
    },
    {
      "content": "Batch cmdlets were introduced in version 0.8.10 and later versions.",
      "pos": [
        1061,
        1128
      ]
    },
    {
      "content": "The Batch cmdlets were updated to use the general availability API in version 0.9.6.",
      "pos": [
        1129,
        1213
      ]
    },
    {
      "content": "Use the Batch cmdlets",
      "pos": [
        1218,
        1239
      ]
    },
    {
      "content": "Use standard procedures to start Azure PowerShell and <bpt id=\"p1\">[</bpt>connect to your Azure subscriptions<ept id=\"p1\">](../powershell-install-configure.md#Connect)</ept>.",
      "pos": [
        1241,
        1377
      ]
    },
    {
      "content": "Additionally:",
      "pos": [
        1378,
        1391
      ]
    },
    {
      "pos": [
        1395,
        1485
      ],
      "content": "<bpt id=\"p1\">**</bpt>Select Azure subscription<ept id=\"p1\">**</ept> - If you have more than subscription, select a subscription:"
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Switch to AzureResourceManage mode<ept id=\"p1\">**</ept> - The Batch cmdlets ship in the Azure Resource Manager module.",
      "pos": [
        1572,
        1673
      ]
    },
    {
      "content": "See <bpt id=\"p1\">[</bpt>Using Windows PowerShell with Resource Manager<ept id=\"p1\">](../powershell-azure-resource-manager.md)</ept> for details.",
      "pos": [
        1674,
        1780
      ]
    },
    {
      "content": "To use this module, run the <bpt id=\"p1\">[</bpt>Switch-AzureMode<ept id=\"p1\">](https://msdn.microsoft.com/library/dn722470.aspx)</ept> cmdlet:",
      "pos": [
        1781,
        1885
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Register with the Batch provider namespace (one-time operation)<ept id=\"p1\">**</ept> - Before you can manage your Batch accounts, you must register with the Batch provider namespace.",
      "pos": [
        1954,
        2119
      ]
    },
    {
      "content": "This operation only needs to be performed once per subscription.",
      "pos": [
        2120,
        2184
      ]
    },
    {
      "content": "Manage Batch accounts and keys",
      "pos": [
        2268,
        2298
      ]
    },
    {
      "content": "You can use Azure PowerShell cmdlets to create and manage Batch accounts and keys.",
      "pos": [
        2300,
        2382
      ]
    },
    {
      "content": "Create a Batch account",
      "pos": [
        2388,
        2410
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>New-AzureBatchAccount<ept id=\"p1\">**</ept> creates a new Batch account in a specified resource group.",
      "pos": [
        2412,
        2496
      ]
    },
    {
      "content": "If you do not already have a resource group, create one by running the <bpt id=\"p1\">[</bpt>New-AzureResourceGroup<ept id=\"p1\">](https://msdn.microsoft.com/library/dn654594.aspx)</ept> cmdlet, specifying one of the Azure regions in the <bpt id=\"p2\">**</bpt>Location<ept id=\"p2\">**</ept> parameter.",
      "pos": [
        2497,
        2717
      ]
    },
    {
      "content": "(You can find available regions for different Azure resources by running <bpt id=\"p1\">[</bpt>Get-AzureLocation<ept id=\"p1\">](https://msdn.microsoft.com/library/dn654582.aspx)</ept>.) For example:",
      "pos": [
        2718,
        2875
      ]
    },
    {
      "content": "Then, create a new Batch account account in the resource group, also specifying an account name for &lt;<bpt id=\"p1\">*</bpt>account_name<ept id=\"p1\">*</ept>&gt; and a location where the Batch service is available.",
      "pos": [
        2959,
        3128
      ]
    },
    {
      "content": "Creating the account can take several minutes to complete.",
      "pos": [
        3129,
        3187
      ]
    },
    {
      "content": "For example:",
      "pos": [
        3188,
        3200
      ]
    },
    {
      "pos": [
        3326,
        3467
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The Batch account name must be unique to Azure, contain between 3 and 24 characters, and use lowercase letters and numbers only."
    },
    {
      "content": "Get account access keys",
      "pos": [
        3473,
        3496
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Get-AzureBatchAccountKeys<ept id=\"p1\">**</ept> shows the access keys associated with an Azure Batch account.",
      "pos": [
        3497,
        3588
      ]
    },
    {
      "content": "For example, run the following to get the primary and secondary keys of the account you created.",
      "pos": [
        3589,
        3685
      ]
    },
    {
      "content": "Generate a new access key",
      "pos": [
        3820,
        3845
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>New-AzureBatchAccountKey<ept id=\"p1\">**</ept> generates a new primary or secondary account key for an Azure Batch account.",
      "pos": [
        3846,
        3951
      ]
    },
    {
      "content": "For example, to generate a new primary key for your Batch account, type:",
      "pos": [
        3952,
        4024
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> To generate a new secondary key, specify \"Secondary\" for the <bpt id=\"p1\">**</bpt>KeyType<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        4107,
        4203
      ]
    },
    {
      "content": "You have to regenerate the primary and secondary keys separately.",
      "pos": [
        4204,
        4269
      ]
    },
    {
      "content": "Delete a Batch account",
      "pos": [
        4275,
        4297
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Remove-AzureBatchAccount<ept id=\"p1\">**</ept> deletes a Batch account.",
      "pos": [
        4298,
        4351
      ]
    },
    {
      "content": "For example:",
      "pos": [
        4352,
        4364
      ]
    },
    {
      "content": "When prompted, confirm you want to remove the account.",
      "pos": [
        4428,
        4482
      ]
    },
    {
      "content": "Account removal can take some time to complete.",
      "pos": [
        4483,
        4530
      ]
    },
    {
      "content": "Query for jobs, tasks, and other details",
      "pos": [
        4535,
        4575
      ]
    },
    {
      "pos": [
        4577,
        4723
      ],
      "content": "Use cmdlets such as <bpt id=\"p1\">**</bpt>Get-AzureBatchJob<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Get-AzureBatchTask<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>Get-AzureBatchPool<ept id=\"p3\">**</ept> to query for entities created under a Batch account."
    },
    {
      "content": "To use these cmdlets, you first need to create an AzureBatchContext object to store your account name and keys:",
      "pos": [
        4725,
        4836
      ]
    },
    {
      "pos": [
        4901,
        5013
      ],
      "content": "You pass this context into cmdlets that interact with the Batch service by using the <bpt id=\"p1\">**</bpt>BatchContext<ept id=\"p1\">**</ept> parameter."
    },
    {
      "pos": [
        5017,
        5244
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> By default, the account's primary key is used for authentication, but you can explicitly select the key to use by changing your BatchAccountContext object’s <bpt id=\"p1\">**</bpt>KeyInUse<ept id=\"p1\">**</ept> property: <ph id=\"ph2\">`$context.KeyInUse = \"Secondary\"`</ph>."
    },
    {
      "content": "Query for data",
      "pos": [
        5251,
        5265
      ]
    },
    {
      "content": "As an example, use <bpt id=\"p1\">**</bpt>Get-AzureBatchPools<ept id=\"p1\">**</ept> to find your pools.",
      "pos": [
        5267,
        5329
      ]
    },
    {
      "content": "By default this queries for all pools under your account, assuming you already stored the BatchAccountContext object in <bpt id=\"p1\">*</bpt>$context<ept id=\"p1\">*</ept>:",
      "pos": [
        5330,
        5461
      ]
    },
    {
      "content": "Use an OData filter",
      "pos": [
        5517,
        5536
      ]
    },
    {
      "content": "You can supply an OData filter using the <bpt id=\"p1\">**</bpt>Filter<ept id=\"p1\">**</ept> parameter to find only the objects you’re interested in.",
      "pos": [
        5538,
        5646
      ]
    },
    {
      "content": "For example, you can find all pools with ids starting with “myPool”:",
      "pos": [
        5647,
        5715
      ]
    },
    {
      "content": "This method is not as flexible as using “Where-Object” in a local pipeline.",
      "pos": [
        5820,
        5895
      ]
    },
    {
      "content": "However, the query gets sent to the Batch service directly so that all filtering happens on the server side, saving Internet bandwidth.",
      "pos": [
        5896,
        6031
      ]
    },
    {
      "content": "Use the Id parameter",
      "pos": [
        6037,
        6057
      ]
    },
    {
      "content": "An alternative to an OData filter is to use the <bpt id=\"p1\">**</bpt>Id<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        6059,
        6124
      ]
    },
    {
      "content": "To query for a specific pool with id \"myPool\":",
      "pos": [
        6125,
        6171
      ]
    },
    {
      "pos": [
        6237,
        6325
      ],
      "content": "The <bpt id=\"p1\">**</bpt>Id<ept id=\"p1\">**</ept> parameter supports only full-id search, not wildcards or OData-style filters."
    },
    {
      "content": "Use the pipeline",
      "pos": [
        6331,
        6347
      ]
    },
    {
      "content": "Batch cmdlets can leverage the PowerShell pipeline to send data between cmdlets.",
      "pos": [
        6349,
        6429
      ]
    },
    {
      "content": "This has the same effect as specifying a parameter but makes listing multiple entities easier.",
      "pos": [
        6430,
        6524
      ]
    },
    {
      "content": "For example, you can find all tasks under your account:",
      "pos": [
        6525,
        6580
      ]
    },
    {
      "content": "Use the MaxCount parameter",
      "pos": [
        6680,
        6706
      ]
    },
    {
      "content": "By default, each cmdlet returns a maximum of 1000 objects.",
      "pos": [
        6708,
        6766
      ]
    },
    {
      "content": "If you reach this limit, you can either refine your filter to bring back fewer objects, or explicitly set a maximum using the <bpt id=\"p1\">**</bpt>MaxCount<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        6767,
        6916
      ]
    },
    {
      "content": "For example:",
      "pos": [
        6917,
        6929
      ]
    },
    {
      "pos": [
        6998,
        7055
      ],
      "content": "To remove the upper bound, set <bpt id=\"p1\">**</bpt>MaxCount<ept id=\"p1\">**</ept> to 0 or less."
    },
    {
      "content": "Related topics",
      "pos": [
        7060,
        7074
      ]
    },
    {
      "content": "Batch technical overview",
      "pos": [
        7078,
        7102
      ]
    },
    {
      "content": "Download Azure PowerShell",
      "pos": [
        7136,
        7161
      ]
    },
    {
      "content": "Azure Batch cmdlet reference",
      "pos": [
        7209,
        7237
      ]
    },
    {
      "content": "Efficient List Queries",
      "pos": [
        7298,
        7320
      ]
    },
    {
      "content": "test",
      "pos": [
        7356,
        7360
      ]
    }
  ],
  "content": "<properties\n   pageTitle=\"Get started with Azure Batch PowerShell cmdlets | Microsoft Azure\"\n   description=\"Introduces the Azure PowerShell cmdlets used to manage the Azure Batch service\"\n   services=\"batch\"\n   documentationCenter=\"\"\n   authors=\"dlepow\"\n   manager=\"timlt\"\n   editor=\"\"/>\n\n<tags\n   ms.service=\"batch\"\n   ms.devlang=\"NA\"\n   ms.topic=\"get-started-article\"\n   ms.tgt_pltfrm=\"powershell\"\n   ms.workload=\"big-compute\"\n   ms.date=\"08/07/2015\"\n   ms.author=\"danlep\"/>\n\n# Get started with Azure Batch PowerShell cmdlets\nThis article is a quick introduction to the Azure PowerShell cmdlets you can use to manage your Batch accounts and get information about your Batch jobs, tasks, and other details.\n\nFor detailed cmdlet syntax, type `get-help <Cmdlet_name>` or see the [Azure Batch cmdlet reference](https://msdn.microsoft.com/library/azure/mt125957.aspx).\n\n## Prerequisites\n\n* **Azure PowerShell** - See [How to install and configure Azure PowerShell](../powershell-install-configure.md) for prerequisites and download and installation instructions. Batch cmdlets were introduced in version 0.8.10 and later versions. The Batch cmdlets were updated to use the general availability API in version 0.9.6.\n\n## Use the Batch cmdlets\n\nUse standard procedures to start Azure PowerShell and [connect to your Azure subscriptions](../powershell-install-configure.md#Connect). Additionally:\n\n* **Select Azure subscription** - If you have more than subscription, select a subscription:\n\n    ```\n    Select-AzureSubscription -SubscriptionName <SubscriptionName>\n    ```\n\n* **Switch to AzureResourceManage mode** - The Batch cmdlets ship in the Azure Resource Manager module. See [Using Windows PowerShell with Resource Manager](../powershell-azure-resource-manager.md) for details. To use this module, run the [Switch-AzureMode](https://msdn.microsoft.com/library/dn722470.aspx) cmdlet:\n\n    ```\n    Switch-AzureMode -Name AzureResourceManager\n    ```\n\n* **Register with the Batch provider namespace (one-time operation)** - Before you can manage your Batch accounts, you must register with the Batch provider namespace. This operation only needs to be performed once per subscription.\n\n    ```\n    Register-AzureProvider -ProviderNamespace Microsoft.Batch\n    ```\n\n## Manage Batch accounts and keys\n\nYou can use Azure PowerShell cmdlets to create and manage Batch accounts and keys.\n\n### Create a Batch account\n\n**New-AzureBatchAccount** creates a new Batch account in a specified resource group. If you do not already have a resource group, create one by running the [New-AzureResourceGroup](https://msdn.microsoft.com/library/dn654594.aspx) cmdlet, specifying one of the Azure regions in the **Location** parameter. (You can find available regions for different Azure resources by running [Get-AzureLocation](https://msdn.microsoft.com/library/dn654582.aspx).) For example:\n\n```\nNew-AzureResourceGroup –Name MyBatchResourceGroup –location \"Central US\"\n```\n\nThen, create a new Batch account account in the resource group, also specifying an account name for <*account_name*> and a location where the Batch service is available. Creating the account can take several minutes to complete. For example:\n\n```\nNew-AzureBatchAccount –AccountName <account_name> –Location \"Central US\" –ResourceGroupName MyBatchResourceGroup\n```\n\n> [AZURE.NOTE] The Batch account name must be unique to Azure, contain between 3 and 24 characters, and use lowercase letters and numbers only.\n\n### Get account access keys\n**Get-AzureBatchAccountKeys** shows the access keys associated with an Azure Batch account. For example, run the following to get the primary and secondary keys of the account you created.\n\n```\n$Account = Get-AzureBatchAccountKeys –AccountName <accountname>\n$Account.PrimaryAccountKey\n$Account.SecondaryAccountKey\n```\n\n### Generate a new access key\n**New-AzureBatchAccountKey** generates a new primary or secondary account key for an Azure Batch account. For example, to generate a new primary key for your Batch account, type:\n\n```\nNew-AzureBatchAccountKey -AccountName <account_name> -KeyType Primary\n```\n\n> [AZURE.NOTE] To generate a new secondary key, specify \"Secondary\" for the **KeyType** parameter. You have to regenerate the primary and secondary keys separately.\n\n### Delete a Batch account\n**Remove-AzureBatchAccount** deletes a Batch account. For example:\n\n```\nRemove-AzureBatchAccount -AccountName <account_name>\n```\n\nWhen prompted, confirm you want to remove the account. Account removal can take some time to complete.\n\n## Query for jobs, tasks, and other details\n\nUse cmdlets such as **Get-AzureBatchJob**, **Get-AzureBatchTask**, and **Get-AzureBatchPool** to query for entities created under a Batch account.\n\nTo use these cmdlets, you first need to create an AzureBatchContext object to store your account name and keys:\n\n```\n$context = Get-AzureBatchAccountKeys \"<account_name>\"\n```\n\nYou pass this context into cmdlets that interact with the Batch service by using the **BatchContext** parameter.\n\n> [AZURE.NOTE] By default, the account's primary key is used for authentication, but you can explicitly select the key to use by changing your BatchAccountContext object’s **KeyInUse** property: `$context.KeyInUse = \"Secondary\"`.\n\n\n### Query for data\n\nAs an example, use **Get-AzureBatchPools** to find your pools. By default this queries for all pools under your account, assuming you already stored the BatchAccountContext object in *$context*:\n\n```\nGet-AzureBatchPool -BatchContext $context\n```\n### Use an OData filter\n\nYou can supply an OData filter using the **Filter** parameter to find only the objects you’re interested in. For example, you can find all pools with ids starting with “myPool”:\n\n```\n$filter = \"startswith(id,'myPool')\"\nGet-AzureBatchPool -Filter $filter -BatchContext $context\n```\n\nThis method is not as flexible as using “Where-Object” in a local pipeline. However, the query gets sent to the Batch service directly so that all filtering happens on the server side, saving Internet bandwidth.\n\n### Use the Id parameter\n\nAn alternative to an OData filter is to use the **Id** parameter. To query for a specific pool with id \"myPool\":\n\n```\nGet-AzureBatchPool -Id \"myPool\" -BatchContext $context\n\n```\nThe **Id** parameter supports only full-id search, not wildcards or OData-style filters.\n\n### Use the pipeline\n\nBatch cmdlets can leverage the PowerShell pipeline to send data between cmdlets. This has the same effect as specifying a parameter but makes listing multiple entities easier. For example, you can find all tasks under your account:\n\n```\nGet-AzureBatchJob -BatchContext $context | Get-AzureBatchTask -BatchContext $context\n```\n\n### Use the MaxCount parameter\n\nBy default, each cmdlet returns a maximum of 1000 objects. If you reach this limit, you can either refine your filter to bring back fewer objects, or explicitly set a maximum using the **MaxCount** parameter. For example:\n\n```\nGet-AzureBatchTask -MaxCount 2500 -BatchContext $context\n\n```\n\nTo remove the upper bound, set **MaxCount** to 0 or less.\n\n## Related topics\n* [Batch technical overview](batch-technical-overview.md)\n* [Download Azure PowerShell](http://go.microsoft.com/p/?linkid=9811175)\n* [Azure Batch cmdlet reference](https://msdn.microsoft.com/library/azure/mt125957.aspx)\n* [Efficient List Queries](batch-efficient-list-queries.md)\n\ntest\n"
}