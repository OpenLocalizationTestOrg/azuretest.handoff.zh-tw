<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Get Started with Event Hubs</source>
          <target state="new">Get Started with Event Hubs</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Follow this tutorial to get started using Azure Event Hubs; sending events in C and receiving hem in C# using the EventProcessorHost.</source>
          <target state="new">Follow this tutorial to get started using Azure Event Hubs; sending events in C and receiving hem in C# using the EventProcessorHost.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get started with Event Hubs</source>
          <target state="new">Get started with Event Hubs</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="new">Introduction</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Event Hubs is a highly scalable ingestion system that can intake millions of events per second, enabling an application to process and analyze the massive amounts of data produced by your connected devices and applications.</source>
          <target state="new">Event Hubs is a highly scalable ingestion system that can intake millions of events per second, enabling an application to process and analyze the massive amounts of data produced by your connected devices and applications.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Once collected into Event Hubs, you can transform and store data using any real-time analytics provider or storage cluster.</source>
          <target state="new">Once collected into Event Hubs, you can transform and store data using any real-time analytics provider or storage cluster.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, please see <bpt id="p1">[</bpt><ept id="p1">Event Hubs Overview]</ept>.</source>
          <target state="new">For more information, please see <bpt id="p1">[</bpt><ept id="p1">Event Hubs Overview]</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will learn how to ingest messages into an Event Hub using a console application in C, and to retrieve them in parallel using the C# <bpt id="p1">[</bpt><ept id="p1">Event Processor Host]</ept> library.</source>
          <target state="new">In this tutorial, you will learn how to ingest messages into an Event Hub using a console application in C, and to retrieve them in parallel using the C# <bpt id="p1">[</bpt><ept id="p1">Event Processor Host]</ept> library.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In order to complete this tutorial you will need the following:</source>
          <target state="new">In order to complete this tutorial you will need the following:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A C development environment.</source>
          <target state="new">A C development environment.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For this tutorial, we will assume the gcc stack on an <bpt id="p1">[</bpt>Azure Linux VM<ept id="p1">](../virtual-machines-linux-tutorial.md)</ept> with Ubuntu 14.04.</source>
          <target state="new">For this tutorial, we will assume the gcc stack on an <bpt id="p1">[</bpt>Azure Linux VM<ept id="p1">](../virtual-machines-linux-tutorial.md)</ept> with Ubuntu 14.04.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Instructions for other environments will be provided in external links.</source>
          <target state="new">Instructions for other environments will be provided in external links.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Microsoft Visual Studio Express 2013 for Windows</source>
          <target state="new">Microsoft Visual Studio Express 2013 for Windows</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An active Azure account.</source>
          <target state="new">An active Azure account.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you don't have an account, you can create a free trial account in just a couple of minutes.</source>
          <target state="new">If you don't have an account, you can create a free trial account in just a couple of minutes.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For details, see <ph id="ph1">&lt;a href="http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A0E0E5C02&amp;amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fdevelop%2Fmobile%2Ftutorials%2Fget-started%2F" target="_blank"&gt;</ph>Azure Free Trial<ph id="ph2">&lt;/a&gt;</ph>.</source>
          <target state="new">For details, see <ph id="ph1">&lt;a href="http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A0E0E5C02&amp;amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fdevelop%2Fmobile%2Ftutorials%2Fget-started%2F" target="_blank"&gt;</ph>Azure Free Trial<ph id="ph2">&lt;/a&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create an Event Hub</source>
          <target state="new">Create an Event Hub</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Log on to the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept>, and click <bpt id="p2">**</bpt>NEW<ept id="p2">**</ept> at the bottom of the screen.</source>
          <target state="new">Log on to the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept>, and click <bpt id="p2">**</bpt>NEW<ept id="p2">**</ept> at the bottom of the screen.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>App Services<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>Service Bus<ept id="p2">**</ept>, then <bpt id="p3">**</bpt>Event Hub<ept id="p3">**</ept>, then <bpt id="p4">**</bpt>Quick Create<ept id="p4">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>App Services<ept id="p1">**</ept>, then <bpt id="p2">**</bpt>Service Bus<ept id="p2">**</ept>, then <bpt id="p3">**</bpt>Event Hub<ept id="p3">**</ept>, then <bpt id="p4">**</bpt>Quick Create<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>![][1]</source>
          <target state="new">![][1]</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Type a name for your Event Hub, select your desired region, and then click <bpt id="p1">**</bpt>Create a new Event Hub<ept id="p1">**</ept>.</source>
          <target state="new">Type a name for your Event Hub, select your desired region, and then click <bpt id="p1">**</bpt>Create a new Event Hub<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>![][2]</source>
          <target state="new">![][2]</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Click the namespace you just created (usually <bpt id="p1">**</bpt><bpt id="p2">*</bpt>event hub name<ept id="p2">*</ept>-ns<ept id="p1">**</ept>).</source>
          <target state="new">Click the namespace you just created (usually <bpt id="p1">**</bpt><bpt id="p2">*</bpt>event hub name<ept id="p2">*</ept>-ns<ept id="p1">**</ept>).</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>![][3]</source>
          <target state="new">![][3]</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Event Hubs<ept id="p1">**</ept> tab at the top of the page, and then click the Event Hub you just created.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Event Hubs<ept id="p1">**</ept> tab at the top of the page, and then click the Event Hub you just created.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>![][4]</source>
          <target state="new">![][4]</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab at the top of the page, add a rule named <bpt id="p2">**</bpt>SendRule<ept id="p2">**</ept> with <bpt id="p3">*</bpt>Send<ept id="p3">*</ept> rights, add another rule called <bpt id="p4">**</bpt>ReceiveRule<ept id="p4">**</ept> with <bpt id="p5">*</bpt>Manage, Send, Listen<ept id="p5">*</ept> rights, and then click <bpt id="p6">**</bpt>Save<ept id="p6">**</ept>.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab at the top of the page, add a rule named <bpt id="p2">**</bpt>SendRule<ept id="p2">**</ept> with <bpt id="p3">*</bpt>Send<ept id="p3">*</ept> rights, add another rule called <bpt id="p4">**</bpt>ReceiveRule<ept id="p4">**</ept> with <bpt id="p5">*</bpt>Manage, Send, Listen<ept id="p5">*</ept> rights, and then click <bpt id="p6">**</bpt>Save<ept id="p6">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>![][5]</source>
          <target state="new">![][5]</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>On the same page, take note of the generated keys for <bpt id="p1">**</bpt>SendRule<ept id="p1">**</ept>.</source>
          <target state="new">On the same page, take note of the generated keys for <bpt id="p1">**</bpt>SendRule<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>![][6b]</source>
          <target state="new">![][6b]</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> tab at the top of the page, and then click <bpt id="p2">**</bpt>Connection Information<ept id="p2">**</ept>.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> tab at the top of the page, and then click <bpt id="p2">**</bpt>Connection Information<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Take note of the two connection strings.</source>
          <target state="new">Take note of the two connection strings.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>![][6]</source>
          <target state="new">![][6]</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Your Event Hub is now created, and you have the connection strings you need to send and receive events.</source>
          <target state="new">Your Event Hub is now created, and you have the connection strings you need to send and receive events.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Run the applications</source>
          <target state="new">Run the applications</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Now you are ready to run the applications.</source>
          <target state="new">Now you are ready to run the applications.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Run the <bpt id="p1">**</bpt>Receiver<ept id="p1">**</ept> project from Visual Studio, then wait for it to start the receivers for all the partitions.</source>
          <target state="new">Run the <bpt id="p1">**</bpt>Receiver<ept id="p1">**</ept> project from Visual Studio, then wait for it to start the receivers for all the partitions.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>![][21]</source>
          <target state="new">![][21]</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Run the <bpt id="p1">**</bpt>sender<ept id="p1">**</ept> program, and see the events appear in the receiver window.</source>
          <target state="new">Run the <bpt id="p1">**</bpt>sender<ept id="p1">**</ept> program, and see the events appear in the receiver window.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>![][24]</source>
          <target state="new">![][24]</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Now that you've built a working application that creates an Event Hub and sends and receives data, you can move on to the following scenarios:</source>
          <target state="new">Now that you've built a working application that creates an Event Hub and sends and receives data, you can move on to the following scenarios:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A complete <bpt id="p1">[</bpt><ept id="p1">sample application that uses Event Hubs]</ept>.</source>
          <target state="new">A complete <bpt id="p1">[</bpt><ept id="p1">sample application that uses Event Hubs]</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ept id="p1">Scale out Event Processing with Event Hubs]</ept> sample.</source>
          <target state="new">The <bpt id="p1">[</bpt><ept id="p1">Scale out Event Processing with Event Hubs]</ept> sample.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><ept id="p1">queued messaging solution]</ept> using Service Bus queues.</source>
          <target state="new">A <bpt id="p1">[</bpt><ept id="p1">queued messaging solution]</ept> using Service Bus queues.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Event Hubs overview</source>
          <target state="new">Event Hubs overview</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94d62e134630f9cdaf6b51cd04e0f6f5c1dccc36</xliffext:olfilehash>
  </header>
</xliff>