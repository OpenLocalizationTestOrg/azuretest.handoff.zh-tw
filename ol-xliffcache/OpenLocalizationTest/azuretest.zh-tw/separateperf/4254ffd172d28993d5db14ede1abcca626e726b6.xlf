<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contextual examples of best practices for implementing templates</source>
          <target state="new">Contextual examples of best practices for implementing templates</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Shows examples of Azure Resource Manager templates that illustrate best practices.</source>
          <target state="new">Shows examples of Azure Resource Manager templates that illustrate best practices.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Contextual examples of best practices for implementing templates</source>
          <target state="new">Contextual examples of best practices for implementing templates</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic provides 7 contextual examples of how to implement your Azure Resoure Manager templates.</source>
          <target state="new">This topic provides 7 contextual examples of how to implement your Azure Resoure Manager templates.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For an overview of the principles</source>
          <target state="new">For an overview of the principles</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>illustrated in these examples, see <bpt id="p1">[</bpt>Best practices for designing Azure Resource Manager templates<ept id="p1">](best-practices-resource-manager-design-templates.md)</ept>.</source>
          <target state="new">illustrated in these examples, see <bpt id="p1">[</bpt>Best practices for designing Azure Resource Manager templates<ept id="p1">](best-practices-resource-manager-design-templates.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic is part of a larger whitepaper.</source>
          <target state="new">This topic is part of a larger whitepaper.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To read the full paper, download [World Class ARM Templates Considerations and Proven Practices](http://download.microsoft.com/download/8/E/1/8E1DBEFA-CECE-4DC9-A813-93520A5D7CFE/World Class ARM Templates - Considerations and Proven Practices.pdf).</source>
          <target state="new">To read the full paper, download [World Class ARM Templates Considerations and Proven Practices](http://download.microsoft.com/download/8/E/1/8E1DBEFA-CECE-4DC9-A813-93520A5D7CFE/World Class ARM Templates - Considerations and Proven Practices.pdf).</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Moving a capability-scoped template into an end-to-end solution-scoped template</source>
          <target state="new">Moving a capability-scoped template into an end-to-end solution-scoped template</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The pattern for developing a capability scoped template was shared earlier.</source>
          <target state="new">The pattern for developing a capability scoped template was shared earlier.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>One question that you may ask yourself is if there are different considerations</source>
          <target state="new">One question that you may ask yourself is if there are different considerations</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>when using this capability scoped template by itself or as part of an end to end scoped solution template.</source>
          <target state="new">when using this capability scoped template by itself or as part of an end to end scoped solution template.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, if there was a technology focused template that deployed SQL Server as a capability, what would be the considerations, if any, from using that</source>
          <target state="new">For example, if there was a technology focused template that deployed SQL Server as a capability, what would be the considerations, if any, from using that</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>independently or as part of a broader end to end solution scoped template that may use that SQL Server to support a web application.</source>
          <target state="new">independently or as part of a broader end to end solution scoped template that may use that SQL Server to support a web application.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When looking at this scenario, it’s relevant to look at the number of resources likely involved.</source>
          <target state="new">When looking at this scenario, it’s relevant to look at the number of resources likely involved.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For a robust implementation, your capability scoped template won’t</source>
          <target state="new">For a robust implementation, your capability scoped template won’t</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>just be a storage account and a single VM with one installation of SQL Server.</source>
          <target state="new">just be a storage account and a single VM with one installation of SQL Server.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A robust capability scoped template will deploy multiple VMs with SQL Server deployed</source>
          <target state="new">A robust capability scoped template will deploy multiple VMs with SQL Server deployed</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>for high availability.</source>
          <target state="new">for high availability.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For some capabilities, such as Analysis Services, your topology will also have likely have Active Directory deployed with it as well.</source>
          <target state="new">For some capabilities, such as Analysis Services, your topology will also have likely have Active Directory deployed with it as well.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Two key considerations for this scenario include the lifecycle of how SQL Server will be used and the RBAC that you wish to apply to it.</source>
          <target state="new">Two key considerations for this scenario include the lifecycle of how SQL Server will be used and the RBAC that you wish to apply to it.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Specifically, will</source>
          <target state="new">Specifically, will</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>the SQL Server be updated and deleted with the rest of the solution or will it’s lifecycle vary from the solution or other parts of the solution.</source>
          <target state="new">the SQL Server be updated and deleted with the rest of the solution or will it’s lifecycle vary from the solution or other parts of the solution.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="new">If the</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>lifecycle will vary, you will want to consider placing it in another resource group.</source>
          <target state="new">lifecycle will vary, you will want to consider placing it in another resource group.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Another consideration is how you would like to apply RBAC to your SQL Server capability scoped solution template.</source>
          <target state="new">Another consideration is how you would like to apply RBAC to your SQL Server capability scoped solution template.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Based on how you want to apply RBAC within</source>
          <target state="new">Based on how you want to apply RBAC within</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>your topology, you may opt for different resource groups based to align with those specifics.</source>
          <target state="new">your topology, you may opt for different resource groups based to align with those specifics.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can apply RBAC at the Resource Level, but given the number of</source>
          <target state="new">You can apply RBAC at the Resource Level, but given the number of</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>resources for the SQL Server capability scoped solution template, a distinct resource group with RBAC applied to it should be a consideration.</source>
          <target state="new">resources for the SQL Server capability scoped solution template, a distinct resource group with RBAC applied to it should be a consideration.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Another consideration is an evaluation of the SQL Server capability scoped solution template to identify if it currently creates certain resources itself vs.</source>
          <target state="new">Another consideration is an evaluation of the SQL Server capability scoped solution template to identify if it currently creates certain resources itself vs.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>allowing you to “Bring Your Own Resources.”</source>
          <target state="new">allowing you to “Bring Your Own Resources.”</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In a “Bring Your Own Resources” (BYOR) model, the capability scoped solution template would allow your template to</source>
          <target state="new">In a “Bring Your Own Resources” (BYOR) model, the capability scoped solution template would allow your template to</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>re-use previously existing resources, with the typical examples being a storage account, virtual network or an availability set.</source>
          <target state="new">re-use previously existing resources, with the typical examples being a storage account, virtual network or an availability set.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If a BYOR approach doesn’t exist</source>
          <target state="new">If a BYOR approach doesn’t exist</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>in your capability scoped template, you can alter it using the approach defined earlier in this document for optional resource templates.</source>
          <target state="new">in your capability scoped template, you can alter it using the approach defined earlier in this document for optional resource templates.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In this case, your</source>
          <target state="new">In this case, your</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>end-to-end solution scoped template would have a shared resource template with these common resources, and the capability scoped template would be extended to</source>
          <target state="new">end-to-end solution scoped template would have a shared resource template with these common resources, and the capability scoped template would be extended to</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>support these resources as optional.</source>
          <target state="new">support these resources as optional.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This creates a better capability scoped solution template as it now can be used independently or part of a composition.</source>
          <target state="new">This creates a better capability scoped solution template as it now can be used independently or part of a composition.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When assessing whether the storage account should be passed in from the end to end solution scoped template, RBAC should also be re-evaluated.</source>
          <target state="new">When assessing whether the storage account should be passed in from the end to end solution scoped template, RBAC should also be re-evaluated.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Specifically,</source>
          <target state="new">Specifically,</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>do you need to ensure that RBAC be applied to this specific resource?</source>
          <target state="new">do you need to ensure that RBAC be applied to this specific resource?</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If so, if the resource is expected to have this applied when it is passed in, a level of</source>
          <target state="new">If so, if the resource is expected to have this applied when it is passed in, a level of</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>trust is being placed not just in the Solution Block but any user who wishes to optionally provide this to the capability scoped template when used</source>
          <target state="new">trust is being placed not just in the Solution Block but any user who wishes to optionally provide this to the capability scoped template when used</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>independently.</source>
          <target state="new">independently.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If RBAC is critical, then you should consider on whether to make this an optional template within the capability scoped solution template</source>
          <target state="new">If RBAC is critical, then you should consider on whether to make this an optional template within the capability scoped solution template</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>or to require it’s creation with the required RBAC from within the capability scoped solution template.</source>
          <target state="new">or to require it’s creation with the required RBAC from within the capability scoped solution template.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If a decision is made to place these in different resource groups, you can also use Resource Links to define the relationships between the resources – even</source>
          <target state="new">If a decision is made to place these in different resource groups, you can also use Resource Links to define the relationships between the resources – even</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>when the resources span resource groups.</source>
          <target state="new">when the resources span resource groups.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Creating an end-to-end solution-scoped template with multiple capability-scoped templates</source>
          <target state="new">Creating an end-to-end solution-scoped template with multiple capability-scoped templates</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This is largely a a superset of the previous example.</source>
          <target state="new">This is largely a a superset of the previous example.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In this scenario, an organization has multiple capability scoped solution templates for a set of</source>
          <target state="new">In this scenario, an organization has multiple capability scoped solution templates for a set of</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>data technologies such as Kafka, Apache Hadoop, Apache Spark, and Apache Storm that they wish to pull together in a single solution block.</source>
          <target state="new">data technologies such as Kafka, Apache Hadoop, Apache Spark, and Apache Storm that they wish to pull together in a single solution block.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The resulting</source>
          <target state="new">The resulting</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>composition will use those capability scoped solution templates as well as a shared storage and virtual network with specific subnet assignments.</source>
          <target state="new">composition will use those capability scoped solution templates as well as a shared storage and virtual network with specific subnet assignments.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Outside of the specific capability scoped templates required, additional resources will be necessary for the solution, even if just scripts to</source>
          <target state="new">Outside of the specific capability scoped templates required, additional resources will be necessary for the solution, even if just scripts to</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>stitch the capability scoped templates together and configure them.</source>
          <target state="new">stitch the capability scoped templates together and configure them.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In this case, it’s identified that there’s a shared virtual network and a shared storage account.</source>
          <target state="new">In this case, it’s identified that there’s a shared virtual network and a shared storage account.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To accommodate this, you should add these to a shared</source>
          <target state="new">To accommodate this, you should add these to a shared</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>resources template in your end to end solution scoped template and ensure that a “Bring Your Own Resource” approach is supported in the capability scoped templates.</source>
          <target state="new">resources template in your end to end solution scoped template and ensure that a “Bring Your Own Resource” approach is supported in the capability scoped templates.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If it is not, you can modify your capability scoped templates to accommodate this, as described in the previous example.</source>
          <target state="new">If it is not, you can modify your capability scoped templates to accommodate this, as described in the previous example.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For the additional resources that you will be adding, you will follow a superset of the pattern used for creating an individual capability scoped template.</source>
          <target state="new">For the additional resources that you will be adding, you will follow a superset of the pattern used for creating an individual capability scoped template.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In this case, you will add a Shared Resources Template, Optional Resources Template(s), Member Node template(s), and desired state configuration (scripts,</source>
          <target state="new">In this case, you will add a Shared Resources Template, Optional Resources Template(s), Member Node template(s), and desired state configuration (scripts,</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Chef, Puppet, Powershell DSC) for the new resources.</source>
          <target state="new">Chef, Puppet, Powershell DSC) for the new resources.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Where there are dependencies, you’ll optimize to use implicit references vs. dependsOn where possible</source>
          <target state="new">Where there are dependencies, you’ll optimize to use implicit references vs. dependsOn where possible</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>to eliminate the potential for stray dependencies which may impact the parallelism (and speed) of your deployment.</source>
          <target state="new">to eliminate the potential for stray dependencies which may impact the parallelism (and speed) of your deployment.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You’ll also consider the lifecycle of</source>
          <target state="new">You’ll also consider the lifecycle of</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>these resources, the RBAC considerations, and dependencies to determine if they should be placed in different resource groups.</source>
          <target state="new">these resources, the RBAC considerations, and dependencies to determine if they should be placed in different resource groups.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When adding shared resources, such as the shared storage account, you should also evaluate if a resource lock is required for it, as this can help avoid</source>
          <target state="new">When adding shared resources, such as the shared storage account, you should also evaluate if a resource lock is required for it, as this can help avoid</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>accidental deletions.</source>
          <target state="new">accidental deletions.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When adding new resources, you should also examine if any of the resources being added to the end to end solution scoped template could be isolated out</source>
          <target state="new">When adding new resources, you should also examine if any of the resources being added to the end to end solution scoped template could be isolated out</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>as capability scoped templates themselves.</source>
          <target state="new">as capability scoped templates themselves.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If so, this should be strongly considered as to promote further decomposition which can provide benefits for</source>
          <target state="new">If so, this should be strongly considered as to promote further decomposition which can provide benefits for</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>both re-use and testing.</source>
          <target state="new">both re-use and testing.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When integrating in your solution blocks, your next considerations are, as identified in the previous example, to identify if the lifecycle for the individual</source>
          <target state="new">When integrating in your solution blocks, your next considerations are, as identified in the previous example, to identify if the lifecycle for the individual</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>capability scoped solution templates are different from that of the broader solution and if any RBAC requirements would necessitate separating these into</source>
          <target state="new">capability scoped solution templates are different from that of the broader solution and if any RBAC requirements would necessitate separating these into</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>separate resource groups.</source>
          <target state="new">separate resource groups.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Finally, you will want to consider if you would like to be able to define and query links between the resources.</source>
          <target state="new">Finally, you will want to consider if you would like to be able to define and query links between the resources.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If you do, employing resource links will</source>
          <target state="new">If you do, employing resource links will</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>enable you to do this across your end to end scoped solution template, even when spanning multiple resource groups.</source>
          <target state="new">enable you to do this across your end to end scoped solution template, even when spanning multiple resource groups.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Creating an end-to-end solution-scoped template with partial on/off pattern</source>
          <target state="new">Creating an end-to-end solution-scoped template with partial on/off pattern</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This scenario is a variant of the previous one.</source>
          <target state="new">This scenario is a variant of the previous one.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In this case, the customer extracts data from an on premise system at fixed intervals over the course of a day.</source>
          <target state="new">In this case, the customer extracts data from an on premise system at fixed intervals over the course of a day.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>They have a data pipeline to process this incoming data and a relational data store where the data is always available for queries.</source>
          <target state="new">They have a data pipeline to process this incoming data and a relational data store where the data is always available for queries.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>As the cloud is a</source>
          <target state="new">As the cloud is a</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>pay-as-you-go model, the customer would like to have the data pipeline operational only during those intervals when data is presented for processing.</source>
          <target state="new">pay-as-you-go model, the customer would like to have the data pipeline operational only during those intervals when data is presented for processing.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>As part of their data pipeline, they have a SQL Server, which receives the processed data and makes it available for querying.</source>
          <target state="new">As part of their data pipeline, they have a SQL Server, which receives the processed data and makes it available for querying.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The customer has indicated that</source>
          <target state="new">The customer has indicated that</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>while they would like to turn the ingestion and processing pieces of the pipeline on and off on a fixed schedule, they would like to always have the SQL Server available.</source>
          <target state="new">while they would like to turn the ingestion and processing pieces of the pipeline on and off on a fixed schedule, they would like to always have the SQL Server available.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In this scenario, there are what appear to be explicit differences in lifecycle and potentially some additional considerations the customer hasn’t</source>
          <target state="new">In this scenario, there are what appear to be explicit differences in lifecycle and potentially some additional considerations the customer hasn’t</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>raised but should be evaluated.</source>
          <target state="new">raised but should be evaluated.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>As described, the SQL Server deployment will be kept alive while other resources will be created and deleted.</source>
          <target state="new">As described, the SQL Server deployment will be kept alive while other resources will be created and deleted.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>They will be deployed together initially</source>
          <target state="new">They will be deployed together initially</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>but then other members of the template will be destroyed and created on a different lifecycle.</source>
          <target state="new">but then other members of the template will be destroyed and created on a different lifecycle.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>These can be isolated into different resource groups or be</source>
          <target state="new">These can be isolated into different resource groups or be</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>left in the same resource group with resource locking applied to the SQL Server resources.</source>
          <target state="new">left in the same resource group with resource locking applied to the SQL Server resources.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>As SQL Server specifically is, as described in the earlier examples,</source>
          <target state="new">As SQL Server specifically is, as described in the earlier examples,</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>likely represented as a larger set of resources, separating it out into it’s own resource group would be appropriate.</source>
          <target state="new">likely represented as a larger set of resources, separating it out into it’s own resource group would be appropriate.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The other consideration is that while the customer has said that they want the rest of the data pipeline</source>
          <target state="new">The other consideration is that while the customer has said that they want the rest of the data pipeline</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>turned on and off on a schedule, they may not be considering the inconsist behavior of reporting systems.</source>
          <target state="new">turned on and off on a schedule, they may not be considering the inconsist behavior of reporting systems.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Scheduled delivery of data from third parties is not</source>
          <target state="new">Scheduled delivery of data from third parties is not</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>always precise – connectivity may be unavailable for a period of time, clocks on local or cloud based servers may drift, time changes may or may not occur as</source>
          <target state="new">always precise – connectivity may be unavailable for a period of time, clocks on local or cloud based servers may drift, time changes may or may not occur as</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>expected, etc. It should be evaluated if your ingestion mechanism should be used in an on/off pattern as well, and if so, if the lifecycle for that is greater</source>
          <target state="new">expected, etc. It should be evaluated if your ingestion mechanism should be used in an on/off pattern as well, and if so, if the lifecycle for that is greater</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>than that of the processing components.</source>
          <target state="new">than that of the processing components.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If you’re using a managed service such as Azure Data Factory or Event Hub, this is less of an issue as their operating models and associated billing approach</source>
          <target state="new">If you’re using a managed service such as Azure Data Factory or Event Hub, this is less of an issue as their operating models and associated billing approach</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>make them readily available to ingest your data and place it in storage.</source>
          <target state="new">make them readily available to ingest your data and place it in storage.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>If you’re using another technology, such as Kafka, that you’ve deployed to a virtual</source>
          <target state="new">If you’re using another technology, such as Kafka, that you’ve deployed to a virtual</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>machine, you may want to look at the lifecycle for how you make that and the associated storage account(s) required for ingestion available.</source>
          <target state="new">machine, you may want to look at the lifecycle for how you make that and the associated storage account(s) required for ingestion available.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This may result in</source>
          <target state="new">This may result in</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>the ingestion and processing resources being placed in a different resource groups based on their lifecycle.</source>
          <target state="new">the ingestion and processing resources being placed in a different resource groups based on their lifecycle.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Supporting distinct environments within a subscription</source>
          <target state="new">Supporting distinct environments within a subscription</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To effectively deliver services, many organizations have a set of scale, billing isolation, accountability isolation and geographic isolation needs that must</source>
          <target state="new">To effectively deliver services, many organizations have a set of scale, billing isolation, accountability isolation and geographic isolation needs that must</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>be met.</source>
          <target state="new">be met.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>When designing services for Azure, they would have historically used subscription partitioning in their approach to satisfy these needs.</source>
          <target state="new">When designing services for Azure, they would have historically used subscription partitioning in their approach to satisfy these needs.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Resource Manager relaxes constraints on the number of resources of a given type that can be deployed within a subscription and also introduces resource groups,</source>
          <target state="new">Resource Manager relaxes constraints on the number of resources of a given type that can be deployed within a subscription and also introduces resource groups,</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>RBAC, and auditing.</source>
          <target state="new">RBAC, and auditing.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The combination of these can allow organizations to use resource groups for partitioning, allowing them to meet their requirements and</source>
          <target state="new">The combination of these can allow organizations to use resource groups for partitioning, allowing them to meet their requirements and</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>reduce the amount, if any, of subscription partitioning they might have to do.</source>
          <target state="new">reduce the amount, if any, of subscription partitioning they might have to do.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This section looks at the requirements seen for these types of environments and provides guidance on how to deliver environments that satisfy them with ARM.</source>
          <target state="new">This section looks at the requirements seen for these types of environments and provides guidance on how to deliver environments that satisfy them with ARM.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Isolation considerations</source>
          <target state="new">Isolation considerations</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This section explores common customer drivers for environment, billing, and geographic isolation in more detail.</source>
          <target state="new">This section explores common customer drivers for environment, billing, and geographic isolation in more detail.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Environment isolation</source>
          <target state="new">Environment isolation</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Service owners have a desire to isolate their different environments.</source>
          <target state="new">Service owners have a desire to isolate their different environments.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Having each environment isolated allows teams the ability to have more fine-grained</source>
          <target state="new">Having each environment isolated allows teams the ability to have more fine-grained</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>control over who can have access to the environments.</source>
          <target state="new">control over who can have access to the environments.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>While development environments may be more open in terms of who can access them, as the</source>
          <target state="new">While development environments may be more open in terms of who can access them, as the</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>environment scope moves closer to production the number of users – be they human or system accounts used for automation – is reduced to aid in</source>
          <target state="new">environment scope moves closer to production the number of users – be they human or system accounts used for automation – is reduced to aid in</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>compliance and minimize overall risk.</source>
          <target state="new">compliance and minimize overall risk.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Billing isolation – developing vs. running a service</source>
          <target state="new">Billing isolation – developing vs. running a service</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To accurately reflect Cost of Goods Sold (COGS) and Operating Expenses (OpEx), business owners want to be able to break apart the cost of researching</source>
          <target state="new">To accurately reflect Cost of Goods Sold (COGS) and Operating Expenses (OpEx), business owners want to be able to break apart the cost of researching</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>and building the service vs. running the services.</source>
          <target state="new">and building the service vs. running the services.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A superset of environment isolation mentioned previously, the intent would be consolidation of development and test for individual and/or</source>
          <target state="new">A superset of environment isolation mentioned previously, the intent would be consolidation of development and test for individual and/or</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>aggregated billing for the former while production would remain independent for the latter.</source>
          <target state="new">aggregated billing for the former while production would remain independent for the latter.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Billing isolation – adding transparency and accountability to service consumption costs</source>
          <target state="new">Billing isolation – adding transparency and accountability to service consumption costs</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Billing isolation is also used to both gain transparency into costs related to platform consumption by specific teams and introducing appropriate</source>
          <target state="new">Billing isolation is also used to both gain transparency into costs related to platform consumption by specific teams and introducing appropriate</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>levels of accountability.</source>
          <target state="new">levels of accountability.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>While the cloud is elastic and allows for a pay-as-you-go model, this is less familiar to some developers coming from a non-cloud model where hardware</source>
          <target state="new">While the cloud is elastic and allows for a pay-as-you-go model, this is less familiar to some developers coming from a non-cloud model where hardware</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>is procured and owned.</source>
          <target state="new">is procured and owned.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>In the non-cloud model, there were physical limitations in terms of the number of “machines” that could be turned on and there</source>
          <target state="new">In the non-cloud model, there were physical limitations in terms of the number of “machines” that could be turned on and there</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>were limited incentives to scale down or turn off resources when not in use.</source>
          <target state="new">were limited incentives to scale down or turn off resources when not in use.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Procurement of this dedicated hardware, in many cases, was not done by the</source>
          <target state="new">Procurement of this dedicated hardware, in many cases, was not done by the</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>developers that were utilizing it.</source>
          <target state="new">developers that were utilizing it.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>By isolating subscriptions and assigning accountability for those subscriptions to specific teams, service owners found this type of subscription</source>
          <target state="new">By isolating subscriptions and assigning accountability for those subscriptions to specific teams, service owners found this type of subscription</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>partitioning beneficial in driving and enforcing desired behaviors.</source>
          <target state="new">partitioning beneficial in driving and enforcing desired behaviors.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Geography driven isolation – deployments specific to and governed by laws of a specific geography</source>
          <target state="new">Geography driven isolation – deployments specific to and governed by laws of a specific geography</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>In certain contexts, there will be requirements that services targeted for a specific geography will need to consider how they deploy to address</source>
          <target state="new">In certain contexts, there will be requirements that services targeted for a specific geography will need to consider how they deploy to address</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>compliance considerations.</source>
          <target state="new">compliance considerations.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>While a service may be global in nature, deployments that reside within or provide service to certain geographies may be governed by operational</source>
          <target state="new">While a service may be global in nature, deployments that reside within or provide service to certain geographies may be governed by operational</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>staffing requirements.</source>
          <target state="new">staffing requirements.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Specifically, having only individuals who are citizens of a specific country or country set and/or pass certain background screening</source>
          <target state="new">Specifically, having only individuals who are citizens of a specific country or country set and/or pass certain background screening</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>processes operate those services.</source>
          <target state="new">processes operate those services.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Geographic isolation also provides benefits in terms of taking advantage of new platform services and capabilities.</source>
          <target state="new">Geographic isolation also provides benefits in terms of taking advantage of new platform services and capabilities.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Some geographies, such as China, may</source>
          <target state="new">Some geographies, such as China, may</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>have only a subset of the platform services available and/or have delayed deployment of platform services.</source>
          <target state="new">have only a subset of the platform services available and/or have delayed deployment of platform services.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Geographic isolation allows teams the ability to evolve their services to take advantage of new or enhanced platform services and capabilities where</source>
          <target state="new">Geographic isolation allows teams the ability to evolve their services to take advantage of new or enhanced platform services and capabilities where</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>they are available.</source>
          <target state="new">they are available.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Compliance considerations</source>
          <target state="new">Compliance considerations</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Services can be delivered across multiple geographies and to multiple verticals.</source>
          <target state="new">Services can be delivered across multiple geographies and to multiple verticals.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>These audiences often have sensitive data or processes contained within</source>
          <target state="new">These audiences often have sensitive data or processes contained within</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>their applications and there are associated compliance regulations designed to both protect them and audit engagement with them.</source>
          <target state="new">their applications and there are associated compliance regulations designed to both protect them and audit engagement with them.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Separation of roles and duties</source>
          <target state="new">Separation of roles and duties</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Separation of roles and duties is a key requirement for internal services to be compliant with internal policies.</source>
          <target state="new">Separation of roles and duties is a key requirement for internal services to be compliant with internal policies.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Many commercial services also require</source>
          <target state="new">Many commercial services also require</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>this to remain in compliance with governments and industry regulatory guidelines.</source>
          <target state="new">this to remain in compliance with governments and industry regulatory guidelines.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Services need to limit access to services and their underlying resources</source>
          <target state="new">Services need to limit access to services and their underlying resources</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>to authorized roles under specific circumstances.</source>
          <target state="new">to authorized roles under specific circumstances.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Many services have built scaffolding to deliver two capabilities – RBAC and auditing.</source>
          <target state="new">Many services have built scaffolding to deliver two capabilities – RBAC and auditing.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Role-based access control (RBAC) use cases</source>
          <target state="new">Role-based access control (RBAC) use cases</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>In compliance scenarios, it is important to constrain access to certain resources.</source>
          <target state="new">In compliance scenarios, it is important to constrain access to certain resources.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For example, when looking at sensitive data across multiple scenarios where compliance is relevant - health information, financial data,</source>
          <target state="new">For example, when looking at sensitive data across multiple scenarios where compliance is relevant - health information, financial data,</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>tax records, etc. -  it is important to limit the number of individuals who can access, view, or manipulate the data to just those who require</source>
          <target state="new">tax records, etc. -  it is important to limit the number of individuals who can access, view, or manipulate the data to just those who require</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>access to do the business of the parent organization.</source>
          <target state="new">access to do the business of the parent organization.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>RBAC provides a distinct individual, system, or group with access to specific resources under identified conditions.</source>
          <target state="new">RBAC provides a distinct individual, system, or group with access to specific resources under identified conditions.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Auditing</source>
          <target state="new">Auditing</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>In addition to constrained access provided by RBAC, organizations also need to audit resource access and interaction with resources.</source>
          <target state="new">In addition to constrained access provided by RBAC, organizations also need to audit resource access and interaction with resources.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Implementing with Azure Resource Manager</source>
          <target state="new">Implementing with Azure Resource Manager</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Previously, organizations would have used subscription partitioning to accomplish these goals.</source>
          <target state="new">Previously, organizations would have used subscription partitioning to accomplish these goals.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>While possible, this was not ideal.</source>
          <target state="new">While possible, this was not ideal.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>As the creation of</source>
          <target state="new">As the creation of</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>a subscription is effectively a commerce activity, the Service Management API did not expose a mechanism by which to create or delete new subscriptions</source>
          <target state="new">a subscription is effectively a commerce activity, the Service Management API did not expose a mechanism by which to create or delete new subscriptions</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>automatically and subscriptions needed to be created manually.</source>
          <target state="new">automatically and subscriptions needed to be created manually.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The resulting number of subscriptions could grow significantly – for very large services</source>
          <target state="new">The resulting number of subscriptions could grow significantly – for very large services</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>such as Microsoft’s own commercial services – that number could span into over one thousand subscriptions.</source>
          <target state="new">such as Microsoft’s own commercial services – that number could span into over one thousand subscriptions.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This would often result in the creation of</source>
          <target state="new">This would often result in the creation of</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>custom scaffolding to create and manage subscriptions for an organization.</source>
          <target state="new">custom scaffolding to create and manage subscriptions for an organization.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>With Resource Manager, deploying multiple environments within a subscription is much more straightforward.</source>
          <target state="new">With Resource Manager, deploying multiple environments within a subscription is much more straightforward.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>It relaxes the previous fixed caps on resources</source>
          <target state="new">It relaxes the previous fixed caps on resources</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>that was in the previous model, which greatly reduces the need to partition due to resource constraints.</source>
          <target state="new">that was in the previous model, which greatly reduces the need to partition due to resource constraints.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Environments can be placed in resource groups, which can have specific RBAC applied to them, enabling you to deliver environment isolation.</source>
          <target state="new">Environments can be placed in resource groups, which can have specific RBAC applied to them, enabling you to deliver environment isolation.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>In scenarios</source>
          <target state="new">In scenarios</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>where geographic isolation is required, this can also be accomplished utilizing resource groups.</source>
          <target state="new">where geographic isolation is required, this can also be accomplished utilizing resource groups.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>As resource groups can span geographies, specific isolation</source>
          <target state="new">As resource groups can span geographies, specific isolation</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>for one or more geographies can be achieved.</source>
          <target state="new">for one or more geographies can be achieved.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>You can apply tags to resources and resource groups which can be used in billing roll ups and summarized views to provide billing isolation.</source>
          <target state="new">You can apply tags to resources and resource groups which can be used in billing roll ups and summarized views to provide billing isolation.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>You can use tags</source>
          <target state="new">You can use tags</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>to define the environment type (research, education, development, test, production), accountable organization or individual (“HR”, “Finance”, “John Smith”, “Jane Jones”).</source>
          <target state="new">to define the environment type (research, education, development, test, production), accountable organization or individual (“HR”, “Finance”, “John Smith”, “Jane Jones”).</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The auditing requirement is delivered as part of the underlying Azure Resource Manager’s set of out of the box capabilities and can be viewed in a central location.</source>
          <target state="new">The auditing requirement is delivered as part of the underlying Azure Resource Manager’s set of out of the box capabilities and can be viewed in a central location.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>End customers would have accounts registered in Azure Active Directory that would be used for authentication and for role based access control to the</source>
          <target state="new">End customers would have accounts registered in Azure Active Directory that would be used for authentication and for role based access control to the</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>environment and resources.</source>
          <target state="new">environment and resources.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Optimizing for density</source>
          <target state="new">Optimizing for density</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>While the resource limits are relaxed in Azure Resource Manager, there will still be limits.</source>
          <target state="new">While the resource limits are relaxed in Azure Resource Manager, there will still be limits.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Beyond creating the environments themselves, you should also</source>
          <target state="new">Beyond creating the environments themselves, you should also</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>look at achieving density of environments within subscriptions as well.</source>
          <target state="new">look at achieving density of environments within subscriptions as well.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Delivering an environment is delivering capacity to an indivual or organization and</source>
          <target state="new">Delivering an environment is delivering capacity to an indivual or organization and</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>you should evaluate what relevant “t-shirt size(s)” you will want to deliver.</source>
          <target state="new">you should evaluate what relevant “t-shirt size(s)” you will want to deliver.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Specifically, identify the variants between small, medium, large, and extra</source>
          <target state="new">Specifically, identify the variants between small, medium, large, and extra</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>larger customers in terms of the resources required.</source>
          <target state="new">larger customers in terms of the resources required.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>You may choose to use different subscriptions for different t-shirt sizes to achieve greater density.</source>
          <target state="new">You may choose to use different subscriptions for different t-shirt sizes to achieve greater density.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>For example, you may be able to accommodate 1000 small</source>
          <target state="new">For example, you may be able to accommodate 1000 small</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>t-shirt size environments, 500 medium size deployments, 100 large deployments, and 10 extra-large deployments in a given subscription.</source>
          <target state="new">t-shirt size environments, 500 medium size deployments, 100 large deployments, and 10 extra-large deployments in a given subscription.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>As there’s no billed</source>
          <target state="new">As there’s no billed</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>cost to have multiple subscriptions, you may want to isolate the different sizes into different subscriptions to provide maximum density.</source>
          <target state="new">cost to have multiple subscriptions, you may want to isolate the different sizes into different subscriptions to provide maximum density.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This can be done</source>
          <target state="new">This can be done</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>while keeping the number of subscriptions relatively modest and easy to manage.</source>
          <target state="new">while keeping the number of subscriptions relatively modest and easy to manage.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>One key consideration you should have is identifying if you would be willing to allow a customer to increase or change their t-shirt size and, if so,</source>
          <target state="new">One key consideration you should have is identifying if you would be willing to allow a customer to increase or change their t-shirt size and, if so,</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>how you would want to accommodate it.</source>
          <target state="new">how you would want to accommodate it.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>One approach is to allow a customer to acquire additional capacity within their existing resource group.</source>
          <target state="new">One approach is to allow a customer to acquire additional capacity within their existing resource group.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>This can be easily accommodated technically,</source>
          <target state="new">This can be easily accommodated technically,</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>but it has implications on density.</source>
          <target state="new">but it has implications on density.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Instead of crisply defined sizes for all customers, this introduces a level of variability that adds more overhead</source>
          <target state="new">Instead of crisply defined sizes for all customers, this introduces a level of variability that adds more overhead</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>for optimizing for density.</source>
          <target state="new">for optimizing for density.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>If every small size environment is a size X, you can easily pre-calculator how many small size environments to place in a</source>
          <target state="new">If every small size environment is a size X, you can easily pre-calculator how many small size environments to place in a</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>subscription for optimal density.</source>
          <target state="new">subscription for optimal density.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>When allowing customers to customize the environment, the result is an unpredictable number of variants and quantities</source>
          <target state="new">When allowing customers to customize the environment, the result is an unpredictable number of variants and quantities</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>of environments that could be X, X+1, X+2, etc.  With this level of variability, you would achieve less density as you would need to set aside capacity</source>
          <target state="new">of environments that could be X, X+1, X+2, etc.  With this level of variability, you would achieve less density as you would need to set aside capacity</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>within a subscription to accommodate these variances.</source>
          <target state="new">within a subscription to accommodate these variances.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>While possible, this is less than ideal as a general approach, as it achieves less density and requires more overhead to manage.</source>
          <target state="new">While possible, this is less than ideal as a general approach, as it achieves less density and requires more overhead to manage.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>For larger-sized</source>
          <target state="new">For larger-sized</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>environments, this may be a more viable option.</source>
          <target state="new">environments, this may be a more viable option.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>As fewer of these large and extra large environments would be placed in a subscription, you may choose</source>
          <target state="new">As fewer of these large and extra large environments would be placed in a subscription, you may choose</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>to place fewer of these in a subscription to accommodate growth.</source>
          <target state="new">to place fewer of these in a subscription to accommodate growth.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Another approach is that the customers current size environment is deleted and a new environment of a different size is created.</source>
          <target state="new">Another approach is that the customers current size environment is deleted and a new environment of a different size is created.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>While not appropriate for</source>
          <target state="new">While not appropriate for</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>some scenarios, this works well for environments that are used temporarily such as development and test environments.</source>
          <target state="new">some scenarios, this works well for environments that are used temporarily such as development and test environments.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The next easiest approach here is to provide the customer the ability to acquire a larger size environment and then manage the migration to that environment</source>
          <target state="new">The next easiest approach here is to provide the customer the ability to acquire a larger size environment and then manage the migration to that environment</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>on their own.</source>
          <target state="new">on their own.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>For example, a customer who had a SQL Server deployment in a small environment could purchase a medium environment and would be individually</source>
          <target state="new">For example, a customer who had a SQL Server deployment in a small environment could purchase a medium environment and would be individually</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>responsible for the transfer of data and custom state.</source>
          <target state="new">responsible for the transfer of data and custom state.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>An alternate approach is to provide a managed service where this transition from one size to another is accommodated.</source>
          <target state="new">An alternate approach is to provide a managed service where this transition from one size to another is accommodated.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>This is obviously more complicated, but</source>
          <target state="new">This is obviously more complicated, but</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>based on the workload(s) and customer(s) this may be something your organization would be willing to accommodate.</source>
          <target state="new">based on the workload(s) and customer(s) this may be something your organization would be willing to accommodate.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Delivering environments with additional customer policy constraints</source>
          <target state="new">Delivering environments with additional customer policy constraints</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Some organizations have additional requirements and policies for the environments that they deploy.</source>
          <target state="new">Some organizations have additional requirements and policies for the environments that they deploy.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Specifically, they have policies that constrain the</source>
          <target state="new">Specifically, they have policies that constrain the</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>ports exposed externally and may have policies that require monitoring of inbound and outbound traffic to the environment.</source>
          <target state="new">ports exposed externally and may have policies that require monitoring of inbound and outbound traffic to the environment.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>For supportability and cost considerations, there may also be constraints on what resources an end customer can create, update or delete.</source>
          <target state="new">For supportability and cost considerations, there may also be constraints on what resources an end customer can create, update or delete.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>For the organization providing the environment, they will also typically require access to the subscription for support.</source>
          <target state="new">For the organization providing the environment, they will also typically require access to the subscription for support.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>A superset of the previous scenario, this would require the addition of certain resources that would have additional constraints on who could and</source>
          <target state="new">A superset of the previous scenario, this would require the addition of certain resources that would have additional constraints on who could and</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>could not create resources of a given type.</source>
          <target state="new">could not create resources of a given type.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The ability for a user to create, update, or delete certain resources can be constrained using role based access control.</source>
          <target state="new">The ability for a user to create, update, or delete certain resources can be constrained using role based access control.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Examples would include an</source>
          <target state="new">Examples would include an</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>organization requiring a certain network VNET and potentially subnets which the end customer could not update or delete.</source>
          <target state="new">organization requiring a certain network VNET and potentially subnets which the end customer could not update or delete.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Resource locks can be implemented to establish that resources are read only or cannot be deleted.</source>
          <target state="new">Resource locks can be implemented to establish that resources are read only or cannot be deleted.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>RBAC can be used to allow users or service principals</source>
          <target state="new">RBAC can be used to allow users or service principals</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>to perform certain activities against a resource or resource group.</source>
          <target state="new">to perform certain activities against a resource or resource group.</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>If the organization requires that certain traffic, e.g. traffic between tiers in the application, first go through an intermediary such as a virtual</source>
          <target state="new">If the organization requires that certain traffic, e.g. traffic between tiers in the application, first go through an intermediary such as a virtual</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>network appliance, user defined routes should be used.</source>
          <target state="new">network appliance, user defined routes should be used.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A virtual appliance is nothing more than a VM that runs an application used to handle network traffic in some way, such as a firewall or a NAT device.</source>
          <target state="new">A virtual appliance is nothing more than a VM that runs an application used to handle network traffic in some way, such as a firewall or a NAT device.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>A number of third parties provide virtual network appliances on Azure, and organizations can also bring their own.</source>
          <target state="new">A number of third parties provide virtual network appliances on Azure, and organizations can also bring their own.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>A “bring your own” appliance approach allows an organization to re-use existing code that may be used in their on premise environments.</source>
          <target state="new">A “bring your own” appliance approach allows an organization to re-use existing code that may be used in their on premise environments.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>This virtual</source>
          <target state="new">This virtual</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>appliance VM must be able to receive incoming traffic that is not addressed to itself.</source>
          <target state="new">appliance VM must be able to receive incoming traffic that is not addressed to itself.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>To allow a VM to receive traffic addressed to other destinations,</source>
          <target state="new">To allow a VM to receive traffic addressed to other destinations,</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>you must enable IP Forwarding in the VM.</source>
          <target state="new">you must enable IP Forwarding in the VM.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>As with prior examples, resource lifecycle and RBAC constraints should be reviewed and considered as part of your resource group strategy.</source>
          <target state="new">As with prior examples, resource lifecycle and RBAC constraints should be reviewed and considered as part of your resource group strategy.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Securing resources from internal bad actors</source>
          <target state="new">Securing resources from internal bad actors</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>One concern for an organization may be protecting their resources and the templates that provision them from bad actors.</source>
          <target state="new">One concern for an organization may be protecting their resources and the templates that provision them from bad actors.</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>One example of this could be a bank wishing to ensure that a rogue software developer or member of their IT staff don’t make modifications or</source>
          <target state="new">One example of this could be a bank wishing to ensure that a rogue software developer or member of their IT staff don’t make modifications or</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>extract key information that results in data going to a bad actor for criminal purposes.</source>
          <target state="new">extract key information that results in data going to a bad actor for criminal purposes.</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>A typical enterprise scenario is to have a small group of Trusted Operators who have access to critical secrets within the deployed workloads,</source>
          <target state="new">A typical enterprise scenario is to have a small group of Trusted Operators who have access to critical secrets within the deployed workloads,</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>with a broader group of dev/ops personnel who can create or update VM deployments.</source>
          <target state="new">with a broader group of dev/ops personnel who can create or update VM deployments.</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Azure Key Vault woud be used with ARM to orchestrate and store VM secrets and certificates.</source>
          <target state="new">Azure Key Vault woud be used with ARM to orchestrate and store VM secrets and certificates.</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>A best practice is to maintain separate ARM templates for creation of vaults (which will contain the key material) and deployment of the VMs</source>
          <target state="new">A best practice is to maintain separate ARM templates for creation of vaults (which will contain the key material) and deployment of the VMs</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>(with URI references the keys contained in the vaults).</source>
          <target state="new">(with URI references the keys contained in the vaults).</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Secrets stored in the Key Vault are under full RBAC control of a trusted operator.</source>
          <target state="new">Secrets stored in the Key Vault are under full RBAC control of a trusted operator.</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>If the trusted operator leaves the company or transfers within</source>
          <target state="new">If the trusted operator leaves the company or transfers within</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>the company to a new group, he or she will no longer have access to the keys they created in the Vault.</source>
          <target state="new">the company to a new group, he or she will no longer have access to the keys they created in the Vault.</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The ARM templates for deployment only contain URI references to the secrets, which means the actual secrets are not in code, config or source code</source>
          <target state="new">The ARM templates for deployment only contain URI references to the secrets, which means the actual secrets are not in code, config or source code</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>repositories.</source>
          <target state="new">repositories.</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>This mitigates opportunities for both phishing secrets and limiting the ability for bad actors to make changes.</source>
          <target state="new">This mitigates opportunities for both phishing secrets and limiting the ability for bad actors to make changes.</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>As stated earlier in the document, there are no global Key Vaults.</source>
          <target state="new">As stated earlier in the document, there are no global Key Vaults.</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>As Key Vaults are always regional, the secrets always have locality (and sovereignty) with the VMs.</source>
          <target state="new">As Key Vaults are always regional, the secrets always have locality (and sovereignty) with the VMs.</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>An example implementation of this approach was provided in the Secrets and Certificates section found earlier in this document.</source>
          <target state="new">An example implementation of this approach was provided in the Secrets and Certificates section found earlier in this document.</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Enabling a "bring your own subscription" model</source>
          <target state="new">Enabling a "bring your own subscription" model</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Corporate IT, System Integrators, and Cloud Services vendors may employ a "Bring Your Own Subscription" model with their customers.</source>
          <target state="new">Corporate IT, System Integrators, and Cloud Services vendors may employ a "Bring Your Own Subscription" model with their customers.</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Specifically, the</source>
          <target state="new">Specifically, the</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>organization provides a service to an end customer and utilizes that customer’s Azure subscription in some fashion.</source>
          <target state="new">organization provides a service to an end customer and utilizes that customer’s Azure subscription in some fashion.</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>There are multiple variants of this approach, each with slightly different requirements, as detailed below.</source>
          <target state="new">There are multiple variants of this approach, each with slightly different requirements, as detailed below.</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Enabling 3rd party access for monitoring of resources within an account</source>
          <target state="new">Enabling 3rd party access for monitoring of resources within an account</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>An organization with a monitoring application may require read-only access to a customer’s subscription to retrieve data for use in that application.</source>
          <target state="new">An organization with a monitoring application may require read-only access to a customer’s subscription to retrieve data for use in that application.</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>This would require read-only access for an ongoing period of time.</source>
          <target state="new">This would require read-only access for an ongoing period of time.</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Access would need to be in the customer’s control, providing them the ability to</source>
          <target state="new">Access would need to be in the customer’s control, providing them the ability to</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>terminate the access if the relationship with the provider of the monitoring service is severed.</source>
          <target state="new">terminate the access if the relationship with the provider of the monitoring service is severed.</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Implementing with Azure Resource Manager</source>
          <target state="new">Implementing with Azure Resource Manager</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Details on implementing this are provided in significant detail in the “Developers Guide to Auth with the Azure Resource Manager API” which</source>
          <target state="new">Details on implementing this are provided in significant detail in the “Developers Guide to Auth with the Azure Resource Manager API” which</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>can be found <bpt id="p1">[</bpt>here<ept id="p1">](http://www.dushyantgill.com/blog/2015/05/23/developers-guide-to-auth-with-azure-resource-manager-api/)</ept>.</source>
          <target state="new">can be found <bpt id="p1">[</bpt>here<ept id="p1">](http://www.dushyantgill.com/blog/2015/05/23/developers-guide-to-auth-with-azure-resource-manager-api/)</ept>.</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>That document provides</source>
          <target state="new">That document provides</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>step-by-step implementation instructions as well as sample code.</source>
          <target state="new">step-by-step implementation instructions as well as sample code.</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Enabling 3rd party access for one-time deployment of software</source>
          <target state="new">Enabling 3rd party access for one-time deployment of software</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>In another example, an organization may deploy and configure a version of their software in a customer’s account, requiring write access for the period of</source>
          <target state="new">In another example, an organization may deploy and configure a version of their software in a customer’s account, requiring write access for the period of</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>time for the deployment.</source>
          <target state="new">time for the deployment.</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Implementing with Azure Resource Manager</source>
          <target state="new">Implementing with Azure Resource Manager</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>This would follow a similar approach to the prior example.</source>
          <target state="new">This would follow a similar approach to the prior example.</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Depending on the specific needs of the installation, the specific role assigned to the service principal should allow only the minimal level of access</source>
          <target state="new">Depending on the specific needs of the installation, the specific role assigned to the service principal should allow only the minimal level of access</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>required to achieve the installation and then have that access be immediately revoked after completion of the installation.</source>
          <target state="new">required to achieve the installation and then have that access be immediately revoked after completion of the installation.</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Enabling 3rd party access to use customer subscriptions for data storage</source>
          <target state="new">Enabling 3rd party access to use customer subscriptions for data storage</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>In another example, an organization may wish to run software in their own environment but use the customer’s account for storage.</source>
          <target state="new">In another example, an organization may wish to run software in their own environment but use the customer’s account for storage.</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>This places the customer</source>
          <target state="new">This places the customer</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>in control of their data at all times and enables them to leverage other technologies on the platform, e.g. Azure Machine Learning or HDInsight, at their</source>
          <target state="new">in control of their data at all times and enables them to leverage other technologies on the platform, e.g. Azure Machine Learning or HDInsight, at their</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>own discretion while not adding cost/billing overhead for the Enterprise IT, System Integrator, or CSV providing the capability.</source>
          <target state="new">own discretion while not adding cost/billing overhead for the Enterprise IT, System Integrator, or CSV providing the capability.</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>This requires ongoing access</source>
          <target state="new">This requires ongoing access</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>to the storage account for the organization, with the customer in control and having access to audit information for accesses to that information.</source>
          <target state="new">to the storage account for the organization, with the customer in control and having access to audit information for accesses to that information.</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Implementing with Azure Resource Manager</source>
          <target state="new">Implementing with Azure Resource Manager</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>This is implemented using the same pattern as the other examples.</source>
          <target state="new">This is implemented using the same pattern as the other examples.</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>A service principal is provided access to the storage resource.</source>
          <target state="new">A service principal is provided access to the storage resource.</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>As this scenario required</source>
          <target state="new">As this scenario required</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>the role to have read and write access to the storage account, the built in Contributor role would be assigned to the service principal to achieve this level of access.</source>
          <target state="new">the role to have read and write access to the storage account, the built in Contributor role would be assigned to the service principal to achieve this level of access.</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>As this scenario involves both a first and a third party with a shared storage account, there will also be a desire to ensure that the storage account is</source>
          <target state="new">As this scenario involves both a first and a third party with a shared storage account, there will also be a desire to ensure that the storage account is</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>not deleted accidentally.</source>
          <target state="new">not deleted accidentally.</target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>For this aspect of the scenario, you would apply a resource lock to the storage account.</source>
          <target state="new">For this aspect of the scenario, you would apply a resource lock to the storage account.</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Enabling service management by a 3rd party</source>
          <target state="new">Enabling service management by a 3rd party</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>In another example, an organization will want to deploy, monitor, and manage software in the customers subscription.</source>
          <target state="new">In another example, an organization will want to deploy, monitor, and manage software in the customers subscription.</target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>There may be constraints on the customer</source>
          <target state="new">There may be constraints on the customer</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>in terms of changes they can (or more explicitly cannot) make to an environment where software deployed.</source>
          <target state="new">in terms of changes they can (or more explicitly cannot) make to an environment where software deployed.</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Implementing with Azure Resource Manager</source>
          <target state="new">Implementing with Azure Resource Manager</target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>This follows a supserset of the pattern identified at the start of this section.</source>
          <target state="new">This follows a supserset of the pattern identified at the start of this section.</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Specifically, a service principal used by a 3rd party is provided</source>
          <target state="new">Specifically, a service principal used by a 3rd party is provided</target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>full access to the resources within the resource group.</source>
          <target state="new">full access to the resources within the resource group.</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>In addition, as there are constraints on the customer, users or groups from the customer would be given rights appropriate to utilize the environment.</source>
          <target state="new">In addition, as there are constraints on the customer, users or groups from the customer would be given rights appropriate to utilize the environment.</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>This can be done via templates as identified earlier in this section.</source>
          <target state="new">This can be done via templates as identified earlier in this section.</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Finally, there may be a desire to ensure that certain resources are not deleted accidentally.</source>
          <target state="new">Finally, there may be a desire to ensure that certain resources are not deleted accidentally.</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>If this is the case, resource locks should also be</source>
          <target state="new">If this is the case, resource locks should also be</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>considered for resources which require such protection.</source>
          <target state="new">considered for resources which require such protection.</target>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>To learn about creating templates, see <bpt id="p1">[</bpt>Authoring templates<ept id="p1">](resource-group-authoring-templates.md)</ept>.</source>
          <target state="new">To learn about creating templates, see <bpt id="p1">[</bpt>Authoring templates<ept id="p1">](resource-group-authoring-templates.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>For recommendations about how to handle security in Azure Resource Manager, see <bpt id="p1">[</bpt>Security considerations for Azure Resource Manager<ept id="p1">](best-practices-resource-manager-security.md)</ept>.</source>
          <target state="new">For recommendations about how to handle security in Azure Resource Manager, see <bpt id="p1">[</bpt>Security considerations for Azure Resource Manager<ept id="p1">](best-practices-resource-manager-security.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>To learn about sharing state into and out of templates, see <bpt id="p1">[</bpt>Sharing state in Azure Resource Manager templates<ept id="p1">](best-practices-resource-manager-state.md)</ept></source>
          <target state="new">To learn about sharing state into and out of templates, see <bpt id="p1">[</bpt>Sharing state in Azure Resource Manager templates<ept id="p1">](best-practices-resource-manager-state.md)</ept></target>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4254ffd172d28993d5db14ede1abcca626e726b6</xliffext:olfilehash>
  </header>
</xliff>