<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encrypt and Decrypt Blobs in Microsoft Azure Storage using Azure Key Vault</source>
          <target state="new">Encrypt and Decrypt Blobs in Microsoft Azure Storage using Azure Key Vault</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This tutorial walks you through how to encrypt and decrypt a blob using client-side encryption for Microsoft Azure Storage with Azure Key Vault</source>
          <target state="new">This tutorial walks you through how to encrypt and decrypt a blob using client-side encryption for Microsoft Azure Storage with Azure Key Vault</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Encrypt and decrypt blobs in Microsoft Azure Storage using Azure Key Vault</source>
          <target state="new">Encrypt and decrypt blobs in Microsoft Azure Storage using Azure Key Vault</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="new">Introduction</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This tutorial covers how to make use of client-side storage encryption - currently in preview - with Azure Key Vault - also currently in preview.</source>
          <target state="new">This tutorial covers how to make use of client-side storage encryption - currently in preview - with Azure Key Vault - also currently in preview.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It walks you through how to encrypt and decrypt a blob in a console application using these technologies.</source>
          <target state="new">It walks you through how to encrypt and decrypt a blob in a console application using these technologies.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Estimated time to complete:<ept id="p1">**</ept> 20 minutes</source>
          <target state="new"><bpt id="p1">**</bpt>Estimated time to complete:<ept id="p1">**</ept> 20 minutes</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For overview information about Azure Key Vault, see <bpt id="p1">[</bpt>What is Azure Key Vault?<ept id="p1">](key-vault/key-vault-whatis.md)</ept></source>
          <target state="new">For overview information about Azure Key Vault, see <bpt id="p1">[</bpt>What is Azure Key Vault?<ept id="p1">](key-vault/key-vault-whatis.md)</ept></target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For overview information about client-side encryption for Azure Storage, see <bpt id="p1">[</bpt>Client-Side Encryption for Microsoft Azure Storage – Preview<ept id="p1">](http://blogs.msdn.com/b/windowsazurestorage/archive/2015/04/28/client-side-encryption-for-microsoft-azure-storage-preview.aspx)</ept></source>
          <target state="new">For overview information about client-side encryption for Azure Storage, see <bpt id="p1">[</bpt>Client-Side Encryption for Microsoft Azure Storage – Preview<ept id="p1">](http://blogs.msdn.com/b/windowsazurestorage/archive/2015/04/28/client-side-encryption-for-microsoft-azure-storage-preview.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To complete this tutorial, you must have the following:</source>
          <target state="new">To complete this tutorial, you must have the following:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An Azure Storage account</source>
          <target state="new">An Azure Storage account</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013 or later</source>
          <target state="new">Visual Studio 2013 or later</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Azure PowerShell</source>
          <target state="new">Azure PowerShell</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Overview of the Client-Side Encryption process</source>
          <target state="new">Overview of the Client-Side Encryption process</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For an overview of Client-Side Encryption for Microsoft Azure Storage, see <bpt id="p1">[</bpt>http://blogs.msdn.com/b/windowsazurestorage/archive/2015/04/29/getting-started-with-client-side-encryption-for-microsoft-azure-storage.aspx<ept id="p1">]</ept><bpt id="p2">(http://blogs.msdn.com/b/windowsazurestorage/archive/2015/04/29/getting-started-with-client-side-encryption-for-microsoft-azure-storage.aspx "</bpt>Getting Started with Client-Side Encryption for Microsoft Azure Storage<ept id="p2">")</ept></source>
          <target state="new">For an overview of Client-Side Encryption for Microsoft Azure Storage, see <bpt id="p1">[</bpt>http://blogs.msdn.com/b/windowsazurestorage/archive/2015/04/29/getting-started-with-client-side-encryption-for-microsoft-azure-storage.aspx<ept id="p1">]</ept><bpt id="p2">(http://blogs.msdn.com/b/windowsazurestorage/archive/2015/04/29/getting-started-with-client-side-encryption-for-microsoft-azure-storage.aspx "</bpt>Getting Started with Client-Side Encryption for Microsoft Azure Storage<ept id="p2">")</ept></target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Here is the process as described in that blog post:</source>
          <target state="new">Here is the process as described in that blog post:</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Azure Storage client SDK will generate a content encryption key (CEK) which is a one-time-use symmetric key.</source>
          <target state="new">The Azure Storage client SDK will generate a content encryption key (CEK) which is a one-time-use symmetric key.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>User data is encrypted using this CEK.</source>
          <target state="new">User data is encrypted using this CEK.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The CEK is then wrapped (encrypted) using the key encryption key KEK.</source>
          <target state="new">The CEK is then wrapped (encrypted) using the key encryption key KEK.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The KEK is identified by a key identifier and can be an asymmetric key pair or a symmetric key and can be managed locally or stored in Azure Key Vaults.</source>
          <target state="new">The KEK is identified by a key identifier and can be an asymmetric key pair or a symmetric key and can be managed locally or stored in Azure Key Vaults.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Storage client itself never has access to KEK.</source>
          <target state="new">The Storage client itself never has access to KEK.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It just invokes the key wrapping algorithm that is provided by Key Vault.</source>
          <target state="new">It just invokes the key wrapping algorithm that is provided by Key Vault.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Users can choose to use custom providers for key wrapping/unwrapping if desired.</source>
          <target state="new">Users can choose to use custom providers for key wrapping/unwrapping if desired.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The encrypted data is then uploaded to the Azure Storage service.</source>
          <target state="new">The encrypted data is then uploaded to the Azure Storage service.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Set-up your Azure Key Vault</source>
          <target state="new">Set-up your Azure Key Vault</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In order to proceed with this tutorial, you need to do the following which are outlined in the tutorial:  <bpt id="p1">[</bpt>Get Started with Azure Key Vault<ept id="p1">](key-vault/key-vault-get-started.md)</ept></source>
          <target state="new">In order to proceed with this tutorial, you need to do the following which are outlined in the tutorial:  <bpt id="p1">[</bpt>Get Started with Azure Key Vault<ept id="p1">](key-vault/key-vault-get-started.md)</ept></target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Create a key vault</source>
          <target state="new">Create a key vault</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Add a key or secret to the key vault</source>
          <target state="new">Add a key or secret to the key vault</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Register an application with Azure Active Directory</source>
          <target state="new">Register an application with Azure Active Directory</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Authorize the application to use the key or secret</source>
          <target state="new">Authorize the application to use the key or secret</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Make note of the ClientID and ClientSecret that were generated when registering an application with Azure Active Directory.</source>
          <target state="new">Make note of the ClientID and ClientSecret that were generated when registering an application with Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Create both a key in the key vault.</source>
          <target state="new">Create both a key in the key vault.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>We will assume for the rest of the tutorial that you have used the following names: ContosoKeyVault and TestRSAKey1.</source>
          <target state="new">We will assume for the rest of the tutorial that you have used the following names: ContosoKeyVault and TestRSAKey1.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Create a console application with packages and AppSettings</source>
          <target state="new">Create a console application with packages and AppSettings</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In Visual Studio, create a new Console Application.</source>
          <target state="new">In Visual Studio, create a new Console Application.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Add necessary nuget packages in the Package Manager Console:</source>
          <target state="new">Add necessary nuget packages in the Package Manager Console:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Add AppSettings to the App.Config.</source>
          <target state="new">Add AppSettings to the App.Config.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Add the following using statements and make sure to add a reference to System.Configuration to the project.</source>
          <target state="new">Add the following using statements and make sure to add a reference to System.Configuration to the project.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Add method to get token to your console application</source>
          <target state="new">Add method to get token to your console application</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following method is used by Key Vault classes that need to authenticate for access to your Key Vault.</source>
          <target state="new">The following method is used by Key Vault classes that need to authenticate for access to your Key Vault.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Access storage and Key Vault in your program</source>
          <target state="new">Access storage and Key Vault in your program</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the Main function, add the following code:</source>
          <target state="new">In the Main function, add the following code:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Key Vault Object Models</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Key Vault Object Models</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It is important to understand that there are actually two Key Vault object models to be aware of: one is based on the REST API (KeyVault namespace) and the other is an extension for client-side encryption.</source>
          <target state="new">It is important to understand that there are actually two Key Vault object models to be aware of: one is based on the REST API (KeyVault namespace) and the other is an extension for client-side encryption.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The Key Vault Client interacts with the REST API and understands JSON Web Keys and Secrets for the two kinds of things that are contained in the Key Vault.</source>
          <target state="new">The Key Vault Client interacts with the REST API and understands JSON Web Keys and Secrets for the two kinds of things that are contained in the Key Vault.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The Key Vault Extensions are classes that seem specifically created for client-side encryption in Azure Storage.</source>
          <target state="new">The Key Vault Extensions are classes that seem specifically created for client-side encryption in Azure Storage.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>They contain an interface for keys - IKey - and classes based on the concept of a Key Resolver.</source>
          <target state="new">They contain an interface for keys - IKey - and classes based on the concept of a Key Resolver.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>There are two implementations of IKey that you need to know: RSAKey and SymmetricKey.</source>
          <target state="new">There are two implementations of IKey that you need to know: RSAKey and SymmetricKey.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Now they happen to coincide with the things that are contained in a Key Vault, but at this point they are independent classes (so the Key and Secret retrieved by the Key Vault Client do not implement IKey).</source>
          <target state="new">Now they happen to coincide with the things that are contained in a Key Vault, but at this point they are independent classes (so the Key and Secret retrieved by the Key Vault Client do not implement IKey).</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Encrypt blob and upload</source>
          <target state="new">Encrypt blob and upload</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Add the following code to encrypt a Blob and upload it to your Azure Storage account.</source>
          <target state="new">Add the following code to encrypt a Blob and upload it to your Azure Storage account.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The ResolveKeyAsync method that is used returns an IKey.</source>
          <target state="new">The ResolveKeyAsync method that is used returns an IKey.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Following is a screenshot from the current Azure Management portal for a blob that has been encrypted using client-side encryption with a key stored in Key Vault.</source>
          <target state="new">Following is a screenshot from the current Azure Management portal for a blob that has been encrypted using client-side encryption with a key stored in Key Vault.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The KeyId property is the URI for the key in Key Vault that acts as the key encryption key (KEK).</source>
          <target state="new">The KeyId property is the URI for the key in Key Vault that acts as the key encryption key (KEK).</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The EncryptedKey property contains the encrypted version of the content encryption key (CEK).</source>
          <target state="new">The EncryptedKey property contains the encrypted version of the content encryption key (CEK).</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>![Screenshot showing Blob metadata that includes encryption metadata][1]</source>
          <target state="new">![Screenshot showing Blob metadata that includes encryption metadata][1]</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you look at the BlobEncryptionPolicy constructor, you will see that it can accept a key and/or a resolver.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you look at the BlobEncryptionPolicy constructor, you will see that it can accept a key and/or a resolver.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Be aware that right now you cannot use a resolver for encryption because it does not currently support a default key.</source>
          <target state="new">Be aware that right now you cannot use a resolver for encryption because it does not currently support a default key.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Decrypt blob and download</source>
          <target state="new">Decrypt blob and download</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Decryption is really when the Resolver classes make sense.</source>
          <target state="new">Decryption is really when the Resolver classes make sense.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The ID of the key used for encryption is associated with the Blob in its metadata, so there is no reason for you to retrieve the key and remember the association between key and blob.</source>
          <target state="new">The ID of the key used for encryption is associated with the Blob in its metadata, so there is no reason for you to retrieve the key and remember the association between key and blob.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You just have to make sure that the key remains in the Key Vault.</source>
          <target state="new">You just have to make sure that the key remains in the Key Vault.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The private key of an RSA Key remains in Key Vault, so for decryption to occur the Encrypted Key from the blob metadata which contains the CEC (content encryption key) is sent to Key Vault for decryption.</source>
          <target state="new">The private key of an RSA Key remains in Key Vault, so for decryption to occur the Encrypted Key from the blob metadata which contains the CEC (content encryption key) is sent to Key Vault for decryption.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Add the following to decrypt the blob that you just uploaded.</source>
          <target state="new">Add the following to decrypt the blob that you just uploaded.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> There are a couple of other kinds of Resolvers to make key management easier, including: AggregateKeyResolver and CachingKeyResolver.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> There are a couple of other kinds of Resolvers to make key management easier, including: AggregateKeyResolver and CachingKeyResolver.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Using Key Vault Secrets</source>
          <target state="new">Using Key Vault Secrets</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The way to use a Secret with client-side encryption is via the SymmetricKey class because a Secret is essentially a symmetric key.</source>
          <target state="new">The way to use a Secret with client-side encryption is via the SymmetricKey class because a Secret is essentially a symmetric key.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>But, as noted above, a Secret in Key Vault does not map exactly to a SymmetricKey.</source>
          <target state="new">But, as noted above, a Secret in Key Vault does not map exactly to a SymmetricKey.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>There are a few things to understand:</source>
          <target state="new">There are a few things to understand:</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The key in a SymmetricKey has to be a fixed length: 128, 192, 256, 384, or 512 bits</source>
          <target state="new">The key in a SymmetricKey has to be a fixed length: 128, 192, 256, 384, or 512 bits</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The key in a SymmetricKey should be Base64 encoded</source>
          <target state="new">The key in a SymmetricKey should be Base64 encoded</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A Key Vault Secret that will be used as a SymmetricKey needs to have a Content Type of "application/octet-stream" in Key Vault</source>
          <target state="new">A Key Vault Secret that will be used as a SymmetricKey needs to have a Content Type of "application/octet-stream" in Key Vault</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Here is an example in PowerShell of creating a Secret in Key Vault that can be used as a SymmetricKey:</source>
          <target state="new">Here is an example in PowerShell of creating a Secret in Key Vault that can be used as a SymmetricKey:</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In your console application, you can use the same call as before to retrieve this Secret as a SymmetricKey.</source>
          <target state="new">In your console application, you can use the same call as before to retrieve this Secret as a SymmetricKey.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>That's it.</source>
          <target state="new">That's it.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Enjoy!</source>
          <target state="new">Enjoy!</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information about using Microsoft Azure Storage with C#, see <bpt id="p1">[</bpt>Microsoft Azure Storage Client Library for .NET<ept id="p1">](https://msdn.microsoft.com/library/azure/dn261237.aspx)</ept></source>
          <target state="new">For more information about using Microsoft Azure Storage with C#, see <bpt id="p1">[</bpt>Microsoft Azure Storage Client Library for .NET<ept id="p1">](https://msdn.microsoft.com/library/azure/dn261237.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information about the Blob REST API, see <bpt id="p1">[</bpt>Blob Service REST API<ept id="p1">](https://msdn.microsoft.com/library/azure/dd135733.aspx)</ept></source>
          <target state="new">For more information about the Blob REST API, see <bpt id="p1">[</bpt>Blob Service REST API<ept id="p1">](https://msdn.microsoft.com/library/azure/dd135733.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For the latest information on Microsoft Azure Storage, go to the <bpt id="p1">[</bpt>Microsoft Azure Storage Team Blog<ept id="p1">](http://blogs.msdn.com/b/windowsazurestorage/)</ept></source>
          <target state="new">For the latest information on Microsoft Azure Storage, go to the <bpt id="p1">[</bpt>Microsoft Azure Storage Team Blog<ept id="p1">](http://blogs.msdn.com/b/windowsazurestorage/)</ept></target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc163a19d48e994fc3e4013fc98c7afcfb5ecd2b</xliffext:olfilehash>
  </header>
</xliff>