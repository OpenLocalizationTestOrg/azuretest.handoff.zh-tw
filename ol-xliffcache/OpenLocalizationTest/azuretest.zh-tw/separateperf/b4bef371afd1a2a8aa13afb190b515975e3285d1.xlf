<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>My first graphical runbook in Azure Automation</source>
          <target state="new">My first graphical runbook in Azure Automation</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Tutorial that walks you through the creation, testing, and publishing of a simple graphical runbook.</source>
          <target state="new">Tutorial that walks you through the creation, testing, and publishing of a simple graphical runbook.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Several concepts are covered such as authenticating to Azure resources, input parameters, and conditional links.</source>
          <target state="new">Several concepts are covered such as authenticating to Azure resources, input parameters, and conditional links.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>My first graphical runbook</source>
          <target state="new">My first graphical runbook</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Graphical</source>
          <target state="new">Graphical</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Textual</source>
          <target state="new">Textual</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This tutorial walks you through the creation of a <bpt id="p1">[</bpt>graphical runbook<ept id="p1">](automation-graphical-authoring-intro.md)</ept> in Azure Automation.</source>
          <target state="new">This tutorial walks you through the creation of a <bpt id="p1">[</bpt>graphical runbook<ept id="p1">](automation-graphical-authoring-intro.md)</ept> in Azure Automation.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>We'll start with a simple runbook that we'll test and publish while we explain how to track the status of the runbook job.</source>
          <target state="new">We'll start with a simple runbook that we'll test and publish while we explain how to track the status of the runbook job.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Then we'll modify the runbook to actually manage Azure resources, in this case starting an Azure virtual machine.</source>
          <target state="new">Then we'll modify the runbook to actually manage Azure resources, in this case starting an Azure virtual machine.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>We'll then make the runbook more robust by adding runbook parameters and a conditional link.</source>
          <target state="new">We'll then make the runbook more robust by adding runbook parameters and a conditional link.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To complete this tutorial, you will need the following.</source>
          <target state="new">To complete this tutorial, you will need the following.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Azure subscription.</source>
          <target state="new">Azure subscription.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you don't have one yet, you can <bpt id="p1">[</bpt>activate your MSDN subscriber benefits<ept id="p1">](http://azure.microsoft.com/pricing/member-offers/msdn-benefits-details/)</ept> or <ph id="ph1">&lt;a href="/pricing/free-trial/" target="_blank"&gt;</ph><bpt id="p2">[</bpt>sign up for a free trial<ept id="p2">](http://azure.microsoft.com/pricing/free-trial/)</ept>.</source>
          <target state="new">If you don't have one yet, you can <bpt id="p1">[</bpt>activate your MSDN subscriber benefits<ept id="p1">](http://azure.microsoft.com/pricing/member-offers/msdn-benefits-details/)</ept> or <ph id="ph1">&lt;a href="/pricing/free-trial/" target="_blank"&gt;</ph><bpt id="p2">[</bpt>sign up for a free trial<ept id="p2">](http://azure.microsoft.com/pricing/free-trial/)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Automation account<ept id="p1">](automation-configuring.md)</ept> to hold the runbook.</source>
          <target state="new"><bpt id="p1">[</bpt>Automation account<ept id="p1">](automation-configuring.md)</ept> to hold the runbook.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An Azure virtual machine.</source>
          <target state="new">An Azure virtual machine.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>We will stop and start this machine so it should not be production.</source>
          <target state="new">We will stop and start this machine so it should not be production.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure Active Directory user and Automation Credential asset<ept id="p1">](automation-configuring.md)</ept> to authenticate to Azure resources.</source>
          <target state="new"><bpt id="p1">[</bpt>Azure Active Directory user and Automation Credential asset<ept id="p1">](automation-configuring.md)</ept> to authenticate to Azure resources.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This user must have permission to start and stop the virtual machine.</source>
          <target state="new">This user must have permission to start and stop the virtual machine.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Step 1 - Create new runbook</source>
          <target state="new">Step 1 - Create new runbook</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>We'll start by creating a simple runbook that outputs the text <bpt id="p1">*</bpt>Hello World<ept id="p1">*</ept>.</source>
          <target state="new">We'll start by creating a simple runbook that outputs the text <bpt id="p1">*</bpt>Hello World<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the Azure Preview Portal, open your Automation account.</source>
          <target state="new">In the Azure Preview Portal, open your Automation account.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The Automation account page gives you a quick view of the resources in this account.</source>
          <target state="new">The Automation account page gives you a quick view of the resources in this account.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You should already have some Assets.</source>
          <target state="new">You should already have some Assets.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Most of those are the modules that are automatically included in a new Automation account.</source>
          <target state="new">Most of those are the modules that are automatically included in a new Automation account.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You should also have the Credential asset that's mentioned in the <bpt id="p1">[</bpt>prerequisites<ept id="p1">](#prerequisites)</ept>.</source>
          <target state="new">You should also have the Credential asset that's mentioned in the <bpt id="p1">[</bpt>prerequisites<ept id="p1">](#prerequisites)</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Click on the <bpt id="p1">**</bpt>Runbooks<ept id="p1">**</ept> tile to open the list of runbooks.</source>
          <target state="new">Click on the <bpt id="p1">**</bpt>Runbooks<ept id="p1">**</ept> tile to open the list of runbooks.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Runbooks control<ph id="ph2">](media/automation-first-runbook-graphical/runbooks-control.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Runbooks control<ph id="ph2">](media/automation-first-runbook-graphical/runbooks-control.png)</ph></target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Create a new runbook by clicking on the <bpt id="p1">**</bpt>Add a runbook<ept id="p1">**</ept> button and then <bpt id="p2">**</bpt>Create a new runbook<ept id="p2">**</ept>.</source>
          <target state="new">Create a new runbook by clicking on the <bpt id="p1">**</bpt>Add a runbook<ept id="p1">**</ept> button and then <bpt id="p2">**</bpt>Create a new runbook<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Give the runbook the name <bpt id="p1">*</bpt>MyFirstRunbook-Graphical<ept id="p1">*</ept>.</source>
          <target state="new">Give the runbook the name <bpt id="p1">*</bpt>MyFirstRunbook-Graphical<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this case, we're going to create a <bpt id="p1">[</bpt>graphical runbook<ept id="p1">](automation-graphical-authoring-intro.md)</ept> so select <bpt id="p2">**</bpt>Graphical<ept id="p2">**</ept> for <bpt id="p3">**</bpt>Runbook type<ept id="p3">**</ept>.</source>
          <target state="new">In this case, we're going to create a <bpt id="p1">[</bpt>graphical runbook<ept id="p1">](automation-graphical-authoring-intro.md)</ept> so select <bpt id="p2">**</bpt>Graphical<ept id="p2">**</ept> for <bpt id="p3">**</bpt>Runbook type<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>New runbook<ph id="ph2">](media/automation-first-runbook-graphical/new-runbook.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>New runbook<ph id="ph2">](media/automation-first-runbook-graphical/new-runbook.png)</ph></target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> to create the runbook and open the graphical editor.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> to create the runbook and open the graphical editor.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Step 2 - Add activities to the runbook</source>
          <target state="new">Step 2 - Add activities to the runbook</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The Library control on the left side of the editor allows you to select activities add to your runbook.</source>
          <target state="new">The Library control on the left side of the editor allows you to select activities add to your runbook.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>We're going to add a <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> cmdlet to output our text from the runbook.</source>
          <target state="new">We're going to add a <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> cmdlet to output our text from the runbook.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the Library control, expand the <bpt id="p1">**</bpt>Cmdlets<ept id="p1">**</ept> node and then <bpt id="p2">**</bpt>Microsoft.PowerShell.Utility<ept id="p2">**</ept>.</source>
          <target state="new">In the Library control, expand the <bpt id="p1">**</bpt>Cmdlets<ept id="p1">**</ept> node and then <bpt id="p2">**</bpt>Microsoft.PowerShell.Utility<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Microsoft.PowerShell.Utility<ph id="ph2">](media/automation-first-runbook-graphical/cmdlets-powershell-utility.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Microsoft.PowerShell.Utility<ph id="ph2">](media/automation-first-runbook-graphical/cmdlets-powershell-utility.png)</ph></target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Scroll down to the bottom of the list.</source>
          <target state="new">Scroll down to the bottom of the list.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Right click <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Add to canvas<ept id="p2">**</ept>.</source>
          <target state="new">Right click <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Add to canvas<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Click on the  <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> activity on the canvas.</source>
          <target state="new">Click on the  <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> activity on the canvas.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This opens the Configuration control which allows you to configure the activity.</source>
          <target state="new">This opens the Configuration control which allows you to configure the activity.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Label<ept id="p1">**</ept> defaults to the name of the cmdlet, but we can change it to something more friendly.</source>
          <target state="new">The <bpt id="p1">**</bpt>Label<ept id="p1">**</ept> defaults to the name of the cmdlet, but we can change it to something more friendly.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Change it to <bpt id="p1">*</bpt>Write Hello World to output<ept id="p1">*</ept>.</source>
          <target state="new">Change it to <bpt id="p1">*</bpt>Write Hello World to output<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Parameters<ept id="p1">**</ept> to provide values for the cmdlet's parameters.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Parameters<ept id="p1">**</ept> to provide values for the cmdlet's parameters.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Some cmdlets have multiple parameter sets, and you need to select which you will use.</source>
          <target state="new">Some cmdlets have multiple parameter sets, and you need to select which you will use.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In this case, <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> has only one parameter set, so you don't need to select one.</source>
          <target state="new">In this case, <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> has only one parameter set, so you don't need to select one.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Write-Output properties<ph id="ph2">](media/automation-first-runbook-graphical/write-output-properties.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Write-Output properties<ph id="ph2">](media/automation-first-runbook-graphical/write-output-properties.png)</ph></target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>InputObject<ept id="p1">**</ept> parameter.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>InputObject<ept id="p1">**</ept> parameter.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This is the parameter where we will specify the text to send to the output stream.</source>
          <target state="new">This is the parameter where we will specify the text to send to the output stream.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Data source<ept id="p1">**</ept> dropdown, select <bpt id="p2">**</bpt>PowerShell expression<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Data source<ept id="p1">**</ept> dropdown, select <bpt id="p2">**</bpt>PowerShell expression<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Data source<ept id="p1">**</ept> dropdown provides different sources that you use to populate a parameter value.</source>
          <target state="new">The <bpt id="p1">**</bpt>Data source<ept id="p1">**</ept> dropdown provides different sources that you use to populate a parameter value.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can use output from such sources such as another activity, an Automation asset, or a PowerShell expression.</source>
          <target state="new">You can use output from such sources such as another activity, an Automation asset, or a PowerShell expression.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In this case, we just want to output the text <bpt id="p1">*</bpt>Hello World<ept id="p1">*</ept>.</source>
          <target state="new">In this case, we just want to output the text <bpt id="p1">*</bpt>Hello World<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>We can use a PowerShell expression and specify a string.</source>
          <target state="new">We can use a PowerShell expression and specify a string.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Expression<ept id="p1">**</ept> box, type <bpt id="p2">*</bpt>"Hello World"<ept id="p2">*</ept> and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept> twice to return to the canvas.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Expression<ept id="p1">**</ept> box, type <bpt id="p2">*</bpt>"Hello World"<ept id="p2">*</ept> and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept> twice to return to the canvas.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>PowerShell Expression<ph id="ph2">](media/automation-first-runbook-graphical/expression-hello-world.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>PowerShell Expression<ph id="ph2">](media/automation-first-runbook-graphical/expression-hello-world.png)</ph></target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Save the runbook by clicking <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</source>
          <target state="new">Save the runbook by clicking <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Save runbook<ph id="ph2">](media/automation-first-runbook-graphical/runbook-edit-toolbar-save.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Save runbook<ph id="ph2">](media/automation-first-runbook-graphical/runbook-edit-toolbar-save.png)</ph></target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Step 3 - Test the runbook</source>
          <target state="new">Step 3 - Test the runbook</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Before we publish the runbook to make it available in production, we want to test it to make sure that it works properly.</source>
          <target state="new">Before we publish the runbook to make it available in production, we want to test it to make sure that it works properly.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When you test a runbook, you run its <bpt id="p1">**</bpt>Draft<ept id="p1">**</ept> version and view its output interactively.</source>
          <target state="new">When you test a runbook, you run its <bpt id="p1">**</bpt>Draft<ept id="p1">**</ept> version and view its output interactively.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Test pane<ept id="p1">**</ept> to open the Test pane.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Test pane<ept id="p1">**</ept> to open the Test pane.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Test pane<ph id="ph2">](media/automation-first-runbook-graphical/runbook-edit-toolbar-test-pane.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Test pane<ph id="ph2">](media/automation-first-runbook-graphical/runbook-edit-toolbar-test-pane.png)</ph></target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> to start the test.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> to start the test.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This should be the only enabled option.</source>
          <target state="new">This should be the only enabled option.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>runbook job<ept id="p1">](automation-runbook-execution)</ept> is created and its status displayed in the pane.</source>
          <target state="new">A <bpt id="p1">[</bpt>runbook job<ept id="p1">](automation-runbook-execution)</ept> is created and its status displayed in the pane.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The job status will start as <bpt id="p1">*</bpt>Queued<ept id="p1">*</ept> indicating that it is waiting for a runbook worker in the cloud to come available.</source>
          <target state="new">The job status will start as <bpt id="p1">*</bpt>Queued<ept id="p1">*</ept> indicating that it is waiting for a runbook worker in the cloud to come available.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>It will then move to <bpt id="p1">*</bpt>Starting<ept id="p1">*</ept>  when a worker claims the job, and then <bpt id="p2">*</bpt>Running<ept id="p2">*</ept> when the runbook actually starts running.</source>
          <target state="new">It will then move to <bpt id="p1">*</bpt>Starting<ept id="p1">*</ept>  when a worker claims the job, and then <bpt id="p2">*</bpt>Running<ept id="p2">*</ept> when the runbook actually starts running.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When the runbook job completes, its output is displayed.</source>
          <target state="new">When the runbook job completes, its output is displayed.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In our case, we should see <bpt id="p1">*</bpt>Hello World<ept id="p1">*</ept>.</source>
          <target state="new">In our case, we should see <bpt id="p1">*</bpt>Hello World<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Hello World<ph id="ph2">](media/automation-first-runbook-graphical/test-output-hello-world.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Hello World<ph id="ph2">](media/automation-first-runbook-graphical/test-output-hello-world.png)</ph></target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Close the Test pane to return to the canvas.</source>
          <target state="new">Close the Test pane to return to the canvas.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Step 4 - Publish and start the runbook</source>
          <target state="new">Step 4 - Publish and start the runbook</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The runbook that we just created is still in Draft mode.</source>
          <target state="new">The runbook that we just created is still in Draft mode.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>We need to publish it before we can run it in production.</source>
          <target state="new">We need to publish it before we can run it in production.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When you publish a runbook, you overwrite the existing Published version with the Draft version.</source>
          <target state="new">When you publish a runbook, you overwrite the existing Published version with the Draft version.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In our case, we don't have a Published version yet because we just created the runbook.</source>
          <target state="new">In our case, we don't have a Published version yet because we just created the runbook.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> to publish the runbook and then <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept> when prompted.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> to publish the runbook and then <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept> when prompted.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Publish<ph id="ph2">](media/automation-first-runbook-graphical/runbook-edit-toolbar-publish.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Publish<ph id="ph2">](media/automation-first-runbook-graphical/runbook-edit-toolbar-publish.png)</ph></target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If you scroll left to view the runbook in the <bpt id="p1">**</bpt>Runbooks<ept id="p1">**</ept> pane now, it will show an <bpt id="p2">**</bpt>Authoring Status<ept id="p2">**</ept> of <bpt id="p3">**</bpt>Published<ept id="p3">**</ept>.</source>
          <target state="new">If you scroll left to view the runbook in the <bpt id="p1">**</bpt>Runbooks<ept id="p1">**</ept> pane now, it will show an <bpt id="p2">**</bpt>Authoring Status<ept id="p2">**</ept> of <bpt id="p3">**</bpt>Published<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Scroll back to the right to view the pane for <bpt id="p1">**</bpt>MyFirstRunbook<ept id="p1">**</ept>.</source>
          <target state="new">Scroll back to the right to view the pane for <bpt id="p1">**</bpt>MyFirstRunbook<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The options across the top allow us to start the runbook, schedule it to start at some time in the future, or create a <bpt id="p1">[</bpt>webhook<ept id="p1">](automation-webhooks.md)</ept> so it can be started through an HTTP call.</source>
          <target state="new">The options across the top allow us to start the runbook, schedule it to start at some time in the future, or create a <bpt id="p1">[</bpt>webhook<ept id="p1">](automation-webhooks.md)</ept> so it can be started through an HTTP call.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>We just want to start the runbook so click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept> when prompted.</source>
          <target state="new">We just want to start the runbook so click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept> when prompted.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Start runbook<ph id="ph2">](media/automation-first-runbook-graphical/runbook-toolbar-start.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Start runbook<ph id="ph2">](media/automation-first-runbook-graphical/runbook-toolbar-start.png)</ph></target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A job pane is opened for the runbook job that we just created.</source>
          <target state="new">A job pane is opened for the runbook job that we just created.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>We can close this pane, but in this case we'll leave it open so we can watch the job's progress.</source>
          <target state="new">We can close this pane, but in this case we'll leave it open so we can watch the job's progress.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The job status is shown in <bpt id="p1">**</bpt>Job Summary<ept id="p1">**</ept> and matches the statuses that we saw when we tested the runbook.</source>
          <target state="new">The job status is shown in <bpt id="p1">**</bpt>Job Summary<ept id="p1">**</ept> and matches the statuses that we saw when we tested the runbook.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Job Summary<ph id="ph2">](media/automation-first-runbook-graphical/job-pane-summary.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Job Summary<ph id="ph2">](media/automation-first-runbook-graphical/job-pane-summary.png)</ph></target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Once the runbook status shows <bpt id="p1">*</bpt>Completed<ept id="p1">*</ept>, click <bpt id="p2">**</bpt>Output<ept id="p2">**</ept>.</source>
          <target state="new">Once the runbook status shows <bpt id="p1">*</bpt>Completed<ept id="p1">*</ept>, click <bpt id="p2">**</bpt>Output<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> pane is opened, and we can see our <bpt id="p2">*</bpt>Hello World<ept id="p2">*</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> pane is opened, and we can see our <bpt id="p2">*</bpt>Hello World<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Job Summary<ph id="ph2">](media/automation-first-runbook-graphical/job-pane-output.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Job Summary<ph id="ph2">](media/automation-first-runbook-graphical/job-pane-output.png)</ph></target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Close the Output pane.</source>
          <target state="new">Close the Output pane.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Streams<ept id="p1">**</ept> to open the Streams pane for the runbook job.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Streams<ept id="p1">**</ept> to open the Streams pane for the runbook job.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>We should only see <bpt id="p1">*</bpt>Hello World<ept id="p1">*</ept> in the output stream, but this can show other streams for a runbook job such as Verbose and Error if the runbook writes to them.</source>
          <target state="new">We should only see <bpt id="p1">*</bpt>Hello World<ept id="p1">*</ept> in the output stream, but this can show other streams for a runbook job such as Verbose and Error if the runbook writes to them.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Job Summary<ph id="ph2">](media/automation-first-runbook-graphical/job-pane-streams.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Job Summary<ph id="ph2">](media/automation-first-runbook-graphical/job-pane-streams.png)</ph></target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Close the Streams pane and the Job pane to return to the MyFirstRunbook pane.</source>
          <target state="new">Close the Streams pane and the Job pane to return to the MyFirstRunbook pane.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Jobs<ept id="p1">**</ept> to open the Jobs pane for this runbook.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Jobs<ept id="p1">**</ept> to open the Jobs pane for this runbook.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This lists all of the jobs created by this runbook.</source>
          <target state="new">This lists all of the jobs created by this runbook.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>We should only see one job listed since we only ran the job once.</source>
          <target state="new">We should only see one job listed since we only ran the job once.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Jobs<ph id="ph2">](media/automation-first-runbook-graphical/runbook-control-jobs.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Jobs<ph id="ph2">](media/automation-first-runbook-graphical/runbook-control-jobs.png)</ph></target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can click on this job to open the same Job pane that we viewed when we started the runbook.</source>
          <target state="new">You can click on this job to open the same Job pane that we viewed when we started the runbook.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This allows you to go back in time and view the details of any job that was created for a particular runbook.</source>
          <target state="new">This allows you to go back in time and view the details of any job that was created for a particular runbook.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Step 5 - Add authentication to manage Azure resources</source>
          <target state="new">Step 5 - Add authentication to manage Azure resources</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>We've tested and published our runbook, but so far it doesn't do anything useful.</source>
          <target state="new">We've tested and published our runbook, but so far it doesn't do anything useful.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>We want to have it manage Azure resources.</source>
          <target state="new">We want to have it manage Azure resources.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>It won't be able to do that though unless we have it authenticate using the credentials that are referred to in the <bpt id="p1">[</bpt>prerequisites<ept id="p1">](#prerequisites)</ept>.</source>
          <target state="new">It won't be able to do that though unless we have it authenticate using the credentials that are referred to in the <bpt id="p1">[</bpt>prerequisites<ept id="p1">](#prerequisites)</ept>.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>We do that with the <bpt id="p1">**</bpt>Set-AzureAccount<ept id="p1">**</ept> cmdlet.</source>
          <target state="new">We do that with the <bpt id="p1">**</bpt>Set-AzureAccount<ept id="p1">**</ept> cmdlet.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Open the graphical editor by clicking <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> on the MyFirstRunbook pane.</source>
          <target state="new">Open the graphical editor by clicking <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> on the MyFirstRunbook pane.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Edit runbook<ph id="ph2">](media/automation-first-runbook-graphical/runbook-toolbar-edit.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Edit runbook<ph id="ph2">](media/automation-first-runbook-graphical/runbook-toolbar-edit.png)</ph></target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>We don't need the <bpt id="p1">**</bpt>Write Hello World to output<ept id="p1">**</ept> anymore, so right click it and select <bpt id="p2">**</bpt>Delete<ept id="p2">**</ept>.</source>
          <target state="new">We don't need the <bpt id="p1">**</bpt>Write Hello World to output<ept id="p1">**</ept> anymore, so right click it and select <bpt id="p2">**</bpt>Delete<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>In the Library control, expand <bpt id="p1">**</bpt>Cmdlets<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Azure<ept id="p2">**</ept>.</source>
          <target state="new">In the Library control, expand <bpt id="p1">**</bpt>Cmdlets<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Azure<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Add <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> to the canvas.</source>
          <target state="new">Add <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> to the canvas.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Add-AzureAccount<ph id="ph2">](media/automation-first-runbook-graphical/add-azureaccount.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Add-AzureAccount<ph id="ph2">](media/automation-first-runbook-graphical/add-azureaccount.png)</ph></target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>Parameters<ept id="p2">**</ept> in the Configuration pane.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>Parameters<ept id="p2">**</ept> in the Configuration pane.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> has multiple parameter sets, so we need to select one before we can provide parameter values.</source>
          <target state="new"><bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> has multiple parameter sets, so we need to select one before we can provide parameter values.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Parameter Set<ept id="p1">**</ept> and then select  the <bpt id="p2">**</bpt>User<ept id="p2">**</ept> parameter set.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Parameter Set<ept id="p1">**</ept> and then select  the <bpt id="p2">**</bpt>User<ept id="p2">**</ept> parameter set.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Once you select the parameter set, the parameters are displayed in the Activity Parameter Configuration pane.</source>
          <target state="new">Once you select the parameter set, the parameters are displayed in the Activity Parameter Configuration pane.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Credential<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Credential<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Add Azure account parameters<ph id="ph2">](media/automation-first-runbook-graphical/add-azureaccount-parameters.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Add Azure account parameters<ph id="ph2">](media/automation-first-runbook-graphical/add-azureaccount-parameters.png)</ph></target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>We want this cmdlet to use a credential asset in our Automation account so select <bpt id="p1">**</bpt>Credential asset<ept id="p1">**</ept> for the <bpt id="p2">**</bpt>Data source<ept id="p2">**</ept>.</source>
          <target state="new">We want this cmdlet to use a credential asset in our Automation account so select <bpt id="p1">**</bpt>Credential asset<ept id="p1">**</ept> for the <bpt id="p2">**</bpt>Data source<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Select the credential asset that has access to start and stop a virtual machine in your Azure environment.</source>
          <target state="new">Select the credential asset that has access to start and stop a virtual machine in your Azure environment.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Add Azure account data source</source>
          <target state="new">Add Azure account data source</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> twice to return to the canvas.</source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> twice to return to the canvas.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Step 6 - Add activity to start a virtual machine</source>
          <target state="new">Step 6 - Add activity to start a virtual machine</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>We'll now add a <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> activity to start a virtual machine.</source>
          <target state="new">We'll now add a <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> activity to start a virtual machine.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>You can pick any virtual machine in your Azure subscription, and for now we'll be hardcoding that name into the cmdlet.</source>
          <target state="new">You can pick any virtual machine in your Azure subscription, and for now we'll be hardcoding that name into the cmdlet.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Cmdlets<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Azure<ept id="p2">**</ept>.</source>
          <target state="new">Expand <bpt id="p1">**</bpt>Cmdlets<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Azure<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Add <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> to the canvas and then click and drag it underneath <bpt id="p2">**</bpt>Add-AzureAccount<ept id="p2">**</ept>.</source>
          <target state="new">Add <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> to the canvas and then click and drag it underneath <bpt id="p2">**</bpt>Add-AzureAccount<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Hover over <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> until a circle appears on the bottom of the shape.</source>
          <target state="new">Hover over <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> until a circle appears on the bottom of the shape.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Click the circle and drag the arrow to <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept>.</source>
          <target state="new">Click the circle and drag the arrow to <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The arrow that you just created is a <bpt id="p1">*</bpt>link<ept id="p1">*</ept>.</source>
          <target state="new">The arrow that you just created is a <bpt id="p1">*</bpt>link<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The runbook will start with <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> and then run <bpt id="p2">**</bpt>Start-AzureVM<ept id="p2">**</ept>.</source>
          <target state="new">The runbook will start with <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> and then run <bpt id="p2">**</bpt>Start-AzureVM<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Start-AzureVM<ph id="ph2">](media/automation-first-runbook-graphical/start-azurevm.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Start-AzureVM<ph id="ph2">](media/automation-first-runbook-graphical/start-azurevm.png)</ph></target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Parameters<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Parameter Set<ept id="p2">**</ept> to view the sets for <bpt id="p3">**</bpt>Start-AzureVM<ept id="p3">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Parameters<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Parameter Set<ept id="p2">**</ept> to view the sets for <bpt id="p3">**</bpt>Start-AzureVM<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Select  the <bpt id="p1">**</bpt>ByName<ept id="p1">**</ept> parameter set.</source>
          <target state="new">Select  the <bpt id="p1">**</bpt>ByName<ept id="p1">**</ept> parameter set.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Note that <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ServiceName<ept id="p2">**</ept> have exclamation points next them.</source>
          <target state="new">Note that <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ServiceName<ept id="p2">**</ept> have exclamation points next them.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This indicates that they are required parameters.</source>
          <target state="new">This indicates that they are required parameters.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>Constant value<ept id="p1">**</ept> for the <bpt id="p2">**</bpt>Data source<ept id="p2">**</ept> and type in the name of the virtual machine to start.</source>
          <target state="new">Use <bpt id="p1">**</bpt>Constant value<ept id="p1">**</ept> for the <bpt id="p2">**</bpt>Data source<ept id="p2">**</ept> and type in the name of the virtual machine to start.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>ServiceName<ept id="p1">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>ServiceName<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>Constant value<ept id="p1">**</ept> for the <bpt id="p2">**</bpt>Data source<ept id="p2">**</ept> and type in the name of the virtual machine to start.</source>
          <target state="new">Use <bpt id="p1">**</bpt>Constant value<ept id="p1">**</ept> for the <bpt id="p2">**</bpt>Data source<ept id="p2">**</ept> and type in the name of the virtual machine to start.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Start-AzureVM Parameters<ph id="ph2">](media/automation-first-runbook-graphical/start-azurevm-params.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Start-AzureVM Parameters<ph id="ph2">](media/automation-first-runbook-graphical/start-azurevm-params.png)</ph></target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Click Test pane so that we can test the runbook.</source>
          <target state="new">Click Test pane so that we can test the runbook.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> to start the test.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> to start the test.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Once it completes, check that the virtual machine was started.</source>
          <target state="new">Once it completes, check that the virtual machine was started.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Step 7 - Add an input parameter to the runbook</source>
          <target state="new">Step 7 - Add an input parameter to the runbook</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Our runbook currently starts the virtual machine that we specified in the <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> cmdlet, but our runbook would be more useful if we could specify the virtual machine when the runbook is started.</source>
          <target state="new">Our runbook currently starts the virtual machine that we specified in the <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> cmdlet, but our runbook would be more useful if we could specify the virtual machine when the runbook is started.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>We will now add an input parameter to the runbook to provide that functionality.</source>
          <target state="new">We will now add an input parameter to the runbook to provide that functionality.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Open the graphical editor by clicking <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>MyFirstRunbook<ept id="p2">**</ept> pane.</source>
          <target state="new">Open the graphical editor by clicking <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>MyFirstRunbook<ept id="p2">**</ept> pane.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Input and output<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Add input<ept id="p2">**</ept> to open the Runbook Input Parameter pane.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Input and output<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Add input<ept id="p2">**</ept> to open the Runbook Input Parameter pane.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Runbook Input and Output<ph id="ph2">](media/automation-first-runbook-graphical/runbook-edit-toolbar-inputoutput.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Runbook Input and Output<ph id="ph2">](media/automation-first-runbook-graphical/runbook-edit-toolbar-inputoutput.png)</ph></target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Specify <bpt id="p1">*</bpt>VMName<ept id="p1">*</ept> for the <bpt id="p2">**</bpt>Name<ept id="p2">**</ept>.</source>
          <target state="new">Specify <bpt id="p1">*</bpt>VMName<ept id="p1">*</ept> for the <bpt id="p2">**</bpt>Name<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Keep <bpt id="p1">*</bpt>string<ept id="p1">*</ept> for the <bpt id="p2">**</bpt>Type<ept id="p2">**</ept>, but change <bpt id="p3">**</bpt>Mandatory<ept id="p3">**</ept> to <bpt id="p4">*</bpt>Yes<ept id="p4">*</ept>.</source>
          <target state="new">Keep <bpt id="p1">*</bpt>string<ept id="p1">*</ept> for the <bpt id="p2">**</bpt>Type<ept id="p2">**</ept>, but change <bpt id="p3">**</bpt>Mandatory<ept id="p3">**</ept> to <bpt id="p4">*</bpt>Yes<ept id="p4">*</ept>.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Create a second mandatory input parameter called <bpt id="p1">*</bpt>VMServiceName<ept id="p1">*</ept> and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept> to close the <bpt id="p3">**</bpt>Input and Output<ept id="p3">**</ept> pane.</source>
          <target state="new">Create a second mandatory input parameter called <bpt id="p1">*</bpt>VMServiceName<ept id="p1">*</ept> and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept> to close the <bpt id="p3">**</bpt>Input and Output<ept id="p3">**</ept> pane.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Runbook Input Parameters<ph id="ph2">](media/automation-first-runbook-graphical/input-parameters.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Runbook Input Parameters<ph id="ph2">](media/automation-first-runbook-graphical/input-parameters.png)</ph></target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> activity and then click <bpt id="p2">**</bpt>Parameters<ept id="p2">**</ept>.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> activity and then click <bpt id="p2">**</bpt>Parameters<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Change the <bpt id="p1">**</bpt>Data source<ept id="p1">**</ept> for <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Runbook input<ept id="p3">**</ept> and then select <bpt id="p4">**</bpt>VMName<ept id="p4">**</ept>.</source>
          <target state="new">Change the <bpt id="p1">**</bpt>Data source<ept id="p1">**</ept> for <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Runbook input<ept id="p3">**</ept> and then select <bpt id="p4">**</bpt>VMName<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Start-AzureVM Name Parameter<ph id="ph2">](media/automation-first-runbook-graphical/vmname-property.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Start-AzureVM Name Parameter<ph id="ph2">](media/automation-first-runbook-graphical/vmname-property.png)</ph></target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Change the <bpt id="p1">**</bpt>Data source<ept id="p1">**</ept> for <bpt id="p2">**</bpt>ServiceName<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Runbook input<ept id="p3">**</ept> and then select <bpt id="p4">**</bpt>VMServiceName<ept id="p4">**</ept>.</source>
          <target state="new">Change the <bpt id="p1">**</bpt>Data source<ept id="p1">**</ept> for <bpt id="p2">**</bpt>ServiceName<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Runbook input<ept id="p3">**</ept> and then select <bpt id="p4">**</bpt>VMServiceName<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Start-AzureVM Parameters<ph id="ph2">](media/automation-first-runbook-graphical/start-azurevm-params-inputs.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Start-AzureVM Parameters<ph id="ph2">](media/automation-first-runbook-graphical/start-azurevm-params-inputs.png)</ph></target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Save the runbook and open the Test pane.</source>
          <target state="new">Save the runbook and open the Test pane.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Note that you can now provide values for the two input variables that will be used in the test.</source>
          <target state="new">Note that you can now provide values for the two input variables that will be used in the test.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Close the Test pane.</source>
          <target state="new">Close the Test pane.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> to publish the new version of the runbook.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> to publish the new version of the runbook.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Stop the virtual machine that you started in the previous step.</source>
          <target state="new">Stop the virtual machine that you started in the previous step.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> to start the runbook.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> to start the runbook.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Type in the <bpt id="p1">**</bpt>VMName<ept id="p1">**</ept> and <bpt id="p2">**</bpt>VMServiceName<ept id="p2">**</ept> for the virtual machine that you're going to start.</source>
          <target state="new">Type in the <bpt id="p1">**</bpt>VMName<ept id="p1">**</ept> and <bpt id="p2">**</bpt>VMServiceName<ept id="p2">**</ept> for the virtual machine that you're going to start.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Start Runbook<ph id="ph2">](media/automation-first-runbook-graphical/start-runbook-input-params.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Start Runbook<ph id="ph2">](media/automation-first-runbook-graphical/start-runbook-input-params.png)</ph></target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When the runbook completes, check that the virtual machine was started.</source>
          <target state="new">When the runbook completes, check that the virtual machine was started.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Step 8 - Create a conditional link</source>
          <target state="new">Step 8 - Create a conditional link</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>We will now modify the runbook so that it will only attempt to start the runbook if it is not already started.</source>
          <target state="new">We will now modify the runbook so that it will only attempt to start the runbook if it is not already started.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>We'll do this by adding a <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> cmdlet to the runbook that will include the current state of the virtual machine.</source>
          <target state="new">We'll do this by adding a <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> cmdlet to the runbook that will include the current state of the virtual machine.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>We'll then add a conditional link that will only run <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> if the current running state is stopped.</source>
          <target state="new">We'll then add a conditional link that will only run <bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> if the current running state is stopped.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>If the runbook isn't stopped, then output a message.</source>
          <target state="new">If the runbook isn't stopped, then output a message.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt>MyFirstRunbook<ept id="p1">**</ept> in the graphical editor.</source>
          <target state="new">Open <bpt id="p1">**</bpt>MyFirstRunbook<ept id="p1">**</ept> in the graphical editor.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Remove the link between <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Start-AzureVM<ept id="p2">**</ept> by clicking on it and then pressing the <bpt id="p3">*</bpt>Delete<ept id="p3">*</ept> key.</source>
          <target state="new">Remove the link between <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Start-AzureVM<ept id="p2">**</ept> by clicking on it and then pressing the <bpt id="p3">*</bpt>Delete<ept id="p3">*</ept> key.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>In the Library control, expand <bpt id="p1">**</bpt>Cmdlets<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Azure<ept id="p2">**</ept>.</source>
          <target state="new">In the Library control, expand <bpt id="p1">**</bpt>Cmdlets<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Azure<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Add <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> to the canvas.</source>
          <target state="new">Add <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> to the canvas.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Create a link from <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Get-AzureVM<ept id="p2">**</ept>.</source>
          <target state="new">Create a link from <bpt id="p1">**</bpt>Add-AzureAccount<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Get-AzureVM<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Create another link from <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Start-AzureVM<ept id="p2">**</ept>.</source>
          <target state="new">Create another link from <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Start-AzureVM<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Runbook with Get-AzureVM<ph id="ph2">](media/automation-first-runbook-graphical/get-azurevm.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Runbook with Get-AzureVM<ph id="ph2">](media/automation-first-runbook-graphical/get-azurevm.png)</ph></target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Parameters<ept id="p2">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Parameters<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Select the parameter set <bpt id="p1">*</bpt>GetVMByServiceAndVMName<ept id="p1">*</ept>.</source>
          <target state="new">Select the parameter set <bpt id="p1">*</bpt>GetVMByServiceAndVMName<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, set the <bpt id="p2">**</bpt>Date source<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Runbook input<ept id="p3">**</ept> and then select <bpt id="p4">**</bpt>VMName<ept id="p4">**</ept>.</source>
          <target state="new">For <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, set the <bpt id="p2">**</bpt>Date source<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Runbook input<ept id="p3">**</ept> and then select <bpt id="p4">**</bpt>VMName<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">**</bpt>ServiceName<ept id="p1">**</ept>, set the <bpt id="p2">**</bpt>Date source<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Runbook input<ept id="p3">**</ept> and then select <bpt id="p4">**</bpt>VMServiceName<ept id="p4">**</ept>.</source>
          <target state="new">For <bpt id="p1">**</bpt>ServiceName<ept id="p1">**</ept>, set the <bpt id="p2">**</bpt>Date source<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Runbook input<ept id="p3">**</ept> and then select <bpt id="p4">**</bpt>VMServiceName<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Select the link between <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Start-AzureVM<ept id="p2">**</ept>.</source>
          <target state="new">Select the link between <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Start-AzureVM<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>In the Configuration pane, change <bpt id="p1">**</bpt>Apply condition<ept id="p1">**</ept> to <bpt id="p2">**</bpt>True<ept id="p2">**</ept>.</source>
          <target state="new">In the Configuration pane, change <bpt id="p1">**</bpt>Apply condition<ept id="p1">**</ept> to <bpt id="p2">**</bpt>True<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Note that the link turns to a dashed line indicating that the target activity will only be run if the condition resolves to true.</source>
          <target state="new">Note that the link turns to a dashed line indicating that the target activity will only be run if the condition resolves to true.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">**</bpt>Condition expression<ept id="p1">**</ept>, type <bpt id="p2">*</bpt>$ActivityOutput['Get-AzureVM'].PowerState -eq "Stopped"<ept id="p2">*</ept>.</source>
          <target state="new">For the <bpt id="p1">**</bpt>Condition expression<ept id="p1">**</ept>, type <bpt id="p2">*</bpt>$ActivityOutput['Get-AzureVM'].PowerState -eq "Stopped"<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> will now only run if the virtual machine is stopped.</source>
          <target state="new"><bpt id="p1">**</bpt>Start-AzureVM<ept id="p1">**</ept> will now only run if the virtual machine is stopped.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Link condition<ph id="ph2">](media/automation-first-runbook-graphical/link-condition.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Link condition<ph id="ph2">](media/automation-first-runbook-graphical/link-condition.png)</ph></target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>In the Library control, expand <bpt id="p1">**</bpt>Cmdlets<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Microsoft.PowerShell.Utility<ept id="p2">**</ept>.</source>
          <target state="new">In the Library control, expand <bpt id="p1">**</bpt>Cmdlets<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Microsoft.PowerShell.Utility<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Add <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> to the canvas.</source>
          <target state="new">Add <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> to the canvas.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Create a link from <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Write-Output<ept id="p2">**</ept>.</source>
          <target state="new">Create a link from <bpt id="p1">**</bpt>Get-AzureVM<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Write-Output<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Select the link and change <bpt id="p1">**</bpt>Apply condition<ept id="p1">**</ept> to <bpt id="p2">**</bpt>True<ept id="p2">**</ept>.</source>
          <target state="new">Select the link and change <bpt id="p1">**</bpt>Apply condition<ept id="p1">**</ept> to <bpt id="p2">**</bpt>True<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">**</bpt>Condition expression<ept id="p1">**</ept>, type <bpt id="p2">*</bpt>$ActivityOutput['Get-AzureVM'].PowerState -ne "Stopped"<ept id="p2">*</ept>.</source>
          <target state="new">For the <bpt id="p1">**</bpt>Condition expression<ept id="p1">**</ept>, type <bpt id="p2">*</bpt>$ActivityOutput['Get-AzureVM'].PowerState -ne "Stopped"<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> will now only run if the virtual machine is not stopped.</source>
          <target state="new"><bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> will now only run if the virtual machine is not stopped.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Runbook with Write-Output<ph id="ph2">](media/automation-first-runbook-graphical/write-output-link.png)</ph></source>
          <target state="new"><ph id="ph1">![</ph>Runbook with Write-Output<ph id="ph2">](media/automation-first-runbook-graphical/write-output-link.png)</ph></target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Parameters<ept id="p2">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Parameters<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">**</bpt>InputObject<ept id="p1">**</ept>, change <bpt id="p2">**</bpt>Data source<ept id="p2">**</ept> to <bpt id="p3">**</bpt>PowerShell expression<ept id="p3">**</ept> and type in the expression <bpt id="p4">*</bpt>"$VMName.Name already started."<ept id="p4">*</ept>.</source>
          <target state="new">For <bpt id="p1">**</bpt>InputObject<ept id="p1">**</ept>, change <bpt id="p2">**</bpt>Data source<ept id="p2">**</ept> to <bpt id="p3">**</bpt>PowerShell expression<ept id="p3">**</ept> and type in the expression <bpt id="p4">*</bpt>"$VMName.Name already started."<ept id="p4">*</ept>.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Save the runbook and open the Test pane.</source>
          <target state="new">Save the runbook and open the Test pane.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Start the runbook with the virtual machine stopped, and it should start.</source>
          <target state="new">Start the runbook with the virtual machine stopped, and it should start.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Start the runbook with the virtual machine started, and you should get output that it is already started.</source>
          <target state="new">Start the runbook with the virtual machine started, and you should get output that it is already started.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Graphical authoring in Azure Automation</source>
          <target state="new">Graphical authoring in Azure Automation</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>My first textual runbook</source>
          <target state="new">My first textual runbook</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4bef371afd1a2a8aa13afb190b515975e3285d1</xliffext:olfilehash>
  </header>
</xliff>