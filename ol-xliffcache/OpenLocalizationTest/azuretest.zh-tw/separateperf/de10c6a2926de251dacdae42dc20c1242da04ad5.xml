{
  "nodes": [
    {
      "content": "Elastic database tools glossary",
      "pos": [
        28,
        59
      ]
    },
    {
      "content": "Explanation of terms used for elastic database tools",
      "pos": [
        79,
        131
      ]
    },
    {
      "content": "Elastic Database tools glossary",
      "pos": [
        449,
        480
      ]
    },
    {
      "content": "The following terms are defined for the Elastic Database tools, a feature of Azure SQL Database.",
      "pos": [
        481,
        577
      ]
    },
    {
      "content": "The tools include the client library, the split-merge tool, elastic pools, and queries.",
      "pos": [
        578,
        665
      ]
    },
    {
      "content": "![Elastic Scale terms][1]",
      "pos": [
        667,
        692
      ]
    },
    {
      "pos": [
        694,
        730
      ],
      "content": "<bpt id=\"p1\">**</bpt>Database<ept id=\"p1\">**</ept>: An Azure SQL database."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Data dependent routing<ept id=\"p1\">**</ept>: The functionality that enables an application to connect to a shard given a specific sharding key.",
      "pos": [
        733,
        859
      ]
    },
    {
      "content": "Compare to <bpt id=\"p1\">**</bpt>Multi-Shard Query<ept id=\"p1\">**</ept>.",
      "pos": [
        860,
        893
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Global shard map<ept id=\"p1\">**</ept>: The map between sharding keys and their respective shards within a <bpt id=\"p2\">**</bpt>shard set<ept id=\"p2\">**</ept>.",
      "pos": [
        895,
        998
      ]
    },
    {
      "content": "The global shard map is stored in the <bpt id=\"p1\">**</bpt>shard map manager<ept id=\"p1\">**</ept>.",
      "pos": [
        999,
        1059
      ]
    },
    {
      "content": "Compare to <bpt id=\"p1\">**</bpt>local shard map<ept id=\"p1\">**</ept>.",
      "pos": [
        1060,
        1091
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>List shard map<ept id=\"p1\">**</ept>: A shard map in which sharding keys are mapped individually.",
      "pos": [
        1093,
        1172
      ]
    },
    {
      "content": "Compare to <bpt id=\"p1\">**</bpt>Range Shard Map<ept id=\"p1\">**</ept>.",
      "pos": [
        1173,
        1204
      ]
    },
    {
      "pos": [
        1209,
        1330
      ],
      "content": "<bpt id=\"p1\">**</bpt>Local shard map<ept id=\"p1\">**</ept>: Stored on a shard, the local shard map contains mappings for the shardlets that reside on the shard."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Multi-shard query<ept id=\"p1\">**</ept>: The ability to issue a query against multiple shards; results sets are returned using UNION ALL semantics (also known as “fan-out query”).",
      "pos": [
        1332,
        1493
      ]
    },
    {
      "content": "Compare to <bpt id=\"p1\">**</bpt>data dependent routing<ept id=\"p1\">**</ept>.",
      "pos": [
        1494,
        1532
      ]
    },
    {
      "pos": [
        1534,
        1657
      ],
      "content": "<bpt id=\"p1\">**</bpt>Range shard map<ept id=\"p1\">**</ept>: A shard map in which the shard distribution strategy is based on multiple ranges of contiguous values."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Reference tables<ept id=\"p1\">**</ept>: Tables that are not sharded but are replicated across shards.",
      "pos": [
        1660,
        1743
      ]
    },
    {
      "content": "For example, zip codes can be stored in a reference table.",
      "pos": [
        1744,
        1802
      ]
    },
    {
      "pos": [
        1805,
        1879
      ],
      "content": "<bpt id=\"p1\">**</bpt>Shard<ept id=\"p1\">**</ept>: An Azure SQL database that stores data from a sharded data set."
    },
    {
      "pos": [
        1882,
        1980
      ],
      "content": "<bpt id=\"p1\">**</bpt>Shard elasticity<ept id=\"p1\">**</ept>: The ability to perform both <bpt id=\"p2\">**</bpt>horizontal scaling<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>vertical scaling<ept id=\"p3\">**</ept>."
    },
    {
      "pos": [
        1982,
        2108
      ],
      "content": "<bpt id=\"p1\">**</bpt>Sharded tables<ept id=\"p1\">**</ept>: Tables that are sharded, i.e., whose data is distributed across shards based on their sharding key values."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Sharding key<ept id=\"p1\">**</ept>: A column value that determines how data is distributed across shards.",
      "pos": [
        2111,
        2198
      ]
    },
    {
      "content": "The value type can be one of the following: <bpt id=\"p1\">**</bpt>int<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>bigint<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>varbinary<ept id=\"p3\">**</ept>, or <bpt id=\"p4\">**</bpt>uniqueidentifier<ept id=\"p4\">**</ept>.",
      "pos": [
        2199,
        2303
      ]
    },
    {
      "pos": [
        2306,
        2413
      ],
      "content": "<bpt id=\"p1\">**</bpt>Shard set<ept id=\"p1\">**</ept>: The collection of shards that are attributed to the same shard map in the shard map manager."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Shardlet<ept id=\"p1\">**</ept>: All of the data associated with a single value of a sharding key on a shard.",
      "pos": [
        2417,
        2507
      ]
    },
    {
      "content": "A shardlet is the smallest unit of data movement possible when redistributing sharded tables.",
      "pos": [
        2508,
        2601
      ]
    },
    {
      "pos": [
        2604,
        2689
      ],
      "content": "<bpt id=\"p1\">**</bpt>Shard map<ept id=\"p1\">**</ept>: The set of mappings between sharding keys and their respective shards."
    },
    {
      "pos": [
        2691,
        2838
      ],
      "content": "<bpt id=\"p1\">**</bpt>Shard map manager<ept id=\"p1\">**</ept>: A management object and data store that contains the shard map(s), shard locations, and mappings for one or more shard sets."
    },
    {
      "content": "![Mappings][2]",
      "pos": [
        2840,
        2854
      ]
    },
    {
      "content": "Verbs",
      "pos": [
        2859,
        2864
      ]
    },
    {
      "pos": [
        2866,
        3004
      ],
      "content": "<bpt id=\"p1\">**</bpt>Horizontal scaling<ept id=\"p1\">**</ept>: The act of scaling out (or in) a collection of shards by adding or removing shards to a shard map, as shown below."
    },
    {
      "content": "![Horizontal and vertical scaling][3]",
      "pos": [
        3006,
        3043
      ]
    },
    {
      "pos": [
        3045,
        3152
      ],
      "content": "<bpt id=\"p1\">**</bpt>Merge<ept id=\"p1\">**</ept>: The act of moving shardlets from two shards to one shard and updating the shard map accordingly."
    },
    {
      "pos": [
        3154,
        3230
      ],
      "content": "<bpt id=\"p1\">**</bpt>Shardlet move<ept id=\"p1\">**</ept>: The act of moving a single shardlet to a different shard."
    },
    {
      "pos": [
        3233,
        3359
      ],
      "content": "<bpt id=\"p1\">**</bpt>Shard<ept id=\"p1\">**</ept>: The act of horizontally partitioning identically structured data across multiple databases based on a sharding key."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Split<ept id=\"p1\">**</ept>: The act of moving several shardlets from one shard to another (typically new) shard.",
      "pos": [
        3361,
        3456
      ]
    },
    {
      "content": "A sharding key is provided by the user as the split point.",
      "pos": [
        3457,
        3515
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Vertical Scaling<ept id=\"p1\">**</ept>: The act of scaling up (or down) the performance level of an individual shard.",
      "pos": [
        3517,
        3616
      ]
    },
    {
      "content": "For example, changing a shard from Standard to Premium (which results in more computing resources).",
      "pos": [
        3617,
        3716
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Elastic database tools glossary\" \n    description=\"Explanation of terms used for elastic database tools\" \n    services=\"sql-database\" \n    documentationCenter=\"\" \n    manager=\"jeffreyg\" \n    authors=\"sidneyh\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"sql-database\" \n    ms.workload=\"sql-database\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"07/24/2015\" \n    ms.author=\"sidneyh\"/>\n\n# Elastic Database tools glossary\nThe following terms are defined for the Elastic Database tools, a feature of Azure SQL Database. The tools include the client library, the split-merge tool, elastic pools, and queries.\n\n![Elastic Scale terms][1]\n\n**Database**: An Azure SQL database. \n\n**Data dependent routing**: The functionality that enables an application to connect to a shard given a specific sharding key. Compare to **Multi-Shard Query**.\n\n**Global shard map**: The map between sharding keys and their respective shards within a **shard set**. The global shard map is stored in the **shard map manager**. Compare to **local shard map**.\n\n**List shard map**: A shard map in which sharding keys are mapped individually. Compare to **Range Shard Map**.   \n\n**Local shard map**: Stored on a shard, the local shard map contains mappings for the shardlets that reside on the shard.\n\n**Multi-shard query**: The ability to issue a query against multiple shards; results sets are returned using UNION ALL semantics (also known as “fan-out query”). Compare to **data dependent routing**.\n\n**Range shard map**: A shard map in which the shard distribution strategy is based on multiple ranges of contiguous values. \n\n**Reference tables**: Tables that are not sharded but are replicated across shards. For example, zip codes can be stored in a reference table. \n\n**Shard**: An Azure SQL database that stores data from a sharded data set. \n\n**Shard elasticity**: The ability to perform both **horizontal scaling** and **vertical scaling**.\n\n**Sharded tables**: Tables that are sharded, i.e., whose data is distributed across shards based on their sharding key values. \n\n**Sharding key**: A column value that determines how data is distributed across shards. The value type can be one of the following: **int**, **bigint**, **varbinary**, or **uniqueidentifier**. \n\n**Shard set**: The collection of shards that are attributed to the same shard map in the shard map manager.  \n\n**Shardlet**: All of the data associated with a single value of a sharding key on a shard. A shardlet is the smallest unit of data movement possible when redistributing sharded tables. \n\n**Shard map**: The set of mappings between sharding keys and their respective shards.\n\n**Shard map manager**: A management object and data store that contains the shard map(s), shard locations, and mappings for one or more shard sets.\n\n![Mappings][2]\n\n\n##Verbs\n\n**Horizontal scaling**: The act of scaling out (or in) a collection of shards by adding or removing shards to a shard map, as shown below.\n\n![Horizontal and vertical scaling][3]\n\n**Merge**: The act of moving shardlets from two shards to one shard and updating the shard map accordingly.\n\n**Shardlet move**: The act of moving a single shardlet to a different shard. \n\n**Shard**: The act of horizontally partitioning identically structured data across multiple databases based on a sharding key.\n\n**Split**: The act of moving several shardlets from one shard to another (typically new) shard. A sharding key is provided by the user as the split point.\n\n**Vertical Scaling**: The act of scaling up (or down) the performance level of an individual shard. For example, changing a shard from Standard to Premium (which results in more computing resources). \n\n[AZURE.INCLUDE [elastic-scale-include](../../includes/elastic-scale-include.md)]  \n\n<!--Image references-->\n[1]: ./media/sql-database-elastic-scale-glossary/glossary.png\n[2]: ./media/sql-database-elastic-scale-glossary/mappings.png\n[3]: ./media/sql-database-elastic-scale-glossary/h_versus_vert.png\n "
}