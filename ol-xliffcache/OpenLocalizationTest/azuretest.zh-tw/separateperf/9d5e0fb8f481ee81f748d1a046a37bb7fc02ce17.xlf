<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Web app with table storage (Node.js) | Microsoft Azure</source>
          <target state="new">Web app with table storage (Node.js) | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A tutorial that builds on the Web App with Express tutorial by adding Azure Storage services and the Azure module.</source>
          <target state="new">A tutorial that builds on the Web App with Express tutorial by adding Azure Storage services and the Azure module.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Node.js Web Application using Storage</source>
          <target state="new">Node.js Web Application using Storage</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will extend the application created in the</source>
          <target state="new">In this tutorial, you will extend the application created in the</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Node.js Web Application using Express]</ept> tutorial by using the Microsoft</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Node.js Web Application using Express]</ept> tutorial by using the Microsoft</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Azure Client Libraries for Node.js to work with data management services.</source>
          <target state="new">Azure Client Libraries for Node.js to work with data management services.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You</source>
          <target state="new">You</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>will extend your application to create a web-based task-list application</source>
          <target state="new">will extend your application to create a web-based task-list application</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>that you can deploy to Azure.</source>
          <target state="new">that you can deploy to Azure.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The task list allows a user to</source>
          <target state="new">The task list allows a user to</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>retrieve tasks, add new tasks, and mark tasks as completed.</source>
          <target state="new">retrieve tasks, add new tasks, and mark tasks as completed.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The task items are stored in Azure Storage.</source>
          <target state="new">The task items are stored in Azure Storage.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Azure</source>
          <target state="new">Azure</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Storage provides unstructured data storage that is fault-tolerant and</source>
          <target state="new">Storage provides unstructured data storage that is fault-tolerant and</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>highly available.</source>
          <target state="new">highly available.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Azure Storage includes several data structures</source>
          <target state="new">Azure Storage includes several data structures</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>where you can store and access data, and you can leverage the storage</source>
          <target state="new">where you can store and access data, and you can leverage the storage</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>services from the APIs included in the Azure SDK for Node.js or</source>
          <target state="new">services from the APIs included in the Azure SDK for Node.js or</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>via REST APIs.</source>
          <target state="new">via REST APIs.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt><ept id="p1">Storing and Accessing Data in Azure]</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt><ept id="p1">Storing and Accessing Data in Azure]</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This tutorial assumes that you have completed the <bpt id="p1">[</bpt><ph id="ph1">Node.js Web</ph>
Application<ept id="p1">]</ept> and <bpt id="p2">[</bpt>Node.js with Express<ept id="p2">][Node.js Web Application using Express]</ept> tutorials.</source>
          <target state="new">This tutorial assumes that you have completed the <bpt id="p1">[</bpt><ph id="ph1">Node.js Web</ph>
Application<ept id="p1">]</ept> and <bpt id="p2">[</bpt>Node.js with Express<ept id="p2">][Node.js Web Application using Express]</ept> tutorials.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You will learn:</source>
          <target state="new">You will learn:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>How to work with the Jade template engine</source>
          <target state="new">How to work with the Jade template engine</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>How to work with Azure Data Management services</source>
          <target state="new">How to work with Azure Data Management services</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A screenshot of the completed application is below:</source>
          <target state="new">A screenshot of the completed application is below:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The completed web page in internet explorer</source>
          <target state="new">The completed web page in internet explorer</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Setting Storage Credentials in Web.Config</source>
          <target state="new">Setting Storage Credentials in Web.Config</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To access Azure Storage, you need to pass in storage</source>
          <target state="new">To access Azure Storage, you need to pass in storage</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>credentials.</source>
          <target state="new">credentials.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To do this, you utilize web.config application settings.</source>
          <target state="new">To do this, you utilize web.config application settings.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Those settings will be passed as environment variables to Node, which</source>
          <target state="new">Those settings will be passed as environment variables to Node, which</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>are then read by the Azure SDK.</source>
          <target state="new">are then read by the Azure SDK.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Storage credentials are only used when the application is</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Storage credentials are only used when the application is</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>deployed to Azure.</source>
          <target state="new">deployed to Azure.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When running in the emulator, the application</source>
          <target state="new">When running in the emulator, the application</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>will use the storage emulator.</source>
          <target state="new">will use the storage emulator.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Perform the following steps to retrieve the storage account credentials</source>
          <target state="new">Perform the following steps to retrieve the storage account credentials</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>and add them to the web.config settings:</source>
          <target state="new">and add them to the web.config settings:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If it is not already open, start the Azure PowerShell from the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu by expanding <bpt id="p2">**</bpt>All Programs, Azure<ept id="p2">**</ept>, right-click <bpt id="p3">**</bpt>Azure PowerShell<ept id="p3">**</ept>, and then select <bpt id="p4">**</bpt>Run As Administrator<ept id="p4">**</ept>.</source>
          <target state="new">If it is not already open, start the Azure PowerShell from the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu by expanding <bpt id="p2">**</bpt>All Programs, Azure<ept id="p2">**</ept>, right-click <bpt id="p3">**</bpt>Azure PowerShell<ept id="p3">**</ept>, and then select <bpt id="p4">**</bpt>Run As Administrator<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Change directories to the folder containing your application.</source>
          <target state="new">Change directories to the folder containing your application.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, C:\\node\\tasklist\\WebRole1.</source>
          <target state="new">For example, C:\\node\\tasklist\\WebRole1.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>From the Azure Powershell window enter the following cmdlet to retrieve the storage account information:</source>
          <target state="new">From the Azure Powershell window enter the following cmdlet to retrieve the storage account information:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This retrieves the list of storage accounts and account keys associated with your hosted service.</source>
          <target state="new">This retrieves the list of storage accounts and account keys associated with your hosted service.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Since the Azure SDK creates a storage account when you deploy a service, a storage account should already exist from deploying your application in the previous guides.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Since the Azure SDK creates a storage account when you deploy a service, a storage account should already exist from deploying your application in the previous guides.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>ServiceDefinition.csdef<ept id="p1">**</ept> file containing the environment settings that are used when the application is deployed to Azure:</source>
          <target state="new">Open the <bpt id="p1">**</bpt>ServiceDefinition.csdef<ept id="p1">**</ept> file containing the environment settings that are used when the application is deployed to Azure:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Insert the following block under <bpt id="p1">**</bpt>Environment<ept id="p1">**</ept> element, substituting {STORAGE ACCOUNT} and {STORAGE ACCESS KEY} with the account name and the primary key for the storage account you want to use for deployment:</source>
          <target state="new">Insert the following block under <bpt id="p1">**</bpt>Environment<ept id="p1">**</ept> element, substituting {STORAGE ACCOUNT} and {STORAGE ACCESS KEY} with the account name and the primary key for the storage account you want to use for deployment:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The web.cloud.config file contents</source>
          <target state="new">The web.cloud.config file contents</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Save the file and close notepad.</source>
          <target state="new">Save the file and close notepad.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Install additional modules</source>
          <target state="new">Install additional modules</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Use the following command to install the [azure], [node-uuid], [nconf] and [async] modules locally as well as to save an entry for them to the <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> file:</source>
          <target state="new">Use the following command to install the [azure], [node-uuid], [nconf] and [async] modules locally as well as to save an entry for them to the <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> file:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The output of this command should appear similar to the following:</source>
          <target state="new">The output of this command should appear similar to the following:</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Using the Table service in a node application</source>
          <target state="new">Using the Table service in a node application</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In this section you will extend the basic application created by the <bpt id="p1">**</bpt>express<ept id="p1">**</ept> command by adding a <bpt id="p2">**</bpt>task.js<ept id="p2">**</ept> file which contains the model for your tasks.</source>
          <target state="new">In this section you will extend the basic application created by the <bpt id="p1">**</bpt>express<ept id="p1">**</ept> command by adding a <bpt id="p2">**</bpt>task.js<ept id="p2">**</ept> file which contains the model for your tasks.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You will also modify the existing <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> and create a new <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> file that uses the model.</source>
          <target state="new">You will also modify the existing <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> and create a new <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> file that uses the model.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Create the model</source>
          <target state="new">Create the model</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>WebRole1<ept id="p1">**</ept> directory, create a new directory named <bpt id="p2">**</bpt>models<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>WebRole1<ept id="p1">**</ept> directory, create a new directory named <bpt id="p2">**</bpt>models<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>models<ept id="p1">**</ept> directory, create a new file named <bpt id="p2">**</bpt>task.js<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>models<ept id="p1">**</ept> directory, create a new file named <bpt id="p2">**</bpt>task.js<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This file will contain the model for the tasks created by your application.</source>
          <target state="new">This file will contain the model for the tasks created by your application.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>At the beginning of the <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> file, add the following code to reference required libraries:</source>
          <target state="new">At the beginning of the <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> file, add the following code to reference required libraries:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Next, you will add code to define and export the Task object.</source>
          <target state="new">Next, you will add code to define and export the Task object.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This object is responsible for connecting to the table.</source>
          <target state="new">This object is responsible for connecting to the table.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Next, add the following code to define additional methods on the Task object, which allow interactions with data stored in the table:</source>
          <target state="new">Next, add the following code to define additional methods on the Task object, which allow interactions with data stored in the table:</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Save and close the <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> file.</source>
          <target state="new">Save and close the <bpt id="p1">**</bpt>task.js<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Create the controller</source>
          <target state="new">Create the controller</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>WebRole1/routes<ept id="p1">**</ept> directory, create a new file named <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> and open it in a text editor.</source>
          <target state="new">In the <bpt id="p1">**</bpt>WebRole1/routes<ept id="p1">**</ept> directory, create a new file named <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept> and open it in a text editor.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Add the following code to <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>.</source>
          <target state="new">Add the following code to <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This loads the azure and async modules, which are used by <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>.</source>
          <target state="new">This loads the azure and async modules, which are used by <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This also defines the <bpt id="p1">**</bpt>TaskList<ept id="p1">**</ept> function, which is passed an instance of the <bpt id="p2">**</bpt>Task<ept id="p2">**</ept> object we defined earlier:</source>
          <target state="new">This also defines the <bpt id="p1">**</bpt>TaskList<ept id="p1">**</ept> function, which is passed an instance of the <bpt id="p2">**</bpt>Task<ept id="p2">**</ept> object we defined earlier:</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Continue adding to the <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> file by adding the methods used to <bpt id="p2">**</bpt>showTasks<ept id="p2">**</ept>, <bpt id="p3">**</bpt>addTask<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>completeTasks<ept id="p4">**</ept>:</source>
          <target state="new">Continue adding to the <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> file by adding the methods used to <bpt id="p2">**</bpt>showTasks<ept id="p2">**</ept>, <bpt id="p3">**</bpt>addTask<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>completeTasks<ept id="p4">**</ept>:</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Save the <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> file.</source>
          <target state="new">Save the <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Modify app.js</source>
          <target state="new">Modify app.js</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>WebRole1<ept id="p1">**</ept> directory, open the <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept> file in a text editor.</source>
          <target state="new">In the <bpt id="p1">**</bpt>WebRole1<ept id="p1">**</ept> directory, open the <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept> file in a text editor.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>At the beginning of the file, add the following to load the azure module and set the table name and partition key:</source>
          <target state="new">At the beginning of the file, add the following to load the azure module and set the table name and partition key:</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In the app.js file, scroll down to where you see the following line:</source>
          <target state="new">In the app.js file, scroll down to where you see the following line:</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Replace the above lines with the code shown below.</source>
          <target state="new">Replace the above lines with the code shown below.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This will initialize an instance of <ph id="ph1">&lt;strong&gt;</ph>Task<ph id="ph2">&lt;/strong&gt;</ph> with a connection to your storage account.</source>
          <target state="new">This will initialize an instance of <ph id="ph1">&lt;strong&gt;</ph>Task<ph id="ph2">&lt;/strong&gt;</ph> with a connection to your storage account.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This is passed to the <ph id="ph1">&lt;strong&gt;</ph>TaskList<ph id="ph2">&lt;/strong&gt;</ph>, which will use it to communicate with the Table service:</source>
          <target state="new">This is passed to the <ph id="ph1">&lt;strong&gt;</ph>TaskList<ph id="ph2">&lt;/strong&gt;</ph>, which will use it to communicate with the Table service:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Save the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file.</source>
          <target state="new">Save the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Modify the index view</source>
          <target state="new">Modify the index view</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Change directories to the <bpt id="p1">**</bpt>views<ept id="p1">**</ept> directory and open the <bpt id="p2">**</bpt>index.jade<ept id="p2">**</ept> file in a text editor.</source>
          <target state="new">Change directories to the <bpt id="p1">**</bpt>views<ept id="p1">**</ept> directory and open the <bpt id="p2">**</bpt>index.jade<ept id="p2">**</ept> file in a text editor.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Replace the contents of the <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> file with the code below.</source>
          <target state="new">Replace the contents of the <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> file with the code below.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This defines the view for displaying existing tasks, as well as a form for adding new tasks and marking existing ones as completed.</source>
          <target state="new">This defines the view for displaying existing tasks, as well as a form for adding new tasks and marking existing ones as completed.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Save and close <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> file.</source>
          <target state="new">Save and close <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Modify the global layout</source>
          <target state="new">Modify the global layout</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> file in the <bpt id="p2">**</bpt>views<ept id="p2">**</ept> directory is used as a global template for other <bpt id="p3">**</bpt>.jade<ept id="p3">**</ept> files.</source>
          <target state="new">The <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> file in the <bpt id="p2">**</bpt>views<ept id="p2">**</ept> directory is used as a global template for other <bpt id="p3">**</bpt>.jade<ept id="p3">**</ept> files.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In this step you will modify it to use <bpt id="p1">[</bpt>Twitter Bootstrap<ept id="p1">](https://github.com/twbs/bootstrap)</ept>, which is a toolkit that makes it easy to design a nice looking website.</source>
          <target state="new">In this step you will modify it to use <bpt id="p1">[</bpt>Twitter Bootstrap<ept id="p1">](https://github.com/twbs/bootstrap)</ept>, which is a toolkit that makes it easy to design a nice looking website.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Download and extract the files for <bpt id="p1">[</bpt>Twitter Bootstrap<ept id="p1">](http://getbootstrap.com/)</ept>.</source>
          <target state="new">Download and extract the files for <bpt id="p1">[</bpt>Twitter Bootstrap<ept id="p1">](http://getbootstrap.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Copy the <bpt id="p1">**</bpt>bootstrap.min.css<ept id="p1">**</ept> file from the <bpt id="p2">**</bpt>bootstrap\\dist\\css<ept id="p2">**</ept> folder to the <bpt id="p3">**</bpt>public\\stylesheets<ept id="p3">**</ept> directory of your tasklist application.</source>
          <target state="new">Copy the <bpt id="p1">**</bpt>bootstrap.min.css<ept id="p1">**</ept> file from the <bpt id="p2">**</bpt>bootstrap\\dist\\css<ept id="p2">**</ept> folder to the <bpt id="p3">**</bpt>public\\stylesheets<ept id="p3">**</ept> directory of your tasklist application.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>views<ept id="p1">**</ept> folder, open the <bpt id="p2">**</bpt>layout.jade<ept id="p2">**</ept> in your text editor and replace the contents with the following:</source>
          <target state="new">From the <bpt id="p1">**</bpt>views<ept id="p1">**</ept> folder, open the <bpt id="p2">**</bpt>layout.jade<ept id="p2">**</ept> in your text editor and replace the contents with the following:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Save the <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> file.</source>
          <target state="new">Save the <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Running the Application in the Emulator</source>
          <target state="new">Running the Application in the Emulator</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Use the following command to start the application in the emulator.</source>
          <target state="new">Use the following command to start the application in the emulator.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The browser will open and displays the following page:</source>
          <target state="new">The browser will open and displays the following page:</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A web paged titled My Task List with a table containing tasks and fields to add a new task.</source>
          <target state="new">A web paged titled My Task List with a table containing tasks and fields to add a new task.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Use the form to add items, or remove existing items by marking them as completed.</source>
          <target state="new">Use the form to add items, or remove existing items by marking them as completed.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Publishing the Application to Azure</source>
          <target state="new">Publishing the Application to Azure</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In the Windows PowerShell window, call the following cmdlet to redeploy your hosted service to Azure.</source>
          <target state="new">In the Windows PowerShell window, call the following cmdlet to redeploy your hosted service to Azure.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>myuniquename<ept id="p1">**</ept> with a unique name for this application.</source>
          <target state="new">Replace <bpt id="p1">**</bpt>myuniquename<ept id="p1">**</ept> with a unique name for this application.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>datacentername<ept id="p1">**</ept> with the name of an Azure data center, such as <bpt id="p2">**</bpt>West US<ept id="p2">**</ept>.</source>
          <target state="new">Replace <bpt id="p1">**</bpt>datacentername<ept id="p1">**</ept> with the name of an Azure data center, such as <bpt id="p2">**</bpt>West US<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>After the deployment is complete, you should see a response similar to the following:</source>
          <target state="new">After the deployment is complete, you should see a response similar to the following:</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>As before, because you specified the <bpt id="p1">**</bpt>-launch<ept id="p1">**</ept> option, the browser opens and displays your application running in Azure when publishing is completed.</source>
          <target state="new">As before, because you specified the <bpt id="p1">**</bpt>-launch<ept id="p1">**</ept> option, the browser opens and displays your application running in Azure when publishing is completed.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A browser window displaying the My Task List page.</source>
          <target state="new">A browser window displaying the My Task List page.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The URL indicates the page is now being hosted on Azure.</source>
          <target state="new">The URL indicates the page is now being hosted on Azure.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Stopping and Deleting Your Application</source>
          <target state="new">Stopping and Deleting Your Application</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>After deploying your application, you may want to disable it so you can</source>
          <target state="new">After deploying your application, you may want to disable it so you can</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>avoid costs or build and deploy other applications within the free trial</source>
          <target state="new">avoid costs or build and deploy other applications within the free trial</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>time period.</source>
          <target state="new">time period.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Azure bills web role instances per hour of server time consumed.</source>
          <target state="new">Azure bills web role instances per hour of server time consumed.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Server time is consumed once your application is deployed, even if the</source>
          <target state="new">Server time is consumed once your application is deployed, even if the</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>instances are not running and are in the stopped state.</source>
          <target state="new">instances are not running and are in the stopped state.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The following steps show you how to stop and delete your application.</source>
          <target state="new">The following steps show you how to stop and delete your application.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>In the Windows PowerShell window, stop the service deployment</source>
          <target state="new">In the Windows PowerShell window, stop the service deployment</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>created in the previous section with the following cmdlet:</source>
          <target state="new">created in the previous section with the following cmdlet:</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Stopping the service may take several minutes.</source>
          <target state="new">Stopping the service may take several minutes.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When the service is stopped, you receive a message indicating that it has stopped.</source>
          <target state="new">When the service is stopped, you receive a message indicating that it has stopped.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>To delete the service, call the following cmdlet:</source>
          <target state="new">To delete the service, call the following cmdlet:</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When prompted, enter <bpt id="p1">**</bpt>Y<ept id="p1">**</ept> to delete the service.</source>
          <target state="new">When prompted, enter <bpt id="p1">**</bpt>Y<ept id="p1">**</ept> to delete the service.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Deleting the service may take several minutes.</source>
          <target state="new">Deleting the service may take several minutes.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>After the service has been deleted you receive a message indicating that the service was deleted.</source>
          <target state="new">After the service has been deleted you receive a message indicating that the service was deleted.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d5e0fb8f481ee81f748d1a046a37bb7fc02ce17</xliffext:olfilehash>
  </header>
</xliff>