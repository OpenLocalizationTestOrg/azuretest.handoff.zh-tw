{
  "nodes": [
    {
      "content": "Learn how to manage AzureML web services using API Management | Microsoft Azure",
      "pos": [
        27,
        106
      ]
    },
    {
      "content": "A guide showing how to manage AzureML web services using API Management.",
      "pos": [
        125,
        197
      ]
    },
    {
      "content": "Learn how to manage AzureML web services using API Management",
      "pos": [
        563,
        624
      ]
    },
    {
      "content": "Overview",
      "pos": [
        628,
        636
      ]
    },
    {
      "content": "This guide shows you how to quickly get started using API Management to manage your AzureML web services.",
      "pos": [
        638,
        743
      ]
    },
    {
      "content": "What is Azure API Management?",
      "pos": [
        747,
        776
      ]
    },
    {
      "content": "Azure API Management is an Azure service that lets you manage your REST API endpoints by defining user access, usage throttling, and dashboard monitoring.",
      "pos": [
        778,
        932
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](http://azure.microsoft.com/services/api-management/)</ept> for details on Azure API Management.",
      "pos": [
        933,
        1035
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](api-management/api-management-get-started.md)</ept> for a guide on how to get started with Azure API Management.",
      "pos": [
        1036,
        1155
      ]
    },
    {
      "content": "This other guide, which this guide is based on, covers more topics, including notification configurations, tier pricing, response handling, user authentication, creating products, developer subscriptions, and usage dashboarding.",
      "pos": [
        1156,
        1384
      ]
    },
    {
      "content": "What is AzureML?",
      "pos": [
        1388,
        1404
      ]
    },
    {
      "content": "AzureML is an Azure service for machine learning that enables you to easily build, deploy, and share advanced analytics solutions.",
      "pos": [
        1406,
        1536
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](http://azure.microsoft.com/services/machine-learning/)</ept> for details on AzureML.",
      "pos": [
        1537,
        1628
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        1632,
        1645
      ]
    },
    {
      "content": "To complete this guide, you need:",
      "pos": [
        1647,
        1680
      ]
    },
    {
      "content": "An Azure account.",
      "pos": [
        1684,
        1701
      ]
    },
    {
      "content": "If you don’t have an Azure account, click <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](http://azure.microsoft.com/pricing/free-trial/)</ept> for details on how to create a free trial account.",
      "pos": [
        1702,
        1849
      ]
    },
    {
      "content": "An AzureML account.",
      "pos": [
        1852,
        1871
      ]
    },
    {
      "content": "If you don’t have an AzureML account, click <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](https://studio.azureml.net/)</ept> for details on how to create a free trial account.",
      "pos": [
        1872,
        2002
      ]
    },
    {
      "content": "The workspace, service, and api_key for an AzureML experiment published as a web service.",
      "pos": [
        2005,
        2094
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](machine-learning/machine-learning-create-experiment.md)</ept> for details on how to create an AzureML experiment.",
      "pos": [
        2095,
        2215
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](machine-learning/machine-learning-publish-a-machine-learning-web-service.md)</ept> for details on how to publish an AzureML experiment as a web service.",
      "pos": [
        2216,
        2375
      ]
    },
    {
      "content": "Alternately, Appendix A has instructions for how to create and test a simple AzureML experiment and publish it as a web service.",
      "pos": [
        2376,
        2504
      ]
    },
    {
      "content": "Create an API Management instance",
      "pos": [
        2508,
        2541
      ]
    },
    {
      "content": "Below are the steps for using API Management to manage your AzureML web service.",
      "pos": [
        2543,
        2623
      ]
    },
    {
      "content": "First create a service instance.",
      "pos": [
        2624,
        2656
      ]
    },
    {
      "content": "Log in to the <bpt id=\"p1\">[</bpt>Management Portal<ept id=\"p1\">](https://manage.windowsazure.com/)</ept> and click <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept> &gt; <bpt id=\"p3\">**</bpt>App Services<ept id=\"p3\">**</ept> &gt; <bpt id=\"p4\">**</bpt>API Management<ept id=\"p4\">**</ept> &gt; <bpt id=\"p5\">**</bpt>Create<ept id=\"p5\">**</ept>.",
      "pos": [
        2657,
        2796
      ]
    },
    {
      "content": "create-instance",
      "pos": [
        2800,
        2815
      ]
    },
    {
      "content": "Specify a unique <bpt id=\"p1\">**</bpt>URL<ept id=\"p1\">**</ept>.",
      "pos": [
        2914,
        2939
      ]
    },
    {
      "content": "This guide uses <bpt id=\"p1\">**</bpt>demoazureml<ept id=\"p1\">**</ept> – you will need to choose something different.",
      "pos": [
        2940,
        3018
      ]
    },
    {
      "content": "Choose the desired <bpt id=\"p1\">**</bpt>Subscription<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Region<ept id=\"p2\">**</ept> for your service instance.",
      "pos": [
        3019,
        3096
      ]
    },
    {
      "content": "After making your selections, click the next button.",
      "pos": [
        3097,
        3149
      ]
    },
    {
      "content": "create-service-1",
      "pos": [
        3153,
        3169
      ]
    },
    {
      "content": "Specify a value for the <bpt id=\"p1\">**</bpt>Organization Name<ept id=\"p1\">**</ept>.",
      "pos": [
        3269,
        3315
      ]
    },
    {
      "content": "This guide uses <bpt id=\"p1\">**</bpt>demoazureml<ept id=\"p1\">**</ept> – you will need to choose something different.",
      "pos": [
        3316,
        3394
      ]
    },
    {
      "content": "Enter your email address in the <bpt id=\"p1\">**</bpt>administrator e-mail<ept id=\"p1\">**</ept> field.",
      "pos": [
        3395,
        3458
      ]
    },
    {
      "content": "This email address is used for notifications from the API Management system.",
      "pos": [
        3459,
        3535
      ]
    },
    {
      "content": "create-service-2",
      "pos": [
        3539,
        3555
      ]
    },
    {
      "content": "Click the check box to create your service instance.",
      "pos": [
        3655,
        3707
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>It takes up to thirty minutes for a new service to be created<ept id=\"p1\">*</ept>.",
      "pos": [
        3708,
        3772
      ]
    },
    {
      "content": "Create the API",
      "pos": [
        3776,
        3790
      ]
    },
    {
      "content": "Once the service instance is created, the next step is to create the API.",
      "pos": [
        3792,
        3865
      ]
    },
    {
      "content": "An API consists of a set of operations that can be invoked from a client application.",
      "pos": [
        3866,
        3951
      ]
    },
    {
      "content": "API operations are proxied to existing web services.",
      "pos": [
        3952,
        4004
      ]
    },
    {
      "content": "This guide creates APIs that proxy to the existing AzureML RRS and BES web services.",
      "pos": [
        4005,
        4089
      ]
    },
    {
      "content": "APIs are created and configured from the API publisher portal, which is accessed through the Azure management portal.",
      "pos": [
        4091,
        4208
      ]
    },
    {
      "content": "To reach the publisher portal, select your service instance.",
      "pos": [
        4209,
        4269
      ]
    },
    {
      "content": "select-service-instance",
      "pos": [
        4273,
        4296
      ]
    },
    {
      "pos": [
        4403,
        4472
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Manage<ept id=\"p1\">**</ept> in the Azure Portal for your API Management service."
    },
    {
      "content": "manage-service",
      "pos": [
        4476,
        4490
      ]
    },
    {
      "pos": [
        4588,
        4676
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>APIs<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>API Management<ept id=\"p2\">**</ept> menu on the left, and then click <bpt id=\"p3\">**</bpt>Add API<ept id=\"p3\">**</ept>."
    },
    {
      "content": "api-management-menu",
      "pos": [
        4680,
        4699
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>AzureML Demo API<ept id=\"p1\">**</ept> as the <bpt id=\"p2\">**</bpt>Web API name<ept id=\"p2\">**</ept>.",
      "pos": [
        4802,
        4852
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>https://ussouthcentral.services.azureml.net<ept id=\"p1\">**</ept> as the <bpt id=\"p2\">**</bpt>Web service URL<ept id=\"p2\">**</ept>.",
      "pos": [
        4853,
        4933
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>azureml-demo<ept id=\"p1\">**</ept> as the <bpt id=\"p2\">**</bpt>Web API URL suffix<ept id=\"p2\">**</ept>.",
      "pos": [
        4934,
        4986
      ]
    },
    {
      "content": "Check <bpt id=\"p1\">**</bpt>HTTPS<ept id=\"p1\">**</ept> as the <bpt id=\"p2\">**</bpt>Web API URL<ept id=\"p2\">**</ept> scheme.",
      "pos": [
        4987,
        5033
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>Starter<ept id=\"p1\">**</ept> as <bpt id=\"p2\">**</bpt>Products<ept id=\"p2\">**</ept>.",
      "pos": [
        5034,
        5069
      ]
    },
    {
      "content": "When finished, click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> to create the API.",
      "pos": [
        5070,
        5118
      ]
    },
    {
      "content": "add-new-api",
      "pos": [
        5122,
        5133
      ]
    },
    {
      "content": "Add the operations",
      "pos": [
        5230,
        5248
      ]
    },
    {
      "pos": [
        5250,
        5304
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Add operation<ept id=\"p1\">**</ept> to add operations to this API."
    },
    {
      "content": "add-operation",
      "pos": [
        5308,
        5321
      ]
    },
    {
      "pos": [
        5418,
        5519
      ],
      "content": "The <bpt id=\"p1\">**</bpt>New operation<ept id=\"p1\">**</ept> window will be displayed and the <bpt id=\"p2\">**</bpt>Signature<ept id=\"p2\">**</ept> tab will be selected by default."
    },
    {
      "content": "Add RRS Operation",
      "pos": [
        5523,
        5540
      ]
    },
    {
      "content": "First create an operation for the AzureML RRS service.",
      "pos": [
        5542,
        5596
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>POST<ept id=\"p1\">**</ept> as the <bpt id=\"p2\">**</bpt>HTTP verb<ept id=\"p2\">**</ept>.",
      "pos": [
        5597,
        5634
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>/workspaces/{workspace}/services/{service}/execute?api-version={apiversion}&amp;details={details}<ept id=\"p1\">**</ept> as the <bpt id=\"p2\">**</bpt>URL template<ept id=\"p2\">**</ept>.",
      "pos": [
        5635,
        5762
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>RRS Execute<ept id=\"p1\">**</ept> as the <bpt id=\"p2\">**</bpt>Display name<ept id=\"p2\">**</ept>.",
      "pos": [
        5763,
        5808
      ]
    },
    {
      "content": "add-rrs-operation-signature",
      "pos": [
        5812,
        5839
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Responses<ept id=\"p1\">**</ept> &gt; <bpt id=\"p2\">**</bpt>ADD<ept id=\"p2\">**</ept> on the left and select <bpt id=\"p3\">**</bpt>200 OK<ept id=\"p3\">**</ept>.",
      "pos": [
        5950,
        6014
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> to save this operation.",
      "pos": [
        6015,
        6053
      ]
    },
    {
      "content": "add-rrs-operation-response",
      "pos": [
        6057,
        6083
      ]
    },
    {
      "content": "Add BES Operations",
      "pos": [
        6195,
        6213
      ]
    },
    {
      "content": "Screenshots are not included for the BES operations as they are very similar to those for adding the RRS operation.",
      "pos": [
        6215,
        6330
      ]
    },
    {
      "content": "Submit (but not start) a Batch Execution job",
      "pos": [
        6335,
        6379
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>add operation<ept id=\"p1\">**</ept> to add the AzureML BES operation to the API.",
      "pos": [
        6381,
        6449
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>POST<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>HTTP verb<ept id=\"p2\">**</ept>.",
      "pos": [
        6450,
        6488
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>/workspaces/{workspace}/services/{service}/jobs?api-version={apiversion}<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>URL template<ept id=\"p2\">**</ept>.",
      "pos": [
        6489,
        6596
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>BES Submit<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>Display name<ept id=\"p2\">**</ept>.",
      "pos": [
        6597,
        6642
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Responses<ept id=\"p1\">**</ept> &gt; <bpt id=\"p2\">**</bpt>ADD<ept id=\"p2\">**</ept> on the left and select <bpt id=\"p3\">**</bpt>200 OK<ept id=\"p3\">**</ept>.",
      "pos": [
        6643,
        6707
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> to save this operation.",
      "pos": [
        6708,
        6746
      ]
    },
    {
      "content": "Start a Batch Execution job",
      "pos": [
        6751,
        6778
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>add operation<ept id=\"p1\">**</ept> to add the AzureML BES operation to the API.",
      "pos": [
        6780,
        6848
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>POST<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>HTTP verb<ept id=\"p2\">**</ept>.",
      "pos": [
        6849,
        6887
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>/workspaces/{workspace}/services/{service}/jobs/{jobid}/start?api-version={apiversion}<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>URL template<ept id=\"p2\">**</ept>.",
      "pos": [
        6888,
        7009
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>BES Start<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>Display name<ept id=\"p2\">**</ept>.",
      "pos": [
        7010,
        7054
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Responses<ept id=\"p1\">**</ept> &gt; <bpt id=\"p2\">**</bpt>ADD<ept id=\"p2\">**</ept> on the left and select <bpt id=\"p3\">**</bpt>200 OK<ept id=\"p3\">**</ept>.",
      "pos": [
        7055,
        7119
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> to save this operation.",
      "pos": [
        7120,
        7158
      ]
    },
    {
      "content": "Get the status or result of a Batch Execution job",
      "pos": [
        7163,
        7212
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>add operation<ept id=\"p1\">**</ept> to add the AzureML BES operation to the API.",
      "pos": [
        7214,
        7282
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>GET<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>HTTP verb<ept id=\"p2\">**</ept>.",
      "pos": [
        7283,
        7320
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>/workspaces/{workspace}/services/{service}/jobs/{jobid}?api-version={apiversion}<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>URL template<ept id=\"p2\">**</ept>.",
      "pos": [
        7321,
        7436
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>BES Status<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>Display name<ept id=\"p2\">**</ept>.",
      "pos": [
        7437,
        7482
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Responses<ept id=\"p1\">**</ept> &gt; <bpt id=\"p2\">**</bpt>ADD<ept id=\"p2\">**</ept> on the left and select <bpt id=\"p3\">**</bpt>200 OK<ept id=\"p3\">**</ept>.",
      "pos": [
        7483,
        7547
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> to save this operation.",
      "pos": [
        7548,
        7586
      ]
    },
    {
      "content": "Delete a Batch Execution job",
      "pos": [
        7591,
        7619
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>add operation<ept id=\"p1\">**</ept> to add the AzureML BES operation to the API.",
      "pos": [
        7621,
        7689
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>DELETE<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>HTTP verb<ept id=\"p2\">**</ept>.",
      "pos": [
        7690,
        7730
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>/workspaces/{workspace}/services/{service}/jobs/{jobid}?api-version={apiversion}<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>URL template<ept id=\"p2\">**</ept>.",
      "pos": [
        7731,
        7846
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>BES Delete<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>Display name<ept id=\"p2\">**</ept>.",
      "pos": [
        7847,
        7892
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Responses<ept id=\"p1\">**</ept> &gt; <bpt id=\"p2\">**</bpt>ADD<ept id=\"p2\">**</ept> on the left and select <bpt id=\"p3\">**</bpt>200 OK<ept id=\"p3\">**</ept>.",
      "pos": [
        7893,
        7957
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> to save this operation.",
      "pos": [
        7958,
        7996
      ]
    },
    {
      "content": "Call an operation from the Developer Portal",
      "pos": [
        8000,
        8043
      ]
    },
    {
      "content": "Operations can be called directly from the Developer portal, which provides a convenient way to view and test the operations of an API.",
      "pos": [
        8045,
        8180
      ]
    },
    {
      "content": "In this guide step you will call the <bpt id=\"p1\">**</bpt>RRS Execute<ept id=\"p1\">**</ept> method that was added to the <bpt id=\"p2\">**</bpt>AzureML Demo API<ept id=\"p2\">**</ept>.",
      "pos": [
        8181,
        8284
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Developer portal<ept id=\"p1\">**</ept> from the menu at the top right of the Management portal.",
      "pos": [
        8285,
        8368
      ]
    },
    {
      "content": "developer-portal",
      "pos": [
        8372,
        8388
      ]
    },
    {
      "pos": [
        8488,
        8590
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>APIs<ept id=\"p1\">**</ept> from the top menu, and then click <bpt id=\"p2\">**</bpt>AzureML Demo API<ept id=\"p2\">**</ept> to see the operations available."
    },
    {
      "content": "demoazureml-api",
      "pos": [
        8594,
        8609
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>RRS Execute<ept id=\"p1\">**</ept> for the operation.",
      "pos": [
        8708,
        8749
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Try It<ept id=\"p1\">**</ept>.",
      "pos": [
        8750,
        8767
      ]
    },
    {
      "content": "try-it",
      "pos": [
        8771,
        8777
      ]
    },
    {
      "content": "For Request parameters, type your <bpt id=\"p1\">**</bpt>workspace<ept id=\"p1\">**</ept>,  <bpt id=\"p2\">**</bpt>service<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>2.0<ept id=\"p3\">**</ept> for the <bpt id=\"p4\">**</bpt>apiversion<ept id=\"p4\">**</ept>, and  <bpt id=\"p5\">**</bpt>true<ept id=\"p5\">**</ept> for the <bpt id=\"p6\">**</bpt>details<ept id=\"p6\">**</ept>.",
      "pos": [
        8867,
        8996
      ]
    },
    {
      "content": "You can find your <bpt id=\"p1\">**</bpt>workspace<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>service<ept id=\"p2\">**</ept> in the AzureML web service dashboard (see <bpt id=\"p3\">**</bpt>Test the web service<ept id=\"p3\">**</ept> in Appendix A).",
      "pos": [
        8997,
        9127
      ]
    },
    {
      "content": "For Request headers, click <bpt id=\"p1\">**</bpt>Add header<ept id=\"p1\">**</ept> and type <bpt id=\"p2\">**</bpt>Content-Type<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>application/json<ept id=\"p3\">**</ept>, then click <bpt id=\"p4\">**</bpt>Add header<ept id=\"p4\">**</ept> and type <bpt id=\"p5\">**</bpt>Authorization<ept id=\"p5\">**</ept> and <bpt id=\"p6\">**</bpt>Bearer <ph id=\"ph1\">&lt;YOUR AZUREML SERVICE API-KEY&gt;</ph><ept id=\"p6\">**</ept>.",
      "pos": [
        9129,
        9322
      ]
    },
    {
      "content": "You can find your <bpt id=\"p1\">**</bpt>api key<ept id=\"p1\">**</ept> in the AzureML web service dashboard (see <bpt id=\"p2\">**</bpt>Test the web service<ept id=\"p2\">**</ept> in Appendix A).",
      "pos": [
        9323,
        9435
      ]
    },
    {
      "pos": [
        9437,
        9577
      ],
      "content": "Type <bpt id=\"p1\">**</bpt>{\"Inputs\": {\"input1\": {\"ColumnNames\": [\"Col2\"], \"Values\": [[\"This is a good day\"]]}}, \"GlobalParameters\": {}}<ept id=\"p1\">**</ept> for the request body."
    },
    {
      "content": "azureml-demo-api",
      "pos": [
        9581,
        9597
      ]
    },
    {
      "pos": [
        9697,
        9712
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Send<ept id=\"p1\">**</ept>."
    },
    {
      "content": "send",
      "pos": [
        9716,
        9720
      ]
    },
    {
      "pos": [
        9808,
        9998
      ],
      "content": "After an operation is invoked, the developer portal displays the <bpt id=\"p1\">**</bpt>Requested URL<ept id=\"p1\">**</ept> from the back-end service, the <bpt id=\"p2\">**</bpt>Response status<ept id=\"p2\">**</ept>, the <bpt id=\"p3\">**</bpt>Response headers<ept id=\"p3\">**</ept>, and any <bpt id=\"p4\">**</bpt>Response content<ept id=\"p4\">**</ept>."
    },
    {
      "content": "response-status",
      "pos": [
        10002,
        10017
      ]
    },
    {
      "content": "Appendix A - Creating and testing a simple AzureML web service",
      "pos": [
        10118,
        10180
      ]
    },
    {
      "content": "Creating the experiment",
      "pos": [
        10185,
        10208
      ]
    },
    {
      "content": "Below are the steps for creating a simple AzureML experiment and publishing it as a web service.",
      "pos": [
        10210,
        10306
      ]
    },
    {
      "content": "The web service takes as input a column of arbitrary text and returns a set of features represented as integers.",
      "pos": [
        10307,
        10419
      ]
    },
    {
      "content": "For example:",
      "pos": [
        10420,
        10432
      ]
    },
    {
      "content": "Text",
      "pos": [
        10434,
        10438
      ]
    },
    {
      "content": "Hashed Text",
      "pos": [
        10441,
        10452
      ]
    },
    {
      "content": "This is a good day",
      "pos": [
        10463,
        10481
      ]
    },
    {
      "content": "1 1 2 2 0 2 0 1",
      "pos": [
        10484,
        10499
      ]
    },
    {
      "content": "First, using a browser of your choice, navigate to: <bpt id=\"p1\">[</bpt>https://studio.azureml.net/<ept id=\"p1\">](https://studio.azureml.net/)</ept> and enter your credentials to log in.",
      "pos": [
        10501,
        10649
      ]
    },
    {
      "content": "Next, create a new blank experiment.",
      "pos": [
        10650,
        10686
      ]
    },
    {
      "content": "search-experiment-templates",
      "pos": [
        10690,
        10717
      ]
    },
    {
      "content": "Rename it to <bpt id=\"p1\">**</bpt>SimpleFeatureHashingExperiment<ept id=\"p1\">**</ept>.",
      "pos": [
        10828,
        10876
      ]
    },
    {
      "content": "Expand <bpt id=\"p1\">**</bpt>Saved Datasets<ept id=\"p1\">**</ept> and drag <bpt id=\"p2\">**</bpt>Book Reviews from Amazon<ept id=\"p2\">**</ept> onto your experiment.",
      "pos": [
        10877,
        10962
      ]
    },
    {
      "content": "simple-feature-hashing-experiment",
      "pos": [
        10966,
        10999
      ]
    },
    {
      "content": "Expand <bpt id=\"p1\">**</bpt>Data Transformation<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Manipulation<ept id=\"p2\">**</ept> and drag <bpt id=\"p3\">**</bpt>Project Columns<ept id=\"p3\">**</ept> onto your experiment.",
      "pos": [
        11116,
        11218
      ]
    },
    {
      "content": "Connect <bpt id=\"p1\">**</bpt>Book Reviews from Amazon<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>Project Columns<ept id=\"p2\">**</ept>.",
      "pos": [
        11219,
        11279
      ]
    },
    {
      "content": "project-columns",
      "pos": [
        11283,
        11298
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Project Columns<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>Launch column selector<ept id=\"p2\">**</ept> and select <bpt id=\"p3\">**</bpt>Col2<ept id=\"p3\">**</ept>.",
      "pos": [
        11397,
        11485
      ]
    },
    {
      "content": "Click the checkmark to apply these changes.",
      "pos": [
        11486,
        11529
      ]
    },
    {
      "content": "select-columns",
      "pos": [
        11533,
        11547
      ]
    },
    {
      "content": "Expand <bpt id=\"p1\">**</bpt>Text Analytics<ept id=\"p1\">**</ept> and drag <bpt id=\"p2\">**</bpt>Feature Hashing<ept id=\"p2\">**</ept> onto the experiment.",
      "pos": [
        11645,
        11720
      ]
    },
    {
      "content": "Connect <bpt id=\"p1\">**</bpt>Project Columns<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>Feature Hashing<ept id=\"p2\">**</ept>.",
      "pos": [
        11721,
        11772
      ]
    },
    {
      "content": "connect-project-columns",
      "pos": [
        11776,
        11799
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>3<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>Hashing bitsize<ept id=\"p2\">**</ept>.",
      "pos": [
        11906,
        11945
      ]
    },
    {
      "content": "This will create 8 (23) columns.",
      "pos": [
        11946,
        11978
      ]
    },
    {
      "content": "hashing-bitsize",
      "pos": [
        11982,
        11997
      ]
    },
    {
      "pos": [
        12096,
        12164
      ],
      "content": "At this point, you may want to click <bpt id=\"p1\">**</bpt>Run<ept id=\"p1\">**</ept> to test the experiment."
    },
    {
      "content": "run",
      "pos": [
        12168,
        12171
      ]
    },
    {
      "content": "Create a web service",
      "pos": [
        12261,
        12281
      ]
    },
    {
      "content": "Now create a web service.",
      "pos": [
        12283,
        12308
      ]
    },
    {
      "content": "Expand <bpt id=\"p1\">**</bpt>Web Service<ept id=\"p1\">**</ept> and drag <bpt id=\"p2\">**</bpt>Input<ept id=\"p2\">**</ept> onto your experiment.",
      "pos": [
        12309,
        12372
      ]
    },
    {
      "content": "Connect <bpt id=\"p1\">**</bpt>Input<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>Feature Hashing<ept id=\"p2\">**</ept>.",
      "pos": [
        12373,
        12414
      ]
    },
    {
      "content": "Also drag <bpt id=\"p1\">**</bpt>output<ept id=\"p1\">**</ept> onto your experiment.",
      "pos": [
        12415,
        12457
      ]
    },
    {
      "content": "Connect <bpt id=\"p1\">**</bpt>Output<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>Feature Hashing<ept id=\"p2\">**</ept>.",
      "pos": [
        12458,
        12500
      ]
    },
    {
      "content": "output-to-feature-hashing",
      "pos": [
        12504,
        12529
      ]
    },
    {
      "pos": [
        12638,
        12668
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Publish web service<ept id=\"p1\">**</ept>."
    },
    {
      "content": "publish-web-service",
      "pos": [
        12672,
        12691
      ]
    },
    {
      "pos": [
        12794,
        12834
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept> to publish the experiment."
    },
    {
      "content": "yes-to-publish",
      "pos": [
        12838,
        12852
      ]
    },
    {
      "content": "Test the web service",
      "pos": [
        12953,
        12973
      ]
    },
    {
      "content": "An AzureML web service consists of RSS (request/response service) and BES (batch execution service) endpoints.",
      "pos": [
        12975,
        13085
      ]
    },
    {
      "content": "RSS is for synchronous execution.",
      "pos": [
        13086,
        13119
      ]
    },
    {
      "content": "BES is for asynchronous job execution.",
      "pos": [
        13120,
        13158
      ]
    },
    {
      "content": "To test your web service with the sample Python source below, you may need to download and install the Azure SDK for Python (see: <bpt id=\"p1\">[</bpt>How to install Python<ept id=\"p1\">](python-how-to-install.md)</ept>).",
      "pos": [
        13159,
        13340
      ]
    },
    {
      "content": "You will also need the <bpt id=\"p1\">**</bpt>workspace<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>service<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>api_key<ept id=\"p3\">**</ept> of your experiment for the sample source below.",
      "pos": [
        13342,
        13456
      ]
    },
    {
      "content": "You can find the workspace and service by clicking either <bpt id=\"p1\">**</bpt>Request/Response<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Batch Execution<ept id=\"p2\">**</ept> for your experiment in the web service dashboard.",
      "pos": [
        13457,
        13608
      ]
    },
    {
      "content": "find-workspace-and-service",
      "pos": [
        13612,
        13638
      ]
    },
    {
      "pos": [
        13748,
        13834
      ],
      "content": "You can find the <bpt id=\"p1\">**</bpt>api_key<ept id=\"p1\">**</ept> by clicking your experiment in the web service dashboard."
    },
    {
      "content": "find-api-key",
      "pos": [
        13838,
        13850
      ]
    },
    {
      "content": "Test RRS endpoint",
      "pos": [
        13950,
        13967
      ]
    },
    {
      "content": "Test button",
      "pos": [
        13974,
        13985
      ]
    },
    {
      "pos": [
        13987,
        14074
      ],
      "content": "An easy way to test the RRS endpoint is to click <bpt id=\"p1\">**</bpt>Test<ept id=\"p1\">**</ept> on the web service dashboard."
    },
    {
      "content": "test",
      "pos": [
        14078,
        14082
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>This is a good day<ept id=\"p1\">**</ept> for <bpt id=\"p2\">**</bpt>col2<ept id=\"p2\">**</ept>.",
      "pos": [
        14170,
        14211
      ]
    },
    {
      "content": "Click the checkmark.",
      "pos": [
        14212,
        14232
      ]
    },
    {
      "content": "enter-data",
      "pos": [
        14236,
        14246
      ]
    },
    {
      "content": "You will see something like",
      "pos": [
        14340,
        14367
      ]
    },
    {
      "content": "sample-output",
      "pos": [
        14371,
        14384
      ]
    },
    {
      "content": "Sample Code",
      "pos": [
        14486,
        14497
      ]
    },
    {
      "content": "Another way to test your RRS is from your client code.",
      "pos": [
        14499,
        14553
      ]
    },
    {
      "content": "If you click <bpt id=\"p1\">**</bpt>Request/response<ept id=\"p1\">**</ept> on the dashboard and scroll to the bottom, you will see sample code for C#, Python, and R. You will also see the syntax of the RRS request, including the request URI, headers, and body.",
      "pos": [
        14554,
        14773
      ]
    },
    {
      "content": "This guide shows a working Python example.",
      "pos": [
        14775,
        14817
      ]
    },
    {
      "content": "You will need to modify it with the <bpt id=\"p1\">**</bpt>workspace<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>service<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>api_key<ept id=\"p3\">**</ept> of your experiment.",
      "pos": [
        14818,
        14917
      ]
    },
    {
      "content": "Test BES endpoint",
      "pos": [
        15991,
        16008
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Batch execution<ept id=\"p1\">**</ept> on the dashboard and scroll to the bottom.",
      "pos": [
        16009,
        16077
      ]
    },
    {
      "content": "You will see sample code for C#, Python, and R. You will also see the syntax of the BES requests to submit a job, start a job, get the status or results of a job, and delete a job.",
      "pos": [
        16078,
        16258
      ]
    },
    {
      "content": "This guide shows a working Python example.",
      "pos": [
        16260,
        16302
      ]
    },
    {
      "content": "You need to modify it with the <bpt id=\"p1\">**</bpt>workspace<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>service<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>api_key<ept id=\"p3\">**</ept> of your experiment.",
      "pos": [
        16303,
        16397
      ]
    },
    {
      "content": "Additionally, you need to modify the <bpt id=\"p1\">**</bpt>storage account name<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>storage account key<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>storage container name<ept id=\"p3\">**</ept>.",
      "pos": [
        16398,
        16517
      ]
    },
    {
      "content": "Lastly, you will need to modify the location of the <bpt id=\"p1\">**</bpt>input file<ept id=\"p1\">**</ept> and the location of the <bpt id=\"p2\">**</bpt>output file<ept id=\"p2\">**</ept>.",
      "pos": [
        16518,
        16625
      ]
    },
    {
      "content": "test",
      "pos": [
        21882,
        21886
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Learn how to manage AzureML web services using API Management | Microsoft Azure\"\n    description=\"A guide showing how to manage AzureML web services using API Management.\"\n    keywords=\"machine learning,api management\"\n    services=\"machine-learning\"\n    documentationCenter=\"\"\n    authors=\"roalexan\"\n    manager=\"paulettm\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"machine-learning\"\n    ms.workload=\"data-services\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"na\"\n    ms.topic=\"article\"\n    ms.date=\"06/16/2015\"\n    ms.author=\"roalexan\" />\n\n\n# Learn how to manage AzureML web services using API Management\n\n##Overview\n\nThis guide shows you how to quickly get started using API Management to manage your AzureML web services.\n\n##What is Azure API Management?\n\nAzure API Management is an Azure service that lets you manage your REST API endpoints by defining user access, usage throttling, and dashboard monitoring. Click [here](http://azure.microsoft.com/services/api-management/) for details on Azure API Management. Click [here](api-management/api-management-get-started.md) for a guide on how to get started with Azure API Management. This other guide, which this guide is based on, covers more topics, including notification configurations, tier pricing, response handling, user authentication, creating products, developer subscriptions, and usage dashboarding.\n\n##What is AzureML?\n\nAzureML is an Azure service for machine learning that enables you to easily build, deploy, and share advanced analytics solutions. Click [here](http://azure.microsoft.com/services/machine-learning/) for details on AzureML.\n\n##Prerequisites\n\nTo complete this guide, you need:\n\n* An Azure account. If you don’t have an Azure account, click [here](http://azure.microsoft.com/pricing/free-trial/) for details on how to create a free trial account.\n* An AzureML account. If you don’t have an AzureML account, click [here](https://studio.azureml.net/) for details on how to create a free trial account.\n* The workspace, service, and api_key for an AzureML experiment published as a web service. Click [here](machine-learning/machine-learning-create-experiment.md) for details on how to create an AzureML experiment. Click [here](machine-learning/machine-learning-publish-a-machine-learning-web-service.md) for details on how to publish an AzureML experiment as a web service. Alternately, Appendix A has instructions for how to create and test a simple AzureML experiment and publish it as a web service.\n\n##Create an API Management instance\n\nBelow are the steps for using API Management to manage your AzureML web service. First create a service instance. Log in to the [Management Portal](https://manage.windowsazure.com/) and click **New** > **App Services** > **API Management** > **Create**.\n\n![create-instance](./media/machine-learning-manage-web-service-endpoints-using-api-management/create-instance.png)\n\nSpecify a unique **URL**. This guide uses **demoazureml** – you will need to choose something different. Choose the desired **Subscription** and **Region** for your service instance. After making your selections, click the next button.\n\n![create-service-1](./media/machine-learning-manage-web-service-endpoints-using-api-management/create-service-1.png)\n\nSpecify a value for the **Organization Name**. This guide uses **demoazureml** – you will need to choose something different. Enter your email address in the **administrator e-mail** field. This email address is used for notifications from the API Management system.\n\n![create-service-2](./media/machine-learning-manage-web-service-endpoints-using-api-management/create-service-2.png)\n\nClick the check box to create your service instance. *It takes up to thirty minutes for a new service to be created*.\n\n##Create the API\n\nOnce the service instance is created, the next step is to create the API. An API consists of a set of operations that can be invoked from a client application. API operations are proxied to existing web services. This guide creates APIs that proxy to the existing AzureML RRS and BES web services.\n\nAPIs are created and configured from the API publisher portal, which is accessed through the Azure management portal. To reach the publisher portal, select your service instance.\n\n![select-service-instance](./media/machine-learning-manage-web-service-endpoints-using-api-management/select-service-instance.png)\n\nClick **Manage** in the Azure Portal for your API Management service.\n\n![manage-service](./media/machine-learning-manage-web-service-endpoints-using-api-management/manage-service.png)\n\nClick **APIs** from the **API Management** menu on the left, and then click **Add API**.\n\n![api-management-menu](./media/machine-learning-manage-web-service-endpoints-using-api-management/api-management-menu.png)\n\nType **AzureML Demo API** as the **Web API name**. Type **https://ussouthcentral.services.azureml.net** as the **Web service URL**. Type **azureml-demo** as the **Web API URL suffix**. Check **HTTPS** as the **Web API URL** scheme. Select **Starter** as **Products**. When finished, click **Save** to create the API.\n\n![add-new-api](./media/machine-learning-manage-web-service-endpoints-using-api-management/add-new-api.png)\n\n##Add the operations\n\nClick **Add operation** to add operations to this API.\n\n![add-operation](./media/machine-learning-manage-web-service-endpoints-using-api-management/add-operation.png)\n\nThe **New operation** window will be displayed and the **Signature** tab will be selected by default.\n\n##Add RRS Operation\n\nFirst create an operation for the AzureML RRS service. Select **POST** as the **HTTP verb**. Type **/workspaces/{workspace}/services/{service}/execute?api-version={apiversion}&details={details}** as the **URL template**. Type **RRS Execute** as the **Display name**.\n\n![add-rrs-operation-signature](./media/machine-learning-manage-web-service-endpoints-using-api-management/add-rrs-operation-signature.png)\n\nClick **Responses** > **ADD** on the left and select **200 OK**. Click **Save** to save this operation.\n\n![add-rrs-operation-response](./media/machine-learning-manage-web-service-endpoints-using-api-management/add-rrs-operation-response.png)\n\n##Add BES Operations\n\nScreenshots are not included for the BES operations as they are very similar to those for adding the RRS operation.\n\n###Submit (but not start) a Batch Execution job\n\nClick **add operation** to add the AzureML BES operation to the API. Select **POST** for the **HTTP verb**. Type **/workspaces/{workspace}/services/{service}/jobs?api-version={apiversion}** for the **URL template**. Type **BES Submit** for the **Display name**. Click **Responses** > **ADD** on the left and select **200 OK**. Click **Save** to save this operation.\n\n###Start a Batch Execution job\n\nClick **add operation** to add the AzureML BES operation to the API. Select **POST** for the **HTTP verb**. Type **/workspaces/{workspace}/services/{service}/jobs/{jobid}/start?api-version={apiversion}** for the **URL template**. Type **BES Start** for the **Display name**. Click **Responses** > **ADD** on the left and select **200 OK**. Click **Save** to save this operation.\n\n###Get the status or result of a Batch Execution job\n\nClick **add operation** to add the AzureML BES operation to the API. Select **GET** for the **HTTP verb**. Type **/workspaces/{workspace}/services/{service}/jobs/{jobid}?api-version={apiversion}** for the **URL template**. Type **BES Status** for the **Display name**. Click **Responses** > **ADD** on the left and select **200 OK**. Click **Save** to save this operation.\n\n###Delete a Batch Execution job\n\nClick **add operation** to add the AzureML BES operation to the API. Select **DELETE** for the **HTTP verb**. Type **/workspaces/{workspace}/services/{service}/jobs/{jobid}?api-version={apiversion}** for the **URL template**. Type **BES Delete** for the **Display name**. Click **Responses** > **ADD** on the left and select **200 OK**. Click **Save** to save this operation.\n\n##Call an operation from the Developer Portal\n\nOperations can be called directly from the Developer portal, which provides a convenient way to view and test the operations of an API. In this guide step you will call the **RRS Execute** method that was added to the **AzureML Demo API**. Click **Developer portal** from the menu at the top right of the Management portal.\n\n![developer-portal](./media/machine-learning-manage-web-service-endpoints-using-api-management/developer-portal.png)\n\nClick **APIs** from the top menu, and then click **AzureML Demo API** to see the operations available.\n\n![demoazureml-api](./media/machine-learning-manage-web-service-endpoints-using-api-management/demoazureml-api.png)\n\nSelect **RRS Execute** for the operation. Click **Try It**.\n\n![try-it](./media/machine-learning-manage-web-service-endpoints-using-api-management/try-it.png)\n\nFor Request parameters, type your **workspace**,  **service**, **2.0** for the **apiversion**, and  **true** for the **details**. You can find your **workspace** and **service** in the AzureML web service dashboard (see **Test the web service** in Appendix A).\n\nFor Request headers, click **Add header** and type **Content-Type** and **application/json**, then click **Add header** and type **Authorization** and **Bearer <YOUR AZUREML SERVICE API-KEY>**. You can find your **api key** in the AzureML web service dashboard (see **Test the web service** in Appendix A).\n\nType **{\"Inputs\": {\"input1\": {\"ColumnNames\": [\"Col2\"], \"Values\": [[\"This is a good day\"]]}}, \"GlobalParameters\": {}}** for the request body.\n\n![azureml-demo-api](./media/machine-learning-manage-web-service-endpoints-using-api-management/azureml-demo-api.png)\n\nClick **Send**.\n\n![send](./media/machine-learning-manage-web-service-endpoints-using-api-management/send.png)\n\nAfter an operation is invoked, the developer portal displays the **Requested URL** from the back-end service, the **Response status**, the **Response headers**, and any **Response content**.\n\n![response-status](./media/machine-learning-manage-web-service-endpoints-using-api-management/response-status.png)\n\n##Appendix A - Creating and testing a simple AzureML web service\n\n###Creating the experiment\n\nBelow are the steps for creating a simple AzureML experiment and publishing it as a web service. The web service takes as input a column of arbitrary text and returns a set of features represented as integers. For example:\n\nText | Hashed Text\n--- | ---\nThis is a good day | 1 1 2 2 0 2 0 1\n\nFirst, using a browser of your choice, navigate to: [https://studio.azureml.net/](https://studio.azureml.net/) and enter your credentials to log in. Next, create a new blank experiment.\n\n![search-experiment-templates](./media/machine-learning-manage-web-service-endpoints-using-api-management/search-experiment-templates.png)\n\nRename it to **SimpleFeatureHashingExperiment**. Expand **Saved Datasets** and drag **Book Reviews from Amazon** onto your experiment.\n\n![simple-feature-hashing-experiment](./media/machine-learning-manage-web-service-endpoints-using-api-management/simple-feature-hashing-experiment.png)\n\nExpand **Data Transformation** and **Manipulation** and drag **Project Columns** onto your experiment. Connect **Book Reviews from Amazon** to **Project Columns**.\n\n![project-columns](./media/machine-learning-manage-web-service-endpoints-using-api-management/project-columns.png)\n\nClick **Project Columns** and then click **Launch column selector** and select **Col2**. Click the checkmark to apply these changes.\n\n![select-columns](./media/machine-learning-manage-web-service-endpoints-using-api-management/select-columns.png)\n\nExpand **Text Analytics** and drag **Feature Hashing** onto the experiment. Connect **Project Columns** to **Feature Hashing**.\n\n![connect-project-columns](./media/machine-learning-manage-web-service-endpoints-using-api-management/connect-project-columns.png)\n\nType **3** for the **Hashing bitsize**. This will create 8 (23) columns.\n\n![hashing-bitsize](./media/machine-learning-manage-web-service-endpoints-using-api-management/hashing-bitsize.png)\n\nAt this point, you may want to click **Run** to test the experiment.\n\n![run](./media/machine-learning-manage-web-service-endpoints-using-api-management/run.png)\n\n###Create a web service\n\nNow create a web service. Expand **Web Service** and drag **Input** onto your experiment. Connect **Input** to **Feature Hashing**. Also drag **output** onto your experiment. Connect **Output** to **Feature Hashing**.\n\n![output-to-feature-hashing](./media/machine-learning-manage-web-service-endpoints-using-api-management/output-to-feature-hashing.png)\n\nClick **Publish web service**.\n\n![publish-web-service](./media/machine-learning-manage-web-service-endpoints-using-api-management/publish-web-service.png)\n\nClick **Yes** to publish the experiment.\n\n![yes-to-publish](./media/machine-learning-manage-web-service-endpoints-using-api-management/yes-to-publish.png)\n\n###Test the web service\n\nAn AzureML web service consists of RSS (request/response service) and BES (batch execution service) endpoints. RSS is for synchronous execution. BES is for asynchronous job execution. To test your web service with the sample Python source below, you may need to download and install the Azure SDK for Python (see: [How to install Python](python-how-to-install.md)).\n\nYou will also need the **workspace**, **service**, and **api_key** of your experiment for the sample source below. You can find the workspace and service by clicking either **Request/Response** or **Batch Execution** for your experiment in the web service dashboard.\n\n![find-workspace-and-service](./media/machine-learning-manage-web-service-endpoints-using-api-management/find-workspace-and-service.png)\n\nYou can find the **api_key** by clicking your experiment in the web service dashboard.\n\n![find-api-key](./media/machine-learning-manage-web-service-endpoints-using-api-management/find-api-key.png)\n\n####Test RRS endpoint\n\n#####Test button\n\nAn easy way to test the RRS endpoint is to click **Test** on the web service dashboard.\n\n![test](./media/machine-learning-manage-web-service-endpoints-using-api-management/test.png)\n\nType **This is a good day** for **col2**. Click the checkmark.\n\n![enter-data](./media/machine-learning-manage-web-service-endpoints-using-api-management/enter-data.png)\n\nYou will see something like\n\n![sample-output](./media/machine-learning-manage-web-service-endpoints-using-api-management/sample-output.png)\n\n#####Sample Code\n\nAnother way to test your RRS is from your client code. If you click **Request/response** on the dashboard and scroll to the bottom, you will see sample code for C#, Python, and R. You will also see the syntax of the RRS request, including the request URI, headers, and body.\n\nThis guide shows a working Python example. You will need to modify it with the **workspace**, **service**, and **api_key** of your experiment.\n\n    import urllib2\n    import json\n    workspace = \"<REPLACE WITH YOUR EXPERIMENT’S WEB SERVICE WORKSPACE ID>\"\n    service = \"<REPLACE WITH YOUR EXPERIMENT’S WEB SERVICE SERVICE ID>\"\n    api_key = \"<REPLACE WITH YOUR EXPERIMENT’S WEB SERVICE API KEY>\"\n    data = {\n    \"Inputs\": {\n        \"input1\": {\n            \"ColumnNames\": [\"Col2\"],\n            \"Values\": [ [ \"This is a good day\" ] ]\n        },\n    },\n    \"GlobalParameters\": { }\n    }\n    url = \"https://ussouthcentral.services.azureml.net/workspaces/\" + workspace + \"/services/\" + service + \"/execute?api-version=2.0&details=true\"\n    headers = {'Content-Type':'application/json', 'Authorization':('Bearer '+ api_key)}\n    body = str.encode(json.dumps(data))\n    try:\n        req = urllib2.Request(url, body, headers)\n        response = urllib2.urlopen(req)\n        result = response.read()\n        print \"result:\" + result\n            except urllib2.HTTPError, error:\n        print(\"The request failed with status code: \" + str(error.code))\n        print(error.info())\n        print(json.loads(error.read()))\n\n####Test BES endpoint\nClick **Batch execution** on the dashboard and scroll to the bottom. You will see sample code for C#, Python, and R. You will also see the syntax of the BES requests to submit a job, start a job, get the status or results of a job, and delete a job.\n\nThis guide shows a working Python example. You need to modify it with the **workspace**, **service**, and **api_key** of your experiment. Additionally, you need to modify the **storage account name**, **storage account key**, and **storage container name**. Lastly, you will need to modify the location of the **input file** and the location of the **output file**.\n\n    import urllib2\n    import json\n    import time\n    from azure.storage import *\n    workspace = \"<REPLACE WITH YOUR WORKSPACE ID>\"\n    service = \"<REPLACE WITH YOUR SERVICE ID>\"\n    api_key = \"<REPLACE WITH THE API KEY FOR YOUR WEB SERVICE>\"\n    storage_account_name = \"<REPLACE WITH YOUR AZURE STORAGE ACCOUNT NAME>\"\n    storage_account_key = \"<REPLACE WITH YOUR AZURE STORAGE KEY>\"\n    storage_container_name = \"<REPLACE WITH YOUR AZURE STORAGE CONTAINER NAME>\"\n    input_file = \"<REPLACE WITH THE LOCATION OF YOUR INPUT FILE>\" # Example: C:\\\\mydata.csv\n    output_file = \"<REPLACE WITH THE LOCATION OF YOUR OUTPUT FILE>\" # Example: C:\\\\myresults.csv\n    input_blob_name = \"mydatablob.csv\"\n    output_blob_name = \"myresultsblob.csv\"\n    def printHttpError(httpError):\n    print(\"The request failed with status code: \" + str(httpError.code))\n    print(httpError.info())\n    print(json.loads(httpError.read()))\n    return\n    def saveBlobToFile(blobUrl, resultsLabel):\n    print(\"Reading the result from \" + blobUrl)\n    try:\n        response = urllib2.urlopen(blobUrl)\n    except urllib2.HTTPError, error:\n        printHttpError(error)\n        return\n    with open(output_file, \"w+\") as f:\n        f.write(response.read())\n    print(resultsLabel + \" have been written to the file \" + output_file)\n    return\n    def processResults(result):\n    first = True\n    results = result[\"Results\"]\n    for outputName in results:\n        result_blob_location = results[outputName]\n        sas_token = result_blob_location[\"SasBlobToken\"]\n        base_url = result_blob_location[\"BaseLocation\"]\n        relative_url = result_blob_location[\"RelativeLocation\"]\n        print(\"The results for \" + outputName + \" are available at the following Azure Storage location:\")\n        print(\"BaseLocation: \" + base_url)\n        print(\"RelativeLocation: \" + relative_url)\n        print(\"SasBlobToken: \" + sas_token)\n        if (first):\n            first = False\n            url3 = base_url + relative_url + sas_token\n            saveBlobToFile(url3, \"The results for \" + outputName)\n    return\n\n    def invokeBatchExecutionService():\n    url = \"https://ussouthcentral.services.azureml.net/workspaces/\" + workspace +\"/services/\" + service +\"/jobs\"\n    blob_service = BlobService(account_name=storage_account_name, account_key=storage_account_key)\n    print(\"Uploading the input to blob storage...\")\n    data_to_upload = open(input_file, \"r\").read()\n    blob_service.put_blob(storage_container_name, input_blob_name, data_to_upload, x_ms_blob_type=\"BlockBlob\")\n    print \"Uploaded the input to blob storage\"\n    input_blob_path = \"/\" + storage_container_name + \"/\" + input_blob_name\n    connection_string = \"DefaultEndpointsProtocol=https;AccountName=\" + storage_account_name + \";AccountKey=\" + storage_account_key\n    payload =  {\n        \"Input\": {\n            \"ConnectionString\": connection_string,\n            \"RelativeLocation\": input_blob_path\n        },\n        \"Outputs\": {\n            \"output1\": { \"ConnectionString\": connection_string, \"RelativeLocation\": \"/\" + storage_container_name + \"/\" + output_blob_name },\n        },\n        \"GlobalParameters\": {\n        }\n    }\n        body = str.encode(json.dumps(payload))\n    headers = { \"Content-Type\":\"application/json\", \"Authorization\":(\"Bearer \" + api_key)}\n    print(\"Submitting the job...\")\n    # submit the job\n    req = urllib2.Request(url + \"?api-version=2.0\", body, headers)\n    try:\n        response = urllib2.urlopen(req)\n    except urllib2.HTTPError, error:\n        printHttpError(error)\n        return\n    result = response.read()\n    job_id = result[1:-1] # remove the enclosing double-quotes\n    print(\"Job ID: \" + job_id)\n    # start the job\n    print(\"Starting the job...\")\n    req = urllib2.Request(url + \"/\" + job_id + \"/start?api-version=2.0\", \"\", headers)\n    try:\n        response = urllib2.urlopen(req)\n    except urllib2.HTTPError, error:\n        printHttpError(error)\n        return\n    url2 = url + \"/\" + job_id + \"?api-version=2.0\"\n\n    while True:\n        print(\"Checking the job status...\")\n        # If you are using Python 3+, replace urllib2 with urllib.request in the follwing code\n        req = urllib2.Request(url2, headers = { \"Authorization\":(\"Bearer \" + api_key) })\n        try:\n            response = urllib2.urlopen(req)\n        except urllib2.HTTPError, error:\n            printHttpError(error)\n            return\n        result = json.loads(response.read())\n        status = result[\"StatusCode\"]\n        print \"status:\" + status\n        if (status == 0 or status == \"NotStarted\"):\n            print(\"Job \" + job_id + \" not yet started...\")\n        elif (status == 1 or status == \"Running\"):\n            print(\"Job \" + job_id + \" running...\")\n        elif (status == 2 or status == \"Failed\"):\n            print(\"Job \" + job_id + \" failed!\")\n            print(\"Error details: \" + result[\"Details\"])\n            break\n        elif (status == 3 or status == \"Cancelled\"):\n            print(\"Job \" + job_id + \" cancelled!\")\n            break\n        elif (status == 4 or status == \"Finished\"):\n            print(\"Job \" + job_id + \" finished!\")\n            processResults(result)\n            break\n        time.sleep(1) # wait one second\n    return\n    invokeBatchExecutionService()\n\ntest\n"
}