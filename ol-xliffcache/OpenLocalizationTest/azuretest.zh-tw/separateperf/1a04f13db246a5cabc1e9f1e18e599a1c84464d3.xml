{
  "nodes": [
    {
      "content": "Create and load data into Hive tables from Blob storage | Microsoft Azure",
      "pos": [
        28,
        101
      ]
    },
    {
      "content": "Create Hive tables and load data in blob to hive tables",
      "pos": [
        121,
        176
      ]
    },
    {
      "content": "Create and load data into Hive tables from Azure blob storage",
      "pos": [
        559,
        620
      ]
    },
    {
      "content": "Introduction",
      "pos": [
        626,
        638
      ]
    },
    {
      "content": "In this document, generic Hive queries that create Hive tables and load data from Azure blob storage are presented.",
      "pos": [
        639,
        754
      ]
    },
    {
      "content": "Some guidance is also provided on partitioning Hive tables and on using the Optimized Row Columnar (ORC) formatting to improve query performance.",
      "pos": [
        755,
        900
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        905,
        918
      ]
    },
    {
      "content": "This article assumes that you have:",
      "pos": [
        919,
        954
      ]
    },
    {
      "content": "Created an Azure storage account.",
      "pos": [
        959,
        992
      ]
    },
    {
      "content": "If you need instructions, see <bpt id=\"p1\">[</bpt>Create an Azure Storage account<ept id=\"p1\">](../hdinsight-get-started.md#storage)</ept>",
      "pos": [
        993,
        1093
      ]
    },
    {
      "content": "Provisioned a customized Hadoop cluster with the HDInsight service.",
      "pos": [
        1097,
        1164
      ]
    },
    {
      "content": "If you need instructions, see <bpt id=\"p1\">[</bpt>Customize Azure HDInsight Hadoop clusters for advanced analytics<ept id=\"p1\">](machine-learning-data-science-customize-hadoop-cluster.md)</ept>.",
      "pos": [
        1166,
        1322
      ]
    },
    {
      "content": "Enabled remote access to the cluster, logged in, and opened the Hadoop Command Line console.",
      "pos": [
        1325,
        1417
      ]
    },
    {
      "content": "If you need instructions, see <bpt id=\"p1\">[</bpt>Access the Head Node of Hadoop Cluster<ept id=\"p1\">](machine-learning-data-science-customize-hadoop-cluster.md#headnode)</ept>.",
      "pos": [
        1418,
        1557
      ]
    },
    {
      "content": "Upload data to Azure blob storage",
      "pos": [
        1563,
        1596
      ]
    },
    {
      "content": "If you created an Azure virtual machine by following the instructions provided in <bpt id=\"p1\">[</bpt>Set up an Azure virtual machine for advanced analytics<ept id=\"p1\">](machine-learning-data-science-setup-virtual-machine.md)</ept>, this script file should have been downloaded to the <bpt id=\"p2\">*</bpt>C:\\\\Users\\\\\\&lt;user name\\&gt;\\\\Documents\\\\Data Science Scripts<ept id=\"p2\">*</ept> directory on the virtual machine.",
      "pos": [
        1597,
        1938
      ]
    },
    {
      "content": "These Hive queries only require that you plug in your own data schema and Azure blob storage configuration in the appropriate fields to be ready for submission.",
      "pos": [
        1939,
        2099
      ]
    },
    {
      "pos": [
        2101,
        2316
      ],
      "content": "We assume that the data for Hive tables is in an <bpt id=\"p1\">**</bpt>uncompressed<ept id=\"p1\">**</ept> tabular format, and that the data has been uploaded to the default (or to an additional) container of the storage account used by the Hadoop cluster."
    },
    {
      "content": "If you want to practice on the <bpt id=\"p1\">_</bpt>NYC Taxi Trip Data<ept id=\"p1\">_</ept>, you need to first  download the 24 <ph id=\"ph1\">&lt;a href=\"http://www.andresmh.com/nyctaxitrips/\" target=\"_blank\"&gt;</ph>NYC Taxi Trip Data<ph id=\"ph2\">&lt;/a&gt;</ph> files (12 Trip files, and 12 Fare files), <bpt id=\"p2\">**</bpt>unzip<ept id=\"p2\">**</ept> all files into .csv files, and then upload them to the default (or appropriate container) of the Azure storage account that was created by the procedure outlined in the <bpt id=\"p3\">[</bpt>Customize Azure HDInsight Hadoop clusters for Advanced Analytics Process and Technology<ept id=\"p3\">](machine-learning-data-science-customize-hadoop-cluster.md)</ept> topic.",
      "pos": [
        2319,
        2870
      ]
    },
    {
      "content": "The process to upload the .csv files to the default container on the storage account can be found on this <bpt id=\"p1\">[</bpt>page<ept id=\"p1\">](machine-learning-data-science-process-hive-walkthrough/#upload)</ept>.",
      "pos": [
        2871,
        3048
      ]
    },
    {
      "content": "How to submit a Hive query",
      "pos": [
        3054,
        3080
      ]
    },
    {
      "content": "Hive queries can be submitted from the Hadoop Command Line console on the head node of the Hadoop cluster.",
      "pos": [
        3081,
        3187
      ]
    },
    {
      "content": "To do this, log into the head node of the Hadoop cluster, open the Hadoop Command Line console, and submit the Hive queries from there.",
      "pos": [
        3188,
        3323
      ]
    },
    {
      "content": "For instructions on how to do this, see <bpt id=\"p1\">[</bpt>Submit Hive Queries to HDInsight Hadoop clusters in the advanced analytics process<ept id=\"p1\">](machine-learning-data-science-process-hive-tables.md)</ept>.",
      "pos": [
        3324,
        3503
      ]
    },
    {
      "content": "Users can also use the Query Console (Hive Editor) by entering the URL",
      "pos": [
        3505,
        3575
      ]
    },
    {
      "content": "https://&amp;#60;Hadoop cluster name&gt;.azurehdinsight.net/Home/HiveEditor",
      "pos": [
        3578,
        3646
      ]
    },
    {
      "content": "into a web browser.",
      "pos": [
        3648,
        3667
      ]
    },
    {
      "content": "Note that you will be prompted to input the Hadoop cluster credentials to log in, so you should have these credentials handy.",
      "pos": [
        3668,
        3793
      ]
    },
    {
      "pos": [
        3796,
        3934
      ],
      "content": "Alternatively, you can <bpt id=\"p1\">[</bpt>Submit Hive jobs using PowerShell<ept id=\"p1\">](../hdinsight/hdinsight-submit-hadoop-jobs-programmatically.md#hive-powershell)</ept>."
    },
    {
      "pos": [
        3941,
        4000
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"create-tables\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Create Hive database and tables"
    },
    {
      "pos": [
        4002,
        4254
      ],
      "content": "The Hive queries are shared in the <bpt id=\"p1\">[</bpt>Github repository<ept id=\"p1\">](https://github.com/Azure/Azure-MachineLearning-DataScience/tree/master/Misc/DataScienceProcess/DataScienceScripts/sample_hive_create_db_tbls_load_data_generic.hql)</ept> and can be downloaded from there."
    },
    {
      "content": "Here is the Hive query that creates a Hive table.",
      "pos": [
        4256,
        4305
      ]
    },
    {
      "content": "Here are the descriptions of the fields that users need to plug in and other configurations:",
      "pos": [
        4772,
        4864
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>&amp;#60;database name&gt;<ept id=\"p1\">**</ept>: the name of the database users want to create.",
      "pos": [
        4868,
        4939
      ]
    },
    {
      "content": "If users just want to use the default database, the query <bpt id=\"p1\">*</bpt>create database...<ept id=\"p1\">*</ept> can be omitted.",
      "pos": [
        4940,
        5034
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>&amp;#60;table name&gt;<ept id=\"p1\">**</ept>: the name of the table users want to create within the specified database.",
      "pos": [
        5038,
        5133
      ]
    },
    {
      "content": "If users want to use the default database, the table can be directly referred by <bpt id=\"p1\">*</bpt>&amp;#60;table name&gt;<ept id=\"p1\">*</ept> without &amp;#60;database name&gt;.",
      "pos": [
        5134,
        5262
      ]
    },
    {
      "pos": [
        5265,
        5377
      ],
      "content": "<bpt id=\"p1\">**</bpt>&amp;#60;field separator&gt;<ept id=\"p1\">**</ept>: the separator that delimits fields in the data file to be uploaded to the Hive table."
    },
    {
      "pos": [
        5381,
        5458
      ],
      "content": "<bpt id=\"p1\">**</bpt>&amp;#60;line separator&gt;<ept id=\"p1\">**</ept>: the separator that delimits lines in the data file."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>&amp;#60;storage location&gt;<ept id=\"p1\">**</ept>: the Azure storage location to save the data of Hive tables.",
      "pos": [
        5462,
        5549
      ]
    },
    {
      "content": "If users do not specify <bpt id=\"p1\">*</bpt>LOCATION &amp;#60;storage location&gt;<ept id=\"p1\">*</ept>, the database and the tables are stored in <bpt id=\"p2\">*</bpt>hive/warehouse/<ept id=\"p2\">*</ept> directory in the default container of the Hive cluster by default.",
      "pos": [
        5550,
        5735
      ]
    },
    {
      "content": "If a user wants to specify the storage location, the storage location has to be within the default container for the database and tables.",
      "pos": [
        5736,
        5873
      ]
    },
    {
      "content": "This location has to be referred as location relative to the default container of the cluster in the format of <bpt id=\"p1\">*</bpt>'wasb:///&amp;#60;directory 1&gt;/'<ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt>'wasb:///&amp;#60;directory 1&gt;/&amp;#60;directory 2&gt;/'<ept id=\"p2\">*</ept>, etc. After the query is executed, the relative directories will be created within the default container.",
      "pos": [
        5874,
        6173
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>TBLPROPERTIES(\"skip.header.line.count\"=\"1\")<ept id=\"p1\">**</ept>: If the data file has a header line, users have to add this property <bpt id=\"p2\">**</bpt>at the end<ept id=\"p2\">**</ept> of the <bpt id=\"p3\">*</bpt>create table<ept id=\"p3\">*</ept> query.",
      "pos": [
        6177,
        6337
      ]
    },
    {
      "content": "Otherwise, the header line will be loaded as a record to the table.",
      "pos": [
        6338,
        6405
      ]
    },
    {
      "content": "If the data file does not have a header line, this configuration can be omitted in the query.",
      "pos": [
        6406,
        6499
      ]
    },
    {
      "pos": [
        6505,
        6553
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"load-data\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Load data to Hive tables"
    },
    {
      "content": "Here is the Hive query that loads data into a Hive table.",
      "pos": [
        6554,
        6611
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>&amp;#60;path to blob data&gt;<ept id=\"p1\">**</ept>: If the blob file to be uploaded to the Hive table is in the default container of the HDInsight Hadoop cluster, the <bpt id=\"p2\">*</bpt>&amp;#60;path to blob data&gt;<ept id=\"p2\">*</ept> should be in the format <bpt id=\"p3\">*</bpt>'wasb:///&amp;#60;directory in this container&gt;/&amp;#60;blob file name&gt;'<ept id=\"p3\">*</ept>.",
      "pos": [
        6700,
        6961
      ]
    },
    {
      "content": "The blob file can also be in an additional container of the HDInsight Hadoop cluster.",
      "pos": [
        6962,
        7047
      ]
    },
    {
      "content": "In this case, <bpt id=\"p1\">*</bpt>&amp;#60;path to blob data&gt;<ept id=\"p1\">*</ept> should be in the format <bpt id=\"p2\">*</bpt>'wasb://&amp;#60;container name&gt;@&amp;#60;storage account name&gt;.blob.core.windows.net/&amp;#60;blob file name&gt;'<ept id=\"p2\">*</ept>.",
      "pos": [
        7048,
        7214
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The blob data to be uploaded to Hive table has to be in the default or additional container of the storage account for the Hadoop cluster.",
      "pos": [
        7221,
        7372
      ]
    },
    {
      "content": "Otherwise, the <bpt id=\"p1\">*</bpt>LOAD DATA<ept id=\"p1\">*</ept> query will fail complaining that it cannot access the data.",
      "pos": [
        7373,
        7459
      ]
    },
    {
      "pos": [
        7466,
        7562
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"partition-orc\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Advanced topics: partitioned table and store Hive data in ORC format"
    },
    {
      "content": "If the data is large, partitioning the table is beneficial for queries that only need to scan a few partitions of the table.",
      "pos": [
        7564,
        7688
      ]
    },
    {
      "content": "For instance, it is reasonable to partition the log data of a web site by dates.",
      "pos": [
        7689,
        7769
      ]
    },
    {
      "content": "In addition to partitioning Hive tables, it is also beneficial to store the Hive data in the Optimized Row Columnar (ORC) format.",
      "pos": [
        7772,
        7901
      ]
    },
    {
      "content": "For more information on ORC formatting, see <ph id=\"ph1\">&lt;a href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+ORC#LanguageManualORC-ORCFiles\" target=\"_blank\"&gt;</ph>Using ORC files improves performance when Hive is reading, writing, and processing data<ph id=\"ph2\">&lt;/a&gt;</ph>.",
      "pos": [
        7902,
        8159
      ]
    },
    {
      "content": "Partitioned table",
      "pos": [
        8165,
        8182
      ]
    },
    {
      "content": "Here is the Hive query that creates a partitioned table and loads data into it.",
      "pos": [
        8183,
        8262
      ]
    },
    {
      "pos": [
        8757,
        8940
      ],
      "content": "When querying partitioned tables, it is recommended to add the partition condition in the <bpt id=\"p1\">**</bpt>beginning<ept id=\"p1\">**</ept> of the <ph id=\"ph1\">`where`</ph> clause as this improves the efficacy of searching significantly."
    },
    {
      "pos": [
        9109,
        9156
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"orc\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Store Hive data in ORC format"
    },
    {
      "content": "Users cannot directly load data from blob storage into Hive tables that is stored in the ORC format.",
      "pos": [
        9158,
        9258
      ]
    },
    {
      "content": "Here are the steps that the users need to take in order to load data from Azure blobs to Hive tables stored in ORC format.",
      "pos": [
        9259,
        9381
      ]
    },
    {
      "pos": [
        9387,
        9480
      ],
      "content": "Create an external table <bpt id=\"p1\">**</bpt>STORED AS TEXTFILE<ept id=\"p1\">**</ept> and load data from blob storage to the table."
    },
    {
      "content": "Create an internal table with the same schema as the external table in step 1, with the same field delimiter, and store the Hive data in the ORC format.",
      "pos": [
        10027,
        10179
      ]
    },
    {
      "content": "Select data from the external table in step 1 and insert into the ORC table",
      "pos": [
        10451,
        10526
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If the TEXTFILE table <bpt id=\"p1\">*</bpt>&amp;#60;database name&gt;.&amp;#60;external textfile table name&gt;<ept id=\"p1\">*</ept> has partitions, in STEP 3, the <ph id=\"ph2\">`SELECT * FROM &lt;database name&gt;.&lt;external textfile table name&gt;`</ph> command will select the partition variable as a field in the returned data set.",
      "pos": [
        10672,
        10937
      ]
    },
    {
      "content": "Inserting it into the <bpt id=\"p1\">*</bpt>&amp;#60;database name&gt;.&amp;#60;ORC table name&gt;<ept id=\"p1\">*</ept> will fail since <bpt id=\"p2\">*</bpt>&amp;#60;database name&gt;.&amp;#60;ORC table name&gt;<ept id=\"p2\">*</ept> does not have the partition variable as a field in the table schema.",
      "pos": [
        10938,
        11130
      ]
    },
    {
      "content": "In this case, users need to specifically select the fields to be inserted to <bpt id=\"p1\">*</bpt>&amp;#60;database name&gt;.&amp;#60;ORC table name&gt;<ept id=\"p1\">*</ept> as follows:",
      "pos": [
        11131,
        11262
      ]
    },
    {
      "pos": [
        11550,
        11722
      ],
      "content": "It is safe to drop the <bpt id=\"p1\">*</bpt>&amp;#60;external textfile table name&gt;<ept id=\"p1\">*</ept> when using the following query after all data has been inserted into <bpt id=\"p2\">*</bpt>&amp;#60;database name&gt;.&amp;#60;ORC table name&gt;<ept id=\"p2\">*</ept>:"
    },
    {
      "content": "After following this procedure, you should have a table with data in the ORC format ready to use.",
      "pos": [
        11802,
        11899
      ]
    },
    {
      "content": "test",
      "pos": [
        11903,
        11907
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Create and load data into Hive tables from Blob storage | Microsoft Azure\" \n    description=\"Create Hive tables and load data in blob to hive tables\" \n    services=\"machine-learning,storage\" \n    solutions=\"\" \n    documentationCenter=\"\" \n    authors=\"hangzh-msft\" \n    manager=\"jacob.spoelstra\" \n    editor=\"cgronlun\"  />\n\n<tags \n    ms.service=\"machine-learning\" \n    ms.workload=\"data-services\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"08/26/2015\" \n    ms.author=\"hangzh;bradsev\" />\n\n \n#Create and load data into Hive tables from Azure blob storage\n \n## Introduction\nIn this document, generic Hive queries that create Hive tables and load data from Azure blob storage are presented. Some guidance is also provided on partitioning Hive tables and on using the Optimized Row Columnar (ORC) formatting to improve query performance.\n\n## Prerequisites\nThis article assumes that you have:\n \n* Created an Azure storage account. If you need instructions, see [Create an Azure Storage account](../hdinsight-get-started.md#storage) \n* Provisioned a customized Hadoop cluster with the HDInsight service.  If you need instructions, see [Customize Azure HDInsight Hadoop clusters for advanced analytics](machine-learning-data-science-customize-hadoop-cluster.md).\n* Enabled remote access to the cluster, logged in, and opened the Hadoop Command Line console. If you need instructions, see [Access the Head Node of Hadoop Cluster](machine-learning-data-science-customize-hadoop-cluster.md#headnode). \n\n## Upload data to Azure blob storage\nIf you created an Azure virtual machine by following the instructions provided in [Set up an Azure virtual machine for advanced analytics](machine-learning-data-science-setup-virtual-machine.md), this script file should have been downloaded to the *C:\\\\Users\\\\\\<user name\\>\\\\Documents\\\\Data Science Scripts* directory on the virtual machine. These Hive queries only require that you plug in your own data schema and Azure blob storage configuration in the appropriate fields to be ready for submission.\n\nWe assume that the data for Hive tables is in an **uncompressed** tabular format, and that the data has been uploaded to the default (or to an additional) container of the storage account used by the Hadoop cluster. \n\nIf you want to practice on the _NYC Taxi Trip Data_, you need to first  download the 24 <a href=\"http://www.andresmh.com/nyctaxitrips/\" target=\"_blank\">NYC Taxi Trip Data</a> files (12 Trip files, and 12 Fare files), **unzip** all files into .csv files, and then upload them to the default (or appropriate container) of the Azure storage account that was created by the procedure outlined in the [Customize Azure HDInsight Hadoop clusters for Advanced Analytics Process and Technology](machine-learning-data-science-customize-hadoop-cluster.md) topic. The process to upload the .csv files to the default container on the storage account can be found on this [page](machine-learning-data-science-process-hive-walkthrough/#upload). \n\n## How to submit a Hive query\nHive queries can be submitted from the Hadoop Command Line console on the head node of the Hadoop cluster. To do this, log into the head node of the Hadoop cluster, open the Hadoop Command Line console, and submit the Hive queries from there. For instructions on how to do this, see [Submit Hive Queries to HDInsight Hadoop clusters in the advanced analytics process](machine-learning-data-science-process-hive-tables.md).\n\nUsers can also use the Query Console (Hive Editor) by entering the URL \n\nhttps://&#60;Hadoop cluster name>.azurehdinsight.net/Home/HiveEditor\n\ninto a web browser. Note that you will be prompted to input the Hadoop cluster credentials to log in, so you should have these credentials handy. \n\nAlternatively, you can [Submit Hive jobs using PowerShell](../hdinsight/hdinsight-submit-hadoop-jobs-programmatically.md#hive-powershell). \n\n\n## <a name=\"create-tables\"></a>Create Hive database and tables\n\nThe Hive queries are shared in the [Github repository](https://github.com/Azure/Azure-MachineLearning-DataScience/tree/master/Misc/DataScienceProcess/DataScienceScripts/sample_hive_create_db_tbls_load_data_generic.hql) and can be downloaded from there.\n\nHere is the Hive query that creates a Hive table.\n\n    create database if not exists <database name>;\n    CREATE EXTERNAL TABLE if not exists <database name>.<table name>\n    (\n        field1 string, \n        field2 int, \n        field3 float, \n        field4 double, \n        ...,\n        fieldN string\n    ) \n    ROW FORMAT DELIMITED FIELDS TERMINATED BY '<field separator>' lines terminated by '<line separator>' \n    STORED AS TEXTFILE LOCATION '<storage location>' TBLPROPERTIES(\"skip.header.line.count\"=\"1\");\n\nHere are the descriptions of the fields that users need to plug in and other configurations:\n\n- **&#60;database name>**: the name of the database users want to create. If users just want to use the default database, the query *create database...* can be omitted. \n- **&#60;table name>**: the name of the table users want to create within the specified database. If users want to use the default database, the table can be directly referred by *&#60;table name>* without &#60;database name>.\n- **&#60;field separator>**: the separator that delimits fields in the data file to be uploaded to the Hive table. \n- **&#60;line separator>**: the separator that delimits lines in the data file. \n- **&#60;storage location>**: the Azure storage location to save the data of Hive tables. If users do not specify *LOCATION &#60;storage location>*, the database and the tables are stored in *hive/warehouse/* directory in the default container of the Hive cluster by default. If a user wants to specify the storage location, the storage location has to be within the default container for the database and tables. This location has to be referred as location relative to the default container of the cluster in the format of *'wasb:///&#60;directory 1>/'* or *'wasb:///&#60;directory 1>/&#60;directory 2>/'*, etc. After the query is executed, the relative directories will be created within the default container. \n- **TBLPROPERTIES(\"skip.header.line.count\"=\"1\")**: If the data file has a header line, users have to add this property **at the end** of the *create table* query. Otherwise, the header line will be loaded as a record to the table. If the data file does not have a header line, this configuration can be omitted in the query. \n\n## <a name=\"load-data\"></a>Load data to Hive tables\nHere is the Hive query that loads data into a Hive table.\n\n    LOAD DATA INPATH '<path to blob data>' INTO TABLE <database name>.<table name>;\n\n- **&#60;path to blob data>**: If the blob file to be uploaded to the Hive table is in the default container of the HDInsight Hadoop cluster, the *&#60;path to blob data>* should be in the format *'wasb:///&#60;directory in this container>/&#60;blob file name>'*. The blob file can also be in an additional container of the HDInsight Hadoop cluster. In this case, *&#60;path to blob data>* should be in the format *'wasb://&#60;container name>@&#60;storage account name>.blob.core.windows.net/&#60;blob file name>'*.\n\n    >[AZURE.NOTE] The blob data to be uploaded to Hive table has to be in the default or additional container of the storage account for the Hadoop cluster. Otherwise, the *LOAD DATA* query will fail complaining that it cannot access the data. \n\n\n## <a name=\"partition-orc\"></a>Advanced topics: partitioned table and store Hive data in ORC format\n\nIf the data is large, partitioning the table is beneficial for queries that only need to scan a few partitions of the table. For instance, it is reasonable to partition the log data of a web site by dates. \n\nIn addition to partitioning Hive tables, it is also beneficial to store the Hive data in the Optimized Row Columnar (ORC) format. For more information on ORC formatting, see <a href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+ORC#LanguageManualORC-ORCFiles\" target=\"_blank\">Using ORC files improves performance when Hive is reading, writing, and processing data</a>.\n\n### Partitioned table\nHere is the Hive query that creates a partitioned table and loads data into it.\n\n    CREATE EXTERNAL TABLE IF NOT EXISTS <database name>.<table name>\n    (field1 string,\n    ...\n    fieldN string\n    )\n    PARTITIONED BY (<partitionfieldname> vartype) ROW FORMAT DELIMITED FIELDS TERMINATED BY '<field separator>'\n         lines terminated by '<line separator>' TBLPROPERTIES(\"skip.header.line.count\"=\"1\");\n    LOAD DATA INPATH '<path to the source file>' INTO TABLE <database name>.<partitioned table name> \n        PARTITION (<partitionfieldname>=<partitionfieldvalue>);\n\nWhen querying partitioned tables, it is recommended to add the partition condition in the **beginning** of the `where` clause as this improves the efficacy of searching significantly. \n\n    select \n        field1, field2, ..., fieldN\n    from <database name>.<partitioned table name> \n    where <partitionfieldname>=<partitionfieldvalue> and ...;\n\n### <a name=\"orc\"></a>Store Hive data in ORC format\n\nUsers cannot directly load data from blob storage into Hive tables that is stored in the ORC format. Here are the steps that the users need to take in order to load data from Azure blobs to Hive tables stored in ORC format. \n\n1. Create an external table **STORED AS TEXTFILE** and load data from blob storage to the table.\n\n        CREATE EXTERNAL TABLE IF NOT EXISTS <database name>.<external textfile table name>\n        (\n            field1 string,\n            field2 int,\n            ...\n            fieldN date\n        )\n        ROW FORMAT DELIMITED FIELDS TERMINATED BY '<field separator>' \n            lines terminated by '<line separator>' STORED AS TEXTFILE \n            LOCATION 'wasb:///<directory in Azure blob>' TBLPROPERTIES(\"skip.header.line.count\"=\"1\");\n\n        LOAD DATA INPATH '<path to the source file>' INTO TABLE <database name>.<table name>;\n\n2. Create an internal table with the same schema as the external table in step 1, with the same field delimiter, and store the Hive data in the ORC format.\n\n        CREATE TABLE IF NOT EXISTS <database name>.<ORC table name> \n        (\n            field1 string,\n            field2 int,\n            ...\n            fieldN date\n        ) \n        ROW FORMAT DELIMITED FIELDS TERMINATED BY '<field separator>' STORED AS ORC;\n\n3. Select data from the external table in step 1 and insert into the ORC table\n\n        INSERT OVERWRITE TABLE <database name>.<ORC table name>\n            SELECT * FROM <database name>.<external textfile table name>;\n\n    >[AZURE.NOTE] If the TEXTFILE table *&#60;database name>.&#60;external textfile table name>* has partitions, in STEP 3, the `SELECT * FROM <database name>.<external textfile table name>` command will select the partition variable as a field in the returned data set. Inserting it into the *&#60;database name>.&#60;ORC table name>* will fail since *&#60;database name>.&#60;ORC table name>* does not have the partition variable as a field in the table schema. In this case, users need to specifically select the fields to be inserted to *&#60;database name>.&#60;ORC table name>* as follows:\n\n        INSERT OVERWRITE TABLE <database name>.<ORC table name> PARTITION (<partition variable>=<partition value>)\n           SELECT field1, field2, ..., fieldN\n           FROM <database name>.<external textfile table name> \n           WHERE <partition variable>=<partition value>;\n\n4. It is safe to drop the *&#60;external textfile table name>* when using the following query after all data has been inserted into *&#60;database name>.&#60;ORC table name>*:\n\n        DROP TABLE IF EXISTS <database name>.<external textfile table name>;\n\nAfter following this procedure, you should have a table with data in the ORC format ready to use.  \n\ntest\n"
}