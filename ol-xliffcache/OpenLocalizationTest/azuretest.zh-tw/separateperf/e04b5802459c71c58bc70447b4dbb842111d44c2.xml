{
  "nodes": [
    {
      "content": "Connect to a SQL Server Virtual Machine on Azure",
      "pos": [
        27,
        75
      ]
    },
    {
      "content": "This topic describes how to connect to SQL Server running on a Virtual Machine in Azure.",
      "pos": [
        93,
        181
      ]
    },
    {
      "content": "The scenarios differ depending on the networking configuration and the location of the client.",
      "pos": [
        182,
        276
      ]
    },
    {
      "content": "Connect to a SQL Server Virtual Machine on Azure",
      "pos": [
        616,
        664
      ]
    },
    {
      "content": "Overview",
      "pos": [
        670,
        678
      ]
    },
    {
      "content": "Configuring connectivity to SQL Server running on an Azure Virtual Machine does not differ dramatically from the steps required for an on-premises SQL Server instance.",
      "pos": [
        680,
        847
      ]
    },
    {
      "content": "You still have to work with configuration steps involving the firewall, authentication, and database logins.",
      "pos": [
        848,
        956
      ]
    },
    {
      "content": "But there are some SQL Server connectivity aspects that are specific to Azure VMs.",
      "pos": [
        958,
        1040
      ]
    },
    {
      "content": "This article covers some <bpt id=\"p1\">[</bpt>general connectivity scenarios<ept id=\"p1\">](#connection-scenarios)</ept> and then provides <bpt id=\"p2\">[</bpt>detailed steps for configuring SQL Server connectivity in an Azure VM<ept id=\"p2\">](#steps-for-configuring-sql-server-connectivity-in-an-azure-vm)</ept>.",
      "pos": [
        1041,
        1275
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> This article focuses on connectivity.",
      "pos": [
        1278,
        1328
      ]
    },
    {
      "content": "For a full walk-through of both provisioning and connectivity, see <bpt id=\"p1\">[</bpt>Provisioning a SQL Server Virtual Machine on Azure<ept id=\"p1\">](virtual-machines-provision-sql-server.md)</ept>.",
      "pos": [
        1329,
        1491
      ]
    },
    {
      "content": "Connection scenarios",
      "pos": [
        1496,
        1516
      ]
    },
    {
      "content": "The way a client connects to SQL Server running on a Virtual Machine differs depending on the location of the client and the machine/networking configuration.",
      "pos": [
        1518,
        1676
      ]
    },
    {
      "content": "These scenarios include:",
      "pos": [
        1677,
        1701
      ]
    },
    {
      "content": "Connect to SQL Server in the same cloud service",
      "pos": [
        1706,
        1753
      ]
    },
    {
      "content": "Connect to SQL Server over the internet",
      "pos": [
        1808,
        1847
      ]
    },
    {
      "content": "Connect to SQL Server in the same virtual network",
      "pos": [
        1894,
        1943
      ]
    },
    {
      "content": "Connect to SQL Server in the same cloud service",
      "pos": [
        2002,
        2049
      ]
    },
    {
      "content": "Multiple virtual machines can be created in the same cloud service.",
      "pos": [
        2051,
        2118
      ]
    },
    {
      "content": "To understand this virtual machines scenario, see <bpt id=\"p1\">[</bpt>How to connect virtual machines with a virtual network or cloud service<ept id=\"p1\">](cloud-services-connect-virtual-machine.md)</ept>.",
      "pos": [
        2119,
        2286
      ]
    },
    {
      "content": "First, follow the <bpt id=\"p1\">[</bpt>steps in this article to configure connectivity<ept id=\"p1\">](#steps-for-configuring-sql-server-connectivity-in-an-azure-vm)</ept>.",
      "pos": [
        2288,
        2419
      ]
    },
    {
      "content": "Note that you do not have to setup a public endpoint if you are going to be connecting between machines in the same cloud service.",
      "pos": [
        2420,
        2550
      ]
    },
    {
      "content": "You can use the VM <bpt id=\"p1\">**</bpt>hostname<ept id=\"p1\">**</ept> in the client connection string.",
      "pos": [
        2553,
        2617
      ]
    },
    {
      "content": "The hostname is the name that you gave your VM during creation.",
      "pos": [
        2618,
        2681
      ]
    },
    {
      "content": "For example, if you SQL VM named <bpt id=\"p1\">**</bpt>mysqlvm<ept id=\"p1\">**</ept> with a cloud service DNS name of <bpt id=\"p2\">**</bpt>mycloudservice.cloudapp.net<ept id=\"p2\">**</ept>, a client VM in the same cloud service could use the following connection string to connect:",
      "pos": [
        2682,
        2884
      ]
    },
    {
      "content": "Connect to SQL Server over the Internet",
      "pos": [
        2984,
        3023
      ]
    },
    {
      "content": "If you want to connect to your SQL Server database engine from the Internet, you must create a virtual machine endpoint for incoming TCP communication.",
      "pos": [
        3025,
        3176
      ]
    },
    {
      "content": "This Azure configuration step, directs incoming TCP port traffic to a TCP port that is accessible to the virtual machine.",
      "pos": [
        3177,
        3298
      ]
    },
    {
      "content": "First, follow the <bpt id=\"p1\">[</bpt>steps in this article to configure connectivity<ept id=\"p1\">](#steps-for-configuring-sql-server-connectivity-in-an-azure-vm)</ept>.",
      "pos": [
        3300,
        3431
      ]
    },
    {
      "content": "Any client with internet access could then connect to the SQL Server instance by specifying the cloud service DNS name (such as <bpt id=\"p1\">**</bpt>mycloudservice.cloudapp.net<ept id=\"p1\">**</ept>) and the VM endpoint (such as <bpt id=\"p2\">**</bpt>57500<ept id=\"p2\">**</ept>).",
      "pos": [
        3432,
        3633
      ]
    },
    {
      "content": "Although this enables connectivity for clients over the internet, this does not imply that anyone can connect to your SQL Server.",
      "pos": [
        3755,
        3884
      ]
    },
    {
      "content": "Outside clients have to the correct username and password.",
      "pos": [
        3885,
        3943
      ]
    },
    {
      "content": "For additional security, don't use the well-known port 1433 for the public virtual machine endpoint.",
      "pos": [
        3944,
        4044
      ]
    },
    {
      "content": "And if possible, consider adding an ACL on your endpoint to restrict traffic only to the clients you permit.",
      "pos": [
        4045,
        4153
      ]
    },
    {
      "content": "For instructions on using ACLs with endpoints, see <bpt id=\"p1\">[</bpt>Manage the ACL on an endpoint<ept id=\"p1\">](virtual-machines-set-up-endpoints.md#manage-the-acl-on-an-endpoint)</ept>.",
      "pos": [
        4154,
        4305
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> It is important to note that when you use this technique to communicate with SQL Server, all data returned is considered outgoing traffic from the datacenter.",
      "pos": [
        4309,
        4480
      ]
    },
    {
      "content": "It is subject to normal <bpt id=\"p1\">[</bpt>pricing on outbound data transfers<ept id=\"p1\">](http://azure.microsoft.com/pricing/details/data-transfers)</ept>.",
      "pos": [
        4481,
        4601
      ]
    },
    {
      "content": "This is true even if you use this technique from another machine or cloud service within the same Azure datacenter, because traffic still goes through Azure's public load balancer.",
      "pos": [
        4602,
        4782
      ]
    },
    {
      "content": "Connect to SQL Server in the same virtual network",
      "pos": [
        4788,
        4837
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Virtual Network<ept id=\"p1\">](..\\virtual-network\\virtual-networks-overview.md)</ept> enables additional scenarios.",
      "pos": [
        4839,
        4935
      ]
    },
    {
      "content": "You can connect VMs in the same virtual network, even if those VMs exist in different cloud services.",
      "pos": [
        4936,
        5037
      ]
    },
    {
      "content": "And with a <bpt id=\"p1\">[</bpt>site-to-site VPN<ept id=\"p1\">](../vpn-gateway/vpn-gateway-site-to-site-create.md)</ept>, you can create a hybrid architecture that connects VMs with on-premises networks and machines.",
      "pos": [
        5038,
        5214
      ]
    },
    {
      "content": "Virtual networks also enables you to join your Azure VMs to a domain.",
      "pos": [
        5216,
        5285
      ]
    },
    {
      "content": "This is the only way to use Windows Authentication to SQL Server.",
      "pos": [
        5286,
        5351
      ]
    },
    {
      "content": "The other connection scenarios require SQL Authentication with user names and passwords.",
      "pos": [
        5352,
        5440
      ]
    },
    {
      "content": "First, follow the <bpt id=\"p1\">[</bpt>steps in this article to configure connectivity<ept id=\"p1\">](#steps-for-configuring-sql-server-connectivity-in-an-azure-vm)</ept>.",
      "pos": [
        5442,
        5573
      ]
    },
    {
      "content": "If you are going to configure a domain environment and Windows Authentication, you do not need to use the steps in this article to configure SQL Authentication and logins.",
      "pos": [
        5574,
        5745
      ]
    },
    {
      "content": "Also, a public endpoint is not required in this scenario.",
      "pos": [
        5746,
        5803
      ]
    },
    {
      "content": "Assuming that you have configured DNS, you can connect to your SQL Server instance by specifying the SQL Server VM hostname in the connection string.",
      "pos": [
        5805,
        5954
      ]
    },
    {
      "content": "The following example assumes that Windows Authentication has also been configured and that the user has been granted access to the SQL Server instance.",
      "pos": [
        5955,
        6107
      ]
    },
    {
      "content": "Note that in this scenario, you could also specify the IP address of the VM.",
      "pos": [
        6157,
        6233
      ]
    },
    {
      "content": "Steps for configuring SQL Server connectivity in an Azure VM",
      "pos": [
        6238,
        6298
      ]
    },
    {
      "content": "Next Steps",
      "pos": [
        6416,
        6426
      ]
    },
    {
      "pos": [
        6428,
        6597
      ],
      "content": "To see provisioning instructions along with these connectivity steps, see <bpt id=\"p1\">[</bpt>Provisioning a SQL Server Virtual Machine on Azure<ept id=\"p1\">](virtual-machines-provision-sql-server.md)</ept>."
    },
    {
      "content": "If you are also planning to use AlwaysOn Availability Groups for high availability and disaster recovery, you should consider implementing a listener.",
      "pos": [
        6599,
        6749
      ]
    },
    {
      "content": "Database clients connect to the listener rather than directly to one of the SQL Server instances.",
      "pos": [
        6750,
        6847
      ]
    },
    {
      "content": "The listener routes clients to the primary replica in the availability group.",
      "pos": [
        6848,
        6925
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>Configure an ILB listener for AlwaysOn Availability Groups in Azure<ept id=\"p1\">](virtual-machines-sql-server-configure-ilb-alwayson-availability-group-listener.md)</ept>.",
      "pos": [
        6926,
        7105
      ]
    },
    {
      "content": "It is important to review all of the security best practices for SQL Server running on an Azure virtual machine.",
      "pos": [
        7107,
        7219
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>Security Considerations for SQL Server in Azure Virtual Machines<ept id=\"p1\">](virtual-machines-sql-server-security-considerations.md)</ept>.",
      "pos": [
        7220,
        7369
      ]
    },
    {
      "pos": [
        7371,
        7531
      ],
      "content": "For other topics related to running SQL Server in Azure VMs, see <bpt id=\"p1\">[</bpt>SQL Server on Azure Virtual Machines<ept id=\"p1\">](virtual-machines-sql-server-infrastructure-services.md)</ept>."
    }
  ],
  "content": "<properties \n   pageTitle=\"Connect to a SQL Server Virtual Machine on Azure\"\n   description=\"This topic describes how to connect to SQL Server running on a Virtual Machine in Azure. The scenarios differ depending on the networking configuration and the location of the client.\"\n   services=\"virtual-machines\"\n   documentationCenter=\"na\"\n   authors=\"rothja\"\n   manager=\"jeffreyg\"\n   editor=\"monicar\" />\n<tags \n   ms.service=\"virtual-machines\"\n   ms.devlang=\"na\"\n   ms.topic=\"article\"\n   ms.tgt_pltfrm=\"vm-windows-sql-server\"\n   ms.workload=\"infrastructure-services\"\n   ms.date=\"08/18/2015\"\n   ms.author=\"jroth\" />\n\n# Connect to a SQL Server Virtual Machine on Azure\n \n## Overview\n\nConfiguring connectivity to SQL Server running on an Azure Virtual Machine does not differ dramatically from the steps required for an on-premises SQL Server instance. You still have to work with configuration steps involving the firewall, authentication, and database logins.\n\nBut there are some SQL Server connectivity aspects that are specific to Azure VMs. This article covers some [general connectivity scenarios](#connection-scenarios) and then provides [detailed steps for configuring SQL Server connectivity in an Azure VM](#steps-for-configuring-sql-server-connectivity-in-an-azure-vm).\n\n>[AZURE.NOTE] This article focuses on connectivity. For a full walk-through of both provisioning and connectivity, see [Provisioning a SQL Server Virtual Machine on Azure](virtual-machines-provision-sql-server.md).\n\n## Connection scenarios\n\nThe way a client connects to SQL Server running on a Virtual Machine differs depending on the location of the client and the machine/networking configuration. These scenarios include:\n\n- [Connect to SQL Server in the same cloud service](#connect-to-sql-server-in-the-same-cloud-service)\n- [Connect to SQL Server over the internet](#connect-to-sql-server-over-the-internet)\n- [Connect to SQL Server in the same virtual network](#connect-to-sql-server-in-the-same-virtual-network)\n\n### Connect to SQL Server in the same cloud service\n\nMultiple virtual machines can be created in the same cloud service. To understand this virtual machines scenario, see [How to connect virtual machines with a virtual network or cloud service](cloud-services-connect-virtual-machine.md).\n\nFirst, follow the [steps in this article to configure connectivity](#steps-for-configuring-sql-server-connectivity-in-an-azure-vm). Note that you do not have to setup a public endpoint if you are going to be connecting between machines in the same cloud service. \n\nYou can use the VM **hostname** in the client connection string. The hostname is the name that you gave your VM during creation. For example, if you SQL VM named **mysqlvm** with a cloud service DNS name of **mycloudservice.cloudapp.net**, a client VM in the same cloud service could use the following connection string to connect:\n\n    \"Server=mysqlvm;Integrated Security=false;User ID=<login_name>;Password=<your_password>\"\n\n### Connect to SQL Server over the Internet\n\nIf you want to connect to your SQL Server database engine from the Internet, you must create a virtual machine endpoint for incoming TCP communication. This Azure configuration step, directs incoming TCP port traffic to a TCP port that is accessible to the virtual machine.\n\nFirst, follow the [steps in this article to configure connectivity](#steps-for-configuring-sql-server-connectivity-in-an-azure-vm). Any client with internet access could then connect to the SQL Server instance by specifying the cloud service DNS name (such as **mycloudservice.cloudapp.net**) and the VM endpoint (such as **57500**).\n\n    \"Server=mycloudservice.cloudapp.net,57500;Integrated Security=false;User ID=<login_name>;Password=<your_password>\"\n\nAlthough this enables connectivity for clients over the internet, this does not imply that anyone can connect to your SQL Server. Outside clients have to the correct username and password. For additional security, don't use the well-known port 1433 for the public virtual machine endpoint. And if possible, consider adding an ACL on your endpoint to restrict traffic only to the clients you permit. For instructions on using ACLs with endpoints, see [Manage the ACL on an endpoint](virtual-machines-set-up-endpoints.md#manage-the-acl-on-an-endpoint). \n\n>[AZURE.NOTE] It is important to note that when you use this technique to communicate with SQL Server, all data returned is considered outgoing traffic from the datacenter. It is subject to normal [pricing on outbound data transfers](http://azure.microsoft.com/pricing/details/data-transfers). This is true even if you use this technique from another machine or cloud service within the same Azure datacenter, because traffic still goes through Azure's public load balancer.\n\n### Connect to SQL Server in the same virtual network\n\n[Virtual Network](..\\virtual-network\\virtual-networks-overview.md) enables additional scenarios. You can connect VMs in the same virtual network, even if those VMs exist in different cloud services. And with a [site-to-site VPN](../vpn-gateway/vpn-gateway-site-to-site-create.md), you can create a hybrid architecture that connects VMs with on-premises networks and machines.\n\nVirtual networks also enables you to join your Azure VMs to a domain. This is the only way to use Windows Authentication to SQL Server. The other connection scenarios require SQL Authentication with user names and passwords.\n\nFirst, follow the [steps in this article to configure connectivity](#steps-for-configuring-sql-server-connectivity-in-an-azure-vm). If you are going to configure a domain environment and Windows Authentication, you do not need to use the steps in this article to configure SQL Authentication and logins. Also, a public endpoint is not required in this scenario.\n\nAssuming that you have configured DNS, you can connect to your SQL Server instance by specifying the SQL Server VM hostname in the connection string. The following example assumes that Windows Authentication has also been configured and that the user has been granted access to the SQL Server instance.\n\n    \"Server=mysqlvm;Integrated Security=true\" \n\nNote that in this scenario, you could also specify the IP address of the VM.\n\n## Steps for configuring SQL Server connectivity in an Azure VM\n\n[AZURE.INCLUDE [Connect to SQL Server in a VM](../../includes/virtual-machines-sql-server-connection-steps.md)]\n\n## Next Steps\n\nTo see provisioning instructions along with these connectivity steps, see [Provisioning a SQL Server Virtual Machine on Azure](virtual-machines-provision-sql-server.md).\n\nIf you are also planning to use AlwaysOn Availability Groups for high availability and disaster recovery, you should consider implementing a listener. Database clients connect to the listener rather than directly to one of the SQL Server instances. The listener routes clients to the primary replica in the availability group. For more information, see [Configure an ILB listener for AlwaysOn Availability Groups in Azure](virtual-machines-sql-server-configure-ilb-alwayson-availability-group-listener.md).\n\nIt is important to review all of the security best practices for SQL Server running on an Azure virtual machine. For more information, see [Security Considerations for SQL Server in Azure Virtual Machines](virtual-machines-sql-server-security-considerations.md).\n\nFor other topics related to running SQL Server in Azure VMs, see [SQL Server on Azure Virtual Machines](virtual-machines-sql-server-infrastructure-services.md). \n"
}