<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Tutorial - Get Started with the Azure Batch Apps Library for .NET</source>
          <target state="new">Tutorial - Get Started with the Azure Batch Apps Library for .NET</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn basic concepts about Azure Batch Apps and how to develop with a simple scenario</source>
          <target state="new">Learn basic concepts about Azure Batch Apps and how to develop with a simple scenario</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get Started with the Azure Batch Apps Library for .NET</source>
          <target state="new">Get Started with the Azure Batch Apps Library for .NET</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to run parallel compute workloads on Azure Batch using the Batch Apps service.</source>
          <target state="new">This tutorial shows you how to run parallel compute workloads on Azure Batch using the Batch Apps service.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Batch Apps is a feature of Azure Batch that provides an application-centric way of managing and executing Batch workloads.</source>
          <target state="new">Batch Apps is a feature of Azure Batch that provides an application-centric way of managing and executing Batch workloads.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using the Batch Apps SDK, you can create packages to Batch-enable an application, and deploy them in your own account or make them available to other Batch users.</source>
          <target state="new">Using the Batch Apps SDK, you can create packages to Batch-enable an application, and deploy them in your own account or make them available to other Batch users.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Batch also provides data management, job monitoring, built-in diagnostics and logging, and support for inter task dependencies.</source>
          <target state="new">Batch also provides data management, job monitoring, built-in diagnostics and logging, and support for inter task dependencies.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It additionally includes a management portal where you can manage jobs, view logs, and download outputs without having to write your own client.</source>
          <target state="new">It additionally includes a management portal where you can manage jobs, view logs, and download outputs without having to write your own client.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the Batch Apps scenario, you write code using the Batch Apps Cloud SDK to partition jobs into parallel tasks, describe any dependencies between these tasks, and specify how to execute each task.</source>
          <target state="new">In the Batch Apps scenario, you write code using the Batch Apps Cloud SDK to partition jobs into parallel tasks, describe any dependencies between these tasks, and specify how to execute each task.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This code is deployed to the Batch account.</source>
          <target state="new">This code is deployed to the Batch account.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Clients can then execute jobs simply by specifying the kind of job and the input files to a REST API.</source>
          <target state="new">Clients can then execute jobs simply by specifying the kind of job and the input files to a REST API.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> To complete this tutorial, you need an Azure account.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> To complete this tutorial, you need an Azure account.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can create a free trial account in just a couple of minutes.</source>
          <target state="new">You can create a free trial account in just a couple of minutes.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](http://azure.microsoft.com/pricing/free-trial/)</ept>.</source>
          <target state="new">For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](http://azure.microsoft.com/pricing/free-trial/)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can use NuGet to obtain both the <ph id="ph1">&lt;a href="http://www.nuget.org/packages/Microsoft.Azure.Batch.Apps.Cloud/"&gt;</ph>Batch Apps Cloud<ph id="ph2">&lt;/a&gt;</ph> assembly and the <ph id="ph3">&lt;a href="http://www.nuget.org/packages/Microsoft.Azure.Batch.Apps/"&gt;</ph>Batch Apps Client<ph id="ph4">&lt;/a&gt;</ph> assembly.</source>
          <target state="new">You can use NuGet to obtain both the <ph id="ph1">&lt;a href="http://www.nuget.org/packages/Microsoft.Azure.Batch.Apps.Cloud/"&gt;</ph>Batch Apps Cloud<ph id="ph2">&lt;/a&gt;</ph> assembly and the <ph id="ph3">&lt;a href="http://www.nuget.org/packages/Microsoft.Azure.Batch.Apps/"&gt;</ph>Batch Apps Client<ph id="ph4">&lt;/a&gt;</ph> assembly.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>After you create your project in Visual Studio, right-click the project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and choose <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</source>
          <target state="new">After you create your project in Visual Studio, right-click the project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and choose <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can also download the Visual Studio Extension for Batch Apps which includes a project template to cloud-enable applications and ability to deploy an application <ph id="ph1">&lt;a href="https://visualstudiogallery.msdn.microsoft.com/8b294850-a0a5-43b0-acde-57a07f17826a"&gt;</ph>here<ph id="ph2">&lt;/a&gt;</ph> or via searching for <bpt id="p1">**</bpt>Batch Apps<ept id="p1">**</ept> in Visual Studio via the Extensions and Updates menu item.</source>
          <target state="new">You can also download the Visual Studio Extension for Batch Apps which includes a project template to cloud-enable applications and ability to deploy an application <ph id="ph1">&lt;a href="https://visualstudiogallery.msdn.microsoft.com/8b294850-a0a5-43b0-acde-57a07f17826a"&gt;</ph>here<ph id="ph2">&lt;/a&gt;</ph> or via searching for <bpt id="p1">**</bpt>Batch Apps<ept id="p1">**</ept> in Visual Studio via the Extensions and Updates menu item.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also find <ph id="ph1">&lt;a href="https://go.microsoft.com/fwLink/?LinkID=512183&amp;clcid=0x409"&gt;</ph>end-to-end samples on MSDN.<ph id="ph2">&lt;/a&gt;</ph></source>
          <target state="new">You can also find <ph id="ph1">&lt;a href="https://go.microsoft.com/fwLink/?LinkID=512183&amp;clcid=0x409"&gt;</ph>end-to-end samples on MSDN.<ph id="ph2">&lt;/a&gt;</ph></target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Fundamentals of Azure Batch Apps</source>
          <target state="new">Fundamentals of Azure Batch Apps</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Batch is designed to work with existing compute-intensive applications.</source>
          <target state="new">Batch is designed to work with existing compute-intensive applications.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It leverages your existing application code and runs it in a dynamic, virtualized, general-purpose environment.</source>
          <target state="new">It leverages your existing application code and runs it in a dynamic, virtualized, general-purpose environment.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To enable an application to work with Batch Apps there are a couple of things that need to be done:</source>
          <target state="new">To enable an application to work with Batch Apps there are a couple of things that need to be done:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Prepare a zip file of your existing application executables â€“ the same executables that would be run in a traditional server farm or cluster â€“ and any support files it needs.</source>
          <target state="new">Prepare a zip file of your existing application executables â€“ the same executables that would be run in a traditional server farm or cluster â€“ and any support files it needs.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This zip file is then uploaded to your Batch account using the management portal or REST API.</source>
          <target state="new">This zip file is then uploaded to your Batch account using the management portal or REST API.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Create a zip file of the "cloud assemblies" that dispatch your workloads to the application, and upload it via the management portal or REST API.</source>
          <target state="new">Create a zip file of the "cloud assemblies" that dispatch your workloads to the application, and upload it via the management portal or REST API.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A cloud assembly contains two components which are built against the Cloud SDK:</source>
          <target state="new">A cloud assembly contains two components which are built against the Cloud SDK:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Job Splitter â€“ which breaks the job down into tasks that can be processed independently.</source>
          <target state="new">Job Splitter â€“ which breaks the job down into tasks that can be processed independently.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, in an animation scenario, the job splitter would take a movie job and break it down into individual frames.</source>
          <target state="new">For example, in an animation scenario, the job splitter would take a movie job and break it down into individual frames.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Task Processor â€“ which invokes the application executable for a given task.</source>
          <target state="new">Task Processor â€“ which invokes the application executable for a given task.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, in an animation scenario, the task processor would invoke a rendering program to render the single frame specified by the task at hand.</source>
          <target state="new">For example, in an animation scenario, the task processor would invoke a rendering program to render the single frame specified by the task at hand.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Provide a way to submit jobs to the enabled application in Azure.</source>
          <target state="new">Provide a way to submit jobs to the enabled application in Azure.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This might be a plugin in your application UI or a web portal or even an unattended service as part of your execution pipeline.</source>
          <target state="new">This might be a plugin in your application UI or a web portal or even an unattended service as part of your execution pipeline.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">&lt;a href="https://go.microsoft.com/fwLink/?LinkID=512183&amp;clcid=0x409"&gt;</ph>samples<ph id="ph2">&lt;/a&gt;</ph> on MSDN for examples.</source>
          <target state="new">See the <ph id="ph1">&lt;a href="https://go.microsoft.com/fwLink/?LinkID=512183&amp;clcid=0x409"&gt;</ph>samples<ph id="ph2">&lt;/a&gt;</ph> on MSDN for examples.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Batch Apps Key Concepts</source>
          <target state="new">Batch Apps Key Concepts</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The Batch Apps programming and usage model revolves around the following key concepts:</source>
          <target state="new">The Batch Apps programming and usage model revolves around the following key concepts:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Jobs</source>
          <target state="new">Jobs</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>job<ept id="p1">**</ept> is a piece of work submitted by the user.</source>
          <target state="new">A <bpt id="p1">**</bpt>job<ept id="p1">**</ept> is a piece of work submitted by the user.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When a job is submitted, the user specifies the type of job, any settings for that job, and the data required for the job.</source>
          <target state="new">When a job is submitted, the user specifies the type of job, any settings for that job, and the data required for the job.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Either the enabled implementation can work out these details on the userâ€™ behalf or in some cases the user can provide this information explicitly via the client.</source>
          <target state="new">Either the enabled implementation can work out these details on the userâ€™ behalf or in some cases the user can provide this information explicitly via the client.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A job has results that are returned.</source>
          <target state="new">A job has results that are returned.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each job has a primary output and optionally a preview output.</source>
          <target state="new">Each job has a primary output and optionally a preview output.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Jobs can also return extra outputs if desired.</source>
          <target state="new">Jobs can also return extra outputs if desired.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Tasks</source>
          <target state="new">Tasks</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>task<ept id="p1">**</ept> is a piece of work to be done as part of a job.</source>
          <target state="new">A <bpt id="p1">**</bpt>task<ept id="p1">**</ept> is a piece of work to be done as part of a job.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When a user submits a job, it is broken up into smaller tasks.</source>
          <target state="new">When a user submits a job, it is broken up into smaller tasks.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The service then processes these individual tasks, then assemblies the task results into an overall job output.</source>
          <target state="new">The service then processes these individual tasks, then assemblies the task results into an overall job output.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The nature of tasks depends on the kind of job.</source>
          <target state="new">The nature of tasks depends on the kind of job.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The Job Splitter defines how a job is broken down into tasks, guided by the knowledge of what chunks of work the application is designed to process.</source>
          <target state="new">The Job Splitter defines how a job is broken down into tasks, guided by the knowledge of what chunks of work the application is designed to process.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Task outputs can also be download individually and might be useful in some cases, e.g. when a user may want to download individual tasks from an animation job.</source>
          <target state="new">Task outputs can also be download individually and might be useful in some cases, e.g. when a user may want to download individual tasks from an animation job.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Merge Tasks</source>
          <target state="new">Merge Tasks</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>merge task<ept id="p1">**</ept> is a special kind of task that assembles the results of individual tasks into the final job results.</source>
          <target state="new">A <bpt id="p1">**</bpt>merge task<ept id="p1">**</ept> is a special kind of task that assembles the results of individual tasks into the final job results.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For a movie rending job, the merge task might assemble the rendered frames into a movie or to zip all the rendered frames into a single file.</source>
          <target state="new">For a movie rending job, the merge task might assemble the rendered frames into a movie or to zip all the rendered frames into a single file.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Every job has a merge task even if no actual 'merging' is needed.</source>
          <target state="new">Every job has a merge task even if no actual 'merging' is needed.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="new">Files</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>file<ept id="p1">**</ept> is a piece of data used as an input to a job.</source>
          <target state="new">A <bpt id="p1">**</bpt>file<ept id="p1">**</ept> is a piece of data used as an input to a job.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A job can have no input file associated with it or have one or many.</source>
          <target state="new">A job can have no input file associated with it or have one or many.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The same file can be used in multiple jobs as well, e.g. for a movie rendering job, the files might be textures, models, etc. For a data analysis job, the files might be a set of observations or measurements.</source>
          <target state="new">The same file can be used in multiple jobs as well, e.g. for a movie rendering job, the files might be textures, models, etc. For a data analysis job, the files might be a set of observations or measurements.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enabling the Cloud Application</source>
          <target state="new">Enabling the Cloud Application</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Your Application must contain a static field or property containing all the details of your application.</source>
          <target state="new">Your Application must contain a static field or property containing all the details of your application.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It specifies the name of the application and the job type or job types handled by the application.</source>
          <target state="new">It specifies the name of the application and the job type or job types handled by the application.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This is provided when using the template in the SDK that can be downloaded via Visual Studio Gallery.</source>
          <target state="new">This is provided when using the template in the SDK that can be downloaded via Visual Studio Gallery.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Here is an example of a cloud application declaration for a parallel workload:</source>
          <target state="new">Here is an example of a cloud application declaration for a parallel workload:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Implementing Job Splitter and Task Processor</source>
          <target state="new">Implementing Job Splitter and Task Processor</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For embarrassingly parallel workloads, you must implement a job splitter and a task processor.</source>
          <target state="new">For embarrassingly parallel workloads, you must implement a job splitter and a task processor.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Implementing JobSplitter.SplitIntoTasks</source>
          <target state="new">Implementing JobSplitter.SplitIntoTasks</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Your SplitIntoTasks implementation must return a sequence of tasks.</source>
          <target state="new">Your SplitIntoTasks implementation must return a sequence of tasks.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Each task represents a separate piece of work that will be queued for processing by a compute node.</source>
          <target state="new">Each task represents a separate piece of work that will be queued for processing by a compute node.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Each task must be self-contained and must be set up with all the information that the task processor will need.</source>
          <target state="new">Each task must be self-contained and must be set up with all the information that the task processor will need.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The tasks specified by the job splitter are represented as TaskSpecifier objects.</source>
          <target state="new">The tasks specified by the job splitter are represented as TaskSpecifier objects.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>TaskSpecifier has a number of properties which you can set before you return the task.</source>
          <target state="new">TaskSpecifier has a number of properties which you can set before you return the task.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>TaskIndex is ignored, but is available to task processors.</source>
          <target state="new">TaskIndex is ignored, but is available to task processors.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can use this to pass an index to the task processor.</source>
          <target state="new">You can use this to pass an index to the task processor.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If you donâ€™t need to pass an index, you donâ€™t need to set this property.</source>
          <target state="new">If you donâ€™t need to pass an index, you donâ€™t need to set this property.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Parameters is an empty collection by default.</source>
          <target state="new">Parameters is an empty collection by default.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can add to it or replace it with a new collection.</source>
          <target state="new">You can add to it or replace it with a new collection.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can copy entries from the job parameters collection using the WithJobParameters or WithAllJobParameters method.</source>
          <target state="new">You can copy entries from the job parameters collection using the WithJobParameters or WithAllJobParameters method.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>RequiredFiles is an empty collection by default.</source>
          <target state="new">RequiredFiles is an empty collection by default.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can add to it or replace it with a new collection.</source>
          <target state="new">You can add to it or replace it with a new collection.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can copy entries from the job files collection using the RequiringJobFiles or RequiringAllJobFiles method.</source>
          <target state="new">You can copy entries from the job files collection using the RequiringJobFiles or RequiringAllJobFiles method.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can specify a task that depends on a specific other task.</source>
          <target state="new">You can specify a task that depends on a specific other task.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To do this, set the TaskSpecifier.DependsOn property, passing the ID of the task it depends on:</source>
          <target state="new">To do this, set the TaskSpecifier.DependsOn property, passing the ID of the task it depends on:</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The task will not run until the output of the depended on task is available.</source>
          <target state="new">The task will not run until the output of the depended on task is available.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can also specify that a whole group of tasks should not start processing until another group has completely finished.</source>
          <target state="new">You can also specify that a whole group of tasks should not start processing until another group has completely finished.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In this case you can set the TaskSpecifier.Stage property.</source>
          <target state="new">In this case you can set the TaskSpecifier.Stage property.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Tasks with a given Stage value will not begin processing until all tasks with lower Stage values have finished; for example, tasks with Stage 3 will not begin processing until all tasks with Stage 0, 1 or 2 have finished.</source>
          <target state="new">Tasks with a given Stage value will not begin processing until all tasks with lower Stage values have finished; for example, tasks with Stage 3 will not begin processing until all tasks with Stage 0, 1 or 2 have finished.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Stages must begin at 0, the sequence of stages must have no gaps, and SplitIntoTasks must return tasks in stage order: for example, it is an error to return a task with Stage 0 after a task with Stage 1.</source>
          <target state="new">Stages must begin at 0, the sequence of stages must have no gaps, and SplitIntoTasks must return tasks in stage order: for example, it is an error to return a task with Stage 0 after a task with Stage 1.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Every parallel job ends with a special task called the merge task.</source>
          <target state="new">Every parallel job ends with a special task called the merge task.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The merge taskâ€™s job is to assemble the results of the parallel processing tasks into a final result.</source>
          <target state="new">The merge taskâ€™s job is to assemble the results of the parallel processing tasks into a final result.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Batch Apps automatically creates the merge task for you.</source>
          <target state="new">Batch Apps automatically creates the merge task for you.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In rare cases, you may want to explicitly control the merge task, for example to customize its parameters.</source>
          <target state="new">In rare cases, you may want to explicitly control the merge task, for example to customize its parameters.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In this case, you can specify the merge task by returning a TaskSpecifier with its IsMerge property set to true.</source>
          <target state="new">In this case, you can specify the merge task by returning a TaskSpecifier with its IsMerge property set to true.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This will override the automatic merge task.</source>
          <target state="new">This will override the automatic merge task.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If you create an explicit merge task:</source>
          <target state="new">If you create an explicit merge task:</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You may create only one explicit merge task</source>
          <target state="new">You may create only one explicit merge task</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>It must be the last task in the sequence</source>
          <target state="new">It must be the last task in the sequence</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>It must have IsMerge set to true, and every other task must have IsMerge set to false</source>
          <target state="new">It must have IsMerge set to true, and every other task must have IsMerge set to false</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Remember, however, that normally you do not need to create the merge task explicitly.</source>
          <target state="new">Remember, however, that normally you do not need to create the merge task explicitly.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following code demonstrates a simple implementation of SplitIntoTasks.</source>
          <target state="new">The following code demonstrates a simple implementation of SplitIntoTasks.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Implementing ParallelTaskProcessor.RunExternalTaskProcess</source>
          <target state="new">Implementing ParallelTaskProcessor.RunExternalTaskProcess</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>RunExternalTaskProcess is called for each non merge task returned from the job splitter.</source>
          <target state="new">RunExternalTaskProcess is called for each non merge task returned from the job splitter.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>It should invoke your application with the appropriate arguments, and return a collection of outputs that need to be kept for later use.</source>
          <target state="new">It should invoke your application with the appropriate arguments, and return a collection of outputs that need to be kept for later use.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The following fragment shows how to call a program named application.exe.</source>
          <target state="new">The following fragment shows how to call a program named application.exe.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Note you can use the ExecutablePath helper method to create absolute file paths.</source>
          <target state="new">Note you can use the ExecutablePath helper method to create absolute file paths.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The ExternalProcess class in the Cloud SDK provides useful helper logic for running your application executables.</source>
          <target state="new">The ExternalProcess class in the Cloud SDK provides useful helper logic for running your application executables.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>ExternalProcess can take care of cancellation, translating exit codes into exceptions, capturing standard out and standard error and setting up environment variables.</source>
          <target state="new">ExternalProcess can take care of cancellation, translating exit codes into exceptions, capturing standard out and standard error and setting up environment variables.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can also additionally use the .NET Process class directly to run your programs if you prefer.</source>
          <target state="new">You can also additionally use the .NET Process class directly to run your programs if you prefer.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Your RunExternalTaskProcess method returns a TaskProcessResult, which includes a list of output files.</source>
          <target state="new">Your RunExternalTaskProcess method returns a TaskProcessResult, which includes a list of output files.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This must include at minimum all files required for the merge; you can also optionally return log files, preview files and intermediate files (e.g. for diagnostic purposes if the task failed).</source>
          <target state="new">This must include at minimum all files required for the merge; you can also optionally return log files, preview files and intermediate files (e.g. for diagnostic purposes if the task failed).</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Note that your method return the file paths, not the file content.</source>
          <target state="new">Note that your method return the file paths, not the file content.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Each file must be identified with the type of output it contains: output (that is, part of the eventual job output), preview, log or intermediate.</source>
          <target state="new">Each file must be identified with the type of output it contains: output (that is, part of the eventual job output), preview, log or intermediate.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>These values come from the TaskOutputFileKind enumeration.</source>
          <target state="new">These values come from the TaskOutputFileKind enumeration.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The following fragment returns a single task output, and no preview or log.</source>
          <target state="new">The following fragment returns a single task output, and no preview or log.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The TaskProcessResult.FromExternalProcessResult method simplifies the common scenario of capturing exit code, processor output and output files from a command line program:</source>
          <target state="new">The TaskProcessResult.FromExternalProcessResult method simplifies the common scenario of capturing exit code, processor output and output files from a command line program:</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following code demonstrates a simple implementation of ParallelTaskProcessor.RunExternalTaskProcess.</source>
          <target state="new">The following code demonstrates a simple implementation of ParallelTaskProcessor.RunExternalTaskProcess.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Implementing ParallelTaskProcessor.RunExternalMergeProcess</source>
          <target state="new">Implementing ParallelTaskProcessor.RunExternalMergeProcess</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This is called for the merge task.</source>
          <target state="new">This is called for the merge task.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>It should invoke the application to combine outputs of the previous tasks, in whatever way is appropriate to your application and return the combined output.</source>
          <target state="new">It should invoke the application to combine outputs of the previous tasks, in whatever way is appropriate to your application and return the combined output.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The implementation of RunExternalMergeProcess is very similar to RunExternalTaskProcess, except that:</source>
          <target state="new">The implementation of RunExternalMergeProcess is very similar to RunExternalTaskProcess, except that:</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>RunExternalMergeProcess consumes the outputs of previous tasks, rather than user input files.</source>
          <target state="new">RunExternalMergeProcess consumes the outputs of previous tasks, rather than user input files.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You should therefore work out the names of the files you want to process based on the task ID, rather than from the Task.RequiredFiles collection.</source>
          <target state="new">You should therefore work out the names of the files you want to process based on the task ID, rather than from the Task.RequiredFiles collection.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>RunExternalMergeProcess returns a JobOutput file, and optionally a JobPreview file.</source>
          <target state="new">RunExternalMergeProcess returns a JobOutput file, and optionally a JobPreview file.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The following code demonstrates a simple implementation of ParallelTaskProcessor.RunExternalMergeProcess.</source>
          <target state="new">The following code demonstrates a simple implementation of ParallelTaskProcessor.RunExternalMergeProcess.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Submitting Jobs to Batch Apps</source>
          <target state="new">Submitting Jobs to Batch Apps</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A job describes a workload to be run and needs to include all the information about the workload except for file content.</source>
          <target state="new">A job describes a workload to be run and needs to include all the information about the workload except for file content.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For example, the job contains configuration settings which flow from the client through the job splitter and on to tasks.</source>
          <target state="new">For example, the job contains configuration settings which flow from the client through the job splitter and on to tasks.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The samples provided on MSDN are examples of how to submit jobs and provide multiple clients including a web portal and a command line client.</source>
          <target state="new">The samples provided on MSDN are examples of how to submit jobs and provide multiple clients including a web portal and a command line client.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5552ca5409a8474d1e5625b09695968164da75f0</xliffext:olfilehash>
  </header>
</xliff>