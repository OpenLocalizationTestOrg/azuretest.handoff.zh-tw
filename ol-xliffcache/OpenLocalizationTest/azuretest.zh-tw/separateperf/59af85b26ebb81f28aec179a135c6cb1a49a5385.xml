{
  "nodes": [
    {
      "content": "In your back-end app, you now have to switch to sending template notifications instead of native payloads.",
      "pos": [
        2,
        108
      ]
    },
    {
      "content": "This will simplify the back-end code as you will not have to send multiple payloads for the different platforms.",
      "pos": [
        109,
        221
      ]
    },
    {
      "content": "When you send template notifications you only need to provide a set of properties, in our case we will send the set of properties containing the localized version of the current news, for instance:",
      "pos": [
        223,
        420
      ]
    },
    {
      "content": "This section shows how to send notifications in two different ways:",
      "pos": [
        585,
        652
      ]
    },
    {
      "content": "using a console app",
      "pos": [
        656,
        675
      ]
    },
    {
      "content": "using a Mobile Services script",
      "pos": [
        678,
        708
      ]
    },
    {
      "content": "The included code broadcasts to both Windows Store and iOS devices, since the backend can broadcast to any of the supported devices.",
      "pos": [
        710,
        842
      ]
    },
    {
      "content": "To send notifications using a C# console app",
      "pos": [
        849,
        893
      ]
    },
    {
      "pos": [
        898,
        998
      ],
      "content": "We will simply modify your <bpt id=\"p1\">*</bpt>SendNotificationAsync<ept id=\"p1\">*</ept> method by sending a single template notification."
    },
    {
      "pos": [
        1451,
        1702
      ],
      "content": "Note that this simple call will deliver the correct localized piece of news to <bpt id=\"p1\">**</bpt>all<ept id=\"p1\">**</ept> your devices, irrespective of the platform, as your Notification Hub builds and delivers the correct native payload to all the devices subscribed to a specific tag."
    },
    {
      "content": "Mobile Services",
      "pos": [
        1708,
        1723
      ]
    },
    {
      "content": "In your Mobile Service scheduler, overwrite your script with:",
      "pos": [
        1725,
        1786
      ]
    },
    {
      "content": "Note how in this case there is no need to send multiple notifications for different locales and platforms.",
      "pos": [
        2308,
        2414
      ]
    }
  ],
  "content": "\n\nIn your back-end app, you now have to switch to sending template notifications instead of native payloads. This will simplify the back-end code as you will not have to send multiple payloads for the different platforms.\n\nWhen you send template notifications you only need to provide a set of properties, in our case we will send the set of properties containing the localized version of the current news, for instance:\n\n    {\n        \"News_English\": \"World News in English!\",\n        \"News_French\": \"World News in French!\",\n        \"News_Mandarin\": \"World News in Mandarin!\"\n    }\n\n\nThis section shows how to send notifications in two different ways:\n\n- using a console app\n- using a Mobile Services script\n\nThe included code broadcasts to both Windows Store and iOS devices, since the backend can broadcast to any of the supported devices.\n\n\n\n## To send notifications using a C# console app ##\n\nWe will simply modify your *SendNotificationAsync* method by sending a single template notification.\n\n    var hub = NotificationHubClient.CreateClientFromConnectionString(\"<connection string>\", \"<hub name>\");\n    var notification = new Dictionary<string, string>() {\n                            {\"News_English\", \"World News in English!\"},\n                            {\"News_French\", \"World News in French!\"},\n                            {\"News_Mandarin\", \"World News in Mandarin!\"}};\n    await hub.SendTemplateNotificationAsync(notification, \"World\");\n\nNote that this simple call will deliver the correct localized piece of news to **all** your devices, irrespective of the platform, as your Notification Hub builds and delivers the correct native payload to all the devices subscribed to a specific tag.\n\n### Mobile Services\n\nIn your Mobile Service scheduler, overwrite your script with:\n\n    var azure = require('azure');\n    var notificationHubService = azure.createNotificationHubService('<hub name>', '<connection string with full access>');\n    var notification = {\n            \"News_English\": \"World News in English!\",\n            \"News_French\": \"World News in French!\",\n            \"News_Mandarin\", \"World News in Mandarin!\"\n    }\n    notificationHubService.send('World', notification, function(error) {\n        if (!error) {\n            console.warn(\"Notification successful\");\n        }\n    });\n    \nNote how in this case there is no need to send multiple notifications for different locales and platforms.\n"
}