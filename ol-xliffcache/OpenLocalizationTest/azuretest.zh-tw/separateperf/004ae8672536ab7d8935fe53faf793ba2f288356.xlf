<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure AD Connect Sync: Understanding Users and Contacts</source>
          <target state="new">Azure AD Connect Sync: Understanding Users and Contacts</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Explains users and contacts in Azure AD Connect Sync.</source>
          <target state="new">Explains users and contacts in Azure AD Connect Sync.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure AD Connect Sync: Understanding Users and Contacts</source>
          <target state="new">Azure AD Connect Sync: Understanding Users and Contacts</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>There are several different reasons why you would have multiple Active Directory forests and there are several different deployment topologies.</source>
          <target state="new">There are several different reasons why you would have multiple Active Directory forests and there are several different deployment topologies.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Common models include an account-resource deployment and GAL sync’ed forests after a merger &amp; acquisition.</source>
          <target state="new">Common models include an account-resource deployment and GAL sync’ed forests after a merger &amp; acquisition.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>But even if there are pure models, hybrid models are common as well.</source>
          <target state="new">But even if there are pure models, hybrid models are common as well.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The default configuration in Azure AD Connect Sync does not assume any particular model but depending on how user matching was selected in the installation guide, different behaviors can be observed.</source>
          <target state="new">The default configuration in Azure AD Connect Sync does not assume any particular model but depending on how user matching was selected in the installation guide, different behaviors can be observed.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this topic, we will go through how the default configuration behaves in certain topologies.</source>
          <target state="new">In this topic, we will go through how the default configuration behaves in certain topologies.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>We will go through the configuration and the Synchronization Rules Editor can be used to look at the configuration.</source>
          <target state="new">We will go through the configuration and the Synchronization Rules Editor can be used to look at the configuration.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There are a few general rules the configuration assumes:</source>
          <target state="new">There are a few general rules the configuration assumes:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Regardless of which order we read the source Active Directories, the end result should always be the same.</source>
          <target state="new">Regardless of which order we read the source Active Directories, the end result should always be the same.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An active account will always contribute login information, including <bpt id="p1">**</bpt>userPrincipalName<ept id="p1">**</ept> and <bpt id="p2">**</bpt>sourceAnchor<ept id="p2">**</ept>.</source>
          <target state="new">An active account will always contribute login information, including <bpt id="p1">**</bpt>userPrincipalName<ept id="p1">**</ept> and <bpt id="p2">**</bpt>sourceAnchor<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A disabled account will contribute userPrincipalName and sourceAnchor, unless it is a linked mailbox.</source>
          <target state="new">A disabled account will contribute userPrincipalName and sourceAnchor, unless it is a linked mailbox.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An account with a linked mailbox will never be used for userPrincipalName and sourceAnchor.</source>
          <target state="new">An account with a linked mailbox will never be used for userPrincipalName and sourceAnchor.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It is assumed that an active account will be found later.</source>
          <target state="new">It is assumed that an active account will be found later.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A contact object might be provisioned to Azure AD as a contact or as a user.</source>
          <target state="new">A contact object might be provisioned to Azure AD as a contact or as a user.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You don’t really know until all source Active Directory forests have been processed.</source>
          <target state="new">You don’t really know until all source Active Directory forests have been processed.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Contacts</source>
          <target state="new">Contacts</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Having contacts representing a user in a different forest is common after a merger &amp; acquisition where a GALSync solution is bridging two or more Exchange forests.</source>
          <target state="new">Having contacts representing a user in a different forest is common after a merger &amp; acquisition where a GALSync solution is bridging two or more Exchange forests.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The contact object is always joining from the connector space to the metaverse using the mail attribute.</source>
          <target state="new">The contact object is always joining from the connector space to the metaverse using the mail attribute.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If there is already a contact object or user object with the same mail address, the objects are joined together.</source>
          <target state="new">If there is already a contact object or user object with the same mail address, the objects are joined together.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is configured in the rule <bpt id="p1">**</bpt>In from AD – Contact Join<ept id="p1">**</ept>.</source>
          <target state="new">This is configured in the rule <bpt id="p1">**</bpt>In from AD – Contact Join<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>There is also a rule named <bpt id="p1">**</bpt>In from AD – Contact Common<ept id="p1">**</ept> with an attribute flow to the metaverse attribute <bpt id="p2">**</bpt>sourceObjectType<ept id="p2">**</ept> with the constant <bpt id="p3">**</bpt>Contact<ept id="p3">**</ept>.</source>
          <target state="new">There is also a rule named <bpt id="p1">**</bpt>In from AD – Contact Common<ept id="p1">**</ept> with an attribute flow to the metaverse attribute <bpt id="p2">**</bpt>sourceObjectType<ept id="p2">**</ept> with the constant <bpt id="p3">**</bpt>Contact<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This rule has very low precedence so if any user object is joined to the same metaverse object, then the rule In from AD – User Common will contribute the value User to this attribute.</source>
          <target state="new">This rule has very low precedence so if any user object is joined to the same metaverse object, then the rule In from AD – User Common will contribute the value User to this attribute.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>With this rule, this attribute will have the value Contact if no user has been joined and the value User if at least one user has been found.</source>
          <target state="new">With this rule, this attribute will have the value Contact if no user has been joined and the value User if at least one user has been found.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For provisioning an object to Azure AD, the outbound rule <bpt id="p1">**</bpt>Out to AAD – Contact Join<ept id="p1">**</ept> will create a contact object if the metaverse attribute <bpt id="p2">**</bpt>sourceObjectType<ept id="p2">**</ept> is set to <bpt id="p3">**</bpt>Contact<ept id="p3">**</ept>.</source>
          <target state="new">For provisioning an object to Azure AD, the outbound rule <bpt id="p1">**</bpt>Out to AAD – Contact Join<ept id="p1">**</ept> will create a contact object if the metaverse attribute <bpt id="p2">**</bpt>sourceObjectType<ept id="p2">**</ept> is set to <bpt id="p3">**</bpt>Contact<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If this attribute is set to <bpt id="p1">**</bpt>User<ept id="p1">**</ept>, then the rule <bpt id="p2">**</bpt>Out to AAD – User Join<ept id="p2">**</ept> will create a user object instead.</source>
          <target state="new">If this attribute is set to <bpt id="p1">**</bpt>User<ept id="p1">**</ept>, then the rule <bpt id="p2">**</bpt>Out to AAD – User Join<ept id="p2">**</ept> will create a user object instead.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It is possible that an object is promoted from Contact to User when more source Active Directories are imported and synchronized.</source>
          <target state="new">It is possible that an object is promoted from Contact to User when more source Active Directories are imported and synchronized.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, in a GALSync topology we will find contact objects for everyone in the second forest when we import the first forest.</source>
          <target state="new">For example, in a GALSync topology we will find contact objects for everyone in the second forest when we import the first forest.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This will stage new contact objects in the AAD Connector.</source>
          <target state="new">This will stage new contact objects in the AAD Connector.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When we later import and synchronize the second forest, we will find the real users and join them to the existing metaverse objects.</source>
          <target state="new">When we later import and synchronize the second forest, we will find the real users and join them to the existing metaverse objects.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>We will then delete the contact object in AAD and create a new user object instead.</source>
          <target state="new">We will then delete the contact object in AAD and create a new user object instead.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you have a topology where users and represented as contacts, make sure you select to match users on the mail attribute in the installation guide.</source>
          <target state="new">If you have a topology where users and represented as contacts, make sure you select to match users on the mail attribute in the installation guide.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you select another option, then you will have an order dependent configuration.</source>
          <target state="new">If you select another option, then you will have an order dependent configuration.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Contact objects will always join on the mail attribute, but user objects will only join on the mail attribute if this option was selected in the installation guide.</source>
          <target state="new">Contact objects will always join on the mail attribute, but user objects will only join on the mail attribute if this option was selected in the installation guide.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You could then end up with two different objects in the metaverse with the same mail attribute if the contact object was imported before the user object.</source>
          <target state="new">You could then end up with two different objects in the metaverse with the same mail attribute if the contact object was imported before the user object.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>During export to Azure AD, an error will be thrown.</source>
          <target state="new">During export to Azure AD, an error will be thrown.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This behavior is by design and would indicate bad data or that the topology was not correctly identified during the installation.</source>
          <target state="new">This behavior is by design and would indicate bad data or that the topology was not correctly identified during the installation.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Disabled accounts</source>
          <target state="new">Disabled accounts</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Disabled accounts are synchronized as well to Azure AD.</source>
          <target state="new">Disabled accounts are synchronized as well to Azure AD.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Disabled accounts are common to represent resources in Exchange, for example conference rooms.</source>
          <target state="new">Disabled accounts are common to represent resources in Exchange, for example conference rooms.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The exception is users with a linked mailbox; as previously mentioned, these will never provision an account to Azure AD.</source>
          <target state="new">The exception is users with a linked mailbox; as previously mentioned, these will never provision an account to Azure AD.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The assumption is that if a disabled user account is found, then we will not find another active account later and the object is provisioned to Azure AD with the userPrincipalName and sourceAnchor found.</source>
          <target state="new">The assumption is that if a disabled user account is found, then we will not find another active account later and the object is provisioned to Azure AD with the userPrincipalName and sourceAnchor found.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In case another active account will join to the same metaverse object, then its userPrincipalName and sourceAnchor will be used.</source>
          <target state="new">In case another active account will join to the same metaverse object, then its userPrincipalName and sourceAnchor will be used.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Chaning sourceAnchor</source>
          <target state="new">Chaning sourceAnchor</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When an object has been exported to Azure AD then it is not allowed to change the sourceAnchor anymore.</source>
          <target state="new">When an object has been exported to Azure AD then it is not allowed to change the sourceAnchor anymore.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When the object has been exported the metaverse attribute <bpt id="p1">**</bpt>cloudSourceAnchor<ept id="p1">**</ept> is set with the <bpt id="p2">**</bpt>sourceAnchor<ept id="p2">**</ept> value accepted by Azure AD.</source>
          <target state="new">When the object has been exported the metaverse attribute <bpt id="p1">**</bpt>cloudSourceAnchor<ept id="p1">**</ept> is set with the <bpt id="p2">**</bpt>sourceAnchor<ept id="p2">**</ept> value accepted by Azure AD.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>sourceAnchor<ept id="p1">**</ept> is changed and not match <bpt id="p2">**</bpt>cloudSourceAnchor<ept id="p2">**</ept>, the rule** Out to AAD – User Join** will throw the error <bpt id="p3">**</bpt>sourceAnchor attribute has changed<ept id="p3">**</ept>.</source>
          <target state="new">If <bpt id="p1">**</bpt>sourceAnchor<ept id="p1">**</ept> is changed and not match <bpt id="p2">**</bpt>cloudSourceAnchor<ept id="p2">**</ept>, the rule** Out to AAD – User Join** will throw the error <bpt id="p3">**</bpt>sourceAnchor attribute has changed<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In this case, the configuration or data must be corrected so the same sourceAnchor is present in the metaverse again before the object can be synchronized again.</source>
          <target state="new">In this case, the configuration or data must be corrected so the same sourceAnchor is present in the metaverse again before the object can be synchronized again.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Additional Resources</source>
          <target state="new">Additional Resources</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Azure AD Connect Sync: Customizing Synchronization options</source>
          <target state="new">Azure AD Connect Sync: Customizing Synchronization options</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Integrating your on-premises identities with Azure Active Directory</source>
          <target state="new">Integrating your on-premises identities with Azure Active Directory</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">004ae8672536ab7d8935fe53faf793ba2f288356</xliffext:olfilehash>
  </header>
</xliff>