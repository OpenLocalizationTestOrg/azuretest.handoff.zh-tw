<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to use Queue storage from Java | Microsoft Azure</source>
          <target state="new">How to use Queue storage from Java | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use the Azure Queue service to create and delete queues, and insert, get, and delete messages.</source>
          <target state="new">Learn how to use the Azure Queue service to create and delete queues, and insert, get, and delete messages.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Samples written in Java.</source>
          <target state="new">Samples written in Java.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to use Queue storage from Java</source>
          <target state="new">How to use Queue storage from Java</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This guide will show you how to perform common scenarios using the Azure Queue storage service.</source>
          <target state="new">This guide will show you how to perform common scenarios using the Azure Queue storage service.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The samples are written in Java and use the <bpt id="p1">[</bpt>Azure Storage SDK for Java<ept id="p1">][]</ept>.</source>
          <target state="new">The samples are written in Java and use the <bpt id="p1">[</bpt>Azure Storage SDK for Java<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The scenarios covered include <bpt id="p1">**</bpt>inserting<ept id="p1">**</ept>, <bpt id="p2">**</bpt>peeking<ept id="p2">**</ept>, <bpt id="p3">**</bpt>getting<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>deleting<ept id="p4">**</ept> queue messages, as well as <bpt id="p5">**</bpt>creating<ept id="p5">**</ept> and <bpt id="p6">**</bpt>deleting<ept id="p6">**</ept> queues.</source>
          <target state="new">The scenarios covered include <bpt id="p1">**</bpt>inserting<ept id="p1">**</ept>, <bpt id="p2">**</bpt>peeking<ept id="p2">**</ept>, <bpt id="p3">**</bpt>getting<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>deleting<ept id="p4">**</ept> queue messages, as well as <bpt id="p5">**</bpt>creating<ept id="p5">**</ept> and <bpt id="p6">**</bpt>deleting<ept id="p6">**</ept> queues.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information on queues, see the <bpt id="p1">[</bpt>Next steps<ept id="p1">](#NextSteps)</ept> section.</source>
          <target state="new">For more information on queues, see the <bpt id="p1">[</bpt>Next steps<ept id="p1">](#NextSteps)</ept> section.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Note: An SDK is available for developers who are using Azure Storage on Android devices.</source>
          <target state="new">Note: An SDK is available for developers who are using Azure Storage on Android devices.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Azure Storage SDK for Android<ept id="p1">][]</ept>.</source>
          <target state="new">For more information, see the <bpt id="p1">[</bpt>Azure Storage SDK for Android<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create a Java application</source>
          <target state="new">Create a Java application</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this guide, you will use storage features which can be run within a Java application locally, or in code running within a web role or worker role in Azure.</source>
          <target state="new">In this guide, you will use storage features which can be run within a Java application locally, or in code running within a web role or worker role in Azure.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To do so, you will need to install the Java Development Kit (JDK) and create an Azure storage account in your Azure subscription.</source>
          <target state="new">To do so, you will need to install the Java Development Kit (JDK) and create an Azure storage account in your Azure subscription.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Once you have done so, you will need to verify that your development system meets the minimum requirements and dependencies which are listed in the <bpt id="p1">[</bpt>Azure Storage SDK for Java<ept id="p1">][]</ept> repository on GitHub.</source>
          <target state="new">Once you have done so, you will need to verify that your development system meets the minimum requirements and dependencies which are listed in the <bpt id="p1">[</bpt>Azure Storage SDK for Java<ept id="p1">][]</ept> repository on GitHub.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If your system meets those requirements, you can follow the instructions for downloading and installing the Azure Storage Libraries for Java on your system from that repository.</source>
          <target state="new">If your system meets those requirements, you can follow the instructions for downloading and installing the Azure Storage Libraries for Java on your system from that repository.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Once you have completed those tasks, you will be able to create a Java application which uses the examples in this article.</source>
          <target state="new">Once you have completed those tasks, you will be able to create a Java application which uses the examples in this article.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Configure your application to access queue storage</source>
          <target state="new">Configure your application to access queue storage</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Add the following import statements to the top of the Java file where you want to use Azure storage APIs to access queues:</source>
          <target state="new">Add the following import statements to the top of the Java file where you want to use Azure storage APIs to access queues:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Setup an Azure storage connection string</source>
          <target state="new">Setup an Azure storage connection string</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An Azure storage client uses a storage connection string to store endpoints and credentials for accessing data management services.</source>
          <target state="new">An Azure storage client uses a storage connection string to store endpoints and credentials for accessing data management services.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When running in a client application, you must provide the storage connection string in the following format, using the name of your storage account and the Primary access key for the storage account listed in the Management Portal for the <bpt id="p1">*</bpt>AccountName<ept id="p1">*</ept> and <bpt id="p2">*</bpt>AccountKey<ept id="p2">*</ept> values.</source>
          <target state="new">When running in a client application, you must provide the storage connection string in the following format, using the name of your storage account and the Primary access key for the storage account listed in the Management Portal for the <bpt id="p1">*</bpt>AccountName<ept id="p1">*</ept> and <bpt id="p2">*</bpt>AccountKey<ept id="p2">*</ept> values.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This example shows how you can declare a static field to hold the connection string:</source>
          <target state="new">This example shows how you can declare a static field to hold the connection string:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In an application running within a role in Microsoft Azure, this string can be stored in the service configuration file, <bpt id="p1">*</bpt>ServiceConfiguration.cscfg<ept id="p1">*</ept>, and can be accessed with a call to the <bpt id="p2">**</bpt>RoleEnvironment.getConfigurationSettings<ept id="p2">**</ept> method.</source>
          <target state="new">In an application running within a role in Microsoft Azure, this string can be stored in the service configuration file, <bpt id="p1">*</bpt>ServiceConfiguration.cscfg<ept id="p1">*</ept>, and can be accessed with a call to the <bpt id="p2">**</bpt>RoleEnvironment.getConfigurationSettings<ept id="p2">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Here's an example of getting the connection string from a <bpt id="p1">**</bpt>Setting<ept id="p1">**</ept> element named <bpt id="p2">*</bpt>StorageConnectionString<ept id="p2">*</ept> in the service configuration file:</source>
          <target state="new">Here's an example of getting the connection string from a <bpt id="p1">**</bpt>Setting<ept id="p1">**</ept> element named <bpt id="p2">*</bpt>StorageConnectionString<ept id="p2">*</ept> in the service configuration file:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following samples assume that you have used one of these two methods to get the storage connection string.</source>
          <target state="new">The following samples assume that you have used one of these two methods to get the storage connection string.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>How to: Create a queue</source>
          <target state="new">How to: Create a queue</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> object lets you get reference objects for queues.</source>
          <target state="new">A <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> object lets you get reference objects for queues.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following code creates a <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> object.</source>
          <target state="new">The following code creates a <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>(Note: There are additional ways to create <bpt id="p1">**</bpt>CloudStorageAccount<ept id="p1">**</ept> objects; for more information, see <bpt id="p2">**</bpt>CloudStorageAccount<ept id="p2">**</ept> in the <bpt id="p3">[</bpt><ept id="p3">Azure Storage Client SDK Reference]</ept>.)</source>
          <target state="new">(Note: There are additional ways to create <bpt id="p1">**</bpt>CloudStorageAccount<ept id="p1">**</ept> objects; for more information, see <bpt id="p2">**</bpt>CloudStorageAccount<ept id="p2">**</ept> in the <bpt id="p3">[</bpt><ept id="p3">Azure Storage Client SDK Reference]</ept>.)</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> object to get a reference to the queue you want to use.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>CloudQueueClient<ept id="p1">**</ept> object to get a reference to the queue you want to use.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can create the queue if it doesn't exist.</source>
          <target state="new">You can create the queue if it doesn't exist.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>How to: Add a message to a queue</source>
          <target state="new">How to: Add a message to a queue</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To insert a message into an existing queue, first create a new <bpt id="p1">**</bpt>CloudQueueMessage<ept id="p1">**</ept>.</source>
          <target state="new">To insert a message into an existing queue, first create a new <bpt id="p1">**</bpt>CloudQueueMessage<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Next, call the <bpt id="p1">**</bpt>addMessage<ept id="p1">**</ept> method.</source>
          <target state="new">Next, call the <bpt id="p1">**</bpt>addMessage<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>CloudQueueMessage<ept id="p1">**</ept> can be created from either a string (in UTF-8 format) or a byte array.</source>
          <target state="new">A <bpt id="p1">**</bpt>CloudQueueMessage<ept id="p1">**</ept> can be created from either a string (in UTF-8 format) or a byte array.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Here is code which creates a queue (if it doesn't exist) and inserts the message "Hello, World".</source>
          <target state="new">Here is code which creates a queue (if it doesn't exist) and inserts the message "Hello, World".</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>How to: Peek at the next message</source>
          <target state="new">How to: Peek at the next message</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can peek at the message in the front of a queue without removing it from the queue by calling <bpt id="p1">**</bpt>peekMessage<ept id="p1">**</ept>.</source>
          <target state="new">You can peek at the message in the front of a queue without removing it from the queue by calling <bpt id="p1">**</bpt>peekMessage<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>How to: Change the contents of a queued message</source>
          <target state="new">How to: Change the contents of a queued message</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can change the contents of a message in-place in the queue.</source>
          <target state="new">You can change the contents of a message in-place in the queue.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the message represents a work task, you could use this feature to update the status of the work task.</source>
          <target state="new">If the message represents a work task, you could use this feature to update the status of the work task.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following code updates the queue message with new contents, and sets the visibility timeout to extend another 60 seconds.</source>
          <target state="new">The following code updates the queue message with new contents, and sets the visibility timeout to extend another 60 seconds.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This saves the state of work associated with the message, and gives the client another minute to continue working on the message.</source>
          <target state="new">This saves the state of work associated with the message, and gives the client another minute to continue working on the message.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You could use this technique to track multi-step workflows on queue messages, without having to start over from the beginning if a processing step fails due to hardware or software failure.</source>
          <target state="new">You could use this technique to track multi-step workflows on queue messages, without having to start over from the beginning if a processing step fails due to hardware or software failure.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Typically, you would keep a retry count as well, and if the message is retried more than <bpt id="p1">*</bpt>n<ept id="p1">*</ept> times, you would delete it.</source>
          <target state="new">Typically, you would keep a retry count as well, and if the message is retried more than <bpt id="p1">*</bpt>n<ept id="p1">*</ept> times, you would delete it.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This protects against a message that triggers an application error each time it is processed.</source>
          <target state="new">This protects against a message that triggers an application error each time it is processed.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following code sample searches through the queue of messages, locates the first message that matches "Hello, World" for the content, then modifies the message content and exits.</source>
          <target state="new">The following code sample searches through the queue of messages, locates the first message that matches "Hello, World" for the content, then modifies the message content and exits.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Alternatively, the following code sample updates just the first visible message on the queue.</source>
          <target state="new">Alternatively, the following code sample updates just the first visible message on the queue.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>How to: Get the queue length</source>
          <target state="new">How to: Get the queue length</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can get an estimate of the number of messages in a queue.</source>
          <target state="new">You can get an estimate of the number of messages in a queue.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>downloadAttributes<ept id="p1">**</ept> method asks the Queue service for several current values, including a count of how many messages are in a queue.</source>
          <target state="new">The <bpt id="p1">**</bpt>downloadAttributes<ept id="p1">**</ept> method asks the Queue service for several current values, including a count of how many messages are in a queue.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The count is only approximate because messages can be added or removed after the Queue service responds to your request.</source>
          <target state="new">The count is only approximate because messages can be added or removed after the Queue service responds to your request.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>getApproximateMessageCount<ept id="p1">**</ept> method returns the last value retrieved by the call to <bpt id="p2">**</bpt>downloadAttributes<ept id="p2">**</ept>, without calling the Queue service.</source>
          <target state="new">The <bpt id="p1">**</bpt>getApproximateMessageCount<ept id="p1">**</ept> method returns the last value retrieved by the call to <bpt id="p2">**</bpt>downloadAttributes<ept id="p2">**</ept>, without calling the Queue service.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>How to: Dequeue the next message</source>
          <target state="new">How to: Dequeue the next message</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Your code dequeues a message from a queue in two steps.</source>
          <target state="new">Your code dequeues a message from a queue in two steps.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When you call <bpt id="p1">**</bpt>retrieveMessage<ept id="p1">**</ept>, you get the next message in a queue.</source>
          <target state="new">When you call <bpt id="p1">**</bpt>retrieveMessage<ept id="p1">**</ept>, you get the next message in a queue.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A message returned from <bpt id="p1">**</bpt>retrieveMessage<ept id="p1">**</ept> becomes invisible to any other code reading messages from this queue.</source>
          <target state="new">A message returned from <bpt id="p1">**</bpt>retrieveMessage<ept id="p1">**</ept> becomes invisible to any other code reading messages from this queue.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>By default, this message stays invisible for 30 seconds.</source>
          <target state="new">By default, this message stays invisible for 30 seconds.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To finish removing the message from the queue, you must also call <bpt id="p1">**</bpt>deleteMessage<ept id="p1">**</ept>.</source>
          <target state="new">To finish removing the message from the queue, you must also call <bpt id="p1">**</bpt>deleteMessage<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</source>
          <target state="new">This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Your code calls <bpt id="p1">**</bpt>deleteMessage<ept id="p1">**</ept> right after the message has been processed.</source>
          <target state="new">Your code calls <bpt id="p1">**</bpt>deleteMessage<ept id="p1">**</ept> right after the message has been processed.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Additional options for dequeuing messages</source>
          <target state="new">Additional options for dequeuing messages</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>There are two ways you can customize message retrieval from a queue.</source>
          <target state="new">There are two ways you can customize message retrieval from a queue.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>First, you can get a batch of messages (up to 32).</source>
          <target state="new">First, you can get a batch of messages (up to 32).</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Second, you can set a longer or shorter invisibility timeout, allowing your code more or less time to fully process each message.</source>
          <target state="new">Second, you can set a longer or shorter invisibility timeout, allowing your code more or less time to fully process each message.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following code example uses the <bpt id="p1">**</bpt>retrieveMessages<ept id="p1">**</ept> method to get 20 messages in one call.</source>
          <target state="new">The following code example uses the <bpt id="p1">**</bpt>retrieveMessages<ept id="p1">**</ept> method to get 20 messages in one call.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Then it processes each message using a <bpt id="p1">**</bpt>for<ept id="p1">**</ept> loop.</source>
          <target state="new">Then it processes each message using a <bpt id="p1">**</bpt>for<ept id="p1">**</ept> loop.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>It also sets the invisibility timeout to five minutes (300 seconds) for each message.</source>
          <target state="new">It also sets the invisibility timeout to five minutes (300 seconds) for each message.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Note that the five minutes starts for all messages at the same time, so when five minutes have passed since the call to <bpt id="p1">**</bpt>retrieveMessages<ept id="p1">**</ept>, any messages which have not been deleted will become visible again.</source>
          <target state="new">Note that the five minutes starts for all messages at the same time, so when five minutes have passed since the call to <bpt id="p1">**</bpt>retrieveMessages<ept id="p1">**</ept>, any messages which have not been deleted will become visible again.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>How to: List the queues</source>
          <target state="new">How to: List the queues</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To obtain a list of the current queues, call the <bpt id="p1">**</bpt>CloudQueueClient.listQueues()<ept id="p1">**</ept> method, which will return a collection of <bpt id="p2">**</bpt>CloudQueue<ept id="p2">**</ept> objects.</source>
          <target state="new">To obtain a list of the current queues, call the <bpt id="p1">**</bpt>CloudQueueClient.listQueues()<ept id="p1">**</ept> method, which will return a collection of <bpt id="p2">**</bpt>CloudQueue<ept id="p2">**</ept> objects.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>How to: Delete a queue</source>
          <target state="new">How to: Delete a queue</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To delete a queue and all the messages contained in it, call the <bpt id="p1">**</bpt>deleteIfExists<ept id="p1">**</ept> method on the <bpt id="p2">**</bpt>CloudQueue<ept id="p2">**</ept> object.</source>
          <target state="new">To delete a queue and all the messages contained in it, call the <bpt id="p1">**</bpt>deleteIfExists<ept id="p1">**</ept> method on the <bpt id="p2">**</bpt>CloudQueue<ept id="p2">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Now that you've learned the basics of queue storage, follow these links to learn about more complex storage tasks.</source>
          <target state="new">Now that you've learned the basics of queue storage, follow these links to learn about more complex storage tasks.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Azure Storage SDK for Java</source>
          <target state="new">Azure Storage SDK for Java</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Azure Storage Client SDK Reference</source>
          <target state="new">Azure Storage Client SDK Reference</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Azure Storage REST API</source>
          <target state="new">Azure Storage REST API</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Azure Storage Team Blog</source>
          <target state="new">Azure Storage Team Blog</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c162ced02ab60fd524d9fbe1e0fcd6c9781ad67</xliffext:olfilehash>
  </header>
</xliff>