<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Import data to DocumentDB | Microsoft Azure</source>
          <target state="new">Import data to DocumentDB | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use the open source DocumentDB data migration tool to import data to DocumentDB from various sources, including JSON files, CSV files, SQL, MongoDB, Azure Table storage, Amazon DynamoDB, and DocumentDB collections.</source>
          <target state="new">Learn how to use the open source DocumentDB data migration tool to import data to DocumentDB from various sources, including JSON files, CSV files, SQL, MongoDB, Azure Table storage, Amazon DynamoDB, and DocumentDB collections.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import data to DocumentDB</source>
          <target state="new">Import data to DocumentDB</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This article shows you how to use the open source DocumentDB data migration tool to import data to <bpt id="p1">[</bpt>Microsoft Azure DocumentDB<ept id="p1">](http://azure.microsoft.com/services/documentdb/)</ept> from various sources, including JSON files, CSV files, SQL, MongoDB, Azure Table storage, Amazon DynamoDB and DocumentDB collections.</source>
          <target state="new">This article shows you how to use the open source DocumentDB data migration tool to import data to <bpt id="p1">[</bpt>Microsoft Azure DocumentDB<ept id="p1">](http://azure.microsoft.com/services/documentdb/)</ept> from various sources, including JSON files, CSV files, SQL, MongoDB, Azure Table storage, Amazon DynamoDB and DocumentDB collections.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>After reading this article, you'll be able to answer the following questions:</source>
          <target state="new">After reading this article, you'll be able to answer the following questions:</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>How can I import JSON file data to DocumentDB?</source>
          <target state="new">How can I import JSON file data to DocumentDB?</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>How can I import CSV file data to DocumentDB?</source>
          <target state="new">How can I import CSV file data to DocumentDB?</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>How can I import SQL Server data to DocumentDB?</source>
          <target state="new">How can I import SQL Server data to DocumentDB?</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>How can I import MongoDB data to DocumentDB?</source>
          <target state="new">How can I import MongoDB data to DocumentDB?</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>How can I import data from Azure Table storage to DocumentDB?</source>
          <target state="new">How can I import data from Azure Table storage to DocumentDB?</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>How can I import data from Amazon DynamoDB to DocumentDB?</source>
          <target state="new">How can I import data from Amazon DynamoDB to DocumentDB?</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>How can I import data from HBase to DocumentDB</source>
          <target state="new">How can I import data from HBase to DocumentDB</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>How can I migrate data between DocumentDB collections?</source>
          <target state="new">How can I migrate data between DocumentDB collections?</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="Prerequisites"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Prerequisites</source>
          <target state="new"><ph id="ph1">&lt;a id="Prerequisites"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Prerequisites</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Before following the instructions in this article, ensure that you have the following installed:</source>
          <target state="new">Before following the instructions in this article, ensure that you have the following installed:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft .NET Framework 4.51<ept id="p1">](http://www.microsoft.com/net/downloads)</ept> or higher.</source>
          <target state="new"><bpt id="p1">[</bpt>Microsoft .NET Framework 4.51<ept id="p1">](http://www.microsoft.com/net/downloads)</ept> or higher.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="Overviewl"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Overview of the DocumentDB Data Migration Tool</source>
          <target state="new"><ph id="ph1">&lt;a id="Overviewl"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Overview of the DocumentDB Data Migration Tool</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The DocumentDB Data Migration tool is an open source solution that imports data to DocumentDB from a variety of sources, including:</source>
          <target state="new">The DocumentDB Data Migration tool is an open source solution that imports data to DocumentDB from a variety of sources, including:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>JSON files</source>
          <target state="new">JSON files</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>MongoDB</source>
          <target state="new">MongoDB</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>SQL Server</source>
          <target state="new">SQL Server</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CSV files</source>
          <target state="new">CSV files</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Azure Table storage</source>
          <target state="new">Azure Table storage</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Amazon DynamoDB</source>
          <target state="new">Amazon DynamoDB</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>HBase</source>
          <target state="new">HBase</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>DocumentDB collections</source>
          <target state="new">DocumentDB collections</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>While the import tool includes a graphical user interface (dtui.exe), it can also be driven from the command line (dt.exe).</source>
          <target state="new">While the import tool includes a graphical user interface (dtui.exe), it can also be driven from the command line (dt.exe).</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In fact, there is an option to output the associated command after setting up an import through the UI.</source>
          <target state="new">In fact, there is an option to output the associated command after setting up an import through the UI.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Tabular source data (e.g. SQL Server or CSV files) can be transformed such that hierarchical relationships (subdocuments) can be created during import.</source>
          <target state="new">Tabular source data (e.g. SQL Server or CSV files) can be transformed such that hierarchical relationships (subdocuments) can be created during import.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Keep reading to learn more about source options, sample command lines to import from each source, target options, and viewing import results.</source>
          <target state="new">Keep reading to learn more about source options, sample command lines to import from each source, target options, and viewing import results.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="Install"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Installing the DocumentDB Data Migration Tool</source>
          <target state="new"><ph id="ph1">&lt;a id="Install"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Installing the DocumentDB Data Migration Tool</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The migration tool source code is available on GitHub in <bpt id="p1">[</bpt>this repository<ept id="p1">](https://github.com/azure/azure-documentdb-datamigrationtool)</ept> and a compiled version is available from <bpt id="p2">[</bpt>Microsoft Download Center<ept id="p2">](http://www.microsoft.com/downloads/details.aspx?FamilyID=cda7703a-2774-4c07-adcc-ad02ddc1a44d)</ept>.</source>
          <target state="new">The migration tool source code is available on GitHub in <bpt id="p1">[</bpt>this repository<ept id="p1">](https://github.com/azure/azure-documentdb-datamigrationtool)</ept> and a compiled version is available from <bpt id="p2">[</bpt>Microsoft Download Center<ept id="p2">](http://www.microsoft.com/downloads/details.aspx?FamilyID=cda7703a-2774-4c07-adcc-ad02ddc1a44d)</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You may either compile the solution or simply download and extract the compiled version to a directory of your choice.</source>
          <target state="new">You may either compile the solution or simply download and extract the compiled version to a directory of your choice.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Then run either:</source>
          <target state="new">Then run either:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Dtui.exe: Graphical interface version of the tool</source>
          <target state="new">Dtui.exe: Graphical interface version of the tool</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Dt.exe: Command-line version of the tool</source>
          <target state="new">Dt.exe: Command-line version of the tool</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="JSON"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import JSON files</source>
          <target state="new"><ph id="ph1">&lt;a id="JSON"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import JSON files</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The JSON file source importer option allows you to import one or more single document JSON files or JSON files that each contain an array of JSON documents.</source>
          <target state="new">The JSON file source importer option allows you to import one or more single document JSON files or JSON files that each contain an array of JSON documents.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When adding folders that contain JSON files to import, you have the option of recursively searching for files in subfolders.</source>
          <target state="new">When adding folders that contain JSON files to import, you have the option of recursively searching for files in subfolders.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Screenshot of JSON file source options</source>
          <target state="new">Screenshot of JSON file source options</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Here are some command line samples to import JSON files:</source>
          <target state="new">Here are some command line samples to import JSON files:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="MongoDB"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from MongoDB</source>
          <target state="new"><ph id="ph1">&lt;a id="MongoDB"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from MongoDB</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The MongoDB source importer option allows you to import from an individual MongoDB collection and optionally filter documents using a query and/or modify the document structure by using a projection.</source>
          <target state="new">The MongoDB source importer option allows you to import from an individual MongoDB collection and optionally filter documents using a query and/or modify the document structure by using a projection.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Screenshot of MongoDB source options</source>
          <target state="new">Screenshot of MongoDB source options</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The connection string is in the standard MongoDB format:</source>
          <target state="new">The connection string is in the standard MongoDB format:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the MongoDB instance specified in the connection string field can be accessed.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the MongoDB instance specified in the connection string field can be accessed.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Enter the name of the collection from which data will be imported.</source>
          <target state="new">Enter the name of the collection from which data will be imported.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You may optionally specify or provide a file for a query (e.g. {pop: {$gt:5000}}) and/or projection (e.g. {loc:0}) to both filter and shape the data to be imported.</source>
          <target state="new">You may optionally specify or provide a file for a query (e.g. {pop: {$gt:5000}}) and/or projection (e.g. {loc:0}) to both filter and shape the data to be imported.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Here are some command line samples to import from MongoDB:</source>
          <target state="new">Here are some command line samples to import from MongoDB:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="MongoDBExport"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import MongoDB export files</source>
          <target state="new"><ph id="ph1">&lt;a id="MongoDBExport"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import MongoDB export files</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The MongoDB export JSON file source importer option allows you to import one or more JSON files produced from the mongoexport utility.</source>
          <target state="new">The MongoDB export JSON file source importer option allows you to import one or more JSON files produced from the mongoexport utility.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Screenshot of MongoDB export source options</source>
          <target state="new">Screenshot of MongoDB export source options</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When adding folders that contain MongoDB export JSON files for import, you have the option of recursively searching for files in subfolders.</source>
          <target state="new">When adding folders that contain MongoDB export JSON files for import, you have the option of recursively searching for files in subfolders.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Here is a command line sample to import from MongoDB export JSON files:</source>
          <target state="new">Here is a command line sample to import from MongoDB export JSON files:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="SQL"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from SQL Server</source>
          <target state="new"><ph id="ph1">&lt;a id="SQL"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from SQL Server</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The SQL source importer option allows you to import from an individual SQL Server database and optionally filter the records to be imported using a query.</source>
          <target state="new">The SQL source importer option allows you to import from an individual SQL Server database and optionally filter the records to be imported using a query.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In addition, you can modify the document structure by specifying a nesting separator (more on that in a moment).</source>
          <target state="new">In addition, you can modify the document structure by specifying a nesting separator (more on that in a moment).</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Screenshot of SQL source options</source>
          <target state="new">Screenshot of SQL source options</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The format of the connection string is the standard SQL connection string format.</source>
          <target state="new">The format of the connection string is the standard SQL connection string format.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the SQL Server instance specified in the connection string field can be accessed.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the SQL Server instance specified in the connection string field can be accessed.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The nesting separator property is used to create hierarchical relationships (sub-documents) during import.</source>
          <target state="new">The nesting separator property is used to create hierarchical relationships (sub-documents) during import.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Consider the following SQL query:</source>
          <target state="new">Consider the following SQL query:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>select CAST(BusinessEntityID AS varchar) as Id, Name, AddressType as [Address.AddressType], AddressLine1 as [Address.AddressLine1], City as [Address.Location.City], StateProvinceName as [Address.Location.StateProvinceName], PostalCode as [Address.PostalCode], CountryRegionName as [Address.CountryRegionName] from Sales.vStoreWithAddresses WHERE AddressType='Main Office'</source>
          <target state="new">select CAST(BusinessEntityID AS varchar) as Id, Name, AddressType as [Address.AddressType], AddressLine1 as [Address.AddressLine1], City as [Address.Location.City], StateProvinceName as [Address.Location.StateProvinceName], PostalCode as [Address.PostalCode], CountryRegionName as [Address.CountryRegionName] from Sales.vStoreWithAddresses WHERE AddressType='Main Office'</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Which returns the following (partial) results:</source>
          <target state="new">Which returns the following (partial) results:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Screenshot of SQL query results</source>
          <target state="new">Screenshot of SQL query results</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Note the aliases such as Address.AddressType and Address.Location.StateProvinceName.</source>
          <target state="new">Note the aliases such as Address.AddressType and Address.Location.StateProvinceName.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>By specifying a nesting separator of ‘.’, the import tool creates Address and Address.Location subdocuments during the import.</source>
          <target state="new">By specifying a nesting separator of ‘.’, the import tool creates Address and Address.Location subdocuments during the import.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Here is an example of a resulting document in DocumentDB:</source>
          <target state="new">Here is an example of a resulting document in DocumentDB:</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>"id": "956",</source>
          <target state="new">"id": "956",</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>"Name": "Finer Sales and Service",</source>
          <target state="new">"Name": "Finer Sales and Service",</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>"Address": {</source>
          <target state="new">"Address": {</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>"AddressType": "Main Office",</source>
          <target state="new">"AddressType": "Main Office",</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>"AddressLine1": "#500-75 O'Connor Street",</source>
          <target state="new">"AddressLine1": "#500-75 O'Connor Street",</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>"Location": {</source>
          <target state="new">"Location": {</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>"City": "Ottawa",</source>
          <target state="new">"City": "Ottawa",</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>"StateProvinceName": "Ontario"</source>
          <target state="new">"StateProvinceName": "Ontario"</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>},</source>
          <target state="new">},</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>"PostalCode": "K4B 1S2",</source>
          <target state="new">"PostalCode": "K4B 1S2",</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>"CountryRegionName": "Canada"</source>
          <target state="new">"CountryRegionName": "Canada"</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Here are some command line samples to import from SQL Server:</source>
          <target state="new">Here are some command line samples to import from SQL Server:</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="CSV"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import CSV files</source>
          <target state="new"><ph id="ph1">&lt;a id="CSV"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import CSV files</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The CSV file source importer option enables you to import one or more CSV files.</source>
          <target state="new">The CSV file source importer option enables you to import one or more CSV files.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When adding folders that contain CSV files for import, you have the option of recursively searching for files in subfolders.</source>
          <target state="new">When adding folders that contain CSV files for import, you have the option of recursively searching for files in subfolders.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Screenshot of CSV source options</source>
          <target state="new">Screenshot of CSV source options</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Similar to the SQL source, the nesting separator property may be used to create hierarchical relationships (sub-documents) during import.</source>
          <target state="new">Similar to the SQL source, the nesting separator property may be used to create hierarchical relationships (sub-documents) during import.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Consider the following CSV header row and data rows:</source>
          <target state="new">Consider the following CSV header row and data rows:</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Screenshot of CSV sample records</source>
          <target state="new">Screenshot of CSV sample records</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Note the aliases such as DomainInfo.Domain_Name and RedirectInfo.Redirecting.</source>
          <target state="new">Note the aliases such as DomainInfo.Domain_Name and RedirectInfo.Redirecting.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>By specifying a nesting separator of ‘.’, the import tool will create DomainInfo and RedirectInfo subdocuments during the import.</source>
          <target state="new">By specifying a nesting separator of ‘.’, the import tool will create DomainInfo and RedirectInfo subdocuments during the import.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Here is an example of a resulting document in DocumentDB:</source>
          <target state="new">Here is an example of a resulting document in DocumentDB:</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>"DomainInfo": {</source>
          <target state="new">"DomainInfo": {</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>"Domain_Name": "ACUS.GOV",</source>
          <target state="new">"Domain_Name": "ACUS.GOV",</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>"Domain_Name_Address": "http://www.ACUS.GOV"</source>
          <target state="new">"Domain_Name_Address": "http://www.ACUS.GOV"</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>},</source>
          <target state="new">},</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>"Federal Agency": "Administrative Conference of the United States",</source>
          <target state="new">"Federal Agency": "Administrative Conference of the United States",</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>"RedirectInfo": {</source>
          <target state="new">"RedirectInfo": {</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>"Redirecting": "0",</source>
          <target state="new">"Redirecting": "0",</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>"Redirect_Destination": ""</source>
          <target state="new">"Redirect_Destination": ""</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>},</source>
          <target state="new">},</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>"id": "9cc565c5-ebcd-1c03-ebd3-cc3e2ecd814d"</source>
          <target state="new">"id": "9cc565c5-ebcd-1c03-ebd3-cc3e2ecd814d"</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The import tool will attempt to infer type information for unquoted values in CSV files (quoted values are always treated as strings).</source>
          <target state="new">The import tool will attempt to infer type information for unquoted values in CSV files (quoted values are always treated as strings).</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Types are identified in the following order: number, datetime, boolean.</source>
          <target state="new">Types are identified in the following order: number, datetime, boolean.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>There are two other things to note about CSV import:</source>
          <target state="new">There are two other things to note about CSV import:</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>By default, unquoted values are always trimmed for tabs and spaces, while quoted values are preserved as-is.</source>
          <target state="new">By default, unquoted values are always trimmed for tabs and spaces, while quoted values are preserved as-is.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This behavior can be overridden with the Trim quoted values checkbox or the /s.TrimQuoted command line option.</source>
          <target state="new">This behavior can be overridden with the Trim quoted values checkbox or the /s.TrimQuoted command line option.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>By default, an unquoted null is treated as a null value.</source>
          <target state="new">By default, an unquoted null is treated as a null value.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This behavior can be overridden (i.e. treat an unquoted null as a “null” string) with the Treat unquoted NULL as string checkbox or the /s.NoUnquotedNulls command line option.</source>
          <target state="new">This behavior can be overridden (i.e. treat an unquoted null as a “null” string) with the Treat unquoted NULL as string checkbox or the /s.NoUnquotedNulls command line option.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Here is a command line sample for CSV import:</source>
          <target state="new">Here is a command line sample for CSV import:</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="AzureTableSource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from Azure Table storage</source>
          <target state="new"><ph id="ph1">&lt;a id="AzureTableSource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from Azure Table storage</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The Azure Table storage source importer option allows you to import from an individual Azure Table storage table and optionally filter the table entities to be imported.</source>
          <target state="new">The Azure Table storage source importer option allows you to import from an individual Azure Table storage table and optionally filter the table entities to be imported.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Screenshot of Azure Table storage source options</source>
          <target state="new">Screenshot of Azure Table storage source options</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The format of the Azure Table storage connection string is:</source>
          <target state="new">The format of the Azure Table storage connection string is:</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the Azure Table storage instance specified in the connection string field can be accessed.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the Azure Table storage instance specified in the connection string field can be accessed.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Enter the name of the Azure table from which data will be imported.</source>
          <target state="new">Enter the name of the Azure table from which data will be imported.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You may optionally specify a <bpt id="p1">[</bpt>filter<ept id="p1">](https://msdn.microsoft.com/library/azure/ff683669.aspx)</ept>.</source>
          <target state="new">You may optionally specify a <bpt id="p1">[</bpt>filter<ept id="p1">](https://msdn.microsoft.com/library/azure/ff683669.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The Azure Table storage source importer option has the following additional options:</source>
          <target state="new">The Azure Table storage source importer option has the following additional options:</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Include Internal Fields</source>
          <target state="new">Include Internal Fields</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>All - Include all internal fields (PartitionKey, RowKey, and Timestamp)</source>
          <target state="new">All - Include all internal fields (PartitionKey, RowKey, and Timestamp)</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>None - Exclude all internal fields</source>
          <target state="new">None - Exclude all internal fields</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>RowKey - Only include the RowKey field</source>
          <target state="new">RowKey - Only include the RowKey field</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Select Columns</source>
          <target state="new">Select Columns</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Azure Table storage filters do not support projections.</source>
          <target state="new">Azure Table storage filters do not support projections.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If you want to only import specific Azure Table entity properties, add them to the Select Columns list.</source>
          <target state="new">If you want to only import specific Azure Table entity properties, add them to the Select Columns list.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>All other entity properties will be ignored.</source>
          <target state="new">All other entity properties will be ignored.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Here is a command line sample to import from Azure Table storage:</source>
          <target state="new">Here is a command line sample to import from Azure Table storage:</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="DynamoDBSource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from Amazon DynamoDB</source>
          <target state="new"><ph id="ph1">&lt;a id="DynamoDBSource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from Amazon DynamoDB</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The Amazon DynamoDB source importer option allows you to import from an individual Amazon DynamoDB table and optionally filter the entities to be imported.</source>
          <target state="new">The Amazon DynamoDB source importer option allows you to import from an individual Amazon DynamoDB table and optionally filter the entities to be imported.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Several templates are provided so that setting up an import is as easy as possible.</source>
          <target state="new">Several templates are provided so that setting up an import is as easy as possible.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Screenshot of Amazon DynamoDB source options</source>
          <target state="new">Screenshot of Amazon DynamoDB source options</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Screenshot of Amazon DynamoDB source options</source>
          <target state="new">Screenshot of Amazon DynamoDB source options</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The format of the Amazon DynamoDB connection string is:</source>
          <target state="new">The format of the Amazon DynamoDB connection string is:</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the Amazon DynamoDB instance specified in the connection string field can be accessed.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the Amazon DynamoDB instance specified in the connection string field can be accessed.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Here is a command line sample to import from Amazon DynamoDB:</source>
          <target state="new">Here is a command line sample to import from Amazon DynamoDB:</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="BlobImport"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import files from Azure Blob storage</source>
          <target state="new"><ph id="ph1">&lt;a id="BlobImport"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import files from Azure Blob storage</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The JSON file, MongoDB export file, and CSV file source importer options allow you to import one or more files from Azure Blob storage.</source>
          <target state="new">The JSON file, MongoDB export file, and CSV file source importer options allow you to import one or more files from Azure Blob storage.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>After specifying a Blob container URL and Account Key, simply provide a regular expression to select the file(s) to import.</source>
          <target state="new">After specifying a Blob container URL and Account Key, simply provide a regular expression to select the file(s) to import.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Screenshot of Blob file source options</source>
          <target state="new">Screenshot of Blob file source options</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Here is command line sample to import JSON files from Azure Blob storage:</source>
          <target state="new">Here is command line sample to import JSON files from Azure Blob storage:</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="DocumentDBSource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from DocumentDB</source>
          <target state="new"><ph id="ph1">&lt;a id="DocumentDBSource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from DocumentDB</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The DocumentDB source importer option allows you to import data from one or more DocumentDB collections and optionally filter documents using a query.</source>
          <target state="new">The DocumentDB source importer option allows you to import data from one or more DocumentDB collections and optionally filter documents using a query.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB source options</source>
          <target state="new">Screenshot of DocumentDB source options</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The format of the DocumentDB connection string is:</source>
          <target state="new">The format of the DocumentDB connection string is:</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the DocumentDB instance specified in the connection string field can be accessed.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the DocumentDB instance specified in the connection string field can be accessed.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>To import from a single DocumentDB collection, enter the name of the collection from which data will be imported.</source>
          <target state="new">To import from a single DocumentDB collection, enter the name of the collection from which data will be imported.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>To import from multiple DocumentDB collections, provide a regular expression to match one or more collection names (e.g. collection01 | collection02 | collection03).</source>
          <target state="new">To import from multiple DocumentDB collections, provide a regular expression to match one or more collection names (e.g. collection01 | collection02 | collection03).</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>You may optionally specify, or provide a file for, a query to both filter and shape the data to be imported.</source>
          <target state="new">You may optionally specify, or provide a file for, a query to both filter and shape the data to be imported.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Since the collection field accepts regular expressions, if you are importing from a single collection whose name contains regular expression characters, then those characters must be escaped accordingly.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Since the collection field accepts regular expressions, if you are importing from a single collection whose name contains regular expression characters, then those characters must be escaped accordingly.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The DocumentDB source importer option has the following advanced options:</source>
          <target state="new">The DocumentDB source importer option has the following advanced options:</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Include Internal Fields: Specifies whether or not to include DocumentDB document system properties in the export (e.g. _rid, _ts).</source>
          <target state="new">Include Internal Fields: Specifies whether or not to include DocumentDB document system properties in the export (e.g. _rid, _ts).</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Number of Retries on Failure: Specifies the number of times to retry the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</source>
          <target state="new">Number of Retries on Failure: Specifies the number of times to retry the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Retry Interval: Specifies how long to wait between retrying the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</source>
          <target state="new">Retry Interval: Specifies how long to wait between retrying the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Connection Mode: Specifies the connection mode to use with DocumentDB.</source>
          <target state="new">Connection Mode: Specifies the connection mode to use with DocumentDB.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The available choices are DirectTcp, DirectHttps, and Gateway.</source>
          <target state="new">The available choices are DirectTcp, DirectHttps, and Gateway.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The direct connection modes are faster, while the gateway mode is more firewall friendly as it only uses port 443.</source>
          <target state="new">The direct connection modes are faster, while the gateway mode is more firewall friendly as it only uses port 443.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB source advanced options</source>
          <target state="new">Screenshot of DocumentDB source advanced options</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> The import tool defaults to connection mode DirectTcp.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> The import tool defaults to connection mode DirectTcp.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>If you experience firewall issues, switch to connection mode Gateway, as it only requires port 443.</source>
          <target state="new">If you experience firewall issues, switch to connection mode Gateway, as it only requires port 443.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Here are some command line samples to import from DocumentDB:</source>
          <target state="new">Here are some command line samples to import from DocumentDB:</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="HBaseSource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from HBase</source>
          <target state="new"><ph id="ph1">&lt;a id="HBaseSource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import from HBase</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The HBase source importer option allows you to import data from an HBase table and optionally filter the data.</source>
          <target state="new">The HBase source importer option allows you to import data from an HBase table and optionally filter the data.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Several templates are provided so that setting up an import is as easy as possible.</source>
          <target state="new">Several templates are provided so that setting up an import is as easy as possible.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Screenshot of HBase source options</source>
          <target state="new">Screenshot of HBase source options</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Screenshot of HBase source options</source>
          <target state="new">Screenshot of HBase source options</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The format of the HBase Stargate connection string is:</source>
          <target state="new">The format of the HBase Stargate connection string is:</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the HBase instance specified in the connection string field can be accessed.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the HBase instance specified in the connection string field can be accessed.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Here is a command line sample to import from HBase:</source>
          <target state="new">Here is a command line sample to import from HBase:</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="DocumentDBBulkTarget"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import to DocumentDB (Bulk Import)</source>
          <target state="new"><ph id="ph1">&lt;a id="DocumentDBBulkTarget"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import to DocumentDB (Bulk Import)</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The DocumentDB Bulk importer allows you to import from any of the available source options, using a DocumentDB stored procedure for efficiency.</source>
          <target state="new">The DocumentDB Bulk importer allows you to import from any of the available source options, using a DocumentDB stored procedure for efficiency.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The tool supports import to a single DocumentDB collection, as well as sharded import whereby data is partitioned across multiple DocumentDB collections.</source>
          <target state="new">The tool supports import to a single DocumentDB collection, as well as sharded import whereby data is partitioned across multiple DocumentDB collections.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Read more about partitioning data in DocumentDB <bpt id="p1">[</bpt>here<ept id="p1">](documentdb-partition-data.md)</ept>.</source>
          <target state="new">Read more about partitioning data in DocumentDB <bpt id="p1">[</bpt>here<ept id="p1">](documentdb-partition-data.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The tool will create, execute, and then delete the stored procedure from the target collection(s).</source>
          <target state="new">The tool will create, execute, and then delete the stored procedure from the target collection(s).</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB bulk options</source>
          <target state="new">Screenshot of DocumentDB bulk options</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The format of the DocumentDB connection string is:</source>
          <target state="new">The format of the DocumentDB connection string is:</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the DocumentDB instance specified in the connection string field can be accessed.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the DocumentDB instance specified in the connection string field can be accessed.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>To import to a single collection, enter the name of the collection to which data will be imported and click the Add button.</source>
          <target state="new">To import to a single collection, enter the name of the collection to which data will be imported and click the Add button.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>To import to multiple collections, either enter each collection name individually or use the following syntax to specify multiple collections: <bpt id="p1">*</bpt>collection_prefix<ept id="p1">*</ept>[start index - end index].</source>
          <target state="new">To import to multiple collections, either enter each collection name individually or use the following syntax to specify multiple collections: <bpt id="p1">*</bpt>collection_prefix<ept id="p1">*</ept>[start index - end index].</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>When specifying multiple collections via the aforementioned syntax, keep the following in mind:</source>
          <target state="new">When specifying multiple collections via the aforementioned syntax, keep the following in mind:</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Only integer range name patterns are supported.</source>
          <target state="new">Only integer range name patterns are supported.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>For example, specifying collection[0-3] will produce the following collections: collection0, collection1, collection2, collection3.</source>
          <target state="new">For example, specifying collection[0-3] will produce the following collections: collection0, collection1, collection2, collection3.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>You can use an abbreviated syntax: collection[3] will emit same set of collections mentioned in step 1.</source>
          <target state="new">You can use an abbreviated syntax: collection[3] will emit same set of collections mentioned in step 1.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>More than one substitution can be provided.</source>
          <target state="new">More than one substitution can be provided.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For example, collection[0-1] [0-9] will generate 20 collection names with leading zeros (collection01, ..02, ..03).</source>
          <target state="new">For example, collection[0-1] [0-9] will generate 20 collection names with leading zeros (collection01, ..02, ..03).</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Once the collection name(s) have been specified, choose the desired pricing tier of the collection(s) (S1, S2, or S3).</source>
          <target state="new">Once the collection name(s) have been specified, choose the desired pricing tier of the collection(s) (S1, S2, or S3).</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>For best import performance, choose S3.</source>
          <target state="new">For best import performance, choose S3.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Read more about DocumentDB performance levels <bpt id="p1">[</bpt>here<ept id="p1">](documentdb-performance-levels.md)</ept>.</source>
          <target state="new">Read more about DocumentDB performance levels <bpt id="p1">[</bpt>here<ept id="p1">](documentdb-performance-levels.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The performance tier setting only applies to collection creation.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The performance tier setting only applies to collection creation.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>If the specified collection already exists, its pricing tier will not be modified.</source>
          <target state="new">If the specified collection already exists, its pricing tier will not be modified.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>When importing to multiple collections, the import tool supports hash based sharding.</source>
          <target state="new">When importing to multiple collections, the import tool supports hash based sharding.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>In this scenario, specify the document property you wish to use as the Partition Key (if Partition Key is left blank, documents will be sharded randomly across the target collections).</source>
          <target state="new">In this scenario, specify the document property you wish to use as the Partition Key (if Partition Key is left blank, documents will be sharded randomly across the target collections).</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>You may optionally specify which field in the import source should be used as the DocumentDB document id property during the import (note that if documents do not contain this property, then the import tool will generate a GUID as the id property value).</source>
          <target state="new">You may optionally specify which field in the import source should be used as the DocumentDB document id property during the import (note that if documents do not contain this property, then the import tool will generate a GUID as the id property value).</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>There are a number of advanced options available during import.</source>
          <target state="new">There are a number of advanced options available during import.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>First, while the tool includes a default bulk import stored procedure (BulkInsert.js), you may choose to specify your own import stored procedure:</source>
          <target state="new">First, while the tool includes a default bulk import stored procedure (BulkInsert.js), you may choose to specify your own import stored procedure:</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB bulk insert sproc option</source>
          <target state="new">Screenshot of DocumentDB bulk insert sproc option</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Additionally, when importing date types (e.g. from SQL Server or MongoDB), you can choose between three import options:</source>
          <target state="new">Additionally, when importing date types (e.g. from SQL Server or MongoDB), you can choose between three import options:</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB date time import options</source>
          <target state="new">Screenshot of DocumentDB date time import options</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>String: Persist as a string value</source>
          <target state="new">String: Persist as a string value</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Epoch: Persist as an Epoch number value</source>
          <target state="new">Epoch: Persist as an Epoch number value</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Both: Persist both string and Epoch number values.</source>
          <target state="new">Both: Persist both string and Epoch number values.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>This option will create a subdocument, for example:</source>
          <target state="new">This option will create a subdocument, for example:</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>"date_joined": {</source>
          <target state="new">"date_joined": {</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>"Value": "2013-10-21T21:17:25.2410000Z",</source>
          <target state="new">"Value": "2013-10-21T21:17:25.2410000Z",</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>"Epoch": 1382390245</source>
          <target state="new">"Epoch": 1382390245</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The DocumentDB Bulk importer has the following additional advanced options:</source>
          <target state="new">The DocumentDB Bulk importer has the following additional advanced options:</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Batch Size: The tool defaults to a batch size of 50.</source>
          <target state="new">Batch Size: The tool defaults to a batch size of 50.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>If the documents to be imported are large, consider lowering the batch size.</source>
          <target state="new">If the documents to be imported are large, consider lowering the batch size.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Conversely, if the documents to be imported are small, consider raising the batch size.</source>
          <target state="new">Conversely, if the documents to be imported are small, consider raising the batch size.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Max Script Size (bytes): The tool defaults to a max script size of 960KB</source>
          <target state="new">Max Script Size (bytes): The tool defaults to a max script size of 960KB</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Disable Sutomatic Id Generation: If every document to be imported contains an id field, then selecting this option can increase performance.</source>
          <target state="new">Disable Sutomatic Id Generation: If every document to be imported contains an id field, then selecting this option can increase performance.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Documents missing a unique id field will not be imported.</source>
          <target state="new">Documents missing a unique id field will not be imported.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Number of Retries on Failure: Specifies the number of times to retry the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</source>
          <target state="new">Number of Retries on Failure: Specifies the number of times to retry the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Retry Interval: Specifies how long to wait between retrying the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</source>
          <target state="new">Retry Interval: Specifies how long to wait between retrying the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Connection Mode: Specifies the connection mode to use with DocumentDB.</source>
          <target state="new">Connection Mode: Specifies the connection mode to use with DocumentDB.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The available choices are DirectTcp, DirectHttps, and Gateway.</source>
          <target state="new">The available choices are DirectTcp, DirectHttps, and Gateway.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The direct connection modes are faster, while the gateway mode is more firewall friendly as it only uses port 443.</source>
          <target state="new">The direct connection modes are faster, while the gateway mode is more firewall friendly as it only uses port 443.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB bulk import advanced options</source>
          <target state="new">Screenshot of DocumentDB bulk import advanced options</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> The import tool defaults to connection mode DirectTcp.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> The import tool defaults to connection mode DirectTcp.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>If you experience firewall issues, switch to connection mode Gateway, as it only requires port 443.</source>
          <target state="new">If you experience firewall issues, switch to connection mode Gateway, as it only requires port 443.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="DocumentDBSeqTarget"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import to DocumentDB (Sequential Record Import)</source>
          <target state="new"><ph id="ph1">&lt;a id="DocumentDBSeqTarget"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Import to DocumentDB (Sequential Record Import)</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The DocumentDB sequential record importer allows you to import from any of the available source options on a record by record basis.</source>
          <target state="new">The DocumentDB sequential record importer allows you to import from any of the available source options on a record by record basis.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>You might choose this option if you’re importing to an existing collection that has reached its quota of stored procedures.</source>
          <target state="new">You might choose this option if you’re importing to an existing collection that has reached its quota of stored procedures.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The tool supports import to a single DocumentDB collection, as well as sharded import whereby data is partitioned across multiple DocumentDB collections.</source>
          <target state="new">The tool supports import to a single DocumentDB collection, as well as sharded import whereby data is partitioned across multiple DocumentDB collections.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Read more about partitioning data in DocumentDB <bpt id="p1">[</bpt>here<ept id="p1">](documentdb-partition-data.md)</ept>.</source>
          <target state="new">Read more about partitioning data in DocumentDB <bpt id="p1">[</bpt>here<ept id="p1">](documentdb-partition-data.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB sequential record import options</source>
          <target state="new">Screenshot of DocumentDB sequential record import options</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The format of the DocumentDB connection string is:</source>
          <target state="new">The format of the DocumentDB connection string is:</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the DocumentDB instance specified in the connection string field can be accessed.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Use the Verify command to ensure that the DocumentDB instance specified in the connection string field can be accessed.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>To import to a single collection, enter the name of the collection to which data will be imported and click the Add button.</source>
          <target state="new">To import to a single collection, enter the name of the collection to which data will be imported and click the Add button.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>To import to multiple collections, either enter each collection name individually or use the following syntax to specify multiple collections: <bpt id="p1">*</bpt>collection_prefix<ept id="p1">*</ept>[start index - end index].</source>
          <target state="new">To import to multiple collections, either enter each collection name individually or use the following syntax to specify multiple collections: <bpt id="p1">*</bpt>collection_prefix<ept id="p1">*</ept>[start index - end index].</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>When specifying multiple collections via the aforementioned syntax, keep the following in mind:</source>
          <target state="new">When specifying multiple collections via the aforementioned syntax, keep the following in mind:</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Only integer range name patterns are supported.</source>
          <target state="new">Only integer range name patterns are supported.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>For example, specifying collection[0-3] will produce the following collections: collection0, collection1, collection2, collection3.</source>
          <target state="new">For example, specifying collection[0-3] will produce the following collections: collection0, collection1, collection2, collection3.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>You can use an abbreviated syntax: collection[3] will emit same set of collections mentioned in step 1.</source>
          <target state="new">You can use an abbreviated syntax: collection[3] will emit same set of collections mentioned in step 1.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>More than one substitution can be provided.</source>
          <target state="new">More than one substitution can be provided.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>For example, collection[0-1] [0-9] will generate 20 collection names with leading zeros (collection01, ..02, ..03).</source>
          <target state="new">For example, collection[0-1] [0-9] will generate 20 collection names with leading zeros (collection01, ..02, ..03).</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Once the collection name(s) have been specified, choose the desired pricing tier of the collection(s) (S1, S2, or S3).</source>
          <target state="new">Once the collection name(s) have been specified, choose the desired pricing tier of the collection(s) (S1, S2, or S3).</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>For best import performance, choose S3.</source>
          <target state="new">For best import performance, choose S3.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Read more about DocumentDB performance levels <bpt id="p1">[</bpt>here<ept id="p1">](documentdb-performance-levels.md)</ept>.</source>
          <target state="new">Read more about DocumentDB performance levels <bpt id="p1">[</bpt>here<ept id="p1">](documentdb-performance-levels.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The performance tier setting only applies to collection creation.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The performance tier setting only applies to collection creation.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>If the specified collection already exists, its pricing tier will not be modified.</source>
          <target state="new">If the specified collection already exists, its pricing tier will not be modified.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>When importing to multiple collections, the import tool supports hash based sharding.</source>
          <target state="new">When importing to multiple collections, the import tool supports hash based sharding.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>In this scenario, specify the document property you wish to use as the Partition Key (if Partition Key is left blank, documents will be sharded randomly across the target collections).</source>
          <target state="new">In this scenario, specify the document property you wish to use as the Partition Key (if Partition Key is left blank, documents will be sharded randomly across the target collections).</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>You may optionally specify which field in the import source should be used as the DocumentDB document id property during the import (note that if documents do not contain this property, then the import tool will generate a GUID as the id property value).</source>
          <target state="new">You may optionally specify which field in the import source should be used as the DocumentDB document id property during the import (note that if documents do not contain this property, then the import tool will generate a GUID as the id property value).</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>There are a number of advanced options available during import.</source>
          <target state="new">There are a number of advanced options available during import.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>First, when importing date types (e.g. from SQL Server or MongoDB), you can choose between three import options:</source>
          <target state="new">First, when importing date types (e.g. from SQL Server or MongoDB), you can choose between three import options:</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB date time import options</source>
          <target state="new">Screenshot of DocumentDB date time import options</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>String: Persist as a string value</source>
          <target state="new">String: Persist as a string value</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Epoch: Persist as an Epoch number value</source>
          <target state="new">Epoch: Persist as an Epoch number value</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Both: Persist both string and Epoch number values.</source>
          <target state="new">Both: Persist both string and Epoch number values.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>This option will create a subdocument, for example:</source>
          <target state="new">This option will create a subdocument, for example:</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>"date_joined": {</source>
          <target state="new">"date_joined": {</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>"Value": "2013-10-21T21:17:25.2410000Z",</source>
          <target state="new">"Value": "2013-10-21T21:17:25.2410000Z",</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>"Epoch": 1382390245</source>
          <target state="new">"Epoch": 1382390245</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The DocumentDB - Sequential record importer has the following additional advanced options:</source>
          <target state="new">The DocumentDB - Sequential record importer has the following additional advanced options:</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Number of Parallel Requests: The tool defaults to 2 parallel requests.</source>
          <target state="new">Number of Parallel Requests: The tool defaults to 2 parallel requests.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>If the documents to be imported are small, consider raising the number of parallel requests.</source>
          <target state="new">If the documents to be imported are small, consider raising the number of parallel requests.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Note that if this number is raised too much, the import may experience throttling.</source>
          <target state="new">Note that if this number is raised too much, the import may experience throttling.</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Disable Automatic Id Generation: If every document to be imported contains an id field, then selecting this option can increase performance.</source>
          <target state="new">Disable Automatic Id Generation: If every document to be imported contains an id field, then selecting this option can increase performance.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Documents missing a unique id field will not be imported.</source>
          <target state="new">Documents missing a unique id field will not be imported.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Number of Retries on Failure: Specifies the number of times to retry the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</source>
          <target state="new">Number of Retries on Failure: Specifies the number of times to retry the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Retry Interval: Specifies how long to wait between retrying the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</source>
          <target state="new">Retry Interval: Specifies how long to wait between retrying the connection to DocumentDB in case of transient failures (e.g. network connectivity interruption).</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Connection Mode: Specifies the connection mode to use with DocumentDB.</source>
          <target state="new">Connection Mode: Specifies the connection mode to use with DocumentDB.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The available choices are DirectTcp, DirectHttps, and Gateway.</source>
          <target state="new">The available choices are DirectTcp, DirectHttps, and Gateway.</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The direct connection modes are faster, while the gateway mode is more firewall friendly as it only uses port 443.</source>
          <target state="new">The direct connection modes are faster, while the gateway mode is more firewall friendly as it only uses port 443.</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB sequential record import advanced options</source>
          <target state="new">Screenshot of DocumentDB sequential record import advanced options</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> The import tool defaults to connection mode DirectTcp.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> The import tool defaults to connection mode DirectTcp.</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>If you experience firewall issues, switch to connection mode Gateway, as it only requires port 443.</source>
          <target state="new">If you experience firewall issues, switch to connection mode Gateway, as it only requires port 443.</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="IndexingPolicy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Specify an indexing policy when creating DocumentDB collections</source>
          <target state="new"><ph id="ph1">&lt;a id="IndexingPolicy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Specify an indexing policy when creating DocumentDB collections</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>When you allow the migration tool to create collections during import, you can specify the indexing policy of the collections.</source>
          <target state="new">When you allow the migration tool to create collections during import, you can specify the indexing policy of the collections.</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>In the advanced options section of the DocumentDB Bulk import and DocumentDB Sequential record options, navigate to the Indexing Policy section.</source>
          <target state="new">In the advanced options section of the DocumentDB Bulk import and DocumentDB Sequential record options, navigate to the Indexing Policy section.</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB Indexing Policy advanced options</source>
          <target state="new">Screenshot of DocumentDB Indexing Policy advanced options</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Using the Indexing Policy advanced option, you can select an indexing policy file, manually enter an indexing policy, or select from a set of default templates (by right clicking in the indexing policy textbox).</source>
          <target state="new">Using the Indexing Policy advanced option, you can select an indexing policy file, manually enter an indexing policy, or select from a set of default templates (by right clicking in the indexing policy textbox).</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The policy templates the tool provides are:</source>
          <target state="new">The policy templates the tool provides are:</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Default.</source>
          <target state="new">Default.</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>This policy is best when you’re performing equality queries against strings and using ORDER BY, range, and equality queries for numbers.</source>
          <target state="new">This policy is best when you’re performing equality queries against strings and using ORDER BY, range, and equality queries for numbers.</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>This policy has a lower index storage overhead than Range.</source>
          <target state="new">This policy has a lower index storage overhead than Range.</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Hash.</source>
          <target state="new">Hash.</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>This policy is best when you’re performing equality queries for both numbers and strings.</source>
          <target state="new">This policy is best when you’re performing equality queries for both numbers and strings.</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>This policy has the lowest index storage overhead.</source>
          <target state="new">This policy has the lowest index storage overhead.</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Range.</source>
          <target state="new">Range.</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>This policy is best you’re using ORDER BY, range and equality queries on both numbers and strings.</source>
          <target state="new">This policy is best you’re using ORDER BY, range and equality queries on both numbers and strings.</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>This policy has a higher index storage overhead than Default or Hash.</source>
          <target state="new">This policy has a higher index storage overhead than Default or Hash.</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB Indexing Policy advanced options</source>
          <target state="new">Screenshot of DocumentDB Indexing Policy advanced options</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you do not specify an indexing policy, then the default policy will be applied.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you do not specify an indexing policy, then the default policy will be applied.</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Read more about DocumentDB indexing policies <bpt id="p1">[</bpt>here<ept id="p1">](documentdb-indexing-policies.md)</ept>.</source>
          <target state="new">Read more about DocumentDB indexing policies <bpt id="p1">[</bpt>here<ept id="p1">](documentdb-indexing-policies.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Export to JSON file</source>
          <target state="new">Export to JSON file</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The DocumentDB JSON exporter allows you to export any of the available source options to a JSON file that contains an array of JSON documents.</source>
          <target state="new">The DocumentDB JSON exporter allows you to export any of the available source options to a JSON file that contains an array of JSON documents.</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The tool will handle the export for you, or you can choose to view the resulting migration command and run the command yourself.</source>
          <target state="new">The tool will handle the export for you, or you can choose to view the resulting migration command and run the command yourself.</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The resulting JSON file may be stored locally or in Azure Blob storage.</source>
          <target state="new">The resulting JSON file may be stored locally or in Azure Blob storage.</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB JSON local file export option</source>
          <target state="new">Screenshot of DocumentDB JSON local file export option</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB JSON Azure Blob storage export option</source>
          <target state="new">Screenshot of DocumentDB JSON Azure Blob storage export option</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>You may optionally choose to prettify the resulting JSON, which will increase the size of the resulting document while making the contents more human readable.</source>
          <target state="new">You may optionally choose to prettify the resulting JSON, which will increase the size of the resulting document while making the contents more human readable.</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Advanced Configuration</source>
          <target state="new">Advanced Configuration</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>In the Advanced configuration screen, specify the location of the log file to which you would like any errors written.</source>
          <target state="new">In the Advanced configuration screen, specify the location of the log file to which you would like any errors written.</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The following rules apply to this page:</source>
          <target state="new">The following rules apply to this page:</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>If a file name is not provided, then all errors will be returned on the Results page.</source>
          <target state="new">If a file name is not provided, then all errors will be returned on the Results page.</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>If a file name is provided without a directory, then the file will be created (or overwritten) in the current environment directory.</source>
          <target state="new">If a file name is provided without a directory, then the file will be created (or overwritten) in the current environment directory.</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>If you select an existing file, then the file will be overwritten, there is no append option.</source>
          <target state="new">If you select an existing file, then the file will be overwritten, there is no append option.</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Screenshot of Advanced configuration screen</source>
          <target state="new">Screenshot of Advanced configuration screen</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Confirm Import Settings and View Command Line</source>
          <target state="new">Confirm Import Settings and View Command Line</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>After specifying source information, target information, and advanced configuration, review the migration summary and, optionally, view/copy the resulting migration command (copying the command is useful to automate import operations):</source>
          <target state="new">After specifying source information, target information, and advanced configuration, review the migration summary and, optionally, view/copy the resulting migration command (copying the command is useful to automate import operations):</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Screenshot of summary screen</source>
          <target state="new">Screenshot of summary screen</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Screenshot of summary screen</source>
          <target state="new">Screenshot of summary screen</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Once you’re satisfied with your source and target options, click <bpt id="p1">**</bpt>Import<ept id="p1">**</ept>.</source>
          <target state="new">Once you’re satisfied with your source and target options, click <bpt id="p1">**</bpt>Import<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The elapsed time, transferred count, and failure information (if you didn't provide a file name in the Advanced configuration) will update as the import is in process.</source>
          <target state="new">The elapsed time, transferred count, and failure information (if you didn't provide a file name in the Advanced configuration) will update as the import is in process.</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Once complete, you can export the results (e.g. to deal with any import failures).</source>
          <target state="new">Once complete, you can export the results (e.g. to deal with any import failures).</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB JSON export option</source>
          <target state="new">Screenshot of DocumentDB JSON export option</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>You may also start a new import, either keeping the existing settings (e.g. connection string information, source and target choice, etc.) or resetting all values.</source>
          <target state="new">You may also start a new import, either keeping the existing settings (e.g. connection string information, source and target choice, etc.) or resetting all values.</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Screenshot of DocumentDB JSON export option</source>
          <target state="new">Screenshot of DocumentDB JSON export option</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>To learn more about DocumentDB, click <bpt id="p1">[</bpt>here<ept id="p1">](http://azure.com/docdb)</ept>.</source>
          <target state="new">To learn more about DocumentDB, click <bpt id="p1">[</bpt>here<ept id="p1">](http://azure.com/docdb)</ept>.</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10ae7b3e8bfed99bc78e6816e8fcfea77ba02508</xliffext:olfilehash>
  </header>
</xliff>