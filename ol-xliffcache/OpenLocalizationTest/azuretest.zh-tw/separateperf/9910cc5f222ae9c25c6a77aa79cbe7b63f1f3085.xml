{
  "nodes": [
    {
      "pos": [
        5,
        167
      ],
      "content": "Open the project file default.js and in the <bpt id=\"p1\">**</bpt>app.OnActivated<ept id=\"p1\">**</ept> method overload, replace the last call to the <bpt id=\"p2\">**</bpt>refreshTodoItems<ept id=\"p2\">**</ept> method with the following code:"
    },
    {
      "pos": [
        1519,
        1744
      ],
      "content": "If you are using an identity provider other than Facebook, change the value passed to the <ph id=\"ph1\">&lt;strong&gt;</ph>login<ph id=\"ph2\">&lt;/strong&gt;</ph> method above to one of the following: <bpt id=\"p1\">_</bpt>microsoftaccount<ept id=\"p1\">_</ept>, <bpt id=\"p2\">_</bpt>twitter<ept id=\"p2\">_</ept>, <bpt id=\"p3\">_</bpt>google<ept id=\"p3\">_</ept>, or <bpt id=\"p4\">_</bpt>windowsazureactivedirectory<ept id=\"p4\">_</ept>."
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>If you registered your Windows Store app package information with Mobile Services, you should call the <ph id=\"ph2\">&lt;a href=\"http://go.microsoft.com/fwlink/p/?LinkId=322050\" target=\"_blank\"&gt;</ph>login<ph id=\"ph3\">&lt;/a&gt;</ph> method by supplying a value of <ph id=\"ph4\">&lt;strong&gt;</ph>true<ph id=\"ph5\">&lt;/strong&gt;</ph> for the <ph id=\"ph6\">&lt;em&gt;</ph>useSingleSignOn<ph id=\"ph7\">&lt;/em&gt;</ph> parameter.",
      "pos": [
        1751,
        2046
      ]
    },
    {
      "content": "If you do not do this, your users will still be presented with a login prompt every time that the login method is called.",
      "pos": [
        2047,
        2168
      ]
    },
    {
      "pos": [
        2173,
        2340
      ],
      "content": "In the Windows Store app project, open the default.html project file and add the following <bpt id=\"p1\">**</bpt>button<ept id=\"p1\">**</ept> element just before the element that defines the <bpt id=\"p2\">**</bpt>save<ept id=\"p2\">**</ept> button:"
    },
    {
      "content": "Press the F5 key to run the app and sign into the app with your chosen identity provider.",
      "pos": [
        2421,
        2510
      ]
    },
    {
      "content": "When you are successfully logged-in, the app should run without errors, and you should be able to query Mobile Services and make updates to data.",
      "pos": [
        2517,
        2662
      ]
    }
  ],
  "content": "\n\n1. Open the project file default.js and in the **app.OnActivated** method overload, replace the last call to the **refreshTodoItems** method with the following code: \n\n        // Define a member variable for storing the signed-in user.\n        var userId = null;\n\n        // Request authentication from Mobile Services using a Facebook login.\n        var authenticate = function () {\n            return new WinJS.Promise(function (complete) {\n                // Change 'client' to the name of your MobileServiceClient instance.\n                // Sign-in using Facebook authentication.\n                client.login(\"facebook\").done(function (results) {\n                    userId = results.userId;\n                    refreshTodoItems();\n                    buttonLogin.disabled = true;\n                    var message = \"You are now signed in as: \" + userId;\n                    var dialog = new Windows.UI.Popups.MessageDialog(message);\n                    dialog.showAsync().done(complete);\n                }, function (error) {\n                    userId = null;\n                    var dialog = new Windows.UI.Popups\n                    .MessageDialog(error);\n                        //.MessageDialog(\"An error occurred during login\", \"Login Required\");\n                    dialog.showAsync().done(complete);\n                });\n            });\n        };\n\n        // Handle the sign in button click event.\n        buttonLogin.addEventListener(\"click\", function () {\n            authenticate();\n        });\n\n    If you are using an identity provider other than Facebook, change the value passed to the <strong>login</strong> method above to one of the following: _microsoftaccount_, _twitter_, _google_, or _windowsazureactivedirectory_.\n\n    >[AZURE.NOTE]If you registered your Windows Store app package information with Mobile Services, you should call the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=322050\" target=\"_blank\">login</a> method by supplying a value of <strong>true</strong> for the <em>useSingleSignOn</em> parameter. If you do not do this, your users will still be presented with a login prompt every time that the login method is called.\n\n2. In the Windows Store app project, open the default.html project file and add the following **button** element just before the element that defines the **save** button:\n\n        <button id=\"buttonLogin\" style=\"margin-left: 5px\">Sign in</button>\n\n3. Press the F5 key to run the app and sign into the app with your chosen identity provider. \n\n    When you are successfully logged-in, the app should run without errors, and you should be able to query Mobile Services and make updates to data."
}