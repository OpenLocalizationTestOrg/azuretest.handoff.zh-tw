<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Scheduler concepts, terms, and entities | Microsoft Azure</source>
          <target state="new">Scheduler concepts, terms, and entities | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Azure Scheduler concepts, terminology, and entity hierarchy, including jobs and job collections.</source>
          <target state="new">Azure Scheduler concepts, terminology, and entity hierarchy, including jobs and job collections.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Shows a comprehensive example of a scheduled job.</source>
          <target state="new">Shows a comprehensive example of a scheduled job.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Scheduler concepts, terminology, + entity hierarchy</source>
          <target state="new">Scheduler concepts, terminology, + entity hierarchy</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Scheduler entity hierarchy</source>
          <target state="new">Scheduler entity hierarchy</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following table describes the main resources exposed or used by the Scheduler API:</source>
          <target state="new">The following table describes the main resources exposed or used by the Scheduler API:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Resource</source>
          <target state="new">Resource</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Cloud service</source>
          <target state="new">Cloud service</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Conceptually, a cloud service represents an application.</source>
          <target state="new">Conceptually, a cloud service represents an application.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A subscription may have several cloud services.</source>
          <target state="new">A subscription may have several cloud services.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Job collection</source>
          <target state="new">Job collection</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A job collection contains a group of jobs and maintains settings, quotas, and throttles that are shared by jobs within the collection.</source>
          <target state="new">A job collection contains a group of jobs and maintains settings, quotas, and throttles that are shared by jobs within the collection.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A job collection is created by a subscription owner and groups jobs together based on usage or application boundaries.</source>
          <target state="new">A job collection is created by a subscription owner and groups jobs together based on usage or application boundaries.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It’s constrained to one region.</source>
          <target state="new">It’s constrained to one region.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It also allows the enforcement of quotas to constrain the usage of all jobs in that collection.</source>
          <target state="new">It also allows the enforcement of quotas to constrain the usage of all jobs in that collection.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The quotas include MaxJobs and MaxRecurrence.</source>
          <target state="new">The quotas include MaxJobs and MaxRecurrence.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Job</source>
          <target state="new">Job</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A job defines a single recurrent action, with simple or complex strategies for execution.</source>
          <target state="new">A job defines a single recurrent action, with simple or complex strategies for execution.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Actions may include HTTP requests or storage queue requests.</source>
          <target state="new">Actions may include HTTP requests or storage queue requests.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Job history</source>
          <target state="new">Job history</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A job history represents details for an execution of a job.</source>
          <target state="new">A job history represents details for an execution of a job.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It contains success vs. failure, as well as any response details.</source>
          <target state="new">It contains success vs. failure, as well as any response details.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Scheduler entity management</source>
          <target state="new">Scheduler entity management</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>At a high level, the scheduler and the service management API expose the following operations on the resources:</source>
          <target state="new">At a high level, the scheduler and the service management API expose the following operations on the resources:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Capability</source>
          <target state="new">Capability</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Description and URI address</source>
          <target state="new">Description and URI address</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Cloud service management</source>
          <target state="new">Cloud service management</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>GET, PUT, and DELETE support for creating and modifying cloud services</source>
          <target state="new">GET, PUT, and DELETE support for creating and modifying cloud services</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Job collection management</source>
          <target state="new">Job collection management</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>GET, PUT, and DELETE support for creating and modifying job collections and the jobs contained therein.</source>
          <target state="new">GET, PUT, and DELETE support for creating and modifying job collections and the jobs contained therein.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A job collection is a container for jobs and maps to quotas and shared settings.</source>
          <target state="new">A job collection is a container for jobs and maps to quotas and shared settings.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Examples of quotas, described later, are maximum number of jobs and smallest recurrence interval.</source>
          <target state="new">Examples of quotas, described later, are maximum number of jobs and smallest recurrence interval.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>PUT and DELETE: <ph id="ph1">`https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/jobcollections/{jobCollectionName}`</ph></source>
          <target state="new">PUT and DELETE: <ph id="ph1">`https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/jobcollections/{jobCollectionName}`</ph></target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>GET: <ph id="ph1">`https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/~/jobcollections/{jobCollectionName}`</ph></source>
          <target state="new">GET: <ph id="ph1">`https://management.core.windows.net/{subscriptionId}/cloudservices/{cloudServiceName}/resources/scheduler/~/jobcollections/{jobCollectionName}`</ph></target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Job management</source>
          <target state="new">Job management</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>GET, PUT, POST, PATCH, and DELETE support for creating and modifying jobs.</source>
          <target state="new">GET, PUT, POST, PATCH, and DELETE support for creating and modifying jobs.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>All jobs must belong to a job collection that already exists, so there is no implicit creation.</source>
          <target state="new">All jobs must belong to a job collection that already exists, so there is no implicit creation.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Job history management</source>
          <target state="new">Job history management</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>GET support for fetching 60 days of job execution history, such as job elapsed time and job execution results.</source>
          <target state="new">GET support for fetching 60 days of job execution history, such as job elapsed time and job execution results.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Adds query string parameter support for filtering based on state and status.</source>
          <target state="new">Adds query string parameter support for filtering based on state and status.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Job types</source>
          <target state="new">Job types</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>There are two types of jobs: HTTP jobs (including HTTPS jobs that support SSL) and storage queue jobs.</source>
          <target state="new">There are two types of jobs: HTTP jobs (including HTTPS jobs that support SSL) and storage queue jobs.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>HTTP jobs are ideal if you have an endpoint of an existing workload or service.</source>
          <target state="new">HTTP jobs are ideal if you have an endpoint of an existing workload or service.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can use storage queue jobs to post messages to storage queues, so those jobs are ideal for workloads that use storage queues.</source>
          <target state="new">You can use storage queue jobs to post messages to storage queues, so those jobs are ideal for workloads that use storage queues.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The "job" entity in detail</source>
          <target state="new">The "job" entity in detail</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>At a basic level, a scheduled job has several parts:</source>
          <target state="new">At a basic level, a scheduled job has several parts:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The action to perform when the job timer fires</source>
          <target state="new">The action to perform when the job timer fires</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>(Optional) The time to run the job</source>
          <target state="new">(Optional) The time to run the job</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>(Optional) When and how often to repeat the job</source>
          <target state="new">(Optional) When and how often to repeat the job</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>(Optional) An action to fire if the primary action fails</source>
          <target state="new">(Optional) An action to fire if the primary action fails</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Internally, a scheduled job also contains system-provided data such as the next scheduled execution time.</source>
          <target state="new">Internally, a scheduled job also contains system-provided data such as the next scheduled execution time.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following code provides a comprehensive example of a scheduled job.</source>
          <target state="new">The following code provides a comprehensive example of a scheduled job.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Details are provided in subsequent sections.</source>
          <target state="new">Details are provided in subsequent sections.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>As seen in the sample scheduled job above, a job definition has several parts:</source>
          <target state="new">As seen in the sample scheduled job above, a job definition has several parts:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Start time (“startTime”)</source>
          <target state="new">Start time (“startTime”)</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Action (“action”), which includes error action (“errorAction”)</source>
          <target state="new">Action (“action”), which includes error action (“errorAction”)</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Recurrence (“recurrence”)</source>
          <target state="new">Recurrence (“recurrence”)</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>State (“state”)</source>
          <target state="new">State (“state”)</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Status (“status”)</source>
          <target state="new">Status (“status”)</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Retry policy (“retryPolicy”)</source>
          <target state="new">Retry policy (“retryPolicy”)</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Let’s examine each of these in detail:</source>
          <target state="new">Let’s examine each of these in detail:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>startTime</source>
          <target state="new">startTime</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The "startTime” is the start time and allows the caller to specify a time zone offset on the wire in <bpt id="p1">[</bpt>ISO-8601 format<ept id="p1">](http://en.wikipedia.org/wiki/ISO_8601)</ept>.</source>
          <target state="new">The "startTime” is the start time and allows the caller to specify a time zone offset on the wire in <bpt id="p1">[</bpt>ISO-8601 format<ept id="p1">](http://en.wikipedia.org/wiki/ISO_8601)</ept>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>action and errorAction</source>
          <target state="new">action and errorAction</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The “action” is the action invoked on each occurrence and describes a type of service invocation.</source>
          <target state="new">The “action” is the action invoked on each occurrence and describes a type of service invocation.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The action is what will be executed on the provided schedule.</source>
          <target state="new">The action is what will be executed on the provided schedule.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Scheduler supports HTTP and storage queue actions.</source>
          <target state="new">Scheduler supports HTTP and storage queue actions.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The action in the example above is an HTTP action.</source>
          <target state="new">The action in the example above is an HTTP action.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Below is an example of a storage queue action:</source>
          <target state="new">Below is an example of a storage queue action:</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The “errorAction” is the error handler, the action invoked when the primary action fails.</source>
          <target state="new">The “errorAction” is the error handler, the action invoked when the primary action fails.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can use this variable to call an error-handling endpoint or send a user notification.</source>
          <target state="new">You can use this variable to call an error-handling endpoint or send a user notification.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This can be used for reaching a secondary endpoint in the case that the primary is not available (e.g., in the case of a disaster at the endpoint’s site) or can be used for notifying an error handling endpoint.</source>
          <target state="new">This can be used for reaching a secondary endpoint in the case that the primary is not available (e.g., in the case of a disaster at the endpoint’s site) or can be used for notifying an error handling endpoint.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Just like the primary action, the error action can be simple or composite logic based on other actions.</source>
          <target state="new">Just like the primary action, the error action can be simple or composite logic based on other actions.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To learn how to create a SAS token, refer to <bpt id="p1">[</bpt>Create and Use a Shared Access Signature<ept id="p1">](https://msdn.microsoft.com/library/azure/jj721951.aspx)</ept>.</source>
          <target state="new">To learn how to create a SAS token, refer to <bpt id="p1">[</bpt>Create and Use a Shared Access Signature<ept id="p1">](https://msdn.microsoft.com/library/azure/jj721951.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>recurrence</source>
          <target state="new">recurrence</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Recurrence has several parts:</source>
          <target state="new">Recurrence has several parts:</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Frequency: One of minute, hour, day, week, month, year</source>
          <target state="new">Frequency: One of minute, hour, day, week, month, year</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Interval: Interval at the given frequency for the recurrence</source>
          <target state="new">Interval: Interval at the given frequency for the recurrence</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Prescribed schedule: Specify minutes, hours, weekdays, months, and monthdays of the recurrence</source>
          <target state="new">Prescribed schedule: Specify minutes, hours, weekdays, months, and monthdays of the recurrence</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Count: Count of occurrences</source>
          <target state="new">Count: Count of occurrences</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>End time: No jobs will execute after the specified end time</source>
          <target state="new">End time: No jobs will execute after the specified end time</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A job is recurring if it has a recurring object specified in its JSON definition.</source>
          <target state="new">A job is recurring if it has a recurring object specified in its JSON definition.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If both count and endTime are specified, the completion rule that occurs first is honored.</source>
          <target state="new">If both count and endTime are specified, the completion rule that occurs first is honored.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>state</source>
          <target state="new">state</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The state of the job is one of four values: enabled, disabled, completed, or faulted.</source>
          <target state="new">The state of the job is one of four values: enabled, disabled, completed, or faulted.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can PUT or PATCH jobs so as to update them to the enabled or disabled state.</source>
          <target state="new">You can PUT or PATCH jobs so as to update them to the enabled or disabled state.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If a job has been completed or faulted, that is a final state that cannot be updated (though the job can still be DELETED).</source>
          <target state="new">If a job has been completed or faulted, that is a final state that cannot be updated (though the job can still be DELETED).</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An example of the state property is as follows:</source>
          <target state="new">An example of the state property is as follows:</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Completed and faulted jobs are deleted after 60 days.</source>
          <target state="new">Completed and faulted jobs are deleted after 60 days.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>status</source>
          <target state="new">status</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Once a Scheduler job has started, information will be returned about the current status of the job.</source>
          <target state="new">Once a Scheduler job has started, information will be returned about the current status of the job.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This object is not settable by the user—it’s set by the system.</source>
          <target state="new">This object is not settable by the user—it’s set by the system.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>However, it is included in the job object (rather than a separate linked resource) so that one can obtain the status of a job easily.</source>
          <target state="new">However, it is included in the job object (rather than a separate linked resource) so that one can obtain the status of a job easily.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Job status includes the time of the previous execution (if any), the time of the next scheduled execution (for in-progress jobs), and the execution count of the job.</source>
          <target state="new">Job status includes the time of the previous execution (if any), the time of the next scheduled execution (for in-progress jobs), and the execution count of the job.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>retryPolicy</source>
          <target state="new">retryPolicy</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If a Scheduler job fails, it is possible to specify a retry policy to determine whether and how the action is retried.</source>
          <target state="new">If a Scheduler job fails, it is possible to specify a retry policy to determine whether and how the action is retried.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This is determined by the <bpt id="p1">**</bpt>retryType<ept id="p1">**</ept> object—it is set to <bpt id="p2">**</bpt>none<ept id="p2">**</ept> if there is no retry policy, as shown above.</source>
          <target state="new">This is determined by the <bpt id="p1">**</bpt>retryType<ept id="p1">**</ept> object—it is set to <bpt id="p2">**</bpt>none<ept id="p2">**</ept> if there is no retry policy, as shown above.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Set it to <bpt id="p1">**</bpt>fixed<ept id="p1">**</ept> if there is a retry policy.</source>
          <target state="new">Set it to <bpt id="p1">**</bpt>fixed<ept id="p1">**</ept> if there is a retry policy.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To set a retry policy, two additional settings may be specified: a retry interval (<bpt id="p1">**</bpt>retryInterval<ept id="p1">**</ept>) and the number of retries (<bpt id="p2">**</bpt>retryCount<ept id="p2">**</ept>).</source>
          <target state="new">To set a retry policy, two additional settings may be specified: a retry interval (<bpt id="p1">**</bpt>retryInterval<ept id="p1">**</ept>) and the number of retries (<bpt id="p2">**</bpt>retryCount<ept id="p2">**</ept>).</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The retry interval, specified with the <bpt id="p1">**</bpt>retryInterval<ept id="p1">**</ept> object, is the interval between retries.</source>
          <target state="new">The retry interval, specified with the <bpt id="p1">**</bpt>retryInterval<ept id="p1">**</ept> object, is the interval between retries.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Its default value is 1 minute, its minimum value is 1 minute, and its maximum value is 18 months.</source>
          <target state="new">Its default value is 1 minute, its minimum value is 1 minute, and its maximum value is 18 months.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>It is defined in the ISO 8601 format.</source>
          <target state="new">It is defined in the ISO 8601 format.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Similarly, the value of the number of retries is specified with the <bpt id="p1">**</bpt>retryCount<ept id="p1">**</ept> object; it is the number of times a retry is attempted.</source>
          <target state="new">Similarly, the value of the number of retries is specified with the <bpt id="p1">**</bpt>retryCount<ept id="p1">**</ept> object; it is the number of times a retry is attempted.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Its default value is 5, and its maximum value is 20\.</source>
          <target state="new">Its default value is 5, and its maximum value is 20\.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Both <bpt id="p1">**</bpt>retryInterval<ept id="p1">**</ept> and <bpt id="p2">**</bpt>retryCount<ept id="p2">**</ept> are optional.</source>
          <target state="new">Both <bpt id="p1">**</bpt>retryInterval<ept id="p1">**</ept> and <bpt id="p2">**</bpt>retryCount<ept id="p2">**</ept> are optional.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>They are given their default values if <bpt id="p1">**</bpt>retryType<ept id="p1">**</ept> is set to <bpt id="p2">**</bpt>fixed<ept id="p2">**</ept> and no values are specified explicitly.</source>
          <target state="new">They are given their default values if <bpt id="p1">**</bpt>retryType<ept id="p1">**</ept> is set to <bpt id="p2">**</bpt>fixed<ept id="p2">**</ept> and no values are specified explicitly.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="new">See also</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>What is Scheduler?</source>
          <target state="new">What is Scheduler?</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Get started using Azure Scheduler in the Azure portal</source>
          <target state="new">Get started using Azure Scheduler in the Azure portal</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Plans and billing in Azure Scheduler</source>
          <target state="new">Plans and billing in Azure Scheduler</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>How to build complex schedules and advanced recurrence with Azure Scheduler</source>
          <target state="new">How to build complex schedules and advanced recurrence with Azure Scheduler</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Azure Scheduler REST API reference</source>
          <target state="new">Azure Scheduler REST API reference</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Azure Scheduler PowerShell cmdlets reference</source>
          <target state="new">Azure Scheduler PowerShell cmdlets reference</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Azure Scheduler high-availability and reliability</source>
          <target state="new">Azure Scheduler high-availability and reliability</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Azure Scheduler limits, defaults, and error codes</source>
          <target state="new">Azure Scheduler limits, defaults, and error codes</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Azure Scheduler outbound authentication</source>
          <target state="new">Azure Scheduler outbound authentication</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3eb8f76dd7377f3365a8e6932e29826733b728e</xliffext:olfilehash>
  </header>
</xliff>