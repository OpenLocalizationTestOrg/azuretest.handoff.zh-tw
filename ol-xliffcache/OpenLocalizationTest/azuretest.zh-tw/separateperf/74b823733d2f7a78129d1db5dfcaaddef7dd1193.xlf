<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Debugging your Service Fabric Application in Visual Studio using F5</source>
          <target state="new">Debugging your Service Fabric Application in Visual Studio using F5</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Improve the reliability and performance of your services using Visual Studio and a local development cluster.</source>
          <target state="new">Improve the reliability and performance of your services using Visual Studio and a local development cluster.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Debugging your Service Fabric Application in Visual Studio using F5</source>
          <target state="new">Debugging your Service Fabric Application in Visual Studio using F5</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can save time and money by deploying and debugging your Service Fabric application in a local computer development cluster.</source>
          <target state="new">You can save time and money by deploying and debugging your Service Fabric application in a local computer development cluster.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Visual Studio can deploy the application to the local cluster and automatically connect the debugger to all instances of your application.</source>
          <target state="new">Visual Studio can deploy the application to the local cluster and automatically connect the debugger to all instances of your application.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Start a local development cluster by following the steps in <bpt id="p1">[</bpt>setting up your Service Fabric development environment<ept id="p1">](service-fabric-get-started.md)</ept>.</source>
          <target state="new">Start a local development cluster by following the steps in <bpt id="p1">[</bpt>setting up your Service Fabric development environment<ept id="p1">](service-fabric-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> or click <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Start Debugging<ept id="p3">**</ept></source>
          <target state="new">Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> or click <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Start Debugging<ept id="p3">**</ept></target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Start debugging an application</source>
          <target state="new">Start debugging an application</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Set breakpoints in your code and step through the application by clicking on commands in the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu.</source>
          <target state="new">Set breakpoints in your code and step through the application by clicking on commands in the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Visual Studio attaches to all instances of your application.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Visual Studio attaches to all instances of your application.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>While stepping through code, breakpoints may get hit by multiple processes resulting in concurrent sessions.</source>
          <target state="new">While stepping through code, breakpoints may get hit by multiple processes resulting in concurrent sessions.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Try disabling the breakpoint(s) after being hit, making the breakpoint conditional on the thread ID, or using Diagnostic Events.</source>
          <target state="new">Try disabling the breakpoint(s) after being hit, making the breakpoint conditional on the thread ID, or using Diagnostic Events.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Diagnostic Events<ept id="p1">**</ept> window will automatically open to view diagnostic events in real time.</source>
          <target state="new">The <bpt id="p1">**</bpt>Diagnostic Events<ept id="p1">**</ept> window will automatically open to view diagnostic events in real time.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>View diagnostic events in real time</source>
          <target state="new">View diagnostic events in real time</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can also open the <bpt id="p1">**</bpt>Diagnostic Events<ept id="p1">**</ept> window in the Server Explorer.</source>
          <target state="new">You can also open the <bpt id="p1">**</bpt>Diagnostic Events<ept id="p1">**</ept> window in the Server Explorer.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept>, right click on <bpt id="p2">**</bpt>Service Fabric Cluster<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>View Diagnostic Events...<ept id="p3">**</ept></source>
          <target state="new">Under <bpt id="p1">**</bpt>Azure<ept id="p1">**</ept>, right click on <bpt id="p2">**</bpt>Service Fabric Cluster<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>View Diagnostic Events...<ept id="p3">**</ept></target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Open the diagnostic events window</source>
          <target state="new">Open the diagnostic events window</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The diagnostic events can be seen in the automatically generated <bpt id="p1">**</bpt>ServiceEventSource.cs<ept id="p1">**</ept> and are called from application code.</source>
          <target state="new">The diagnostic events can be seen in the automatically generated <bpt id="p1">**</bpt>ServiceEventSource.cs<ept id="p1">**</ept> and are called from application code.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Diagnostic Events<ept id="p1">**</ept> window supports filtering, pausing, and inspecting events in real time.</source>
          <target state="new">The <bpt id="p1">**</bpt>Diagnostic Events<ept id="p1">**</ept> window supports filtering, pausing, and inspecting events in real time.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The filter is a simple string search of the event message, including its contents.</source>
          <target state="new">The filter is a simple string search of the event message, including its contents.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Filter, pause and resume, or inspect events in real time</source>
          <target state="new">Filter, pause and resume, or inspect events in real time</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Debugging services is similar to debugging any other application.</source>
          <target state="new">Debugging services is similar to debugging any other application.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Breakpoints can be set normally through Visual Studio for easy debugging.</source>
          <target state="new">Breakpoints can be set normally through Visual Studio for easy debugging.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Even though Reliable Collections are replicated across multiple nodes, they still implement IEnumerable, which means you can use the Results View in Visual Studio while debugging to see what you've stored inside.</source>
          <target state="new">Even though Reliable Collections are replicated across multiple nodes, they still implement IEnumerable, which means you can use the Results View in Visual Studio while debugging to see what you've stored inside.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Simply set a break point anywhere in your code.</source>
          <target state="new">Simply set a break point anywhere in your code.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Start debugging an application</source>
          <target state="new">Start debugging an application</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
##</ph> Next steps

<bpt id="p1">- [</bpt><ept id="p1">Test a Service Fabric service](service-fabric-test-your-service-index.md)</ept>.</source>
          <target state="new"><ph id="ph1">
##</ph> Next steps

<bpt id="p1">- [</bpt><ept id="p1">Test a Service Fabric service](service-fabric-test-your-service-index.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">- [</bpt><ept id="p1">Managing your Service Fabric applications in Visual Studio](service-fabric-manage-application-in-visual-studio.md)</ept>.</source>
          <target state="new"><bpt id="p1">- [</bpt><ept id="p1">Managing your Service Fabric applications in Visual Studio](service-fabric-manage-application-in-visual-studio.md)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74b823733d2f7a78129d1db5dfcaaddef7dd1193</xliffext:olfilehash>
  </header>
</xliff>