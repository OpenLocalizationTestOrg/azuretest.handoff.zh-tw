{
  "nodes": [
    {
      "content": "Azure Cloud Services - Service Definition and Service Config - XML Certificate",
      "pos": [
        28,
        106
      ]
    },
    {
      "content": "Learn how to configure a certificate in the service definition and config files.",
      "pos": [
        126,
        206
      ]
    },
    {
      "content": "Configure the Service Definition and Config for a Certificate",
      "pos": [
        519,
        580
      ]
    },
    {
      "content": "Virtual Machines that are running your web or worker roles can have certificates associated with them.",
      "pos": [
        582,
        684
      ]
    },
    {
      "content": "Once you've uploaded your certificate into the portal, you need to configure the service definition (.csdef) and service config (.cscfg) files for the certificate.",
      "pos": [
        685,
        848
      ]
    },
    {
      "content": "The Virtual Machine can access the private key of the certificate after it has been installed.",
      "pos": [
        851,
        945
      ]
    },
    {
      "content": "Because of this, you may want to restrict access to processes with elevated permissions.",
      "pos": [
        946,
        1034
      ]
    },
    {
      "content": "Service definition example",
      "pos": [
        1040,
        1066
      ]
    },
    {
      "content": "Here is an example of a certificate defined in the service definition.",
      "pos": [
        1068,
        1138
      ]
    },
    {
      "content": "Permissions",
      "pos": [
        1623,
        1634
      ]
    },
    {
      "pos": [
        1635,
        1711
      ],
      "content": "Permissions (<ph id=\"ph1\">`permisionLevel`</ph> attribute) can be set to one of the following:"
    },
    {
      "content": "Permission Value",
      "pos": [
        1715,
        1731
      ]
    },
    {
      "content": "Description",
      "pos": [
        1735,
        1746
      ]
    },
    {
      "content": "limitedOrElevated",
      "pos": [
        1787,
        1804
      ]
    },
    {
      "pos": [
        1807,
        1867
      ],
      "content": "<bpt id=\"p1\">**</bpt>(Default)<ept id=\"p1\">**</ept> All role processes can access the private key."
    },
    {
      "content": "elevated",
      "pos": [
        1872,
        1880
      ]
    },
    {
      "content": "Only elevated processes can access the private key.",
      "pos": [
        1892,
        1943
      ]
    },
    {
      "content": "Service config example",
      "pos": [
        1949,
        1971
      ]
    },
    {
      "content": "Here is an example of a certificate defined in the service config.",
      "pos": [
        1973,
        2039
      ]
    },
    {
      "pos": [
        2282,
        2322
      ],
      "content": "<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> the matching <ph id=\"ph1\">`name`</ph> attributes."
    },
    {
      "content": "Next steps",
      "pos": [
        2327,
        2337
      ]
    },
    {
      "content": "Review the <bpt id=\"p1\">[</bpt>Service Definition XML<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/ee758711.aspx)</ept> schema and the <bpt id=\"p2\">[</bpt>Service Config XML<ept id=\"p2\">](https://msdn.microsoft.com/library/azure/ee758710.aspx)</ept> schema.",
      "pos": [
        2338,
        2529
      ]
    },
    {
      "content": "test",
      "pos": [
        2530,
        2534
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Azure Cloud Services - Service Definition and Service Config - XML Certificate\" \n    description=\"Learn how to configure a certificate in the service definition and config files.\" \n    services=\"cloud-services\" \n    documentationCenter=\".net\" \n    authors=\"Thraka\" \n    manager=\"timlt\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"cloud-services\" \n    ms.workload=\"tbd\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"07/24/2015\"\n    ms.author=\"adegeo\"/>\n\n\n\n# Configure the Service Definition and Config for a Certificate\n\nVirtual Machines that are running your web or worker roles can have certificates associated with them. Once you've uploaded your certificate into the portal, you need to configure the service definition (.csdef) and service config (.cscfg) files for the certificate. \n\nThe Virtual Machine can access the private key of the certificate after it has been installed. Because of this, you may want to restrict access to processes with elevated permissions. \n\n## Service definition example\n\nHere is an example of a certificate defined in the service definition.\n\n```xml\n<ServiceDefinition name=\"WindowsAzureProject4\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceDefinition\">\n  <WorkerRole name=\"MyWokerRole\"> <!-- or <WebRole name=\"MyWebRole\" vmsize=\"Small\"> -->\n    <ConfigurationSettings>\n      ...\n    </ConfigurationSettings>\n    <Certificates>\n      <Certificate name=\"MySSLCert\" storeLocation=\"LocalMachine\" storeName=\"My\" permissionLevel=\"elevated\" />\n    </Certificates>\n  </WorkerRole>\n</ServiceDefinition>\n```\n\n### Permissions\nPermissions (`permisionLevel` attribute) can be set to one of the following:\n\n| Permission Value  | Description |\n| ----------------  | ----------- |\n| limitedOrElevated | **(Default)** All role processes can access the private key. |\n| elevated          | Only elevated processes can access the private key.|\n\n## Service config example\n\nHere is an example of a certificate defined in the service config.\n\n```xml\n<Role name=\"MyWokerRole\">\n...\n    <Certificates>\n        <Certificate name=\"MySSLCert\" \n            thumbprint=\"9427befa18ec6865a9ebdc79d4c38de50e6316ff\" \n            thumbprintAlgorithm=\"sha1\" />\n    </Certificates>\n...\n</Role>\n```\n\n**Note** the matching `name` attributes.\n\n## Next steps\nReview the [Service Definition XML](https://msdn.microsoft.com/library/azure/ee758711.aspx) schema and the [Service Config XML](https://msdn.microsoft.com/library/azure/ee758710.aspx) schema.\ntest\n"
}