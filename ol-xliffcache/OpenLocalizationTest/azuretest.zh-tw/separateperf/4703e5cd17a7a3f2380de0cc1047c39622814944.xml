{
  "nodes": [
    {
      "content": "Enable Communication for Role Instances in Cloud Services | Microsoft Azure",
      "pos": [
        24,
        99
      ]
    },
    {
      "content": "Enable communication for role instances in azure",
      "pos": [
        374,
        422
      ]
    },
    {
      "content": "Cloud service roles communicate through internal and external connections.",
      "pos": [
        424,
        498
      ]
    },
    {
      "content": "External connections are called <bpt id=\"p1\">**</bpt>input endpoints<ept id=\"p1\">**</ept> while internal connections are called <bpt id=\"p2\">**</bpt>internal endpoints<ept id=\"p2\">**</ept>.",
      "pos": [
        499,
        612
      ]
    },
    {
      "content": "This topic describes how to modify the <bpt id=\"p1\">[</bpt>service definition<ept id=\"p1\">](cloud-services-model-and-package.md#csdef)</ept> to create endpoints.",
      "pos": [
        613,
        736
      ]
    },
    {
      "content": "Input endpoint",
      "pos": [
        742,
        756
      ]
    },
    {
      "content": "The input endpoint is used when you want to expose a port to the outside.",
      "pos": [
        757,
        830
      ]
    },
    {
      "content": "You specify the protocol type and the port of the endpoint which then applies for both the external and internal ports for the endpoint.",
      "pos": [
        831,
        967
      ]
    },
    {
      "content": "If you want, you can specify a different internal port for the endpoint with the <bpt id=\"p1\">[</bpt>localPort<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/gg557552.aspx#InputEndpoint)</ept> attribute.",
      "pos": [
        968,
        1141
      ]
    },
    {
      "pos": [
        1143,
        1221
      ],
      "content": "The input endpoint can use the following protocols: <bpt id=\"p1\">**</bpt>http, https, tcp, udp<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        1223,
        1352
      ],
      "content": "To create an input endpoint, add the <bpt id=\"p1\">**</bpt>InputEndpoint<ept id=\"p1\">**</ept> child element to the <bpt id=\"p2\">**</bpt>Endpoints<ept id=\"p2\">**</ept> element of either a web or worker role."
    },
    {
      "content": "Instance input endpoint",
      "pos": [
        1475,
        1498
      ]
    },
    {
      "content": "Instance input endpoints are similar to input endpoints but allows you map specific public-facing ports for each individual role instance by using port forwarding on the load balancer.",
      "pos": [
        1499,
        1683
      ]
    },
    {
      "content": "You can specify a single public-facing port, or a range of ports.",
      "pos": [
        1684,
        1749
      ]
    },
    {
      "pos": [
        1751,
        1827
      ],
      "content": "The instance input endpoint can only use <bpt id=\"p1\">**</bpt>tcp<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>udp<ept id=\"p2\">**</ept> as the protocol."
    },
    {
      "pos": [
        1829,
        1975
      ],
      "content": "To create an instance input endpoint, add the <bpt id=\"p1\">**</bpt>InstanceInputEndpoint<ept id=\"p1\">**</ept> child element to the <bpt id=\"p2\">**</bpt>Endpoints<ept id=\"p2\">**</ept> element of either a web or worker role."
    },
    {
      "content": "Internal endpoint",
      "pos": [
        2228,
        2245
      ]
    },
    {
      "content": "Internal endpoints are available for instance-to-instance communication.",
      "pos": [
        2246,
        2318
      ]
    },
    {
      "content": "The port is optional and if omitted, a dynamic port is assigned to the endpoint.",
      "pos": [
        2319,
        2399
      ]
    },
    {
      "content": "A port range can be used.",
      "pos": [
        2400,
        2425
      ]
    },
    {
      "content": "There is a limit of five internal endpoints per role.",
      "pos": [
        2426,
        2479
      ]
    },
    {
      "pos": [
        2481,
        2560
      ],
      "content": "The internal endpoint can use the following protocols: <bpt id=\"p1\">**</bpt>http, tcp, udp, any<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        2562,
        2703
      ],
      "content": "To create an internal input endpoint, add the <bpt id=\"p1\">**</bpt>InternalEndpoint<ept id=\"p1\">**</ept> child element to the <bpt id=\"p2\">**</bpt>Endpoints<ept id=\"p2\">**</ept> element of either a web or worker role."
    },
    {
      "content": "You can also use a port range.",
      "pos": [
        2810,
        2840
      ]
    },
    {
      "content": "Worker roles vs. Web roles",
      "pos": [
        3003,
        3029
      ]
    },
    {
      "content": "There is one minor difference with endpoints when working with both worker and web roles.",
      "pos": [
        3031,
        3120
      ]
    },
    {
      "content": "The web role must have at minimum a single input endpoint using the <bpt id=\"p1\">**</bpt>HTTP<ept id=\"p1\">**</ept> protocol.",
      "pos": [
        3121,
        3207
      ]
    },
    {
      "content": "Using the .NET SDK to access an endpoint",
      "pos": [
        3402,
        3442
      ]
    },
    {
      "content": "The Azure Managed Library provides methods for role instances to communicate at runtime.",
      "pos": [
        3443,
        3531
      ]
    },
    {
      "content": "From code running within a role instance, you can retrieve information about the existence of other role instances and their endpoints, as well as information about the current role instance.",
      "pos": [
        3532,
        3723
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> You can only retrieve information about role instances that are running in your cloud service and that define at least one internal endpoint.",
      "pos": [
        3727,
        3881
      ]
    },
    {
      "content": "You cannot obtain data about role instances running in a different service.",
      "pos": [
        3882,
        3957
      ]
    },
    {
      "content": "You can use the <bpt id=\"p1\">[</bpt>Instances<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.role.instances.aspx)</ept> property to retrieve instances of a role.",
      "pos": [
        3959,
        4128
      ]
    },
    {
      "content": "First use the <bpt id=\"p1\">[</bpt>CurrentRoleInstance<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.roleenvironment.currentroleinstance.aspx)</ept> to return a reference to the current role instance, and then use the <bpt id=\"p2\">[</bpt>Role<ept id=\"p2\">](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.roleinstance.role.aspx)</ept> property to return a reference to the role itself.",
      "pos": [
        4129,
        4515
      ]
    },
    {
      "content": "When you connect to a role instance programmatically through the .NET SDK, it's relatively easy to access the endpoint information.",
      "pos": [
        4517,
        4648
      ]
    },
    {
      "content": "For example, after you've already connected to a specific role environment, you can get the port of a specific endpoint with this code:",
      "pos": [
        4649,
        4784
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Instances<ept id=\"p1\">**</ept> property returns a collection of <bpt id=\"p2\">**</bpt>RoleInstance<ept id=\"p2\">**</ept> objects.",
      "pos": [
        4898,
        4974
      ]
    },
    {
      "content": "This collection always contains the current instance.",
      "pos": [
        4975,
        5028
      ]
    },
    {
      "content": "If the role does not define an internal endpoint, the collection includes the current instance but no other instances.",
      "pos": [
        5029,
        5147
      ]
    },
    {
      "content": "The number of role instances in the collection will always be 1 in the case where no internal endpoint is defined for the role.",
      "pos": [
        5148,
        5275
      ]
    },
    {
      "content": "If the role defines an internal endpoint, its instances are discoverable at runtime, and the number of instances in the collection will correspond to the number of instances specified for the role in the service configuration file.",
      "pos": [
        5276,
        5507
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The Azure Managed Library does not provide a means of determining the health of other role instances, but you can implement such health assessments yourself if your service needs this functionality.",
      "pos": [
        5511,
        5722
      ]
    },
    {
      "content": "You can use <bpt id=\"p1\">[</bpt>Azure Diagnostics<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/gg433048.aspx)</ept> to obtain information about running role instances.",
      "pos": [
        5723,
        5862
      ]
    },
    {
      "content": "To determine the port number for an internal endpoint on a role instance, you can use the <bpt id=\"p1\">[</bpt>InstanceEndpoints<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.roleinstance.instanceendpoints.aspx)</ept> property to return a Dictionary object that contains endpoint names and their corresponding IP addresses and ports.",
      "pos": [
        5864,
        6205
      ]
    },
    {
      "content": "The <bpt id=\"p1\">[</bpt>IPEndpoint<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.roleinstanceendpoint.ipendpoint.aspx)</ept> property returns the IP address and port for a specified endpoint.",
      "pos": [
        6206,
        6406
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>PublicIPEndpoint<ept id=\"p1\">**</ept> property returns the port for a load balanced endpoint.",
      "pos": [
        6407,
        6487
      ]
    },
    {
      "content": "The IP address portion of the <bpt id=\"p1\">**</bpt>PublicIPEndpoint<ept id=\"p1\">**</ept> property is not used.",
      "pos": [
        6488,
        6560
      ]
    },
    {
      "content": "Here is an example that iterates role instances.",
      "pos": [
        6562,
        6610
      ]
    },
    {
      "content": "Here is an example of a worker role that gets the endpoint exposed through the service definition and starts listening for connections.",
      "pos": [
        6968,
        7103
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.WARNING]</ph> This code will only work for a deployed service.",
      "pos": [
        7107,
        7171
      ]
    },
    {
      "content": "When running in the Azure Compute Emulator, service configuration elements that create direct port endpoints (<bpt id=\"p1\">**</bpt>InstanceInputEndpoint<ept id=\"p1\">**</ept> elements) are ignored.",
      "pos": [
        7172,
        7330
      ]
    },
    {
      "content": "Network traffic rules to control role communication",
      "pos": [
        9896,
        9947
      ]
    },
    {
      "content": "After you define internal endpoints, you can add network traffic rules (based on the endpoints that you created) to control how role instances can communicate with each other.",
      "pos": [
        9948,
        10123
      ]
    },
    {
      "content": "The following diagram shows some common scenarios for controlling role communication:",
      "pos": [
        10124,
        10209
      ]
    },
    {
      "content": "Network Traffic Rules Scenarios",
      "pos": [
        10213,
        10244
      ]
    },
    {
      "content": "The following code example shows role definitions for the roles shown in the previous diagram.",
      "pos": [
        10355,
        10449
      ]
    },
    {
      "content": "Each role definition includes at least one internal endpoint defined:",
      "pos": [
        10450,
        10519
      ]
    },
    {
      "pos": [
        11399,
        11536
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Restriction of communication between roles can occur with internal endpoints of both fixed and automatically assigned ports."
    },
    {
      "content": "By default, after an internal endpoint is defined, communication can flow from any role to the internal endpoint of a role without any restrictions.",
      "pos": [
        11538,
        11686
      ]
    },
    {
      "content": "To restrict communication, you must add a <bpt id=\"p1\">**</bpt>NetworkTrafficRules<ept id=\"p1\">**</ept> element to the <bpt id=\"p2\">**</bpt>ServiceDefinition<ept id=\"p2\">**</ept> element in the service definition file.",
      "pos": [
        11687,
        11829
      ]
    },
    {
      "content": "Scenario 1",
      "pos": [
        11835,
        11845
      ]
    },
    {
      "pos": [
        11846,
        11910
      ],
      "content": "Only allow network traffic from <bpt id=\"p1\">**</bpt>WebRole1<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>WorkerRole1<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Scenario 2",
      "pos": [
        12404,
        12414
      ]
    },
    {
      "pos": [
        12415,
        12500
      ],
      "content": "Only allows network traffic from <bpt id=\"p1\">**</bpt>WebRole1<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>WorkerRole1<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>WorkerRole2<ept id=\"p3\">**</ept>."
    },
    {
      "content": "Scenario 3",
      "pos": [
        13044,
        13054
      ]
    },
    {
      "pos": [
        13055,
        13160
      ],
      "content": "Only allows network traffic from <bpt id=\"p1\">**</bpt>WebRole1<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>WorkerRole1<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>WorkerRole1<ept id=\"p3\">**</ept> to <bpt id=\"p4\">**</bpt>WorkerRole2<ept id=\"p4\">**</ept>."
    },
    {
      "content": "Scenario 4",
      "pos": [
        13972,
        13982
      ]
    },
    {
      "pos": [
        13983,
        14121
      ],
      "content": "Only allows network traffic from <bpt id=\"p1\">**</bpt>WebRole1<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>WorkerRole1<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>WebRole1<ept id=\"p3\">**</ept> to <bpt id=\"p4\">**</bpt>WorkerRole2<ept id=\"p4\">**</ept>, and <bpt id=\"p5\">**</bpt>WorkerRole1<ept id=\"p5\">**</ept> to <bpt id=\"p6\">**</bpt>WorkerRole2<ept id=\"p6\">**</ept>."
    },
    {
      "pos": [
        15296,
        15424
      ],
      "content": "An XML schema reference for the elements used above can be found <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/gg557551.aspx)</ept>."
    },
    {
      "content": "Next steps",
      "pos": [
        15429,
        15439
      ]
    },
    {
      "content": "Read more about the Cloud Service <bpt id=\"p1\">[</bpt>model<ept id=\"p1\">](cloud-services-model-and-package.md)</ept>.",
      "pos": [
        15440,
        15519
      ]
    },
    {
      "content": "test",
      "pos": [
        15520,
        15524
      ]
    }
  ],
  "content": "<properties \npageTitle=\"Enable Communication for Role Instances in Cloud Services | Microsoft Azure\" \ndescription=\"\" \nservices=\"cloud-services\" \ndocumentationCenter=\"\" \nauthors=\"Thraka\" \nmanager=\"timlt\" \neditor=\"\"/>\n<tags \nms.service=\"cloud-services\" \nms.workload=\"tbd\" \nms.tgt_pltfrm=\"na\" \nms.devlang=\"na\" \nms.topic=\"article\" \nms.date=\"08/18/2015\" \nms.author=\"adegeo\"/>\n\n# Enable communication for role instances in azure\n\nCloud service roles communicate through internal and external connections. External connections are called **input endpoints** while internal connections are called **internal endpoints**. This topic describes how to modify the [service definition](cloud-services-model-and-package.md#csdef) to create endpoints.\n\n\n## Input endpoint\nThe input endpoint is used when you want to expose a port to the outside. You specify the protocol type and the port of the endpoint which then applies for both the external and internal ports for the endpoint. If you want, you can specify a different internal port for the endpoint with the [localPort](https://msdn.microsoft.com/library/azure/gg557552.aspx#InputEndpoint) attribute.\n\nThe input endpoint can use the following protocols: **http, https, tcp, udp**.\n\nTo create an input endpoint, add the **InputEndpoint** child element to the **Endpoints** element of either a web or worker role.\n\n```xml\n<Endpoints>\n  <InputEndpoint name=\"StandardWeb\" protocol=\"http\" port=\"80\" localPort=\"80\" />\n</Endpoints> \n```\n\n## Instance input endpoint\nInstance input endpoints are similar to input endpoints but allows you map specific public-facing ports for each individual role instance by using port forwarding on the load balancer. You can specify a single public-facing port, or a range of ports.\n\nThe instance input endpoint can only use **tcp** or **udp** as the protocol.\n\nTo create an instance input endpoint, add the **InstanceInputEndpoint** child element to the **Endpoints** element of either a web or worker role.\n\n```xml\n<Endpoints>\n  <InstanceInputEndpoint name=\"Endpoint2\" protocol=\"tcp\" localPort=\"10100\">\n    <AllocatePublicPortFrom>\n      <FixedPortRange max=\"10109\" min=\"10105\" />\n    </AllocatePublicPortFrom>\n  </InstanceInputEndpoint>\n</Endpoints>\n```\n\n## Internal endpoint\nInternal endpoints are available for instance-to-instance communication. The port is optional and if omitted, a dynamic port is assigned to the endpoint. A port range can be used. There is a limit of five internal endpoints per role.\n\nThe internal endpoint can use the following protocols: **http, tcp, udp, any**.\n\nTo create an internal input endpoint, add the **InternalEndpoint** child element to the **Endpoints** element of either a web or worker role.\n\n```xml\n<Endpoints>\n  <InternalEndpoint name=\"Endpoint3\" protocol=\"any\" port=\"8999\" />\n</Endpoints> \n```\n\nYou can also use a port range.\n\n```xml\n<Endpoints>\n  <InternalEndpoint name=\"Endpoint3\" protocol=\"any\">\n    <FixedPortRange max=\"8995\" min=\"8999\" />\n  </InternalEndpoint>\n</Endpoints>\n```\n\n\n## Worker roles vs. Web roles\n\nThere is one minor difference with endpoints when working with both worker and web roles. The web role must have at minimum a single input endpoint using the **HTTP** protocol.\n\n\n```xml\n<Endpoints>\n  <InputEndpoint name=\"StandardWeb\" protocol=\"http\" port=\"80\" localPort=\"80\" />\n  <!-- more endpoints may be declared after the first InputEndPoint -->\n</Endpoints>\n```\n\n## Using the .NET SDK to access an endpoint\nThe Azure Managed Library provides methods for role instances to communicate at runtime. From code running within a role instance, you can retrieve information about the existence of other role instances and their endpoints, as well as information about the current role instance.\n\n> [AZURE.NOTE] You can only retrieve information about role instances that are running in your cloud service and that define at least one internal endpoint. You cannot obtain data about role instances running in a different service.\n\nYou can use the [Instances](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.role.instances.aspx) property to retrieve instances of a role. First use the [CurrentRoleInstance](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.roleenvironment.currentroleinstance.aspx) to return a reference to the current role instance, and then use the [Role](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.roleinstance.role.aspx) property to return a reference to the role itself.\n\nWhen you connect to a role instance programmatically through the .NET SDK, it's relatively easy to access the endpoint information. For example, after you've already connected to a specific role environment, you can get the port of a specific endpoint with this code:\n\n```csharp\nint port = RoleEnvironment.CurrentRoleInstance.InstanceEndpoints[\"StandardWeb\"].IPEndpoint.Port;\n```\n\nThe **Instances** property returns a collection of **RoleInstance** objects. This collection always contains the current instance. If the role does not define an internal endpoint, the collection includes the current instance but no other instances. The number of role instances in the collection will always be 1 in the case where no internal endpoint is defined for the role. If the role defines an internal endpoint, its instances are discoverable at runtime, and the number of instances in the collection will correspond to the number of instances specified for the role in the service configuration file.\n\n> [AZURE.NOTE] The Azure Managed Library does not provide a means of determining the health of other role instances, but you can implement such health assessments yourself if your service needs this functionality. You can use [Azure Diagnostics](https://msdn.microsoft.com/library/azure/gg433048.aspx) to obtain information about running role instances.\n\nTo determine the port number for an internal endpoint on a role instance, you can use the [InstanceEndpoints](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.roleinstance.instanceendpoints.aspx) property to return a Dictionary object that contains endpoint names and their corresponding IP addresses and ports. The [IPEndpoint](https://msdn.microsoft.com/library/azure/microsoft.windowsazure.serviceruntime.roleinstanceendpoint.ipendpoint.aspx) property returns the IP address and port for a specified endpoint. The **PublicIPEndpoint** property returns the port for a load balanced endpoint. The IP address portion of the **PublicIPEndpoint** property is not used.\n\nHere is an example that iterates role instances.\n\n```csharp\nforeach (RoleInstance roleInst in RoleEnvironment.CurrentRoleInstance.Role.Instances)\n{\n    Trace.WriteLine(\"Instance ID: \" + roleInst.Id);\n    foreach (RoleInstanceEndpoint roleInstEndpoint in roleInst.InstanceEndpoints.Values)\n    {\n        Trace.WriteLine(\"Instance endpoint IP address and port: \" + roleInstEndpoint.IPEndpoint);\n    }\n}\n```\n\nHere is an example of a worker role that gets the endpoint exposed through the service definition and starts listening for connections.\n\n> [AZURE.WARNING] This code will only work for a deployed service. When running in the Azure Compute Emulator, service configuration elements that create direct port endpoints (**InstanceInputEndpoint** elements) are ignored.\n\n```csharp\nusing System;\nusing System.Diagnostics;\nusing System.Linq;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Threading;\nusing Microsoft.WindowsAzure;\nusing Microsoft.WindowsAzure.Diagnostics;\nusing Microsoft.WindowsAzure.ServiceRuntime;\nusing Microsoft.WindowsAzure.StorageClient;\n\nnamespace WorkerRole1\n{\n  public class WorkerRole : RoleEntryPoint\n  {\n    public override void Run()\n    {\n      try\n      {\n        // Initialize method-wide variables\n        var epName = \"Endpoint1\";\n        var roleInstance = RoleEnvironment.CurrentRoleInstance;\n        \n        // Identify direct communication port\n        var myPublicEp = roleInstance.InstanceEndpoints[epName].PublicIPEndpoint;\n        Trace.TraceInformation(\"IP:{0}, Port:{1}\", myPublicEp.Address, myPublicEp.Port);\n\n        // Identify public endpoint\n        var myInternalEp = roleInstance.InstanceEndpoints[epName].IPEndpoint;\n                \n        // Create socket listener\n        var listener = new Socket(\n          myInternalEp.AddressFamily, SocketType.Stream, ProtocolType.Tcp);\n                \n        // Bind socket listener to internal endpoint and listen\n        listener.Bind(myInternalEp);\n        listener.Listen(10);\n        Trace.TraceInformation(\"Listening on IP:{0},Port: {1}\",\n          myInternalEp.Address, myInternalEp.Port);\n\n        while (true)\n        {\n          // Block the thread and wait for a client request\n          Socket handler = listener.Accept();\n          Trace.TraceInformation(\"Client request received.\");\n\n          // Define body of socket handler\n          var handlerThread = new Thread(\n            new ParameterizedThreadStart(h =>\n            {\n              var socket = h as Socket;\n              Trace.TraceInformation(\"Local:{0} Remote{1}\",\n                socket.LocalEndPoint, socket.RemoteEndPoint);\n\n              // Shut down and close socket\n              socket.Shutdown(SocketShutdown.Both);\n              socket.Close();\n            }\n          ));\n\n          // Start socket handler on new thread\n          handlerThread.Start(handler);\n        }\n      }\n      catch (Exception e)\n      {\n        Trace.TraceError(\"Caught exception in run. Details: {0}\", e);\n      }\n    }\n\n    public override bool OnStart()\n    {\n      // Set the maximum number of concurrent connections \n      ServicePointManager.DefaultConnectionLimit = 12;\n\n      // For information on handling configuration changes\n      // see the MSDN topic at http://go.microsoft.com/fwlink/?LinkId=166357.\n      return base.OnStart();\n    }\n  }\n}\n```\n\n## Network traffic rules to control role communication\nAfter you define internal endpoints, you can add network traffic rules (based on the endpoints that you created) to control how role instances can communicate with each other. The following diagram shows some common scenarios for controlling role communication:\n\n![Network Traffic Rules Scenarios](./media/cloud-services-enable-communication-role-instances/scenarios.png \"Network Traffic Rules Scenarios\")\n\nThe following code example shows role definitions for the roles shown in the previous diagram. Each role definition includes at least one internal endpoint defined:\n\n```xml\n<ServiceDefinition name=\"MyService\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceDefinition\">\n  <WebRole name=\"WebRole1\" vmsize=\"Medium\">\n    <Sites>\n      <Site name=\"Web\">\n        <Bindings>\n          <Binding name=\"HttpIn\" endpointName=\"HttpIn\" />\n        </Bindings>\n      </Site>\n    </Sites>\n    <Endpoints>\n      <InputEndpoint name=\"HttpIn\" protocol=\"http\" port=\"80\" />\n      <InternalEndpoint name=\"InternalTCP1\" protocol=\"tcp\" />\n    </Endpoints>\n  </WebRole>\n  <WorkerRole name=\"WorkerRole1\">\n    <Endpoints>\n      <InternalEndpoint name=\"InternalTCP2\" protocol=\"tcp\" />\n    </Endpoints>\n  </WorkerRole>\n  <WorkerRole name=\"WorkerRole2\">\n    <Endpoints>\n      <InternalEndpoint name=\"InternalTCP3\" protocol=\"tcp\" />\n      <InternalEndpoint name=\"InternalTCP4\" protocol=\"tcp\" />\n    </Endpoints>\n  </WorkerRole>\n</ServiceDefinition>\n```\n\n> [AZURE.NOTE] Restriction of communication between roles can occur with internal endpoints of both fixed and automatically assigned ports.\n\nBy default, after an internal endpoint is defined, communication can flow from any role to the internal endpoint of a role without any restrictions. To restrict communication, you must add a **NetworkTrafficRules** element to the **ServiceDefinition** element in the service definition file.\n\n### Scenario 1\nOnly allow network traffic from **WebRole1** to **WorkerRole1**.\n\n```xml\n<ServiceDefinition name=\"MyService\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceDefinition\">\n  <NetworkTrafficRules>\n    <OnlyAllowTrafficTo>\n      <Destinations>\n        <RoleEndpoint endpointName=\"InternalTCP2\" roleName=\"WorkerRole1\"/>\n      </Destinations>\n      <AllowAllTraffic/>\n      <WhenSource matches=\"AnyRule\">\n        <FromRole roleName=\"WebRole1\"/>\n      </WhenSource>\n    </OnlyAllowTrafficTo>\n  </NetworkTrafficRules>\n</ServiceDefinition>\n```\n\n### Scenario 2\nOnly allows network traffic from **WebRole1** to **WorkerRole1** and **WorkerRole2**.\n\n```xml\n<ServiceDefinition name=\"MyService\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceDefinition\">\n  <NetworkTrafficRules>\n    <OnlyAllowTrafficTo>\n      <Destinations>\n        <RoleEndpoint endpointName=\"InternalTCP2\" roleName=\"WorkerRole1\"/>\n        <RoleEndpoint endpointName=\"InternalTCP3\" roleName=\"WorkerRole2\"/>\n      </Destinations>\n      <WhenSource matches=\"AnyRule\">\n        <FromRole roleName=\"WebRole1\"/>\n      </WhenSource>\n    </OnlyAllowTrafficTo>\n  </NetworkTrafficRules>\n</ServiceDefinition>\n```\n\n### Scenario 3\nOnly allows network traffic from **WebRole1** to **WorkerRole1**, and **WorkerRole1** to **WorkerRole2**.\n\n```xml\n<ServiceDefinition name=\"MyService\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceDefinition\">\n  <NetworkTrafficRules>\n    <OnlyAllowTrafficTo>\n      <Destinations>\n        <RoleEndpoint endpointName=\"InternalTCP2\" roleName=\"WorkerRole1\"/>\n      </Destinations>\n      <AllowAllTraffic/>\n      <WhenSource matches=\"AnyRule\">\n        <FromRole roleName=\"WebRole1\"/>\n      </WhenSource>\n    </OnlyAllowTrafficTo>\n  </NetworkTrafficRules>\n  <NetworkTrafficRules>\n    <OnlyAllowTrafficTo>\n      <Destinations>\n        <RoleEndpoint endpointName=\"InternalTCP3\" roleName=\"WorkerRole2\"/>\n      </Destinations>\n      <WhenSource matches=\"AnyRule\">\n        <FromRole roleName=\"WorkerRole1\"/>\n      </WhenSource>\n    </OnlyAllowTrafficTo>\n  </NetworkTrafficRules>\n</ServiceDefinition>\n```\n\n### Scenario 4\nOnly allows network traffic from **WebRole1** to **WorkerRole1**, **WebRole1** to **WorkerRole2**, and **WorkerRole1** to **WorkerRole2**.\n\n```xml\n<ServiceDefinition name=\"MyService\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceDefinition\">\n  <NetworkTrafficRules>\n    <OnlyAllowTrafficTo>\n      <Destinations>\n        <RoleEndpoint endpointName=\"InternalTCP2\" roleName=\"WorkerRole1\"/>\n      </Destinations>\n      <AllowAllTraffic/>\n      <WhenSource matches=\"AnyRule\">\n        <FromRole roleName=\"WebRole1\"/>\n      </WhenSource>\n    </OnlyAllowTrafficTo>\n  </NetworkTrafficRules>\n  <NetworkTrafficRules>\n    <OnlyAllowTrafficTo >\n      <Destinations>\n        <RoleEndpoint endpointName=\"InternalTCP3\" roleName=\"WorkerRole2\"/>\n      </Destinations>\n      <AllowAllTraffic/>\n      <WhenSource matches=\"AnyRule\">\n        <FromRole roleName=\"WorkerRole1\"/>\n      </WhenSource>\n    </OnlyAllowTrafficTo>\n  </NetworkTrafficRules>\n  <NetworkTrafficRules>\n    <OnlyAllowTrafficTo >\n      <Destinations>\n        <RoleEndpoint endpointName=\"InternalTCP4\" roleName=\"WorkerRole2\"/>\n      </Destinations>\n      <AllowAllTraffic/>\n      <WhenSource matches=\"AnyRule\">\n        <FromRole roleName=\"WebRole1\"/>\n      </WhenSource>\n    </OnlyAllowTrafficTo>\n  </NetworkTrafficRules>\n</ServiceDefinition>\n```\n\nAn XML schema reference for the elements used above can be found [here](https://msdn.microsoft.com/library/azure/gg557551.aspx).\n\n## Next steps\nRead more about the Cloud Service [model](cloud-services-model-and-package.md).\ntest\n"
}