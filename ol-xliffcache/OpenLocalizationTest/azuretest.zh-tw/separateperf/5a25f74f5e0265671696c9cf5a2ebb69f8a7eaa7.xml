{
  "nodes": [
    {
      "content": "How to use In-Role Cache (.NET) | Microsoft Azure",
      "pos": [
        28,
        77
      ]
    },
    {
      "content": "Learn how to use Azure In-Role Cache.",
      "pos": [
        97,
        134
      ]
    },
    {
      "content": "The samples are written in C# code and use the .NET API.",
      "pos": [
        135,
        191
      ]
    },
    {
      "content": "How to Use In-Role Cache for Azure Cache",
      "pos": [
        497,
        537
      ]
    },
    {
      "content": "This guide shows you how to get started using",
      "pos": [
        539,
        584
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>In-Role Cache for Azure Cache<ept id=\"p1\">**</ept>.",
      "pos": [
        586,
        620
      ]
    },
    {
      "content": "The samples are written in C\\# code and",
      "pos": [
        621,
        660
      ]
    },
    {
      "content": "use the .NET API.",
      "pos": [
        661,
        678
      ]
    },
    {
      "content": "The scenarios covered include <bpt id=\"p1\">**</bpt>configuring a cache cluster<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>configuring cache clients<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>adding and removing\nobjects from the cache, storing ASP.NET session state in the cache<ept id=\"p3\">**</ept>,",
      "pos": [
        679,
        864
      ]
    },
    {
      "content": "and <bpt id=\"p1\">**</bpt>enabling ASP.NET page output caching using the cache<ept id=\"p1\">**</ept>.",
      "pos": [
        865,
        926
      ]
    },
    {
      "content": "For more",
      "pos": [
        927,
        935
      ]
    },
    {
      "content": "information on using In-Role Cache, refer to the [Next Steps][] section.",
      "pos": [
        936,
        1008
      ]
    },
    {
      "pos": [
        1011,
        1154
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> For guidance on choosing the right Azure Cache offering for your application, see [Which Azure Cache offering is right for me?][]."
    },
    {
      "content": "What is In-Role Cache?",
      "pos": [
        1182,
        1204
      ]
    },
    {
      "content": "In-Role Cache provides a caching layer to your Azure applications.",
      "pos": [
        1206,
        1272
      ]
    },
    {
      "content": "Caching increases performance by temporarily storing information in-memory from",
      "pos": [
        1273,
        1352
      ]
    },
    {
      "content": "other backend sources, and can reduce the costs associated with database",
      "pos": [
        1353,
        1425
      ]
    },
    {
      "content": "transactions in the cloud.",
      "pos": [
        1426,
        1452
      ]
    },
    {
      "content": "In-Role Cache includes the following",
      "pos": [
        1453,
        1489
      ]
    },
    {
      "content": "features:",
      "pos": [
        1490,
        1499
      ]
    },
    {
      "pos": [
        1505,
        1668
      ],
      "content": "Pre-built ASP.NET providers for session state and page output\ncaching, enabling acceleration of web applications without having to\nmodify application code.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Pre-built ASP.NET providers for session state and page output",
          "pos": [
            0,
            61
          ]
        },
        {
          "content": "caching, enabling acceleration of web applications without having to",
          "pos": [
            62,
            130
          ]
        },
        {
          "content": "modify application code.",
          "pos": [
            131,
            155
          ]
        }
      ]
    },
    {
      "pos": [
        1673,
        1767
      ],
      "content": "Caches any serializable managed object - for example: CLR objects, rows, XML,\nbinary data.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Caches any serializable managed object - for example: CLR objects, rows, XML,",
          "pos": [
            0,
            77
          ]
        },
        {
          "content": "binary data.",
          "pos": [
            78,
            90
          ]
        }
      ]
    },
    {
      "pos": [
        1772,
        1852
      ],
      "content": "Consistent development model across both Azure and Windows\nServer AppFabric.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Consistent development model across both Azure and Windows",
          "pos": [
            0,
            58
          ]
        },
        {
          "content": "Server AppFabric.",
          "pos": [
            59,
            76
          ]
        }
      ]
    },
    {
      "content": "In-Role Cache provides a way to perform caching by using a portion of the memory of the virtual machines that host the role instances in your Azure cloud services (also known as hosted services).",
      "pos": [
        1854,
        2049
      ]
    },
    {
      "content": "You have greater flexibility in terms of deployment options, the caches can be very large in size and have no cache specific quota restrictions.",
      "pos": [
        2050,
        2194
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Starting with Azure SDK 2.6, In-Role Cache is using Microsoft Azure Storage SDK version 4.3.",
      "pos": [
        2197,
        2302
      ]
    },
    {
      "content": "In previous versions of the Azure SDK, In-Role Cache used Azure Storage SDK 1.7.",
      "pos": [
        2303,
        2383
      ]
    },
    {
      "content": "Applications using In-Role Cache with versions of the Azure SDK before 2.6 should migrate to Azure SDK 2.6 before Azure Storage version 2011-08-18 is decommissioned on December 9th, 2015.",
      "pos": [
        2384,
        2571
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>Azure SDK 2.6 Release Notes - In-Role Cache<ept id=\"p1\">](../azure-sdk-dotnet-release-notes-2_6.md#in-role-cache-updates)</ept> and <bpt id=\"p2\">[</bpt>Microsoft Azure Storage Service Version Removal<ept id=\"p2\">](http://azure.microsoft.com/blog/2014/08/04/microsoft-azure-storage-service-version-removal/)</ept>.",
      "pos": [
        2572,
        2855
      ]
    },
    {
      "content": "Caching on role instances has the following advantages:",
      "pos": [
        2857,
        2912
      ]
    },
    {
      "content": "Pay no premium for caching.",
      "pos": [
        2918,
        2945
      ]
    },
    {
      "content": "You pay only for the compute resources that host the cache.",
      "pos": [
        2946,
        3005
      ]
    },
    {
      "content": "Eliminates cache quotas and throttling.",
      "pos": [
        3010,
        3049
      ]
    },
    {
      "content": "Offers greater control and isolation.",
      "pos": [
        3054,
        3091
      ]
    },
    {
      "content": "Improved performance.",
      "pos": [
        3097,
        3118
      ]
    },
    {
      "content": "Automatically sizes caches when roles are scaled in or out.",
      "pos": [
        3123,
        3182
      ]
    },
    {
      "content": "Effectively scales the memory that is available for caching up or down when role instances are added or removed.",
      "pos": [
        3183,
        3295
      ]
    },
    {
      "content": "Provides full-fidelity development time debugging.",
      "pos": [
        3300,
        3350
      ]
    },
    {
      "content": "Supports the memcache protocol.",
      "pos": [
        3356,
        3387
      ]
    },
    {
      "content": "In addition, caching on role instances offers these configurable options:",
      "pos": [
        3389,
        3462
      ]
    },
    {
      "content": "Configure a dedicated role for caching, or co-locate caching on existing roles.",
      "pos": [
        3468,
        3547
      ]
    },
    {
      "content": "Make your cache available to multiple clients in the same cloud service deployment.",
      "pos": [
        3553,
        3636
      ]
    },
    {
      "content": "Create multiple named caches with different properties.",
      "pos": [
        3641,
        3696
      ]
    },
    {
      "content": "Optionally configure high availability on individual caches.",
      "pos": [
        3701,
        3761
      ]
    },
    {
      "content": "Use expanded caching capabilities such as regions, tagging, and notifications.",
      "pos": [
        3766,
        3844
      ]
    },
    {
      "content": "This guide provides an overview of getting started with In-Role Cache.",
      "pos": [
        3846,
        3916
      ]
    },
    {
      "content": "For more detailed information on these features that are beyond the scope of this getting started guide, see [Overview of In-Role Cache][].",
      "pos": [
        3917,
        4056
      ]
    },
    {
      "content": "Getting Started with In-Role Cache",
      "pos": [
        4112,
        4146
      ]
    },
    {
      "content": "In-Role Cache provides a way to enable caching using the memory that is on the virtual machines that host your role instances.",
      "pos": [
        4148,
        4274
      ]
    },
    {
      "content": "The role instances that host your caches are known as a <bpt id=\"p1\">**</bpt>cache cluster<ept id=\"p1\">**</ept>.",
      "pos": [
        4275,
        4349
      ]
    },
    {
      "content": "There are two deployment topologies for caching on role instances:",
      "pos": [
        4350,
        4416
      ]
    },
    {
      "pos": [
        4422,
        4503
      ],
      "content": "<bpt id=\"p1\">**</bpt>Dedicated Role<ept id=\"p1\">**</ept> caching - The role instances are used exclusively for caching."
    },
    {
      "pos": [
        4508,
        4622
      ],
      "content": "<bpt id=\"p1\">**</bpt>Co-located Role<ept id=\"p1\">**</ept> caching - The cache shares the VM resources (bandwidth, CPU, and memory) with the application."
    },
    {
      "content": "To use caching on role instances, you need to configure a cache cluster, and then configure the cache clients so they can access the cache cluster.",
      "pos": [
        4624,
        4771
      ]
    },
    {
      "content": "[Configure the cache cluster][]",
      "pos": [
        4777,
        4808
      ]
    },
    {
      "content": "[Configure the cache clients][]",
      "pos": [
        4813,
        4844
      ]
    },
    {
      "content": "Configure the cache cluster",
      "pos": [
        4879,
        4906
      ]
    },
    {
      "content": "To configure a <bpt id=\"p1\">**</bpt>Co-located Role<ept id=\"p1\">**</ept> cache cluster, select the role in which you wish to host the cache cluster.",
      "pos": [
        4908,
        5018
      ]
    },
    {
      "content": "Right-click the role properties in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> and choose <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept>.",
      "pos": [
        5019,
        5102
      ]
    },
    {
      "content": "RoleCache1",
      "pos": [
        5106,
        5116
      ]
    },
    {
      "content": "Switch to the <bpt id=\"p1\">**</bpt>Caching<ept id=\"p1\">**</ept> tab, check the <bpt id=\"p2\">**</bpt>Enable Caching<ept id=\"p2\">**</ept> checkbox, and specify the desired caching options.",
      "pos": [
        5131,
        5241
      ]
    },
    {
      "content": "When caching is enabled in a <bpt id=\"p1\">**</bpt>Worker Role<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>ASP.NET Web Role<ept id=\"p2\">**</ept>, the default configuration is <bpt id=\"p3\">**</bpt>Co-located Role<ept id=\"p3\">**</ept> caching with 30% of the memory of the role instances allocated for caching.",
      "pos": [
        5242,
        5436
      ]
    },
    {
      "content": "A default cache is automatically configured, and additional named caches can be created if desired, and these caches will share the allocated memory.",
      "pos": [
        5437,
        5586
      ]
    },
    {
      "content": "RoleCache2",
      "pos": [
        5590,
        5600
      ]
    },
    {
      "pos": [
        5615,
        5708
      ],
      "content": "To configure a <bpt id=\"p1\">**</bpt>Dedicated Role<ept id=\"p1\">**</ept> cache cluster, add a <bpt id=\"p2\">**</bpt>Cache Worker Role<ept id=\"p2\">**</ept> to your project."
    },
    {
      "content": "RoleCache7",
      "pos": [
        5712,
        5722
      ]
    },
    {
      "pos": [
        5737,
        5845
      ],
      "content": "When a <bpt id=\"p1\">**</bpt>Cache Worker Role<ept id=\"p1\">**</ept> is added to a project, the default configuration is <bpt id=\"p2\">**</bpt>Dedicated Role<ept id=\"p2\">**</ept> caching."
    },
    {
      "content": "RoleCache8",
      "pos": [
        5849,
        5859
      ]
    },
    {
      "content": "Once caching is enabled, the cache cluster storage account can be configured.",
      "pos": [
        5874,
        5951
      ]
    },
    {
      "content": "In-Role Cache requires an Azure storage account.",
      "pos": [
        5952,
        6000
      ]
    },
    {
      "content": "This storage account is used to hold configuration data about the cache cluster that is accessed from all virtual machines that make up the cache cluster.",
      "pos": [
        6001,
        6155
      ]
    },
    {
      "content": "This storage account is specified on the <bpt id=\"p1\">**</bpt>Caching<ept id=\"p1\">**</ept> tab of the cache cluster role property page, just above the <bpt id=\"p2\">**</bpt>Named Cache Settings<ept id=\"p2\">**</ept>.",
      "pos": [
        6156,
        6294
      ]
    },
    {
      "content": "RoleCache10",
      "pos": [
        6298,
        6309
      ]
    },
    {
      "content": "If this storage account is not configured the roles will fail to start.",
      "pos": [
        6326,
        6397
      ]
    },
    {
      "content": "The size of the cache is determined by a combination of the VM size of the role, the instance count of the role, and whether the cache cluster is configured as a dedicated role or co-located role cache cluster.",
      "pos": [
        6400,
        6610
      ]
    },
    {
      "content": "This section provides a simplified overview on configuring the cache size.",
      "pos": [
        6613,
        6687
      ]
    },
    {
      "content": "For more information on cache size and other capacity planning considerations, see [In-Role Cache Capacity Planning Considerations][].",
      "pos": [
        6688,
        6822
      ]
    },
    {
      "pos": [
        6824,
        6979
      ],
      "content": "To configure the virtual machine size and the number of role instances, right-click the role properties in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> and choose <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept>."
    },
    {
      "content": "RoleCache1",
      "pos": [
        6983,
        6993
      ]
    },
    {
      "content": "Switch to the <bpt id=\"p1\">**</bpt>Configuration<ept id=\"p1\">**</ept> tab.",
      "pos": [
        7008,
        7044
      ]
    },
    {
      "content": "The default <bpt id=\"p1\">**</bpt>Instance count<ept id=\"p1\">**</ept> is 1, and the default <bpt id=\"p2\">**</bpt>VM size<ept id=\"p2\">**</ept> is <bpt id=\"p3\">**</bpt>Small<ept id=\"p3\">**</ept>.",
      "pos": [
        7045,
        7123
      ]
    },
    {
      "content": "RoleCache3",
      "pos": [
        7127,
        7137
      ]
    },
    {
      "content": "The total memory for the VM sizes is as follows:",
      "pos": [
        7152,
        7200
      ]
    },
    {
      "pos": [
        7207,
        7225
      ],
      "content": "<bpt id=\"p1\">**</bpt>Small<ept id=\"p1\">**</ept>: 1.75 GB"
    },
    {
      "pos": [
        7230,
        7248
      ],
      "content": "<bpt id=\"p1\">**</bpt>Medium<ept id=\"p1\">**</ept>: 3.5 GB"
    },
    {
      "pos": [
        7253,
        7268
      ],
      "content": "<bpt id=\"p1\">**</bpt>Large<ept id=\"p1\">**</ept>: 7 GB"
    },
    {
      "pos": [
        7273,
        7294
      ],
      "content": "<bpt id=\"p1\">**</bpt>ExtraLarge<ept id=\"p1\">**</ept>: 14 GB"
    },
    {
      "content": "These memory sizes represent the total amount of memory available to the VM which is shared across the OS, cache process, cache data, and application.",
      "pos": [
        7299,
        7449
      ]
    },
    {
      "content": "For more information on configuring Virtual Machine Sizes, see [How to Configure Virtual Machine Sizes][].",
      "pos": [
        7450,
        7556
      ]
    },
    {
      "content": "Note that cache is unsupported on <bpt id=\"p1\">**</bpt>ExtraSmall<ept id=\"p1\">**</ept> VM sizes.",
      "pos": [
        7557,
        7615
      ]
    },
    {
      "content": "When <bpt id=\"p1\">**</bpt>Co-located Role<ept id=\"p1\">**</ept> caching is specified, the cache size is determined by taking the specified percentage of the virtual machine memory.",
      "pos": [
        7617,
        7758
      ]
    },
    {
      "content": "When <bpt id=\"p1\">**</bpt>Dedicated Role<ept id=\"p1\">**</ept> caching is specified, all of the available memory of the virtual machine is used for caching.",
      "pos": [
        7759,
        7876
      ]
    },
    {
      "content": "If two role instances are configured, the combined memory of the virtual machines is used.",
      "pos": [
        7877,
        7967
      ]
    },
    {
      "content": "This forms a cache cluster where the available caching memory is distributed across multiple role instances but presented to the clients of the cache as a single resource.",
      "pos": [
        7968,
        8139
      ]
    },
    {
      "content": "Configuring additional role instances increases the cache size in the same manner.",
      "pos": [
        8140,
        8222
      ]
    },
    {
      "content": "To determine the settings needed to provision a cache of the desired size, you can use the Capacity Planning Spreadsheet which is covered in [In-Role Cache Capacity Planning Considerations][].",
      "pos": [
        8223,
        8415
      ]
    },
    {
      "content": "Once the cache cluster is configured, you can configure the cache clients to allow access to the cache.",
      "pos": [
        8417,
        8520
      ]
    },
    {
      "content": "Configure the cache clients",
      "pos": [
        8546,
        8573
      ]
    },
    {
      "content": "To access a In-Role Cache cache, the clients must be within the same deployment.",
      "pos": [
        8575,
        8655
      ]
    },
    {
      "content": "If the cache cluster is a dedicated role cache cluster, then the clients are other roles in the deployment.",
      "pos": [
        8656,
        8763
      ]
    },
    {
      "content": "If the cache cluster is a co-located role cache cluster, then the clients could be either  the other roles in the deployment, or the roles themselves that host the cache cluster.",
      "pos": [
        8764,
        8942
      ]
    },
    {
      "content": "A NuGet package is provided that can be used to configure each client role that accesses the cache.",
      "pos": [
        8943,
        9042
      ]
    },
    {
      "content": "To configure a role to access a cache cluster using the Caching NuGet package, right-click the role project in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> and choose <bpt id=\"p2\">**</bpt>Manage NuGet Packages<ept id=\"p2\">**</ept>.",
      "pos": [
        9043,
        9213
      ]
    },
    {
      "content": "RoleCache4",
      "pos": [
        9218,
        9228
      ]
    },
    {
      "pos": [
        9243,
        9316
      ],
      "content": "Select <bpt id=\"p1\">**</bpt>In-Role Cache<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Install<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>I Accept<ept id=\"p3\">**</ept>."
    },
    {
      "pos": [
        9319,
        9465
      ],
      "content": "If <bpt id=\"p1\">**</bpt>In-Role Cache<ept id=\"p1\">**</ept> does not appear in the list type <bpt id=\"p2\">**</bpt>WindowsAzure.Caching<ept id=\"p2\">**</ept> into the <bpt id=\"p3\">**</bpt>Search Online<ept id=\"p3\">**</ept> text box and select it from the results."
    },
    {
      "content": "RoleCache5",
      "pos": [
        9469,
        9479
      ]
    },
    {
      "content": "The NuGet package does several things: it adds the required configuration to the config file of the role, it adds a cache client diagnostic level setting to the ServiceConfiguration.cscfg file of the Azure application, and it adds the required assembly references.",
      "pos": [
        9494,
        9758
      ]
    },
    {
      "content": "For ASP.NET web roles, the Caching NuGet package also adds two commented out sections to web.config.",
      "pos": [
        9761,
        9861
      ]
    },
    {
      "content": "The first section enables session state to be stored in the cache, and the second section enables ASP.NET page output caching.",
      "pos": [
        9862,
        9988
      ]
    },
    {
      "content": "For more information, see [How To: Store ASP.NET Session State in the Cache] and [How To: Store ASP.NET Page Output Caching in the Cache][].",
      "pos": [
        9989,
        10129
      ]
    },
    {
      "content": "The NuGet package adds the following configuration elements into your role's web.config or app.config.",
      "pos": [
        10131,
        10233
      ]
    },
    {
      "content": "A <bpt id=\"p1\">**</bpt>dataCacheClients<ept id=\"p1\">**</ept> section and a <bpt id=\"p2\">**</bpt>cacheDiagnostics<ept id=\"p2\">**</ept> section are added under the <bpt id=\"p3\">**</bpt>configSections<ept id=\"p3\">**</ept> element.",
      "pos": [
        10234,
        10347
      ]
    },
    {
      "content": "If there is no <bpt id=\"p1\">**</bpt>configSections<ept id=\"p1\">**</ept> element present, one is created as a child of the <bpt id=\"p2\">**</bpt>configuration<ept id=\"p2\">**</ept> element.",
      "pos": [
        10348,
        10458
      ]
    },
    {
      "content": "These new sections include references to a <bpt id=\"p1\">**</bpt>dataCacheClients<ept id=\"p1\">**</ept> element and a <bpt id=\"p2\">**</bpt>cacheDiagnostics<ept id=\"p2\">**</ept> element.",
      "pos": [
        11089,
        11196
      ]
    },
    {
      "content": "These elements are also added to the <bpt id=\"p1\">**</bpt>configuration<ept id=\"p1\">**</ept> element.",
      "pos": [
        11197,
        11260
      ]
    },
    {
      "pos": [
        11668,
        11795
      ],
      "content": "After the configuration is added, replace <bpt id=\"p1\">**</bpt>[cache cluster role name]<ept id=\"p1\">**</ept> with the name of the role that hosts the cache cluster."
    },
    {
      "pos": [
        11798,
        12058
      ],
      "content": "If <bpt id=\"p1\">**</bpt>[cache cluster role name]<ept id=\"p1\">**</ept> is not replaced with the name of the role that hosts the cache cluster, then a <bpt id=\"p2\">**</bpt>TargetInvocationException<ept id=\"p2\">**</ept> will be thrown when the cache is accessed with an inner <bpt id=\"p3\">**</bpt>DatacacheException<ept id=\"p3\">**</ept> with the message \"No such role exists\"."
    },
    {
      "content": "The NuGet package also adds a <bpt id=\"p1\">**</bpt>ClientDiagnosticLevel<ept id=\"p1\">**</ept> setting to the <bpt id=\"p2\">**</bpt>ConfigurationSettings<ept id=\"p2\">**</ept> of the cache client role in ServiceConfiguration.cscfg.",
      "pos": [
        12060,
        12212
      ]
    },
    {
      "content": "The following example is the <bpt id=\"p1\">**</bpt>WebRole1<ept id=\"p1\">**</ept> section from a ServiceConfiguration.cscfg file with a <bpt id=\"p2\">**</bpt>ClientDiagnosticLevel<ept id=\"p2\">**</ept> of 1, which is the default <bpt id=\"p3\">**</bpt>ClientDiagnosticLevel<ept id=\"p3\">**</ept>.",
      "pos": [
        12213,
        12388
      ]
    },
    {
      "content": "In-Role Cache provides both a cache server and a cache client diagnostic level.",
      "pos": [
        12694,
        12773
      ]
    },
    {
      "content": "The diagnostic level is a single setting that configures the level of diagnostic information collected for caching.",
      "pos": [
        12774,
        12889
      ]
    },
    {
      "content": "For more information, see [Troubleshooting and Diagnostics for In-Role Cache][]",
      "pos": [
        12890,
        12969
      ]
    },
    {
      "content": "The NuGet package also adds references to the following assemblies:",
      "pos": [
        12971,
        13038
      ]
    },
    {
      "content": "Microsoft.ApplicationServer.Caching.Client.dll",
      "pos": [
        13044,
        13090
      ]
    },
    {
      "content": "Microsoft.ApplicationServer.Caching.Core.dll",
      "pos": [
        13095,
        13139
      ]
    },
    {
      "content": "Microsoft.WindowsFabric.Common.dll",
      "pos": [
        13144,
        13178
      ]
    },
    {
      "content": "Microsoft.WindowsFabric.Data.Common.dll",
      "pos": [
        13183,
        13222
      ]
    },
    {
      "content": "Microsoft.ApplicationServer.Caching.AzureCommon.dll",
      "pos": [
        13227,
        13278
      ]
    },
    {
      "content": "Microsoft.ApplicationServer.Caching.AzureClientHelper.dll",
      "pos": [
        13283,
        13340
      ]
    },
    {
      "content": "If your role is an ASP.NET Web Role, the following assembly reference is also added:",
      "pos": [
        13342,
        13426
      ]
    },
    {
      "content": "Microsoft.Web.DistributedCache.dll.",
      "pos": [
        13432,
        13467
      ]
    },
    {
      "content": "Once your client project is configured for caching, you can use the techniques described in the following sections for working with your cache.",
      "pos": [
        13469,
        13612
      ]
    },
    {
      "content": "Working with Caches",
      "pos": [
        13652,
        13671
      ]
    },
    {
      "content": "The steps in this section describe how to perform common tasks with caching.",
      "pos": [
        13673,
        13749
      ]
    },
    {
      "content": "[How To: Create a DataCache Object][]",
      "pos": [
        13755,
        13792
      ]
    },
    {
      "content": "[How To: Add and Retrieve an Object from the Cache][]",
      "pos": [
        13797,
        13850
      ]
    },
    {
      "content": "[How To: Specify the Expiration of an Object in the Cache][]",
      "pos": [
        13855,
        13915
      ]
    },
    {
      "content": "[How To: Store ASP.NET Session State in the Cache][]",
      "pos": [
        13920,
        13972
      ]
    },
    {
      "content": "[How To: Store ASP.NET Page Output Caching in the Cache][]",
      "pos": [
        13977,
        14035
      ]
    },
    {
      "content": "How To: Create a DataCache Object",
      "pos": [
        14075,
        14108
      ]
    },
    {
      "content": "In order to programatically work with a cache, you need a reference to the cache.",
      "pos": [
        14110,
        14191
      ]
    },
    {
      "content": "Add the following to the top of any file from which you want to use",
      "pos": [
        14192,
        14259
      ]
    },
    {
      "content": "In-Role Cache:",
      "pos": [
        14260,
        14274
      ]
    },
    {
      "content": "If Visual Studio doesn't recognize the types in the using",
      "pos": [
        14325,
        14382
      ]
    },
    {
      "content": "statement even after installing the Caching NuGet package, which adds the necessary references, ensure that the target",
      "pos": [
        14383,
        14501
      ]
    },
    {
      "content": "profile for the project is .NET Framework 4.0 or higher, and be sure to select one of the profiles that does not specify <bpt id=\"p1\">**</bpt>Client Profile<ept id=\"p1\">**</ept>.",
      "pos": [
        14502,
        14642
      ]
    },
    {
      "content": "For instructions on configuring cache clients, see [Configure the cache clients][].",
      "pos": [
        14643,
        14726
      ]
    },
    {
      "content": "There are two ways to create a <bpt id=\"p1\">**</bpt>DataCache<ept id=\"p1\">**</ept> object.",
      "pos": [
        14728,
        14780
      ]
    },
    {
      "content": "The first way is to simply create a <bpt id=\"p1\">**</bpt>DataCache<ept id=\"p1\">**</ept>, passing in the name of the desired cache.",
      "pos": [
        14781,
        14873
      ]
    },
    {
      "pos": [
        14924,
        15046
      ],
      "content": "Once the <bpt id=\"p1\">**</bpt>DataCache<ept id=\"p1\">**</ept> is instantiated, you can use it to interact with the cache, as described in the following sections."
    },
    {
      "content": "To use the second way, create a new <bpt id=\"p1\">**</bpt>DataCacheFactory<ept id=\"p1\">**</ept> object in your application using the default constructor.",
      "pos": [
        15048,
        15162
      ]
    },
    {
      "content": "This causes the cache client to use the settings in the configuration file.",
      "pos": [
        15163,
        15238
      ]
    },
    {
      "content": "Call either the <bpt id=\"p1\">**</bpt>GetDefaultCache<ept id=\"p1\">**</ept> method of the new <bpt id=\"p2\">**</bpt>DataCacheFactory<ept id=\"p2\">**</ept> instance which returns a <bpt id=\"p3\">**</bpt>DataCache<ept id=\"p3\">**</ept> object, or the <bpt id=\"p4\">**</bpt>GetCache<ept id=\"p4\">**</ept> method and pass in the name of your cache.",
      "pos": [
        15239,
        15423
      ]
    },
    {
      "content": "These methods return a <bpt id=\"p1\">**</bpt>DataCache<ept id=\"p1\">**</ept> object that can then be used to programmatically access the cache.",
      "pos": [
        15424,
        15527
      ]
    },
    {
      "content": "How To: Add and Retrieve an Object from the Cache",
      "pos": [
        15870,
        15919
      ]
    },
    {
      "content": "To add an item to the cache, the <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> method or the <bpt id=\"p2\">**</bpt>Put<ept id=\"p2\">**</ept> method",
      "pos": [
        15921,
        15990
      ]
    },
    {
      "content": "can be used.",
      "pos": [
        15991,
        16003
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> method adds the specified object to the cache,",
      "pos": [
        16004,
        16062
      ]
    },
    {
      "content": "keyed by the value of the key parameter.",
      "pos": [
        16063,
        16103
      ]
    },
    {
      "content": "If an object with the same key is already in the cache, a",
      "pos": [
        16198,
        16255
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>DataCacheException<ept id=\"p1\">**</ept> will be thrown with the following message:",
      "pos": [
        16256,
        16321
      ]
    },
    {
      "pos": [
        16325,
        16495
      ],
      "content": "ErrorCode:SubStatus: An attempt is being made to create an object with\na Key that already exists in the cache. Caching will only accept\nunique Key values for objects.",
      "leadings": [
        "",
        "> ",
        "> "
      ],
      "nodes": [
        {
          "content": "ErrorCode:SubStatus: An attempt is being made to create an object with",
          "pos": [
            0,
            70
          ]
        },
        {
          "content": "a Key that already exists in the cache. Caching will only accept",
          "pos": [
            71,
            135
          ],
          "nodes": [
            {
              "content": "a Key that already exists in the cache.",
              "pos": [
                0,
                39
              ]
            },
            {
              "content": "Caching will only accept",
              "pos": [
                40,
                64
              ]
            }
          ]
        },
        {
          "content": "unique Key values for objects.",
          "pos": [
            136,
            166
          ]
        }
      ]
    },
    {
      "content": "To retrieve an object with a specific key, the <bpt id=\"p1\">**</bpt>Get<ept id=\"p1\">**</ept> method can be used.",
      "pos": [
        16497,
        16571
      ]
    },
    {
      "content": "If the object exists, it is",
      "pos": [
        16572,
        16599
      ]
    },
    {
      "content": "returned, and if it does not, null is returned.",
      "pos": [
        16600,
        16647
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Put<ept id=\"p1\">**</ept> method adds the object with the specified key to the cache",
      "pos": [
        17033,
        17103
      ]
    },
    {
      "content": "if it does not exist, or replaces the object if it does exist.",
      "pos": [
        17104,
        17166
      ]
    },
    {
      "content": "How To: Specify the Expiration of an Object in the Cache",
      "pos": [
        17332,
        17388
      ]
    },
    {
      "content": "By default items in the cache expire 10 minutes after they are placed in the cache.",
      "pos": [
        17390,
        17473
      ]
    },
    {
      "content": "This can be configured in the <bpt id=\"p1\">**</bpt>Time to Live (min)<ept id=\"p1\">**</ept> setting in the role properties of the role that hosts the cache cluster.",
      "pos": [
        17474,
        17599
      ]
    },
    {
      "content": "RoleCache6",
      "pos": [
        17603,
        17613
      ]
    },
    {
      "content": "There are three types of <bpt id=\"p1\">**</bpt>Expiration Type<ept id=\"p1\">**</ept>: <bpt id=\"p2\">**</bpt>None<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Absolute<ept id=\"p3\">**</ept>, and <bpt id=\"p4\">**</bpt>Sliding Window<ept id=\"p4\">**</ept>.",
      "pos": [
        17628,
        17721
      ]
    },
    {
      "content": "These configure how <bpt id=\"p1\">**</bpt>Time to Live (min)<ept id=\"p1\">**</ept> is used to determine expiration.",
      "pos": [
        17722,
        17797
      ]
    },
    {
      "content": "The default <bpt id=\"p1\">**</bpt>Expiration Type<ept id=\"p1\">**</ept> is <bpt id=\"p2\">**</bpt>Absolute<ept id=\"p2\">**</ept>, which means that the countdown timer for an item's expiration begins when the item is placed into the cache.",
      "pos": [
        17798,
        17955
      ]
    },
    {
      "content": "Once the specified amount of time has elapsed for an item, the item expires.",
      "pos": [
        17956,
        18032
      ]
    },
    {
      "content": "If <bpt id=\"p1\">**</bpt>Sliding Window<ept id=\"p1\">**</ept> is specified, then the expiration countdown for an item is reset each time the item is accessed in the cache, and the item will not expire until the specified amount of time has elapsed since its last access.",
      "pos": [
        18033,
        18263
      ]
    },
    {
      "content": "If <bpt id=\"p1\">**</bpt>None<ept id=\"p1\">**</ept> is specified, then <bpt id=\"p2\">**</bpt>Time to Live (min)<ept id=\"p2\">**</ept> must be set to <bpt id=\"p3\">**</bpt>0<ept id=\"p3\">**</ept>, and items will not expire, and will remain valid as long as they are in the cache.",
      "pos": [
        18264,
        18422
      ]
    },
    {
      "content": "If a longer or shorter timeout interval than what is configured in the role properties is desired, a specific duration can be specified when an item is added or updated in the cache by using the",
      "pos": [
        18424,
        18618
      ]
    },
    {
      "content": "overload of <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Put<ept id=\"p2\">**</ept> that take a <bpt id=\"p3\">**</bpt>TimeSpan<ept id=\"p3\">**</ept> parameter.",
      "pos": [
        18619,
        18686
      ]
    },
    {
      "content": "In",
      "pos": [
        18687,
        18689
      ]
    },
    {
      "content": "the following example, the string <bpt id=\"p1\">**</bpt>value<ept id=\"p1\">**</ept> is added to cache, keyed by",
      "pos": [
        18690,
        18761
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>item<ept id=\"p1\">**</ept>, with a timeout of 30 minutes.",
      "pos": [
        18762,
        18801
      ]
    },
    {
      "content": "To view the remaining timeout interval of an item in the cache, the",
      "pos": [
        18922,
        18989
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>GetCacheItem<ept id=\"p1\">**</ept> method can be used to retrieve a <bpt id=\"p2\">**</bpt>DataCacheItem<ept id=\"p2\">**</ept>",
      "pos": [
        18990,
        19057
      ]
    },
    {
      "content": "object that contains information about the item in the cache, including",
      "pos": [
        19058,
        19129
      ]
    },
    {
      "content": "the remaining timeout interval.",
      "pos": [
        19130,
        19161
      ]
    },
    {
      "content": "How To: Store ASP.NET Session State in the Cache",
      "pos": [
        19450,
        19498
      ]
    },
    {
      "content": "The Session State Provider for In-Role Cache is an",
      "pos": [
        19500,
        19550
      ]
    },
    {
      "content": "out-of-process storage mechanism for ASP.NET applications.",
      "pos": [
        19551,
        19609
      ]
    },
    {
      "content": "This provider",
      "pos": [
        19610,
        19623
      ]
    },
    {
      "content": "enables you to store your session state in an Azure cache rather",
      "pos": [
        19624,
        19688
      ]
    },
    {
      "content": "than in-memory or in a SQL Server database.",
      "pos": [
        19689,
        19732
      ]
    },
    {
      "content": "To use the caching session",
      "pos": [
        19733,
        19759
      ]
    },
    {
      "content": "state provider, first configure your cache cluster, and then configure your ASP.NET application for caching using the Caching NuGet package as described in [Getting Started with In-Role Cache][].",
      "pos": [
        19760,
        19955
      ]
    },
    {
      "content": "When the Caching NuGet package is installed, it adds a commented out section in web.config that contains the required configuration for your ASP.NET application to use the Session State Provider for In-Role Cache.",
      "pos": [
        19956,
        20169
      ]
    },
    {
      "content": "If your web.config does not contain this commented out section after installing the Caching NuGet package, ensure that the latest NuGet Package Manager is installed from [NuGet Package Manager Installation][], and then uninstall and reinstall the package.",
      "pos": [
        20703,
        20958
      ]
    },
    {
      "content": "To enable the Session State Provider for In-Role Cache, uncomment the specified section.",
      "pos": [
        20960,
        21048
      ]
    },
    {
      "content": "The default cache is specified in the provided snippet.",
      "pos": [
        21049,
        21104
      ]
    },
    {
      "content": "To use a different cache, specify the desired cache in the <bpt id=\"p1\">**</bpt>cacheName<ept id=\"p1\">**</ept> attribute.",
      "pos": [
        21105,
        21188
      ]
    },
    {
      "content": "For more information about using the Caching service session state",
      "pos": [
        21190,
        21256
      ]
    },
    {
      "content": "provider, see [Session State Provider for In-Role Cache][].",
      "pos": [
        21257,
        21316
      ]
    },
    {
      "content": "How To: Store ASP.NET Page Output Caching in the Cache",
      "pos": [
        21347,
        21401
      ]
    },
    {
      "content": "The Output Cache Provider for In-Role Cache is an out-of-process storage mechanism for output cache data.",
      "pos": [
        21403,
        21508
      ]
    },
    {
      "content": "This data is specifically for full HTTP",
      "pos": [
        21509,
        21548
      ]
    },
    {
      "content": "responses (page output caching).",
      "pos": [
        21549,
        21581
      ]
    },
    {
      "content": "The provider plugs into the new output",
      "pos": [
        21582,
        21620
      ]
    },
    {
      "content": "cache provider extensibility point that was introduced in ASP.NET 4.",
      "pos": [
        21621,
        21689
      ]
    },
    {
      "content": "To",
      "pos": [
        21690,
        21692
      ]
    },
    {
      "content": "use the output cache provider, first configure your cache cluster, and then configure your ASP.NET application for caching using the Caching NuGet package, as described in [Getting Started with In-Role Cache][].",
      "pos": [
        21693,
        21904
      ]
    },
    {
      "content": "When the Caching NuGet package is installed, it adds the following commented out section in web.config that contains the required configuration for your ASP.NET application to use the Output Cache Provider for In-Role Cache.",
      "pos": [
        21905,
        22129
      ]
    },
    {
      "content": "If your web.config does not contain this commented out section after installing the Caching NuGet package, ensure that the latest NuGet Package Manager is installed from [NuGet Package Manager Installation][], and then uninstall and reinstall the package.",
      "pos": [
        22628,
        22883
      ]
    },
    {
      "content": "To enable the Output Cache Provider for In-Role Cache, uncomment the specified section.",
      "pos": [
        22885,
        22972
      ]
    },
    {
      "content": "The default cache is specified in the provided snippet.",
      "pos": [
        22973,
        23028
      ]
    },
    {
      "content": "To use a different cache, specify the desired cache in the <bpt id=\"p1\">**</bpt>cacheName<ept id=\"p1\">**</ept> attribute.",
      "pos": [
        23029,
        23112
      ]
    },
    {
      "pos": [
        23114,
        23199
      ],
      "content": "Add an <bpt id=\"p1\">**</bpt>OutputCache<ept id=\"p1\">**</ept> directive to each page for which you wish to cache the output."
    },
    {
      "content": "In this example the cached page data will remain in the cache for 60 seconds, and a different version of the page will be cached for each parameter combination.",
      "pos": [
        23255,
        23415
      ]
    },
    {
      "content": "For more information on the available options, see [OutputCache Directive][].",
      "pos": [
        23416,
        23493
      ]
    },
    {
      "content": "For more information about using the Output Cache Provider for In-Role Cache, see [Output Cache Provider for In-Role Cache][].",
      "pos": [
        23495,
        23621
      ]
    },
    {
      "content": "Next Steps",
      "pos": [
        23652,
        23662
      ]
    },
    {
      "content": "Now that you've learned the basics of In-Role Cache,",
      "pos": [
        23664,
        23716
      ]
    },
    {
      "content": "follow these links to learn how to do more complex caching tasks.",
      "pos": [
        23717,
        23782
      ]
    },
    {
      "content": "See the MSDN Reference: [In-Role Cache][]",
      "pos": [
        23788,
        23829
      ]
    },
    {
      "content": "Learn how to migrate to In-Role Cache: [Migrate to In-Role Cache][]",
      "pos": [
        23834,
        23901
      ]
    },
    {
      "content": "Check out the samples: [In-Role Cache Samples][]",
      "pos": [
        23906,
        23954
      ]
    },
    {
      "content": "Watch the [Maximum Performance: Accelerate Your Cloud Services Applications with Azure Caching][] session from TechEd 2013 on In-Role Cache",
      "pos": [
        23959,
        24098
      ]
    },
    {
      "content": "test",
      "pos": [
        27750,
        27754
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"How to use In-Role Cache (.NET) | Microsoft Azure\" \n    description=\"Learn how to use Azure In-Role Cache. The samples are written in C# code and use the .NET API.\" \n    services=\"cache\" \n    documentationCenter=\".net\" \n    authors=\"steved0x\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"cache\" \n    ms.workload=\"web\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"dotnet\" \n    ms.topic=\"article\" \n    ms.date=\"08/11/2015\" \n    ms.author=\"sdanie\"/>\n\n\n\n\n\n\n# How to Use In-Role Cache for Azure Cache\n\nThis guide shows you how to get started using \n**In-Role Cache for Azure Cache**. The samples are written in C\\# code and\nuse the .NET API. The scenarios covered include **configuring a cache cluster**, **configuring cache clients**, **adding and removing\nobjects from the cache, storing ASP.NET session state in the cache**,\nand **enabling ASP.NET page output caching using the cache**. For more\ninformation on using In-Role Cache, refer to the [Next Steps][] section.\n\n>[AZURE.NOTE] For guidance on choosing the right Azure Cache offering for your application, see [Which Azure Cache offering is right for me?][].\n\n<a name=\"what-is\"></a>\n## What is In-Role Cache?\n\nIn-Role Cache provides a caching layer to your Azure applications. Caching increases performance by temporarily storing information in-memory from\nother backend sources, and can reduce the costs associated with database\ntransactions in the cloud. In-Role Cache includes the following\nfeatures:\n\n-   Pre-built ASP.NET providers for session state and page output\n    caching, enabling acceleration of web applications without having to\n    modify application code.\n-   Caches any serializable managed object - for example: CLR objects, rows, XML,\n    binary data.\n-   Consistent development model across both Azure and Windows\n    Server AppFabric.\n\nIn-Role Cache provides a way to perform caching by using a portion of the memory of the virtual machines that host the role instances in your Azure cloud services (also known as hosted services). You have greater flexibility in terms of deployment options, the caches can be very large in size and have no cache specific quota restrictions.\n\n>[AZURE.NOTE] Starting with Azure SDK 2.6, In-Role Cache is using Microsoft Azure Storage SDK version 4.3. In previous versions of the Azure SDK, In-Role Cache used Azure Storage SDK 1.7. Applications using In-Role Cache with versions of the Azure SDK before 2.6 should migrate to Azure SDK 2.6 before Azure Storage version 2011-08-18 is decommissioned on December 9th, 2015. For more information, see [Azure SDK 2.6 Release Notes - In-Role Cache](../azure-sdk-dotnet-release-notes-2_6.md#in-role-cache-updates) and [Microsoft Azure Storage Service Version Removal](http://azure.microsoft.com/blog/2014/08/04/microsoft-azure-storage-service-version-removal/).\n\nCaching on role instances has the following advantages:\n\n-   Pay no premium for caching. You pay only for the compute resources that host the cache.\n-   Eliminates cache quotas and throttling.\n-   Offers greater control and isolation. \n-   Improved performance.\n-   Automatically sizes caches when roles are scaled in or out. Effectively scales the memory that is available for caching up or down when role instances are added or removed.\n-   Provides full-fidelity development time debugging. \n-   Supports the memcache protocol.\n\nIn addition, caching on role instances offers these configurable options:\n\n-   Configure a dedicated role for caching, or co-locate caching on existing roles. \n-   Make your cache available to multiple clients in the same cloud service deployment.\n-   Create multiple named caches with different properties.\n-   Optionally configure high availability on individual caches.\n-   Use expanded caching capabilities such as regions, tagging, and notifications.\n\nThis guide provides an overview of getting started with In-Role Cache. For more detailed information on these features that are beyond the scope of this getting started guide, see [Overview of In-Role Cache][].\n\n<a name=\"getting-started-cache-role-instance\"></a>\n## Getting Started with In-Role Cache\n\nIn-Role Cache provides a way to enable caching using the memory that is on the virtual machines that host your role instances. The role instances that host your caches are known as a **cache cluster**. There are two deployment topologies for caching on role instances:\n\n-   **Dedicated Role** caching - The role instances are used exclusively for caching.\n-   **Co-located Role** caching - The cache shares the VM resources (bandwidth, CPU, and memory) with the application.\n\nTo use caching on role instances, you need to configure a cache cluster, and then configure the cache clients so they can access the cache cluster.\n\n-   [Configure the cache cluster][]\n-   [Configure the cache clients][]\n\n<a name=\"enable-caching\"></a>\n## Configure the cache cluster\n\nTo configure a **Co-located Role** cache cluster, select the role in which you wish to host the cache cluster. Right-click the role properties in **Solution Explorer** and choose **Properties**.\n\n![RoleCache1][RoleCache1]\n\nSwitch to the **Caching** tab, check the **Enable Caching** checkbox, and specify the desired caching options. When caching is enabled in a **Worker Role** or **ASP.NET Web Role**, the default configuration is **Co-located Role** caching with 30% of the memory of the role instances allocated for caching. A default cache is automatically configured, and additional named caches can be created if desired, and these caches will share the allocated memory.\n\n![RoleCache2][RoleCache2]\n\nTo configure a **Dedicated Role** cache cluster, add a **Cache Worker Role** to your project.\n\n![RoleCache7][RoleCache7]\n\nWhen a **Cache Worker Role** is added to a project, the default configuration is **Dedicated Role** caching.\n\n![RoleCache8][RoleCache8]\n\nOnce caching is enabled, the cache cluster storage account can be configured. In-Role Cache requires an Azure storage account. This storage account is used to hold configuration data about the cache cluster that is accessed from all virtual machines that make up the cache cluster. This storage account is specified on the **Caching** tab of the cache cluster role property page, just above the **Named Cache Settings**.\n\n![RoleCache10][RoleCache10]\n\n>If this storage account is not configured the roles will fail to start. \n\nThe size of the cache is determined by a combination of the VM size of the role, the instance count of the role, and whether the cache cluster is configured as a dedicated role or co-located role cache cluster.\n\n>This section provides a simplified overview on configuring the cache size. For more information on cache size and other capacity planning considerations, see [In-Role Cache Capacity Planning Considerations][].\n\nTo configure the virtual machine size and the number of role instances, right-click the role properties in **Solution Explorer** and choose **Properties**.\n\n![RoleCache1][RoleCache1]\n\nSwitch to the **Configuration** tab. The default **Instance count** is 1, and the default **VM size** is **Small**.\n\n![RoleCache3][RoleCache3]\n\nThe total memory for the VM sizes is as follows: \n\n-   **Small**: 1.75 GB\n-   **Medium**: 3.5 GB\n-   **Large**: 7 GB\n-   **ExtraLarge**: 14 GB\n\n\n> These memory sizes represent the total amount of memory available to the VM which is shared across the OS, cache process, cache data, and application. For more information on configuring Virtual Machine Sizes, see [How to Configure Virtual Machine Sizes][]. Note that cache is unsupported on **ExtraSmall** VM sizes.\n\nWhen **Co-located Role** caching is specified, the cache size is determined by taking the specified percentage of the virtual machine memory. When **Dedicated Role** caching is specified, all of the available memory of the virtual machine is used for caching. If two role instances are configured, the combined memory of the virtual machines is used. This forms a cache cluster where the available caching memory is distributed across multiple role instances but presented to the clients of the cache as a single resource. Configuring additional role instances increases the cache size in the same manner. To determine the settings needed to provision a cache of the desired size, you can use the Capacity Planning Spreadsheet which is covered in [In-Role Cache Capacity Planning Considerations][].\n\nOnce the cache cluster is configured, you can configure the cache clients to allow access to the cache.\n\n<a name=\"NuGet\"></a>\n## Configure the cache clients\n\nTo access a In-Role Cache cache, the clients must be within the same deployment. If the cache cluster is a dedicated role cache cluster, then the clients are other roles in the deployment. If the cache cluster is a co-located role cache cluster, then the clients could be either  the other roles in the deployment, or the roles themselves that host the cache cluster. A NuGet package is provided that can be used to configure each client role that accesses the cache. To configure a role to access a cache cluster using the Caching NuGet package, right-click the role project in **Solution Explorer** and choose **Manage NuGet Packages**. \n\n![RoleCache4][RoleCache4]\n\nSelect **In-Role Cache**, click **Install**, and then click **I Accept**.\n\n>If **In-Role Cache** does not appear in the list type **WindowsAzure.Caching** into the **Search Online** text box and select it from the results.\n\n![RoleCache5][RoleCache5]\n\nThe NuGet package does several things: it adds the required configuration to the config file of the role, it adds a cache client diagnostic level setting to the ServiceConfiguration.cscfg file of the Azure application, and it adds the required assembly references.\n\n>For ASP.NET web roles, the Caching NuGet package also adds two commented out sections to web.config. The first section enables session state to be stored in the cache, and the second section enables ASP.NET page output caching. For more information, see [How To: Store ASP.NET Session State in the Cache] and [How To: Store ASP.NET Page Output Caching in the Cache][].\n\nThe NuGet package adds the following configuration elements into your role's web.config or app.config. A **dataCacheClients** section and a **cacheDiagnostics** section are added under the **configSections** element. If there is no **configSections** element present, one is created as a child of the **configuration** element.\n\n    <configSections>\n      <!-- Existing sections omitted for clarity. -->\n\n      <section name=\"dataCacheClients\" \n               type=\"Microsoft.ApplicationServer.Caching.DataCacheClientsSection, Microsoft.ApplicationServer.Caching.Core\" \n               allowLocation=\"true\" \n               allowDefinition=\"Everywhere\" />\n    \n      <section name=\"cacheDiagnostics\" \n               type=\"Microsoft.ApplicationServer.Caching.AzureCommon.DiagnosticsConfigurationSection, Microsoft.ApplicationServer.Caching.AzureCommon\" \n               allowLocation=\"true\" \n               allowDefinition=\"Everywhere\" />\n    </configSections>\n\nThese new sections include references to a **dataCacheClients** element and a **cacheDiagnostics** element. These elements are also added to the **configuration** element.\n\n    <dataCacheClients>\n      <dataCacheClient name=\"default\">\n        <autoDiscover isEnabled=\"true\" identifier=\"[cache cluster role name]\" />\n        <!--<localCache isEnabled=\"true\" sync=\"TimeoutBased\" objectCount=\"100000\" ttlValue=\"300\" />-->\n      </dataCacheClient>\n    </dataCacheClients>\n    <cacheDiagnostics>\n      <crashDump dumpLevel=\"Off\" dumpStorageQuotaInMB=\"100\" />\n    </cacheDiagnostics>\n\nAfter the configuration is added, replace **[cache cluster role name]** with the name of the role that hosts the cache cluster.\n\n>If **[cache cluster role name]** is not replaced with the name of the role that hosts the cache cluster, then a **TargetInvocationException** will be thrown when the cache is accessed with an inner **DatacacheException** with the message \"No such role exists\".\n\nThe NuGet package also adds a **ClientDiagnosticLevel** setting to the **ConfigurationSettings** of the cache client role in ServiceConfiguration.cscfg. The following example is the **WebRole1** section from a ServiceConfiguration.cscfg file with a **ClientDiagnosticLevel** of 1, which is the default **ClientDiagnosticLevel**.\n\n    <Role name=\"WebRole1\">\n      <Instances count=\"1\" />\n      <ConfigurationSettings>\n        <!-- Existing settings omitted for clarity. -->\n        <Setting name=\"Microsoft.WindowsAzure.Plugins.Caching.ClientDiagnosticLevel\" \n                 value=\"1\" />\n      </ConfigurationSettings>\n    </Role>\n\n>In-Role Cache provides both a cache server and a cache client diagnostic level. The diagnostic level is a single setting that configures the level of diagnostic information collected for caching. For more information, see [Troubleshooting and Diagnostics for In-Role Cache][]\n\nThe NuGet package also adds references to the following assemblies:\n\n-   Microsoft.ApplicationServer.Caching.Client.dll\n-   Microsoft.ApplicationServer.Caching.Core.dll\n-   Microsoft.WindowsFabric.Common.dll\n-   Microsoft.WindowsFabric.Data.Common.dll\n-   Microsoft.ApplicationServer.Caching.AzureCommon.dll\n-   Microsoft.ApplicationServer.Caching.AzureClientHelper.dll\n\nIf your role is an ASP.NET Web Role, the following assembly reference is also added:\n\n-   Microsoft.Web.DistributedCache.dll.\n\nOnce your client project is configured for caching, you can use the techniques described in the following sections for working with your cache.\n\n<a name=\"working-with-caches\"></a>\n## Working with Caches\n\nThe steps in this section describe how to perform common tasks with caching.\n\n-   [How To: Create a DataCache Object][]\n-   [How To: Add and Retrieve an Object from the Cache][]\n-   [How To: Specify the Expiration of an Object in the Cache][]\n-   [How To: Store ASP.NET Session State in the Cache][]\n-   [How To: Store ASP.NET Page Output Caching in the Cache][]\n\n<a name=\"create-cache-object\"></a>\n## How To: Create a DataCache Object\n\nIn order to programatically work with a cache, you need a reference to the cache. Add the following to the top of any file from which you want to use\nIn-Role Cache:\n\n    using Microsoft.ApplicationServer.Caching;\n\n>If Visual Studio doesn't recognize the types in the using\nstatement even after installing the Caching NuGet package, which adds the necessary references, ensure that the target\nprofile for the project is .NET Framework 4.0 or higher, and be sure to select one of the profiles that does not specify **Client Profile**. For instructions on configuring cache clients, see [Configure the cache clients][].\n\nThere are two ways to create a **DataCache** object. The first way is to simply create a **DataCache**, passing in the name of the desired cache.\n\n    DataCache cache = new DataCache(\"default\");\n\nOnce the **DataCache** is instantiated, you can use it to interact with the cache, as described in the following sections.\n\nTo use the second way, create a new **DataCacheFactory** object in your application using the default constructor. This causes the cache client to use the settings in the configuration file. Call either the **GetDefaultCache** method of the new **DataCacheFactory** instance which returns a **DataCache** object, or the **GetCache** method and pass in the name of your cache. These methods return a **DataCache** object that can then be used to programmatically access the cache.\n\n    // Cache client configured by settings in application configuration file.\n    DataCacheFactory cacheFactory = new DataCacheFactory();\n    DataCache cache = cacheFactory.GetDefaultCache();\n    // Or DataCache cache = cacheFactory.GetCache(\"MyCache\");\n    // cache can now be used to add and retrieve items. \n\n<a name=\"add-object\"></a>\n## How To: Add and Retrieve an Object from the Cache\n\nTo add an item to the cache, the **Add** method or the **Put** method\ncan be used. The **Add** method adds the specified object to the cache,\nkeyed by the value of the key parameter.\n\n    // Add the string \"value\" to the cache, keyed by \"item\"\n    cache.Add(\"item\", \"value\");\n\nIf an object with the same key is already in the cache, a\n**DataCacheException** will be thrown with the following message:\n\n> ErrorCode:SubStatus: An attempt is being made to create an object with\n> a Key that already exists in the cache. Caching will only accept\n> unique Key values for objects.\n\nTo retrieve an object with a specific key, the **Get** method can be used. If the object exists, it is\nreturned, and if it does not, null is returned.\n\n    // Add the string \"value\" to the cache, keyed by \"key\"\n    object result = cache.Get(\"Item\");\n    if (result == null)\n    {\n        // \"Item\" not in cache. Obtain it from specified data source\n        // and add it.\n        string value = GetItemValue(...);\n        cache.Add(\"item\", value);\n    }\n    else\n    {\n        // \"Item\" is in cache, cast result to correct type.\n    }\n\nThe **Put** method adds the object with the specified key to the cache\nif it does not exist, or replaces the object if it does exist.\n\n    // Add the string \"value\" to the cache, keyed by \"item\". If it exists,\n    // replace it.\n    cache.Put(\"item\", \"value\");\n\n<a name=\"specify-expiration\"></a>\n## How To: Specify the Expiration of an Object in the Cache\n\nBy default items in the cache expire 10 minutes after they are placed in the cache. This can be configured in the **Time to Live (min)** setting in the role properties of the role that hosts the cache cluster.\n\n![RoleCache6][RoleCache6]\n\nThere are three types of **Expiration Type**: **None**, **Absolute**, and **Sliding Window**. These configure how **Time to Live (min)** is used to determine expiration. The default **Expiration Type** is **Absolute**, which means that the countdown timer for an item's expiration begins when the item is placed into the cache. Once the specified amount of time has elapsed for an item, the item expires. If **Sliding Window** is specified, then the expiration countdown for an item is reset each time the item is accessed in the cache, and the item will not expire until the specified amount of time has elapsed since its last access. If **None** is specified, then **Time to Live (min)** must be set to **0**, and items will not expire, and will remain valid as long as they are in the cache.\n\nIf a longer or shorter timeout interval than what is configured in the role properties is desired, a specific duration can be specified when an item is added or updated in the cache by using the\noverload of **Add** and **Put** that take a **TimeSpan** parameter. In\nthe following example, the string **value** is added to cache, keyed by\n**item**, with a timeout of 30 minutes.\n\n    // Add the string \"value\" to the cache, keyed by \"item\"\n    cache.Add(\"item\", \"value\", TimeSpan.FromMinutes(30));\n\nTo view the remaining timeout interval of an item in the cache, the\n**GetCacheItem** method can be used to retrieve a **DataCacheItem**\nobject that contains information about the item in the cache, including\nthe remaining timeout interval.\n\n    // Get a DataCacheItem object that contains information about\n    // \"item\" in the cache. If there is no object keyed by \"item\" null\n    // is returned. \n    DataCacheItem item = cache.GetCacheItem(\"item\");\n    TimeSpan timeRemaining = item.Timeout;\n\n<a name=\"store-session\"></a>\n## How To: Store ASP.NET Session State in the Cache\n\nThe Session State Provider for In-Role Cache is an\nout-of-process storage mechanism for ASP.NET applications. This provider\nenables you to store your session state in an Azure cache rather\nthan in-memory or in a SQL Server database. To use the caching session\nstate provider, first configure your cache cluster, and then configure your ASP.NET application for caching using the Caching NuGet package as described in [Getting Started with In-Role Cache][]. When the Caching NuGet package is installed, it adds a commented out section in web.config that contains the required configuration for your ASP.NET application to use the Session State Provider for In-Role Cache.\n\n    <!--Uncomment this section to use In-Role Cache for session state caching\n    <system.web>\n      <sessionState mode=\"Custom\" customProvider=\"AFCacheSessionStateProvider\">\n        <providers>\n          <add name=\"AFCacheSessionStateProvider\" \n            type=\"Microsoft.Web.DistributedCache.DistributedCacheSessionStateStoreProvider,\n                  Microsoft.Web.DistributedCache\" \n            cacheName=\"default\" \n            dataCacheClientName=\"default\"/>\n        </providers>\n      </sessionState>\n    </system.web>-->\n\n>If your web.config does not contain this commented out section after installing the Caching NuGet package, ensure that the latest NuGet Package Manager is installed from [NuGet Package Manager Installation][], and then uninstall and reinstall the package.\n\nTo enable the Session State Provider for In-Role Cache, uncomment the specified section. The default cache is specified in the provided snippet. To use a different cache, specify the desired cache in the **cacheName** attribute.\n\nFor more information about using the Caching service session state\nprovider, see [Session State Provider for In-Role Cache][].\n\n<a name=\"store-page\"></a>\n## How To: Store ASP.NET Page Output Caching in the Cache\n\nThe Output Cache Provider for In-Role Cache is an out-of-process storage mechanism for output cache data. This data is specifically for full HTTP\nresponses (page output caching). The provider plugs into the new output\ncache provider extensibility point that was introduced in ASP.NET 4. To\nuse the output cache provider, first configure your cache cluster, and then configure your ASP.NET application for caching using the Caching NuGet package, as described in [Getting Started with In-Role Cache][]. When the Caching NuGet package is installed, it adds the following commented out section in web.config that contains the required configuration for your ASP.NET application to use the Output Cache Provider for In-Role Cache.\n\n    <!--Uncomment this section to use In-Role Cache for output caching\n    <caching>\n      <outputCache defaultProvider=\"AFCacheOutputCacheProvider\">\n        <providers>\n          <add name=\"AFCacheOutputCacheProvider\" \n            type=\"Microsoft.Web.DistributedCache.DistributedCacheOutputCacheProvider,\n                  Microsoft.Web.DistributedCache\" \n            cacheName=\"default\" \n            dataCacheClientName=\"default\" />\n        </providers>\n      </outputCache>\n    </caching>-->\n\n>If your web.config does not contain this commented out section after installing the Caching NuGet package, ensure that the latest NuGet Package Manager is installed from [NuGet Package Manager Installation][], and then uninstall and reinstall the package.\n\nTo enable the Output Cache Provider for In-Role Cache, uncomment the specified section. The default cache is specified in the provided snippet. To use a different cache, specify the desired cache in the **cacheName** attribute.\n\nAdd an **OutputCache** directive to each page for which you wish to cache the output.\n\n    <%@ OutputCache Duration=\"60\" VaryByParam=\"*\" %>\n\nIn this example the cached page data will remain in the cache for 60 seconds, and a different version of the page will be cached for each parameter combination. For more information on the available options, see [OutputCache Directive][].\n\nFor more information about using the Output Cache Provider for In-Role Cache, see [Output Cache Provider for In-Role Cache][].\n\n<a name=\"next-steps\"></a>\n## Next Steps\n\nNow that you've learned the basics of In-Role Cache,\nfollow these links to learn how to do more complex caching tasks.\n\n-   See the MSDN Reference: [In-Role Cache][]\n-   Learn how to migrate to In-Role Cache: [Migrate to In-Role Cache][]\n-   Check out the samples: [In-Role Cache Samples][]\n-   Watch the [Maximum Performance: Accelerate Your Cloud Services Applications with Azure Caching][] session from TechEd 2013 on In-Role Cache\n\n<!-- INTRA-TOPIC LINKS -->\n[Next Steps]: #next-steps\n[What is In-Role Cache?]: #what-is\n[Create an Azure Cache]: #create-cache\n[Which type of caching is right for me?]: #choosing-cache\n[Getting Started with the In-Role Cache Service]: #getting-started-cache-service\n[Prepare Your Visual Studio Project to Use In-Role Cache]: #prepare-vs\n[Configure Your Application to Use Caching]: #configure-app\n[Getting Started with In-Role Cache]: #getting-started-cache-role-instance\n[Configure the cache cluster]: #enable-caching\n[Configure the desired cache size]: #cache-size\n[Configure the cache clients]: #NuGet\n[Working with Caches]: #working-with-caches\n[How To: Create a DataCache Object]: #create-cache-object\n[How To: Add and Retrieve an Object from the Cache]: #add-object\n[How To: Specify the Expiration of an Object in the Cache]: #specify-expiration\n[How To: Store ASP.NET Session State in the Cache]: #store-session\n[How To: Store ASP.NET Page Output Caching in the Cache]: #store-page\n[Target a Supported .NET Framework Profile]: #prepare-vs-target-net\n \n<!-- IMAGES --> \n[RoleCache1]: ./media/cache-dotnet-how-to-use-in-role/cache8.png\n[RoleCache2]: ./media/cache-dotnet-how-to-use-in-role/cache9.png\n[RoleCache3]: ./media/cache-dotnet-how-to-use-in-role/cache10.png\n[RoleCache4]: ./media/cache-dotnet-how-to-use-in-role/cache11.png\n[RoleCache5]: ./media/cache-dotnet-how-to-use-in-role/cache12.png\n[RoleCache6]: ./media/cache-dotnet-how-to-use-in-role/cache13.png\n[RoleCache7]: ./media/cache-dotnet-how-to-use-in-role/cache14.png\n[RoleCache8]: ./media/cache-dotnet-how-to-use-in-role/cache15.png\n[RoleCache10]: ./media/cache-dotnet-how-to-use-in-role/cache17.png\n  \n<!-- LINKS -->\n[How to Configure Virtual Machine Sizes]: http://go.microsoft.com/fwlink/?LinkId=164387\n[How to: Configure a Cache Client Programmatically]: http://msdn.microsoft.com/library/windowsazure/gg618003.aspx\n[How to: Set a Page's Cacheability Programmatically]: http://msdn.microsoft.com/library/z852zf6b.aspx\n[How to: Set the Cacheability of an ASP.NET Page Declaratively]: http://msdn.microsoft.com/library/zd1ysf1y.aspx\n[In-Role Cache Capacity Planning Considerations]: http://go.microsoft.com/fwlink/?LinkId=252651\n[In-Role Cache Samples]: http://msdn.microsoft.com/library/jj189876.aspx\n[In-Role Cache]: http://go.microsoft.com/fwlink/?LinkId=252658\n[In-Role Cache]: http://www.microsoft.com/showcase/Search.aspx?phrase=azure+caching\n[Maximum Performance: Accelerate Your Cloud Services Applications with Azure Caching]: http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/WAD-B326#fbid=kmrzkRxQ6gU\n[Migrate to In-Role Cache]: http://msdn.microsoft.com/library/hh914163.aspx\n[NuGet Package Manager Installation]: http://go.microsoft.com/fwlink/?LinkId=240311\n[Output Cache Provider for In-Role Cache]: http://msdn.microsoft.com/library/windowsazure/gg185662.aspx\n[OutputCache Directive]: http://go.microsoft.com/fwlink/?LinkId=251979\n[Overview of In-Role Cache]: http://go.microsoft.com/fwlink/?LinkId=254172\n[Session State Provider for In-Role Cache]: http://msdn.microsoft.com/library/windowsazure/gg185668.aspx\n[Team Blog]: http://blogs.msdn.com/b/windowsazure/\n[Troubleshooting and Diagnostics for In-Role Cache]: http://msdn.microsoft.com/library/windowsazure/hh914135.aspx\n[Azure AppFabric Cache: Caching Session State]: http://www.microsoft.com/showcase/details.aspx?uuid=87c833e9-97a9-42b2-8bb1-7601f9b5ca20\n[Azure Management Portal]: http://windows.azure.com/\n[Azure Shared Caching]: http://msdn.microsoft.com/library/windowsazure/gg278356.aspx\n\n[Which Azure Cache offering is right for me?]: http://msdn.microsoft.com/library/azure/dn766201.aspx\n \n\ntest\n"
}