{
  "nodes": [
    {
      "content": "How to get started with Mobile Services in a JavaScript project in Visual Studio",
      "pos": [
        48,
        128
      ]
    },
    {
      "content": "Getting Started with Mobile Services",
      "pos": [
        470,
        506
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        510,
        526
      ]
    },
    {
      "content": "Getting Started",
      "pos": [
        532,
        547
      ]
    },
    {
      "content": "What Happened",
      "pos": [
        604,
        617
      ]
    },
    {
      "content": "The first step you need to do in order to follow the code in these examples depends on what type of mobile service you connected to.",
      "pos": [
        668,
        800
      ]
    },
    {
      "content": "For a JavaScript backend mobile service, create a table called TodoItem.",
      "pos": [
        802,
        874
      ]
    },
    {
      "content": "To create a table,  locate the mobile service under the Azure node in Server Explorer, right-click the mobile service's node to open the context menu, and choose <bpt id=\"p1\">**</bpt>Create Table<ept id=\"p1\">**</ept>.",
      "pos": [
        876,
        1055
      ]
    },
    {
      "content": "Enter \"TodoItem\" as the table name.",
      "pos": [
        1056,
        1091
      ]
    },
    {
      "content": "If instead you have a .NET backend mobile service, there's already a TodoItem table in the default project template that Visual Studio created for you, but you need to publish it to Azure.",
      "pos": [
        1093,
        1281
      ]
    },
    {
      "content": "To publish it, open the context menu for the mobile service project in Solution Explorer, and choose <bpt id=\"p1\">**</bpt>Publish Web<ept id=\"p1\">**</ept>.",
      "pos": [
        1282,
        1399
      ]
    },
    {
      "content": "Accept the defaults, and choose the <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> button.",
      "pos": [
        1400,
        1455
      ]
    },
    {
      "content": "Get a reference to a table",
      "pos": [
        1459,
        1485
      ]
    },
    {
      "content": "The client object was added to your project already.",
      "pos": [
        1487,
        1539
      ]
    },
    {
      "content": "Its name is the name of your mobile service with \"Client\" appended to it.",
      "pos": [
        1541,
        1614
      ]
    },
    {
      "content": "The following code gets a reference to a table that contains data for a TodoItem, which you can use in subsequent operations to read and update the data table.",
      "pos": [
        1615,
        1774
      ]
    },
    {
      "content": "Add an entry",
      "pos": [
        1845,
        1857
      ]
    },
    {
      "content": "Insert a new item into a data table.",
      "pos": [
        1860,
        1896
      ]
    },
    {
      "content": "An id (a GUID of type string) is automatically created as the primary key for the new row.",
      "pos": [
        1897,
        1987
      ]
    },
    {
      "content": "Don't change the type of the id column, since the mobile services infrastructure uses it.",
      "pos": [
        1988,
        2077
      ]
    },
    {
      "content": "Read/query a table",
      "pos": [
        2335,
        2353
      ]
    },
    {
      "content": "The following code queries a table for all items, updates a local collection and binds the result to the UI element listItems.",
      "pos": [
        2355,
        2481
      ]
    },
    {
      "content": "You can use the where method to modify the query.",
      "pos": [
        2827,
        2876
      ]
    },
    {
      "content": "Here's an example that filters out completed items.",
      "pos": [
        2877,
        2928
      ]
    },
    {
      "pos": [
        3213,
        3329
      ],
      "content": "For more examples of queries you can use, see <bpt id=\"p1\">[</bpt>query object<ept id=\"p1\">](http://msdn.microsoft.com/library/azure/jj613353.aspx)</ept>."
    },
    {
      "content": "Update an entry",
      "pos": [
        3333,
        3348
      ]
    },
    {
      "content": "Update a row in a data table.",
      "pos": [
        3350,
        3379
      ]
    },
    {
      "content": "In this example, <bpt id=\"p1\">*</bpt>todoItem<ept id=\"p1\">*</ept> is the updated item, and <bpt id=\"p2\">*</bpt>item<ept id=\"p2\">*</ept> is the same item as returned from the mobile service.",
      "pos": [
        3380,
        3493
      ]
    },
    {
      "content": "When the mobile service responds, the item is updated in the local todoItems list using the <bpt id=\"p1\">[</bpt>splice<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/Hh700810.aspx)</ept> method.",
      "pos": [
        3494,
        3664
      ]
    },
    {
      "content": "Call the <bpt id=\"p1\">**</bpt>done<ept id=\"p1\">**</ept> method on the returned <bpt id=\"p2\">[</bpt>Promise<ept id=\"p2\">](https://msdn.microsoft.com/library/dn802826.aspx)</ept> object to get a copy of the inserted object and handle any errors.",
      "pos": [
        3665,
        3832
      ]
    },
    {
      "content": "Delete an entry",
      "pos": [
        3974,
        3989
      ]
    },
    {
      "content": "Delete a row in a data table.",
      "pos": [
        3991,
        4020
      ]
    },
    {
      "content": "Call the <bpt id=\"p1\">[</bpt>done<ept id=\"p1\">]()</ept> method on the returned <bpt id=\"p2\">[</bpt>Promise<ept id=\"p2\">](https://msdn.microsoft.com/library/dn802826.aspx)</ept> object to get a copy of the inserted object and handle any errors.",
      "pos": [
        4021,
        4188
      ]
    },
    {
      "content": "Learn more about mobile services",
      "pos": [
        4305,
        4337
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"\" \n    description=\"How to get started with Mobile Services in a JavaScript project in Visual Studio\" \n    services=\"mobile-services\" \n    documentationCenter=\"\" \n    authors=\"patshea123\" \n    manager=\"douge\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"mobile-services\" \n    ms.workload=\"mobile\" \n    ms.tgt_pltfrm=\"vs-getting-started\" \n    ms.devlang=\"JavaScript\" \n    ms.topic=\"article\" \n    ms.date=\"08/12/2015\" \n    ms.author=\"patshea\"/>\n\n# Getting Started with Mobile Services\n\n> [AZURE.SELECTOR]\n> - [Getting Started](vs-mobile-services-javascript-getting-started.md)\n> - [What Happened](vs-mobile-services-javascript-what-happened.md)\n\nThe first step you need to do in order to follow the code in these examples depends on what type of mobile service you connected to.\n\nFor a JavaScript backend mobile service, create a table called TodoItem.  To create a table,  locate the mobile service under the Azure node in Server Explorer, right-click the mobile service's node to open the context menu, and choose **Create Table**. Enter \"TodoItem\" as the table name.\n\nIf instead you have a .NET backend mobile service, there's already a TodoItem table in the default project template that Visual Studio created for you, but you need to publish it to Azure. To publish it, open the context menu for the mobile service project in Solution Explorer, and choose **Publish Web**. Accept the defaults, and choose the **Publish** button.\n\n##Get a reference to a table\n\nThe client object was added to your project already.  Its name is the name of your mobile service with \"Client\" appended to it. The following code gets a reference to a table that contains data for a TodoItem, which you can use in subsequent operations to read and update the data table.\n\n    var todoTable = yourMobileServiceClient.getTable('TodoItem');\n\n##Add an entry \n\nInsert a new item into a data table. An id (a GUID of type string) is automatically created as the primary key for the new row. Don't change the type of the id column, since the mobile services infrastructure uses it.\n\n    var todoTable = client.getTable('TodoItem');\n    var todoItems = new WinJS.Binding.List();\n    var insertTodoItem = function (todoItem) {\n        todoTable.insert(todoItem).done(function (item) {\n            todoItems.push(item);\n        });\n    };\n\n##Read/query a table\n\nThe following code queries a table for all items, updates a local collection and binds the result to the UI element listItems.\n\n        // This code refreshes the entries in the list view \n        // by querying the TodoItems table.\n        todoTable.where()\n            .read()\n            .done(function (results) {\n                todoItems = new WinJS.Binding.List(results);\n                listItems.winControl.itemDataSource = todoItems.dataSource;\n            });\n\nYou can use the where method to modify the query. Here's an example that filters out completed items.\n\n    todoTable.where(function () {\n        return (this.complete === false && this.createdAt !== null);\n    })\n    .read()\n    .done(function (results) {\n        todoItems = new WinJS.Binding.List(results);\n        listItems.winControl.itemDataSource = todoItems.dataSource;\n    });\n\nFor more examples of queries you can use, see [query object](http://msdn.microsoft.com/library/azure/jj613353.aspx).\n\n##Update an entry\n\nUpdate a row in a data table. In this example, *todoItem* is the updated item, and *item* is the same item as returned from the mobile service. When the mobile service responds, the item is updated in the local todoItems list using the [splice](http://msdn.microsoft.com/library/windows/apps/Hh700810.aspx) method. Call the **done** method on the returned [Promise](https://msdn.microsoft.com/library/dn802826.aspx) object to get a copy of the inserted object and handle any errors.\n\n        todoTable.update(todoItem).done(function (item) {\n            todoItems.splice(todoItems.indexOf(item), 1, item);\n        });\n\n#####Delete an entry\n\nDelete a row in a data table. Call the [done]() method on the returned [Promise](https://msdn.microsoft.com/library/dn802826.aspx) object to get a copy of the inserted object and handle any errors.\n\n    todoTable.del(todoItem).done(function (item) {\n        todoItems.splice(todoItems.indexOf(item), 1);\n    }\n\n\n\n[Learn more about mobile services](http://azure.microsoft.com/documentation/services/mobile-services/) \n"
}