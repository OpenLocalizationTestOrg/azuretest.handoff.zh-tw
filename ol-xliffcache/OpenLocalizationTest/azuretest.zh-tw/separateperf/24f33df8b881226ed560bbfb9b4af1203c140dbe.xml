{
  "nodes": [
    {
      "content": "Get started with Azure Search in NodeJS | Microsoft Azure",
      "pos": [
        27,
        84
      ]
    },
    {
      "content": "Walk through building a custom Azure Search application using NodeJS as your programming language.",
      "pos": [
        103,
        201
      ]
    },
    {
      "content": "Get started with Azure Search in NodeJS",
      "pos": [
        504,
        543
      ]
    },
    {
      "content": "Learn how to build a custom NodeJS search application that uses Azure Search for its search experience.",
      "pos": [
        545,
        648
      ]
    },
    {
      "content": "This tutorial uses the <bpt id=\"p1\">[</bpt>Azure Search Service REST API<ept id=\"p1\">](https://msdn.microsoft.com/library/dn798935.aspx)</ept> to construct the objects and operations used in this exercise.",
      "pos": [
        649,
        816
      ]
    },
    {
      "pos": [
        818,
        980
      ],
      "content": "We used <bpt id=\"p1\">[</bpt>NodeJS<ept id=\"p1\">](https://nodejs.org)</ept> and NPM, <bpt id=\"p2\">[</bpt>Sublime Text 3<ept id=\"p2\">](http://www.sublimetext.com/3)</ept>, and Windows PowerShell on Windows 8.1 to develop and test this code."
    },
    {
      "pos": [
        982,
        1110
      ],
      "content": "To run this sample, you need an Azure Search service, which you can sign up for in the <bpt id=\"p1\">[</bpt>Azure portal<ept id=\"p1\">](https://portal.azure.com)</ept>."
    },
    {
      "pos": [
        1114,
        1252
      ],
      "content": "<ph id=\"ph1\">[AZURE.TIP]</ph> Download the source code for this tutorial at <bpt id=\"p1\">[</bpt>AzureSearchNodeJSIndexerDemo<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=530198)</ept>."
    },
    {
      "content": "About the data",
      "pos": [
        1257,
        1271
      ]
    },
    {
      "content": "This sample application uses data from the <bpt id=\"p1\">[</bpt>United States Geological Services (USGS)<ept id=\"p1\">](http://geonames.usgs.gov/domestic/download_data.htm)</ept>, filtered on the state of Rhode Island to reduce the dataset size.",
      "pos": [
        1273,
        1478
      ]
    },
    {
      "content": "We'll use this data to build a search application that returns landmark buildings such as hospitals and schools, as well as geological features like streams, lakes, and summits.",
      "pos": [
        1479,
        1656
      ]
    },
    {
      "content": "In this application, the <bpt id=\"p1\">**</bpt>DataIndexer<ept id=\"p1\">**</ept> program builds and loads the index using an <bpt id=\"p2\">[</bpt>Indexer<ept id=\"p2\">](https://msdn.microsoft.com/library/azure/dn798918.aspx)</ept> construct, retrieving the filtered USGS dataset from a public Azure SQL Database.",
      "pos": [
        1658,
        1890
      ]
    },
    {
      "content": "Credentials and connection  information to the online data source is provided in the program code.",
      "pos": [
        1891,
        1989
      ]
    },
    {
      "content": "No further configuration is necessary.",
      "pos": [
        1990,
        2028
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> We applied a filter on this dataset to stay under the 10,000 document limit of the free pricing tier.",
      "pos": [
        2032,
        2146
      ]
    },
    {
      "content": "If you use the standard tier, this limit does not apply.",
      "pos": [
        2147,
        2203
      ]
    },
    {
      "content": "For details about capacity for each pricing tier, see <bpt id=\"p1\">[</bpt>Limits and constraints<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn798934.aspx)</ept>.",
      "pos": [
        2204,
        2339
      ]
    },
    {
      "content": "Create the service",
      "pos": [
        2344,
        2362
      ]
    },
    {
      "pos": [
        2367,
        2419
      ],
      "content": "Sign in to <bpt id=\"p1\">[</bpt>Azure portal<ept id=\"p1\">](https://portal.azure.com)</ept>."
    },
    {
      "pos": [
        2424,
        2488
      ],
      "content": "In the Jumpbar, click <bpt id=\"p1\">**</bpt>New<ept id=\"p1\">**</ept> &gt; <bpt id=\"p2\">**</bpt>Data + Storage<ept id=\"p2\">**</ept> &gt; <bpt id=\"p3\">**</bpt>Search<ept id=\"p3\">**</ept>."
    },
    {
      "content": "![][1]",
      "pos": [
        2495,
        2501
      ]
    },
    {
      "content": "Configure the service name, pricing tier, resource group, subscription and location.",
      "pos": [
        2506,
        2590
      ]
    },
    {
      "content": "These settings are required and cannot be changed once the service is provisioned.",
      "pos": [
        2591,
        2673
      ]
    },
    {
      "content": "![][2]",
      "pos": [
        2680,
        2686
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Service name<ept id=\"p1\">**</ept> must be unique, lower-case, under 15 characters, with no spaces.",
      "pos": [
        2694,
        2775
      ]
    },
    {
      "content": "This name becomes part of the endpoint of your Azure Search service.",
      "pos": [
        2776,
        2844
      ]
    },
    {
      "content": "See <bpt id=\"p1\">[</bpt>Naming Rules<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn857353.aspx)</ept> for more information about naming conventions.",
      "pos": [
        2845,
        2966
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Pricing Tier<ept id=\"p1\">**</ept> determines capacity and billing.",
      "pos": [
        2974,
        3023
      ]
    },
    {
      "content": "Both tiers provide the same features, but at different resource levels.",
      "pos": [
        3024,
        3095
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Free<ept id=\"p1\">**</ept>  runs on clusters that are shared with other subscribers.",
      "pos": [
        3107,
        3173
      ]
    },
    {
      "content": "It offers enough capacity to try out tutorials and write proof-of-concept code, but is not intended for production applications.",
      "pos": [
        3174,
        3302
      ]
    },
    {
      "content": "Deploying a free service typically only takes a few minutes.",
      "pos": [
        3303,
        3363
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Standard<ept id=\"p1\">**</ept> runs on dedicated resources and is highly scalable.",
      "pos": [
        3374,
        3438
      ]
    },
    {
      "content": "Initially, a standard service is provisioned with one replica and one partition, but you can adjust capacity once the service is created.",
      "pos": [
        3439,
        3576
      ]
    },
    {
      "content": "Deploying a standard service takes longer, usually about fifteen minutes.",
      "pos": [
        3577,
        3650
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Resource Groups<ept id=\"p1\">**</ept> are containers for services and resources used for a common purpose.",
      "pos": [
        3658,
        3746
      ]
    },
    {
      "content": "For example, if you're building a custom search application based on Azure Search, Azure Websites, Azure BLOB storage, you could create a resource group that keeps these services together in the portal management pages.",
      "pos": [
        3747,
        3966
      ]
    },
    {
      "pos": [
        3974,
        4081
      ],
      "content": "<bpt id=\"p1\">**</bpt>Subscription<ept id=\"p1\">**</ept> allows you to choose among multiple subscriptions, if you have more than one subscription."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Location<ept id=\"p1\">**</ept> is the data center region.",
      "pos": [
        4089,
        4128
      ]
    },
    {
      "content": "Currently, all resources must run in the same data center.",
      "pos": [
        4129,
        4187
      ]
    },
    {
      "content": "Distributing resources across multiple data centers is not supported.",
      "pos": [
        4188,
        4257
      ]
    },
    {
      "pos": [
        4262,
        4304
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept> to provision the service."
    },
    {
      "content": "Watch for notifications in the Jumpbar.",
      "pos": [
        4306,
        4345
      ]
    },
    {
      "content": "A notice appears when the service is ready to use.",
      "pos": [
        4346,
        4396
      ]
    },
    {
      "content": "Find the service name and api-key of your Azure Search service",
      "pos": [
        4420,
        4482
      ]
    },
    {
      "content": "After you create the service, return to the portal to get the URL or <ph id=\"ph1\">`api-key`</ph>.",
      "pos": [
        4484,
        4563
      ]
    },
    {
      "content": "Connections to your Search service require that you have both the URL and an <ph id=\"ph1\">`api-key`</ph> to authenticate the call.",
      "pos": [
        4564,
        4676
      ]
    },
    {
      "pos": [
        4681,
        4776
      ],
      "content": "In the Jumpbar, click <bpt id=\"p1\">**</bpt>Home<ept id=\"p1\">**</ept> and then click the Search service to open the service dashboard."
    },
    {
      "content": "On the service dashboard, you'll see tiles for essential information, as well as the key icon for accessing the admin keys.",
      "pos": [
        4781,
        4904
      ]
    },
    {
      "content": "![][3]",
      "pos": [
        4910,
        4916
      ]
    },
    {
      "content": "Copy the service URL, an admin key, and a query key.",
      "pos": [
        4921,
        4973
      ]
    },
    {
      "content": "You'll need all three later, when you add them to the config.js file.",
      "pos": [
        4974,
        5043
      ]
    },
    {
      "content": "Download the sample files",
      "pos": [
        5048,
        5073
      ]
    },
    {
      "content": "Use either one of the following approaches to download the sample.",
      "pos": [
        5075,
        5141
      ]
    },
    {
      "pos": [
        5146,
        5232
      ],
      "content": "Go to <bpt id=\"p1\">[</bpt>AzureSearchNodeJSIndexerDemo<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=530198)</ept>."
    },
    {
      "pos": [
        5236,
        5323
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Download ZIP<ept id=\"p1\">**</ept>, save the .zip file, and then extract all the files it contains."
    },
    {
      "content": "All subsequent file modifications and run statements will be made against files in this folder.",
      "pos": [
        5325,
        5420
      ]
    },
    {
      "pos": [
        5422,
        5592
      ],
      "content": "Alternatively, if you have GIT in your path statement, you can open a PowerShell window and type <ph id=\"ph1\">`git clone https://github.com/EvanBoyle/AzureSearchNodeJSIndexerDemo.git`</ph>"
    },
    {
      "content": "Update the config.js.",
      "pos": [
        5597,
        5618
      ]
    },
    {
      "content": "with your Search service URL and api-key",
      "pos": [
        5619,
        5659
      ]
    },
    {
      "content": "Using the URL and api-key that you copied earlier, specify the URL, admin-key, and query-key in configuration file.",
      "pos": [
        5661,
        5776
      ]
    },
    {
      "content": "Admin keys grant full control over service operations, including creating or deleting an index and loading documents.",
      "pos": [
        5778,
        5895
      ]
    },
    {
      "content": "In contrast, query keys are for read-only operations, typically used by client applications that connect to Azure Search.",
      "pos": [
        5896,
        6017
      ]
    },
    {
      "content": "In this sample, we include the query key to help reinforce the best practice of using the query key in client applications.",
      "pos": [
        6019,
        6142
      ]
    },
    {
      "pos": [
        6144,
        6349
      ],
      "content": "The following screenshot shows <bpt id=\"p1\">**</bpt>config.js<ept id=\"p1\">**</ept> open in a text editor, with the relevant entries demarcated so that you can see where to update the file with the values that are valid for your search service."
    },
    {
      "content": "![][5]",
      "pos": [
        6351,
        6357
      ]
    },
    {
      "content": "Host a runtime environment for the sample",
      "pos": [
        6363,
        6404
      ]
    },
    {
      "content": "The sample requires an HTTP server, which you can install globally using npm.",
      "pos": [
        6406,
        6483
      ]
    },
    {
      "content": "Use a PowerShell window for the following commands.",
      "pos": [
        6485,
        6536
      ]
    },
    {
      "pos": [
        6541,
        6604
      ],
      "content": "Navigate to the folder that contains the <bpt id=\"p1\">**</bpt>package.json<ept id=\"p1\">**</ept> file."
    },
    {
      "pos": [
        6608,
        6627
      ],
      "content": "Type <ph id=\"ph1\">`npm install`</ph>."
    },
    {
      "pos": [
        6631,
        6665
      ],
      "content": "Type <ph id=\"ph1\">`npm install -g http-server`</ph>."
    },
    {
      "content": "Build the index and run the application",
      "pos": [
        6670,
        6709
      ]
    },
    {
      "pos": [
        6714,
        6744
      ],
      "content": "Type <ph id=\"ph1\">`npm run indexDocuments`</ph>."
    },
    {
      "pos": [
        6748,
        6769
      ],
      "content": "Type <ph id=\"ph1\">`npm run build`</ph>."
    },
    {
      "pos": [
        6773,
        6801
      ],
      "content": "Type <ph id=\"ph1\">`npm run start_server`</ph>."
    },
    {
      "pos": [
        6805,
        6862
      ],
      "content": "Direct your browser at <ph id=\"ph1\">`http://localhost:8080/index.html`</ph>"
    },
    {
      "content": "Search on USGS data",
      "pos": [
        6867,
        6886
      ]
    },
    {
      "content": "The USGS data set includes records that are relevant to the state of Rhode Island.",
      "pos": [
        6888,
        6970
      ]
    },
    {
      "content": "If you click <bpt id=\"p1\">**</bpt>Search<ept id=\"p1\">**</ept> on an empty search box, you will get the top 50 entries, which is the default.",
      "pos": [
        6971,
        7073
      ]
    },
    {
      "content": "Entering a search term will give the search engine something to go on.",
      "pos": [
        7075,
        7145
      ]
    },
    {
      "content": "Try entering a regional name.",
      "pos": [
        7146,
        7175
      ]
    },
    {
      "content": "\"Roger Williams\" was the first governor of Rhode Island.",
      "pos": [
        7176,
        7232
      ]
    },
    {
      "content": "Numerous parks, buildings, and schools are named after him.",
      "pos": [
        7233,
        7292
      ]
    },
    {
      "content": "![][9]",
      "pos": [
        7294,
        7300
      ]
    },
    {
      "content": "You could also try any of these terms:",
      "pos": [
        7302,
        7340
      ]
    },
    {
      "content": "Pawtucket",
      "pos": [
        7344,
        7353
      ]
    },
    {
      "content": "Pembroke",
      "pos": [
        7356,
        7364
      ]
    },
    {
      "content": "goose +cape",
      "pos": [
        7367,
        7378
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        7384,
        7394
      ]
    },
    {
      "content": "This is the first Azure Search tutorial based on NodeJS and the USGS dataset.",
      "pos": [
        7396,
        7473
      ]
    },
    {
      "content": "Over time, we'll extend this tutorial to demonstrate additional search features you might want to use in your custom solutions.",
      "pos": [
        7474,
        7601
      ]
    },
    {
      "content": "If you already have some background in Azure Search, you can use this sample as a springboard for trying suggesters (type-ahead or autocomplete queries), filters, and faceted navigation.",
      "pos": [
        7603,
        7789
      ]
    },
    {
      "content": "You can also improve upon the search results page by adding counts and batching documents so that users can page through the results.",
      "pos": [
        7790,
        7923
      ]
    },
    {
      "content": "New to Azure Search?",
      "pos": [
        7925,
        7945
      ]
    },
    {
      "content": "We recommend trying other tutorials to develop an understanding of what you can create.",
      "pos": [
        7946,
        8033
      ]
    },
    {
      "content": "Visit our <bpt id=\"p1\">[</bpt>documentation page<ept id=\"p1\">](http://azure.microsoft.com/documentation/services/search/)</ept> to find more resources.",
      "pos": [
        8034,
        8147
      ]
    },
    {
      "content": "You can also view the links in our <bpt id=\"p1\">[</bpt>Video and Tutorial list<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn798933.aspx)</ept> to access more information.",
      "pos": [
        8148,
        8292
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Get started with Azure Search in NodeJS | Microsoft Azure\"\n    description=\"Walk through building a custom Azure Search application using NodeJS as your programming language.\"\n    services=\"search\"\n    documentationCenter=\"\"\n    authors=\"HeidiSteen\"\n    manager=\"mblythe\"\n    editor=\"v-lincan\"/>\n\n<tags\n    ms.service=\"search\"\n    ms.devlang=\"na\"\n    ms.workload=\"search\"\n    ms.topic=\"hero-article\"\n    ms.tgt_pltfrm=\"na\"\n    ms.date=\"08/18/2015\"\n    ms.author=\"heidist\"/>\n\n# Get started with Azure Search in NodeJS\n\nLearn how to build a custom NodeJS search application that uses Azure Search for its search experience. This tutorial uses the [Azure Search Service REST API](https://msdn.microsoft.com/library/dn798935.aspx) to construct the objects and operations used in this exercise.\n\nWe used [NodeJS](https://nodejs.org) and NPM, [Sublime Text 3](http://www.sublimetext.com/3), and Windows PowerShell on Windows 8.1 to develop and test this code.\n\nTo run this sample, you need an Azure Search service, which you can sign up for in the [Azure portal](https://portal.azure.com).\n\n> [AZURE.TIP] Download the source code for this tutorial at [AzureSearchNodeJSIndexerDemo](http://go.microsoft.com/fwlink/p/?LinkId=530198).\n\n## About the data\n\nThis sample application uses data from the [United States Geological Services (USGS)](http://geonames.usgs.gov/domestic/download_data.htm), filtered on the state of Rhode Island to reduce the dataset size. We'll use this data to build a search application that returns landmark buildings such as hospitals and schools, as well as geological features like streams, lakes, and summits.\n\nIn this application, the **DataIndexer** program builds and loads the index using an [Indexer](https://msdn.microsoft.com/library/azure/dn798918.aspx) construct, retrieving the filtered USGS dataset from a public Azure SQL Database. Credentials and connection  information to the online data source is provided in the program code. No further configuration is necessary.\n\n> [AZURE.NOTE] We applied a filter on this dataset to stay under the 10,000 document limit of the free pricing tier. If you use the standard tier, this limit does not apply. For details about capacity for each pricing tier, see [Limits and constraints](https://msdn.microsoft.com/library/azure/dn798934.aspx).\n\n## Create the service\n\n1. Sign in to [Azure portal](https://portal.azure.com).\n\n2. In the Jumpbar, click **New** > **Data + Storage** > **Search**.\n\n     ![][1]\n\n3. Configure the service name, pricing tier, resource group, subscription and location. These settings are required and cannot be changed once the service is provisioned.\n\n     ![][2]\n\n    - **Service name** must be unique, lower-case, under 15 characters, with no spaces. This name becomes part of the endpoint of your Azure Search service. See [Naming Rules](https://msdn.microsoft.com/library/azure/dn857353.aspx) for more information about naming conventions.\n\n    - **Pricing Tier** determines capacity and billing. Both tiers provide the same features, but at different resource levels.\n\n        - **Free**  runs on clusters that are shared with other subscribers. It offers enough capacity to try out tutorials and write proof-of-concept code, but is not intended for production applications. Deploying a free service typically only takes a few minutes.\n        - **Standard** runs on dedicated resources and is highly scalable. Initially, a standard service is provisioned with one replica and one partition, but you can adjust capacity once the service is created. Deploying a standard service takes longer, usually about fifteen minutes.\n\n    - **Resource Groups** are containers for services and resources used for a common purpose. For example, if you're building a custom search application based on Azure Search, Azure Websites, Azure BLOB storage, you could create a resource group that keeps these services together in the portal management pages.\n\n    - **Subscription** allows you to choose among multiple subscriptions, if you have more than one subscription.\n\n    - **Location** is the data center region. Currently, all resources must run in the same data center. Distributing resources across multiple data centers is not supported.\n\n4. Click **Create** to provision the service.\n\nWatch for notifications in the Jumpbar. A notice appears when the service is ready to use.\n\n<a id=\"sub-2\"></a>\n## Find the service name and api-key of your Azure Search service\n\nAfter you create the service, return to the portal to get the URL or `api-key`. Connections to your Search service require that you have both the URL and an `api-key` to authenticate the call.\n\n1. In the Jumpbar, click **Home** and then click the Search service to open the service dashboard.\n\n2. On the service dashboard, you'll see tiles for essential information, as well as the key icon for accessing the admin keys.\n\n    ![][3]\n\n3. Copy the service URL, an admin key, and a query key. You'll need all three later, when you add them to the config.js file.\n\n## Download the sample files\n\nUse either one of the following approaches to download the sample.\n\n1. Go to [AzureSearchNodeJSIndexerDemo](http://go.microsoft.com/fwlink/p/?LinkId=530198).\n2. Click **Download ZIP**, save the .zip file, and then extract all the files it contains.\n\nAll subsequent file modifications and run statements will be made against files in this folder.\n\nAlternatively, if you have GIT in your path statement, you can open a PowerShell window and type `git clone https://github.com/EvanBoyle/AzureSearchNodeJSIndexerDemo.git`\n\n## Update the config.js. with your Search service URL and api-key\n\nUsing the URL and api-key that you copied earlier, specify the URL, admin-key, and query-key in configuration file.\n\nAdmin keys grant full control over service operations, including creating or deleting an index and loading documents. In contrast, query keys are for read-only operations, typically used by client applications that connect to Azure Search.\n\nIn this sample, we include the query key to help reinforce the best practice of using the query key in client applications.\n\nThe following screenshot shows **config.js** open in a text editor, with the relevant entries demarcated so that you can see where to update the file with the values that are valid for your search service.\n\n![][5]\n\n\n## Host a runtime environment for the sample\n\nThe sample requires an HTTP server, which you can install globally using npm.\n\nUse a PowerShell window for the following commands.\n\n1. Navigate to the folder that contains the **package.json** file.\n2. Type `npm install`.\n2. Type `npm install -g http-server`.\n\n## Build the index and run the application\n\n1. Type `npm run indexDocuments`.\n2. Type `npm run build`.\n3. Type `npm run start_server`.\n4. Direct your browser at `http://localhost:8080/index.html`\n\n## Search on USGS data\n\nThe USGS data set includes records that are relevant to the state of Rhode Island. If you click **Search** on an empty search box, you will get the top 50 entries, which is the default.\n\nEntering a search term will give the search engine something to go on. Try entering a regional name. \"Roger Williams\" was the first governor of Rhode Island. Numerous parks, buildings, and schools are named after him.\n\n![][9]\n\nYou could also try any of these terms:\n\n- Pawtucket\n- Pembroke\n- goose +cape\n\n\n## Next steps\n\nThis is the first Azure Search tutorial based on NodeJS and the USGS dataset. Over time, we'll extend this tutorial to demonstrate additional search features you might want to use in your custom solutions.\n\nIf you already have some background in Azure Search, you can use this sample as a springboard for trying suggesters (type-ahead or autocomplete queries), filters, and faceted navigation. You can also improve upon the search results page by adding counts and batching documents so that users can page through the results.\n\nNew to Azure Search? We recommend trying other tutorials to develop an understanding of what you can create. Visit our [documentation page](http://azure.microsoft.com/documentation/services/search/) to find more resources. You can also view the links in our [Video and Tutorial list](https://msdn.microsoft.com/library/azure/dn798933.aspx) to access more information.\n\n<!--Image references-->\n[1]: ./media/search-get-started-nodejs/create-search-portal-1.PNG\n[2]: ./media/search-get-started-nodejs/create-search-portal-2.PNG\n[3]: ./media/search-get-started-nodejs/create-search-portal-3.PNG\n[5]: ./media/search-get-started-nodejs/AzSearch-NodeJS-configjs.png\n[9]: ./media/search-get-started-nodejs/rogerwilliamsschool.png\n"
}