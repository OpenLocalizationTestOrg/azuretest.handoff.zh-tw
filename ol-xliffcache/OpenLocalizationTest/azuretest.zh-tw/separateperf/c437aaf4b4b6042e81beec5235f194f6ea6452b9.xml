{
  "nodes": [
    {
      "content": "Configure Application Gateway for SSL offload | Microsoft Azure",
      "pos": [
        27,
        90
      ]
    },
    {
      "content": "This article provides instructions to configure SSL offload on an Azure Application Gateway.",
      "pos": [
        108,
        200
      ]
    },
    {
      "content": "Configure an Application Gateway for SSL offload",
      "pos": [
        524,
        572
      ]
    },
    {
      "content": "Application Gateway can be configured to terminate the SSL session at the gateway, which can avoid costly SSL decryption on the web farm.",
      "pos": [
        574,
        711
      ]
    },
    {
      "content": "SSL offload also simplifies the frontend server setup and management of the application.",
      "pos": [
        712,
        800
      ]
    },
    {
      "content": "Before you begin",
      "pos": [
        805,
        821
      ]
    },
    {
      "content": "Install latest version of the Azure PowerShell cmdlets using the Web Platform Installer.",
      "pos": [
        826,
        914
      ]
    },
    {
      "content": "You can download and install the latest version from the <bpt id=\"p1\">**</bpt>Windows PowerShell<ept id=\"p1\">**</ept> section of the <bpt id=\"p2\">[</bpt>Download page<ept id=\"p2\">](http://azure.microsoft.com/downloads/)</ept>.",
      "pos": [
        915,
        1065
      ]
    },
    {
      "content": "Verify that you have a working virtual network with a valid subnet.",
      "pos": [
        1069,
        1136
      ]
    },
    {
      "content": "Verify that you have backend servers either in the virtual network, or with a public IP/VIP assigned.",
      "pos": [
        1140,
        1241
      ]
    },
    {
      "content": "To configure SSL offload on an Application Gateway, do the following steps in the order listed.",
      "pos": [
        1243,
        1338
      ]
    },
    {
      "content": "Create a new application gateway",
      "pos": [
        1344,
        1376
      ]
    },
    {
      "content": "Upload SSL certificates",
      "pos": [
        1417,
        1440
      ]
    },
    {
      "content": "Configure the gateway",
      "pos": [
        1473,
        1494
      ]
    },
    {
      "content": "Set the gateway configuration",
      "pos": [
        1524,
        1553
      ]
    },
    {
      "content": "Start the gateway",
      "pos": [
        1591,
        1608
      ]
    },
    {
      "content": "Verify the gateway status",
      "pos": [
        1634,
        1659
      ]
    },
    {
      "content": "Create a new application gateway",
      "pos": [
        1694,
        1726
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>To create the gateway<ept id=\"p1\">**</ept>, use the <ph id=\"ph1\">`New-AzureApplicationGateway`</ph> cmdlet, replacing the values with your own.",
      "pos": [
        1728,
        1836
      ]
    },
    {
      "content": "Note that billing for the gateway does not start at this point.",
      "pos": [
        1837,
        1900
      ]
    },
    {
      "content": "Billing begins in a later step, when the gateway is successfully started.",
      "pos": [
        1901,
        1974
      ]
    },
    {
      "content": "This sample shows the cmdlet on the first line, followed by the output.",
      "pos": [
        1976,
        2047
      ]
    },
    {
      "pos": [
        2537,
        2636
      ],
      "content": "<bpt id=\"p1\">**</bpt>To validate<ept id=\"p1\">**</ept> that the gateway was created, you can use the <ph id=\"ph1\">`Get-AzureApplicationGateway`</ph> cmdlet."
    },
    {
      "content": "In the sample, <bpt id=\"p1\">*</bpt>Description<ept id=\"p1\">*</ept>, <bpt id=\"p2\">*</bpt>InstanceCount<ept id=\"p2\">*</ept>, and <bpt id=\"p3\">*</bpt>GatewaySize<ept id=\"p3\">*</ept> are optional parameters.",
      "pos": [
        2639,
        2728
      ]
    },
    {
      "content": "The default value for <bpt id=\"p1\">*</bpt>InstanceCount<ept id=\"p1\">*</ept> is 2, with a maximum value of 10.",
      "pos": [
        2729,
        2800
      ]
    },
    {
      "content": "The default value for <bpt id=\"p1\">*</bpt>GatewaySize<ept id=\"p1\">*</ept> is Medium.",
      "pos": [
        2801,
        2847
      ]
    },
    {
      "content": "Small and Large are other available values.",
      "pos": [
        2848,
        2891
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>Vip<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>DnsName<ept id=\"p2\">*</ept> are shown as blank because the gateway has not started yet.",
      "pos": [
        2892,
        2971
      ]
    },
    {
      "content": "These will be created once the gateway is in the running state.",
      "pos": [
        2972,
        3035
      ]
    },
    {
      "content": "This sample shows the cmdlet on the first line, followed by the output.",
      "pos": [
        3037,
        3108
      ]
    },
    {
      "content": "Upload SSL certificates",
      "pos": [
        3504,
        3527
      ]
    },
    {
      "content": "Use <ph id=\"ph1\">`Add-AzureApplicationGatewaySslCertificate`</ph> to upload the server certificate in <bpt id=\"p1\">*</bpt>pfx<ept id=\"p1\">*</ept> format to the application gateway.",
      "pos": [
        3530,
        3654
      ]
    },
    {
      "content": "The certificate name is a user-chosen name and must be unique within the application gateway.",
      "pos": [
        3655,
        3748
      ]
    },
    {
      "content": "This certificate is referred to by this name in all certificate management operations on the application gateway.",
      "pos": [
        3749,
        3862
      ]
    },
    {
      "content": "This sample shows the cmdlet on the first line, followed by the output.",
      "pos": [
        3864,
        3935
      ]
    },
    {
      "content": "Replace the values in the sample with your own.",
      "pos": [
        3936,
        3983
      ]
    },
    {
      "content": "Next, validate the certificate upload.",
      "pos": [
        4563,
        4601
      ]
    },
    {
      "content": "Use the <ph id=\"ph1\">`Get-AzureApplicationGatewayCertificate`</ph>.",
      "pos": [
        4602,
        4651
      ]
    },
    {
      "content": "This sample shows the cmdlet on the first line, followed by the output.",
      "pos": [
        4653,
        4724
      ]
    },
    {
      "content": "Configure the gateway",
      "pos": [
        5171,
        5192
      ]
    },
    {
      "content": "An application gateway configuration consists of multiple values.",
      "pos": [
        5194,
        5259
      ]
    },
    {
      "content": "The values can be tied together to construct the configuration.",
      "pos": [
        5260,
        5323
      ]
    },
    {
      "content": "The values are:",
      "pos": [
        5326,
        5341
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Backend server pool:<ept id=\"p1\">**</ept> The list of IP addresses of the backend servers.",
      "pos": [
        5346,
        5419
      ]
    },
    {
      "content": "The IP addresses listed should either belong to the VNet subnet, or should be a public IP/VIP.",
      "pos": [
        5420,
        5514
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Backend server pool settings:<ept id=\"p1\">**</ept> Every pool has settings like port, protocol, and cookie based affinity.",
      "pos": [
        5518,
        5623
      ]
    },
    {
      "content": "These settings are tied to a pool and are applied to all servers within the pool.",
      "pos": [
        5624,
        5705
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Frontend Port:<ept id=\"p1\">**</ept> This port is the public port opened on the application gateway.",
      "pos": [
        5708,
        5790
      ]
    },
    {
      "content": "Traffic hits this port, and then gets redirected to one of the backend servers.",
      "pos": [
        5791,
        5870
      ]
    },
    {
      "pos": [
        5873,
        6033
      ],
      "content": "<bpt id=\"p1\">**</bpt>Listener:<ept id=\"p1\">**</ept> The listener has a frontend port, a protocol (Http or Https, these are case-sensitive), and the SSL certificate name (if configuring SSL offload)."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Rule:<ept id=\"p1\">**</ept> The rule binds the listener and the backend server pool and defines which backend server pool the traffic should be directed to when it hits a particular listener.",
      "pos": [
        6037,
        6210
      ]
    },
    {
      "content": "Currently, only the <bpt id=\"p1\">*</bpt>basic<ept id=\"p1\">*</ept> rule is supported.",
      "pos": [
        6211,
        6257
      ]
    },
    {
      "content": "The <bpt id=\"p1\">*</bpt>basic<ept id=\"p1\">*</ept> rule is round-robin load distribution.",
      "pos": [
        6258,
        6308
      ]
    },
    {
      "content": "Additional configuration notes:",
      "pos": [
        6312,
        6343
      ]
    },
    {
      "content": "For SSL certificates configuration, the protocol in <bpt id=\"p1\">**</bpt>HttpListener<ept id=\"p1\">**</ept> should change to <bpt id=\"p2\">*</bpt>Https<ept id=\"p2\">*</ept> (case sensitive).",
      "pos": [
        6347,
        6458
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>SslCert<ept id=\"p1\">**</ept> element needs to be added to <bpt id=\"p2\">**</bpt>HttpListener<ept id=\"p2\">**</ept> with the value set to the same name as used in upload of SSL certificates section above.",
      "pos": [
        6459,
        6609
      ]
    },
    {
      "content": "The frontend port should be updated to 443.",
      "pos": [
        6610,
        6653
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>To enable cookie based affinity<ept id=\"p1\">**</ept>: An application gateway can be configured to ensure that request from a client session is always directed to the same VM in the web farm.",
      "pos": [
        6655,
        6828
      ]
    },
    {
      "content": "This is done by injection of a session cookie which allows the gateway to direct traffic appropriately.",
      "pos": [
        6829,
        6932
      ]
    },
    {
      "content": "To enable cookie based affinity, set <bpt id=\"p1\">**</bpt>CookieBasedAffinity<ept id=\"p1\">**</ept> to <bpt id=\"p2\">*</bpt>Enabled<ept id=\"p2\">*</ept> in the <bpt id=\"p3\">**</bpt>BackendHttpSettings<ept id=\"p3\">**</ept> element.",
      "pos": [
        6933,
        7046
      ]
    },
    {
      "content": "You can construct your configuration either by creating a configuration object, or by using a configuration XML file.",
      "pos": [
        7051,
        7168
      ]
    },
    {
      "content": "To construct your configuration by using a configuration XML file, use the sample below.",
      "pos": [
        7170,
        7258
      ]
    },
    {
      "content": "Configuration XML sample",
      "pos": [
        7262,
        7286
      ]
    },
    {
      "content": "Set the gateway configuration",
      "pos": [
        9101,
        9130
      ]
    },
    {
      "content": "Next, you'll set the application gateway.",
      "pos": [
        9132,
        9173
      ]
    },
    {
      "content": "You can use the <ph id=\"ph1\">`Set-AzureApplicationGatewayConfig`</ph> cmdlet with either a configuration object, or with a configuration XML file.",
      "pos": [
        9174,
        9302
      ]
    },
    {
      "content": "Start the gateway",
      "pos": [
        9796,
        9813
      ]
    },
    {
      "content": "Once the gateway has been configured, use the <ph id=\"ph1\">`Start-AzureApplicationGateway`</ph> cmdlet to start the gateway.",
      "pos": [
        9815,
        9921
      ]
    },
    {
      "content": "Billing for an application gateway begins after the gateway has been successfully started.",
      "pos": [
        9922,
        10012
      ]
    },
    {
      "pos": [
        10016,
        10112
      ],
      "content": "<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> The <ph id=\"ph1\">`Start-AzureApplicationGateway`</ph> cmdlet might take up to 15-20 minutes to complete."
    },
    {
      "content": "Verify the gateway status",
      "pos": [
        10568,
        10593
      ]
    },
    {
      "content": "Use the <ph id=\"ph1\">`Get-AzureApplicationGateway`</ph> cmdlet to check the status of gateway.",
      "pos": [
        10595,
        10671
      ]
    },
    {
      "content": "If <bpt id=\"p1\">*</bpt>Start-AzureApplicationGateway<ept id=\"p1\">*</ept> succeeded in the previous step, the State should be <bpt id=\"p2\">*</bpt>Running<ept id=\"p2\">*</ept>, and the Vip and DnsName should have valid entries.",
      "pos": [
        10672,
        10820
      ]
    },
    {
      "content": "This sample shows an application gateway that is up, running, and is ready to take traffic",
      "pos": [
        10823,
        10913
      ]
    },
    {
      "content": "Next Steps",
      "pos": [
        11274,
        11284
      ]
    },
    {
      "content": "If you want more information about load balancing options in general, see:",
      "pos": [
        11287,
        11361
      ]
    },
    {
      "content": "Azure Load Balancer",
      "pos": [
        11366,
        11385
      ]
    },
    {
      "content": "Azure Traffic Manager",
      "pos": [
        11457,
        11478
      ]
    },
    {
      "content": "test",
      "pos": [
        11550,
        11554
      ]
    }
  ],
  "content": "<properties \n   pageTitle=\"Configure Application Gateway for SSL offload | Microsoft Azure\"\n   description=\"This article provides instructions to configure SSL offload on an Azure Application Gateway.\"\n   documentationCenter=\"na\"\n   services=\"application-gateway\"\n   authors=\"joaoma\"\n   manager=\"jdial\"\n   editor=\"tysonn\"/>\n<tags \n   ms.service=\"application-gateway\"\n   ms.devlang=\"na\"\n   ms.topic=\"article\" \n   ms.tgt_pltfrm=\"na\"\n   ms.workload=\"infrastructure-services\" \n   ms.date=\"06/30/2015\"\n   ms.author=\"joaoma\"/>\n\n# Configure an Application Gateway for SSL offload\n\nApplication Gateway can be configured to terminate the SSL session at the gateway, which can avoid costly SSL decryption on the web farm. SSL offload also simplifies the frontend server setup and management of the application.\n\n## Before you begin\n\n1. Install latest version of the Azure PowerShell cmdlets using the Web Platform Installer. You can download and install the latest version from the **Windows PowerShell** section of the [Download page](http://azure.microsoft.com/downloads/).\n2. Verify that you have a working virtual network with a valid subnet.\n3. Verify that you have backend servers either in the virtual network, or with a public IP/VIP assigned.\n\nTo configure SSL offload on an Application Gateway, do the following steps in the order listed.\n\n1. [Create a new application gateway](#create-a-new-application-gateway)\n2. [Upload SSL certificates](#upload-ssl-certificates) \n3. [Configure the gateway](#configure-the-gateway)\n4. [Set the gateway configuration](#set-the-gateway-configuration)\n5. [Start the gateway](#start-the-gateway)\n6. [Verify the gateway status](#verify-the-gateway-status)\n\n\n## Create a new application gateway\n\n**To create the gateway**, use the `New-AzureApplicationGateway` cmdlet, replacing the values with your own. Note that billing for the gateway does not start at this point. Billing begins in a later step, when the gateway is successfully started.\n\nThis sample shows the cmdlet on the first line, followed by the output. \n\n    PS C:\\> New-AzureApplicationGateway -Name AppGwTest -VnetName testvnet1 -Subnets @(\"Subnet-1\")\n\n    VERBOSE: 4:31:35 PM - Begin Operation: New-AzureApplicationGateway \n    VERBOSE: 4:32:37 PM - Completed Operation: New-AzureApplicationGateway\n    Name       HTTP Status Code     Operation ID                             Error \n    ----       ----------------     ------------                             ----\n    Successful OK                   55ef0460-825d-2981-ad20-b9a8af41b399\n\n**To validate** that the gateway was created, you can use the `Get-AzureApplicationGateway` cmdlet.\n\n\nIn the sample, *Description*, *InstanceCount*, and *GatewaySize* are optional parameters. The default value for *InstanceCount* is 2, with a maximum value of 10. The default value for *GatewaySize* is Medium. Small and Large are other available values. *Vip* and *DnsName* are shown as blank because the gateway has not started yet. These will be created once the gateway is in the running state.\n\nThis sample shows the cmdlet on the first line, followed by the output. \n\n    PS C:\\> Get-AzureApplicationGateway AppGwTest\n\n    VERBOSE: 4:39:39 PM - Begin Operation:\n    Get-AzureApplicationGateway VERBOSE: 4:39:40 PM - Completed \n    Operation: Get-AzureApplicationGateway\n    Name: AppGwTest \n    Description: \n    VnetName: testvnet1 \n    Subnets: {Subnet-1} \n    InstanceCount: 2 \n    GatewaySize: Medium \n    State: Stopped \n    VirtualIPs: \n    DnsName:\n\n\n## Upload SSL certificates \n\nUse `Add-AzureApplicationGatewaySslCertificate` to upload the server certificate in *pfx* format to the application gateway. The certificate name is a user-chosen name and must be unique within the application gateway. This certificate is referred to by this name in all certificate management operations on the application gateway.\n\nThis sample shows the cmdlet on the first line, followed by the output. Replace the values in the sample with your own.\n\n    PS C:\\> Add-AzureApplicationGatewaySslCertificate  -Name AppGwTest -CertificateName GWCert -Password <password> -CertificateFile <full path to pfx file> \n    \n    VERBOSE: 5:05:23 PM - Begin Operation: Get-AzureApplicationGatewaySslCertificate \n    VERBOSE: 5:06:29 PM - Completed Operation: Get-AzureApplicationGatewaySslCertificate\n    Name       HTTP Status Code     Operation ID                             Error \n    ----       ----------------     ------------                             ----\n    Successful OK                   21fdc5a0-3bf7-2c12-ad98-192e0dd078ef\n\nNext, validate the certificate upload. Use the `Get-AzureApplicationGatewayCertificate`.\n\nThis sample shows the cmdlet on the first line, followed by the output. \n\n    PS C:\\> Get-AzureApplicationGatewaySslCertificate AppGwTest \n\n    VERBOSE: 5:07:54 PM - Begin Operation: Get-AzureApplicationGatewaySslCertificate \n    VERBOSE: 5:07:55 PM - Completed Operation: Get-AzureApplicationGatewaySslCertificate\n    Name           : SslCert \n    SubjectName    : CN=gwcert.app.test.contoso.com \n    Thumbprint     : AF5ADD77E160A01A6......EE48D1A \n    ThumbprintAlgo : sha1RSA\n    State..........: Provisioned\n\n\n## Configure the gateway\n\nAn application gateway configuration consists of multiple values. The values can be tied together to construct the configuration. \n\nThe values are:\n \n- **Backend server pool:** The list of IP addresses of the backend servers. The IP addresses listed should either belong to the VNet subnet, or should be a public IP/VIP. \n- **Backend server pool settings:** Every pool has settings like port, protocol, and cookie based affinity. These settings are tied to a pool and are applied to all servers within the pool.\n- **Frontend Port:** This port is the public port opened on the application gateway. Traffic hits this port, and then gets redirected to one of the backend servers.\n- **Listener:** The listener has a frontend port, a protocol (Http or Https, these are case-sensitive), and the SSL certificate name (if configuring SSL offload). \n- **Rule:** The rule binds the listener and the backend server pool and defines which backend server pool the traffic should be directed to when it hits a particular listener. Currently, only the *basic* rule is supported. The *basic* rule is round-robin load distribution.\n\n**Additional configuration notes:**\n\nFor SSL certificates configuration, the protocol in **HttpListener** should change to *Https* (case sensitive). The **SslCert** element needs to be added to **HttpListener** with the value set to the same name as used in upload of SSL certificates section above. The frontend port should be updated to 443.\n\n**To enable cookie based affinity**: An application gateway can be configured to ensure that request from a client session is always directed to the same VM in the web farm. This is done by injection of a session cookie which allows the gateway to direct traffic appropriately. To enable cookie based affinity, set **CookieBasedAffinity** to *Enabled* in the **BackendHttpSettings** element. \n\n\n\nYou can construct your configuration either by creating a configuration object, or by using a configuration XML file. \nTo construct your configuration by using a configuration XML file, use the sample below.\n\n**Configuration XML sample**\n\n\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <ApplicationGatewayConfiguration xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/windowsazure\">\n        <FrontendIPConfigurations />\n        <FrontendPorts>\n            <FrontendPort>\n                <Name>FrontendPort1</Name>\n                <Port>443</Port>\n            </FrontendPort>\n        </FrontendPorts>\n        <BackendAddressPools>\n            <BackendAddressPool>\n                <Name>BackendPool1</Name>\n                <IPAddresses>\n                    <IPAddress>10.0.0.1</IPAddress>\n                    <IPAddress>10.0.0.2</IPAddress>\n                </IPAddresses>\n            </BackendAddressPool>\n        </BackendAddressPools>\n        <BackendHttpSettingsList>\n            <BackendHttpSettings>\n                <Name>BackendSetting1</Name>\n                <Port>80</Port>\n                <Protocol>Http</Protocol>\n                <CookieBasedAffinity>Enabled</CookieBasedAffinity>\n            </BackendHttpSettings>\n        </BackendHttpSettingsList>\n        <HttpListeners>\n            <HttpListener>\n                <Name>HTTPListener1</Name>\n                <FrontendPort>FrontendPort1</FrontendPort>\n                <Protocol>Https</Protocol>\n                <SslCert>GWCert</SslCert>\n            </HttpListener>\n        </HttpListeners>\n        <HttpLoadBalancingRules>\n            <HttpLoadBalancingRule>\n                <Name>HttpLBRule1</Name>\n                <Type>basic</Type>\n                <BackendHttpSettings>BackendSetting1</BackendHttpSettings>\n                <Listener>HTTPListener1</Listener>\n                <BackendAddressPool>BackendPool1</BackendAddressPool>\n            </HttpLoadBalancingRule>\n        </HttpLoadBalancingRules>\n    </ApplicationGatewayConfiguration>\n\n\n## Set the gateway configuration\n\nNext, you'll set the application gateway. You can use the `Set-AzureApplicationGatewayConfig` cmdlet with either a configuration object, or with a configuration XML file.\n\n\n    PS C:\\> Set-AzureApplicationGatewayConfig -Name AppGwTest -ConfigFile D:\\config.xml\n\n    VERBOSE: 7:54:59 PM - Begin Operation: Set-AzureApplicationGatewayConfig \n    VERBOSE: 7:55:32 PM - Completed Operation: Set-AzureApplicationGatewayConfig\n    Name       HTTP Status Code     Operation ID                             Error \n    ----       ----------------     ------------                             ----\n    Successful OK                   9b995a09-66fe-2944-8b67-9bb04fcccb9d\n\n## Start the gateway\n\nOnce the gateway has been configured, use the `Start-AzureApplicationGateway` cmdlet to start the gateway. Billing for an application gateway begins after the gateway has been successfully started. \n\n\n**Note:** The `Start-AzureApplicationGateway` cmdlet might take up to 15-20 minutes to complete. \n\n   \n    PS C:\\> Start-AzureApplicationGateway AppGwTest \n\n    VERBOSE: 7:59:16 PM - Begin Operation: Start-AzureApplicationGateway \n    VERBOSE: 8:05:52 PM - Completed Operation: Start-AzureApplicationGateway\n    Name       HTTP Status Code     Operation ID                             Error \n    ----       ----------------     ------------                             ----\n    Successful OK                   fc592db8-4c58-2c8e-9a1d-1c97880f0b9b\n\n\n## Verify the gateway status\n\nUse the `Get-AzureApplicationGateway` cmdlet to check the status of gateway. If *Start-AzureApplicationGateway* succeeded in the previous step, the State should be *Running*, and the Vip and DnsName should have valid entries. \n\nThis sample shows an application gateway that is up, running, and is ready to take traffic \n\n    PS C:\\> Get-AzureApplicationGateway AppGwTest \n\n    Name          : AppGwTest2\n    Description   : \n    VnetName      : testvnet1\n    Subnets       : {Subnet-1}\n    InstanceCount : 2\n    GatewaySize   : Medium\n    State         : Running\n    VirtualIPs    : {23.96.22.241}\n    DnsName       : appgw-4c960426-d1e6-4aae-8670-81fd7a519a43.cloudapp.net\n\n\n## Next Steps\n\n\nIf you want more information about load balancing options in general, see:\n\n- [Azure Load Balancer](https://azure.microsoft.com/documentation/services/load-balancer/)\n- [Azure Traffic Manager](https://azure.microsoft.com/documentation/services/traffic-manager/)\n\ntest\n"
}