<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a REST service using ASP.NET Web API and SQL Database in Azure App Service</source>
          <target state="new">Create a REST service using ASP.NET Web API and SQL Database in Azure App Service</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A tutorial that teaches you how to deploy an app that uses the ASP.NET Web API to an Azure web app by using Visual Studio.</source>
          <target state="new">A tutorial that teaches you how to deploy an app that uses the ASP.NET Web API to an Azure web app by using Visual Studio.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create a REST service using ASP.NET Web API and SQL Database in Azure App Service</source>
          <target state="new">Create a REST service using ASP.NET Web API and SQL Database in Azure App Service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial shows how to deploy an ASP.NET web app to an <bpt id="p1">[</bpt>Azure App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept> by using the Publish Web wizard in Visual Studio 2013 or Visual Studio 2013 for Web Express.</source>
          <target state="new">This tutorial shows how to deploy an ASP.NET web app to an <bpt id="p1">[</bpt>Azure App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept> by using the Publish Web wizard in Visual Studio 2013 or Visual Studio 2013 for Web Express.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can open an Azure account for free, and if you don't already have Visual Studio 2013, the SDK automatically installs Visual Studio 2013 for Web Express.</source>
          <target state="new">You can open an Azure account for free, and if you don't already have Visual Studio 2013, the SDK automatically installs Visual Studio 2013 for Web Express.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>So you can start developing for Azure entirely for free.</source>
          <target state="new">So you can start developing for Azure entirely for free.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This tutorial assumes that you have no prior experience using Azure.</source>
          <target state="new">This tutorial assumes that you have no prior experience using Azure.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>On completing this tutorial, you'll have a simple web app up and running in the cloud.</source>
          <target state="new">On completing this tutorial, you'll have a simple web app up and running in the cloud.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You'll learn:</source>
          <target state="new">You'll learn:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>How to enable your machine for Azure development by installing the Azure SDK.</source>
          <target state="new">How to enable your machine for Azure development by installing the Azure SDK.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>How to create a Visual Studio ASP.NET MVC 5 project and publish it to an Azure app.</source>
          <target state="new">How to create a Visual Studio ASP.NET MVC 5 project and publish it to an Azure app.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>How to use the ASP.NET Web API to enable Restful API calls.</source>
          <target state="new">How to use the ASP.NET Web API to enable Restful API calls.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>How to use a SQL database to store data in Azure.</source>
          <target state="new">How to use a SQL database to store data in Azure.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>How to publish application updates to Azure.</source>
          <target state="new">How to publish application updates to Azure.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You'll build a simple contact list web application that is built on ASP.NET MVC 5 and uses the ADO.NET Entity Framework for database access.</source>
          <target state="new">You'll build a simple contact list web application that is built on ASP.NET MVC 5 and uses the ADO.NET Entity Framework for database access.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following illustration shows the completed application:</source>
          <target state="new">The following illustration shows the completed application:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>screenshot of web site</source>
          <target state="new">screenshot of web site</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
[AZURE.INCLUDE [create-account-and-websites-note](../../includes/create-account-and-websites-note.md)]</ph><ph id="ph2">

###</ph> Create the project

1.</source>
          <target state="new"><ph id="ph1">
[AZURE.INCLUDE [create-account-and-websites-note](../../includes/create-account-and-websites-note.md)]</ph><ph id="ph2">

###</ph> Create the project

1.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Start Visual Studio 2013.</source>
          <target state="new">Start Visual Studio 2013.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu click <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu click <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, expand <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Web<ept id="p3">**</ept>  and then select <bpt id="p4">**</bpt>ASP.NET MVC 5 Web Application<ept id="p4">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, expand <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Web<ept id="p3">**</ept>  and then select <bpt id="p4">**</bpt>ASP.NET MVC 5 Web Application<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Name the application <bpt id="p1">**</bpt>ContactManager<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new">Name the application <bpt id="p1">**</bpt>ContactManager<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![New Project dialog box](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rr4.PNG)</ph>]

1.</source>
          <target state="new"><ph id="ph1">![New Project dialog box](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rr4.PNG)</ph>]

1.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New ASP.NET Project<ept id="p1">**</ept> dialog box, select the <bpt id="p2">**</bpt>MVC<ept id="p2">**</ept> template, check <bpt id="p3">**</bpt>Web API<ept id="p3">**</ept> and then click <bpt id="p4">**</bpt>Change Authentication<ept id="p4">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>New ASP.NET Project<ept id="p1">**</ept> dialog box, select the <bpt id="p2">**</bpt>MVC<ept id="p2">**</ept> template, check <bpt id="p3">**</bpt>Web API<ept id="p3">**</ept> and then click <bpt id="p4">**</bpt>Change Authentication<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![New ASP.NET Project dialog box](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rt3.PNG)</ph><ph id="ph2">

1.</ph> In the <bpt id="p1">**</bpt>Change Authentication<ept id="p1">**</ept> dialog box, click <bpt id="p2">**</bpt>No Authentication<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</source>
          <target state="new"><ph id="ph1">![New ASP.NET Project dialog box](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rt3.PNG)</ph><ph id="ph2">

1.</ph> In the <bpt id="p1">**</bpt>Change Authentication<ept id="p1">**</ept> dialog box, click <bpt id="p2">**</bpt>No Authentication<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![No Authentication](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/GS13noauth.png)</ph>

    The sample application you're creating won't have features that require users to log in.</source>
          <target state="new"><ph id="ph1">![No Authentication](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/GS13noauth.png)</ph>

    The sample application you're creating won't have features that require users to log in.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For information about how to implement authentication and authorization features, see the <bpt id="p1">[</bpt><ept id="p1">Next Steps](#nextsteps)</ept> section at the end of this tutorial.</source>
          <target state="new">For information about how to implement authentication and authorization features, see the <bpt id="p1">[</bpt><ept id="p1">Next Steps](#nextsteps)</ept> section at the end of this tutorial.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New ASP.NET Project<ept id="p1">**</ept> dialog box, click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>New ASP.NET Project<ept id="p1">**</ept> dialog box, click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![New ASP.NET Project dialog box](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rt3.PNG)</ph>

If you have not previously signed in to Azure, you will be prompted to sign in.</source>
          <target state="new"><ph id="ph1">![New ASP.NET Project dialog box](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rt3.PNG)</ph>

If you have not previously signed in to Azure, you will be prompted to sign in.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The configuration wizard will suggest a unique name based on <bpt id="p1">*</bpt>ContactManager<ept id="p1">*</ept> (see the image below).</source>
          <target state="new">The configuration wizard will suggest a unique name based on <bpt id="p1">*</bpt>ContactManager<ept id="p1">*</ept> (see the image below).</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Select a region near you.</source>
          <target state="new">Select a region near you.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">[</bpt><ept id="p1">azurespeed.com](http://www.azurespeed.com/ "AzureSpeed.com")</ept> to find the lowest latency data center.</source>
          <target state="new">You can use <bpt id="p1">[</bpt><ept id="p1">azurespeed.com](http://www.azurespeed.com/ "AzureSpeed.com")</ept> to find the lowest latency data center.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you haven't created a database server before, select <bpt id="p1">**</bpt>Create new server<ept id="p1">**</ept>, enter a database user name and password.</source>
          <target state="new">If you haven't created a database server before, select <bpt id="p1">**</bpt>Create new server<ept id="p1">**</ept>, enter a database user name and password.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Configure Azure Website](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/configAz.PNG)</ph>

If you have a database server, use that to create a new database.</source>
          <target state="new"><ph id="ph1">![Configure Azure Website](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/configAz.PNG)</ph>

If you have a database server, use that to create a new database.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Database servers are a precious resource, and you generally want to create multiple databases on the same server for testing and development rather than creating a database server per database.</source>
          <target state="new">Database servers are a precious resource, and you generally want to create multiple databases on the same server for testing and development rather than creating a database server per database.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Make sure your web site and database are in the same region.</source>
          <target state="new">Make sure your web site and database are in the same region.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Configure Azure Website](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/configWithDB.PNG)</ph><ph id="ph2">

###</ph> Set the page header and footer


1.</source>
          <target state="new"><ph id="ph1">![Configure Azure Website](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/configWithDB.PNG)</ph><ph id="ph2">

###</ph> Set the page header and footer


1.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, expand the <bpt id="p2">*</bpt>Views\Shared<ept id="p2">*</ept> folder and open the <bpt id="p3">*</bpt>_Layout.cshtml<ept id="p3">*</ept> file.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, expand the <bpt id="p2">*</bpt>Views\Shared<ept id="p2">*</ept> folder and open the <bpt id="p3">*</bpt>_Layout.cshtml<ept id="p3">*</ept> file.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>![_Layout.cshtml in Solution Explorer][newapp004]

1.</source>
          <target state="new">![_Layout.cshtml in Solution Explorer][newapp004]

1.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Replace the contents of the <bpt id="p1">*</bpt>Views\Shared_Layout.cshtml<ept id="p1">*</ept> file with the following code:</source>
          <target state="new">Replace the contents of the <bpt id="p1">*</bpt>Views\Shared_Layout.cshtml<ept id="p1">*</ept> file with the following code:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>@ViewBag.Title - Contact Manager</source>
          <target state="new">@ViewBag.Title - Contact Manager</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>@Html.ActionLink("Contact Manager", "Index", "Home")</source>
          <target state="new">@Html.ActionLink("Contact Manager", "Index", "Home")</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>&amp;copy; @DateTime.Now.Year - Contact Manager</source>
          <target state="new">&amp;copy; @DateTime.Now.Year - Contact Manager</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The markup above changes the app name from "My ASP.NET App" to "Contact Manager", and it removes the links to <bpt id="p1">**</bpt>Home<ept id="p1">**</ept>, <bpt id="p2">**</bpt>About<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Contact<ept id="p3">**</ept>.</source>
          <target state="new">The markup above changes the app name from "My ASP.NET App" to "Contact Manager", and it removes the links to <bpt id="p1">**</bpt>Home<ept id="p1">**</ept>, <bpt id="p2">**</bpt>About<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Contact<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Run the application locally

1.</source>
          <target state="new">Run the application locally

1.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Press CTRL+F5 to run the application.</source>
          <target state="new">Press CTRL+F5 to run the application.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The application home page appears in the default browser.</source>
          <target state="new">The application home page appears in the default browser.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">    ![To Do List home page](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rr5.P</ph><ph id="ph2">NG)</ph>

This is all you need to do for now to create the application that you'll deploy to Azure.</source>
          <target state="new"><ph id="ph1">    ![To Do List home page](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rr5.P</ph><ph id="ph2">NG)</ph>

This is all you need to do for now to create the application that you'll deploy to Azure.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Later you'll add database functionality.</source>
          <target state="new">Later you'll add database functionality.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Deploy the application to Azure

1.</source>
          <target state="new">Deploy the application to Azure

1.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right-click the project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept> from the context menu.</source>
          <target state="new">In Visual Studio, right-click the project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept> from the context menu.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>![Publish in project context menu][PublishVSSolution]

    The <bpt id="p1">**</bpt>Publish Web<ept id="p1">**</ept> wizard opens.</source>
          <target state="new">![Publish in project context menu][PublishVSSolution]

    The <bpt id="p1">**</bpt>Publish Web<ept id="p1">**</ept> wizard opens.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>12.</source>
          <target state="new">12.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Settings tab](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/pw.png)</ph>

Visual Studio begins the process of copying the files to the Azure server.</source>
          <target state="new"><ph id="ph1">![Settings tab](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/pw.png)</ph>

Visual Studio begins the process of copying the files to the Azure server.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window shows what deployment actions were taken and reports successful completion of the deployment.</source>
          <target state="new">The <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window shows what deployment actions were taken and reports successful completion of the deployment.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>14.</source>
          <target state="new">14.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The default browser automatically opens to the URL of the deployed site.</source>
          <target state="new">The default browser automatically opens to the URL of the deployed site.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The application you created is now running in the cloud.</source>
          <target state="new">The application you created is now running in the cloud.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>![To Do List home page running in Azure][rxz2]

## Add a database to the application

Next, you'll update the MVC application to add the ability to display and update contacts and store the data in a database.</source>
          <target state="new">![To Do List home page running in Azure][rxz2]

## Add a database to the application

Next, you'll update the MVC application to add the ability to display and update contacts and store the data in a database.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The application will use the Entity Framework to create the database and to read and update data in the database.</source>
          <target state="new">The application will use the Entity Framework to create the database and to read and update data in the database.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Add data model classes for the contacts

You begin by creating a simple data model in code.</source>
          <target state="new">Add data model classes for the contacts

You begin by creating a simple data model in code.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the Models folder, click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, and then <bpt id="p3">**</bpt>Class<ept id="p3">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the Models folder, click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, and then <bpt id="p3">**</bpt>Class<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>![Add Class in Models folder context menu][adddb001]

2.</source>
          <target state="new">![Add Class in Models folder context menu][adddb001]

2.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box, name the new class file <bpt id="p2">*</bpt>Contact.cs<ept id="p2">*</ept>, and then click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box, name the new class file <bpt id="p2">*</bpt>Contact.cs<ept id="p2">*</ept>, and then click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>![Add New Item dialog box][adddb002]

3.</source>
          <target state="new">![Add New Item dialog box][adddb002]

3.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Replace the contents of the Contacts.cs file with the following code.</source>
          <target state="new">Replace the contents of the Contacts.cs file with the following code.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>using System.Globalization;
        namespace ContactManager.Models
        {
            public class Contact
            {
                public int ContactId { get; set; }
                public string Name { get; set; }
                public string Address { get; set; }
                public string City { get; set; }
                public string State { get; set; }
                public string Zip { get; set; }
                public string Email { get; set; }
                public string Twitter { get; set; }
                public string Self
                {
                    get { return string.Format(CultureInfo.CurrentCulture,
                         "api/contacts/{0}", this.ContactId); }
                    set { }
                }
            }
        }

The <bpt id="p1">**</bpt>Contacts<ept id="p1">**</ept> class defines the data that you will store for each contact, plus a primary key, ContactID, that is needed by the database.</source>
          <target state="new">using System.Globalization;
        namespace ContactManager.Models
        {
            public class Contact
            {
                public int ContactId { get; set; }
                public string Name { get; set; }
                public string Address { get; set; }
                public string City { get; set; }
                public string State { get; set; }
                public string Zip { get; set; }
                public string Email { get; set; }
                public string Twitter { get; set; }
                public string Self
                {
                    get { return string.Format(CultureInfo.CurrentCulture,
                         "api/contacts/{0}", this.ContactId); }
                    set { }
                }
            }
        }

The <bpt id="p1">**</bpt>Contacts<ept id="p1">**</ept> class defines the data that you will store for each contact, plus a primary key, ContactID, that is needed by the database.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can get more information about data models in the <bpt id="p1">[</bpt><ept id="p1">Next Steps](#nextsteps)</ept> section at the end of this tutorial.</source>
          <target state="new">You can get more information about data models in the <bpt id="p1">[</bpt><ept id="p1">Next Steps](#nextsteps)</ept> section at the end of this tutorial.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Create web pages that enable app users to work with the contacts

The ASP.NET MVC the scaffolding feature can automatically generate code that performs create, read, update, and delete (CRUD) actions.</source>
          <target state="new">Create web pages that enable app users to work with the contacts

The ASP.NET MVC the scaffolding feature can automatically generate code that performs create, read, update, and delete (CRUD) actions.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Add a Controller and a view for the data

1.</source>
          <target state="new">Add a Controller and a view for the data

1.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, expand the Controllers folder.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, expand the Controllers folder.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Build the project <bpt id="p1">**</bpt>(Ctrl+Shift+B)<ept id="p1">**</ept>.</source>
          <target state="new">Build the project <bpt id="p1">**</bpt>(Ctrl+Shift+B)<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>(You must build the project before using scaffolding mechanism.) 

4.</source>
          <target state="new">(You must build the project before using scaffolding mechanism.) 

4.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Right-click the Controllers folder and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Controller<ept id="p2">**</ept>.</source>
          <target state="new">Right-click the Controllers folder and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Controller<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>![Add Controller in Controllers folder context menu][addcode001]

1.</source>
          <target state="new">![Add Controller in Controllers folder context menu][addcode001]

1.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Scaffold<ept id="p1">**</ept> dialog box, select <bpt id="p2">**</bpt>MVC Controller with views, using Entity Framework<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Add Scaffold<ept id="p1">**</ept> dialog box, select <bpt id="p2">**</bpt>MVC Controller with views, using Entity Framework<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Add controller](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rrAC.PNG)</ph><ph id="ph2">

6.</ph> Set the controller name to <bpt id="p1">**</bpt>HomeController<ept id="p1">**</ept>.</source>
          <target state="new"><ph id="ph1">![Add controller](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rrAC.PNG)</ph><ph id="ph2">

6.</ph> Set the controller name to <bpt id="p1">**</bpt>HomeController<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Contact<ept id="p1">**</ept> as your model class.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Contact<ept id="p1">**</ept> as your model class.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>New data context<ept id="p1">**</ept> button and accept the default "ContactManager.Models.ContactManagerContext" for the <bpt id="p2">**</bpt>New data context type<ept id="p2">**</ept>.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>New data context<ept id="p1">**</ept> button and accept the default "ContactManager.Models.ContactManagerContext" for the <bpt id="p2">**</bpt>New data context type<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Add Controller dialog box](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rr9.PNG)</ph>

    A dialog box will prompt you: "A file with the name HomeController already exits.</source>
          <target state="new"><ph id="ph1">![Add Controller dialog box](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rr9.PNG)</ph>

    A dialog box will prompt you: "A file with the name HomeController already exits.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Do you want to replace it?".</source>
          <target state="new">Do you want to replace it?".</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>We are overwriting the Home Controller that was created with the new project.</source>
          <target state="new">We are overwriting the Home Controller that was created with the new project.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>We will use the new Home Controller for our contact list.</source>
          <target state="new">We will use the new Home Controller for our contact list.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Visual Studio creates a controller methods and views for CRUD database operations for <bpt id="p1">**</bpt>Contact<ept id="p1">**</ept> objects.</source>
          <target state="new">Visual Studio creates a controller methods and views for CRUD database operations for <bpt id="p1">**</bpt>Contact<ept id="p1">**</ept> objects.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Enable Migrations, create the database, add sample data and a data initializer ##

The next task is to enable the <bpt id="p1">[</bpt><ept id="p1">Code First Migrations](http://curah.microsoft.com/55220)</ept> feature in order to create the database based on the data model you created.</source>
          <target state="new">Enable Migrations, create the database, add sample data and a data initializer ##

The next task is to enable the <bpt id="p1">[</bpt><ept id="p1">Code First Migrations](http://curah.microsoft.com/55220)</ept> feature in order to create the database based on the data model you created.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>Library Package Manager<ept id="p2">**</ept> and then <bpt id="p3">**</bpt>Package Manager Console<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>Library Package Manager<ept id="p2">**</ept> and then <bpt id="p3">**</bpt>Package Manager Console<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>![Package Manager Console in Tools menu][addcode008]

2.</source>
          <target state="new">![Package Manager Console in Tools menu][addcode008]

2.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Package Manager Console<ept id="p1">**</ept> window, enter the following command:

        enable-migrations 
  
    The <bpt id="p2">**</bpt>enable-migrations<ept id="p2">**</ept> command creates a <bpt id="p3">*</bpt>Migrations<ept id="p3">*</ept> folder and it puts in that folder a <bpt id="p4">*</bpt>Configuration.cs<ept id="p4">*</ept> file that you can edit to configure Migrations.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Package Manager Console<ept id="p1">**</ept> window, enter the following command:

        enable-migrations 
  
    The <bpt id="p2">**</bpt>enable-migrations<ept id="p2">**</ept> command creates a <bpt id="p3">*</bpt>Migrations<ept id="p3">*</ept> folder and it puts in that folder a <bpt id="p4">*</bpt>Configuration.cs<ept id="p4">*</ept> file that you can edit to configure Migrations.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Package Manager Console<ept id="p1">**</ept> window, enter the following command:

        add-migration Initial

    The <bpt id="p2">**</bpt>add-migration Initial<ept id="p2">**</ept> command generates a class named <bpt id="p3">**</bpt>&amp;lt;date_stamp&amp;gt;Initial<ept id="p3">**</ept> that creates the database.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Package Manager Console<ept id="p1">**</ept> window, enter the following command:

        add-migration Initial

    The <bpt id="p2">**</bpt>add-migration Initial<ept id="p2">**</ept> command generates a class named <bpt id="p3">**</bpt>&amp;lt;date_stamp&amp;gt;Initial<ept id="p3">**</ept> that creates the database.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The first parameter ( <bpt id="p1">*</bpt>Initial<ept id="p1">*</ept> ) is arbitrary and used to create the name of the file.</source>
          <target state="new">The first parameter ( <bpt id="p1">*</bpt>Initial<ept id="p1">*</ept> ) is arbitrary and used to create the name of the file.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can see the new class files in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</source>
          <target state="new">You can see the new class files in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Initial<ept id="p1">**</ept> class, the <bpt id="p2">**</bpt>Up<ept id="p2">**</ept> method creates the Contacts table, and the <bpt id="p3">**</bpt>Down<ept id="p3">**</ept> method (used when you want to return to the previous state) drops it.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Initial<ept id="p1">**</ept> class, the <bpt id="p2">**</bpt>Up<ept id="p2">**</ept> method creates the Contacts table, and the <bpt id="p3">**</bpt>Down<ept id="p3">**</ept> method (used when you want to return to the previous state) drops it.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>Migrations\Configuration.cs<ept id="p1">*</ept> file.</source>
          <target state="new">Open the <bpt id="p1">*</bpt>Migrations\Configuration.cs<ept id="p1">*</ept> file.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="new">4.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Add the following namespaces.</source>
          <target state="new">Add the following namespaces.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>using ContactManager.Models;

5.</source>
          <target state="new">using ContactManager.Models;

5.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Replace the <bpt id="p1">*</bpt>Seed<ept id="p1">*</ept> method with the following code:
        
        protected override void Seed(ContactManager.Models.ContactManagerContext context)
        {
            context.Contacts.AddOrUpdate(p =&gt; p.Name,
               new Contact
               {
                   Name = "Debra Garcia",
                   Address = "1234 Main St",
                   City = "Redmond",
                   State = "WA",
                   Zip = "10999",
                   Email = "debra@example.com",
                   Twitter = "debra_example"
               },
                new Contact
                {
                    Name = "Thorsten Weinrich",
                    Address = "5678 1st Ave W",
                    City = "Redmond",
                    State = "WA",
                    Zip = "10999",
                    Email = "thorsten@example.com",
                    Twitter = "thorsten_example"
                },
                new Contact
                {
                    Name = "Yuhong Li",
                    Address = "9012 State st",
                    City = "Redmond",
                    State = "WA",
                    Zip = "10999",
                    Email = "yuhong@example.com",
                    Twitter = "yuhong_example"
                },
                new Contact
                {
                    Name = "Jon Orton",
                    Address = "3456 Maple St",
                    City = "Redmond",
                    State = "WA",
                    Zip = "10999",
                    Email = "jon@example.com",
                    Twitter = "jon_example"
                },
                new Contact
                {
                    Name = "Diliana Alexieva-Bosseva",
                    Address = "7890 2nd Ave E",
                    City = "Redmond",
                    State = "WA",
                    Zip = "10999",
                    Email = "diliana@example.com",
                    Twitter = "diliana_example"
                }
                );
        }

    This code above will initialize the database with the contact information.</source>
          <target state="new">Replace the <bpt id="p1">*</bpt>Seed<ept id="p1">*</ept> method with the following code:
        
        protected override void Seed(ContactManager.Models.ContactManagerContext context)
        {
            context.Contacts.AddOrUpdate(p =&gt; p.Name,
               new Contact
               {
                   Name = "Debra Garcia",
                   Address = "1234 Main St",
                   City = "Redmond",
                   State = "WA",
                   Zip = "10999",
                   Email = "debra@example.com",
                   Twitter = "debra_example"
               },
                new Contact
                {
                    Name = "Thorsten Weinrich",
                    Address = "5678 1st Ave W",
                    City = "Redmond",
                    State = "WA",
                    Zip = "10999",
                    Email = "thorsten@example.com",
                    Twitter = "thorsten_example"
                },
                new Contact
                {
                    Name = "Yuhong Li",
                    Address = "9012 State st",
                    City = "Redmond",
                    State = "WA",
                    Zip = "10999",
                    Email = "yuhong@example.com",
                    Twitter = "yuhong_example"
                },
                new Contact
                {
                    Name = "Jon Orton",
                    Address = "3456 Maple St",
                    City = "Redmond",
                    State = "WA",
                    Zip = "10999",
                    Email = "jon@example.com",
                    Twitter = "jon_example"
                },
                new Contact
                {
                    Name = "Diliana Alexieva-Bosseva",
                    Address = "7890 2nd Ave E",
                    City = "Redmond",
                    State = "WA",
                    Zip = "10999",
                    Email = "diliana@example.com",
                    Twitter = "diliana_example"
                }
                );
        }

    This code above will initialize the database with the contact information.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For more information on seeding the database, see <bpt id="p1">[</bpt><ept id="p1">Debugging Entity Framework (EF) DBs](http://blogs.msdn.com/b/rickandy/archive/2013/02/12/seeding-and-debugging-entity-framework-ef-dbs.aspx)</ept>.</source>
          <target state="new">For more information on seeding the database, see <bpt id="p1">[</bpt><ept id="p1">Debugging Entity Framework (EF) DBs](http://blogs.msdn.com/b/rickandy/archive/2013/02/12/seeding-and-debugging-entity-framework-ef-dbs.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Package Manager Console<ept id="p1">**</ept> enter the command:

        update-database

    ![Package Manager Console commands][addcode009]

    The <bpt id="p2">**</bpt>update-database<ept id="p2">**</ept> runs the first migration which creates the database.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Package Manager Console<ept id="p1">**</ept> enter the command:

        update-database

    ![Package Manager Console commands][addcode009]

    The <bpt id="p2">**</bpt>update-database<ept id="p2">**</ept> runs the first migration which creates the database.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>By default, the database is created as a SQL Server Express LocalDB database.</source>
          <target state="new">By default, the database is created as a SQL Server Express LocalDB database.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Press CTRL+F5 to run the application.</source>
          <target state="new">Press CTRL+F5 to run the application.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The application shows the seed data and provides edit, details and delete links.</source>
          <target state="new">The application shows the seed data and provides edit, details and delete links.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>![MVC view of data][rxz3]

## Edit the View

1.</source>
          <target state="new">![MVC view of data][rxz3]

## Edit the View

1.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>Views\Home\Index.cshtml<ept id="p1">*</ept> file.</source>
          <target state="new">Open the <bpt id="p1">*</bpt>Views\Home\Index.cshtml<ept id="p1">*</ept> file.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>In the next step, we will replace the generated markup with code that uses <bpt id="p1">[</bpt><ept id="p1">jQuery](http://jquery.com/)</ept> and <bpt id="p2">[</bpt><ept id="p2">Knockout.js](http://knockoutjs.com/)</ept>.</source>
          <target state="new">In the next step, we will replace the generated markup with code that uses <bpt id="p1">[</bpt><ept id="p1">jQuery](http://jquery.com/)</ept> and <bpt id="p2">[</bpt><ept id="p2">Knockout.js](http://knockoutjs.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This new code retrieves the list of contacts from using web API and JSON and then binds the contact data to the UI using knockout.js.</source>
          <target state="new">This new code retrieves the list of contacts from using web API and JSON and then binds the contact data to the UI using knockout.js.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt><ept id="p1">Next Steps](#nextsteps)</ept> section at the end of this tutorial.</source>
          <target state="new">For more information, see the <bpt id="p1">[</bpt><ept id="p1">Next Steps](#nextsteps)</ept> section at the end of this tutorial.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Replace the contents of the file with the following code.</source>
          <target state="new">Replace the contents of the file with the following code.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">@model IEnumerable</ph></source>
          <target state="new"><ph id="ph1">@model IEnumerable</ph></target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
                    &lt;span data-bind="text: $data.City || 'City?'"&gt;&lt;/span&gt;</ph>,
                    <ph id="ph2">&lt;span data-bind="text: $data.State || 'State?'"&gt;&lt;/span&gt;</ph><ph id="ph3">
                    &lt;span data-bind="text: $data.Zip || 'Zip?'"&gt;&lt;/span&gt;</ph><ph id="ph4">
                </ph></source>
          <target state="new"><ph id="ph1">
                    &lt;span data-bind="text: $data.City || 'City?'"&gt;&lt;/span&gt;</ph>,
                    <ph id="ph2">&lt;span data-bind="text: $data.State || 'State?'"&gt;&lt;/span&gt;</ph><ph id="ph3">
                    &lt;span data-bind="text: $data.Zip || 'Zip?'"&gt;&lt;/span&gt;</ph><ph id="ph4">
                </ph></target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Email?</source>
          <target state="new">Email?</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Twitter?</source>
          <target state="new">Twitter?</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Remove</source>
          <target state="new">Remove</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Add New Contact</source>
          <target state="new">Add New Contact</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
                        &lt;label for="Name"&gt;</ph>Name<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="Name" /&gt;</ph><ph id="ph4">
                    </ph></source>
          <target state="new"><ph id="ph1">
                        &lt;label for="Name"&gt;</ph>Name<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="Name" /&gt;</ph><ph id="ph4">
                    </ph></target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
                        &lt;label for="Address"&gt;</ph>Address<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="Address" &gt;</ph><ph id="ph4">
                    </ph></source>
          <target state="new"><ph id="ph1">
                        &lt;label for="Address"&gt;</ph>Address<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="Address" &gt;</ph><ph id="ph4">
                    </ph></target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
                        &lt;label for="City"&gt;</ph>City<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="City" /&gt;</ph><ph id="ph4">
                    </ph></source>
          <target state="new"><ph id="ph1">
                        &lt;label for="City"&gt;</ph>City<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="City" /&gt;</ph><ph id="ph4">
                    </ph></target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
                        &lt;label for="State"&gt;</ph>State<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="State" /&gt;</ph><ph id="ph4">
                    </ph></source>
          <target state="new"><ph id="ph1">
                        &lt;label for="State"&gt;</ph>State<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="State" /&gt;</ph><ph id="ph4">
                    </ph></target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
                        &lt;label for="Zip"&gt;</ph>Zip<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="Zip" /&gt;</ph><ph id="ph4">
                    </ph></source>
          <target state="new"><ph id="ph1">
                        &lt;label for="Zip"&gt;</ph>Zip<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="Zip" /&gt;</ph><ph id="ph4">
                    </ph></target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
                        &lt;label for="Email"&gt;</ph>E-mail<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="Email" /&gt;</ph><ph id="ph4">
                    </ph></source>
          <target state="new"><ph id="ph1">
                        &lt;label for="Email"&gt;</ph>E-mail<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="Email" /&gt;</ph><ph id="ph4">
                    </ph></target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
                        &lt;label for="Twitter"&gt;</ph>Twitter<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="Twitter" /&gt;</ph><ph id="ph4">
                    </ph></source>
          <target state="new"><ph id="ph1">
                        &lt;label for="Twitter"&gt;</ph>Twitter<ph id="ph2">&lt;/label&gt;</ph><ph id="ph3">
                        &lt;input type="text" name="Twitter" /&gt;</ph><ph id="ph4">
                    </ph></target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">

3.</ph> Right-click the Content folder and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Item...<ept id="p2">**</ept>.</source>
          <target state="new"><ph id="ph1">

3.</ph> Right-click the Content folder and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Item...<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>![Add style sheet in Content folder context menu][addcode005]

4.</source>
          <target state="new">![Add style sheet in Content folder context menu][addcode005]

4.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box, enter <bpt id="p2">**</bpt>Style<ept id="p2">**</ept> in the upper right search box and then select <bpt id="p3">**</bpt>Style Sheet<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box, enter <bpt id="p2">**</bpt>Style<ept id="p2">**</ept> in the upper right search box and then select <bpt id="p3">**</bpt>Style Sheet<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>![Add New Item dialog box][rxStyle]

5.</source>
          <target state="new">![Add New Item dialog box][rxStyle]

5.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Name the file <bpt id="p1">*</bpt>Contacts.css<ept id="p1">*</ept> and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</source>
          <target state="new">Name the file <bpt id="p1">*</bpt>Contacts.css<ept id="p1">*</ept> and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Replace the contents of the file with the following code.</source>
          <target state="new">Replace the contents of the file with the following code.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>.column {
            float: left;
            width: 50%;
            padding: 0;
            margin: 5px 0;
        }
        form ol {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }
        form li {
            padding: 1px;
            margin: 3px;
        }
        form input[type="text"] {
            width: 100%;
        }
        #addContact {
            width: 300px;
            float: left;
            width:30%;
        }
        #contacts {
            list-style-type: none;
            margin: 0;
            padding: 0;
            float:left;
            width: 70%;
        }
        #contacts li {
            margin: 3px 3px 3px 0;
            padding: 1px;
            float: left;
            width: 300px;
            text-align: center;
            background-image: none;
            background-color: #F5F5F5;
        }
        #contacts li h1
        {
            padding: 0;
            margin: 0;
            background-image: none;
            background-color: Orange;
            color: White;
            font-family: Trebuchet MS, Tahoma, Verdana, Arial, sans-serif;
        }
        .removeContact, .viewImage
        {
            padding: 3px;
            text-decoration: none;
        }

    We will use this style sheet for the layout, colors and styles used in the contact manager app.</source>
          <target state="new">.column {
            float: left;
            width: 50%;
            padding: 0;
            margin: 5px 0;
        }
        form ol {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }
        form li {
            padding: 1px;
            margin: 3px;
        }
        form input[type="text"] {
            width: 100%;
        }
        #addContact {
            width: 300px;
            float: left;
            width:30%;
        }
        #contacts {
            list-style-type: none;
            margin: 0;
            padding: 0;
            float:left;
            width: 70%;
        }
        #contacts li {
            margin: 3px 3px 3px 0;
            padding: 1px;
            float: left;
            width: 300px;
            text-align: center;
            background-image: none;
            background-color: #F5F5F5;
        }
        #contacts li h1
        {
            padding: 0;
            margin: 0;
            background-image: none;
            background-color: Orange;
            color: White;
            font-family: Trebuchet MS, Tahoma, Verdana, Arial, sans-serif;
        }
        .removeContact, .viewImage
        {
            padding: 3px;
            text-decoration: none;
        }

    We will use this style sheet for the layout, colors and styles used in the contact manager app.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="new">6.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>App_Start\BundleConfig.cs<ept id="p1">*</ept> file.</source>
          <target state="new">Open the <bpt id="p1">*</bpt>App_Start\BundleConfig.cs<ept id="p1">*</ept> file.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="new">7.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Add the following code to register the <bpt id="p1">[</bpt><ept id="p1">Knockout](http://knockoutjs.com/index.html "KO")</ept> plugin.</source>
          <target state="new">Add the following code to register the <bpt id="p1">[</bpt><ept id="p1">Knockout](http://knockoutjs.com/index.html "KO")</ept> plugin.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>bundles.Add(new ScriptBundle("~/bundles/knockout").Include(
                    "~/Scripts/knockout-{version}.js"));
    This sample using knockout to simplify dynamic JavaScript code that handles the screen templates.</source>
          <target state="new">bundles.Add(new ScriptBundle("~/bundles/knockout").Include(
                    "~/Scripts/knockout-{version}.js"));
    This sample using knockout to simplify dynamic JavaScript code that handles the screen templates.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>8.</source>
          <target state="new">8.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Modify the contents/css entry to register the <bpt id="p1">*</bpt>contacts.css<ept id="p1">*</ept> style sheet.</source>
          <target state="new">Modify the contents/css entry to register the <bpt id="p1">*</bpt>contacts.css<ept id="p1">*</ept> style sheet.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Change the following line:

                 bundles.Add(new StyleBundle("~/Content/css").Include(
                   "~/Content/bootstrap.css",
                   "~/Content/site.css"));
To:

        bundles.Add(new StyleBundle("~/Content/css").Include(
                   "~/Content/bootstrap.css",
                   "~/Content/contacts.css",
                   "~/Content/site.css"));

1.</source>
          <target state="new">Change the following line:

                 bundles.Add(new StyleBundle("~/Content/css").Include(
                   "~/Content/bootstrap.css",
                   "~/Content/site.css"));
To:

        bundles.Add(new StyleBundle("~/Content/css").Include(
                   "~/Content/bootstrap.css",
                   "~/Content/contacts.css",
                   "~/Content/site.css"));

1.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In the Package Manager Console, run the following command to install Knockout.</source>
          <target state="new">In the Package Manager Console, run the following command to install Knockout.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Install-Package knockoutjs
## Add a controller for the Web API Restful interface

1.</source>
          <target state="new">Install-Package knockoutjs
## Add a controller for the Web API Restful interface

1.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click Controllers and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> and then <bpt id="p3">**</bpt>Controller....<ept id="p3">**</ept><ph id="ph1"> 

1.</ph> In the <bpt id="p4">**</bpt>Add Scaffold<ept id="p4">**</ept> dialog box, enter <bpt id="p5">**</bpt>Web API 2 Controller with actions, using Entity Framework<ept id="p5">**</ept> and then click <bpt id="p6">**</bpt>Add<ept id="p6">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click Controllers and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> and then <bpt id="p3">**</bpt>Controller....<ept id="p3">**</ept><ph id="ph1"> 

1.</ph> In the <bpt id="p4">**</bpt>Add Scaffold<ept id="p4">**</ept> dialog box, enter <bpt id="p5">**</bpt>Web API 2 Controller with actions, using Entity Framework<ept id="p5">**</ept> and then click <bpt id="p6">**</bpt>Add<ept id="p6">**</ept>.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Add API controller](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rt1.PNG)</ph><ph id="ph2">

4.</ph> In the <bpt id="p1">**</bpt>Add Controller<ept id="p1">**</ept> dialog box, enter "ContactsController" as your controller name.</source>
          <target state="new"><ph id="ph1">![Add API controller](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rt1.PNG)</ph><ph id="ph2">

4.</ph> In the <bpt id="p1">**</bpt>Add Controller<ept id="p1">**</ept> dialog box, enter "ContactsController" as your controller name.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Select "Contact (ContactManager.Models)" for the <bpt id="p1">**</bpt>Model class<ept id="p1">**</ept>.</source>
          <target state="new">Select "Contact (ContactManager.Models)" for the <bpt id="p1">**</bpt>Model class<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Keep the default value for the <bpt id="p1">**</bpt>Data context class<ept id="p1">**</ept>.</source>
          <target state="new">Keep the default value for the <bpt id="p1">**</bpt>Data context class<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="new">6.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Run the application locally

1.</source>
          <target state="new">Run the application locally

1.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Press CTRL+F5 to run the application.</source>
          <target state="new">Press CTRL+F5 to run the application.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>![Index page][intro001]

2.</source>
          <target state="new">![Index page][intro001]

2.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Enter a contact and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</source>
          <target state="new">Enter a contact and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The app returns to the home page and displays the contact you entered.</source>
          <target state="new">The app returns to the home page and displays the contact you entered.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>![Index page with to-do list items][addwebapi004]

3.</source>
          <target state="new">![Index page with to-do list items][addwebapi004]

3.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>In the browser, append <bpt id="p1">**</bpt>/api/contacts<ept id="p1">**</ept> to the URL.</source>
          <target state="new">In the browser, append <bpt id="p1">**</bpt>/api/contacts<ept id="p1">**</ept> to the URL.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The resulting URL will resemble http://localhost:1234/api/contacts.</source>
          <target state="new">The resulting URL will resemble http://localhost:1234/api/contacts.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The RESTful web API you added returns the stored contacts.</source>
          <target state="new">The RESTful web API you added returns the stored contacts.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Firefox and Chrome will display the data in XML format.</source>
          <target state="new">Firefox and Chrome will display the data in XML format.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>![Index page with to-do list items][rxFFchrome]
    

    IE will prompt you to open or save the contacts.</source>
          <target state="new">![Index page with to-do list items][rxFFchrome]
    

    IE will prompt you to open or save the contacts.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>![Web API save dialog][addwebapi006]
    
    
    You can open the returned contacts in notepad or a browser.</source>
          <target state="new">![Web API save dialog][addwebapi006]
    
    
    You can open the returned contacts in notepad or a browser.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This output can be consumed by another application such as mobile web page or application.</source>
          <target state="new">This output can be consumed by another application such as mobile web page or application.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>![Web API save dialog][addwebapi007]

    **Security Warning**: At this point, your application is insecure and vulnerable to CSRF attack.</source>
          <target state="new">![Web API save dialog][addwebapi007]

    **Security Warning**: At this point, your application is insecure and vulnerable to CSRF attack.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Later in the tutorial we will remove this vulnerability.</source>
          <target state="new">Later in the tutorial we will remove this vulnerability.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>For more information see [Preventing Cross-Site Request Forgery (CSRF) Attacks][prevent-csrf-attacks].</source>
          <target state="new">For more information see [Preventing Cross-Site Request Forgery (CSRF) Attacks][prevent-csrf-attacks].</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Add XSRF Protection

Cross-site request forgery (also known as XSRF or CSRF) is an attack against web-hosted applications whereby a malicious website can influence the interaction between a client browser and a website trusted by that browser.</source>
          <target state="new">Add XSRF Protection

Cross-site request forgery (also known as XSRF or CSRF) is an attack against web-hosted applications whereby a malicious website can influence the interaction between a client browser and a website trusted by that browser.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>These attacks are made possible because web browsers will send authentication tokens automatically with every request to a website.</source>
          <target state="new">These attacks are made possible because web browsers will send authentication tokens automatically with every request to a website.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The canonical example is an authentication cookie, such as ASP.NET's Forms Authentication ticket.</source>
          <target state="new">The canonical example is an authentication cookie, such as ASP.NET's Forms Authentication ticket.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>However, websites which use any persistent authentication mechanism (such as Windows Authentication, Basic, and so forth) can be targeted by these attacks.</source>
          <target state="new">However, websites which use any persistent authentication mechanism (such as Windows Authentication, Basic, and so forth) can be targeted by these attacks.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An XSRF attack is distinct from a phishing attack.</source>
          <target state="new">An XSRF attack is distinct from a phishing attack.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Phishing attacks require interaction from the victim.</source>
          <target state="new">Phishing attacks require interaction from the victim.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>In a phishing attack, a malicious website will mimic the target website, and the victim is fooled into providing sensitive information to the attacker.</source>
          <target state="new">In a phishing attack, a malicious website will mimic the target website, and the victim is fooled into providing sensitive information to the attacker.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>In an XSRF attack, there is often no interaction necessary from the victim.</source>
          <target state="new">In an XSRF attack, there is often no interaction necessary from the victim.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Rather, the attacker is relying on the browser automatically sending all relevant cookies to the destination website.</source>
          <target state="new">Rather, the attacker is relying on the browser automatically sending all relevant cookies to the destination website.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt><ept id="p1">Open Web Application Security Project](https://www.owasp.org/index.php/Main_Page)</ept> (OWASP) <bpt id="p2">[</bpt><ept id="p2">XSRF](https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF))</ept>.</source>
          <target state="new">For more information, see the <bpt id="p1">[</bpt><ept id="p1">Open Web Application Security Project](https://www.owasp.org/index.php/Main_Page)</ept> (OWASP) <bpt id="p2">[</bpt><ept id="p2">XSRF](https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF))</ept>.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right <bpt id="p2">**</bpt>ContactManager<ept id="p2">**</ept> project and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept> and then click <bpt id="p4">**</bpt>Class<ept id="p4">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right <bpt id="p2">**</bpt>ContactManager<ept id="p2">**</ept> project and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept> and then click <bpt id="p4">**</bpt>Class<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="new">2.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Name the file <bpt id="p1">*</bpt>ValidateHttpAntiForgeryTokenAttribute.cs<ept id="p1">*</ept> and add the following code:

        <ph id="ph1">using System;
        using System.Collections.Generic;
        using System.Linq;
        using System.Net;
        using System.Net.Http;
        using System.Web.Helpers;
        using System.Web.Http.Controllers;
        using System.Web.Http.Filters;
        using System.Web.Mvc;
        namespace ContactManager.Filters
        {
            public class ValidateHttpAntiForgeryTokenAttribute : AuthorizationFilterAttribute
            {
                public override void OnAuthorization(HttpActionContext actionContext)
                {
                    HttpRequestMessage request = actionContext.ControllerContext.Request;
                    try
                    {
                        if (IsAjaxRequest(request))
                        {
                            ValidateRequestHeader(request);
                        }
                        else
                        {
                            AntiForgery.Validate();
                        }
                    }
                    catch (HttpAntiForgeryException e)
                    {
                        actionContext.Response = request.CreateErrorResponse(HttpStatusCode.Forbidden, e);
                    }
                }
                private bool IsAjaxRequest(HttpRequestMessage request)
                {
                    IEnumerable</ph></source>
          <target state="new">Name the file <bpt id="p1">*</bpt>ValidateHttpAntiForgeryTokenAttribute.cs<ept id="p1">*</ept> and add the following code:

        <ph id="ph1">using System;
        using System.Collections.Generic;
        using System.Linq;
        using System.Net;
        using System.Net.Http;
        using System.Web.Helpers;
        using System.Web.Http.Controllers;
        using System.Web.Http.Filters;
        using System.Web.Mvc;
        namespace ContactManager.Filters
        {
            public class ValidateHttpAntiForgeryTokenAttribute : AuthorizationFilterAttribute
            {
                public override void OnAuthorization(HttpActionContext actionContext)
                {
                    HttpRequestMessage request = actionContext.ControllerContext.Request;
                    try
                    {
                        if (IsAjaxRequest(request))
                        {
                            ValidateRequestHeader(request);
                        }
                        else
                        {
                            AntiForgery.Validate();
                        }
                    }
                    catch (HttpAntiForgeryException e)
                    {
                        actionContext.Response = request.CreateErrorResponse(HttpStatusCode.Forbidden, e);
                    }
                }
                private bool IsAjaxRequest(HttpRequestMessage request)
                {
                    IEnumerable</ph></target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>xRequestedWithHeaders;</source>
          <target state="new">xRequestedWithHeaders;</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>if (request.Headers.TryGetValues("X-Requested-With", out xRequestedWithHeaders))</source>
          <target state="new">if (request.Headers.TryGetValues("X-Requested-With", out xRequestedWithHeaders))</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>string headerValue = xRequestedWithHeaders.FirstOrDefault();</source>
          <target state="new">string headerValue = xRequestedWithHeaders.FirstOrDefault();</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>if (!String.IsNullOrEmpty(headerValue))</source>
          <target state="new">if (!String.IsNullOrEmpty(headerValue))</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>return String.Equals(headerValue, "XMLHttpRequest", StringComparison.OrdinalIgnoreCase);</source>
          <target state="new">return String.Equals(headerValue, "XMLHttpRequest", StringComparison.OrdinalIgnoreCase);</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>return false;</source>
          <target state="new">return false;</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>private void ValidateRequestHeader(HttpRequestMessage request)</source>
          <target state="new">private void ValidateRequestHeader(HttpRequestMessage request)</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>string cookieToken = String.Empty;</source>
          <target state="new">string cookieToken = String.Empty;</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>string formToken = String.Empty;</source>
          <target state="new">string formToken = String.Empty;</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>tokenHeaders;</source>
          <target state="new">tokenHeaders;</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>if (request.Headers.TryGetValues("RequestVerificationToken", out tokenHeaders))</source>
          <target state="new">if (request.Headers.TryGetValues("RequestVerificationToken", out tokenHeaders))</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>string tokenValue = tokenHeaders.FirstOrDefault();</source>
          <target state="new">string tokenValue = tokenHeaders.FirstOrDefault();</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>if (!String.IsNullOrEmpty(tokenValue))</source>
          <target state="new">if (!String.IsNullOrEmpty(tokenValue))</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>string[] tokens = tokenValue.Split(':');</source>
          <target state="new">string[] tokens = tokenValue.Split(':');</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>if (tokens.Length == 2)</source>
          <target state="new">if (tokens.Length == 2)</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>{</source>
          <target state="new">{</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>cookieToken = tokens[0].Trim();</source>
          <target state="new">cookieToken = tokens[0].Trim();</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>formToken = tokens[1].Trim();</source>
          <target state="new">formToken = tokens[1].Trim();</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>AntiForgery.Validate(cookieToken, formToken);</source>
          <target state="new">AntiForgery.Validate(cookieToken, formToken);</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>}

1.</source>
          <target state="new">}

1.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Add the following <bpt id="p1">*</bpt>using<ept id="p1">*</ept> statement to the contracts controller so you have access to the <bpt id="p2">**</bpt>[ValidateHttpAntiForgeryToken]<ept id="p2">**</ept> attribute.</source>
          <target state="new">Add the following <bpt id="p1">*</bpt>using<ept id="p1">*</ept> statement to the contracts controller so you have access to the <bpt id="p2">**</bpt>[ValidateHttpAntiForgeryToken]<ept id="p2">**</ept> attribute.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>using ContactManager.Filters;

1.</source>
          <target state="new">using ContactManager.Filters;

1.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Add the <bpt id="p1">**</bpt>[ValidateHttpAntiForgeryToken]<ept id="p1">**</ept> attribute to the Post methods of the <bpt id="p2">**</bpt>ContactsController<ept id="p2">**</ept> to protect it from XSRF threats.</source>
          <target state="new">Add the <bpt id="p1">**</bpt>[ValidateHttpAntiForgeryToken]<ept id="p1">**</ept> attribute to the Post methods of the <bpt id="p2">**</bpt>ContactsController<ept id="p2">**</ept> to protect it from XSRF threats.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>You will add it to the "PutContact",  "PostContact" and <bpt id="p1">**</bpt>DeleteContact<ept id="p1">**</ept> action methods.</source>
          <target state="new">You will add it to the "PutContact",  "PostContact" and <bpt id="p1">**</bpt>DeleteContact<ept id="p1">**</ept> action methods.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>[ValidateHttpAntiForgeryToken]</source>
          <target state="new">[ValidateHttpAntiForgeryToken]</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>public IHttpActionResult PutContact(int id, Contact conta</source>
          <target state="new">public IHttpActionResult PutContact(int id, Contact conta</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><ph id="ph1">t)</ph>
        {

1.</source>
          <target state="new"><ph id="ph1">t)</ph>
        {

1.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Update the <bpt id="p1">*</bpt>Scripts<ept id="p1">*</ept> section of the <bpt id="p2">*</bpt>Views\Home\Index.cshtml<ept id="p2">*</ept> file to include code to get the XSRF tokens.</source>
          <target state="new">Update the <bpt id="p1">*</bpt>Scripts<ept id="p1">*</ept> section of the <bpt id="p2">*</bpt>Views\Home\Index.cshtml<ept id="p2">*</ept> file to include code to get the XSRF tokens.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">@section Scripts {
            @Scripts.Render("~/bundles/knockout")
            &lt;script type="text/javascript"&gt;</ph><ph id="ph2">
                @functions{
                   public string TokenHeaderValue()
                   {
                      string cookieToken, formToken;
                      AntiForgery.GetTokens(null, out cookieToken, out formToken);
                      return cookieToken + ":" + formToken;                
                   }
                }

               function ContactsViewModel() {
                  var self = this;
                  self.contacts = ko.observableArray([]);
                  self.addContact = function () {

                     $.ajax({
                        type: "post",
                        url: "api/contacts",
                        data: $("#addContact").serialize(),
                        dataType: "json",
                        success: function (value) {
                           self.contacts.push(value);
                        },
                        headers: {
                           'RequestVerificationToken': '@TokenHeaderValue()'
                        }
                     });

                  }
                  self.removeContact = function (contact) {
                     $.ajax({
                        type: "DELETE",
                        url: contact.Self,
                        success: function () {
                           self.contacts.remove(contact);
                        },
                        headers: {
                           'RequestVerificationToken': '@TokenHeaderValue()'
                        }

                     });
                  }

                  $.getJSON("api/contacts", function (data) {
                     self.contacts(data);
                  });
               }
               ko.applyBindings(new ContactsViewModel());
            &lt;/script&gt;</ph><ph id="ph3">


##</ph> Publish the application update to Azure and SQL Database

To publish the application, you repeat the procedure you followed earlier.</source>
          <target state="new"><ph id="ph1">@section Scripts {
            @Scripts.Render("~/bundles/knockout")
            &lt;script type="text/javascript"&gt;</ph><ph id="ph2">
                @functions{
                   public string TokenHeaderValue()
                   {
                      string cookieToken, formToken;
                      AntiForgery.GetTokens(null, out cookieToken, out formToken);
                      return cookieToken + ":" + formToken;                
                   }
                }

               function ContactsViewModel() {
                  var self = this;
                  self.contacts = ko.observableArray([]);
                  self.addContact = function () {

                     $.ajax({
                        type: "post",
                        url: "api/contacts",
                        data: $("#addContact").serialize(),
                        dataType: "json",
                        success: function (value) {
                           self.contacts.push(value);
                        },
                        headers: {
                           'RequestVerificationToken': '@TokenHeaderValue()'
                        }
                     });

                  }
                  self.removeContact = function (contact) {
                     $.ajax({
                        type: "DELETE",
                        url: contact.Self,
                        success: function () {
                           self.contacts.remove(contact);
                        },
                        headers: {
                           'RequestVerificationToken': '@TokenHeaderValue()'
                        }

                     });
                  }

                  $.getJSON("api/contacts", function (data) {
                     self.contacts(data);
                  });
               }
               ko.applyBindings(new ContactsViewModel());
            &lt;/script&gt;</ph><ph id="ph3">


##</ph> Publish the application update to Azure and SQL Database

To publish the application, you repeat the procedure you followed earlier.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right click the project and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right click the project and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>![Publish][rxP]

5.</source>
          <target state="new">![Publish][rxP]

5.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> tab.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>ContactsManagerContext(ContactsManagerContext)<ept id="p1">**</ept>, click the <bpt id="p2">**</bpt>v<ept id="p2">**</ept> icon to change <bpt id="p3">*</bpt>Remote connection string<ept id="p3">*</ept> to the connection string for the contact database.</source>
          <target state="new">Under <bpt id="p1">**</bpt>ContactsManagerContext(ContactsManagerContext)<ept id="p1">**</ept>, click the <bpt id="p2">**</bpt>v<ept id="p2">**</ept> icon to change <bpt id="p3">*</bpt>Remote connection string<ept id="p3">*</ept> to the connection string for the contact database.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>ContactDB<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>ContactDB<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Settings](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rt5.png)</ph><ph id="ph2">

7.</ph> Check the box for <bpt id="p1">**</bpt>Execute Code First Migrations (runs on application start)<ept id="p1">**</ept>.</source>
          <target state="new"><ph id="ph1">![Settings](./media/web-sites-dotnet-rest-service-aspnet-api-sql-database/rt5.png)</ph><ph id="ph2">

7.</ph> Check the box for <bpt id="p1">**</bpt>Execute Code First Migrations (runs on application start)<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Next<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>Preview<ept id="p2">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Next<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>Preview<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Visual Studio displays a list of the files that will be added or updated.</source>
          <target state="new">Visual Studio displays a list of the files that will be added or updated.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>8.</source>
          <target state="new">8.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>After the deployment completes, the browser opens to the home page of the application.</source>
          <target state="new">After the deployment completes, the browser opens to the home page of the application.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>![Index page with no contacts][intro001]

    The Visual Studio publish process automatically configured the connection string in the deployed <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file to point to the SQL database.</source>
          <target state="new">![Index page with no contacts][intro001]

    The Visual Studio publish process automatically configured the connection string in the deployed <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> file to point to the SQL database.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>It also configured Code First Migrations to automatically upgrade the database to the latest version the first time the application accesses the database after deployment.</source>
          <target state="new">It also configured Code First Migrations to automatically upgrade the database to the latest version the first time the application accesses the database after deployment.</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>As a result of this configuration, Code First created the database by running the code in the <bpt id="p1">**</bpt>Initial<ept id="p1">**</ept> class that you created earlier.</source>
          <target state="new">As a result of this configuration, Code First created the database by running the code in the <bpt id="p1">**</bpt>Initial<ept id="p1">**</ept> class that you created earlier.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>It did this the first time the application tried to access the database after deployment.</source>
          <target state="new">It did this the first time the application tried to access the database after deployment.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>9.</source>
          <target state="new">9.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Enter a contact as you did when you ran the app locally, to verify that database deployment succeeded.</source>
          <target state="new">Enter a contact as you did when you ran the app locally, to verify that database deployment succeeded.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>When you see that the item you enter is saved and appears on the contact manager page, you know that it has been stored in the database.</source>
          <target state="new">When you see that the item you enter is saved and appears on the contact manager page, you know that it has been stored in the database.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>![Index page with contacts][addwebapi004]

The application is now running in the cloud, using SQL Database to store its data.</source>
          <target state="new">![Index page with contacts][addwebapi004]

The application is now running in the cloud, using SQL Database to store its data.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>After you finish testing the application in Azure, delete it.</source>
          <target state="new">After you finish testing the application in Azure, delete it.</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The application is public and doesn't have a mechanism to limit access.</source>
          <target state="new">The application is public and doesn't have a mechanism to limit access.</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt;[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id="p1">[</bpt><ept id="p1">Try App Service](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.</source>
          <target state="new"><ph id="ph1">&gt;[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id="p1">[</bpt><ept id="p1">Try App Service](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>No credit cards required; no commitments.</source>
          <target state="new">No credit cards required; no commitments.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Next Steps

A real application would require authentication and authorization, and you would use the membership database for that purpose.</source>
          <target state="new">Next Steps

A real application would require authentication and authorization, and you would use the membership database for that purpose.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The tutorial <bpt id="p1">[</bpt><ept id="p1">Deploy a Secure ASP.NET MVC application with OAuth, Membership and SQL Database](web-sites-dotnet-deploy-aspnet-mvc-app-membership-oauth-sql-database.md)</ept> is based on this tutorial and shows how to deploy a web application with the membership database.</source>
          <target state="new">The tutorial <bpt id="p1">[</bpt><ept id="p1">Deploy a Secure ASP.NET MVC application with OAuth, Membership and SQL Database](web-sites-dotnet-deploy-aspnet-mvc-app-membership-oauth-sql-database.md)</ept> is based on this tutorial and shows how to deploy a web application with the membership database.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Another way to store data in an Azure application is to use Azure storage, which provide non-relational data storage in the form of blobs and tables.</source>
          <target state="new">Another way to store data in an Azure application is to use Azure storage, which provide non-relational data storage in the form of blobs and tables.</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The following links provide more information on Web API, ASP.NET MVC and Window Azure.</source>
          <target state="new">The following links provide more information on Web API, ASP.NET MVC and Window Azure.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>* [Getting Started with Entity Framework using MVC][EFCodeFirstMVCTutorial]
<bpt id="p1">* [</bpt><ept id="p1">Intro to ASP.NET MVC 5](http://www.asp.net/mvc/tutorials/mvc-5/introduction/getting-started)</ept><bpt id="p2">
* [</bpt><ept id="p2">Your First ASP.NET Web API](http://www.asp.net/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api)</ept><bpt id="p3">
* [</bpt><ept id="p3">Debugging WAWS](web-sites-dotnet-troubleshoot-visual-studio.md)</ept>

This tutorial and the sample application was written by <bpt id="p4">[</bpt><ept id="p4">Rick Anderson](http://blogs.msdn.com/b/rickandy/)</ept> (Twitter <bpt id="p5">[</bpt><ept id="p5">@RickAndMSFT](https://twitter.com/RickAndMSFT)</ept>) with assistance from Tom Dykstra and Barry Dorrans (Twitter <bpt id="p6">[</bpt><ept id="p6">@blowdart](https://twitter.com/blowdart)</ept>).</source>
          <target state="new">* [Getting Started with Entity Framework using MVC][EFCodeFirstMVCTutorial]
<bpt id="p1">* [</bpt><ept id="p1">Intro to ASP.NET MVC 5](http://www.asp.net/mvc/tutorials/mvc-5/introduction/getting-started)</ept><bpt id="p2">
* [</bpt><ept id="p2">Your First ASP.NET Web API](http://www.asp.net/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api)</ept><bpt id="p3">
* [</bpt><ept id="p3">Debugging WAWS](web-sites-dotnet-troubleshoot-visual-studio.md)</ept>

This tutorial and the sample application was written by <bpt id="p4">[</bpt><ept id="p4">Rick Anderson](http://blogs.msdn.com/b/rickandy/)</ept> (Twitter <bpt id="p5">[</bpt><ept id="p5">@RickAndMSFT](https://twitter.com/RickAndMSFT)</ept>) with assistance from Tom Dykstra and Barry Dorrans (Twitter <bpt id="p6">[</bpt><ept id="p6">@blowdart](https://twitter.com/blowdart)</ept>).</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Please leave feedback on what you liked or what you would like to see improved, not only about the tutorial itself but also about the products that it demonstrates.</source>
          <target state="new">Please leave feedback on what you liked or what you would like to see improved, not only about the tutorial itself but also about the products that it demonstrates.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Your feedback will help us prioritize improvements.</source>
          <target state="new">Your feedback will help us prioritize improvements.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>We are especially interested in finding out how much interest there is in more automation for the process of configuring and deploying the membership database.</source>
          <target state="new">We are especially interested in finding out how much interest there is in more automation for the process of configuring and deploying the membership database.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>What's changed
* For a guide to the change from Websites to App Service see: <bpt id="p1">[</bpt><ept id="p1">Azure App Service and Its Impact on Existing Azure Services](http://go.microsoft.com/fwlink/?LinkId=529714)</ept><ph id="ph1">
*</ph> For a guide to the change of the old portal to the new portal see: <bpt id="p2">[</bpt><ept id="p2">Reference for navigating the preview portal](http://go.microsoft.com/fwlink/?LinkId=529715)</ept><ph id="ph2">

</ph></source>
          <target state="new">What's changed
* For a guide to the change from Websites to App Service see: <bpt id="p1">[</bpt><ept id="p1">Azure App Service and Its Impact on Existing Azure Services](http://go.microsoft.com/fwlink/?LinkId=529714)</ept><ph id="ph1">
*</ph> For a guide to the change of the old portal to the new portal see: <bpt id="p2">[</bpt><ept id="p2">Reference for navigating the preview portal](http://go.microsoft.com/fwlink/?LinkId=529715)</ept><ph id="ph2">

</ph></target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f59b27363f4ab9b1f6b4cbea9c884afe9b4fedda</xliffext:olfilehash>
  </header>
</xliff>