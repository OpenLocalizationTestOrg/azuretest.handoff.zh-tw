<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Protect an Azure API app</source>
          <target state="new">Protect an Azure API app</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to protect an Azure API app using Visual Studio.</source>
          <target state="new">Learn how to protect an Azure API app using Visual Studio.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Protect an API app: Add Azure Active Directory or social provider authentication</source>
          <target state="new">Protect an API app: Add Azure Active Directory or social provider authentication</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This tutorial shows how to protect an API app so that only authenticated users can access it.</source>
          <target state="new">This tutorial shows how to protect an API app so that only authenticated users can access it.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The tutorial also shows code that you can use in an ASP.NET API app to retrieve information about the logged-on user.</source>
          <target state="new">The tutorial also shows code that you can use in an ASP.NET API app to retrieve information about the logged-on user.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You'll perform the following steps:</source>
          <target state="new">You'll perform the following steps:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Call the API app to verify that it's working.</source>
          <target state="new">Call the API app to verify that it's working.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Apply authentication rules to the API app.</source>
          <target state="new">Apply authentication rules to the API app.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Call the API app again to verify that it rejects unauthenticated requests.</source>
          <target state="new">Call the API app again to verify that it rejects unauthenticated requests.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Log in to the configured provider.</source>
          <target state="new">Log in to the configured provider.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Call the API app again to verify that authenticated access works.</source>
          <target state="new">Call the API app again to verify that authenticated access works.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Write and test code that retrieves claims for the logged-on user.</source>
          <target state="new">Write and test code that retrieves claims for the logged-on user.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about authentication in Azure App Service, see <bpt id="p1">[</bpt>Authentication for API apps and mobile apps<ept id="p1">](../app-service/app-service-authentication-overview.md)</ept>.</source>
          <target state="new">For more information about authentication in Azure App Service, see <bpt id="p1">[</bpt>Authentication for API apps and mobile apps<ept id="p1">](../app-service/app-service-authentication-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This tutorial works with the API app that you created in <bpt id="p1">[</bpt>Create an API app<ept id="p1">](app-service-dotnet-create-api-app.md)</ept> and deployed in <bpt id="p2">[</bpt>Deploy an API app<ept id="p2">](app-service-dotnet-deploy-api-app.md)</ept>.</source>
          <target state="new">This tutorial works with the API app that you created in <bpt id="p1">[</bpt>Create an API app<ept id="p1">](app-service-dotnet-create-api-app.md)</ept> and deployed in <bpt id="p2">[</bpt>Deploy an API app<ept id="p2">](app-service-dotnet-deploy-api-app.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use the browser to call the API app</source>
          <target state="new">Use the browser to call the API app</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The simplest way to verify that your API app is publicly accessible is to call it from a browser.</source>
          <target state="new">The simplest way to verify that your API app is publicly accessible is to call it from a browser.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In your browser, go to the [Azure preview portal].</source>
          <target state="new">In your browser, go to the [Azure preview portal].</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>From the home page click <bpt id="p1">**</bpt>Browse &gt; API Apps<ept id="p1">**</ept> and then click the name of the API app you want to protect.</source>
          <target state="new">From the home page click <bpt id="p1">**</bpt>Browse &gt; API Apps<ept id="p1">**</ept> and then click the name of the API app you want to protect.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Browse</source>
          <target state="new">Browse</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Select API app</source>
          <target state="new">Select API app</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>API App<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>URL<ept id="p2">**</ept> to open a browser window that calls your API App.</source>
          <target state="new">In the <bpt id="p1">**</bpt>API App<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>URL<ept id="p2">**</ept> to open a browser window that calls your API App.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>API App blade</source>
          <target state="new">API App blade</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add <ph id="ph1">`/api/contacts/get/`</ph> to the URL in the browser address bar.</source>
          <target state="new">Add <ph id="ph1">`/api/contacts/get/`</ph> to the URL in the browser address bar.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, if your API app's URL is this:</source>
          <target state="new">For example, if your API app's URL is this:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The complete URL would be this:</source>
          <target state="new">The complete URL would be this:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Different browsers handle API calls differently.</source>
          <target state="new">Different browsers handle API calls differently.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The image shows a successful call from a Chrome browser.</source>
          <target state="new">The image shows a successful call from a Chrome browser.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Chrome Get response</source>
          <target state="new">Chrome Get response</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Save the URL you used; you'll use it again later in the tutorial.</source>
          <target state="new">Save the URL you used; you'll use it again later in the tutorial.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Protect the API app</source>
          <target state="new">Protect the API app</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When you deployed your API app, you deployed it to a resource group.</source>
          <target state="new">When you deployed your API app, you deployed it to a resource group.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can add web apps and other API apps to the same resource group, and each API app within the resource group can have one of three accessibility settings:</source>
          <target state="new">You can add web apps and other API apps to the same resource group, and each API app within the resource group can have one of three accessibility settings:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">

- **</bpt>Public (anonymous)<ept id="p1">**</ept> - Anyone can call the API app from outside the resource group without being logged in.</source>
          <target state="new"><bpt id="p1">

- **</bpt>Public (anonymous)<ept id="p1">**</ept> - Anyone can call the API app from outside the resource group without being logged in.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">- **</bpt>Public (authenticated)<ept id="p1">**</ept> - Only authenticated users are allowed to call the API app from outside the resource group.</source>
          <target state="new"><bpt id="p1">- **</bpt>Public (authenticated)<ept id="p1">**</ept> - Only authenticated users are allowed to call the API app from outside the resource group.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">- **</bpt>Internal<ept id="p1">**</ept> - Only other API apps in the same resource group are allowed to call the API app.</source>
          <target state="new"><bpt id="p1">- **</bpt>Internal<ept id="p1">**</ept> - Only other API apps in the same resource group are allowed to call the API app.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>(Calls from web apps are considered external even if the web apps are in the same resource group.)

When Visual Studio created the resource group for you, it also created a <bpt id="p1">*</bpt>gateway<ept id="p1">*</ept>.</source>
          <target state="new">(Calls from web apps are considered external even if the web apps are in the same resource group.)

When Visual Studio created the resource group for you, it also created a <bpt id="p1">*</bpt>gateway<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A gateway is a special web app that handles all requests destined for API apps in the resource group.</source>
          <target state="new">A gateway is a special web app that handles all requests destined for API apps in the resource group.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When you go to the resource group's blade in the [Azure preview portal], you can see your API app and the gateway in the diagram.</source>
          <target state="new">When you go to the resource group's blade in the [Azure preview portal], you can see your API app and the gateway in the diagram.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Resource group diagram](./media/app-service-api-dotnet-add-authentication/rgdiagram.png)</ph><ph id="ph2">

### &lt;a id="apiapp"&gt;&lt;/a&gt;</ph>Configure the API app to require authentication

To configure your API app to accept only authenticated requests, you'll set its accessibility to <bpt id="p1">**</bpt>Public (authenticated)<ept id="p1">**</ept> and you'll configure the gateway to require authentication from a provider such as Azure Active Directory, Google, or Facebook.</source>
          <target state="new"><ph id="ph1">![Resource group diagram](./media/app-service-api-dotnet-add-authentication/rgdiagram.png)</ph><ph id="ph2">

### &lt;a id="apiapp"&gt;&lt;/a&gt;</ph>Configure the API app to require authentication

To configure your API app to accept only authenticated requests, you'll set its accessibility to <bpt id="p1">**</bpt>Public (authenticated)<ept id="p1">**</ept> and you'll configure the gateway to require authentication from a provider such as Azure Active Directory, Google, or Facebook.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.INCLUDE [app-service-api-config-auth](../../includes/app-service-api-config-auth.md)]</ph>

You have now protected the API app from unauthenticated access.</source>
          <target state="new"><ph id="ph1">[AZURE.INCLUDE [app-service-api-config-auth](../../includes/app-service-api-config-auth.md)]</ph>

You have now protected the API app from unauthenticated access.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Next you have to configure the gateway to specify which authentication provider to use.</source>
          <target state="new">Next you have to configure the gateway to specify which authentication provider to use.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">### &lt;a id="gateway"&gt;&lt;/a&gt;</ph>Configure the gateway to use an authentication provider

<ph id="ph2">[AZURE.INCLUDE [app-service-api-gateway-config-auth](../../includes/app-service-api-gateway-config-auth.md)]</ph><ph id="ph3">

##</ph> Verify that authentication works

<bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> If you have a problem logging in when you do the following steps, try opening a private or incognito window.</source>
          <target state="new"><ph id="ph1">### &lt;a id="gateway"&gt;&lt;/a&gt;</ph>Configure the gateway to use an authentication provider

<ph id="ph2">[AZURE.INCLUDE [app-service-api-gateway-config-auth](../../includes/app-service-api-gateway-config-auth.md)]</ph><ph id="ph3">

##</ph> Verify that authentication works

<bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> If you have a problem logging in when you do the following steps, try opening a private or incognito window.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Open a browser window, and in the address bar enter the URL that calls your API app's <ph id="ph1">`Get`</ph> method, as you did earlier.</source>
          <target state="new">Open a browser window, and in the address bar enter the URL that calls your API app's <ph id="ph1">`Get`</ph> method, as you did earlier.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This time the attempt to access the API app results in an error message.</source>
          <target state="new">This time the attempt to access the API app results in an error message.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Chrome Get response fail](./media/app-service-api-dotnet-add-authentication/chromegetfail.png)</ph><ph id="ph2">

2.</ph> In the browser, go to the login URL.</source>
          <target state="new"><ph id="ph1">![Chrome Get response fail](./media/app-service-api-dotnet-add-authentication/chromegetfail.png)</ph><ph id="ph2">

2.</ph> In the browser, go to the login URL.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The URL follows this pattern: 

        http://[gatewayurl]/login/[providername]

    You can get the gateway URL from the <bpt id="p1">**</bpt>Gateway<ept id="p1">**</ept> blade in the <bpt id="p2">[</bpt><ept id="p2">Azure preview portal]</ept>.</source>
          <target state="new">The URL follows this pattern: 

        http://[gatewayurl]/login/[providername]

    You can get the gateway URL from the <bpt id="p1">**</bpt>Gateway<ept id="p1">**</ept> blade in the <bpt id="p2">[</bpt><ept id="p2">Azure preview portal]</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>(To get to the <bpt id="p1">**</bpt>Gateway<ept id="p1">**</ept> blade, click the gateway in the diagram shown on the <bpt id="p2">**</bpt>Resource group<ept id="p2">**</ept> blade.)

    <ph id="ph1">![Gateway URL](./media/app-service-api-dotnet-add-authentication/gatewayurl.png)</ph>

    The [providername] must be one of the following values:
    
    * "microsoftaccount"
    * "facebook"
    * "twitter"
    * "google"
    * "aad"

    Here is a sample login URL for Azure Active Directory:

        https://dropboxrgaeb4ae60b7cb4f3d966dfa43.azurewebsites.net/login/aad/

    Notice that unlike the earlier URL, this one does not include your API app name:  the gateway is authenticating you, not the API app.</source>
          <target state="new">(To get to the <bpt id="p1">**</bpt>Gateway<ept id="p1">**</ept> blade, click the gateway in the diagram shown on the <bpt id="p2">**</bpt>Resource group<ept id="p2">**</ept> blade.)

    <ph id="ph1">![Gateway URL](./media/app-service-api-dotnet-add-authentication/gatewayurl.png)</ph>

    The [providername] must be one of the following values:
    
    * "microsoftaccount"
    * "facebook"
    * "twitter"
    * "google"
    * "aad"

    Here is a sample login URL for Azure Active Directory:

        https://dropboxrgaeb4ae60b7cb4f3d966dfa43.azurewebsites.net/login/aad/

    Notice that unlike the earlier URL, this one does not include your API app name:  the gateway is authenticating you, not the API app.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The gateway handles authentication for all API apps in the resource group.</source>
          <target state="new">The gateway handles authentication for all API apps in the resource group.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Enter your credentials when the browser displays a login page.</source>
          <target state="new">Enter your credentials when the browser displays a login page.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you configured Azure Active Directory login, use one of the users listed in the <bpt id="p1">**</bpt>Users<ept id="p1">**</ept> tab for the application you created in the Azure Active Directory tab of the <bpt id="p2">[</bpt><ept id="p2">Azure portal]</ept>, such as admin@contoso.onmicrosoft.com.</source>
          <target state="new">If you configured Azure Active Directory login, use one of the users listed in the <bpt id="p1">**</bpt>Users<ept id="p1">**</ept> tab for the application you created in the Azure Active Directory tab of the <bpt id="p2">[</bpt><ept id="p2">Azure portal]</ept>, such as admin@contoso.onmicrosoft.com.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![AAD users](./media/app-service-api-dotnet-add-authentication/aadusers.png)</ph><ph id="ph2">

    ![Login page](./media/app-service-api-dotnet-add-authentication/ffsignin.png)</ph><ph id="ph3">

4.</ph> When the "login complete" message appears, enter the URL to your API app's Get method again.</source>
          <target state="new"><ph id="ph1">![AAD users](./media/app-service-api-dotnet-add-authentication/aadusers.png)</ph><ph id="ph2">

    ![Login page](./media/app-service-api-dotnet-add-authentication/ffsignin.png)</ph><ph id="ph3">

4.</ph> When the "login complete" message appears, enter the URL to your API app's Get method again.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This time because you've authenticated, the call is successful.</source>
          <target state="new">This time because you've authenticated, the call is successful.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The gateway recognizes that you are an authenticated user and passes your request on to your API app.</source>
          <target state="new">The gateway recognizes that you are an authenticated user and passes your request on to your API app.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Login completed](./media/app-service-api-dotnet-add-authentication/logincomplete.png)</ph><ph id="ph2">

    ![Chrome Get response](./media/app-service-api-dotnet-add-authentication/chromeget.png)</ph>

    If you have enabled the Swagger UI, you can also go to the Swagger UI page now.</source>
          <target state="new"><ph id="ph1">![Login completed](./media/app-service-api-dotnet-add-authentication/logincomplete.png)</ph><ph id="ph2">

    ![Chrome Get response](./media/app-service-api-dotnet-add-authentication/chromeget.png)</ph>

    If you have enabled the Swagger UI, you can also go to the Swagger UI page now.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>However, you'll see a red <bpt id="p1">**</bpt>ERROR<ept id="p1">**</ept> icon at the bottom right corner of the page, and if you click the icon you'll see a message saying that the Swagger JSON file is inaccessible.</source>
          <target state="new">However, you'll see a red <bpt id="p1">**</bpt>ERROR<ept id="p1">**</ept> icon at the bottom right corner of the page, and if you click the icon you'll see a message saying that the Swagger JSON file is inaccessible.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This is because Swagger makes an AJAX call without including the Zumo token to try to retrieve the JSON file.</source>
          <target state="new">This is because Swagger makes an AJAX call without including the Zumo token to try to retrieve the JSON file.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This does not prevent the Swagger UI page from working.</source>
          <target state="new">This does not prevent the Swagger UI page from working.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Use Postman to send a Post request

When you log in to the gateway, the gateway sends back an authentication token.</source>
          <target state="new">Use Postman to send a Post request

When you log in to the gateway, the gateway sends back an authentication token.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This token must be included with all requests from external sources that go through the gateway.</source>
          <target state="new">This token must be included with all requests from external sources that go through the gateway.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When you access an API with a browser, the browser typically stores the token in a cookie and sends it along with all subsequent calls to the API.</source>
          <target state="new">When you access an API with a browser, the browser typically stores the token in a cookie and sends it along with all subsequent calls to the API.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>So you can see what is happening in the background, in this section of the tutorial you use a browser tool to create and submit a Post request, and you get the authorization token from the cookie and include it in an HTTP header.</source>
          <target state="new">So you can see what is happening in the background, in this section of the tutorial you use a browser tool to create and submit a Post request, and you get the authorization token from the cookie and include it in an HTTP header.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This section is optional: in the previous section you already verified that the API app accepts only authenticated access.</source>
          <target state="new">This section is optional: in the previous section you already verified that the API app accepts only authenticated access.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>These instructions show how to use the Postman tool in the Chrome browser, but you could do the same thing with any REST client tool and browser developer tools.</source>
          <target state="new">These instructions show how to use the Postman tool in the Chrome browser, but you could do the same thing with any REST client tool and browser developer tools.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In a Chrome browser window, go through the steps shown in the previous section to authenticate, and then open developer tools (F12).</source>
          <target state="new">In a Chrome browser window, go through the steps shown in the previous section to authenticate, and then open developer tools (F12).</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Go to Resources tab](./media/app-service-api-dotnet-add-authentication/resources.png)</ph><ph id="ph2">

3.</ph> In the <bpt id="p1">**</bpt>Resources<ept id="p1">**</ept> tab of Chrome developer tools, find the cookies for your gateway, and triple-click the Value of the <bpt id="p2">**</bpt>x-zumo-auth<ept id="p2">**</ept> cookie to select all of it.</source>
          <target state="new"><ph id="ph1">![Go to Resources tab](./media/app-service-api-dotnet-add-authentication/resources.png)</ph><ph id="ph2">

3.</ph> In the <bpt id="p1">**</bpt>Resources<ept id="p1">**</ept> tab of Chrome developer tools, find the cookies for your gateway, and triple-click the Value of the <bpt id="p2">**</bpt>x-zumo-auth<ept id="p2">**</ept> cookie to select all of it.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  Make sure you get all of the cookie's value.</source>
          <target state="new"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  Make sure you get all of the cookie's value.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you double-click, you'll get only the first part of it.</source>
          <target state="new">If you double-click, you'll get only the first part of it.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="new">5.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> of the <bpt id="p2">**</bpt>x-zumo-auth<ept id="p2">**</ept> cookie, and then click <bpt id="p3">**</bpt>Copy<ept id="p3">**</ept>.</source>
          <target state="new">Right-click the <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> of the <bpt id="p2">**</bpt>x-zumo-auth<ept id="p2">**</ept> cookie, and then click <bpt id="p3">**</bpt>Copy<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Copy auth token](./media/app-service-api-dotnet-add-authentication/copyzumotoken.png)</ph><ph id="ph2">

4.</ph> Install the Postman extension in your Chrome browser if you haven't done so yet.</source>
          <target state="new"><ph id="ph1">![Copy auth token](./media/app-service-api-dotnet-add-authentication/copyzumotoken.png)</ph><ph id="ph2">

4.</ph> Install the Postman extension in your Chrome browser if you haven't done so yet.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="new">6.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Open the Postman extension.</source>
          <target state="new">Open the Postman extension.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="new">7.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In the Request URL field, enter the URL to your API app's Get method that you used previously, but omit <ph id="ph1">`get/`</ph> from the end.</source>
          <target state="new">In the Request URL field, enter the URL to your API app's Get method that you used previously, but omit <ph id="ph1">`get/`</ph> from the end.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>http://[apiappurl]/api/contacts
    
8.</source>
          <target state="new">http://[apiappurl]/api/contacts
    
8.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Headers<ept id="p1">**</ept>, and then add an <bpt id="p2">*</bpt>x-zumo-auth<ept id="p2">*</ept> header.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Headers<ept id="p1">**</ept>, and then add an <bpt id="p2">*</bpt>x-zumo-auth<ept id="p2">*</ept> header.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Paste the token value from the clipboard into the <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> field.</source>
          <target state="new">Paste the token value from the clipboard into the <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> field.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>9.</source>
          <target state="new">9.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">*</bpt>Content-Type<ept id="p1">*</ept> header with value <bpt id="p2">*</bpt>application/json<ept id="p2">*</ept>.</source>
          <target state="new">Add a <bpt id="p1">*</bpt>Content-Type<ept id="p1">*</ept> header with value <bpt id="p2">*</bpt>application/json<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>10.</source>
          <target state="new">10.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>form-data<ept id="p1">**</ept>, and then add a <bpt id="p2">*</bpt>contact<ept id="p2">*</ept> key with the following value:

        {   "Id": 0,   "Name": "Li Yan",   "EmailAddress": "yan@contoso.com" }

11.</source>
          <target state="new">Click <bpt id="p1">**</bpt>form-data<ept id="p1">**</ept>, and then add a <bpt id="p2">*</bpt>contact<ept id="p2">*</ept> key with the following value:

        {   "Id": 0,   "Name": "Li Yan",   "EmailAddress": "yan@contoso.com" }

11.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Click Send.</source>
          <target state="new">Click Send.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The API app returns a <bpt id="p1">*</bpt>201 Created<ept id="p1">*</ept> response.</source>
          <target state="new">The API app returns a <bpt id="p1">*</bpt>201 Created<ept id="p1">*</ept> response.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Add headers and body](./media/app-service-api-dotnet-add-authentication/addcontact.png)</ph><ph id="ph2">

12.</ph> To verify that this request would not work without the authentication token, delete the authentication header and click Send again.</source>
          <target state="new"><ph id="ph1">![Add headers and body](./media/app-service-api-dotnet-add-authentication/addcontact.png)</ph><ph id="ph2">

12.</ph> To verify that this request would not work without the authentication token, delete the authentication header and click Send again.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You get a <bpt id="p1">*</bpt>403 Forbidden<ept id="p1">*</ept> response.</source>
          <target state="new">You get a <bpt id="p1">*</bpt>403 Forbidden<ept id="p1">*</ept> response.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![403 Forbidden response](./media/app-service-api-dotnet-add-authentication/403forbidden.png)</ph><ph id="ph2">

##</ph> Get information about the logged-on user

In this section you change the code in the ContactsList API app so that it retrieves and returns the name and email address of the logged-on user.</source>
          <target state="new"><ph id="ph1">![403 Forbidden response](./media/app-service-api-dotnet-add-authentication/403forbidden.png)</ph><ph id="ph2">

##</ph> Get information about the logged-on user

In this section you change the code in the ContactsList API app so that it retrieves and returns the name and email address of the logged-on user.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="new">1.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open the API app project that you deployed in <bpt id="p1">[</bpt><ept id="p1">Deploy an API app](app-service-dotnet-deploy-api-app.md)</ept> and have been calling for this tutorial.</source>
          <target state="new">In Visual Studio, open the API app project that you deployed in <bpt id="p1">[</bpt><ept id="p1">Deploy an API app](app-service-dotnet-deploy-api-app.md)</ept> and have been calling for this tutorial.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Open the apiapp.json file, and add a line that indicates the API app uses Azure Active Directory authentication.</source>
          <target state="new">Open the apiapp.json file, and add a line that indicates the API app uses Azure Active Directory authentication.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>"authentication": [{"type": "aad"}]

    The final apiapp.json file will resemble the following example:

        {
            "$schema": "http://json-schema.org/schemas/2014-11-01/apiapp.json#",
            "id": "ContactsList",
            "namespace": "microsoft.com",
            "gateway": "2015-01-14",
            "version": "1.0.0",
            "title": "ContactsList",
            "summary": "",
            "author": "",
            "endpoints": {
                "apiDefinition": "/swagger/docs/v1",
                "status": null
            },
            "authentication": [{"type": "aad"}]
        }

    This tutorial uses Azure Active Directory as an example.</source>
          <target state="new">"authentication": [{"type": "aad"}]

    The final apiapp.json file will resemble the following example:

        {
            "$schema": "http://json-schema.org/schemas/2014-11-01/apiapp.json#",
            "id": "ContactsList",
            "namespace": "microsoft.com",
            "gateway": "2015-01-14",
            "version": "1.0.0",
            "title": "ContactsList",
            "summary": "",
            "author": "",
            "endpoints": {
                "apiDefinition": "/swagger/docs/v1",
                "status": null
            },
            "authentication": [{"type": "aad"}]
        }

    This tutorial uses Azure Active Directory as an example.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For other providers you would use the appropriate identifier.</source>
          <target state="new">For other providers you would use the appropriate identifier.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Here are the valid provider values:

    * "aad"
    * "microsoftaccount"
    * "google"
    * "twitter"
    * "facebook".</source>
          <target state="new">Here are the valid provider values:

    * "aad"
    * "microsoftaccount"
    * "google"
    * "twitter"
    * "facebook".</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>ContactsController.cs<ept id="p1">*</ept> file, add a <ph id="ph1">`using`</ph> statement at the top of the file.</source>
          <target state="new">In the <bpt id="p1">*</bpt>ContactsController.cs<ept id="p1">*</ept> file, add a <ph id="ph1">`using`</ph> statement at the top of the file.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>using Microsoft.Azure.AppService.ApiApps.Service;

2.</source>
          <target state="new">using Microsoft.Azure.AppService.ApiApps.Service;

2.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Replace the code  in the <ph id="ph1">`Get`</ph> method with the following code.</source>
          <target state="new">Replace the code  in the <ph id="ph1">`Get`</ph> method with the following code.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>var runtime = Runtime.FromAppSettings(Request);
        var user = runtime.CurrentUser;
        TokenResult token = await user.GetRawTokenAsync("aad");
        var name = (string)token.Claims["name"];
        var email = (string)token.Claims["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn"];
        return new Contact[]
        {
            new Contact { Id = 1, EmailAddress = email, Name = name }
        };

    Instead of the three sample contacts, the code returns contact information for the logged-on user.</source>
          <target state="new">var runtime = Runtime.FromAppSettings(Request);
        var user = runtime.CurrentUser;
        TokenResult token = await user.GetRawTokenAsync("aad");
        var name = (string)token.Claims["name"];
        var email = (string)token.Claims["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn"];
        return new Contact[]
        {
            new Contact { Id = 1, EmailAddress = email, Name = name }
        };

    Instead of the three sample contacts, the code returns contact information for the logged-on user.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The sample code uses Azure Active Directory.</source>
          <target state="new">The sample code uses Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For other providers you would use the appropriate token name and claims identifier as shown in the previous step.</source>
          <target state="new">For other providers you would use the appropriate token name and claims identifier as shown in the previous step.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For information about Azure Active Directory claims that are available, see <bpt id="p1">[</bpt><ept id="p1">Supported Token and Claim Types](https://msdn.microsoft.com/library/dn195587.aspx)</ept>.</source>
          <target state="new">For information about Azure Active Directory claims that are available, see <bpt id="p1">[</bpt><ept id="p1">Supported Token and Claim Types](https://msdn.microsoft.com/library/dn195587.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="new">3.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Add a using statement for <ph id="ph1">`Microsoft.Azure.AppService.ApiApps.Service`</ph>.</source>
          <target state="new">Add a using statement for <ph id="ph1">`Microsoft.Azure.AppService.ApiApps.Service`</ph>.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>using Microsoft.Azure.AppService.ApiApps.Service;

3.</source>
          <target state="new">using Microsoft.Azure.AppService.ApiApps.Service;

3.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Redeploy the project.</source>
          <target state="new">Redeploy the project.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Visual Studio will remember the settings from when you deployed the project while following the <bpt id="p1">[</bpt><ept id="p1">Deploy](app-service-dotnet-deploy-api-app.md)</ept> tutorial.</source>
          <target state="new">Visual Studio will remember the settings from when you deployed the project while following the <bpt id="p1">[</bpt><ept id="p1">Deploy](app-service-dotnet-deploy-api-app.md)</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Right-click the project, click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept> in the <bpt id="p3">**</bpt>Publish Web<ept id="p3">**</ept> dialog.</source>
          <target state="new">Right-click the project, click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept> in the <bpt id="p3">**</bpt>Publish Web<ept id="p3">**</ept> dialog.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="new">6.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Follow the procedure you did earlier to send a Get request to the protected API app.</source>
          <target state="new">Follow the procedure you did earlier to send a Get request to the protected API app.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The response message shows the name and ID of the identity you used to log in.</source>
          <target state="new">The response message shows the name and ID of the identity you used to log in.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![Response message with logged on user](./media/app-service-api-dotnet-add-authentication/chromegetuserinfo.png)</ph><ph id="ph2">

##</ph> Next steps

You've seen how to protect an Azure API app by requiring Azure Active Directory or social provider authentication.</source>
          <target state="new"><ph id="ph1">![Response message with logged on user](./media/app-service-api-dotnet-add-authentication/chromegetuserinfo.png)</ph><ph id="ph2">

##</ph> Next steps

You've seen how to protect an Azure API app by requiring Azure Active Directory or social provider authentication.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt><ept id="p1">Authentication for API apps and mobile apps](../app-service/app-service-authentication-overview.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt><ept id="p1">Authentication for API apps and mobile apps](../app-service/app-service-authentication-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>[Azure portal]: https://manage.windowsazure.com/
[Azure preview portal]: https://portal.azure.com/

test</source>
          <target state="new">[Azure portal]: https://manage.windowsazure.com/
[Azure preview portal]: https://portal.azure.com/

test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ecc0f609e99857f3ff1c7303281aa083cbb59cd</xliffext:olfilehash>
  </header>
</xliff>