{
  "nodes": [
    {
      "content": "Use Azure storage in Windows Store apps | Microsoft Azure",
      "pos": [
        27,
        84
      ]
    },
    {
      "content": "Learn how to use Azure blobs, queues, and tables to store data for a Windows Store app.",
      "pos": [
        103,
        190
      ]
    },
    {
      "content": "How to use Azure Storage in Windows Store apps",
      "pos": [
        484,
        530
      ]
    },
    {
      "content": "Overview",
      "pos": [
        535,
        543
      ]
    },
    {
      "content": "This guide shows how to get started with developing a Windows Store app that makes use of Azure Storage.",
      "pos": [
        545,
        649
      ]
    },
    {
      "content": "Download required tools",
      "pos": [
        654,
        677
      ]
    },
    {
      "pos": [
        681,
        839
      ],
      "content": "<bpt id=\"p1\">[</bpt>Visual Studio 2012<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/br211384)</ept> makes it easy to build, debug, localize, package, and deploy Windows Store apps."
    },
    {
      "pos": [
        842,
        1075
      ],
      "content": "<bpt id=\"p1\">[</bpt>Azure Storage Client Library for Windows Runtime<ept id=\"p1\">](http://blogs.msdn.com/b/windowsazurestorage/archive/2012/11/05/windows-azure-storage-client-library-for-windows-runtime.aspx)</ept> provides a class library for working with Azure Storage."
    },
    {
      "pos": [
        1078,
        1315
      ],
      "content": "<bpt id=\"p1\">[</bpt>WCF Data Services Tools for Windows Store Apps<ept id=\"p1\">](http://www.microsoft.com/download/details.aspx?id=30714)</ept> extends the Add Service Reference experience with client-side OData support for Windows Store apps in Visual Studio 2012 and later."
    },
    {
      "content": "Develop apps",
      "pos": [
        1320,
        1332
      ]
    },
    {
      "content": "Getting ready",
      "pos": [
        1338,
        1351
      ]
    },
    {
      "content": "Create a new Windows Store app project in Visual Studio 2012 or later:",
      "pos": [
        1353,
        1423
      ]
    },
    {
      "content": "store-apps-storage-vs-project",
      "pos": [
        1427,
        1456
      ]
    },
    {
      "pos": [
        1490,
        1698
      ],
      "content": "Next, add a reference to the Azure Storage Client Library by right-clicking <bpt id=\"p1\">**</bpt>References<ept id=\"p1\">**</ept>, clicking <bpt id=\"p2\">**</bpt>Add Reference<ept id=\"p2\">**</ept>, and then browsing to the Storage Client Library for Windows Runtime that you downloaded:"
    },
    {
      "content": "store-apps-storage-choose-library",
      "pos": [
        1702,
        1735
      ]
    },
    {
      "content": "Using the library with the Blob and Queue services",
      "pos": [
        1777,
        1827
      ]
    },
    {
      "content": "At this point, your app is ready to call the Azure Blob and Queue services.",
      "pos": [
        1829,
        1904
      ]
    },
    {
      "content": "Add the following <bpt id=\"p1\">**</bpt>using<ept id=\"p1\">**</ept> statements so that Azure Storage types can be referenced directly:",
      "pos": [
        1905,
        1999
      ]
    },
    {
      "content": "Next, add a button to your page.",
      "pos": [
        2091,
        2123
      ]
    },
    {
      "content": "Add the following code to its <bpt id=\"p1\">**</bpt>Click<ept id=\"p1\">**</ept> event and modify your event handler method by using the <bpt id=\"p2\">[</bpt>async keyword<ept id=\"p2\">](http://msdn.microsoft.com/library/vstudio/hh156513.aspx)</ept>:",
      "pos": [
        2124,
        2293
      ]
    },
    {
      "content": "This code assumes that you have two string variables, <bpt id=\"p1\">*</bpt>accountName<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>accountKey<ept id=\"p2\">*</ept>.",
      "pos": [
        2597,
        2682
      ]
    },
    {
      "content": "They represent the name of your storage account and the account key that is associated with that account.",
      "pos": [
        2683,
        2788
      ]
    },
    {
      "content": "Build and run the application.",
      "pos": [
        2790,
        2820
      ]
    },
    {
      "content": "Clicking the button will check whether a container named <bpt id=\"p1\">*</bpt>container1<ept id=\"p1\">*</ept> exists in your account and then create it if not.",
      "pos": [
        2821,
        2940
      ]
    },
    {
      "content": "Using the library with the Table service",
      "pos": [
        2946,
        2986
      ]
    },
    {
      "content": "Types that are used to communicate with the Azure Table service depend on WCF Data Services for the Windows Store app library.",
      "pos": [
        2988,
        3114
      ]
    },
    {
      "content": "Next, add a reference to the required WCF libraries by using the Package Manager Console:",
      "pos": [
        3115,
        3204
      ]
    },
    {
      "content": "store-apps-storage-package-manager",
      "pos": [
        3208,
        3242
      ]
    },
    {
      "content": "Use the following command to point Package Manager to the location on your machine:",
      "pos": [
        3281,
        3364
      ]
    },
    {
      "content": "This command will automatically add all required references to your project.",
      "pos": [
        3496,
        3572
      ]
    },
    {
      "content": "If you do not want to use the Package Manager Console, you can add the WCF Data Services NuGet folder on your local machine to the list of package sources and then add the reference through the UI, as described in <bpt id=\"p1\">[</bpt>Managing NuGet Packages Using the Dialog<ept id=\"p1\">](http://docs.nuget.org/docs/start-here/Managing-NuGet-Packages-Using-The-Dialog)</ept>.",
      "pos": [
        3573,
        3910
      ]
    },
    {
      "pos": [
        3912,
        4023
      ],
      "content": "When you have referenced the WCF Data Services NuGet package, change the code in your button's <bpt id=\"p1\">**</bpt>Click<ept id=\"p1\">**</ept> event:"
    },
    {
      "pos": [
        4314,
        4413
      ],
      "content": "This code checks whether a table named <bpt id=\"p1\">*</bpt>table1<ept id=\"p1\">*</ept> exists in your account, and then creates it if not."
    },
    {
      "content": "You can also add a reference to Microsoft.WindowsAzure.Storage.Table.dll, which is available in the same package that you downloaded.",
      "pos": [
        4415,
        4548
      ]
    },
    {
      "content": "This library contains additional functionality, such as reflection-based serialization and generic queries.",
      "pos": [
        4549,
        4656
      ]
    },
    {
      "content": "Note that this library does not support JavaScript.",
      "pos": [
        4657,
        4708
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Use Azure storage in Windows Store apps | Microsoft Azure\"\n    description=\"Learn how to use Azure blobs, queues, and tables to store data for a Windows Store app.\"\n    services=\"storage\"\n    documentationCenter=\"\"\n    authors=\"tamram\"\n    manager=\"adinah\" />\n<tags\n    ms.service=\"storage\"\n    ms.workload=\"storage\"\n    ms.tgt_pltfrm=\"mobile-windows-store\"\n    ms.devlang=\"dotnet\"\n    ms.topic=\"article\"\n    ms.date=\"06/18/2015\"\n    ms.author=\"tamram\"/>\n# How to use Azure Storage in Windows Store apps\n\n## Overview\n\nThis guide shows how to get started with developing a Windows Store app that makes use of Azure Storage.\n\n## Download required tools\n\n- [Visual Studio 2012](http://msdn.microsoft.com/library/windows/apps/br211384) makes it easy to build, debug, localize, package, and deploy Windows Store apps.\n- [Azure Storage Client Library for Windows Runtime](http://blogs.msdn.com/b/windowsazurestorage/archive/2012/11/05/windows-azure-storage-client-library-for-windows-runtime.aspx) provides a class library for working with Azure Storage.\n- [WCF Data Services Tools for Windows Store Apps](http://www.microsoft.com/download/details.aspx?id=30714) extends the Add Service Reference experience with client-side OData support for Windows Store apps in Visual Studio 2012 and later.\n\n## Develop apps\n\n### Getting ready\n\nCreate a new Windows Store app project in Visual Studio 2012 or later:\n\n![store-apps-storage-vs-project][store-apps-storage-vs-project]\n\nNext, add a reference to the Azure Storage Client Library by right-clicking **References**, clicking **Add Reference**, and then browsing to the Storage Client Library for Windows Runtime that you downloaded:\n\n![store-apps-storage-choose-library][store-apps-storage-choose-library]\n\n### Using the library with the Blob and Queue services\n\nAt this point, your app is ready to call the Azure Blob and Queue services. Add the following **using** statements so that Azure Storage types can be referenced directly:\n\n    using Microsoft.WindowsAzure.Storage;\n    using Microsoft.WindowsAzure.Storage.Auth;\n\nNext, add a button to your page. Add the following code to its **Click** event and modify your event handler method by using the [async keyword](http://msdn.microsoft.com/library/vstudio/hh156513.aspx):\n\n    var credentials = new StorageCredentials(accountName, accountKey);\n    var account = new CloudStorageAccount(credentials, true);\n    var blobClient = account.CreateCloudBlobClient();\n    var container = blobClient.GetContainerReference(\"container1\");\n    await container.CreateIfNotExistsAsync();\n\nThis code assumes that you have two string variables, *accountName* and *accountKey*. They represent the name of your storage account and the account key that is associated with that account.\n\nBuild and run the application. Clicking the button will check whether a container named *container1* exists in your account and then create it if not.\n\n### Using the library with the Table service\n\nTypes that are used to communicate with the Azure Table service depend on WCF Data Services for the Windows Store app library. Next, add a reference to the required WCF libraries by using the Package Manager Console:\n\n![store-apps-storage-package-manager][store-apps-storage-package-manager]\n\nUse the following command to point Package Manager to the location on your machine:\n\n    Install-Package Microsoft.Data.OData.WindowsStore -Source \"C:\\Program Files (x86)\\Microsoft WCF Data Services\\5.0\\bin\\NuGet\"\n\nThis command will automatically add all required references to your project. If you do not want to use the Package Manager Console, you can add the WCF Data Services NuGet folder on your local machine to the list of package sources and then add the reference through the UI, as described in [Managing NuGet Packages Using the Dialog](http://docs.nuget.org/docs/start-here/Managing-NuGet-Packages-Using-The-Dialog).\n\nWhen you have referenced the WCF Data Services NuGet package, change the code in your button's **Click** event:\n\n    var credentials = new StorageCredentials(accountName, accountKey);\n    var account = new CloudStorageAccount(credentials, true);\n    var tableClient = account.CreateCloudTableClient();\n    var table = tableClient.GetTableReference(\"table1\");\n    await table.CreateIfNotExistsAsync();\n\nThis code checks whether a table named *table1* exists in your account, and then creates it if not.\n\nYou can also add a reference to Microsoft.WindowsAzure.Storage.Table.dll, which is available in the same package that you downloaded. This library contains additional functionality, such as reflection-based serialization and generic queries. Note that this library does not support JavaScript.\n\n\n\n[store-apps-storage-vs-project]: ./media/storage-use-store-apps/store-apps-storage-vs-project.png\n[store-apps-storage-choose-library]: ./media/storage-use-store-apps/store-apps-storage-choose-library.png\n[store-apps-storage-package-manager]: ./media/storage-use-store-apps/store-apps-storage-package-manager.png\n"
}