<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Automating Azure virtual machine deployment with Chef</source>
          <target state="new">Automating Azure virtual machine deployment with Chef</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn the art of Azure virtual machine automation with Chef</source>
          <target state="new">Learn the art of Azure virtual machine automation with Chef</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Automating Azure virtual machine deployment with Chef</source>
          <target state="new">Automating Azure virtual machine deployment with Chef</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Chef is a great tool for delivering automation and desired state configurations.</source>
          <target state="new">Chef is a great tool for delivering automation and desired state configurations.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>With our latest cloud-api release, Chef provides seamless integration with Azure, giving you the ability to provision and deploy configuration states through a single command.</source>
          <target state="new">With our latest cloud-api release, Chef provides seamless integration with Azure, giving you the ability to provision and deploy configuration states through a single command.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this article, I’ll show you how to set up your Chef environment to provision Azure virtual machines and walk you through creating a policy or “CookBook” and then deploying this cookbook to an Azure virtual machine.</source>
          <target state="new">In this article, I’ll show you how to set up your Chef environment to provision Azure virtual machines and walk you through creating a policy or “CookBook” and then deploying this cookbook to an Azure virtual machine.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Let’s begin!</source>
          <target state="new">Let’s begin!</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Chef basics</source>
          <target state="new">Chef basics</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Before you begin, I suggest you review the basic concepts of Chef.</source>
          <target state="new">Before you begin, I suggest you review the basic concepts of Chef.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There is great material <ph id="ph1">&lt;a href="http://www.chef.io/chef" target="_blank"&gt;</ph>here<ph id="ph2">&lt;/a&gt;</ph> and I recommend you have a quick read before you attempt this walkthrough.</source>
          <target state="new">There is great material <ph id="ph1">&lt;a href="http://www.chef.io/chef" target="_blank"&gt;</ph>here<ph id="ph2">&lt;/a&gt;</ph> and I recommend you have a quick read before you attempt this walkthrough.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>I will however recap the basics before we get started.</source>
          <target state="new">I will however recap the basics before we get started.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following diagram depicts the high-level Chef architecture.</source>
          <target state="new">The following diagram depicts the high-level Chef architecture.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>![][2]</source>
          <target state="new">![][2]</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Chef has three main architectural components: Chef Server, Chef Client (node), and Chef Workstation.</source>
          <target state="new">Chef has three main architectural components: Chef Server, Chef Client (node), and Chef Workstation.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Chef Server is our management point and there are two options for the Chef Server: a hosted solution or an on-premises solution.</source>
          <target state="new">The Chef Server is our management point and there are two options for the Chef Server: a hosted solution or an on-premises solution.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>We will be using a hosted solution.</source>
          <target state="new">We will be using a hosted solution.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Chef Client (node) is the agent that sits on the servers you are managing.</source>
          <target state="new">The Chef Client (node) is the agent that sits on the servers you are managing.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Chef Workstation is our admin workstation where we create our policies and execute our management commands.</source>
          <target state="new">The Chef Workstation is our admin workstation where we create our policies and execute our management commands.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>We run the <bpt id="p1">**</bpt>knife<ept id="p1">**</ept> command from the Chef Workstation to manage our infrastructure.</source>
          <target state="new">We run the <bpt id="p1">**</bpt>knife<ept id="p1">**</ept> command from the Chef Workstation to manage our infrastructure.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>There is also the concept of “Cookbooks” and “Recipes”.</source>
          <target state="new">There is also the concept of “Cookbooks” and “Recipes”.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These are effectively the policies we define and apply to our servers.</source>
          <target state="new">These are effectively the policies we define and apply to our servers.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Preparing the workstation</source>
          <target state="new">Preparing the workstation</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>First, lets prep the workstation.</source>
          <target state="new">First, lets prep the workstation.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>I’m using a standard Windows workstation.</source>
          <target state="new">I’m using a standard Windows workstation.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>We need to create a directory to store our config files and cookbooks.</source>
          <target state="new">We need to create a directory to store our config files and cookbooks.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>First create a directory called C:\chef.</source>
          <target state="new">First create a directory called C:\chef.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Then create a second directory called c:\chef\cookbooks.</source>
          <target state="new">Then create a second directory called c:\chef\cookbooks.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>We now need to download our Azure settings file so Chef can communicate with our Azure subscription.</source>
          <target state="new">We now need to download our Azure settings file so Chef can communicate with our Azure subscription.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Download your publish settings from <bpt id="p1">[</bpt>here<ept id="p1">](https://manage.windowsazure.com/publishsettings/)</ept>.</source>
          <target state="new">Download your publish settings from <bpt id="p1">[</bpt>here<ept id="p1">](https://manage.windowsazure.com/publishsettings/)</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Save the publish settings file in C:\chef.</source>
          <target state="new">Save the publish settings file in C:\chef.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creating a managed Chef account</source>
          <target state="new">Creating a managed Chef account</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Sign up for a hosted Chef account <bpt id="p1">[</bpt>here<ept id="p1">](https://manage.chef.io/signup)</ept>.</source>
          <target state="new">Sign up for a hosted Chef account <bpt id="p1">[</bpt>here<ept id="p1">](https://manage.chef.io/signup)</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>During the signup process, you will be asked to create a new organization.</source>
          <target state="new">During the signup process, you will be asked to create a new organization.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>![][3]</source>
          <target state="new">![][3]</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Once your organization is created, download the starter kit.</source>
          <target state="new">Once your organization is created, download the starter kit.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>![][4]</source>
          <target state="new">![][4]</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you receive a prompt warning you that your keys will be reset, it’s ok to proceed as we have no existing infrastructure configured as yet.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you receive a prompt warning you that your keys will be reset, it’s ok to proceed as we have no existing infrastructure configured as yet.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This starter kit zip file contains your organization config files and keys.</source>
          <target state="new">This starter kit zip file contains your organization config files and keys.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Configuring the Chef workstation</source>
          <target state="new">Configuring the Chef workstation</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Extract the content of the chef-starter.zip to C:\chef.</source>
          <target state="new">Extract the content of the chef-starter.zip to C:\chef.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Copy all files under chef-starter\chef-repo\.chef to your c:\chef directory.</source>
          <target state="new">Copy all files under chef-starter\chef-repo\.chef to your c:\chef directory.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Your directory should now look something like the following example.</source>
          <target state="new">Your directory should now look something like the following example.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>![][5]</source>
          <target state="new">![][5]</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You should now have four files including the Azure publishing file in the root of c:\chef.</source>
          <target state="new">You should now have four files including the Azure publishing file in the root of c:\chef.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The PEM files contain your organization and admin private keys for communication while the knife.rb file contains your knife configuration.</source>
          <target state="new">The PEM files contain your organization and admin private keys for communication while the knife.rb file contains your knife configuration.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>We will need to edit the knife.rb file.</source>
          <target state="new">We will need to edit the knife.rb file.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Open the file in your editor of choice and modify the “cookbook_path” by removing the /../ from the path so it appears as shown next.</source>
          <target state="new">Open the file in your editor of choice and modify the “cookbook_path” by removing the /../ from the path so it appears as shown next.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Also add the following line reflecting the name of your Azure publish settings file.</source>
          <target state="new">Also add the following line reflecting the name of your Azure publish settings file.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Your knife.rb file should now look similar to the following example.</source>
          <target state="new">Your knife.rb file should now look similar to the following example.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>![][6]</source>
          <target state="new">![][6]</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>These lines will ensure that Knife references the cookbooks directory under c:\chef\cookbooks, and also uses our Azure Publish Settings file during Azure operations.</source>
          <target state="new">These lines will ensure that Knife references the cookbooks directory under c:\chef\cookbooks, and also uses our Azure Publish Settings file during Azure operations.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Installing the Chef Development Kit</source>
          <target state="new">Installing the Chef Development Kit</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Next <bpt id="p1">[</bpt>download and install<ept id="p1">](http://downloads.getchef.com/chef-dk/windows)</ept> the ChefDK (Chef Development Kit) to set up your Chef Workstation.</source>
          <target state="new">Next <bpt id="p1">[</bpt>download and install<ept id="p1">](http://downloads.getchef.com/chef-dk/windows)</ept> the ChefDK (Chef Development Kit) to set up your Chef Workstation.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>![][7]</source>
          <target state="new">![][7]</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Install in the default location of c:\opscode.</source>
          <target state="new">Install in the default location of c:\opscode.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This install will take around 10 minutes.</source>
          <target state="new">This install will take around 10 minutes.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Confirm your PATH variable contains entries for C:\opscode\chefdk\bin;C:\opscode\chefdk\embedded\bin;c:\users\yourusername\.chefdk\gem\ruby\2.0.0\bin</source>
          <target state="new">Confirm your PATH variable contains entries for C:\opscode\chefdk\bin;C:\opscode\chefdk\embedded\bin;c:\users\yourusername\.chefdk\gem\ruby\2.0.0\bin</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If they are not there, make sure you add these paths!</source>
          <target state="new">If they are not there, make sure you add these paths!</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>NOTE THE ORDER OF THE PATH IS IMPORTANT!<ept id="p1">*</ept> If your opscode paths are not in the correct order you will have issues.</source>
          <target state="new"><bpt id="p1">*</bpt>NOTE THE ORDER OF THE PATH IS IMPORTANT!<ept id="p1">*</ept> If your opscode paths are not in the correct order you will have issues.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Reboot your workstation before you continue.</source>
          <target state="new">Reboot your workstation before you continue.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Next, we will install the Knife Azure extension.</source>
          <target state="new">Next, we will install the Knife Azure extension.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This provides Knife with the “Azure Plugin”.</source>
          <target state="new">This provides Knife with the “Azure Plugin”.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Run the following command.</source>
          <target state="new">Run the following command.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The –pre argument ensures you are receiving the latest RC version of the Knife Azure Plugin which provides access to the latest set of APIs.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The –pre argument ensures you are receiving the latest RC version of the Knife Azure Plugin which provides access to the latest set of APIs.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>It’s likely that a number of dependencies will also be installed at the same time.</source>
          <target state="new">It’s likely that a number of dependencies will also be installed at the same time.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>![][8]</source>
          <target state="new">![][8]</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To ensure everything is configured correctly, run the following command.</source>
          <target state="new">To ensure everything is configured correctly, run the following command.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If everything is configured correctly, you will see a list of available Azure images scroll through.</source>
          <target state="new">If everything is configured correctly, you will see a list of available Azure images scroll through.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Congratulations.</source>
          <target state="new">Congratulations.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The workstation is set up!</source>
          <target state="new">The workstation is set up!</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Creating a Cookbook</source>
          <target state="new">Creating a Cookbook</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A Cookbook is used by Chef to define a set of commands that you wish to execute on your managed client.</source>
          <target state="new">A Cookbook is used by Chef to define a set of commands that you wish to execute on your managed client.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Creating a Cookbook is straightforward and we use the <bpt id="p1">**</bpt>chef generate cookbook<ept id="p1">**</ept> command to generate our Cookbook template.</source>
          <target state="new">Creating a Cookbook is straightforward and we use the <bpt id="p1">**</bpt>chef generate cookbook<ept id="p1">**</ept> command to generate our Cookbook template.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>I will be calling my Cookbook web server as I would like a policy that automatically deploys IIS.</source>
          <target state="new">I will be calling my Cookbook web server as I would like a policy that automatically deploys IIS.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Under your C:\Chef directory run the following command.</source>
          <target state="new">Under your C:\Chef directory run the following command.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This will generate a set of files under the directory C:\Chef\cookbooks\webserver.</source>
          <target state="new">This will generate a set of files under the directory C:\Chef\cookbooks\webserver.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>We now need to define the set of commands we would like our Chef client to execute on our managed virtual machine.</source>
          <target state="new">We now need to define the set of commands we would like our Chef client to execute on our managed virtual machine.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The commands are stored in the file default.rb.</source>
          <target state="new">The commands are stored in the file default.rb.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In this file, I’ll be defining a set of commands that installs IIS, starts IIS and copies a template file to the wwwroot folder.</source>
          <target state="new">In this file, I’ll be defining a set of commands that installs IIS, starts IIS and copies a template file to the wwwroot folder.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Modify the C:\chef\cookbooks\webserver\recipes\default.rb file and add the following lines.</source>
          <target state="new">Modify the C:\chef\cookbooks\webserver\recipes\default.rb file and add the following lines.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Save the file once you are done.</source>
          <target state="new">Save the file once you are done.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Creating a template</source>
          <target state="new">Creating a template</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>As we mentioned previously, we need to generate a template file which will be used as our default.html page.</source>
          <target state="new">As we mentioned previously, we need to generate a template file which will be used as our default.html page.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Run the following command to generate the template.</source>
          <target state="new">Run the following command to generate the template.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Now navigate to the C:\chef\cookbooks\webserver\templates\default\Default.htm.erb file.</source>
          <target state="new">Now navigate to the C:\chef\cookbooks\webserver\templates\default\Default.htm.erb file.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Edit the file by adding some simple “Hello World” HTML code, and then save the file.</source>
          <target state="new">Edit the file by adding some simple “Hello World” HTML code, and then save the file.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Upload the Cookbook to the Chef Server</source>
          <target state="new">Upload the Cookbook to the Chef Server</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In this step, we are taking a copy of the Cookbook that we have created on our local machine and uploading it to the Chef Hosted Server.</source>
          <target state="new">In this step, we are taking a copy of the Cookbook that we have created on our local machine and uploading it to the Chef Hosted Server.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Once uploaded, the Cookbook will appear under the <bpt id="p1">**</bpt>Policy<ept id="p1">**</ept> tab.</source>
          <target state="new">Once uploaded, the Cookbook will appear under the <bpt id="p1">**</bpt>Policy<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>![][9]</source>
          <target state="new">![][9]</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Deploy a virtual machine with Knife Azure</source>
          <target state="new">Deploy a virtual machine with Knife Azure</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>We will now deploy an Azure virtual machine and apply the “Webserver” Cookbook which will install our IIS web service and default web page.</source>
          <target state="new">We will now deploy an Azure virtual machine and apply the “Webserver” Cookbook which will install our IIS web service and default web page.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In order to do this, use the <bpt id="p1">**</bpt>knife azure server create<ept id="p1">**</ept> command.</source>
          <target state="new">In order to do this, use the <bpt id="p1">**</bpt>knife azure server create<ept id="p1">**</ept> command.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Am example of the command appears next.</source>
          <target state="new">Am example of the command appears next.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The parameters are self-explanatory.</source>
          <target state="new">The parameters are self-explanatory.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Substitute your particular variables and run.</source>
          <target state="new">Substitute your particular variables and run.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Through the the command line, I’m also automating my endpoint network filter rules by using the –tcp-endpoints parameter.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Through the the command line, I’m also automating my endpoint network filter rules by using the –tcp-endpoints parameter.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>I’ve opened up ports 80 and 3389 to provide access to my web page and RDP session.</source>
          <target state="new">I’ve opened up ports 80 and 3389 to provide access to my web page and RDP session.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Once you run the command, go to the Azure portal and you will see your machine begin to provision.</source>
          <target state="new">Once you run the command, go to the Azure portal and you will see your machine begin to provision.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>![][13]</source>
          <target state="new">![][13]</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The command prompt appears next.</source>
          <target state="new">The command prompt appears next.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>![][10]</source>
          <target state="new">![][10]</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Once the deployment is complete, we should be able to connect to the web service over port 80 as we had opened the port when we provisioned the virtual machine with the Knife Azure command.</source>
          <target state="new">Once the deployment is complete, we should be able to connect to the web service over port 80 as we had opened the port when we provisioned the virtual machine with the Knife Azure command.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>As this virtual machine is the only virtual machine in my cloud service, I’ll connect it with the cloud service url.</source>
          <target state="new">As this virtual machine is the only virtual machine in my cloud service, I’ll connect it with the cloud service url.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>![][11]</source>
          <target state="new">![][11]</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>As you can see, I got creative with my HTML code.</source>
          <target state="new">As you can see, I got creative with my HTML code.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Don’t forget we can also connect through an RDP session from the Azure portal via port 3389.</source>
          <target state="new">Don’t forget we can also connect through an RDP session from the Azure portal via port 3389.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>I hope this has been helpful!</source>
          <target state="new">I hope this has been helpful!</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Go  and start your infrastructure as code journey with Azure today!</source>
          <target state="new">Go  and start your infrastructure as code journey with Azure today!</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08718df5f6a3f60a2717041239707a6a683a64b6</xliffext:olfilehash>
  </header>
</xliff>