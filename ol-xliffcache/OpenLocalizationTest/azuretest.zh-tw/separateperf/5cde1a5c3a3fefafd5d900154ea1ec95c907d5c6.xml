{
  "nodes": [
    {
      "content": "Specifying a Node.js Version",
      "pos": [
        23,
        51
      ]
    },
    {
      "content": "Learn how to specify the version of Node.js used by Azure Web Sites and Cloud Services",
      "pos": [
        66,
        152
      ]
    },
    {
      "content": "Specifying a Node.js version in an Azure application",
      "pos": [
        409,
        461
      ]
    },
    {
      "content": "When hosting a Node.js application, you may want to ensure that your application uses a specific version of Node.js.",
      "pos": [
        463,
        579
      ]
    },
    {
      "content": "There are several ways to accomplish this for applications hosted on Azure.",
      "pos": [
        580,
        655
      ]
    },
    {
      "content": "Default versions",
      "pos": [
        659,
        675
      ]
    },
    {
      "content": "The Node.js versions provided by Azure are constantly updated.",
      "pos": [
        677,
        739
      ]
    },
    {
      "content": "Unless otherwise specified, the latest available version will be used.",
      "pos": [
        740,
        810
      ]
    },
    {
      "content": "Currently included are the following versions:",
      "pos": [
        811,
        857
      ]
    },
    {
      "content": "0.12.x: 0.12.0",
      "pos": [
        861,
        875
      ]
    },
    {
      "content": "0.10.x: 0.10.32, 0.10.31, 0.10.29, 0.10.28, 10.26, 0.10.24, 0.10.21, 0.10.18, 0.10.5",
      "pos": [
        878,
        962
      ]
    },
    {
      "content": "0.8.x: 0.8.28, 0.8.27, 0.8.26, 0.8.19, 0.8.2",
      "pos": [
        965,
        1009
      ]
    },
    {
      "content": "0.6.x: 0.6.20, 0.6.17",
      "pos": [
        1012,
        1033
      ]
    },
    {
      "pos": [
        1037,
        1363
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you are hosting your application in an Azure Cloud Service (web or worker role,) and it is the first time you have deployed the application, Azure will attempt to use the same version of Node.js as you have installed on your development environment if it matches one of the default versions available on Azure."
    },
    {
      "content": "Versioning with package.json",
      "pos": [
        1367,
        1395
      ]
    },
    {
      "pos": [
        1397,
        1501
      ],
      "content": "You can specify the version of Node.js to be used by adding the following to your <bpt id=\"p1\">**</bpt>package.json<ept id=\"p1\">**</ept> file:"
    },
    {
      "content": "Where <bpt id=\"p1\">*</bpt>version<ept id=\"p1\">*</ept> is the specific version number to use.",
      "pos": [
        1535,
        1589
      ]
    },
    {
      "content": "You can  can specify more complex conditions for version, such as:",
      "pos": [
        1590,
        1656
      ]
    },
    {
      "content": "Since 0.6.22 is not one of the versions available in the hosting environment, the highest version of the 0.8 series that is available will be used instead - 0.8.4.",
      "pos": [
        1701,
        1864
      ]
    },
    {
      "content": "Versioning Websites with App Settings",
      "pos": [
        1868,
        1905
      ]
    },
    {
      "content": "If you are hosting the application in a Website, you can set the environment variable <bpt id=\"p1\">**</bpt>WEBSITE_NODE_DEFAULT_VERSION<ept id=\"p1\">**</ept> to the desired version.",
      "pos": [
        1906,
        2048
      ]
    },
    {
      "content": "Versioning Cloud Services with PowerShell",
      "pos": [
        2053,
        2094
      ]
    },
    {
      "content": "If you are hosting the application in a Cloud Service, and are deploying the application using Azure PowerShell, you can override the default Node.js version by using the <bpt id=\"p1\">**</bpt>Set-AzureServiceProjectRole<ept id=\"p1\">**</ept> PowerShell cmdlet.",
      "pos": [
        2096,
        2317
      ]
    },
    {
      "content": "For example:",
      "pos": [
        2318,
        2330
      ]
    },
    {
      "content": "Note the parameters in the above statement are case-sensitive.",
      "pos": [
        2385,
        2447
      ]
    },
    {
      "content": "You can verify the correct version of Node.js has been selected by checking the <bpt id=\"p1\">**</bpt>engines<ept id=\"p1\">**</ept> property in your role's <bpt id=\"p2\">**</bpt>package.json<ept id=\"p2\">**</ept>.",
      "pos": [
        2449,
        2582
      ]
    },
    {
      "content": "You can also use the <bpt id=\"p1\">**</bpt>Get-AzureServiceProjectRoleRuntime<ept id=\"p1\">**</ept> to retrieve a list of Node.js versions available for applications hosted as a Cloud Service.",
      "pos": [
        2584,
        2736
      ]
    },
    {
      "content": "Always verify the version of Node.js your project depends on is in this list.",
      "pos": [
        2738,
        2815
      ]
    },
    {
      "content": "Using a custom version with Azure Websites",
      "pos": [
        2819,
        2861
      ]
    },
    {
      "content": "While Azure provides several default versions of Node.js, you may want to use a version that is not provided by default.",
      "pos": [
        2863,
        2983
      ]
    },
    {
      "content": "If your application is hosted as an Azure Website, you can accomplish this by using the <bpt id=\"p1\">**</bpt>iisnode.yml<ept id=\"p1\">**</ept> file.",
      "pos": [
        2984,
        3093
      ]
    },
    {
      "content": "The following steps walk through the process of using a custom version of Node.Js with an Azure Website:",
      "pos": [
        3094,
        3198
      ]
    },
    {
      "content": "Create a new directory, and then create a <bpt id=\"p1\">**</bpt>server.js<ept id=\"p1\">**</ept> file within the directory.",
      "pos": [
        3203,
        3285
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>server.js<ept id=\"p1\">**</ept> file should contain the following:",
      "pos": [
        3286,
        3338
      ]
    },
    {
      "content": "This will display the Node.js version being used when you browse the website.",
      "pos": [
        3623,
        3700
      ]
    },
    {
      "content": "Create a new Website and note the name of the site.",
      "pos": [
        3705,
        3756
      ]
    },
    {
      "content": "For example, the following uses the <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure Command-line tools]</ept> to create a new Azure Website named <bpt id=\"p2\">**</bpt>mywebsite<ept id=\"p2\">**</ept>, and then enable a Git repository for the website.",
      "pos": [
        3757,
        3920
      ]
    },
    {
      "pos": [
        3968,
        4067
      ],
      "content": "Create a new directory named <bpt id=\"p1\">**</bpt>bin<ept id=\"p1\">**</ept> as a child of the directory containing the <bpt id=\"p2\">**</bpt>server.js<ept id=\"p2\">**</ept> file."
    },
    {
      "content": "Download the specific version of <bpt id=\"p1\">**</bpt>node.exe<ept id=\"p1\">**</ept> (the Windows version) that you wish to use with your application.",
      "pos": [
        4072,
        4183
      ]
    },
    {
      "content": "For example, the following uses <bpt id=\"p1\">**</bpt>curl<ept id=\"p1\">**</ept> to download version 0.8.1:",
      "pos": [
        4184,
        4251
      ]
    },
    {
      "pos": [
        4313,
        4383
      ],
      "content": "Save the <bpt id=\"p1\">**</bpt>node.exe<ept id=\"p1\">**</ept> file into the <bpt id=\"p2\">**</bpt>bin<ept id=\"p2\">**</ept> folder created previously."
    },
    {
      "pos": [
        4388,
        4531
      ],
      "content": "Create an <bpt id=\"p1\">**</bpt>iisnode.yml<ept id=\"p1\">**</ept> file in the same directory as the <bpt id=\"p2\">**</bpt>server.js<ept id=\"p2\">**</ept> file, and then add the following content to the <bpt id=\"p3\">**</bpt>iisnode.yml<ept id=\"p3\">**</ept> file:"
    },
    {
      "pos": [
        4606,
        4745
      ],
      "content": "This path is where the <bpt id=\"p1\">**</bpt>node.exe<ept id=\"p1\">**</ept> file within your project will be located once you have published your application to the Azure Website."
    },
    {
      "content": "Publish your application.",
      "pos": [
        4750,
        4775
      ]
    },
    {
      "content": "For example, since I created a new website with the --git parameter earlier, the following commands will add the application files to my local Git repository, and then push them to the website repository:",
      "pos": [
        4776,
        4980
      ]
    },
    {
      "content": "After the application has published, open the website in a browser.",
      "pos": [
        5079,
        5146
      ]
    },
    {
      "content": "You should see a message stating \"Hello from Azure running node version: v0.8.1\".",
      "pos": [
        5147,
        5228
      ]
    },
    {
      "content": "Next Steps",
      "pos": [
        5232,
        5242
      ]
    },
    {
      "pos": [
        5244,
        5469
      ],
      "content": "Now that you understand how to specify the version of Node.js used by your application, learn how to <bpt id=\"p1\">[</bpt><ept id=\"p1\">work with modules]</ept>, <bpt id=\"p2\">[</bpt><ept id=\"p2\">build and deploy a Node.js Web Site]</ept>, and <bpt id=\"p3\">[</bpt><ept id=\"p3\">How to use the Azure Command-Line Tools for Mac and Linux]</ept>."
    },
    {
      "content": "test",
      "pos": [
        5724,
        5728
      ]
    }
  ],
  "content": "<properties pageTitle=\"Specifying a Node.js Version\" description=\"Learn how to specify the version of Node.js used by Azure Web Sites and Cloud Services\" services=\"\" documentationCenter=\"nodejs\" authors=\"MikeWasson\" manager=\"wpickett\" editor=\"mollybos\"/>\n\n<tags ms.service=\"multiple\" ms.workload=\"na\" ms.tgt_pltfrm=\"na\" ms.devlang=\"nodejs\" ms.topic=\"article\" ms.date=\"08/31/2015\" ms.author=\"mwasson\"/>\n\n\n\n\n\n# Specifying a Node.js version in an Azure application\n\nWhen hosting a Node.js application, you may want to ensure that your application uses a specific version of Node.js. There are several ways to accomplish this for applications hosted on Azure.\n\n##Default versions\n\nThe Node.js versions provided by Azure are constantly updated. Unless otherwise specified, the latest available version will be used. Currently included are the following versions:\n\n- 0.12.x: 0.12.0\n- 0.10.x: 0.10.32, 0.10.31, 0.10.29, 0.10.28, 10.26, 0.10.24, 0.10.21, 0.10.18, 0.10.5\n- 0.8.x: 0.8.28, 0.8.27, 0.8.26, 0.8.19, 0.8.2\n- 0.6.x: 0.6.20, 0.6.17\n\n> [AZURE.NOTE] If you are hosting your application in an Azure Cloud Service (web or worker role,) and it is the first time you have deployed the application, Azure will attempt to use the same version of Node.js as you have installed on your development environment if it matches one of the default versions available on Azure.\n\n##Versioning with package.json\n\nYou can specify the version of Node.js to be used by adding the following to your **package.json** file:\n\n    \"engines\":{\"node\":version}\n\nWhere *version* is the specific version number to use. You can  can specify more complex conditions for version, such as:\n\n    \"engines\":{\"node\": \"0.6.22 || 0.8.x\"}\n\nSince 0.6.22 is not one of the versions available in the hosting environment, the highest version of the 0.8 series that is available will be used instead - 0.8.4.\n\n##Versioning Websites with App Settings\nIf you are hosting the application in a Website, you can set the environment variable **WEBSITE_NODE_DEFAULT_VERSION** to the desired version. \n\n##Versioning Cloud Services with PowerShell\n\nIf you are hosting the application in a Cloud Service, and are deploying the application using Azure PowerShell, you can override the default Node.js version by using the **Set-AzureServiceProjectRole** PowerShell cmdlet. For example:\n\n    Set-AzureServiceProjectRole WebRole1 Node 0.8.4\n\nNote the parameters in the above statement are case-sensitive.  You can verify the correct version of Node.js has been selected by checking the **engines** property in your role's **package.json**.\n\nYou can also use the **Get-AzureServiceProjectRoleRuntime** to retrieve a list of Node.js versions available for applications hosted as a Cloud Service.  Always verify the version of Node.js your project depends on is in this list.\n\n##Using a custom version with Azure Websites\n\nWhile Azure provides several default versions of Node.js, you may want to use a version that is not provided by default. If your application is hosted as an Azure Website, you can accomplish this by using the **iisnode.yml** file. The following steps walk through the process of using a custom version of Node.Js with an Azure Website:\n\n1. Create a new directory, and then create a **server.js** file within the directory. The **server.js** file should contain the following:\n\n        var http = require('http');\n        http.createServer(function(req,res) {\n          res.writeHead(200, {'Content-Type': 'text/html'});\n          res.end('Hello from Azure running node version: ' + process.version + '</br>');\n        }).listen(process.env.PORT || 3000);\n\n    This will display the Node.js version being used when you browse the website.\n\n2. Create a new Website and note the name of the site. For example, the following uses the [Azure Command-line tools] to create a new Azure Website named **mywebsite**, and then enable a Git repository for the website.\n\n        azure site create mywebsite --git\n\n3. Create a new directory named **bin** as a child of the directory containing the **server.js** file.\n\n4. Download the specific version of **node.exe** (the Windows version) that you wish to use with your application. For example, the following uses **curl** to download version 0.8.1:\n\n        curl -O http://nodejs.org/dist/v0.8.1/node.exe\n\n    Save the **node.exe** file into the **bin** folder created previously.\n\n5. Create an **iisnode.yml** file in the same directory as the **server.js** file, and then add the following content to the **iisnode.yml** file:\n\n        nodeProcessCommandLine: \"D:\\home\\site\\wwwroot\\bin\\node.exe\"\n\n    This path is where the **node.exe** file within your project will be located once you have published your application to the Azure Website.\n\n6. Publish your application. For example, since I created a new website with the --git parameter earlier, the following commands will add the application files to my local Git repository, and then push them to the website repository:\n\n        git add .\n        git commit -m \"testing node v0.8.1\"\n        git push azure master\n\n    After the application has published, open the website in a browser. You should see a message stating \"Hello from Azure running node version: v0.8.1\".\n\n##Next Steps\n\nNow that you understand how to specify the version of Node.js used by your application, learn how to [work with modules], [build and deploy a Node.js Web Site], and [How to use the Azure Command-Line Tools for Mac and Linux].\n\n[How to use the Azure Command-Line Tools for Mac and Linux]: xplat-cli.md\n[Azure Command-line tools]: xplat-cli.md\n[work with modules]: nodejs-use-node-modules-azure-apps.md\n[build and deploy a Node.js Web Site]: web-sites-nodejs-develop-deploy-mac.md\n\ntest\n"
}