<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Partitioning Service Fabric Services</source>
          <target state="new">Partitioning Service Fabric Services</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Describes how to partition Service Fabric services</source>
          <target state="new">Describes how to partition Service Fabric services</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Partitioning Service Fabric services</source>
          <target state="new">Partitioning Service Fabric services</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Service Fabric makes it easy to build scalable stateful services by supporting partitioning of the service state and having each partition operate on a subset of the total state.</source>
          <target state="new">Service Fabric makes it easy to build scalable stateful services by supporting partitioning of the service state and having each partition operate on a subset of the total state.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each partition becomes a unit that is made <bpt id="p1">[</bpt>highly available<ept id="p1">](service-fabric-availability-services.md)</ept>.</source>
          <target state="new">Each partition becomes a unit that is made <bpt id="p1">[</bpt>highly available<ept id="p1">](service-fabric-availability-services.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The replicas of partitions are distributed across the nodes in the cluster and are balanced.</source>
          <target state="new">The replicas of partitions are distributed across the nodes in the cluster and are balanced.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> While Stateless Services can also be partitioned this scenario is rare and unnecessary for most Service Fabric services.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> While Stateless Services can also be partitioned this scenario is rare and unnecessary for most Service Fabric services.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>There are three different partitioning schemes available.</source>
          <target state="new">There are three different partitioning schemes available.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Singleton Partitioning Scheme</source>
          <target state="new">Singleton Partitioning Scheme</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is used to specify that the service does not need partitioning.</source>
          <target state="new">This is used to specify that the service does not need partitioning.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Named Partitioning Scheme</source>
          <target state="new">Named Partitioning Scheme</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This is used to specify a fixed set of names for each partition of the service.</source>
          <target state="new">This is used to specify a fixed set of names for each partition of the service.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Individual partitions can be looked up by their name.</source>
          <target state="new">Individual partitions can be looked up by their name.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Ranged Partitioning Scheme</source>
          <target state="new">Ranged Partitioning Scheme</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This is used to specify an integer range (identified by a low and a high key) and a number of partitions (n).</source>
          <target state="new">This is used to specify an integer range (identified by a low and a high key) and a number of partitions (n).</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It creates n partitions, each responsible for a non-overlapping subrange.</source>
          <target state="new">It creates n partitions, each responsible for a non-overlapping subrange.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example: A ranged partitioning scheme (for a service with three replicas) with a low key of 0, a high key of 99 and a count of 4 would create 4 partitions as shown below.</source>
          <target state="new">Example: A ranged partitioning scheme (for a service with three replicas) with a low key of 0, a high key of 99 and a count of 4 would create 4 partitions as shown below.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Range Partitioning</source>
          <target state="new">Range Partitioning</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The common case is to create a hash for a unique key within a dataset.</source>
          <target state="new">The common case is to create a hash for a unique key within a dataset.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Some common examples of keys would be a vehicle identification number (VIN), employee ID, or a unique string.</source>
          <target state="new">Some common examples of keys would be a vehicle identification number (VIN), employee ID, or a unique string.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Using that unique key you would then create a long hash code, modulus the key range, to use as your key.</source>
          <target state="new">Using that unique key you would then create a long hash code, modulus the key range, to use as your key.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can specify upper and lower bounds of the allowed key range.</source>
          <target state="new">You can specify upper and lower bounds of the allowed key range.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Additionally, you should estimate the number of partitions high enough to handle worst-case resource load (such as memory limitations or network bandwidth) but not so much that partitions are extremely sparse.</source>
          <target state="new">Additionally, you should estimate the number of partitions high enough to handle worst-case resource load (such as memory limitations or network bandwidth) but not so much that partitions are extremely sparse.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Selecting a hash algorithm</source>
          <target state="new">Selecting a hash algorithm</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An important part of hashing is selecting your hash algorithm.</source>
          <target state="new">An important part of hashing is selecting your hash algorithm.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An important consideration is whether the goal is to group similar keys near each other (Locality sensitive hashing), or if activity should be distributed broadly across all partitions (Distribution Hashing).</source>
          <target state="new">An important consideration is whether the goal is to group similar keys near each other (Locality sensitive hashing), or if activity should be distributed broadly across all partitions (Distribution Hashing).</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A good resource for general hash code algorithm choices is <bpt id="p1">[</bpt>the Wikipedia page on Hash Functions<ept id="p1">](http://en.wikipedia.org/wiki/Hash_function)</ept>.</source>
          <target state="new">A good resource for general hash code algorithm choices is <bpt id="p1">[</bpt>the Wikipedia page on Hash Functions<ept id="p1">](http://en.wikipedia.org/wiki/Hash_function)</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> It is not possible to change the number of partitions or the type of partitioning scheme used for a service after it has been created.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> It is not possible to change the number of partitions or the type of partitioning scheme used for a service after it has been created.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For information on Service Fabric concepts, see the following:</source>
          <target state="new">For information on Service Fabric concepts, see the following:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Availability of Service Fabric Services</source>
          <target state="new">Availability of Service Fabric Services</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Scalability of Service Fabric Services</source>
          <target state="new">Scalability of Service Fabric Services</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6943223366541a793f38345d69f40f622db3b3db</xliffext:olfilehash>
  </header>
</xliff>