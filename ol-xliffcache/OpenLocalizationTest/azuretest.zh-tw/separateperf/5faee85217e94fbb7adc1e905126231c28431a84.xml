{
  "nodes": [
    {
      "content": "Upload images to Azure Storage from a Windows Phone Silverlight app | Microsoft Azure",
      "pos": [
        28,
        113
      ]
    },
    {
      "content": "Learn how to use Mobile Services to upload images from a Windows Phone Silverlight app to Azure Blob Storage.",
      "pos": [
        133,
        242
      ]
    },
    {
      "content": "Upload images to Azure Storage by using Mobile Services",
      "pos": [
        589,
        644
      ]
    },
    {
      "content": "Overview",
      "pos": [
        786,
        794
      ]
    },
    {
      "content": "This topic shows you how to use Azure Mobile Services to enable your app to upload and store user-generated images in Azure Storage.",
      "pos": [
        796,
        928
      ]
    },
    {
      "content": "Mobile Services uses a SQL Database to store data.",
      "pos": [
        929,
        979
      ]
    },
    {
      "content": "However, binary large object (BLOB) data is more efficiently stored in Azure Blob storage service.",
      "pos": [
        980,
        1078
      ]
    },
    {
      "content": "You cannot securely distribute with the client app the credentials required to securely upload data to the Blob Storage service.",
      "pos": [
        1081,
        1209
      ]
    },
    {
      "content": "Instead, you must store these credentials your mobile service and use them to generate a Shared Access Signature (SAS) that is used to upload a new image.",
      "pos": [
        1210,
        1364
      ]
    },
    {
      "content": "The SAS, a credential with a short expiration&amp;mdash;in this case 5 minutes, is returned securely by Mobile Services to the client app.",
      "pos": [
        1365,
        1499
      ]
    },
    {
      "content": "The app then uses this temporary credential to upload the image.",
      "pos": [
        1500,
        1564
      ]
    },
    {
      "content": "In this example, downloads from the Blob service are public.",
      "pos": [
        1565,
        1625
      ]
    },
    {
      "pos": [
        1627,
        1858
      ],
      "content": "In this tutorial, you add functionality to the <bpt id=\"p1\">[</bpt>GetStartedWithData sample app project<ept id=\"p1\">](mobile-services-windows-phone-get-started-data.md)</ept> to take pictures and upload the images to Azure by using an SAS generated by Mobile Services."
    },
    {
      "content": "Prerequisites",
      "pos": [
        1864,
        1877
      ]
    },
    {
      "content": "This tutorial requires the following:",
      "pos": [
        1879,
        1916
      ]
    },
    {
      "content": "Microsoft Visual Studio 2012 Express for Windows 8, or a later version",
      "pos": [
        1920,
        1990
      ]
    },
    {
      "pos": [
        1993,
        2026
      ],
      "content": "<bpt id=\"p1\">[</bpt><ept id=\"p1\">Windows Phone SDK 8.0]</ept> or higher"
    },
    {
      "content": "Nuget Package Manager installed for Microsoft Visual Studio.",
      "pos": [
        2029,
        2089
      ]
    },
    {
      "content": "Azure Storage account",
      "pos": [
        2093,
        2114
      ]
    },
    {
      "pos": [
        2151,
        2264
      ],
      "content": "Complete the tutorial <bpt id=\"p1\">[</bpt>Add Mobile Services to an existing app<ept id=\"p1\">](mobile-services-windows-phone-get-started-data.md)</ept>"
    },
    {
      "content": "Install the Storage client for Windows Phone apps",
      "pos": [
        2271,
        2320
      ]
    },
    {
      "content": "To be able to use an SAS to upload images to Blob storage, you must first add the NuGet package that installs Storage client library for Windows Phone apps.",
      "pos": [
        2322,
        2478
      ]
    },
    {
      "pos": [
        2483,
        2598
      ],
      "content": "In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> in Visual Studio, right-click the project name, and then select <bpt id=\"p2\">**</bpt>Manage NuGet Packages<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        2603,
        2816
      ],
      "content": "In the left pane, select the <bpt id=\"p1\">**</bpt>Online<ept id=\"p1\">**</ept> category, select <bpt id=\"p2\">**</bpt>Include Prerelease<ept id=\"p2\">**</ept>, search for <bpt id=\"p3\">**</bpt>WindowsAzure.Storage-Preview<ept id=\"p3\">**</ept>, click <bpt id=\"p4\">**</bpt>Install<ept id=\"p4\">**</ept> on the <bpt id=\"p5\">**</bpt>Azure Storage<ept id=\"p5\">**</ept> package, then accept the license agreements."
    },
    {
      "content": "Add Azure Storage NuGet",
      "pos": [
        2825,
        2848
      ]
    },
    {
      "content": "This adds the client library for Azure storage services to the project.",
      "pos": [
        2963,
        3034
      ]
    },
    {
      "content": "Next, you will update the quickstart app to capture and upload images.",
      "pos": [
        3036,
        3106
      ]
    },
    {
      "content": "Update the registered insert script in the Management Portal",
      "pos": [
        3110,
        3170
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>To add new properties to the TodoItem object, you must have Dynamic Schema enabled in your mobile service.",
      "pos": [
        3290,
        3408
      ]
    },
    {
      "content": "When Dynamic Schema is enabled, new columns are automatically added to the TodoItem table that map to these new properties.",
      "pos": [
        3409,
        3532
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        3681,
        3691
      ]
    },
    {
      "content": "Now that you have been able to securely upload images by integrating your mobile service with the Blob service, check out some of the other backend service and integration topics:",
      "pos": [
        3693,
        3872
      ]
    },
    {
      "content": "Send email from Mobile Services with SendGrid",
      "pos": [
        3877,
        3922
      ]
    },
    {
      "content": "Learn how to add email functionality to your Mobile Service using the SendGrid email service.",
      "pos": [
        3928,
        4021
      ]
    },
    {
      "content": "This topic demonstrates how to add server side scripts to send email using SendGrid.",
      "pos": [
        4022,
        4106
      ]
    },
    {
      "content": "Schedule backend jobs in Mobile Services",
      "pos": [
        4111,
        4151
      ]
    },
    {
      "content": "Learn how to use the Mobile Services job scheduler functionality to define server script code that is executed on a schedule that you define.",
      "pos": [
        4156,
        4297
      ]
    },
    {
      "content": "See also",
      "pos": [
        4301,
        4309
      ]
    },
    {
      "content": "Mobile Services server script reference",
      "pos": [
        4314,
        4353
      ]
    },
    {
      "content": "Reference topics for using server scripts to perform server-side tasks and integration with other Azure components and external resources.",
      "pos": [
        4358,
        4496
      ]
    },
    {
      "content": "Mobile Services .NET How-to Conceptual Reference",
      "pos": [
        4502,
        4550
      ]
    },
    {
      "content": "Learn more about how to use Mobile Services with .NET",
      "pos": [
        4555,
        4608
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Upload images to Azure Storage from a Windows Phone Silverlight app | Microsoft Azure\" \n    description=\"Learn how to use Mobile Services to upload images from a Windows Phone Silverlight app to Azure Blob Storage.\" \n    documentationCenter=\"windows\" \n    authors=\"ggailey777\" \n    services=\"mobile-services\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"mobile-services\" \n    ms.workload=\"mobile\" \n    ms.tgt_pltfrm=\"mobile-windows-phone\" \n    ms.devlang=\"dotnet\" \n    ms.topic=\"article\" \n    ms.date=\"07/21/2015\" \n    ms.author=\"glenga\"/>\n\n# Upload images to Azure Storage by using Mobile Services\n\n[AZURE.INCLUDE [mobile-services-selector-upload-data-blob-storage](../../includes/mobile-services-selector-upload-data-blob-storage.md)]\n\n##Overview\n\nThis topic shows you how to use Azure Mobile Services to enable your app to upload and store user-generated images in Azure Storage. Mobile Services uses a SQL Database to store data. However, binary large object (BLOB) data is more efficiently stored in Azure Blob storage service. \n\nYou cannot securely distribute with the client app the credentials required to securely upload data to the Blob Storage service. Instead, you must store these credentials your mobile service and use them to generate a Shared Access Signature (SAS) that is used to upload a new image. The SAS, a credential with a short expiration&mdash;in this case 5 minutes, is returned securely by Mobile Services to the client app. The app then uses this temporary credential to upload the image. In this example, downloads from the Blob service are public.\n\nIn this tutorial, you add functionality to the [GetStartedWithData sample app project](mobile-services-windows-phone-get-started-data.md) to take pictures and upload the images to Azure by using an SAS generated by Mobile Services. \n\n\n##Prerequisites\n\nThis tutorial requires the following:\n\n+ Microsoft Visual Studio 2012 Express for Windows 8, or a later version\n+ [Windows Phone SDK 8.0] or higher\n+ Nuget Package Manager installed for Microsoft Visual Studio.\n+ [Azure Storage account][How To Create a Storage Account]\n+ Complete the tutorial [Add Mobile Services to an existing app](mobile-services-windows-phone-get-started-data.md)  \n\n\n##Install the Storage client for Windows Phone apps\n\nTo be able to use an SAS to upload images to Blob storage, you must first add the NuGet package that installs Storage client library for Windows Phone apps.\n\n1. In **Solution Explorer** in Visual Studio, right-click the project name, and then select **Manage NuGet Packages**.\n\n2. In the left pane, select the **Online** category, select **Include Prerelease**, search for **WindowsAzure.Storage-Preview**, click **Install** on the **Azure Storage** package, then accept the license agreements. \n\n    ![Add Azure Storage NuGet](./media/mobile-services-windows-phone-upload-data-blob-storage/mobile-add-storage-nuget-package-dotnet.png)\n\n    This adds the client library for Azure storage services to the project.\n\nNext, you will update the quickstart app to capture and upload images.\n\n##Update the registered insert script in the Management Portal\n\n\n[AZURE.INCLUDE [mobile-services-configure-blob-storage](../../includes/mobile-services-configure-blob-storage.md)]\n\n>[AZURE.NOTE]To add new properties to the TodoItem object, you must have Dynamic Schema enabled in your mobile service. When Dynamic Schema is enabled, new columns are automatically added to the TodoItem table that map to these new properties.\n\n[AZURE.INCLUDE [mobile-services-windows-phone-upload-to-blob-storage](../../includes/mobile-services-windows-phone-upload-to-blob-storage.md)]\n\n\n##Next steps\n\nNow that you have been able to securely upload images by integrating your mobile service with the Blob service, check out some of the other backend service and integration topics:\n\n+ [Send email from Mobile Services with SendGrid]\n \n  Learn how to add email functionality to your Mobile Service using the SendGrid email service. This topic demonstrates how to add server side scripts to send email using SendGrid.\n\n+ [Schedule backend jobs in Mobile Services]\n\n  Learn how to use the Mobile Services job scheduler functionality to define server script code that is executed on a schedule that you define.\n\n##See also\n\n+ [Mobile Services server script reference]\n\n  Reference topics for using server scripts to perform server-side tasks and integration with other Azure components and external resources.\n \n+ [Mobile Services .NET How-to Conceptual Reference]\n\n  Learn more about how to use Mobile Services with .NET\n  \n<!-- Images. -->\n\n<!-- URLs. -->\n[Send email from Mobile Services with SendGrid]: store-sendgrid-mobile-services-send-email-scripts.md\n[Schedule backend jobs in Mobile Services]: mobile-services-schedule-recurring-tasks.md\n[Mobile Services server script reference]: mobile-services-how-to-use-server-scripts.md\n[Get started with Mobile Services]: ../mobile-services-windows-phone-get-started.md\n\n[Azure Management Portal]: https://manage.windowsazure.com/\n[How To Create a Storage Account]: ../storage-create-storage-account.md\n[Azure Storage Client library for Store apps]: http://go.microsoft.com/fwlink/p/?LinkId=276866 \n[Mobile Services .NET How-to Conceptual Reference]: mobile-services-windows-dotnet-how-to-use-client-library.md\n[Windows Phone SDK 8.0]: http://www.microsoft.com/download/details.aspx?id=35471\n\n\n "
}