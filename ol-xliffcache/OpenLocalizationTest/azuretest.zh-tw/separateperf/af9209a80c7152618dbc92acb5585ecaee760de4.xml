{
  "nodes": [
    {
      "content": "Get Started with Event Hubs",
      "pos": [
        27,
        54
      ]
    },
    {
      "content": "Follow this tutorial to get started using Azure Event Hubs; sending events in C and receiving them in an Apache Storm cluster.",
      "pos": [
        73,
        199
      ]
    },
    {
      "content": "Get started with Event Hubs",
      "pos": [
        493,
        520
      ]
    },
    {
      "content": "Introduction",
      "pos": [
        629,
        641
      ]
    },
    {
      "content": "Event Hubs is a highly scalable ingestion system that can intake millions of events per second, enabling an application to process and analyze the massive amounts of data produced by your connected devices and applications.",
      "pos": [
        643,
        866
      ]
    },
    {
      "content": "Once collected into Event Hubs, you can transform and store data using any real-time analytics provider or storage cluster.",
      "pos": [
        867,
        990
      ]
    },
    {
      "pos": [
        992,
        1047
      ],
      "content": "For more information, please see <bpt id=\"p1\">[</bpt><ept id=\"p1\">Event Hubs overview]</ept>."
    },
    {
      "content": "In this tutorial, you will learn how to ingest messages into an Event Hub using a console application in C, and to retrieve them in parallel using Apache Storm.",
      "pos": [
        1049,
        1209
      ]
    },
    {
      "content": "In order to complete this tutorial you will need the following:",
      "pos": [
        1211,
        1274
      ]
    },
    {
      "content": "A C development environment.",
      "pos": [
        1278,
        1306
      ]
    },
    {
      "content": "For this tutorial, we will assume the gcc stack on an <bpt id=\"p1\">[</bpt>Azure Linux VM<ept id=\"p1\">](../virtual-machines/virtual-machines-linux-tutorial.md)</ept> with Ubuntu 14.04.",
      "pos": [
        1307,
        1452
      ]
    },
    {
      "content": "Instructions for other environments will be provided in external links.",
      "pos": [
        1453,
        1524
      ]
    },
    {
      "content": "A Java development environment configured to run <bpt id=\"p1\">[</bpt>Maven<ept id=\"p1\">](http://maven.apache.org/)</ept>.",
      "pos": [
        1528,
        1611
      ]
    },
    {
      "content": "For this tutorial, we will assume <bpt id=\"p1\">[</bpt>Eclipse<ept id=\"p1\">](https://www.eclipse.org/)</ept>.",
      "pos": [
        1612,
        1682
      ]
    },
    {
      "content": "An active Azure account.",
      "pos": [
        1686,
        1710
      ]
    },
    {
      "content": "If you don't have an account, you can create a free trial account in just a couple of minutes.",
      "pos": [
        1711,
        1805
      ]
    },
    {
      "content": "For details, see <bpt id=\"p1\">[</bpt>Azure Free Trial<ept id=\"p1\">](https://azure.microsoft.com/pricing/free-trial/)</ept>.",
      "pos": [
        1806,
        1891
      ]
    },
    {
      "content": "Create an Event Hub",
      "pos": [
        1896,
        1915
      ]
    },
    {
      "pos": [
        1920,
        1996
      ],
      "content": "Log on to the <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure portal]</ept>, and click <bpt id=\"p2\">**</bpt>NEW<ept id=\"p2\">**</ept> at the bottom of the screen."
    },
    {
      "pos": [
        2001,
        2093
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>App Services<ept id=\"p1\">**</ept>, then <bpt id=\"p2\">**</bpt>Service Bus<ept id=\"p2\">**</ept>, then <bpt id=\"p3\">**</bpt>Event Hub<ept id=\"p3\">**</ept>, and then <bpt id=\"p4\">**</bpt>Quick Create<ept id=\"p4\">**</ept>."
    },
    {
      "content": "![][1]",
      "pos": [
        2099,
        2105
      ]
    },
    {
      "pos": [
        2110,
        2211
      ],
      "content": "Type a name for your Even Hub, select your desired region, and then click <bpt id=\"p1\">**</bpt>Create a new Event Hub<ept id=\"p1\">**</ept>."
    },
    {
      "content": "![][2]",
      "pos": [
        2217,
        2223
      ]
    },
    {
      "pos": [
        2228,
        2299
      ],
      "content": "Click the namespace you just created (usually <bpt id=\"p1\">**</bpt><bpt id=\"p2\">*</bpt>event hub name<ept id=\"p2\">*</ept>-ns<ept id=\"p1\">**</ept>)."
    },
    {
      "content": "![][3]",
      "pos": [
        2305,
        2311
      ]
    },
    {
      "pos": [
        2316,
        2415
      ],
      "content": "Click the <bpt id=\"p1\">**</bpt>Event Hubs<ept id=\"p1\">**</ept> tab at the top of the page, and then click the Event Hub you just created."
    },
    {
      "content": "![][4]",
      "pos": [
        2421,
        2427
      ]
    },
    {
      "pos": [
        2432,
        2621
      ],
      "content": "Click the <bpt id=\"p1\">**</bpt>Configure<ept id=\"p1\">**</ept> tab at the top of the page, add a rule called <bpt id=\"p2\">**</bpt>SendRule<ept id=\"p2\">**</ept> with <bpt id=\"p3\">*</bpt>Send<ept id=\"p3\">*</ept> rights, add another rule called <bpt id=\"p4\">**</bpt>ReceiveRule<ept id=\"p4\">**</ept> with <bpt id=\"p5\">*</bpt>Listen<ept id=\"p5\">*</ept> rights, and then click <bpt id=\"p6\">**</bpt>Save<ept id=\"p6\">**</ept>."
    },
    {
      "content": "![][5]",
      "pos": [
        2627,
        2633
      ]
    },
    {
      "pos": [
        2638,
        2725
      ],
      "content": "On the same page, take note of the generated keys for <bpt id=\"p1\">**</bpt>SendRule<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>ReceiveRule<ept id=\"p2\">**</ept>."
    },
    {
      "content": "![][6c]",
      "pos": [
        2731,
        2738
      ]
    },
    {
      "content": "Your Event Hub is now created, and you have the connection strings you need to send and receive events.",
      "pos": [
        2740,
        2843
      ]
    },
    {
      "content": "Run the applications",
      "pos": [
        3106,
        3126
      ]
    },
    {
      "content": "Now you are ready to run the applications.",
      "pos": [
        3128,
        3170
      ]
    },
    {
      "pos": [
        3176,
        3283
      ],
      "content": "Run the <bpt id=\"p1\">**</bpt>LogTopology<ept id=\"p1\">**</ept> class from Eclipse, then wait for it to start the receivers for all the partitions."
    },
    {
      "pos": [
        3289,
        3366
      ],
      "content": "Run the <bpt id=\"p1\">**</bpt>sender<ept id=\"p1\">**</ept> program, and see the events appear in the receiver window."
    },
    {
      "content": "![][23]",
      "pos": [
        3372,
        3379
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> In this tutorial only, use Storm in local mode for development purposes.",
      "pos": [
        3383,
        3468
      ]
    },
    {
      "content": "Refer to the <bpt id=\"p1\">[</bpt><ept id=\"p1\">HDInsight Storm overview]</ept> and the official <bpt id=\"p2\">[</bpt><ept id=\"p2\">Apache Storm]</ept> documentation for more information of Storm deployments and patterns.",
      "pos": [
        3469,
        3610
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        3615,
        3625
      ]
    },
    {
      "content": "The following resources are available for developing applications integrating Event Hubs and Storm.",
      "pos": [
        3627,
        3726
      ]
    },
    {
      "pos": [
        3730,
        3885
      ],
      "content": "<bpt id=\"p1\">[</bpt><ept id=\"p1\">Analyzing sensor data with Storm and HDInsight]</ept> is a full scenario tutorial using Event Hubs, Storm, and HBase to ingest sensor data in an Hadoop cluster."
    },
    {
      "pos": [
        3888,
        4035
      ],
      "content": "<bpt id=\"p1\">[</bpt><ept id=\"p1\">Develop streaming data processing applications with SCP.NET and C# on Storm and HDInsight]</ept> is a tutorial on how to write Storm pipelines using C#."
    },
    {
      "content": "test",
      "pos": [
        5169,
        5173
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Get Started with Event Hubs\"\n    description=\"Follow this tutorial to get started using Azure Event Hubs; sending events in C and receiving them in an Apache Storm cluster.\"\n    services=\"event-hubs\"\n    documentationCenter=\"\"\n    authors=\"fsautomata\"\n    manager=\"timlt\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"event-hubs\"\n    ms.workload=\"core\"\n    ms.tgt_pltfrm=\"c\"\n    ms.devlang=\"java\"\n    ms.topic=\"article\" \n    ms.date=\"09/01/2015\"\n    ms.author=\"sethm\"/>\n\n# Get started with Event Hubs\n\n[AZURE.INCLUDE [service-bus-selector-get-started](../../includes/service-bus-selector-get-started.md)]\n\n## Introduction\n\nEvent Hubs is a highly scalable ingestion system that can intake millions of events per second, enabling an application to process and analyze the massive amounts of data produced by your connected devices and applications. Once collected into Event Hubs, you can transform and store data using any real-time analytics provider or storage cluster.\n\nFor more information, please see [Event Hubs overview].\n\nIn this tutorial, you will learn how to ingest messages into an Event Hub using a console application in C, and to retrieve them in parallel using Apache Storm.\n\nIn order to complete this tutorial you will need the following:\n\n+ A C development environment. For this tutorial, we will assume the gcc stack on an [Azure Linux VM](../virtual-machines/virtual-machines-linux-tutorial.md) with Ubuntu 14.04. Instructions for other environments will be provided in external links.\n\n+ A Java development environment configured to run [Maven](http://maven.apache.org/). For this tutorial, we will assume [Eclipse](https://www.eclipse.org/).\n\n+ An active Azure account. If you don't have an account, you can create a free trial account in just a couple of minutes. For details, see [Azure Free Trial](https://azure.microsoft.com/pricing/free-trial/).\n\n## Create an Event Hub\n\n1. Log on to the [Azure portal], and click **NEW** at the bottom of the screen.\n\n2. Click **App Services**, then **Service Bus**, then **Event Hub**, and then **Quick Create**.\n\n    ![][1]\n\n3. Type a name for your Even Hub, select your desired region, and then click **Create a new Event Hub**.\n\n    ![][2]\n\n4. Click the namespace you just created (usually ***event hub name*-ns**).\n\n    ![][3]\n\n5. Click the **Event Hubs** tab at the top of the page, and then click the Event Hub you just created.\n\n    ![][4]\n\n6. Click the **Configure** tab at the top of the page, add a rule called **SendRule** with *Send* rights, add another rule called **ReceiveRule** with *Listen* rights, and then click **Save**.\n\n    ![][5]\n\n7. On the same page, take note of the generated keys for **SendRule** and **ReceiveRule**.\n\n    ![][6c]\n\nYour Event Hub is now created, and you have the connection strings you need to send and receive events.\n\n[AZURE.INCLUDE [service-bus-event-hubs-get-started-send-c](../../includes/service-bus-event-hubs-get-started-send-c.md)]\n\n[AZURE.INCLUDE [service-bus-event-hubs-get-started-receive-storm](../../includes/service-bus-event-hubs-get-started-receive-storm.md)]\n\n## Run the applications\n\nNow you are ready to run the applications.\n\n1.  Run the **LogTopology** class from Eclipse, then wait for it to start the receivers for all the partitions.\n\n2.  Run the **sender** program, and see the events appear in the receiver window.\n\n    ![][23]\n\n> [AZURE.NOTE] In this tutorial only, use Storm in local mode for development purposes. Refer to the [HDInsight Storm overview] and the official [Apache Storm] documentation for more information of Storm deployments and patterns.\n\n## Next steps\n\nThe following resources are available for developing applications integrating Event Hubs and Storm.\n\n- [Analyzing sensor data with Storm and HDInsight] is a full scenario tutorial using Event Hubs, Storm, and HBase to ingest sensor data in an Hadoop cluster.\n- [Develop streaming data processing applications with SCP.NET and C# on Storm and HDInsight] is a tutorial on how to write Storm pipelines using C#.\n\n<!-- Images. -->\n[1]: ./media/event-hubs-c-storm-getstarted/create-event-hub1.png\n[2]: ./media/event-hubs-c-storm-getstarted/create-event-hub2.png\n[3]: ./media/event-hubs-c-storm-getstarted/create-event-hub3.png\n[4]: ./media/event-hubs-c-storm-getstarted/create-event-hub4.png\n[5]: ./media/event-hubs-c-storm-getstarted/create-event-hub5.png\n[6]: ./media/event-hubs-getstarted/create-event-hub6.png\n[6c]: ./media/event-hubs-c-storm-getstarted/create-event-hub6c.png\n\n[23]: ./media/event-hubs-c-storm-getstarted/receive-storm3.png\n\n<!-- Links -->\n[Azure portal]: https://manage.windowsazure.com/\n[Event Processor Host]: https://www.nuget.org/packages/Microsoft.Azure.ServiceBus.EventProcessorHost\n[Event Hubs overview]: event-hubs-overview.md\n\n[Apache Storm]: https://storm.incubator.apache.org\n[HDInsight Storm overview]: ../hdinsight/hdinsight-storm-overview.md/\n[Analyzing sensor data with Storm and HDInsight]: ../hdinsight/hdinsight-storm-sensor-data-analysis.md\n[Develop streaming data processing applications with SCP.NET and C# on Storm and HDInsight]: ../hdinsight/hdinsight-storm-develop-csharp-visual-studio-topology.md\n \ntest\n"
}