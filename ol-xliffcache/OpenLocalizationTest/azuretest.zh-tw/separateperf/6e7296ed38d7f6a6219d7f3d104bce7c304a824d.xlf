<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Define a custom API that supports pull notifications | Microsoft Azure</source>
          <target state="new">Define a custom API that supports pull notifications | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to Define a custom API that supports periodic notifications in Windows Store apps that use Azure Mobile Services.</source>
          <target state="new">Learn how to Define a custom API that supports periodic notifications in Windows Store apps that use Azure Mobile Services.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Define a custom API that supports periodic notifications</source>
          <target state="new">Define a custom API that supports periodic notifications</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic shows you how to use a custom API to support periodic notifications in a Windows Store app.</source>
          <target state="new">This topic shows you how to use a custom API to support periodic notifications in a Windows Store app.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>With period notifications enabled, Windows will periodically access your custom API endpoint and use the returned XML, in a tile-specific format, to update the app tile on start menu.</source>
          <target state="new">With period notifications enabled, Windows will periodically access your custom API endpoint and use the returned XML, in a tile-specific format, to update the app tile on start menu.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see [Periodic notifications].</source>
          <target state="new">For more information, see [Periodic notifications].</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You will add this functionality to the app that you created when you completed either [Get started with Mobile Services] or [Add Mobile Services to an existing app] tutorials.</source>
          <target state="new">You will add this functionality to the app that you created when you completed either [Get started with Mobile Services] or [Add Mobile Services to an existing app] tutorials.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To do this, you will complete the following steps:</source>
          <target state="new">To do this, you will complete the following steps:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[Define the custom API]</source>
          <target state="new">[Define the custom API]</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>[Update the app to turn on period notifications]</source>
          <target state="new">[Update the app to turn on period notifications]</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>[Test the app]</source>
          <target state="new">[Test the app]</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This tutorial is based on the Mobile Services quickstart.</source>
          <target state="new">This tutorial is based on the Mobile Services quickstart.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Before you start this tutorial, you must first complete either [Get started with Mobile Services] or [Add Mobile Services to an existing app] tutorials.</source>
          <target state="new">Before you start this tutorial, you must first complete either [Get started with Mobile Services] or [Add Mobile Services to an existing app] tutorials.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="define-custom-api"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Define the custom API</source>
          <target state="new"><ph id="ph1">&lt;a name="define-custom-api"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Define the custom API</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Log into the [Azure Management Portal], click <bpt id="p1">**</bpt>Mobile Services<ept id="p1">**</ept>, and then click your app.</source>
          <target state="new">Log into the [Azure Management Portal], click <bpt id="p1">**</bpt>Mobile Services<ept id="p1">**</ept>, and then click your app.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>API<ept id="p1">**</ept> tab, and then click <bpt id="p2">**</bpt>Create a custom API<ept id="p2">**</ept>.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>API<ept id="p1">**</ept> tab, and then click <bpt id="p2">**</bpt>Create a custom API<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This displays the <bpt id="p1">**</bpt>Create a new custom API<ept id="p1">**</ept> dialog.</source>
          <target state="new">This displays the <bpt id="p1">**</bpt>Create a new custom API<ept id="p1">**</ept> dialog.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Change <bpt id="p1">**</bpt>Get permission<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Everyone<ept id="p2">**</ept>, type <bpt id="p3">_</bpt>tiles<ept id="p3">_</ept> in <bpt id="p4">**</bpt>API name<ept id="p4">**</ept>, and then click the check button.</source>
          <target state="new">Change <bpt id="p1">**</bpt>Get permission<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Everyone<ept id="p2">**</ept>, type <bpt id="p3">_</bpt>tiles<ept id="p3">_</ept> in <bpt id="p4">**</bpt>API name<ept id="p4">**</ept>, and then click the check button.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This creates the new API with public GET access.</source>
          <target state="new">This creates the new API with public GET access.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Click the new tiles entry in the API table.</source>
          <target state="new">Click the new tiles entry in the API table.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Script<ept id="p1">**</ept> tab and replace the existing code with the following:</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Script<ept id="p1">**</ept> tab and replace the existing code with the following:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This code returns the top 3 uncompleted items from the TodoItem table, then loads them into a JSON object passed to the <bpt id="p1">**</bpt>wns<ept id="p1">**</ept>.<bpt id="p2">**</bpt>createTileSquareText01<ept id="p2">**</ept> function.</source>
          <target state="new">This code returns the top 3 uncompleted items from the TodoItem table, then loads them into a JSON object passed to the <bpt id="p1">**</bpt>wns<ept id="p1">**</ept>.<bpt id="p2">**</bpt>createTileSquareText01<ept id="p2">**</ept> function.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This function returns the following tile template XML:</source>
          <target state="new">This function returns the following tile template XML:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>exports.get<ept id="p1">**</ept> function is used because the client will send a GET request to access the tile template.</source>
          <target state="new">The <bpt id="p1">**</bpt>exports.get<ept id="p1">**</ept> function is used because the client will send a GET request to access the tile template.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This custom API script uses the Node.js <bpt id="p1">[</bpt>wns module<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=306750)</ept>, which is referenced by using the <bpt id="p2">**</bpt>require<ept id="p2">**</ept> function.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This custom API script uses the Node.js <bpt id="p1">[</bpt>wns module<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=306750)</ept>, which is referenced by using the <bpt id="p2">**</bpt>require<ept id="p2">**</ept> function.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This module is different from the <bpt id="p1">[</bpt>wns object<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=260591)</ept> returned by the <bpt id="p2">[</bpt>push object<ept id="p2">](http://msdn.microsoft.com/library/windowsazure/jj554217.aspx)</ept>, which is used to send push notifications from server scripts.</source>
          <target state="new">This module is different from the <bpt id="p1">[</bpt>wns object<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=260591)</ept> returned by the <bpt id="p2">[</bpt>push object<ept id="p2">](http://msdn.microsoft.com/library/windowsazure/jj554217.aspx)</ept>, which is used to send push notifications from server scripts.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Next, you will modify the quickstart app to start periodic notifications that update the live tile by requesting the new custom API.</source>
          <target state="new">Next, you will modify the quickstart app to start periodic notifications that update the live tile by requesting the new custom API.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="update-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update the app to turn on period notifications</source>
          <target state="new"><ph id="ph1">&lt;a name="update-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update the app to turn on period notifications</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In Visual Studio, press the F5 key to run the quickstart app from the previous tutorial.</source>
          <target state="new">In Visual Studio, press the F5 key to run the quickstart app from the previous tutorial.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Make sure at least one item is displayed.</source>
          <target state="new">Make sure at least one item is displayed.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If there are no items, type text in <bpt id="p1">**</bpt>Insert a TodoItem<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</source>
          <target state="new">If there are no items, type text in <bpt id="p1">**</bpt>Insert a TodoItem<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open the App.xaml.cs project file and add the following using statement:</source>
          <target state="new">In Visual Studio, open the App.xaml.cs project file and add the following using statement:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add the following code into the <bpt id="p1">**</bpt>OnLaunched<ept id="p1">**</ept> event handler:</source>
          <target state="new">Add the following code into the <bpt id="p1">**</bpt>OnLaunched<ept id="p1">**</ept> event handler:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This code turns on period notifications to request tile template data from the new <bpt id="p1">**</bpt>tiles<ept id="p1">**</ept> custom API.</source>
          <target state="new">This code turns on period notifications to request tile template data from the new <bpt id="p1">**</bpt>tiles<ept id="p1">**</ept> custom API.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Select a [PeriodicUpdateRecurrance] value that best matches the update frequency of your data.</source>
          <target state="new">Select a [PeriodicUpdateRecurrance] value that best matches the update frequency of your data.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="test-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Test the app</source>
          <target state="new"><ph id="ph1">&lt;a name="test-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Test the app</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In Visual Studio, press the F5 key to run the app again.</source>
          <target state="new">In Visual Studio, press the F5 key to run the app again.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This will turn on periodic notifications.</source>
          <target state="new">This will turn on periodic notifications.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Navigate to the Start screen, locate the live tile for the app, and notice that item data is now displayed in the tile.</source>
          <target state="new">Navigate to the Start screen, locate the live tile for the app, and notice that item data is now displayed in the tile.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Now that you have created a periodic notification, consider finding out more about the following Mobile Services topics:</source>
          <target state="new">Now that you have created a periodic notification, consider finding out more about the following Mobile Services topics:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>[Get started with push notifications]</source>
          <target state="new">[Get started with push notifications]</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Periodic notifications are managed by Windows and occur only on a predefined schedule.</source>
          <target state="new">Periodic notifications are managed by Windows and occur only on a predefined schedule.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Push notifications can be sent by the mobile service on demand and can be toast, tile, and raw notifications.</source>
          <target state="new">Push notifications can be sent by the mobile service on demand and can be toast, tile, and raw notifications.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>[Mobile Services server script reference]</source>
          <target state="new">[Mobile Services server script reference]</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Learn more about creating custom APIs.</source>
          <target state="new">Learn more about creating custom APIs.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>[Mobile Services .NET How-to Conceptual Reference]</source>
          <target state="new">[Mobile Services .NET How-to Conceptual Reference]</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Learn more about how to use Mobile Services with .NET.</source>
          <target state="new">Learn more about how to use Mobile Services with .NET.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e7296ed38d7f6a6219d7f3d104bce7c304a824d</xliffext:olfilehash>
  </header>
</xliff>