{
  "nodes": [
    {
      "content": "Reliable Actors Reentrancy",
      "pos": [
        26,
        52
      ]
    },
    {
      "content": "Introduction to Reentrancy for Service Fabric Reliable Actors",
      "pos": [
        70,
        131
      ]
    },
    {
      "content": "Reliable Actor Reentrancy",
      "pos": [
        429,
        454
      ]
    },
    {
      "content": "Fabric Actors, by default, allow logical call context-based reentrancy.",
      "pos": [
        455,
        526
      ]
    },
    {
      "content": "This allows for actors to be reentrant if they are in the same call context chain.",
      "pos": [
        527,
        609
      ]
    },
    {
      "content": "For example if Actor A sends message to Actor B who sends message to Actor C. As part of the message processing if Actor C calls Actor A, the message is reentrant so will be allowed.",
      "pos": [
        610,
        792
      ]
    },
    {
      "content": "Any other messages that are part of different call context will be blocked on Actor A until it completes processing.",
      "pos": [
        793,
        909
      ]
    },
    {
      "pos": [
        911,
        1076
      ],
      "content": "Actors that want to disallow logical call context-based reentrancy can disable it by decorating the actor class with <ph id=\"ph1\">`ReentrantAttribute(ReentrancyMode.Disallowed)`</ph>."
    },
    {
      "content": "The following code shows actor class that sets the reentrancy mode to <ph id=\"ph1\">`ReentrancyMode.Disallowed`</ph>.",
      "pos": [
        1171,
        1269
      ]
    },
    {
      "content": "In this case if an actor sends a reentrant message to another actor an exception of type <ph id=\"ph1\">`FabricException`</ph> will be thrown.",
      "pos": [
        1270,
        1392
      ]
    }
  ],
  "content": "<properties\n   pageTitle=\"Reliable Actors Reentrancy\"\n   description=\"Introduction to Reentrancy for Service Fabric Reliable Actors\"\n   services=\"service-fabric\"\n   documentationCenter=\".net\"\n   authors=\"jessebenson\"\n   manager=\"timlt\"\n   editor=\"\"/>\n\n<tags\n   ms.service=\"service-fabric\"\n   ms.devlang=\"dotnet\"\n   ms.topic=\"article\"\n   ms.tgt_pltfrm=\"NA\"\n   ms.workload=\"NA\"\n   ms.date=\"08/05/2015\"\n   ms.author=\"amanbha\"/>\n\n\n# Reliable Actor Reentrancy\nFabric Actors, by default, allow logical call context-based reentrancy. This allows for actors to be reentrant if they are in the same call context chain. For example if Actor A sends message to Actor B who sends message to Actor C. As part of the message processing if Actor C calls Actor A, the message is reentrant so will be allowed. Any other messages that are part of different call context will be blocked on Actor A until it completes processing.\n\nActors that want to disallow logical call context-based reentrancy can disable it by decorating the actor class with `ReentrantAttribute(ReentrancyMode.Disallowed)`.\n\n```csharp\npublic enum ReentrancyMode\n{\n    LogicalCallContext = 1,\n    Disallowed = 2\n}\n```\n\nThe following code shows actor class that sets the reentrancy mode to `ReentrancyMode.Disallowed`. In this case if an actor sends a reentrant message to another actor an exception of type `FabricException` will be thrown.\n\n```csharp\n[Reentrant(ReentrancyMode.Disallowed)]\nclass VoicemailBoxActor : Actor<VoicemailBox>, IVoicemailBoxActor\n{\n    ...\n}\n```\n"
}