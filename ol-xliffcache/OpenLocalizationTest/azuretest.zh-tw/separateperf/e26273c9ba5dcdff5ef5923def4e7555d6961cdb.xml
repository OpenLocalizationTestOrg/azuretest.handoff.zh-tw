{
  "nodes": [
    {
      "content": "How to use the SendGrid email service (Java) | Microsoft Azure",
      "pos": [
        28,
        90
      ]
    },
    {
      "content": "Learn how send email with the SendGrid email service on Azure.",
      "pos": [
        110,
        172
      ]
    },
    {
      "content": "Code samples written in Java.",
      "pos": [
        173,
        202
      ]
    },
    {
      "content": "How to Send Email Using SendGrid from Java",
      "pos": [
        571,
        613
      ]
    },
    {
      "content": "This guide demonstrates how to perform common programming tasks with the",
      "pos": [
        615,
        687
      ]
    },
    {
      "content": "SendGrid email service on Azure.",
      "pos": [
        688,
        720
      ]
    },
    {
      "content": "The samples are written in",
      "pos": [
        721,
        747
      ]
    },
    {
      "content": "Java.",
      "pos": [
        748,
        753
      ]
    },
    {
      "content": "The scenarios covered include <bpt id=\"p1\">**</bpt>constructing email<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>sending\nemail<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>adding attachments<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>using filters<ept id=\"p4\">**</ept>, and <bpt id=\"p5\">**</bpt>updating\nproperties<ept id=\"p5\">**</ept>.",
      "pos": [
        754,
        898
      ]
    },
    {
      "content": "For more information on SendGrid and sending email, see",
      "pos": [
        899,
        954
      ]
    },
    {
      "content": "the <bpt id=\"p1\">[</bpt>Next steps<ept id=\"p1\">](#next-steps)</ept> section.",
      "pos": [
        955,
        993
      ]
    },
    {
      "content": "What is the SendGrid Email Service?",
      "pos": [
        998,
        1033
      ]
    },
    {
      "content": "SendGrid is a <bpt id=\"p1\">[</bpt><ept id=\"p1\">cloud-based email service]</ept> that provides reliable",
      "pos": [
        1035,
        1099
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt><ept id=\"p1\">transactional email delivery]</ept>, scalability, and real-time analytics along with flexible APIs",
      "pos": [
        1100,
        1193
      ]
    },
    {
      "content": "that make custom integration easy.",
      "pos": [
        1194,
        1228
      ]
    },
    {
      "content": "Common SendGrid usage scenarios",
      "pos": [
        1229,
        1260
      ]
    },
    {
      "content": "include:",
      "pos": [
        1261,
        1269
      ]
    },
    {
      "content": "Automatically sending receipts to customers",
      "pos": [
        1275,
        1318
      ]
    },
    {
      "pos": [
        1323,
        1417
      ],
      "content": "Administering distribution lists for sending customers monthly\ne-fliers and special offers",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Administering distribution lists for sending customers monthly",
          "pos": [
            0,
            62
          ]
        },
        {
          "content": "e-fliers and special offers",
          "pos": [
            63,
            90
          ]
        }
      ]
    },
    {
      "pos": [
        1422,
        1514
      ],
      "content": "Collecting real-time metrics for things like blocked e-mail, and\ncustomer responsiveness",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Collecting real-time metrics for things like blocked e-mail, and",
          "pos": [
            0,
            64
          ]
        },
        {
          "content": "customer responsiveness",
          "pos": [
            65,
            88
          ]
        }
      ]
    },
    {
      "content": "Generating reports to help identify trends",
      "pos": [
        1519,
        1561
      ]
    },
    {
      "content": "Forwarding customer inquiries",
      "pos": [
        1566,
        1595
      ]
    },
    {
      "content": "Email notifications from your application",
      "pos": [
        1598,
        1639
      ]
    },
    {
      "pos": [
        1641,
        1689
      ],
      "content": "For more information, see <bpt id=\"p1\">&lt;</bpt><ept id=\"p1\">http://sendgrid.com&gt;</ept>."
    },
    {
      "content": "Create a SendGrid account",
      "pos": [
        1694,
        1719
      ]
    },
    {
      "content": "How to: Use the javax.mail libraries",
      "pos": [
        1793,
        1829
      ]
    },
    {
      "content": "Obtain the javax.mail libraries, for example from",
      "pos": [
        1831,
        1880
      ]
    },
    {
      "content": "<bpt id=\"p1\">&lt;</bpt><ept id=\"p1\">http://www.oracle.com/technetwork/java/javamail&gt;</ept> and import them into",
      "pos": [
        1881,
        1951
      ]
    },
    {
      "content": "your code.",
      "pos": [
        1952,
        1962
      ]
    },
    {
      "content": "At a high-level, the process for using the javax.mail library",
      "pos": [
        1963,
        2024
      ]
    },
    {
      "content": "to send email using SMTP is to do the following:",
      "pos": [
        2025,
        2073
      ]
    },
    {
      "pos": [
        2079,
        2175
      ],
      "content": "Specify the SMTP values, including the SMTP server, which for\nSendGrid is smtp.sendgrid.net.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Specify the SMTP values, including the SMTP server, which for",
          "pos": [
            0,
            61
          ]
        },
        {
          "content": "SendGrid is smtp.sendgrid.net.",
          "pos": [
            62,
            92
          ]
        }
      ]
    },
    {
      "pos": [
        3125,
        3296
      ],
      "content": "Extend the *javax.mail.Authenticator*\nclass, and in your implementation of the\n*getPasswordAuthentication* method,\nreturn your SendGrid user name and password.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Extend the <bpt id=\"p1\">*</bpt>javax.mail.Authenticator<ept id=\"p1\">*</ept>",
          "pos": [
            0,
            37
          ]
        },
        {
          "content": "class, and in your implementation of the",
          "pos": [
            38,
            78
          ]
        },
        {
          "content": "<bpt id=\"p1\">*</bpt>getPasswordAuthentication<ept id=\"p1\">*</ept> method,",
          "pos": [
            79,
            114
          ]
        },
        {
          "content": "return your SendGrid user name and password.",
          "pos": [
            115,
            159
          ]
        }
      ]
    },
    {
      "pos": [
        3613,
        3693
      ],
      "content": "Create an authenticated email session through a\n*javax.mail.Session* object.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Create an authenticated email session through a",
          "pos": [
            0,
            47
          ]
        },
        {
          "content": "<bpt id=\"p1\">*</bpt>javax.mail.Session<ept id=\"p1\">*</ept> object.",
          "pos": [
            48,
            76
          ]
        }
      ]
    },
    {
      "pos": [
        3832,
        3996
      ],
      "content": "Create your message and assign **To**, **From**, **Subject** and\ncontent values. This is shown in the [How To: Create an Email](#bkmk_HowToCreateEmail) section.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Create your message and assign <bpt id=\"p1\">**</bpt>To<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>From<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Subject<ept id=\"p3\">**</ept> and",
          "pos": [
            0,
            64
          ]
        },
        {
          "content": "content values. This is shown in the [How To: Create an Email](#bkmk_HowToCreateEmail) section.",
          "pos": [
            65,
            160
          ],
          "nodes": [
            {
              "content": "content values.",
              "pos": [
                0,
                15
              ]
            },
            {
              "content": "This is shown in the <bpt id=\"p1\">[</bpt>How To: Create an Email<ept id=\"p1\">](#bkmk_HowToCreateEmail)</ept> section.",
              "pos": [
                16,
                95
              ]
            }
          ]
        }
      ]
    },
    {
      "pos": [
        4001,
        4147
      ],
      "content": "Send the message through a\n*javax.mail.Transport* object. This\nis shown in the [How To: Send an Email][How to: Send an Email]\nsection.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Send the message through a",
          "pos": [
            0,
            26
          ]
        },
        {
          "content": "*javax.mail.Transport* object. This",
          "pos": [
            27,
            62
          ],
          "nodes": [
            {
              "content": "<bpt id=\"p1\">*</bpt>javax.mail.Transport<ept id=\"p1\">*</ept> object.",
              "pos": [
                0,
                30
              ]
            },
            {
              "content": "This",
              "pos": [
                31,
                35
              ]
            }
          ]
        },
        {
          "content": "is shown in the [How To: Send an Email][How to: Send an Email]",
          "pos": [
            63,
            125
          ]
        },
        {
          "content": "section.",
          "pos": [
            126,
            134
          ]
        }
      ]
    },
    {
      "content": "How to: Create an email",
      "pos": [
        4152,
        4175
      ]
    },
    {
      "content": "The following shows how to specify values for an email.",
      "pos": [
        4177,
        4232
      ]
    },
    {
      "content": "How to: Send an email",
      "pos": [
        4988,
        5009
      ]
    },
    {
      "content": "The following shows how to send an email.",
      "pos": [
        5011,
        5052
      ]
    },
    {
      "content": "How to: Add an attachment",
      "pos": [
        5315,
        5340
      ]
    },
    {
      "content": "The following code shows you how to add an attachment.",
      "pos": [
        5342,
        5396
      ]
    },
    {
      "content": "How to: Use filters to enable footers, tracking, and analytics",
      "pos": [
        5961,
        6023
      ]
    },
    {
      "content": "SendGrid provides additional email functionality through the use of",
      "pos": [
        6025,
        6092
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>filters<ept id=\"p1\">*</ept>.",
      "pos": [
        6093,
        6103
      ]
    },
    {
      "content": "These are settings that can be added to an email message to",
      "pos": [
        6104,
        6163
      ]
    },
    {
      "content": "enable specific functionality such as enabling click tracking, Google",
      "pos": [
        6164,
        6233
      ]
    },
    {
      "content": "analytics, subscription tracking, and so on.",
      "pos": [
        6234,
        6278
      ]
    },
    {
      "content": "For a full list of filters,",
      "pos": [
        6279,
        6306
      ]
    },
    {
      "content": "see <bpt id=\"p1\">[</bpt>Filter Settings<ept id=\"p1\">][]</ept>.",
      "pos": [
        6307,
        6331
      ]
    },
    {
      "pos": [
        6337,
        6465
      ],
      "content": "The following shows how to insert a footer filter that results in\nHTML text appearing at the bottom of the email being sent.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "The following shows how to insert a footer filter that results in",
          "pos": [
            0,
            65
          ]
        },
        {
          "content": "HTML text appearing at the bottom of the email being sent.",
          "pos": [
            66,
            124
          ]
        }
      ]
    },
    {
      "pos": [
        6708,
        6876
      ],
      "content": "Another example of a filter is click tracking. Let’s say that your\nemail text contains a hyperlink, such as the following, and you want\nto track the click rate:",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Another example of a filter is click tracking. Let’s say that your",
          "pos": [
            0,
            66
          ],
          "nodes": [
            {
              "content": "Another example of a filter is click tracking.",
              "pos": [
                0,
                46
              ]
            },
            {
              "content": "Let’s say that your",
              "pos": [
                47,
                66
              ]
            }
          ]
        },
        {
          "content": "email text contains a hyperlink, such as the following, and you want",
          "pos": [
            67,
            135
          ]
        },
        {
          "content": "to track the click rate:",
          "pos": [
            136,
            160
          ]
        }
      ]
    },
    {
      "content": "To enable the click tracking, use the following code:",
      "pos": [
        7119,
        7172
      ]
    },
    {
      "content": "How to: Update email properties",
      "pos": [
        7337,
        7368
      ]
    },
    {
      "content": "Some email properties can be overwritten using <bpt id=\"p1\">*</bpt><bpt id=\"p2\">*</bpt>set<ept id=\"p2\">*</ept>Property<ept id=\"p1\">*</ept>** or",
      "pos": [
        7370,
        7437
      ]
    },
    {
      "content": "appended using <bpt id=\"p1\">*</bpt><bpt id=\"p2\">*</bpt>add<ept id=\"p2\">*</ept>Property<ept id=\"p1\">*</ept>**.",
      "pos": [
        7438,
        7471
      ]
    },
    {
      "pos": [
        7473,
        7538
      ],
      "content": "For example, to specify <bpt id=\"p1\">**</bpt>ReplyTo<ept id=\"p1\">**</ept> addresses, use the following:"
    },
    {
      "pos": [
        7721,
        7766
      ],
      "content": "To add a <bpt id=\"p1\">**</bpt>Cc<ept id=\"p1\">**</ept> recipient, use the following:"
    },
    {
      "content": "How to: Use additional SendGrid services",
      "pos": [
        7870,
        7910
      ]
    },
    {
      "content": "SendGrid offers web-based APIs that you can use to leverage additional",
      "pos": [
        7912,
        7982
      ]
    },
    {
      "content": "SendGrid functionality from your Azure application.",
      "pos": [
        7983,
        8034
      ]
    },
    {
      "content": "For full",
      "pos": [
        8035,
        8043
      ]
    },
    {
      "content": "details, see the <bpt id=\"p1\">[</bpt>SendGrid API documentation<ept id=\"p1\">][]</ept>.",
      "pos": [
        8044,
        8092
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        8097,
        8107
      ]
    },
    {
      "content": "Now that you’ve learned the basics of the SendGrid Email service, follow",
      "pos": [
        8109,
        8181
      ]
    },
    {
      "content": "these links to learn more.",
      "pos": [
        8182,
        8208
      ]
    },
    {
      "pos": [
        8212,
        8393
      ],
      "content": "Sample that demonstrates using SendGrid in an Azure deployment: <bpt id=\"p1\">[</bpt>How to send email using SendGrid from Java in an Azure deployment<ept id=\"p1\">](store-sendgrid-java-how-to-send-email-example.md)</ept>"
    },
    {
      "pos": [
        8396,
        8466
      ],
      "content": "SendGrid Java SDK: <bpt id=\"p1\">&lt;</bpt><ept id=\"p1\">https://sendgrid.com/docs/Code_Examples/java.html&gt;</ept>"
    },
    {
      "pos": [
        8469,
        8549
      ],
      "content": "SendGrid API documentation: <bpt id=\"p1\">&lt;</bpt><ept id=\"p1\">https://sendgrid.com/docs/API_Reference/index.html&gt;</ept>"
    },
    {
      "pos": [
        8552,
        8636
      ],
      "content": "SendGrid special offer for Azure customers: <bpt id=\"p1\">&lt;</bpt><ept id=\"p1\">https://sendgrid.com/windowsazure.html&gt;</ept>"
    },
    {
      "content": "test",
      "pos": [
        9406,
        9410
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"How to use the SendGrid email service (Java) | Microsoft Azure\" \n    description=\"Learn how send email with the SendGrid email service on Azure. Code samples written in Java.\" \n    services=\"\" \n    documentationCenter=\"java\" \n    authors=\"thinkingserious\" \n    manager=\"sendgrid\" \n    editor=\"mollybos\"/>\n\n<tags \n    ms.service=\"multiple\" \n    ms.workload=\"na\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"Java\" \n    ms.topic=\"article\" \n    ms.date=\"10/30/2014\" \n    ms.author=\"elmer.thomas@sendgrid.com; erika.berkland@sendgrid.com; vibhork\"/>\n# How to Send Email Using SendGrid from Java\n\nThis guide demonstrates how to perform common programming tasks with the\nSendGrid email service on Azure. The samples are written in\nJava. The scenarios covered include **constructing email**, **sending\nemail**, **adding attachments**, **using filters**, and **updating\nproperties**. For more information on SendGrid and sending email, see\nthe [Next steps](#next-steps) section.\n\n## What is the SendGrid Email Service?\n\nSendGrid is a [cloud-based email service] that provides reliable\n[transactional email delivery], scalability, and real-time analytics along with flexible APIs\nthat make custom integration easy. Common SendGrid usage scenarios\ninclude:\n\n-   Automatically sending receipts to customers\n-   Administering distribution lists for sending customers monthly\n    e-fliers and special offers\n-   Collecting real-time metrics for things like blocked e-mail, and\n    customer responsiveness\n-   Generating reports to help identify trends\n-   Forwarding customer inquiries\n- Email notifications from your application\n\nFor more information, see <http://sendgrid.com>.\n\n## Create a SendGrid account\n\n[AZURE.INCLUDE [sendgrid-sign-up](../includes/sendgrid-sign-up.md)]\n\n## How to: Use the javax.mail libraries\n\nObtain the javax.mail libraries, for example from\n<http://www.oracle.com/technetwork/java/javamail> and import them into\nyour code. At a high-level, the process for using the javax.mail library\nto send email using SMTP is to do the following:\n\n1.  Specify the SMTP values, including the SMTP server, which for\n    SendGrid is smtp.sendgrid.net.\n    \n```\n        import java.util.Properties;\n        import javax.activation.*;\n        import javax.mail.*;\n        import javax.mail.internet.*;\n\n        public class MyEmailer {\n           private static final String SMTP_HOST_NAME = \"smtp.sendgrid.net\";\n           private static final String SMTP_AUTH_USER = \"your_sendgrid_username\";\n           private static final String SMTP_AUTH_PWD = \"your_sendgrid_password\";\n        \n           public static void main(String[] args) throws Exception{\n              new MyEmailer().SendMail();\n           }\n        \n           public void SendMail() throws Exception\n           {\n              Properties properties = new Properties();\n              properties.put(\"mail.transport.protocol\", \"smtp\");\n              properties.put(\"mail.smtp.host\", SMTP_HOST_NAME);\n              properties.put(\"mail.smtp.port\", 587);\n              properties.put(\"mail.smtp.auth\", \"true\");\n              // …\n```\n\n2.  Extend the *javax.mail.Authenticator*\n    class, and in your implementation of the\n    *getPasswordAuthentication* method,\n    return your SendGrid user name and password.  \n\n        private class SMTPAuthenticator extends javax.mail.Authenticator {\n        public PasswordAuthentication getPasswordAuthentication() {\n           String username = SMTP_AUTH_USER;\n           String password = SMTP_AUTH_PWD;\n           return new PasswordAuthentication(username, password);\n        }\n\n3.  Create an authenticated email session through a\n    *javax.mail.Session* object.  \n\n        Authenticator auth = new SMTPAuthenticator();\n        Session mailSession = Session.getDefaultInstance(properties, auth);\n\n4.  Create your message and assign **To**, **From**, **Subject** and\n    content values. This is shown in the [How To: Create an Email](#bkmk_HowToCreateEmail) section.\n5.  Send the message through a\n    *javax.mail.Transport* object. This\n    is shown in the [How To: Send an Email][How to: Send an Email]\n    section.\n\n## How to: Create an email\n\nThe following shows how to specify values for an email.\n\n    MimeMessage message = new MimeMessage(mailSession);\n    Multipart multipart = new MimeMultipart(\"alternative\");\n    BodyPart part1 = new MimeBodyPart();\n    part1.setText(\"Hello, Your Contoso order has shipped. Thank you, John\");\n    BodyPart part2 = new MimeBodyPart();\n    part2.setContent(\n        \"<p>Hello,</p>\n        <p>Your Contoso order has <b>shipped</b>.</p>\n        <p>Thank you,<br>John</br></p>\",\n        \"text/html\");\n    multipart.addBodyPart(part1);\n    multipart.addBodyPart(part2);\n    message.setFrom(new InternetAddress(\"john@contoso.com\"));\n    message.addRecipient(Message.RecipientType.TO,\n       new InternetAddress(\"someone@example.com\"));\n    message.setSubject(\"Your recent order\");\n    message.setContent(multipart);\n\n## How to: Send an email\n\nThe following shows how to send an email.\n\n    Transport transport = mailSession.getTransport();\n    // Connect the transport object.\n    transport.connect();\n    // Send the message.\n    transport.sendMessage(message, message.getAllRecipients());\n    // Close the connection.\n    transport.close();\n\n## How to: Add an attachment\n\nThe following code shows you how to add an attachment.\n\n    // Local file name and path.\n    String attachmentName = \"myfile.zip\";\n    String attachmentPath = \"c:\\\\myfiles\\\\\"; \n    MimeBodyPart attachmentPart = new MimeBodyPart();\n    // Specify the local file to attach.\n    DataSource source = new FileDataSource(attachmentPath + attachmentName);\n    attachmentPart.setDataHandler(new DataHandler(source));\n    // This example uses the local file name as the attachment name.\n    // They could be different if you prefer.\n    attachmentPart.setFileName(attachmentName);\n    multipart.addBodyPart(attachmentPart);\n\n## How to: Use filters to enable footers, tracking, and analytics\n\nSendGrid provides additional email functionality through the use of\n*filters*. These are settings that can be added to an email message to\nenable specific functionality such as enabling click tracking, Google\nanalytics, subscription tracking, and so on. For a full list of filters,\nsee [Filter Settings][].\n\n-   The following shows how to insert a footer filter that results in\n    HTML text appearing at the bottom of the email being sent.\n\n        message.addHeader(\"X-SMTPAPI\", \n            \"{\\\"filters\\\": \n            {\\\"footer\\\": \n            {\\\"settings\\\": \n            {\\\"enable\\\":1,\\\"text/html\\\": \n            \\\"<html><b>Thank you</b> for your business.</html>\\\"}}}}\");\n\n-   Another example of a filter is click tracking. Let’s say that your\n    email text contains a hyperlink, such as the following, and you want\n    to track the click rate:\n\n        messagePart.setContent(\n            \"Hello,\n            <p>This is the body of the message. Visit \n            <a href='http://www.contoso.com'>http://www.contoso.com</a>.</p>\n            Thank you.\", \n            \"text/html\");\n\n-   To enable the click tracking, use the following code:\n\n        message.addHeader(\"X-SMTPAPI\", \n            \"{\\\"filters\\\": \n            {\\\"clicktrack\\\": \n            {\\\"settings\\\": \n            {\\\"enable\\\":1}}}}\");\n\n## How to: Update email properties\n\nSome email properties can be overwritten using **set*Property*** or\nappended using **add*Property***.\n\nFor example, to specify **ReplyTo** addresses, use the following:\n\n    InternetAddress addresses[] = \n        { new InternetAddress(\"john@contoso.com\"),\n          new InternetAddress(\"wendy@contoso.com\") };\n    \n    message.setReplyTo(addresses);\n\nTo add a **Cc** recipient, use the following:\n\n    message.addRecipient(Message.RecipientType.CC, new \n    InternetAddress(\"john@contoso.com\"));\n\n## How to: Use additional SendGrid services\n\nSendGrid offers web-based APIs that you can use to leverage additional\nSendGrid functionality from your Azure application. For full\ndetails, see the [SendGrid API documentation][].\n\n## Next steps\n\nNow that you’ve learned the basics of the SendGrid Email service, follow\nthese links to learn more.\n\n* Sample that demonstrates using SendGrid in an Azure deployment: [How to send email using SendGrid from Java in an Azure deployment](store-sendgrid-java-how-to-send-email-example.md)\n* SendGrid Java SDK: <https://sendgrid.com/docs/Code_Examples/java.html>\n* SendGrid API documentation: <https://sendgrid.com/docs/API_Reference/index.html>\n* SendGrid special offer for Azure customers: <https://sendgrid.com/windowsazure.html>\n\n  [http://sendgrid.com]: https://sendgrid.com\n  [http://sendgrid.com/pricing.html]: http://sendgrid.com/pricing.html\n  [http://www.sendgrid.com/azure.html]: https://www.sendgrid.com/windowsazure.html\n  [http://sendgrid.com/features]: https://sendgrid.com/features\n  [http://www.oracle.com/technetwork/java/javamail]: http://www.oracle.com/technetwork/java/javamail/index.html\n  [Filter Settings]: https://sendgrid.com/docs/API_Reference/Web_API/filter_settings.html\n  [SendGrid API documentation]: https://sendgrid.com/docs/API_Reference/index.html\n  [http://sendgrid.com/azure.html]: https://sendgrid.com/windowsazure.html\n  [cloud-based email service]: https://sendgrid.com/email-solutions\n  [transactional email delivery]: https://sendgrid.com/transactional-email\n\ntest\n"
}