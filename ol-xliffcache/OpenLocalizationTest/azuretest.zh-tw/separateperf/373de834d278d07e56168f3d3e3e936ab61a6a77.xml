{
  "nodes": [
    {
      "content": "Author Custom R Modules in Azure Machine Learning | Microsoft Azure",
      "pos": [
        28,
        95
      ]
    },
    {
      "content": "Quick start for authoring custom R modules in Azure Machine Learning.",
      "pos": [
        115,
        184
      ]
    },
    {
      "content": "Author custom R modules in Azure Machine Learning",
      "pos": [
        523,
        572
      ]
    },
    {
      "content": "This topic describes how to author and deploy a custom R module in Azure Machine Learning.",
      "pos": [
        574,
        664
      ]
    },
    {
      "content": "It explains what custom R modules are and what files are used to define them.",
      "pos": [
        665,
        742
      ]
    },
    {
      "content": "It illustrates how to construct the files that define a module and how to register the module for deployment in a Machine Learning workspace.",
      "pos": [
        743,
        884
      ]
    },
    {
      "content": "The elements and attributes used in the definition of the custom module are then described in more detail.",
      "pos": [
        885,
        991
      ]
    },
    {
      "content": "How to use auxiliary functionality and files and multiple outputs is also discussed.",
      "pos": [
        992,
        1076
      ]
    },
    {
      "content": "What is a custom R module?",
      "pos": [
        1176,
        1202
      ]
    },
    {
      "content": "A <bpt id=\"p1\">**</bpt>custom module<ept id=\"p1\">**</ept> is a user-defined module that can be uploaded to your workspace and executed as part of an Azure Machine Learning experiment.",
      "pos": [
        1203,
        1348
      ]
    },
    {
      "content": "A <bpt id=\"p1\">**</bpt>custom R module<ept id=\"p1\">**</ept> is a custom module that executes a user-defined R function.",
      "pos": [
        1349,
        1430
      ]
    },
    {
      "content": "R is a programming language for statistical computing and graphics that is widely used by statisticians and data scientists for implementing algorithms.",
      "pos": [
        1431,
        1583
      ]
    },
    {
      "content": "Currently, R is the only language supported in custom modules, but support for additional languages will be added in future releases.",
      "pos": [
        1584,
        1717
      ]
    },
    {
      "content": "Custom modules have <bpt id=\"p1\">**</bpt>first-class status<ept id=\"p1\">**</ept> in Azure Machine Learning in the sense that they can used just like any other module.",
      "pos": [
        1719,
        1847
      ]
    },
    {
      "content": "They can be executed with other modules, included in published experiments or visualizations.",
      "pos": [
        1848,
        1941
      ]
    },
    {
      "content": "Users have control over the algorithm implemented by the module, the input and output ports to be used, the modeling parameters, and other various runtime behaviors.",
      "pos": [
        1942,
        2107
      ]
    },
    {
      "content": "A custom module is only available in the workspace in which it was created and cannot be published to community experiments.",
      "pos": [
        2108,
        2232
      ]
    },
    {
      "content": "Files in a custom R module",
      "pos": [
        2237,
        2263
      ]
    },
    {
      "content": "A custom R module is defined by a .zip file that contains, at a minimum, two files:",
      "pos": [
        2264,
        2347
      ]
    },
    {
      "pos": [
        2351,
        2421
      ],
      "content": "A <bpt id=\"p1\">**</bpt>source file<ept id=\"p1\">**</ept> that implements the R function exposed by the module"
    },
    {
      "pos": [
        2424,
        2493
      ],
      "content": "An <bpt id=\"p1\">**</bpt>XML definition file<ept id=\"p1\">**</ept> that describes the custom module interface"
    },
    {
      "content": "Additional auxiliary files can also be included in the .zip file that provide functionality that can be accessed from the custom module.",
      "pos": [
        2495,
        2631
      ]
    },
    {
      "content": "This option is discussed below.",
      "pos": [
        2632,
        2663
      ]
    },
    {
      "content": "Quick start example: define, package, and register a custom R module",
      "pos": [
        2668,
        2736
      ]
    },
    {
      "content": "This example illustrates how to construct the files required by a custom R module, package them into a zip file, and then register the module in your Machine Learning workspace.",
      "pos": [
        2737,
        2914
      ]
    },
    {
      "content": "The example zip package and sample files can be downloaded from <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=524916&amp;clcid=0x409)</ept>.",
      "pos": [
        2915,
        3045
      ]
    },
    {
      "content": "Consider the example of a <bpt id=\"p1\">**</bpt>Custom Add Rows<ept id=\"p1\">**</ept> module that modifies the standard implementation of the Add Rows module used to concatenate rows (observations) from two datasets (data frames).",
      "pos": [
        3047,
        3237
      ]
    },
    {
      "content": "The standard Add Rows module appends the rows of the second input dataset to the end of the first input dataset using the rbind algorithm.",
      "pos": [
        3238,
        3376
      ]
    },
    {
      "content": "The customized <ph id=\"ph1\">`CustomAddRows`</ph> function similarly accepts two datasets, but also accepts an additional Boolean swap parameter as an input.",
      "pos": [
        3377,
        3515
      ]
    },
    {
      "content": "If the swap parameter is <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, it returns the same data set as the standard implementation.",
      "pos": [
        3516,
        3612
      ]
    },
    {
      "content": "But if the swap parameter is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, it appends rows of first input dataset to the end of the second dataset instead.",
      "pos": [
        3613,
        3732
      ]
    },
    {
      "content": "The file that implements the R <ph id=\"ph1\">`CustomAddRows`</ph> function exposed by the <bpt id=\"p1\">**</bpt>Custom Add Rows<ept id=\"p1\">**</ept> module contains the following R code.",
      "pos": [
        3733,
        3861
      ]
    },
    {
      "pos": [
        4108,
        4293
      ],
      "content": "To expose this <ph id=\"ph1\">`CustomAddRows`</ph> function as an Azure Machine Learning module, an XML definition file must be created to specify how the <bpt id=\"p1\">**</bpt>Custom Add Rows<ept id=\"p1\">**</ept> module should look and behave."
    },
    {
      "content": "Note that the value of the <bpt id=\"p1\">**</bpt>id<ept id=\"p1\">**</ept> attributes of the <bpt id=\"p2\">**</bpt>Input<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>Arg<ept id=\"p3\">**</ept> elements in the XML file must match the function parameter names of the R code exactly (<bpt id=\"p4\">*</bpt>dataset1<ept id=\"p4\">*</ept>, <bpt id=\"p5\">*</bpt>dataset2<ept id=\"p5\">*</ept>, and <bpt id=\"p6\">*</bpt>swap<ept id=\"p6\">*</ept> in the example).",
      "pos": [
        5733,
        5946
      ]
    },
    {
      "content": "Similarly, the value of the <bpt id=\"p1\">**</bpt>entryPoint<ept id=\"p1\">**</ept> attribute of the <bpt id=\"p2\">**</bpt>Language<ept id=\"p2\">**</ept> element must match the name of the function in the R script exactly (<bpt id=\"p3\">*</bpt>CustomAddRows<ept id=\"p3\">*</ept> in the example).",
      "pos": [
        5947,
        6121
      ]
    },
    {
      "content": "In contrast, the <bpt id=\"p1\">**</bpt>id<ept id=\"p1\">**</ept> attribute for the <bpt id=\"p2\">**</bpt>Output<ept id=\"p2\">**</ept> elements do not correspond to any variables in the R script.",
      "pos": [
        6122,
        6235
      ]
    },
    {
      "content": "When more than one output is required, simply return a list from the R function with results placed in the same order as outputs are declared in the XML file.",
      "pos": [
        6236,
        6394
      ]
    },
    {
      "pos": [
        6396,
        6521
      ],
      "content": "Save these two files as <bpt id=\"p1\">*</bpt>CustomAddRows.R<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>CustomAddRows.xml<ept id=\"p2\">*</ept> and then zip them together into a <bpt id=\"p3\">*</bpt>CustomAddRows.zip<ept id=\"p3\">*</ept> file."
    },
    {
      "pos": [
        6523,
        6753
      ],
      "content": "To register them in your Machine Learning workspace, go to your  workspace in the Machine Learning Studio, click the <bpt id=\"p1\">**</bpt>+NEW<ept id=\"p1\">**</ept> button on the bottom and choose <bpt id=\"p2\">**</bpt>MODULE -&gt; FROM ZIP PACKAGE<ept id=\"p2\">**</ept> to upload the new Custom Add Rows module."
    },
    {
      "pos": [
        6792,
        6888
      ],
      "content": "The <bpt id=\"p1\">**</bpt>Custom Add Rows<ept id=\"p1\">**</ept> module is now ready to be accessed by your Machine Learning experiments."
    },
    {
      "content": "Elements in the XML definition file",
      "pos": [
        6893,
        6928
      ]
    },
    {
      "content": "Module elements",
      "pos": [
        6934,
        6949
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Module<ept id=\"p1\">**</ept> element is used to define a custom module in the XML file.",
      "pos": [
        6950,
        7023
      ]
    },
    {
      "content": "Multiple modules can be defined in one XML file using multiple <bpt id=\"p1\">**</bpt>module<ept id=\"p1\">**</ept> elements.",
      "pos": [
        7024,
        7107
      ]
    },
    {
      "content": "Each module in your workspace must have a unique name.",
      "pos": [
        7108,
        7162
      ]
    },
    {
      "content": "Register a custom module with the same name as an existing custom module and it will replace the existing module with the new one.",
      "pos": [
        7163,
        7293
      ]
    },
    {
      "content": "Custom modules can, however, be registered with the same name as an existing Azure Machine Learning module and it will appear in the Custom category of the module palette.",
      "pos": [
        7294,
        7465
      ]
    },
    {
      "pos": [
        7647,
        7909
      ],
      "content": "Within the <bpt id=\"p1\">**</bpt>Module<ept id=\"p1\">**</ept> element, you can specify an optional <bpt id=\"p2\">**</bpt>Owner<ept id=\"p2\">**</ept> element that is embedded into the module as well as a <bpt id=\"p3\">**</bpt>Description<ept id=\"p3\">**</ept> element which is text displayed in quick help for the module and when you hover over the module in the Machine Learning UI."
    },
    {
      "pos": [
        7911,
        7966
      ],
      "content": "<bpt id=\"p1\">**</bpt>Rules for characters limits in the Module elements<ept id=\"p1\">**</ept>:"
    },
    {
      "pos": [
        7970,
        8072
      ],
      "content": "The value of the <bpt id=\"p1\">**</bpt>name<ept id=\"p1\">**</ept> attribute in the <bpt id=\"p2\">**</bpt>Module<ept id=\"p2\">**</ept> element must not exceed 64 characters in length."
    },
    {
      "pos": [
        8076,
        8160
      ],
      "content": "The content of the <bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept> element must not exceed 128 characters in length."
    },
    {
      "pos": [
        8163,
        8240
      ],
      "content": "The content of the <bpt id=\"p1\">**</bpt>Owner<ept id=\"p1\">**</ept> element must not exceed 32 characters in length."
    },
    {
      "content": "** Indicating whether a module's results are deterministic or nondeterministic",
      "pos": [
        8242,
        8320
      ]
    },
    {
      "content": "By default, all modules are considered to be deterministic.",
      "pos": [
        8322,
        8381
      ]
    },
    {
      "content": "That is, given an  unchanging set of parameters, the module should return the same results each time it is run.",
      "pos": [
        8382,
        8493
      ]
    },
    {
      "content": "Given this behavior, Azure Machine Learning Studio does not re-run modules marked as deterministic unless a parameter or the input data has changed.",
      "pos": [
        8494,
        8642
      ]
    },
    {
      "content": "Cached results are returned resulting in faster experiment execution.",
      "pos": [
        8643,
        8712
      ]
    },
    {
      "content": "However, if your module uses a function that returns different results each time it is run – for example, RAND or a function that returns the current date or time – you can specify the module as being non-deterministic by setting the optional <bpt id=\"p1\">**</bpt>isDeterministic<ept id=\"p1\">**</ept> attribute to <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.",
      "pos": [
        8714,
        9000
      ]
    },
    {
      "content": "The module will be rerun each time the experiment is run, even if the module input and parameters have not changed.",
      "pos": [
        9001,
        9116
      ]
    },
    {
      "content": "Language Definition",
      "pos": [
        9123,
        9142
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Language<ept id=\"p1\">**</ept> element in your XML definition file is used to specify the custom module language.",
      "pos": [
        9143,
        9242
      ]
    },
    {
      "content": "Currently, R is the only supported language.",
      "pos": [
        9243,
        9287
      ]
    },
    {
      "content": "The value of the <bpt id=\"p1\">**</bpt>sourceFile<ept id=\"p1\">**</ept> attribute must be the name of the R file that contains the function to call when the module is run.",
      "pos": [
        9288,
        9419
      ]
    },
    {
      "content": "This file must be part of the zip package.",
      "pos": [
        9420,
        9462
      ]
    },
    {
      "content": "The value of the <bpt id=\"p1\">**</bpt>entryPoint<ept id=\"p1\">**</ept> attribute is the name of the function being called and must match a valid function defined with in the source file.",
      "pos": [
        9463,
        9610
      ]
    },
    {
      "content": "Ports",
      "pos": [
        9700,
        9705
      ]
    },
    {
      "content": "The input and output ports for a custom module are specified in child elements of the <bpt id=\"p1\">**</bpt>Ports<ept id=\"p1\">**</ept> section of the XML definition file.",
      "pos": [
        9706,
        9837
      ]
    },
    {
      "content": "The order of these elements determines the layout experienced (UX) by users.",
      "pos": [
        9838,
        9914
      ]
    },
    {
      "content": "The first child <bpt id=\"p1\">**</bpt>input<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>output<ept id=\"p2\">**</ept> listed in the <bpt id=\"p3\">**</bpt>Ports<ept id=\"p3\">**</ept> element  of the XML file will be the left-most input port in the Machine Learning UX.",
      "pos": [
        9915,
        10064
      ]
    },
    {
      "content": "Each input and output port may have an optional <bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept> child element that specifies the text shown when a user hovers the mouse cursor over the port in the Machine Learning UI.",
      "pos": [
        10065,
        10250
      ]
    },
    {
      "pos": [
        10252,
        10268
      ],
      "content": "<bpt id=\"p1\">**</bpt>Ports Rules<ept id=\"p1\">**</ept>:"
    },
    {
      "pos": [
        10272,
        10331
      ],
      "content": "Maximum number of <bpt id=\"p1\">**</bpt>input and output ports<ept id=\"p1\">**</ept> is 8 for each."
    },
    {
      "content": "Input elements",
      "pos": [
        10337,
        10351
      ]
    },
    {
      "content": "Input ports allow users to pass data to your R function and workspace.",
      "pos": [
        10352,
        10422
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>data types<ept id=\"p1\">**</ept> that are supported for input ports are as follows:",
      "pos": [
        10423,
        10492
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>DataTable:<ept id=\"p1\">**</ept> This type is passed to your R function as a data.frame.",
      "pos": [
        10495,
        10565
      ]
    },
    {
      "content": "In fact, any types (for example, CSV files or ARFF files) that are supported  by Machine Learning and that are compatible with <bpt id=\"p1\">**</bpt>DataTable<ept id=\"p1\">**</ept> are converted to a data.frame automatically.",
      "pos": [
        10566,
        10751
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>id<ept id=\"p1\">**</ept> attribute associated with each <bpt id=\"p2\">**</bpt>DataTable<ept id=\"p2\">**</ept> input port must have a unique value and this value must match its corresponding named parameter in your R function.",
      "pos": [
        10908,
        11079
      ]
    },
    {
      "content": "Optional <bpt id=\"p1\">**</bpt>DataTable<ept id=\"p1\">**</ept> ports that are not passed as input in an experiment will have the value <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> passed to the R function and optional zip ports will be ignored if the input is not connected.",
      "pos": [
        11080,
        11278
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>isOptional<ept id=\"p1\">**</ept> attribute is optional for both the <bpt id=\"p2\">**</bpt>DataTable<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>Zip<ept id=\"p3\">**</ept> types and is <bpt id=\"p4\">*</bpt>false<ept id=\"p4\">*</ept> by default.",
      "pos": [
        11279,
        11391
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Zip:<ept id=\"p1\">**</ept> Custom modules can accept a zip file as input.",
      "pos": [
        11400,
        11455
      ]
    },
    {
      "content": "This input is unpacked into the R working directory of your function",
      "pos": [
        11456,
        11524
      ]
    },
    {
      "content": "For custom R modules, the id for a Zip port does not have to match any parameters of the R function since the zip file is automatically extracted to the R working directory.",
      "pos": [
        11718,
        11891
      ]
    },
    {
      "content": "Input Rules:",
      "pos": [
        11895,
        11907
      ]
    },
    {
      "pos": [
        11913,
        12004
      ],
      "content": "The value of the <bpt id=\"p1\">**</bpt>id<ept id=\"p1\">**</ept> attribute of the <bpt id=\"p2\">**</bpt>Input<ept id=\"p2\">**</ept> element must be a valid R variable name."
    },
    {
      "pos": [
        12007,
        12104
      ],
      "content": "The value of the <bpt id=\"p1\">**</bpt>id<ept id=\"p1\">**</ept> attribute of the <bpt id=\"p2\">**</bpt>Input<ept id=\"p2\">**</ept> element must not be longer than 64 characters."
    },
    {
      "pos": [
        12107,
        12207
      ],
      "content": "The value of the <bpt id=\"p1\">**</bpt>name<ept id=\"p1\">**</ept> attribute of the <bpt id=\"p2\">**</bpt>Input<ept id=\"p2\">**</ept> element  must not be longer than 64 characters."
    },
    {
      "pos": [
        12210,
        12291
      ],
      "content": "The content of the <bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept> element must not be longer than 128 characters"
    },
    {
      "pos": [
        12294,
        12384
      ],
      "content": "The value of the <bpt id=\"p1\">**</bpt>type<ept id=\"p1\">**</ept> attribute of the <bpt id=\"p2\">**</bpt>Input<ept id=\"p2\">**</ept> element must be <bpt id=\"p3\">*</bpt>Zip<ept id=\"p3\">*</ept> or <bpt id=\"p4\">*</bpt>DataTable<ept id=\"p4\">*</ept>."
    },
    {
      "pos": [
        12387,
        12571
      ],
      "content": "The value of the <bpt id=\"p1\">**</bpt>isOptional<ept id=\"p1\">**</ept> attribute of the <bpt id=\"p2\">**</bpt>Input<ept id=\"p2\">**</ept> element is not required (and is <bpt id=\"p3\">*</bpt>false<ept id=\"p3\">*</ept> by default when not specified); but if it is specified, it must be <bpt id=\"p4\">*</bpt>true<ept id=\"p4\">*</ept> or <bpt id=\"p5\">*</bpt>false<ept id=\"p5\">*</ept>."
    },
    {
      "content": "Output elements",
      "pos": [
        12577,
        12592
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Standard output ports:<ept id=\"p1\">**</ept>",
      "pos": [
        12594,
        12620
      ]
    },
    {
      "content": "Output ports are mapped to the return values from your R function, which can then be used by subsequent modules.",
      "pos": [
        12621,
        12733
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>DataTable<ept id=\"p1\">*</ept> is the only standard output port type supported currently.",
      "pos": [
        12734,
        12804
      ]
    },
    {
      "content": "(Support for <bpt id=\"p1\">*</bpt>Learners<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>Transforms<ept id=\"p2\">*</ept> is forthcoming.) A <bpt id=\"p3\">*</bpt>DataTable<ept id=\"p3\">*</ept> output is defined as:",
      "pos": [
        12805,
        12898
      ]
    },
    {
      "content": "For outputs in custom R modules, the value of the <bpt id=\"p1\">**</bpt>id<ept id=\"p1\">**</ept> attribute does not have to correspond with anything in the R script, but it must be unique.",
      "pos": [
        13025,
        13173
      ]
    },
    {
      "content": "For a single module output, the return value from the R function must be a <bpt id=\"p1\">*</bpt>data.frame<ept id=\"p1\">*</ept>.",
      "pos": [
        13174,
        13262
      ]
    },
    {
      "content": "In order to output more than one object of a supported data type, the appropriate output ports need to be specified in the XML definition file and the objects need to be returned as a list.",
      "pos": [
        13263,
        13452
      ]
    },
    {
      "content": "The output objects will be assigned to output ports from left to right, reflecting the order in which the objects are placed in the returned list.",
      "pos": [
        13453,
        13599
      ]
    },
    {
      "content": "For example, if you want to output dataset, Dataset1, and Dataset2 to output ports dataset, dataset1, and dataset2 from left to right, respectively, then define the output ports in the ‘CustomAddRows.xml’ file as follows:",
      "pos": [
        13602,
        13823
      ]
    },
    {
      "pos": [
        13825,
        14148
      ],
      "content": "For example, if you want to modify the <bpt id=\"p1\">**</bpt>Custom Add Rows<ept id=\"p1\">**</ept> module to output the original two datasets, <bpt id=\"p2\">*</bpt>dataset1<ept id=\"p2\">*</ept>, and <bpt id=\"p3\">*</bpt>dataset2<ept id=\"p3\">*</ept>, in addition to the new joined dataset <bpt id=\"p4\">*</bpt>dataset<ept id=\"p4\">*</ept> (in an order, from left to right, as: <bpt id=\"p5\">*</bpt>dataset<ept id=\"p5\">*</ept>, <bpt id=\"p6\">*</bpt>dataset1<ept id=\"p6\">*</ept>, <bpt id=\"p7\">*</bpt>dataset2<ept id=\"p7\">*</ept>), then define the output ports in the CustomAddRows.xml file as follows:"
    },
    {
      "content": "And return the list of objects in a list in the correct order in ‘CustomAddRows.R’:",
      "pos": [
        14894,
        14977
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Visualization output:<ept id=\"p1\">**</ept>",
      "pos": [
        15230,
        15255
      ]
    },
    {
      "content": "You can also specify an output port of type <bpt id=\"p1\">*</bpt>Visualization<ept id=\"p1\">*</ept> which displays the output from the R graphics device and console output.",
      "pos": [
        15256,
        15388
      ]
    },
    {
      "content": "This port is not part of the R function output and does not interfere with the order of the the other output port types.",
      "pos": [
        15389,
        15509
      ]
    },
    {
      "content": "To add a visualization port to the custom modules, add an <bpt id=\"p1\">**</bpt>Output<ept id=\"p1\">**</ept> element with a value of <bpt id=\"p2\">*</bpt>Visualization<ept id=\"p2\">*</ept> for its <bpt id=\"p3\">**</bpt>type<ept id=\"p3\">**</ept> attribute:",
      "pos": [
        15510,
        15646
      ]
    },
    {
      "content": "Output Rules:",
      "pos": [
        15814,
        15827
      ]
    },
    {
      "pos": [
        15833,
        15925
      ],
      "content": "The value of the <bpt id=\"p1\">**</bpt>id<ept id=\"p1\">**</ept> attribute of the <bpt id=\"p2\">**</bpt>Output<ept id=\"p2\">**</ept> element must be a valid R variable name."
    },
    {
      "pos": [
        15928,
        16026
      ],
      "content": "The value of the <bpt id=\"p1\">**</bpt>id<ept id=\"p1\">**</ept> attribute of the <bpt id=\"p2\">**</bpt>Output<ept id=\"p2\">**</ept> element must not be longer than 32 characters."
    },
    {
      "pos": [
        16029,
        16130
      ],
      "content": "The value of the <bpt id=\"p1\">**</bpt>name<ept id=\"p1\">**</ept> attribute of the <bpt id=\"p2\">**</bpt>Output<ept id=\"p2\">**</ept> element  must not be longer than 64 characters."
    },
    {
      "pos": [
        16133,
        16219
      ],
      "content": "The value of the <bpt id=\"p1\">**</bpt>type<ept id=\"p1\">**</ept> attribute of the <bpt id=\"p2\">**</bpt>Output<ept id=\"p2\">**</ept> element must be <bpt id=\"p3\">*</bpt>Visualization<ept id=\"p3\">*</ept>."
    },
    {
      "content": "Arguments",
      "pos": [
        16225,
        16234
      ]
    },
    {
      "content": "Additional data can be passed to the R function via module parameters which are defined in the <bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept> element.",
      "pos": [
        16235,
        16352
      ]
    },
    {
      "content": "These parameters appear in the right most properties pane of the Machine Learning UI when the module is selected.",
      "pos": [
        16353,
        16466
      ]
    },
    {
      "content": "Arguments can be any of the supported types or you can create a custom enumeration when needed.",
      "pos": [
        16467,
        16562
      ]
    },
    {
      "content": "Similar to the <bpt id=\"p1\">**</bpt>Ports<ept id=\"p1\">**</ept> elements, <bpt id=\"p2\">**</bpt>Arguments<ept id=\"p2\">**</ept> elements can have an optional <bpt id=\"p3\">**</bpt>Description<ept id=\"p3\">**</ept> element that specifies the text that appears when you hover the mouse over the parameter name.",
      "pos": [
        16563,
        16752
      ]
    },
    {
      "content": "Optional properties for a module, such as defaultValue, minValue and maxValue can be added to any argument as attributes to a <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> element.",
      "pos": [
        16753,
        16902
      ]
    },
    {
      "content": "Valid properties for the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> element depend on the argument type and are describe with the supported argument types below.",
      "pos": [
        16903,
        17036
      ]
    },
    {
      "content": "As with inputs and outputs, it is critical that each of the parameters have unique id values associated with them.",
      "pos": [
        17037,
        17151
      ]
    },
    {
      "content": "In addition, the id values must correspond to the named parameters in your R function.",
      "pos": [
        17152,
        17238
      ]
    },
    {
      "content": "In our quick start example the associated id/parameter was <bpt id=\"p1\">*</bpt>swap<ept id=\"p1\">*</ept>.",
      "pos": [
        17239,
        17305
      ]
    },
    {
      "content": "Arg element",
      "pos": [
        17311,
        17322
      ]
    },
    {
      "content": "A module parameter is defined using the <bpt id=\"p1\">**</bpt>Arg<ept id=\"p1\">**</ept> child element of the <bpt id=\"p2\">**</bpt>Arguments<ept id=\"p2\">**</ept> section of the XML definition file.",
      "pos": [
        17323,
        17441
      ]
    },
    {
      "content": "As with the child elements in the <bpt id=\"p1\">**</bpt>Ports<ept id=\"p1\">**</ept> section, the ordering of parameters in the <bpt id=\"p2\">**</bpt>Arguments<ept id=\"p2\">**</ept> section defines the layout encountered in the UX.",
      "pos": [
        17442,
        17592
      ]
    },
    {
      "content": "The parameters appear from top down in the UI in the same order in which they are defined in the XML file.",
      "pos": [
        17593,
        17699
      ]
    },
    {
      "content": "The types supported by Machine Learning for parameters are listed below.",
      "pos": [
        17700,
        17772
      ]
    },
    {
      "pos": [
        17775,
        17820
      ],
      "content": "<bpt id=\"p1\">**</bpt>int<ept id=\"p1\">**</ept> – an Integer (32-bit) type parameter."
    },
    {
      "pos": [
        18012,
        18067
      ],
      "content": "<bpt id=\"p1\">*</bpt>Optional Properties<ept id=\"p1\">*</ept>: <bpt id=\"p2\">**</bpt>min<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>max<ept id=\"p3\">**</ept> and <bpt id=\"p4\">**</bpt>default<ept id=\"p4\">**</ept>"
    },
    {
      "pos": [
        18069,
        18106
      ],
      "content": "<bpt id=\"p1\">**</bpt>double<ept id=\"p1\">**</ept> – a double type parameter."
    },
    {
      "pos": [
        18310,
        18365
      ],
      "content": "<bpt id=\"p1\">*</bpt>Optional Properties<ept id=\"p1\">*</ept>: <bpt id=\"p2\">**</bpt>min<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>max<ept id=\"p3\">**</ept> and <bpt id=\"p4\">**</bpt>default<ept id=\"p4\">**</ept>"
    },
    {
      "pos": [
        18367,
        18439
      ],
      "content": "<bpt id=\"p1\">**</bpt>bool<ept id=\"p1\">**</ept> – a Boolean parameter that is represented by a check-box in UX."
    },
    {
      "pos": [
        18623,
        18676
      ],
      "content": "<bpt id=\"p1\">*</bpt>Optional Properties<ept id=\"p1\">*</ept>: <bpt id=\"p2\">**</bpt>default<ept id=\"p2\">**</ept> - false if not set"
    },
    {
      "pos": [
        18678,
        18707
      ],
      "content": "<bpt id=\"p1\">**</bpt>string<ept id=\"p1\">**</ept>: a standard string"
    },
    {
      "pos": [
        18930,
        19117
      ],
      "content": "<bpt id=\"p1\">*</bpt>Optional Properties<ept id=\"p1\">*</ept>: <bpt id=\"p2\">**</bpt>default<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>isOptional<ept id=\"p3\">**</ept> - An optional string without a default value will be passed as null to the R function if a value is not otherwise provided by a user."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>ColumnPicker<ept id=\"p1\">**</ept>: a column selection parameter.",
      "pos": [
        19119,
        19166
      ]
    },
    {
      "content": "This type renders in the UX as a column chooser.",
      "pos": [
        19167,
        19215
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Property<ept id=\"p1\">**</ept> element is used here to specify the id of the port from which columns will be selected, where the target port type must be <bpt id=\"p2\">*</bpt>DataTable<ept id=\"p2\">*</ept>.",
      "pos": [
        19216,
        19368
      ]
    },
    {
      "content": "The result of the column selection will be passed to the R function as a list of strings containing the selected column names.",
      "pos": [
        19369,
        19495
      ]
    },
    {
      "pos": [
        19720,
        19814
      ],
      "content": "<bpt id=\"p1\">*</bpt>Required Properties<ept id=\"p1\">*</ept>: <bpt id=\"p2\">**</bpt>portId<ept id=\"p2\">**</ept> -  matches the id of an Input element with type <bpt id=\"p3\">*</bpt>DataTable<ept id=\"p3\">*</ept>."
    },
    {
      "pos": [
        19817,
        19839
      ],
      "content": "<bpt id=\"p1\">*</bpt>Optional Properties<ept id=\"p1\">*</ept>:"
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>allowedTypes<ept id=\"p1\">**</ept> - Filter the column types the user can pick from.",
      "pos": [
        19846,
        19912
      ]
    },
    {
      "content": "Valid values include:",
      "pos": [
        19913,
        19934
      ]
    },
    {
      "content": "Numeric",
      "pos": [
        19948,
        19955
      ]
    },
    {
      "content": "Boolean",
      "pos": [
        19968,
        19975
      ]
    },
    {
      "content": "Categorical",
      "pos": [
        19988,
        19999
      ]
    },
    {
      "content": "String",
      "pos": [
        20012,
        20018
      ]
    },
    {
      "content": "Label",
      "pos": [
        20031,
        20036
      ]
    },
    {
      "content": "Feature",
      "pos": [
        20049,
        20056
      ]
    },
    {
      "content": "Score",
      "pos": [
        20069,
        20074
      ]
    },
    {
      "content": "All",
      "pos": [
        20087,
        20090
      ]
    },
    {
      "pos": [
        20098,
        20167
      ],
      "content": "<bpt id=\"p1\">**</bpt>default<ept id=\"p1\">**</ept> - Valid default selections for the column picker include:"
    },
    {
      "content": "None",
      "pos": [
        20179,
        20183
      ]
    },
    {
      "content": "NumericFeature",
      "pos": [
        20194,
        20208
      ]
    },
    {
      "content": "NumericLabel",
      "pos": [
        20219,
        20231
      ]
    },
    {
      "content": "NumericScore",
      "pos": [
        20242,
        20254
      ]
    },
    {
      "content": "NumericAll",
      "pos": [
        20265,
        20275
      ]
    },
    {
      "content": "BooleanFeature",
      "pos": [
        20286,
        20300
      ]
    },
    {
      "content": "BooleanLabel",
      "pos": [
        20311,
        20323
      ]
    },
    {
      "content": "BooleanScore",
      "pos": [
        20334,
        20346
      ]
    },
    {
      "content": "BooleanAll",
      "pos": [
        20357,
        20367
      ]
    },
    {
      "content": "CategoricalFeature",
      "pos": [
        20378,
        20396
      ]
    },
    {
      "content": "CategoricalLabel",
      "pos": [
        20407,
        20423
      ]
    },
    {
      "content": "CategoricalScore",
      "pos": [
        20434,
        20450
      ]
    },
    {
      "content": "CategoricalAll",
      "pos": [
        20461,
        20475
      ]
    },
    {
      "content": "StringFeature",
      "pos": [
        20486,
        20499
      ]
    },
    {
      "content": "StringLabel",
      "pos": [
        20510,
        20521
      ]
    },
    {
      "content": "StringScore",
      "pos": [
        20532,
        20543
      ]
    },
    {
      "content": "StringAll",
      "pos": [
        20554,
        20563
      ]
    },
    {
      "content": "AllLabel",
      "pos": [
        20574,
        20582
      ]
    },
    {
      "content": "AllFeature",
      "pos": [
        20593,
        20603
      ]
    },
    {
      "content": "AllScore",
      "pos": [
        20614,
        20622
      ]
    },
    {
      "content": "All",
      "pos": [
        20633,
        20636
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>DropDown<ept id=\"p1\">**</ept>: a user specified enumerated (dropdown) list.",
      "pos": [
        20695,
        20753
      ]
    },
    {
      "content": "The dropdown items are specified within the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> element using an <bpt id=\"p2\">**</bpt>Item<ept id=\"p2\">**</ept> element.",
      "pos": [
        20754,
        20847
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>id<ept id=\"p1\">**</ept> for each <bpt id=\"p2\">**</bpt>Item<ept id=\"p2\">**</ept> must be unique and a valid R variable and the name of the item is both the text that appears to users and the value that is passed to the R function.",
      "pos": [
        20848,
        21026
      ]
    },
    {
      "pos": [
        21328,
        21350
      ],
      "content": "<bpt id=\"p1\">*</bpt>Optional Properties<ept id=\"p1\">*</ept>:"
    },
    {
      "pos": [
        21357,
        21473
      ],
      "content": "<bpt id=\"p1\">**</bpt>default<ept id=\"p1\">**</ept> - The value for the default property must correspond with an id value from one of the <bpt id=\"p2\">**</bpt>Item<ept id=\"p2\">**</ept> elements."
    },
    {
      "content": "Auxiliary Files",
      "pos": [
        21480,
        21495
      ]
    },
    {
      "content": "Any file that is placed in your custom module ZIP file will be available for use during execution time.",
      "pos": [
        21497,
        21600
      ]
    },
    {
      "content": "If there is a directory structure present it will be preserved.",
      "pos": [
        21601,
        21664
      ]
    },
    {
      "content": "This means that file sourcing will work the same locally and in Azure Machine Learning execution.",
      "pos": [
        21665,
        21762
      ]
    },
    {
      "content": "Please notice that all files are extracted to ‘src’ directory so all paths should have ‘src/’ prefix.",
      "pos": [
        21763,
        21864
      ]
    },
    {
      "content": "For example, say you want to remove any rows with NAs from the  dataset, and also remove any duplicate rows, before outputting it into CustomAddRows, and you’ve already written an R function that does that in a file RemoveDupNARows.R:",
      "pos": [
        21866,
        22100
      ]
    },
    {
      "content": "You can source the auxiliary file RemoveDupNARows.R in the CustomAddRows function:",
      "pos": [
        22350,
        22432
      ]
    },
    {
      "content": "Next, upload a zip file containing ‘CustomAddRows.R’, ‘CustomAddRows.xml’, and ‘RemoveDupNARows.R’ as a custom R module.",
      "pos": [
        22785,
        22905
      ]
    },
    {
      "content": "Execution Environment",
      "pos": [
        22910,
        22931
      ]
    },
    {
      "content": "The execution environment for the R script uses the same version of R as the <bpt id=\"p1\">**</bpt>Execute R Script<ept id=\"p1\">**</ept> module, and can use the same default packages.",
      "pos": [
        22935,
        23079
      ]
    },
    {
      "content": "You can add additional R packages to your custom module by including them in the custom module zip package and loading them in your R script as you would in your own R environment.",
      "pos": [
        23080,
        23260
      ]
    },
    {
      "pos": [
        23263,
        23316
      ],
      "content": "<bpt id=\"p1\">**</bpt>Limitations of the execution environment<ept id=\"p1\">**</ept> include:"
    },
    {
      "content": "Non-persistent file system: Files written when the custom module is run will not persist across multiple runs of the same module.",
      "pos": [
        23320,
        23449
      ]
    },
    {
      "content": "No network access",
      "pos": [
        23452,
        23469
      ]
    },
    {
      "content": "test",
      "pos": [
        23476,
        23480
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Author Custom R Modules in Azure Machine Learning | Microsoft Azure\" \n    description=\"Quick start for authoring custom R modules in Azure Machine Learning.\" \n    services=\"machine-learning\" \n    documentationCenter=\"\" \n    authors=\"bradsev\"  \n    manager=\"paulettm\" \n    editor=\"cgronlun\" />\n\n<tags \n    ms.service=\"machine-learning\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.tgt_pltfrm=\"na\" \n    ms.workload=\"tbd\" \n    ms.date=\"07/29/2015\" \n    ms.author=\"bradsev;ankarloff\" />\n\n\n# Author custom R modules in Azure Machine Learning\n\nThis topic describes how to author and deploy a custom R module in Azure Machine Learning. It explains what custom R modules are and what files are used to define them. It illustrates how to construct the files that define a module and how to register the module for deployment in a Machine Learning workspace. The elements and attributes used in the definition of the custom module are then described in more detail. How to use auxiliary functionality and files and multiple outputs is also discussed. \n\n[AZURE.INCLUDE [machine-learning-free-trial](../../includes/machine-learning-free-trial.md)]\n\n## What is a custom R module?\nA **custom module** is a user-defined module that can be uploaded to your workspace and executed as part of an Azure Machine Learning experiment. A **custom R module** is a custom module that executes a user-defined R function. R is a programming language for statistical computing and graphics that is widely used by statisticians and data scientists for implementing algorithms. Currently, R is the only language supported in custom modules, but support for additional languages will be added in future releases.\n\nCustom modules have **first-class status** in Azure Machine Learning in the sense that they can used just like any other module. They can be executed with other modules, included in published experiments or visualizations. Users have control over the algorithm implemented by the module, the input and output ports to be used, the modeling parameters, and other various runtime behaviors. A custom module is only available in the workspace in which it was created and cannot be published to community experiments.\n\n## Files in a custom R module\nA custom R module is defined by a .zip file that contains, at a minimum, two files:\n\n* A **source file** that implements the R function exposed by the module\n* An **XML definition file** that describes the custom module interface\n\nAdditional auxiliary files can also be included in the .zip file that provide functionality that can be accessed from the custom module. This option is discussed below.\n\n## Quick start example: define, package, and register a custom R module\nThis example illustrates how to construct the files required by a custom R module, package them into a zip file, and then register the module in your Machine Learning workspace. The example zip package and sample files can be downloaded from [here](http://go.microsoft.com/fwlink/?LinkID=524916&clcid=0x409).\n\nConsider the example of a **Custom Add Rows** module that modifies the standard implementation of the Add Rows module used to concatenate rows (observations) from two datasets (data frames). The standard Add Rows module appends the rows of the second input dataset to the end of the first input dataset using the rbind algorithm. The customized `CustomAddRows` function similarly accepts two datasets, but also accepts an additional Boolean swap parameter as an input. If the swap parameter is **FALSE**, it returns the same data set as the standard implementation. But if the swap parameter is **TRUE**, it appends rows of first input dataset to the end of the second dataset instead. The file that implements the R `CustomAddRows` function exposed by the **Custom Add Rows** module contains the following R code.\n\n    CustomAddRows <- function(dataset1, dataset2, swap=FALSE) \n    {\n        if (swap)\n        {\n            return (rbind(dataset2, dataset1));\n        }\n        else\n        {\n            return (rbind(dataset1, dataset2));\n        } \n    } \n\nTo expose this `CustomAddRows` function as an Azure Machine Learning module, an XML definition file must be created to specify how the **Custom Add Rows** module should look and behave. \n\n    <!-- Defined a module using an R Script -->\n    <Module name=\"Custom Add Rows\">\n        <Owner>Microsoft Corporation</Owner>\n        <Description>Appends one dataset to another. Dataset 2 is concatenated to Dataset 1 when Swap is false, and vice versa when Swap is true.</Description>\n    \n    <!-- Specify the base language, script file and R function to use for this module. -->      \n        <Language name=\"R\" sourceFile=\"CustomAddRows.R\" entryPoint=\"CustomAddRows\" />  \n        \n    <!-- Define module input and output ports -->\n    <!-- Note: The values of the id attributes in the Input and Arg elements must match the parameter names in the R Function CustomAddRows defined in CustomAddRows.R. -->\n        <Ports>\n            <Input id=\"dataset1\" name=\"Dataset 1\" type=\"DataTable\">\n                <Description>First input dataset</Description>\n            </Input>\n            <Input id=\"dataset2\" name=\"Dataset 2\" type=\"DataTable\">\n                <Description>Second input dataset</Description>\n            </Input>\n            <Output id=\"dataset\" name=\"Dataset\" type=\"DataTable\">\n                <Description>Combined dataset</Description>\n            </Output>\n        </Ports>\n        \n    <!-- Define module parameters -->\n        <Arguments>\n            <Arg id=\"swap\" name=\"Swap\" type=\"bool\" >\n                <Description>Swap input datasets.</Description>\n            </Arg>\n        </Arguments>\n    </Module>\n\n \nNote that the value of the **id** attributes of the **Input** and **Arg** elements in the XML file must match the function parameter names of the R code exactly (*dataset1*, *dataset2*, and *swap* in the example). Similarly, the value of the **entryPoint** attribute of the **Language** element must match the name of the function in the R script exactly (*CustomAddRows* in the example). In contrast, the **id** attribute for the **Output** elements do not correspond to any variables in the R script. When more than one output is required, simply return a list from the R function with results placed in the same order as outputs are declared in the XML file.\n\nSave these two files as *CustomAddRows.R* and *CustomAddRows.xml* and then zip them together into a *CustomAddRows.zip* file.\n\nTo register them in your Machine Learning workspace, go to your  workspace in the Machine Learning Studio, click the **+NEW** button on the bottom and choose **MODULE -> FROM ZIP PACKAGE** to upload the new Custom Add Rows module.\n\n![](http://i.imgur.com/RFJhCls.png)\n\nThe **Custom Add Rows** module is now ready to be accessed by your Machine Learning experiments.\n\n## Elements in the XML definition file\n\n### Module elements\nThe **Module** element is used to define a custom module in the XML file. Multiple modules can be defined in one XML file using multiple **module** elements. Each module in your workspace must have a unique name. Register a custom module with the same name as an existing custom module and it will replace the existing module with the new one. Custom modules can, however, be registered with the same name as an existing Azure Machine Learning module and it will appear in the Custom category of the module palette.\n\n    <Module name=\"Custom Add Rows\" isDeterministic=\"false\"> \n        <Owner>Microsoft Corporation</Owner>\n        <Description>Appends one dataset to another...</Description>/> \n\n\nWithin the **Module** element, you can specify an optional **Owner** element that is embedded into the module as well as a **Description** element which is text displayed in quick help for the module and when you hover over the module in the Machine Learning UI.\n\n**Rules for characters limits in the Module elements**:\n\n* The value of the **name** attribute in the **Module** element must not exceed 64 characters in length. \n* The content of the **Description** element must not exceed 128 characters in length.\n* The content of the **Owner** element must not exceed 32 characters in length.\n\n** Indicating whether a module's results are deterministic or nondeterministic\n\nBy default, all modules are considered to be deterministic. That is, given an  unchanging set of parameters, the module should return the same results each time it is run. Given this behavior, Azure Machine Learning Studio does not re-run modules marked as deterministic unless a parameter or the input data has changed. Cached results are returned resulting in faster experiment execution.\n\nHowever, if your module uses a function that returns different results each time it is run – for example, RAND or a function that returns the current date or time – you can specify the module as being non-deterministic by setting the optional **isDeterministic** attribute to **false**. The module will be rerun each time the experiment is run, even if the module input and parameters have not changed. \n\n### Language Definition\nThe **Language** element in your XML definition file is used to specify the custom module language. Currently, R is the only supported language. The value of the **sourceFile** attribute must be the name of the R file that contains the function to call when the module is run. This file must be part of the zip package. The value of the **entryPoint** attribute is the name of the function being called and must match a valid function defined with in the source file.\n\n    <Language name=\"R\" sourceFile=\"CustomAddRows.R\" entryPoint=\"CustomAddRows\" />\n\n\n### Ports\nThe input and output ports for a custom module are specified in child elements of the **Ports** section of the XML definition file. The order of these elements determines the layout experienced (UX) by users. The first child **input** or **output** listed in the **Ports** element  of the XML file will be the left-most input port in the Machine Learning UX.\nEach input and output port may have an optional **Description** child element that specifies the text shown when a user hovers the mouse cursor over the port in the Machine Learning UI.\n\n**Ports Rules**:\n\n* Maximum number of **input and output ports** is 8 for each.\n\n### Input elements\nInput ports allow users to pass data to your R function and workspace. The **data types** that are supported for input ports are as follows: \n\n**DataTable:** This type is passed to your R function as a data.frame. In fact, any types (for example, CSV files or ARFF files) that are supported  by Machine Learning and that are compatible with **DataTable** are converted to a data.frame automatically. \n\n        <Input id=\"dataset1\" name=\"Input 1\" type=\"DataTable\" isOptional=\"false\">\n            <Description>Input Dataset 1</Description>\n        </Input>\n\nThe **id** attribute associated with each **DataTable** input port must have a unique value and this value must match its corresponding named parameter in your R function.\nOptional **DataTable** ports that are not passed as input in an experiment will have the value **NULL** passed to the R function and optional zip ports will be ignored if the input is not connected. The **isOptional** attribute is optional for both the **DataTable** and **Zip** types and is *false* by default.\n       \n**Zip:** Custom modules can accept a zip file as input. This input is unpacked into the R working directory of your function\n\n        <Input id=\"zippedData\" name=\"Zip Input\" type=\"Zip\" IsOptional=\"false\">\n            <Description>Zip files will be extracted to the R working directory.</Description>\n        </Input>\n\nFor custom R modules, the id for a Zip port does not have to match any parameters of the R function since the zip file is automatically extracted to the R working directory.\n\n**Input Rules:**\n\n* The value of the **id** attribute of the **Input** element must be a valid R variable name.\n* The value of the **id** attribute of the **Input** element must not be longer than 64 characters.\n* The value of the **name** attribute of the **Input** element  must not be longer than 64 characters.\n* The content of the **Description** element must not be longer than 128 characters\n* The value of the **type** attribute of the **Input** element must be *Zip* or *DataTable*.\n* The value of the **isOptional** attribute of the **Input** element is not required (and is *false* by default when not specified); but if it is specified, it must be *true* or *false*.\n\n### Output elements\n\n**Standard output ports:**\nOutput ports are mapped to the return values from your R function, which can then be used by subsequent modules. *DataTable* is the only standard output port type supported currently. (Support for *Learners* and *Transforms* is forthcoming.) A *DataTable* output is defined as:\n\n    <Output id=\"dataset\" name=\"Dataset\" type=\"DataTable\">\n        <Description>Combined dataset</Description>\n    </Output>\n\nFor outputs in custom R modules, the value of the **id** attribute does not have to correspond with anything in the R script, but it must be unique. For a single module output, the return value from the R function must be a *data.frame*. In order to output more than one object of a supported data type, the appropriate output ports need to be specified in the XML definition file and the objects need to be returned as a list. The output objects will be assigned to output ports from left to right, reflecting the order in which the objects are placed in the returned list.\n \nFor example, if you want to output dataset, Dataset1, and Dataset2 to output ports dataset, dataset1, and dataset2 from left to right, respectively, then define the output ports in the ‘CustomAddRows.xml’ file as follows:\n\nFor example, if you want to modify the **Custom Add Rows** module to output the original two datasets, *dataset1*, and *dataset2*, in addition to the new joined dataset *dataset* (in an order, from left to right, as: *dataset*, *dataset1*, *dataset2*), then define the output ports in the CustomAddRows.xml file as follows:\n\n    <Ports> \n        <Output id=\"dataset\" name=\"Dataset Out\" type=\"DataTable\"> \n            <Description>New Dataset</Description> \n        </Output> \n        <Output id=\"dataset1_out\" name=\"Dataset 1 Out\" type=\"DataTable\"> \n            <Description>First Dataset</Description> \n        </Output> \n        <Output id=\"dataset2_out\" name=\"Dataset 2 Out\" type=\"DataTable\"> \n            <Description>Second Dataset</Description> \n        </Output> \n        <Input id=\"dataset1\" name=\"Dataset 1\" type=\"DataTable\"> \n            <Description>First Input Table</Description>\n        </Input> \n        <Input id=\"dataset2\" name=\"Dataset 2\" type=\"DataTable\"> \n            <Description>Second Input Table</Description> \n        </Input> \n    </Ports> \n\n\nAnd return the list of objects in a list in the correct order in ‘CustomAddRows.R’:\n\n    CustomAddRows <- function(dataset1, dataset2, swap=FALSE) { \n        if (swap) { dataset <- rbind(dataset2, dataset1)) } \n        else { dataset <- rbind(dataset1, dataset2)) \n        } \n    return (list(dataset, dataset1, dataset2)) \n    } \n    \n**Visualization output:**\nYou can also specify an output port of type *Visualization* which displays the output from the R graphics device and console output. This port is not part of the R function output and does not interfere with the order of the the other output port types. To add a visualization port to the custom modules, add an **Output** element with a value of *Visualization* for its **type** attribute:\n\n    <Output id=\"deviceOutput\" name=\"View Port\" type=\"Visualization\">\n      <Description>View the R console graphics device output.</Description>\n    </Output>\n    \n**Output Rules:**\n\n* The value of the **id** attribute of the **Output** element must be a valid R variable name.\n* The value of the **id** attribute of the **Output** element must not be longer than 32 characters.\n* The value of the **name** attribute of the **Output** element  must not be longer than 64 characters.\n* The value of the **type** attribute of the **Output** element must be *Visualization*.\n\n### Arguments\nAdditional data can be passed to the R function via module parameters which are defined in the **Arguments** element. These parameters appear in the right most properties pane of the Machine Learning UI when the module is selected. Arguments can be any of the supported types or you can create a custom enumeration when needed. Similar to the **Ports** elements, **Arguments** elements can have an optional **Description** element that specifies the text that appears when you hover the mouse over the parameter name.\nOptional properties for a module, such as defaultValue, minValue and maxValue can be added to any argument as attributes to a **Properties** element. Valid properties for the **Properties** element depend on the argument type and are describe with the supported argument types below.\nAs with inputs and outputs, it is critical that each of the parameters have unique id values associated with them. In addition, the id values must correspond to the named parameters in your R function. In our quick start example the associated id/parameter was *swap*.\n\n### Arg element\nA module parameter is defined using the **Arg** child element of the **Arguments** section of the XML definition file. As with the child elements in the **Ports** section, the ordering of parameters in the **Arguments** section defines the layout encountered in the UX. The parameters appear from top down in the UI in the same order in which they are defined in the XML file. The types supported by Machine Learning for parameters are listed below. \n\n**int** – an Integer (32-bit) type parameter.\n\n        <Arg id=\"intValue1\" name=\"Int Param\" type=\"int\">\n            <Properties min=\"0\" max=\"100\" default=\"0\" />\n            <Description>Integer Parameter</Description>\n       </Arg>\n\n\n\n* *Optional Properties*: **min**, **max** and **default**\n\n**double** – a double type parameter.\n\n       <Arg id=\"doubleValue1\" name=\"Double Param\" type=\"double\">\n           <Properties min=\"0.000\" max=\"0.999\" default=\"0.3\" />\n           <Description>Double Parameter</Description>\n       </Arg>\n\n\n* *Optional Properties*: **min**, **max** and **default**\n\n**bool** – a Boolean parameter that is represented by a check-box in UX.\n\n        <Arg id=\"boolValue1\" name=\"Boolean Param\" type=\"bool\">\n            <Properties default=\"true\" />\n            <Description>Boolean Parameter</Description>\n        </Arg>\n\n\n\n* *Optional Properties*: **default** - false if not set\n\n**string**: a standard string\n\n        <Arg id=\"stringValue1\" name=\"My string Param\" type=\"string\">\n           <Properties default=\"Default string value.\" isOptional=\"true\" />\n           <Description>String Parameter 1</Description>\n        </Arg>\n\n\n* *Optional Properties*: **default** and **isOptional** - An optional string without a default value will be passed as null to the R function if a value is not otherwise provided by a user.\n\n**ColumnPicker**: a column selection parameter. This type renders in the UX as a column chooser. The **Property** element is used here to specify the id of the port from which columns will be selected, where the target port type must be *DataTable*. The result of the column selection will be passed to the R function as a list of strings containing the selected column names. \n\n        <Arg id=\"colset\" name=\"Column set\" type=\"ColumnPicker\">   \n          <Properties portId=\"datasetIn1\" allowedTypes=\"Numeric\" default=\"NumericAll\"/>\n          <Description>Column set</Description>\n        </Arg>\n\n\n* *Required Properties*: **portId** -  matches the id of an Input element with type *DataTable*.\n* *Optional Properties*:\n    * **allowedTypes** - Filter the column types the user can pick from. Valid values include: \n        *   Numeric\n        *   Boolean\n        *   Categorical\n        *   String\n        *   Label\n        *   Feature\n        *   Score\n        *   All\n\n    * **default** - Valid default selections for the column picker include: \n        * None\n        * NumericFeature\n        * NumericLabel\n        * NumericScore\n        * NumericAll\n        * BooleanFeature\n        * BooleanLabel\n        * BooleanScore\n        * BooleanAll\n        * CategoricalFeature\n        * CategoricalLabel\n        * CategoricalScore\n        * CategoricalAll\n        * StringFeature\n        * StringLabel\n        * StringScore\n        * StringAll\n        * AllLabel\n        * AllFeature\n        * AllScore\n        * All\n\n                                                        \n**DropDown**: a user specified enumerated (dropdown) list. The dropdown items are specified within the **Properties** element using an **Item** element. The **id** for each **Item** must be unique and a valid R variable and the name of the item is both the text that appears to users and the value that is passed to the R function.\n\n    <Arg id=\"color\" name=\"Color\" type=\"DropDown\">\n      <Properties default=\"red\">\n        <Item id=\"red\" name=\"Red Value\"/>\n        <Item id=\"green\" name=\"Green Value\"/>\n        <Item id=\"blue\" name=\"Blue Value\"/>\n      </Properties>\n      <Description>Select a color.</Description>\n    </Arg>  \n\n* *Optional Properties*:\n    * **default** - The value for the default property must correspond with an id value from one of the **Item** elements.\n\n\n### Auxiliary Files\n\nAny file that is placed in your custom module ZIP file will be available for use during execution time. If there is a directory structure present it will be preserved. This means that file sourcing will work the same locally and in Azure Machine Learning execution. Please notice that all files are extracted to ‘src’ directory so all paths should have ‘src/’ prefix.\n\nFor example, say you want to remove any rows with NAs from the  dataset, and also remove any duplicate rows, before outputting it into CustomAddRows, and you’ve already written an R function that does that in a file RemoveDupNARows.R:\n\n    RemoveDupNARows <- function(dataFrame) {\n        #Remove Duplicate Rows:\n        dataFrame <- unique(dataFrame)\n        #Remove Rows with NAs:\n        finalDataFrame <- dataFrame[complete.cases(dataFrame),]\n        return(finalDataFrame)\n    }\nYou can source the auxiliary file RemoveDupNARows.R in the CustomAddRows function:\n\n    CustomAddRows <- function(dataset1, dataset2, swap=FALSE) {\n        source(\"src/RemoveDupNARows.R\")\n            if (swap) { \n                dataset <- rbind(dataset2, dataset1))\n            } else { \n                dataset <- rbind(dataset1, dataset2)) \n            } \n        dataset <- removeDupNARows(dataset)\n        return (dataset)\n    }\n\nNext, upload a zip file containing ‘CustomAddRows.R’, ‘CustomAddRows.xml’, and ‘RemoveDupNARows.R’ as a custom R module.\n\n## Execution Environment ##\nThe execution environment for the R script uses the same version of R as the **Execute R Script** module, and can use the same default packages. You can add additional R packages to your custom module by including them in the custom module zip package and loading them in your R script as you would in your own R environment. \n\n**Limitations of the execution environment** include:\n\n* Non-persistent file system: Files written when the custom module is run will not persist across multiple runs of the same module.\n* No network access\n\n\n\n \n\ntest\n"
}