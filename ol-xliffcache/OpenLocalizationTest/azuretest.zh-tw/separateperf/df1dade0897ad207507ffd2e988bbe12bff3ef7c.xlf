<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Migrating a Database to Azure SQL Database</source>
          <target state="new">Migrating a Database to Azure SQL Database</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Microsoft Azure SQL Database, database deploy, database migration, import database, export database, migration wizard</source>
          <target state="new">Microsoft Azure SQL Database, database deploy, database migration, import database, export database, migration wizard</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Migrating a database to Azure SQL Database</source>
          <target state="new">Migrating a database to Azure SQL Database</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure SQL Database V12 brings near-complete engine compatibility with SQL Server 2014 and later.</source>
          <target state="new">Azure SQL Database V12 brings near-complete engine compatibility with SQL Server 2014 and later.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>As such, the task of migrating most databases from an on-premises instance of SQL Server 2005 or greater to an Azure SQL database is much simpler.</source>
          <target state="new">As such, the task of migrating most databases from an on-premises instance of SQL Server 2005 or greater to an Azure SQL database is much simpler.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Migration for many databases is a straightforward schema and data movement operation requiring few, if any, changes to the schema and little or no re-engineering of applications.</source>
          <target state="new">Migration for many databases is a straightforward schema and data movement operation requiring few, if any, changes to the schema and little or no re-engineering of applications.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Where databases need to be changed, the scope of these changes is more confined.</source>
          <target state="new">Where databases need to be changed, the scope of these changes is more confined.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>By design, server-scoped features of SQL Server are not supported by Azure SQL Database V12.</source>
          <target state="new">By design, server-scoped features of SQL Server are not supported by Azure SQL Database V12.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Databases and applications that rely on these features will need some re-engineering before they can be migrated.</source>
          <target state="new">Databases and applications that rely on these features will need some re-engineering before they can be migrated.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>While Azure SQL Database V12 improves compatibility with an on-premises SQL Server database, migration still needs to be planned and executed carefully, particularly for large and complex databases.</source>
          <target state="new">While Azure SQL Database V12 improves compatibility with an on-premises SQL Server database, migration still needs to be planned and executed carefully, particularly for large and complex databases.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Determining compatibility</source>
          <target state="new">Determining compatibility</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To determine if your on-premises SQL Server database is compatible with Azure SQL Database V12, you can either begin the migration using one of the two methods discussed under option #1 below and see if the schema validation routines detect an incompatibility or you can use SQL Server Data Tools in Visual Studio as discussed in option #2 below to validate compatibility.</source>
          <target state="new">To determine if your on-premises SQL Server database is compatible with Azure SQL Database V12, you can either begin the migration using one of the two methods discussed under option #1 below and see if the schema validation routines detect an incompatibility or you can use SQL Server Data Tools in Visual Studio as discussed in option #2 below to validate compatibility.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If your on-premises SQL Server database has compatibility issues, you can use SQL Server Data Tools in Visual Studio or SQL Server Management Studio to address and resolve the compatibility issues.</source>
          <target state="new">If your on-premises SQL Server database has compatibility issues, you can use SQL Server Data Tools in Visual Studio or SQL Server Management Studio to address and resolve the compatibility issues.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Migration methods</source>
          <target state="new">Migration methods</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There are a number of methods for migrating a compatible on-premises SQL Server database to Azure SQL Database V12.</source>
          <target state="new">There are a number of methods for migrating a compatible on-premises SQL Server database to Azure SQL Database V12.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For small to medium databases, migrating compatible SQL Server 2005 or later databases is as simple as running the Deploy Database to Microsoft Azure Database wizard in SQL Server Management Studio, provided you do not have connectivity challenges (no connectivity, low bandwidth, or timeout issues).</source>
          <target state="new">For small to medium databases, migrating compatible SQL Server 2005 or later databases is as simple as running the Deploy Database to Microsoft Azure Database wizard in SQL Server Management Studio, provided you do not have connectivity challenges (no connectivity, low bandwidth, or timeout issues).</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For medium to large databases or when you have connectivity challenges, you can use SQL Server Management Studio to export the data and schema to a BACPAC file (stored locally or in an Azure blob) and then import the BACPAC file into your Azure SQL instance.</source>
          <target state="new">For medium to large databases or when you have connectivity challenges, you can use SQL Server Management Studio to export the data and schema to a BACPAC file (stored locally or in an Azure blob) and then import the BACPAC file into your Azure SQL instance.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you store the BACPAC in an Azure blob, you can also import the BACPAC file from within the Azure portal.</source>
          <target state="new">If you store the BACPAC in an Azure blob, you can also import the BACPAC file from within the Azure portal.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information on a BACPAC file, see <bpt id="p1">[</bpt>Data-tier Applications<ept id="p1">](https://msdn.microsoft.com/library/ee210546.aspx)</ept>.</source>
          <target state="new">For more information on a BACPAC file, see <bpt id="p1">[</bpt>Data-tier Applications<ept id="p1">](https://msdn.microsoft.com/library/ee210546.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For larger databases, you will achieve the best performance by migrating the schema and the data separately.</source>
          <target state="new">For larger databases, you will achieve the best performance by migrating the schema and the data separately.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can extract the schema into a database project using SQL Server Management Studio or Visual Studio and then deploy the schema to create the Azure SQL database.</source>
          <target state="new">You can extract the schema into a database project using SQL Server Management Studio or Visual Studio and then deploy the schema to create the Azure SQL database.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can then extract the data using BCP and then use BCP to import the data using parallel streams into the Azure SQL database.</source>
          <target state="new">You can then extract the data using BCP and then use BCP to import the data using parallel streams into the Azure SQL database.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Migrating a large, complex database will take many hours regardless of the method you choose.</source>
          <target state="new">Migrating a large, complex database will take many hours regardless of the method you choose.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Option #1</source>
          <target state="new">Option #1</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>***Migrating a compatible database using SQL Server Management Studio ***</source>
          <target state="new">***Migrating a compatible database using SQL Server Management Studio ***</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>SQL Server Management Studio provides two methods for migrating your compatible on-premises SQL Server database to an Azure SQL database.</source>
          <target state="new">SQL Server Management Studio provides two methods for migrating your compatible on-premises SQL Server database to an Azure SQL database.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can either use the Deploy Database to Microsoft Azure SQL Database wizard or export the database to a BACPAC file, which can then be imported to create a new Azure SQL database.</source>
          <target state="new">You can either use the Deploy Database to Microsoft Azure SQL Database wizard or export the database to a BACPAC file, which can then be imported to create a new Azure SQL database.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The wizard validates Azure SQL Database V12 compatibility, extracts the schema and data into a BACPAC file and then imports it into the Azure SQL database instance specified.</source>
          <target state="new">The wizard validates Azure SQL Database V12 compatibility, extracts the schema and data into a BACPAC file and then imports it into the Azure SQL database instance specified.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To use this option, see <bpt id="p1">[</bpt>Use SSMS<ept id="p1">](sql-database-migrate-ssms.md)</ept>.</source>
          <target state="new">To use this option, see <bpt id="p1">[</bpt>Use SSMS<ept id="p1">](sql-database-migrate-ssms.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Option #2</source>
          <target state="new">Option #2</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Update the database schema off-line using Visual Studio and then deploy with SQL Server Management Studio</source>
          <target state="new">Update the database schema off-line using Visual Studio and then deploy with SQL Server Management Studio</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If your on-premises SQL Server database is not compatible or to determine if it is compatible, you can import the database schema into a Visual Studio database project for analysis.</source>
          <target state="new">If your on-premises SQL Server database is not compatible or to determine if it is compatible, you can import the database schema into a Visual Studio database project for analysis.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To analyze, you specify the target platform for the project as SQL Database V12 and then build the project.</source>
          <target state="new">To analyze, you specify the target platform for the project as SQL Database V12 and then build the project.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the build is successful, the database is compatible.</source>
          <target state="new">If the build is successful, the database is compatible.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If the build fails, you can resolve the errors in SQL Server Data Tools for Visual Studio ("SSDT").</source>
          <target state="new">If the build fails, you can resolve the errors in SQL Server Data Tools for Visual Studio ("SSDT").</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Once the project builds successfully, you can publish it back as a copy of the source database and then use the data compare feature in SSDT to copy the data from the source database to the Azure SQL V12 compatible database.</source>
          <target state="new">Once the project builds successfully, you can publish it back as a copy of the source database and then use the data compare feature in SSDT to copy the data from the source database to the Azure SQL V12 compatible database.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This updated database is then deployed to Azure SQL Database using option #1.</source>
          <target state="new">This updated database is then deployed to Azure SQL Database using option #1.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If schema-only migration is required, the schema can be published directly from Visual Studio directly to Azure SQL Database.</source>
          <target state="new">If schema-only migration is required, the schema can be published directly from Visual Studio directly to Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Use this method when the database schema requires more changes than can be handled by the migration wizard alone.</source>
          <target state="new">Use this method when the database schema requires more changes than can be handled by the migration wizard alone.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To use this option, see <bpt id="p1">[</bpt>Use Visual Studio<ept id="p1">](sql-database-migrate-visualstudio-ssdt.md)</ept>.</source>
          <target state="new">To use this option, see <bpt id="p1">[</bpt>Use Visual Studio<ept id="p1">](sql-database-migrate-visualstudio-ssdt.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Deciding options to use</source>
          <target state="new">Deciding options to use</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you anticipate that a database can be migrated without change you should use option #1, which is quick and easy.</source>
          <target state="new">If you anticipate that a database can be migrated without change you should use option #1, which is quick and easy.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you are uncertain, start by exporting a schema-only BACPAC from the database as described in option #1.</source>
          <target state="new">If you are uncertain, start by exporting a schema-only BACPAC from the database as described in option #1.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the export succeeds with no errors, you can use option #1 to migrate the database with its data.</source>
          <target state="new">If the export succeeds with no errors, you can use option #1 to migrate the database with its data.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you encounter errors during the export of option#1, use option #2 and correct the database schema offline in Visual Studio using a combination of the migration wizard and manually applied schema changes.</source>
          <target state="new">If you encounter errors during the export of option#1, use option #2 and correct the database schema offline in Visual Studio using a combination of the migration wizard and manually applied schema changes.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A copy of the source database is then updated in situ and then migrated to Azure using option #1.</source>
          <target state="new">A copy of the source database is then updated in situ and then migrated to Azure using option #1.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Migration tools</source>
          <target state="new">Migration tools</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Tools used include SQL Server Management Studio (SSMS) and the SQL Server tooling in Visual Studio (VS, SSDT), as well the Azure portal.</source>
          <target state="new">Tools used include SQL Server Management Studio (SSMS) and the SQL Server tooling in Visual Studio (VS, SSDT), as well the Azure portal.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Be sure to install the latest versions of the client tools as earlier versions are not compatible with the Azure SQL Database V12.</source>
          <target state="new">Be sure to install the latest versions of the client tools as earlier versions are not compatible with the Azure SQL Database V12.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>SQL Server Management Studio (SSMS)</source>
          <target state="new">SQL Server Management Studio (SSMS)</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>SSMS can be used to deploy a compatible database directly to Azure SQL Database or to export a logical backup of the database as a BACPAC, which can then be imported, still using SSMS, to create a new Azure SQL Database.</source>
          <target state="new">SSMS can be used to deploy a compatible database directly to Azure SQL Database or to export a logical backup of the database as a BACPAC, which can then be imported, still using SSMS, to create a new Azure SQL Database.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Download the latest version of SSMS</source>
          <target state="new">Download the latest version of SSMS</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>SQL Server tooling in Visual Studio (VS, SSDT)</source>
          <target state="new">SQL Server tooling in Visual Studio (VS, SSDT)</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The SQL Server tooling in Visual Studio can be used to create and manage a database project comprising a set of Transact-SQL files for each object in the schema.</source>
          <target state="new">The SQL Server tooling in Visual Studio can be used to create and manage a database project comprising a set of Transact-SQL files for each object in the schema.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The project can be imported from a database or from a script file.</source>
          <target state="new">The project can be imported from a database or from a script file.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Once created, the project can be to Azure SQL Database v12; building the project then validates schema compatibility.</source>
          <target state="new">Once created, the project can be to Azure SQL Database v12; building the project then validates schema compatibility.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Clicking on an error opens the corresponding Transact-SQL file allowing it to be edited and the error corrected.</source>
          <target state="new">Clicking on an error opens the corresponding Transact-SQL file allowing it to be edited and the error corrected.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Once all the errors are fixed the project can be published, either directly to SQL Database to create an empty database or back to (a copy of) the original SQL Server database to update its schema, which allows the database to be deployed with its data using SSMS as above.</source>
          <target state="new">Once all the errors are fixed the project can be published, either directly to SQL Database to create an empty database or back to (a copy of) the original SQL Server database to update its schema, which allows the database to be deployed with its data using SSMS as above.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>latest SQL Server Data Tools for Visual Studio<ept id="p1">](https://msdn.microsoft.com/library/mt204009.aspx)</ept> with Visual Studio 2013 Update 4 or later.</source>
          <target state="new">Use the <bpt id="p1">[</bpt>latest SQL Server Data Tools for Visual Studio<ept id="p1">](https://msdn.microsoft.com/library/mt204009.aspx)</ept> with Visual Studio 2013 Update 4 or later.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Comparisons</source>
          <target state="new">Comparisons</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>| Option #1 | Option #2 |</source>
          <target state="new">| Option #1 | Option #2 |</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>| Deploy a compatible database to Azure SQL Database |   Update database in-place then deploy to Azure SQL Database |</source>
          <target state="new">| Deploy a compatible database to Azure SQL Database |   Update database in-place then deploy to Azure SQL Database |</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>SSMS</source>
          <target state="new">SSMS</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Offline Edit</source>
          <target state="new">Offline Edit</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>| Uses SSMS | Uses VS and SSMS |</source>
          <target state="new">| Uses SSMS | Uses VS and SSMS |</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>|Simple process requires that schema is compatible.</source>
          <target state="new">|Simple process requires that schema is compatible.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Schema is migrated unchanged.</source>
          <target state="new">Schema is migrated unchanged.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>| Schema is imported into a database project in Visual Studio.</source>
          <target state="new">| Schema is imported into a database project in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Additional updates are made using SSDT for Visual Studio and final schema used to update the database in situ.</source>
          <target state="new">Additional updates are made using SSDT for Visual Studio and final schema used to update the database in situ.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>| Always deploys or exports the entire database.</source>
          <target state="new">| Always deploys or exports the entire database.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>| Full control of the objects that are included in the migration.</source>
          <target state="new">| Full control of the objects that are included in the migration.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>| No provision for changing the output if there are errors, the source schema must be compatible.</source>
          <target state="new">| No provision for changing the output if there are errors, the source schema must be compatible.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>| Full features of SSDT for Visual Studio available.</source>
          <target state="new">| Full features of SSDT for Visual Studio available.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Schema is changed offline.</source>
          <target state="new">Schema is changed offline.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>| Application validation occurs in Azure.</source>
          <target state="new">| Application validation occurs in Azure.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Should be minimal as schema is migrated without change.</source>
          <target state="new">Should be minimal as schema is migrated without change.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>| Application validation can be done in SQL Server before the database is deployed to Azure.</source>
          <target state="new">| Application validation can be done in SQL Server before the database is deployed to Azure.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>| Simple, easily configured one- or two-step process.</source>
          <target state="new">| Simple, easily configured one- or two-step process.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>| More complex multi-step process (easier if only deploying schema).</source>
          <target state="new">| More complex multi-step process (easier if only deploying schema).</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df1dade0897ad207507ffd2e988bbe12bff3ef7c</xliffext:olfilehash>
  </header>
</xliff>