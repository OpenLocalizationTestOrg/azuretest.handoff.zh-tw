<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Call a custom API from an HTML client - Mobile Services</source>
          <target state="new">Call a custom API from an HTML client - Mobile Services</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to define a custom API and then call it from an HTML app that uses Azure Mobile Services.</source>
          <target state="new">Learn how to define a custom API and then call it from an HTML app that uses Azure Mobile Services.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Call a custom API from an HTML application</source>
          <target state="new">Call a custom API from an HTML application</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic shows you how to call a custom API from an HTML application.</source>
          <target state="new">This topic shows you how to call a custom API from an HTML application.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A custom API enables you to define custom endpoints that expose server functionality that does not map to an insert, update, delete, or read operation.</source>
          <target state="new">A custom API enables you to define custom endpoints that expose server functionality that does not map to an insert, update, delete, or read operation.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>By using a custom API, you can have more control over messaging, including reading and setting HTTP message headers and defining a message body format other than JSON.</source>
          <target state="new">By using a custom API, you can have more control over messaging, including reading and setting HTTP message headers and defining a message body format other than JSON.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The custom API created in this topic gives you the ability to send a single POST request that sets the completed flag to <ph id="ph1">`true`</ph> for all the todo items in the table.</source>
          <target state="new">The custom API created in this topic gives you the ability to send a single POST request that sets the completed flag to <ph id="ph1">`true`</ph> for all the todo items in the table.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Without this custom API, the client would have to send individual requests to update the flag for each todo item in the table.</source>
          <target state="new">Without this custom API, the client would have to send individual requests to update the flag for each todo item in the table.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This tutorial is based on the Mobile Services quickstart.</source>
          <target state="new">This tutorial is based on the Mobile Services quickstart.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Before you start this tutorial, you must first complete <bpt id="p1">[</bpt><ept id="p1">Get started with Mobile Services]</ept> or <bpt id="p2">[</bpt><ept id="p2">Add Mobile Services to an existing app]</ept>.</source>
          <target state="new">Before you start this tutorial, you must first complete <bpt id="p1">[</bpt><ept id="p1">Get started with Mobile Services]</ept> or <bpt id="p2">[</bpt><ept id="p2">Add Mobile Services to an existing app]</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="define-custom-api"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Define the custom API</source>
          <target state="new"><ph id="ph1">&lt;a name="define-custom-api"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Define the custom API</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="update-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update the app to call the custom API</source>
          <target state="new"><ph id="ph1">&lt;a name="update-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update the app to call the custom API</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Using your text editor, open the index.html file, locate the <bpt id="p1">**</bpt>button<ept id="p1">**</ept> element named <ph id="ph1">`buttonRefresh`</ph>, and add the following new element right after it:</source>
          <target state="new">Using your text editor, open the index.html file, locate the <bpt id="p1">**</bpt>button<ept id="p1">**</ept> element named <ph id="ph1">`buttonRefresh`</ph>, and add the following new element right after it:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This adds a new button to the page.</source>
          <target state="new">This adds a new button to the page.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In page.js, and after the <bpt id="p1">**</bpt>refreshTodoItems<ept id="p1">**</ept> function, add the following code:</source>
          <target state="new">In page.js, and after the <bpt id="p1">**</bpt>refreshTodoItems<ept id="p1">**</ept> function, add the following code:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This method handles the <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> event for the new button.</source>
          <target state="new">This method handles the <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> event for the new button.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>invokeApi<ept id="p1">**</ept> method is called on the client, which sends a POST request to the new custom API.</source>
          <target state="new">The <bpt id="p1">**</bpt>invokeApi<ept id="p1">**</ept> method is called on the client, which sends a POST request to the new custom API.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The result returned by the custom API is displayed in a message dialog, as are any errors.</source>
          <target state="new">The result returned by the custom API is displayed in a message dialog, as are any errors.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="test-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Test the app</source>
          <target state="new"><ph id="ph1">&lt;a name="test-app"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Test the app</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Refresh your browser.</source>
          <target state="new">Refresh your browser.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the app, type some text in <bpt id="p1">**</bpt>Insert a TodoItem<ept id="p1">**</ept>, then click <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</source>
          <target state="new">In the app, type some text in <bpt id="p1">**</bpt>Insert a TodoItem<ept id="p1">**</ept>, then click <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Repeat the previous step until you have added several todo items to the list.</source>
          <target state="new">Repeat the previous step until you have added several todo items to the list.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Complete All<ept id="p1">**</ept> button.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Complete All<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A message dialog is displayed that indicates the number of items marked complete and the filtered query is executed again, which clears all items from the list.</source>
          <target state="new">A message dialog is displayed that indicates the number of items marked complete and the filtered query is executed again, which clears all items from the list.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This topic showed how to use the <bpt id="p1">**</bpt>invokeApi<ept id="p1">**</ept> function to call a fairly simple custom API from your HTML/JavaScript app.</source>
          <target state="new">This topic showed how to use the <bpt id="p1">**</bpt>invokeApi<ept id="p1">**</ept> function to call a fairly simple custom API from your HTML/JavaScript app.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To learn more about using the <bpt id="p1">**</bpt>invokeApi<ept id="p1">**</ept> function, see the post <bpt id="p2">[</bpt>Custom API in Azure Mobile Services<ept id="p2">](http://blogs.msdn.com/b/carlosfigueira/archive/2013/06/19/custom-api-in-azure-mobile-services-client-sdks.aspx)</ept>.</source>
          <target state="new">To learn more about using the <bpt id="p1">**</bpt>invokeApi<ept id="p1">**</ept> function, see the post <bpt id="p2">[</bpt>Custom API in Azure Mobile Services<ept id="p2">](http://blogs.msdn.com/b/carlosfigueira/archive/2013/06/19/custom-api-in-azure-mobile-services-client-sdks.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Also, consider finding out more about the following Mobile Services topics:</source>
          <target state="new">Also, consider finding out more about the following Mobile Services topics:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Learn more about creating custom APIs.</source>
          <target state="new">Learn more about creating custom APIs.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Learn how to use the source control feature to more easily and securely develop and publish custom API script code.</source>
          <target state="new">Learn how to use the source control feature to more easily and securely develop and publish custom API script code.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7faf5617dd6192f0d596fb10ee77f76c47ca6e3</xliffext:olfilehash>
  </header>
</xliff>