{
  "nodes": [
    {
      "content": "Continuous delivery for cloud services with TFS in Azure | Microsoft Azure",
      "pos": [
        27,
        101
      ]
    },
    {
      "content": "Learn how to set up continuous delivery for Azure cloud apps.",
      "pos": [
        120,
        181
      ]
    },
    {
      "content": "Code samples for MSBuild command-line statements and PowerShell scripts.",
      "pos": [
        182,
        254
      ]
    },
    {
      "content": "Continuous Delivery for Cloud Services in Azure",
      "pos": [
        557,
        604
      ]
    },
    {
      "content": "The process described in this article shows you how to set up continuous",
      "pos": [
        606,
        678
      ]
    },
    {
      "content": "delivery for Azure cloud apps.",
      "pos": [
        679,
        709
      ]
    },
    {
      "content": "This process enables you to",
      "pos": [
        710,
        737
      ]
    },
    {
      "content": "automatically create packages and deploy the package to Azure",
      "pos": [
        738,
        799
      ]
    },
    {
      "content": "after every code check-in.",
      "pos": [
        800,
        826
      ]
    },
    {
      "content": "The package build process described in this",
      "pos": [
        827,
        870
      ]
    },
    {
      "content": "article is equivalent to the Package command in Visual Studio, and the",
      "pos": [
        871,
        941
      ]
    },
    {
      "content": "publishing steps are equivalent to the Publish command in Visual Studio.",
      "pos": [
        942,
        1014
      ]
    },
    {
      "content": "The article covers the methods you would use to create a build server",
      "pos": [
        1015,
        1084
      ]
    },
    {
      "content": "with MSBuild command-line statements and Windows PowerShell scripts, and",
      "pos": [
        1085,
        1157
      ]
    },
    {
      "content": "it also demonstrates how to optionally configure Visual Studio Team",
      "pos": [
        1158,
        1225
      ]
    },
    {
      "content": "Foundation Server - Team Build definitions to use the MSBuild commands",
      "pos": [
        1226,
        1296
      ]
    },
    {
      "content": "and PowerShell scripts.",
      "pos": [
        1297,
        1320
      ]
    },
    {
      "content": "The process is customizable for your build",
      "pos": [
        1321,
        1363
      ]
    },
    {
      "content": "environment and Azure target environments.",
      "pos": [
        1364,
        1406
      ]
    },
    {
      "content": "You can also use Visual Studio Online, a version of TFS that is hosted in Azure, to do this more easily.",
      "pos": [
        1408,
        1512
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>Continuous Delivery to Azure by Using Visual Studio Online<ept id=\"p1\">][]</ept>.",
      "pos": [
        1513,
        1602
      ]
    },
    {
      "content": "Before you start, you should publish your application from Visual Studio.",
      "pos": [
        1604,
        1677
      ]
    },
    {
      "content": "This will ensure that all the resources are available and initialized when you",
      "pos": [
        1678,
        1756
      ]
    },
    {
      "content": "attempt to automate the publication process.",
      "pos": [
        1757,
        1801
      ]
    },
    {
      "content": "Step 1: Configure the Build Server",
      "pos": [
        1806,
        1840
      ]
    },
    {
      "content": "Before you can create an Azure package by using MSBuild, you must",
      "pos": [
        1842,
        1907
      ]
    },
    {
      "content": "install the required software and tools on the build server.",
      "pos": [
        1908,
        1968
      ]
    },
    {
      "content": "Visual Studio is not required to be installed on the build server.",
      "pos": [
        1970,
        2036
      ]
    },
    {
      "content": "If",
      "pos": [
        2037,
        2039
      ]
    },
    {
      "content": "you want to use Team Foundation Build Service to manage your build",
      "pos": [
        2040,
        2106
      ]
    },
    {
      "content": "server, follow the instructions in the <bpt id=\"p1\">[</bpt>Team Foundation Build Service<ept id=\"p1\">][]</ept>",
      "pos": [
        2107,
        2179
      ]
    },
    {
      "content": "documentation.",
      "pos": [
        2180,
        2194
      ]
    },
    {
      "pos": [
        2200,
        2330
      ],
      "content": "On the build server, install the <bpt id=\"p1\">[</bpt>.NET Framework 4<ept id=\"p1\">][]</ept>, <bpt id=\"p2\">[</bpt>.NET Framework 4.5<ept id=\"p2\">][]</ept>, or <bpt id=\"p3\">[</bpt>.NET Framework 4.5.2<ept id=\"p3\">][]</ept>, which include MSBuild."
    },
    {
      "pos": [
        2335,
        2584
      ],
      "content": "Install the <bpt id=\"p1\">[</bpt>Azure Authoring Tools for .NET<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=623518)</ept> (substitute MicrosoftAzureAuthoringTools-x86.msi in the link instead of MicrosoftAzureAuthoringTools-x64.msi if your build server has a 32-bit OS/processor)."
    },
    {
      "pos": [
        2588,
        2742
      ],
      "content": "Install the <bpt id=\"p1\">[</bpt>Azure Libraries for .NET<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=623519)</ept> (substitute MicrosoftAzureLibsForNet-x86.msi in the link if needed)."
    },
    {
      "content": "Copy the Microsoft.WebApplication.targets file from a Visual Studio installation to the build server.",
      "pos": [
        2747,
        2848
      ]
    },
    {
      "content": "On a computer with Visual Studio installed, this file is located in the directory C:\\\\Program Files(x86)\\\\MSBuild\\\\Microsoft\\\\VisualStudio\\\\v14.0\\\\WebApplications (v12.0 for Visual Studio 2013).",
      "pos": [
        2854,
        3048
      ]
    },
    {
      "content": "You should copy it to the same directory on the build server.",
      "pos": [
        3049,
        3110
      ]
    },
    {
      "content": "Install the <bpt id=\"p1\">[</bpt>Azure Tools for Visual Studio<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=623520)</ept>.",
      "pos": [
        3115,
        3206
      ]
    },
    {
      "content": "Use MicrosoftAzureTools.VS140.exe to build Visual Studio 2015 projects, or MicrosoftAzureTools.VS120.exe to build Visual Studio 2013 projects.",
      "pos": [
        3207,
        3349
      ]
    },
    {
      "content": "Step 2: Build a Package using MSBuild Commands",
      "pos": [
        3354,
        3400
      ]
    },
    {
      "content": "This section describes how to construct an MSBuild command that builds an",
      "pos": [
        3402,
        3475
      ]
    },
    {
      "content": "Azure package.",
      "pos": [
        3476,
        3490
      ]
    },
    {
      "content": "Run this step on the build server to verify that",
      "pos": [
        3491,
        3539
      ]
    },
    {
      "content": "everything is configured correctly and that the MSBuild command does",
      "pos": [
        3540,
        3608
      ]
    },
    {
      "content": "what you want it to do.",
      "pos": [
        3609,
        3632
      ]
    },
    {
      "content": "You can either add this command line to existing",
      "pos": [
        3633,
        3681
      ]
    },
    {
      "content": "build scripts on the build server, or you can use the command line in a",
      "pos": [
        3682,
        3753
      ]
    },
    {
      "content": "TFS Build Definition, as described in the next section.",
      "pos": [
        3754,
        3809
      ]
    },
    {
      "content": "For more",
      "pos": [
        3810,
        3818
      ]
    },
    {
      "content": "information about command-line parameters and MSBuild, see <bpt id=\"p1\">[</bpt>MSBuild Command Line Reference<ept id=\"p1\">](https://msdn.microsoft.com/library/ms164311%28v=vs.140%29.aspx)</ept>.",
      "pos": [
        3819,
        3975
      ]
    },
    {
      "pos": [
        3981,
        4183
      ],
      "content": "If Visual Studio is installed on the build server, click\n**Start**, click **All Programs**, and then locate and click\n**Visual Studio Commmand Prompt** in the **Visual Studio Tools**\nfolder.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "If Visual Studio is installed on the build server, click",
          "pos": [
            0,
            56
          ]
        },
        {
          "content": "<bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>All Programs<ept id=\"p2\">**</ept>, and then locate and click",
          "pos": [
            57,
            117
          ]
        },
        {
          "content": "<bpt id=\"p1\">**</bpt>Visual Studio Commmand Prompt<ept id=\"p1\">**</ept> in the <bpt id=\"p2\">**</bpt>Visual Studio Tools<ept id=\"p2\">**</ept>",
          "pos": [
            118,
            182
          ]
        },
        {
          "content": "folder.",
          "pos": [
            183,
            190
          ]
        }
      ]
    },
    {
      "pos": [
        4189,
        4608
      ],
      "content": "If Visual Studio is not installed on the build server, open a\ncommand prompt and make sure that MSBuild.exe is accessible on the\npath. MSBuild is installed with the .NET Framework in the path\n%WINDIR%\\\\Microsoft.NET\\\\Framework\\\\*Version*. For example, to\nadd MSBuild.exe to the PATH environment variable when you have .NET\nFramework 4 installed, type the following command at the command\nprompt:",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "If Visual Studio is not installed on the build server, open a",
          "pos": [
            0,
            61
          ]
        },
        {
          "content": "command prompt and make sure that MSBuild.exe is accessible on the",
          "pos": [
            62,
            128
          ]
        },
        {
          "content": "path. MSBuild is installed with the .NET Framework in the path",
          "pos": [
            129,
            191
          ],
          "nodes": [
            {
              "content": "path.",
              "pos": [
                0,
                5
              ]
            },
            {
              "content": "MSBuild is installed with the .NET Framework in the path",
              "pos": [
                6,
                62
              ]
            }
          ]
        },
        {
          "content": "%WINDIR%\\\\Microsoft.NET\\\\Framework\\\\*Version*. For example, to",
          "pos": [
            192,
            254
          ],
          "nodes": [
            {
              "content": "%WINDIR%\\\\Microsoft.NET\\\\Framework\\\\<bpt id=\"p1\">*</bpt>Version<ept id=\"p1\">*</ept>.",
              "pos": [
                0,
                46
              ]
            },
            {
              "content": "For example, to",
              "pos": [
                47,
                62
              ]
            }
          ]
        },
        {
          "content": "add MSBuild.exe to the PATH environment variable when you have .NET",
          "pos": [
            255,
            322
          ]
        },
        {
          "content": "Framework 4 installed, type the following command at the command",
          "pos": [
            323,
            387
          ]
        },
        {
          "content": "prompt:",
          "pos": [
            388,
            395
          ]
        }
      ]
    },
    {
      "pos": [
        4687,
        4794
      ],
      "content": "At the command prompt, navigate to the folder containing the\nAzure project file that you want to build.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "At the command prompt, navigate to the folder containing the",
          "pos": [
            0,
            60
          ]
        },
        {
          "content": "Azure project file that you want to build.",
          "pos": [
            61,
            103
          ]
        }
      ]
    },
    {
      "pos": [
        4800,
        4876
      ],
      "content": "Run msbuild with the /target:Publish option as in the following\nexample:",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Run msbuild with the /target:Publish option as in the following",
          "pos": [
            0,
            63
          ]
        },
        {
          "content": "example:",
          "pos": [
            64,
            72
          ]
        }
      ]
    },
    {
      "pos": [
        4915,
        5259
      ],
      "content": "This option can be abbreviated as /t:Publish. The /t:Publish option\nin MSBuild should not be confused with the Publish commands\navailable in Visual Studio when you have the Azure SDK\ninstalled. The /t:Publish option only builds the Azure\npackages. It does not deploy the packages as the Publish commands in\nVisual Studio do.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "This option can be abbreviated as /t:Publish. The /t:Publish option",
          "pos": [
            0,
            67
          ],
          "nodes": [
            {
              "content": "This option can be abbreviated as /t:Publish.",
              "pos": [
                0,
                45
              ]
            },
            {
              "content": "The /t:Publish option",
              "pos": [
                46,
                67
              ]
            }
          ]
        },
        {
          "content": "in MSBuild should not be confused with the Publish commands",
          "pos": [
            68,
            127
          ]
        },
        {
          "content": "available in Visual Studio when you have the Azure SDK",
          "pos": [
            128,
            182
          ]
        },
        {
          "content": "installed. The /t:Publish option only builds the Azure",
          "pos": [
            183,
            237
          ],
          "nodes": [
            {
              "content": "installed.",
              "pos": [
                0,
                10
              ]
            },
            {
              "content": "The /t:Publish option only builds the Azure",
              "pos": [
                11,
                54
              ]
            }
          ]
        },
        {
          "content": "packages. It does not deploy the packages as the Publish commands in",
          "pos": [
            238,
            306
          ],
          "nodes": [
            {
              "content": "packages.",
              "pos": [
                0,
                9
              ]
            },
            {
              "content": "It does not deploy the packages as the Publish commands in",
              "pos": [
                10,
                68
              ]
            }
          ]
        },
        {
          "content": "Visual Studio do.",
          "pos": [
            307,
            324
          ]
        }
      ]
    },
    {
      "pos": [
        5265,
        5493
      ],
      "content": "Optionally, you can specify the project name as an MSBuild\nparameter. If not specified, the current directory is used. For more\ninformation about MSBuild command line options, see [MSBuild Command\nLine Reference][1].",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Optionally, you can specify the project name as an MSBuild",
          "pos": [
            0,
            58
          ]
        },
        {
          "content": "parameter. If not specified, the current directory is used. For more",
          "pos": [
            59,
            127
          ],
          "nodes": [
            {
              "content": "parameter.",
              "pos": [
                0,
                10
              ]
            },
            {
              "content": "If not specified, the current directory is used.",
              "pos": [
                11,
                59
              ]
            },
            {
              "content": "For more",
              "pos": [
                60,
                68
              ]
            }
          ]
        },
        {
          "content": "information about MSBuild command line options, see <bpt id=\"p1\">[</bpt>MSBuild Command\nLine Reference<ept id=\"p1\">][1]</ept>.",
          "pos": [
            128,
            216
          ]
        }
      ]
    },
    {
      "pos": [
        5499,
        5807
      ],
      "content": "Locate the output. By default, this command creates a directory in\nrelation to the root folder for the project, such as\n*ProjectDir*\\\\bin\\\\*Configuration*\\\\app.publish\\\\. When you\nbuild an Azure project, you generate two files, the package\nfile itself and the accompanying configuration file:",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Locate the output. By default, this command creates a directory in",
          "pos": [
            0,
            66
          ],
          "nodes": [
            {
              "content": "Locate the output.",
              "pos": [
                0,
                18
              ]
            },
            {
              "content": "By default, this command creates a directory in",
              "pos": [
                19,
                66
              ]
            }
          ]
        },
        {
          "content": "relation to the root folder for the project, such as",
          "pos": [
            67,
            119
          ]
        },
        {
          "content": "*ProjectDir*\\\\bin\\\\*Configuration*\\\\app.publish\\\\. When you",
          "pos": [
            120,
            179
          ],
          "nodes": [
            {
              "content": "<bpt id=\"p1\">*</bpt>ProjectDir<ept id=\"p1\">*</ept>\\\\bin\\\\<bpt id=\"p2\">*</bpt>Configuration<ept id=\"p2\">*</ept>\\\\app.publish\\\\.",
              "pos": [
                0,
                50
              ]
            },
            {
              "content": "When you",
              "pos": [
                51,
                59
              ]
            }
          ]
        },
        {
          "content": "build an Azure project, you generate two files, the package",
          "pos": [
            180,
            239
          ]
        },
        {
          "content": "file itself and the accompanying configuration file:",
          "pos": [
            240,
            292
          ]
        }
      ]
    },
    {
      "content": "Project.cspkg",
      "pos": [
        5817,
        5830
      ]
    },
    {
      "pos": [
        5839,
        5881
      ],
      "content": "ServiceConfiguration.<bpt id=\"p1\">*</bpt>TargetProfile<ept id=\"p1\">*</ept>.cscfg"
    },
    {
      "pos": [
        5887,
        6271
      ],
      "content": "By default, each Azure project includes one\nservice configuration file (.cscfg file) for local (debugging)\nbuilds and another for cloud (staging or production) builds, but you\ncan add or remove service configuration files as needed. When you\nbuild a package within Visual Studio, you will be asked which\nservice configuration file to include alongside the package.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "By default, each Azure project includes one",
          "pos": [
            0,
            43
          ]
        },
        {
          "content": "service configuration file (.cscfg file) for local (debugging)",
          "pos": [
            44,
            106
          ]
        },
        {
          "content": "builds and another for cloud (staging or production) builds, but you",
          "pos": [
            107,
            175
          ]
        },
        {
          "content": "can add or remove service configuration files as needed. When you",
          "pos": [
            176,
            241
          ],
          "nodes": [
            {
              "content": "can add or remove service configuration files as needed.",
              "pos": [
                0,
                56
              ]
            },
            {
              "content": "When you",
              "pos": [
                57,
                65
              ]
            }
          ]
        },
        {
          "content": "build a package within Visual Studio, you will be asked which",
          "pos": [
            242,
            303
          ]
        },
        {
          "content": "service configuration file to include alongside the package.",
          "pos": [
            304,
            364
          ]
        }
      ]
    },
    {
      "pos": [
        6277,
        6571
      ],
      "content": "Specify the service configuration file. When you build a package by\nusing MSBuild, the local service configuration file is included by\ndefault. To include a different service configuration file, set the\nTargetProfile property of the MSBuild command, as in the following\nexample:",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Specify the service configuration file. When you build a package by",
          "pos": [
            0,
            67
          ],
          "nodes": [
            {
              "content": "Specify the service configuration file.",
              "pos": [
                0,
                39
              ]
            },
            {
              "content": "When you build a package by",
              "pos": [
                40,
                67
              ]
            }
          ]
        },
        {
          "content": "using MSBuild, the local service configuration file is included by",
          "pos": [
            68,
            134
          ]
        },
        {
          "content": "default. To include a different service configuration file, set the",
          "pos": [
            135,
            202
          ],
          "nodes": [
            {
              "content": "default.",
              "pos": [
                0,
                8
              ]
            },
            {
              "content": "To include a different service configuration file, set the",
              "pos": [
                9,
                67
              ]
            }
          ]
        },
        {
          "content": "TargetProfile property of the MSBuild command, as in the following",
          "pos": [
            203,
            269
          ]
        },
        {
          "content": "example:",
          "pos": [
            270,
            278
          ]
        }
      ]
    },
    {
      "pos": [
        6628,
        6807
      ],
      "content": "Specify the location for the output. Set the path by using the\n/p:PublishDir=*Directory*\\\\ option, including the trailing\nbackslash separator, as in the following example:",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Specify the location for the output. Set the path by using the",
          "pos": [
            0,
            62
          ],
          "nodes": [
            {
              "content": "Specify the location for the output.",
              "pos": [
                0,
                36
              ]
            },
            {
              "content": "Set the path by using the",
              "pos": [
                37,
                62
              ]
            }
          ]
        },
        {
          "content": "/p:PublishDir=<bpt id=\"p1\">*</bpt>Directory<ept id=\"p1\">*</ept>\\\\ option, including the trailing",
          "pos": [
            63,
            121
          ]
        },
        {
          "content": "backslash separator, as in the following example:",
          "pos": [
            122,
            171
          ]
        }
      ]
    },
    {
      "pos": [
        6878,
        7355
      ],
      "content": "Once you've constructed and tested an appropriate MSBuild command\nline to build your projects and combine them into an Azure package,\nyou can add this command line to your build scripts. If your build\nserver uses custom scripts, this process will depend on the\nspecifics of your custom build process. If you are using TFS as a\nbuild environment, then you can follow the instructions in the next\nstep to add the Azure package build to your build process.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Once you've constructed and tested an appropriate MSBuild command",
          "pos": [
            0,
            65
          ]
        },
        {
          "content": "line to build your projects and combine them into an Azure package,",
          "pos": [
            66,
            133
          ]
        },
        {
          "content": "you can add this command line to your build scripts. If your build",
          "pos": [
            134,
            200
          ],
          "nodes": [
            {
              "content": "you can add this command line to your build scripts.",
              "pos": [
                0,
                52
              ]
            },
            {
              "content": "If your build",
              "pos": [
                53,
                66
              ]
            }
          ]
        },
        {
          "content": "server uses custom scripts, this process will depend on the",
          "pos": [
            201,
            260
          ]
        },
        {
          "content": "specifics of your custom build process. If you are using TFS as a",
          "pos": [
            261,
            326
          ],
          "nodes": [
            {
              "content": "specifics of your custom build process.",
              "pos": [
                0,
                39
              ]
            },
            {
              "content": "If you are using TFS as a",
              "pos": [
                40,
                65
              ]
            }
          ]
        },
        {
          "content": "build environment, then you can follow the instructions in the next",
          "pos": [
            327,
            394
          ]
        },
        {
          "content": "step to add the Azure package build to your build process.",
          "pos": [
            395,
            453
          ]
        }
      ]
    },
    {
      "content": "Step 3: Build a Package using TFS Team Build (Optional)",
      "pos": [
        7360,
        7415
      ]
    },
    {
      "content": "If you have Team Foundation Server (TFS) set up as a build controller",
      "pos": [
        7417,
        7486
      ]
    },
    {
      "content": "and the build server set up as a TFS build machine, then you can set up",
      "pos": [
        7487,
        7558
      ]
    },
    {
      "content": "an automated build for your Azure package.",
      "pos": [
        7559,
        7601
      ]
    },
    {
      "content": "For information on",
      "pos": [
        7602,
        7620
      ]
    },
    {
      "content": "how to set up and use Team Foundation server as a build system, see",
      "pos": [
        7621,
        7688
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Scale out your build system<ept id=\"p1\">][]</ept>.",
      "pos": [
        7689,
        7721
      ]
    },
    {
      "content": "In particular, the",
      "pos": [
        7722,
        7740
      ]
    },
    {
      "content": "following procedure assumes that you have configured your build server",
      "pos": [
        7741,
        7811
      ]
    },
    {
      "content": "as described in <bpt id=\"p1\">[</bpt>Deploy and configure a build server<ept id=\"p1\">][]</ept>, and that you have created",
      "pos": [
        7812,
        7894
      ]
    },
    {
      "content": "a team project, created a cloud service project in the team project.",
      "pos": [
        7895,
        7963
      ]
    },
    {
      "content": "To configure TFS to build Azure packages, perform the following",
      "pos": [
        7965,
        8028
      ]
    },
    {
      "content": "steps:",
      "pos": [
        8029,
        8035
      ]
    },
    {
      "pos": [
        8041,
        8294
      ],
      "content": "In Visual Studio on your development computer, on the View\nmenu, choose **Team Explorer**, or choose Ctrl+\\\\, Ctrl+M. In the\nTeam Explorer window, expand the **Builds** node or choose the **Builds**\npage, and choose **New Build Definition**.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "In Visual Studio on your development computer, on the View",
          "pos": [
            0,
            58
          ]
        },
        {
          "content": "menu, choose **Team Explorer**, or choose Ctrl+\\\\, Ctrl+M. In the",
          "pos": [
            59,
            124
          ],
          "nodes": [
            {
              "content": "menu, choose <bpt id=\"p1\">**</bpt>Team Explorer<ept id=\"p1\">**</ept>, or choose Ctrl+\\\\, Ctrl+M.",
              "pos": [
                0,
                58
              ]
            },
            {
              "content": "In the",
              "pos": [
                59,
                65
              ]
            }
          ]
        },
        {
          "content": "Team Explorer window, expand the <bpt id=\"p1\">**</bpt>Builds<ept id=\"p1\">**</ept> node or choose the <bpt id=\"p2\">**</bpt>Builds<ept id=\"p2\">**</ept>",
          "pos": [
            125,
            198
          ]
        },
        {
          "content": "page, and choose <bpt id=\"p1\">**</bpt>New Build Definition<ept id=\"p1\">**</ept>.",
          "pos": [
            199,
            241
          ]
        }
      ]
    },
    {
      "pos": [
        8312,
        8540
      ],
      "content": "Click the **Trigger** tab, and specify the desired conditions for\nwhen you want the package to be built. For example, specify\n**Continuous Integration** to build the package whenever a source\ncontrol check-in occurs.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Click the <bpt id=\"p1\">**</bpt>Trigger<ept id=\"p1\">**</ept> tab, and specify the desired conditions for",
          "pos": [
            0,
            65
          ]
        },
        {
          "content": "when you want the package to be built. For example, specify",
          "pos": [
            66,
            125
          ],
          "nodes": [
            {
              "content": "when you want the package to be built.",
              "pos": [
                0,
                38
              ]
            },
            {
              "content": "For example, specify",
              "pos": [
                39,
                59
              ]
            }
          ]
        },
        {
          "content": "<bpt id=\"p1\">**</bpt>Continuous Integration<ept id=\"p1\">**</ept> to build the package whenever a source",
          "pos": [
            126,
            191
          ]
        },
        {
          "content": "control check-in occurs.",
          "pos": [
            192,
            216
          ]
        }
      ]
    },
    {
      "pos": [
        8546,
        8700
      ],
      "content": "Choose the **Source Settings** tab, and make sure your project folder is listed\nin the **Source Control Folder** column, and the status is **Active**.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Choose the <bpt id=\"p1\">**</bpt>Source Settings<ept id=\"p1\">**</ept> tab, and make sure your project folder is listed",
          "pos": [
            0,
            79
          ]
        },
        {
          "content": "in the <bpt id=\"p1\">**</bpt>Source Control Folder<ept id=\"p1\">**</ept> column, and the status is <bpt id=\"p2\">**</bpt>Active<ept id=\"p2\">**</ept>.",
          "pos": [
            80,
            150
          ]
        }
      ]
    },
    {
      "pos": [
        8706,
        8932
      ],
      "content": "Choose the **Build Defaults** tab, and under Build controller, verify\nthe name of the build server.  Also, choose the option **Copy build\noutput to the following drop folder** and specify the desired drop\nlocation.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Choose the <bpt id=\"p1\">**</bpt>Build Defaults<ept id=\"p1\">**</ept> tab, and under Build controller, verify",
          "pos": [
            0,
            69
          ]
        },
        {
          "content": "the name of the build server.  Also, choose the option **Copy build\noutput to the following drop folder** and specify the desired drop",
          "pos": [
            70,
            204
          ],
          "nodes": [
            {
              "content": "the name of the build server.",
              "pos": [
                0,
                29
              ]
            },
            {
              "content": "Also, choose the option <bpt id=\"p1\">**</bpt>Copy build\noutput to the following drop folder<ept id=\"p1\">**</ept> and specify the desired drop",
              "pos": [
                31,
                134
              ]
            }
          ]
        },
        {
          "content": "location.",
          "pos": [
            205,
            214
          ]
        }
      ]
    },
    {
      "pos": [
        8938,
        9162
      ],
      "content": "Click the **Process** tab. On the Process tab, choose the default\ntemplate, under **Build**, choose the project if it is not already selected,\nand expand the **Advanced** section in the **Build** section of the grid.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Click the **Process** tab. On the Process tab, choose the default",
          "pos": [
            0,
            65
          ],
          "nodes": [
            {
              "content": "Click the <bpt id=\"p1\">**</bpt>Process<ept id=\"p1\">**</ept> tab.",
              "pos": [
                0,
                26
              ]
            },
            {
              "content": "On the Process tab, choose the default",
              "pos": [
                27,
                65
              ]
            }
          ]
        },
        {
          "content": "template, under <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept>, choose the project if it is not already selected,",
          "pos": [
            66,
            142
          ]
        },
        {
          "content": "and expand the <bpt id=\"p1\">**</bpt>Advanced<ept id=\"p1\">**</ept> section in the <bpt id=\"p2\">**</bpt>Build<ept id=\"p2\">**</ept> section of the grid.",
          "pos": [
            143,
            216
          ]
        }
      ]
    },
    {
      "pos": [
        9168,
        9453
      ],
      "content": "Choose **MSBuild Arguments**, and set the appropriate MSBuild\ncommand line arguments as described in Step 2 above. For example,\nenter **/t:Publish /p:PublishDir=\\\\\\\\myserver\\\\drops\\\\** to build a\npackage and copy the package files to the location\n\\\\\\\\myserver\\\\drops\\\\:",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Choose <bpt id=\"p1\">**</bpt>MSBuild Arguments<ept id=\"p1\">**</ept>, and set the appropriate MSBuild",
          "pos": [
            0,
            61
          ]
        },
        {
          "content": "command line arguments as described in Step 2 above. For example,",
          "pos": [
            62,
            127
          ],
          "nodes": [
            {
              "content": "command line arguments as described in Step 2 above.",
              "pos": [
                0,
                52
              ]
            },
            {
              "content": "For example,",
              "pos": [
                53,
                65
              ]
            }
          ]
        },
        {
          "content": "enter <bpt id=\"p1\">**</bpt>/t:Publish /p:PublishDir=\\\\\\\\myserver\\\\drops\\\\<ept id=\"p1\">**</ept> to build a",
          "pos": [
            128,
            195
          ]
        },
        {
          "content": "package and copy the package files to the location",
          "pos": [
            196,
            246
          ]
        },
        {
          "content": "\\\\\\\\myserver\\\\drops\\\\:",
          "pos": [
            247,
            269
          ]
        }
      ]
    },
    {
      "pos": [
        9471,
        9600
      ],
      "content": "**Note:** Copying the files to a public share makes it easier to\nmanually deploy the packages from your development computer.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Copying the files to a public share makes it easier to",
          "pos": [
            0,
            64
          ]
        },
        {
          "content": "manually deploy the packages from your development computer.",
          "pos": [
            65,
            125
          ]
        }
      ]
    },
    {
      "pos": [
        9606,
        9842
      ],
      "content": "Test the success of your build step by checking in a change to your\nproject, or queue up a new build. To queue up a new build, in the\nTeam Explorer, right-click **All Build Definitions,** and then\nchoose **Queue New Build**.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Test the success of your build step by checking in a change to your",
          "pos": [
            0,
            67
          ]
        },
        {
          "content": "project, or queue up a new build. To queue up a new build, in the",
          "pos": [
            68,
            133
          ],
          "nodes": [
            {
              "content": "project, or queue up a new build.",
              "pos": [
                0,
                33
              ]
            },
            {
              "content": "To queue up a new build, in the",
              "pos": [
                34,
                65
              ]
            }
          ]
        },
        {
          "content": "Team Explorer, right-click <bpt id=\"p1\">**</bpt>All Build Definitions,<ept id=\"p1\">**</ept> and then",
          "pos": [
            134,
            196
          ]
        },
        {
          "content": "choose <bpt id=\"p1\">**</bpt>Queue New Build<ept id=\"p1\">**</ept>.",
          "pos": [
            197,
            224
          ]
        }
      ]
    },
    {
      "content": "Step 4: Publish a Package using a PowerShell Script",
      "pos": [
        9847,
        9898
      ]
    },
    {
      "content": "This section describes how to construct a Windows PowerShell script that",
      "pos": [
        9900,
        9972
      ]
    },
    {
      "content": "will publish the Cloud app package output to Azure using",
      "pos": [
        9973,
        10029
      ]
    },
    {
      "content": "optional parameters.",
      "pos": [
        10030,
        10050
      ]
    },
    {
      "content": "This script can be called after the build step in",
      "pos": [
        10051,
        10100
      ]
    },
    {
      "content": "your custom build automation.",
      "pos": [
        10101,
        10130
      ]
    },
    {
      "content": "It can also be called from Process",
      "pos": [
        10131,
        10165
      ]
    },
    {
      "content": "Template workflow activities in Visual Studio TFS Team Build.",
      "pos": [
        10166,
        10227
      ]
    },
    {
      "pos": [
        10233,
        10516
      ],
      "content": "Install the [Azure PowerShell cmdlets][] (v0.6.1 or higher).\nDuring the cmdlet setup phase choose to install as a snap-in. Note\nthat this officially supported version replaces the older version\noffered through CodePlex, although the previous versions were numbered 2.x.x.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Install the <bpt id=\"p1\">[</bpt>Azure PowerShell cmdlets<ept id=\"p1\">][]</ept> (v0.6.1 or higher).",
          "pos": [
            0,
            60
          ]
        },
        {
          "content": "During the cmdlet setup phase choose to install as a snap-in. Note",
          "pos": [
            61,
            127
          ],
          "nodes": [
            {
              "content": "During the cmdlet setup phase choose to install as a snap-in.",
              "pos": [
                0,
                61
              ]
            },
            {
              "content": "Note",
              "pos": [
                62,
                66
              ]
            }
          ]
        },
        {
          "content": "that this officially supported version replaces the older version",
          "pos": [
            128,
            193
          ]
        },
        {
          "content": "offered through CodePlex, although the previous versions were numbered 2.x.x.",
          "pos": [
            194,
            271
          ]
        }
      ]
    },
    {
      "pos": [
        10522,
        10655
      ],
      "content": "Start Azure PowerShell using the Start menu or Start page. If you start in this way,\nthe Azure PowerShell cmdlets will be loaded.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Start Azure PowerShell using the Start menu or Start page. If you start in this way,",
          "pos": [
            0,
            84
          ],
          "nodes": [
            {
              "content": "Start Azure PowerShell using the Start menu or Start page.",
              "pos": [
                0,
                58
              ]
            },
            {
              "content": "If you start in this way,",
              "pos": [
                59,
                84
              ]
            }
          ]
        },
        {
          "content": "the Azure PowerShell cmdlets will be loaded.",
          "pos": [
            85,
            129
          ]
        }
      ]
    },
    {
      "pos": [
        10661,
        10828
      ],
      "content": "At the PowerShell prompt, verify that the PowerShell cmdlets are loaded\nby typing the partial command Get-Azure and then pressing tab for statement\ncompletion.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "At the PowerShell prompt, verify that the PowerShell cmdlets are loaded",
          "pos": [
            0,
            71
          ]
        },
        {
          "content": "by typing the partial command Get-Azure and then pressing tab for statement",
          "pos": [
            72,
            147
          ]
        },
        {
          "content": "completion.",
          "pos": [
            148,
            159
          ]
        }
      ]
    },
    {
      "content": "If you press tab repeatedly, you should see various Azure PowerShell commands.",
      "pos": [
        10834,
        10912
      ]
    },
    {
      "pos": [
        10918,
        11051
      ],
      "content": "Verify that you can connect to your Azure subscription by\nimporting your subscription information from the .publishsettings file.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Verify that you can connect to your Azure subscription by",
          "pos": [
            0,
            57
          ]
        },
        {
          "content": "importing your subscription information from the .publishsettings file.",
          "pos": [
            58,
            129
          ]
        }
      ]
    },
    {
      "content": "Import-AzurePublishSettingsFile c:\\scripts\\WindowsAzure\\default.publishsettings",
      "pos": [
        11057,
        11136
      ]
    },
    {
      "content": "Then give the command",
      "pos": [
        11142,
        11163
      ]
    },
    {
      "content": "Get-AzureSubscription",
      "pos": [
        11169,
        11190
      ]
    },
    {
      "content": "This will display information about your subscription.",
      "pos": [
        11196,
        11250
      ]
    },
    {
      "content": "Verify that everything is correct.",
      "pos": [
        11251,
        11285
      ]
    },
    {
      "pos": [
        11291,
        11445
      ],
      "content": "Save the script template provided at the [end of this article][] to\nyour scripts folder as\nc:\\\\scripts\\\\WindowsAzure\\\\**PublishCloudService.ps1**.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Save the script template provided at the <bpt id=\"p1\">[</bpt>end of this article<ept id=\"p1\">][]</ept> to",
          "pos": [
            0,
            67
          ]
        },
        {
          "content": "your scripts folder as",
          "pos": [
            68,
            90
          ]
        },
        {
          "content": "c:\\\\scripts\\\\WindowsAzure\\\\<bpt id=\"p1\">**</bpt>PublishCloudService.ps1<ept id=\"p1\">**</ept>.",
          "pos": [
            91,
            146
          ]
        }
      ]
    },
    {
      "pos": [
        11451,
        11610
      ],
      "content": "Review the parameters section of the script. Add or modify any\ndefault values. These values can always be overridden by passing in\nexplicit parameters.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Review the parameters section of the script. Add or modify any",
          "pos": [
            0,
            62
          ],
          "nodes": [
            {
              "content": "Review the parameters section of the script.",
              "pos": [
                0,
                44
              ]
            },
            {
              "content": "Add or modify any",
              "pos": [
                45,
                62
              ]
            }
          ]
        },
        {
          "content": "default values. These values can always be overridden by passing in",
          "pos": [
            63,
            130
          ],
          "nodes": [
            {
              "content": "default values.",
              "pos": [
                0,
                15
              ]
            },
            {
              "content": "These values can always be overridden by passing in",
              "pos": [
                16,
                67
              ]
            }
          ]
        },
        {
          "content": "explicit parameters.",
          "pos": [
            131,
            151
          ]
        }
      ]
    },
    {
      "pos": [
        11616,
        11920
      ],
      "content": "Ensure there are valid cloud service and storage accounts created\nin your subscription that can be targeted by the publish script. The\nstorage account (blob storage) will be used to upload and\ntemporarily store the deployment package and config file while the\ndeployment is being created.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Ensure there are valid cloud service and storage accounts created",
          "pos": [
            0,
            65
          ]
        },
        {
          "content": "in your subscription that can be targeted by the publish script. The",
          "pos": [
            66,
            134
          ],
          "nodes": [
            {
              "content": "in your subscription that can be targeted by the publish script.",
              "pos": [
                0,
                64
              ]
            },
            {
              "content": "The",
              "pos": [
                65,
                68
              ]
            }
          ]
        },
        {
          "content": "storage account (blob storage) will be used to upload and",
          "pos": [
            135,
            192
          ]
        },
        {
          "content": "temporarily store the deployment package and config file while the",
          "pos": [
            193,
            259
          ]
        },
        {
          "content": "deployment is being created.",
          "pos": [
            260,
            288
          ]
        }
      ]
    },
    {
      "pos": [
        11930,
        12155
      ],
      "content": "To create a new cloud service, you can call this script or use\nthe Azure Management Portal. The cloud service name\nwill be used as a prefix in a fully qualified domain name and\nhence it must be unique.",
      "leadings": [
        "",
        "        ",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "To create a new cloud service, you can call this script or use",
          "pos": [
            0,
            62
          ]
        },
        {
          "content": "the Azure Management Portal. The cloud service name",
          "pos": [
            63,
            114
          ],
          "nodes": [
            {
              "content": "the Azure Management Portal.",
              "pos": [
                0,
                28
              ]
            },
            {
              "content": "The cloud service name",
              "pos": [
                29,
                51
              ]
            }
          ]
        },
        {
          "content": "will be used as a prefix in a fully qualified domain name and",
          "pos": [
            115,
            176
          ]
        },
        {
          "content": "hence it must be unique.",
          "pos": [
            177,
            201
          ]
        }
      ]
    },
    {
      "pos": [
        12286,
        12577
      ],
      "content": "To create a new storage account, you can call this script or use\nthe Azure Management Portal. The storage account name\nwill be used as a prefix in a fully qualified domain name and\nhence it must be unique. You can try using the same name as the\ncloud service.",
      "leadings": [
        "",
        "        ",
        "        ",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "To create a new storage account, you can call this script or use",
          "pos": [
            0,
            64
          ]
        },
        {
          "content": "the Azure Management Portal. The storage account name",
          "pos": [
            65,
            118
          ],
          "nodes": [
            {
              "content": "the Azure Management Portal.",
              "pos": [
                0,
                28
              ]
            },
            {
              "content": "The storage account name",
              "pos": [
                29,
                53
              ]
            }
          ]
        },
        {
          "content": "will be used as a prefix in a fully qualified domain name and",
          "pos": [
            119,
            180
          ]
        },
        {
          "content": "hence it must be unique. You can try using the same name as the",
          "pos": [
            181,
            244
          ],
          "nodes": [
            {
              "content": "hence it must be unique.",
              "pos": [
                0,
                24
              ]
            },
            {
              "content": "You can try using the same name as the",
              "pos": [
                25,
                63
              ]
            }
          ]
        },
        {
          "content": "cloud service.",
          "pos": [
            245,
            259
          ]
        }
      ]
    },
    {
      "pos": [
        12711,
        12853
      ],
      "content": "Call the script directly from Azure PowerShell, or wire up this\nscript to your host build automation to occur after the package\nbuild.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Call the script directly from Azure PowerShell, or wire up this",
          "pos": [
            0,
            63
          ]
        },
        {
          "content": "script to your host build automation to occur after the package",
          "pos": [
            64,
            127
          ]
        },
        {
          "content": "build.",
          "pos": [
            128,
            134
          ]
        }
      ]
    },
    {
      "pos": [
        12859,
        13084
      ],
      "content": "**WARNING:** The script will always delete or replace your existing\ndeployments by default if they are detected. This is necessary to\nenable continuous delivery from automation where no user prompting\nis possible.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "<bpt id=\"p1\">**</bpt>WARNING:<ept id=\"p1\">**</ept> The script will always delete or replace your existing",
          "pos": [
            0,
            67
          ]
        },
        {
          "content": "deployments by default if they are detected. This is necessary to",
          "pos": [
            68,
            133
          ],
          "nodes": [
            {
              "content": "deployments by default if they are detected.",
              "pos": [
                0,
                44
              ]
            },
            {
              "content": "This is necessary to",
              "pos": [
                45,
                65
              ]
            }
          ]
        },
        {
          "content": "enable continuous delivery from automation where no user prompting",
          "pos": [
            134,
            200
          ]
        },
        {
          "content": "is possible.",
          "pos": [
            201,
            213
          ]
        }
      ]
    },
    {
      "pos": [
        13090,
        13180
      ],
      "content": "**Example scenario 1:** continuous deployment to the staging\nenvironment of a service:",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "<bpt id=\"p1\">**</bpt>Example scenario 1:<ept id=\"p1\">**</ept> continuous deployment to the staging",
          "pos": [
            0,
            60
          ]
        },
        {
          "content": "environment of a service:",
          "pos": [
            61,
            86
          ]
        }
      ]
    },
    {
      "pos": [
        13538,
        13713
      ],
      "content": "This is typically followed up by test run verification and a VIP\nswap. The VIP swap can be done via the Azure Management\nPortal or by using the Move-Deployment cmdlet.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "This is typically followed up by test run verification and a VIP",
          "pos": [
            0,
            64
          ]
        },
        {
          "content": "swap. The VIP swap can be done via the Azure Management",
          "pos": [
            65,
            120
          ],
          "nodes": [
            {
              "content": "swap.",
              "pos": [
                0,
                5
              ]
            },
            {
              "content": "The VIP swap can be done via the Azure Management",
              "pos": [
                6,
                55
              ]
            }
          ]
        },
        {
          "content": "Portal or by using the Move-Deployment cmdlet.",
          "pos": [
            121,
            167
          ]
        }
      ]
    },
    {
      "pos": [
        13719,
        13826
      ],
      "content": "**Example scenario 2:** continuous deployment to the production\nenvironment of a dedicated test service",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "<bpt id=\"p1\">**</bpt>Example scenario 2:<ept id=\"p1\">**</ept> continuous deployment to the production",
          "pos": [
            0,
            63
          ]
        },
        {
          "content": "environment of a dedicated test service",
          "pos": [
            64,
            103
          ]
        }
      ]
    },
    {
      "content": "Remote Desktop:",
      "pos": [
        14215,
        14230
      ]
    },
    {
      "pos": [
        14238,
        14458
      ],
      "content": "If Remote Desktop is enabled in your Azure project you will\nneed to perform additional one-time steps to ensure the correct\nCloud Service Certificate is uploaded to all cloud services\ntargeted by this script.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "If Remote Desktop is enabled in your Azure project you will",
          "pos": [
            0,
            59
          ]
        },
        {
          "content": "need to perform additional one-time steps to ensure the correct",
          "pos": [
            60,
            123
          ]
        },
        {
          "content": "Cloud Service Certificate is uploaded to all cloud services",
          "pos": [
            124,
            183
          ]
        },
        {
          "content": "targeted by this script.",
          "pos": [
            184,
            208
          ]
        }
      ]
    },
    {
      "pos": [
        14464,
        14808
      ],
      "content": "Locate the certificate thumbprint values expected by your roles. The\nthumbprint values are visible in the Certificates section of the\ncloud config file (i.e. ServiceConfiguration.Cloud.cscfg). It is\nalso visible in the Remote Desktop Configuration dialog in Visual\nStudio when you Show Options and view the selected certificate.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Locate the certificate thumbprint values expected by your roles. The",
          "pos": [
            0,
            68
          ],
          "nodes": [
            {
              "content": "Locate the certificate thumbprint values expected by your roles.",
              "pos": [
                0,
                64
              ]
            },
            {
              "content": "The",
              "pos": [
                65,
                68
              ]
            }
          ]
        },
        {
          "content": "thumbprint values are visible in the Certificates section of the",
          "pos": [
            69,
            133
          ]
        },
        {
          "content": "cloud config file (i.e. ServiceConfiguration.Cloud.cscfg). It is",
          "pos": [
            134,
            198
          ],
          "nodes": [
            {
              "content": "cloud config file (i.e. ServiceConfiguration.Cloud.cscfg).",
              "pos": [
                0,
                58
              ]
            },
            {
              "content": "It is",
              "pos": [
                59,
                64
              ]
            }
          ]
        },
        {
          "content": "also visible in the Remote Desktop Configuration dialog in Visual",
          "pos": [
            199,
            264
          ]
        },
        {
          "content": "Studio when you Show Options and view the selected certificate.",
          "pos": [
            265,
            328
          ]
        }
      ]
    },
    {
      "pos": [
        15043,
        15141
      ],
      "content": "Upload Remote Desktop certificates as a one-time setup step using\nthe following cmdlet script:",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Upload Remote Desktop certificates as a one-time setup step using",
          "pos": [
            0,
            65
          ]
        },
        {
          "content": "the following cmdlet script:",
          "pos": [
            66,
            94
          ]
        }
      ]
    },
    {
      "content": "For example:",
      "pos": [
        15268,
        15280
      ]
    },
    {
      "pos": [
        15436,
        15718
      ],
      "content": "Alternatively you can export the certificate file PFX with private\nkey and upload certificates to each target cloud service using the\nAzure Management Portal. Read the following article to learn\nmore:\n[http://msdn.microsoft.com/library/windowsazure/gg443832.aspx][].",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Alternatively you can export the certificate file PFX with private",
          "pos": [
            0,
            66
          ]
        },
        {
          "content": "key and upload certificates to each target cloud service using the",
          "pos": [
            67,
            133
          ]
        },
        {
          "content": "Azure Management Portal. Read the following article to learn",
          "pos": [
            134,
            194
          ],
          "nodes": [
            {
              "content": "Azure Management Portal.",
              "pos": [
                0,
                24
              ]
            },
            {
              "content": "Read the following article to learn",
              "pos": [
                25,
                60
              ]
            }
          ]
        },
        {
          "content": "more:",
          "pos": [
            195,
            200
          ]
        },
        {
          "content": "[http://msdn.microsoft.com/library/windowsazure/gg443832.aspx][].",
          "pos": [
            201,
            266
          ]
        }
      ]
    },
    {
      "content": "Upgrade Deployment vs. Delete Deployment -\\&gt; New Deployment",
      "pos": [
        15726,
        15785
      ]
    },
    {
      "pos": [
        15793,
        16258
      ],
      "content": "The script will by default perform an Upgrade Deployment\n($enableDeploymentUpgrade = 1) when no parameter is passed in or the\nvalue 1 is passed explicitly. For single instances this has the\nadvantage of taking less time than a full deployment. For instances\nthat require high availability this also has the advantage of\nleaving some instances running while others are upgraded (walking\nyour update domain), plus your VIP will not be deleted.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "The script will by default perform an Upgrade Deployment",
          "pos": [
            0,
            56
          ]
        },
        {
          "content": "($enableDeploymentUpgrade = 1) when no parameter is passed in or the",
          "pos": [
            57,
            125
          ]
        },
        {
          "content": "value 1 is passed explicitly. For single instances this has the",
          "pos": [
            126,
            189
          ],
          "nodes": [
            {
              "content": "value 1 is passed explicitly.",
              "pos": [
                0,
                29
              ]
            },
            {
              "content": "For single instances this has the",
              "pos": [
                30,
                63
              ]
            }
          ]
        },
        {
          "content": "advantage of taking less time than a full deployment. For instances",
          "pos": [
            190,
            257
          ],
          "nodes": [
            {
              "content": "advantage of taking less time than a full deployment.",
              "pos": [
                0,
                53
              ]
            },
            {
              "content": "For instances",
              "pos": [
                54,
                67
              ]
            }
          ]
        },
        {
          "content": "that require high availability this also has the advantage of",
          "pos": [
            258,
            319
          ]
        },
        {
          "content": "leaving some instances running while others are upgraded (walking",
          "pos": [
            320,
            385
          ]
        },
        {
          "content": "your update domain), plus your VIP will not be deleted.",
          "pos": [
            386,
            441
          ]
        }
      ]
    },
    {
      "pos": [
        16264,
        16527
      ],
      "content": "Upgrade Deployment can be disabled in the script\n($enableDeploymentUpgrade = 0) or by passing\n-enableDeploymentUpgrade 0 as a parameter, which will alter the\nscript behavior to first delete any existing deployment and then\ncreate a new deployment.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Upgrade Deployment can be disabled in the script",
          "pos": [
            0,
            48
          ]
        },
        {
          "content": "($enableDeploymentUpgrade = 0) or by passing",
          "pos": [
            49,
            93
          ]
        },
        {
          "content": "-enableDeploymentUpgrade 0 as a parameter, which will alter the",
          "pos": [
            94,
            157
          ]
        },
        {
          "content": "script behavior to first delete any existing deployment and then",
          "pos": [
            158,
            222
          ]
        },
        {
          "content": "create a new deployment.",
          "pos": [
            223,
            247
          ]
        }
      ]
    },
    {
      "pos": [
        16533,
        16767
      ],
      "content": "**Warning:** The script will always delete or replace your existing\ndeployments by default if they are detected. This is necessary to\nenable continuous delivery from automation where no user/operator\nprompting is possible.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "<bpt id=\"p1\">**</bpt>Warning:<ept id=\"p1\">**</ept> The script will always delete or replace your existing",
          "pos": [
            0,
            67
          ]
        },
        {
          "content": "deployments by default if they are detected. This is necessary to",
          "pos": [
            68,
            133
          ],
          "nodes": [
            {
              "content": "deployments by default if they are detected.",
              "pos": [
                0,
                44
              ]
            },
            {
              "content": "This is necessary to",
              "pos": [
                45,
                65
              ]
            }
          ]
        },
        {
          "content": "enable continuous delivery from automation where no user/operator",
          "pos": [
            134,
            199
          ]
        },
        {
          "content": "prompting is possible.",
          "pos": [
            200,
            222
          ]
        }
      ]
    },
    {
      "content": "Step 5: Publish a Package using TFS Team Build (Optional)",
      "pos": [
        16772,
        16829
      ]
    },
    {
      "content": "This step will wire up TFS Team Build to the script created in step 4,",
      "pos": [
        16831,
        16901
      ]
    },
    {
      "content": "which handles publishing of the package build to Azure.",
      "pos": [
        16902,
        16957
      ]
    },
    {
      "content": "This",
      "pos": [
        16958,
        16962
      ]
    },
    {
      "content": "entails modifying the Process Template used by your build definition so",
      "pos": [
        16963,
        17034
      ]
    },
    {
      "content": "that it runs a Publish activity at the end of the workflow.",
      "pos": [
        17035,
        17094
      ]
    },
    {
      "content": "The Publish",
      "pos": [
        17095,
        17106
      ]
    },
    {
      "content": "activity will execute your PowerShell command passing in parameters from",
      "pos": [
        17107,
        17179
      ]
    },
    {
      "content": "the build.",
      "pos": [
        17180,
        17190
      ]
    },
    {
      "content": "Output of the MSBuild targets and publish script will be",
      "pos": [
        17191,
        17247
      ]
    },
    {
      "content": "piped into the standard build output.",
      "pos": [
        17248,
        17285
      ]
    },
    {
      "content": "Edit the Build Definition responsible for continuous deploy.",
      "pos": [
        17291,
        17351
      ]
    },
    {
      "pos": [
        17357,
        17384
      ],
      "content": "Select the <bpt id=\"p1\">**</bpt>Process<ept id=\"p1\">**</ept> tab."
    },
    {
      "pos": [
        17390,
        17686
      ],
      "content": "Follow [these instructions](http://msdn.microsoft.com/library/dd647551.aspx) to add an\nActivity project for the build process template, download the default template, add it to\nthe project and check it in. Give the build process template a new name, such as\nAzureBuildProcessTemplate.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Follow <bpt id=\"p1\">[</bpt>these instructions<ept id=\"p1\">](http://msdn.microsoft.com/library/dd647551.aspx)</ept> to add an",
          "pos": [
            0,
            86
          ]
        },
        {
          "content": "Activity project for the build process template, download the default template, add it to",
          "pos": [
            87,
            176
          ]
        },
        {
          "content": "the project and check it in. Give the build process template a new name, such as",
          "pos": [
            177,
            257
          ],
          "nodes": [
            {
              "content": "the project and check it in.",
              "pos": [
                0,
                28
              ]
            },
            {
              "content": "Give the build process template a new name, such as",
              "pos": [
                29,
                80
              ]
            }
          ]
        },
        {
          "content": "AzureBuildProcessTemplate.",
          "pos": [
            258,
            284
          ]
        }
      ]
    },
    {
      "pos": [
        17692,
        17953
      ],
      "content": "Return to the **Process** tab, and use **Show Details** to show a list of available\nbuild process templates. Choose the **New...** button, and navigate to the project you\njust added and checked in. Locate the template you just created and choose **OK**.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Return to the <bpt id=\"p1\">**</bpt>Process<ept id=\"p1\">**</ept> tab, and use <bpt id=\"p2\">**</bpt>Show Details<ept id=\"p2\">**</ept> to show a list of available",
          "pos": [
            0,
            83
          ]
        },
        {
          "content": "build process templates. Choose the **New...** button, and navigate to the project you",
          "pos": [
            84,
            170
          ],
          "nodes": [
            {
              "content": "build process templates.",
              "pos": [
                0,
                24
              ]
            },
            {
              "content": "Choose the <bpt id=\"p1\">**</bpt>New...<ept id=\"p1\">**</ept> button, and navigate to the project you",
              "pos": [
                25,
                86
              ]
            }
          ]
        },
        {
          "content": "just added and checked in. Locate the template you just created and choose **OK**.",
          "pos": [
            171,
            253
          ],
          "nodes": [
            {
              "content": "just added and checked in.",
              "pos": [
                0,
                26
              ]
            },
            {
              "content": "Locate the template you just created and choose <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.",
              "pos": [
                27,
                82
              ]
            }
          ]
        }
      ]
    },
    {
      "pos": [
        17959,
        18105
      ],
      "content": "Open the selected Process Template for editing. You can open\ndirectly in the Workflow designer or in the XML editor to work with\nthe XAML.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Open the selected Process Template for editing. You can open",
          "pos": [
            0,
            60
          ],
          "nodes": [
            {
              "content": "Open the selected Process Template for editing.",
              "pos": [
                0,
                47
              ]
            },
            {
              "content": "You can open",
              "pos": [
                48,
                60
              ]
            }
          ]
        },
        {
          "content": "directly in the Workflow designer or in the XML editor to work with",
          "pos": [
            61,
            128
          ]
        },
        {
          "content": "the XAML.",
          "pos": [
            129,
            138
          ]
        }
      ]
    },
    {
      "pos": [
        18111,
        18423
      ],
      "content": "Add the following list of new arguments as separate line items in\nthe arguments tab of the workflow designer. All arguments should\nhave direction=In and type=String. These will be used to flow\nparameters from the build definition into the workflow, which then\nget used to call the publish script.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Add the following list of new arguments as separate line items in",
          "pos": [
            0,
            65
          ]
        },
        {
          "content": "the arguments tab of the workflow designer. All arguments should",
          "pos": [
            66,
            130
          ],
          "nodes": [
            {
              "content": "the arguments tab of the workflow designer.",
              "pos": [
                0,
                43
              ]
            },
            {
              "content": "All arguments should",
              "pos": [
                44,
                64
              ]
            }
          ]
        },
        {
          "content": "have direction=In and type=String. These will be used to flow",
          "pos": [
            131,
            192
          ],
          "nodes": [
            {
              "content": "have direction=In and type=String.",
              "pos": [
                0,
                34
              ]
            },
            {
              "content": "These will be used to flow",
              "pos": [
                35,
                61
              ]
            }
          ]
        },
        {
          "content": "parameters from the build definition into the workflow, which then",
          "pos": [
            193,
            259
          ]
        },
        {
          "content": "get used to call the publish script.",
          "pos": [
            260,
            296
          ]
        }
      ]
    },
    {
      "content": "The corresponding XAML looks like this:",
      "pos": [
        18653,
        18692
      ]
    },
    {
      "content": "Add a new sequence at the end of Run On Agent:",
      "pos": [
        21154,
        21200
      ]
    },
    {
      "pos": [
        21210,
        21325
      ],
      "content": "Start by adding an If Statement activity to check for a valid\nscript file. Set the condition to this value:",
      "leadings": [
        "",
        "        "
      ],
      "nodes": [
        {
          "content": "Start by adding an If Statement activity to check for a valid",
          "pos": [
            0,
            61
          ]
        },
        {
          "content": "script file. Set the condition to this value:",
          "pos": [
            62,
            107
          ],
          "nodes": [
            {
              "content": "script file.",
              "pos": [
                0,
                12
              ]
            },
            {
              "content": "Set the condition to this value:",
              "pos": [
                13,
                45
              ]
            }
          ]
        }
      ]
    },
    {
      "pos": [
        21396,
        21510
      ],
      "content": "In the Then case of the If Statement, add a new Sequence\nactivity. Set the display name to 'Start publish'",
      "leadings": [
        "",
        "        "
      ],
      "nodes": [
        {
          "content": "In the Then case of the If Statement, add a new Sequence",
          "pos": [
            0,
            56
          ]
        },
        {
          "content": "activity. Set the display name to 'Start publish'",
          "pos": [
            57,
            106
          ],
          "nodes": [
            {
              "content": "activity.",
              "pos": [
                0,
                9
              ]
            },
            {
              "content": "Set the display name to 'Start publish'",
              "pos": [
                10,
                49
              ]
            }
          ]
        }
      ]
    },
    {
      "pos": [
        21520,
        21921
      ],
      "content": "With the Start publish sequence still selected, add the\nfollowing list of new variables as separate line items in the\nvariables tab of the workflow designer. All variables should\nhave Variable type =String and Scope=Start publish. These will\nbe used to flow parameters from the build definition into the\nworkflow, which then get used to call the publish script.",
      "leadings": [
        "",
        "        ",
        "        ",
        "        ",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "With the Start publish sequence still selected, add the",
          "pos": [
            0,
            55
          ]
        },
        {
          "content": "following list of new variables as separate line items in the",
          "pos": [
            56,
            117
          ]
        },
        {
          "content": "variables tab of the workflow designer. All variables should",
          "pos": [
            118,
            178
          ],
          "nodes": [
            {
              "content": "variables tab of the workflow designer.",
              "pos": [
                0,
                39
              ]
            },
            {
              "content": "All variables should",
              "pos": [
                40,
                60
              ]
            }
          ]
        },
        {
          "content": "have Variable type =String and Scope=Start publish. These will",
          "pos": [
            179,
            241
          ],
          "nodes": [
            {
              "content": "have Variable type =String and Scope=Start publish.",
              "pos": [
                0,
                51
              ]
            },
            {
              "content": "These will",
              "pos": [
                52,
                62
              ]
            }
          ]
        },
        {
          "content": "be used to flow parameters from the build definition into the",
          "pos": [
            242,
            303
          ]
        },
        {
          "content": "workflow, which then get used to call the publish script.",
          "pos": [
            304,
            361
          ]
        }
      ]
    },
    {
      "content": "SubscriptionDataFilePath, of type String",
      "pos": [
        21935,
        21975
      ]
    },
    {
      "content": "PublishScriptFilePath, of type String",
      "pos": [
        21989,
        22026
      ]
    },
    {
      "pos": [
        22056,
        22784
      ],
      "content": "If you are using TFS 2012 or earlier, add a ConvertWorkspaceItem activity at the beginning of the new\nSequence. If you are using TFS 2013 or later, add a GetLocalPath activity at the beginning of the new sequence. For a ConvertWorkspaceItem, set the properties as follows: Direction=ServerToLocal, DisplayName='Convert publish\nscript filename', Input=' PublishScriptLocation',\nResult='PublishScriptFilePath', Workspace='Workspace'. For a GetLocalPath activity, set the property IncomingPath to 'PublishScriptLocation', and the Result to 'PublishScriptFilePath'. This\nactivity converts the path to the publish script from TFS server\nlocations (if applicable) to a standard local disk path.",
      "leadings": [
        "",
        "        ",
        "        ",
        "        ",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "If you are using TFS 2012 or earlier, add a ConvertWorkspaceItem activity at the beginning of the new",
          "pos": [
            0,
            101
          ]
        },
        {
          "content": "Sequence. If you are using TFS 2013 or later, add a GetLocalPath activity at the beginning of the new sequence. For a ConvertWorkspaceItem, set the properties as follows: Direction=ServerToLocal, DisplayName='Convert publish",
          "pos": [
            102,
            326
          ],
          "nodes": [
            {
              "content": "Sequence.",
              "pos": [
                0,
                9
              ]
            },
            {
              "content": "If you are using TFS 2013 or later, add a GetLocalPath activity at the beginning of the new sequence.",
              "pos": [
                10,
                111
              ]
            },
            {
              "content": "For a ConvertWorkspaceItem, set the properties as follows: Direction=ServerToLocal, DisplayName='Convert publish",
              "pos": [
                112,
                224
              ]
            }
          ]
        },
        {
          "content": "script filename', Input=' PublishScriptLocation',",
          "pos": [
            327,
            376
          ]
        },
        {
          "content": "Result='PublishScriptFilePath', Workspace='Workspace'. For a GetLocalPath activity, set the property IncomingPath to 'PublishScriptLocation', and the Result to 'PublishScriptFilePath'. This",
          "pos": [
            377,
            566
          ],
          "nodes": [
            {
              "content": "Result='PublishScriptFilePath', Workspace='Workspace'.",
              "pos": [
                0,
                54
              ]
            },
            {
              "content": "For a GetLocalPath activity, set the property IncomingPath to 'PublishScriptLocation', and the Result to 'PublishScriptFilePath'.",
              "pos": [
                55,
                184
              ]
            },
            {
              "content": "This",
              "pos": [
                185,
                189
              ]
            }
          ]
        },
        {
          "content": "activity converts the path to the publish script from TFS server",
          "pos": [
            567,
            631
          ]
        },
        {
          "content": "locations (if applicable) to a standard local disk path.",
          "pos": [
            632,
            688
          ]
        }
      ]
    },
    {
      "pos": [
        22794,
        23243
      ],
      "content": "If you are using TFS 2012 or earlier, add another ConvertWorkspaceItem activity at the end of the new\nSequence. Direction=ServerToLocal, DisplayName='Convert\nsubscription filename', Input=' SubscriptionDataFileLocation',\nResult= 'SubscriptionDataFilePath', Workspace='Workspace'. If you are using TFS 2013 or later, add another GetLocalPath. IncomingPath='SubscriptionDataFileLocation', and Result='SubscriptionDataFilePath.'",
      "leadings": [
        "",
        "        ",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "If you are using TFS 2012 or earlier, add another ConvertWorkspaceItem activity at the end of the new",
          "pos": [
            0,
            101
          ]
        },
        {
          "content": "Sequence. Direction=ServerToLocal, DisplayName='Convert",
          "pos": [
            102,
            157
          ],
          "nodes": [
            {
              "content": "Sequence.",
              "pos": [
                0,
                9
              ]
            },
            {
              "content": "Direction=ServerToLocal, DisplayName='Convert",
              "pos": [
                10,
                55
              ]
            }
          ]
        },
        {
          "content": "subscription filename', Input=' SubscriptionDataFileLocation',",
          "pos": [
            158,
            220
          ]
        },
        {
          "content": "Result= 'SubscriptionDataFilePath', Workspace='Workspace'. If you are using TFS 2013 or later, add another GetLocalPath. IncomingPath='SubscriptionDataFileLocation', and Result='SubscriptionDataFilePath.'",
          "pos": [
            221,
            425
          ],
          "nodes": [
            {
              "content": "Result= 'SubscriptionDataFilePath', Workspace='Workspace'.",
              "pos": [
                0,
                58
              ]
            },
            {
              "content": "If you are using TFS 2013 or later, add another GetLocalPath.",
              "pos": [
                59,
                120
              ]
            },
            {
              "content": "IncomingPath='SubscriptionDataFileLocation', and Result='SubscriptionDataFilePath.'",
              "pos": [
                121,
                204
              ]
            }
          ]
        }
      ]
    },
    {
      "pos": [
        23253,
        23419
      ],
      "content": "Add an InvokeProcess activity at the end of the new Sequence.\nThis activity calls PowerShell.exe with the arguments passed in\nby the Build Definition.",
      "leadings": [
        "",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "Add an InvokeProcess activity at the end of the new Sequence.",
          "pos": [
            0,
            61
          ]
        },
        {
          "content": "This activity calls PowerShell.exe with the arguments passed in",
          "pos": [
            62,
            125
          ]
        },
        {
          "content": "by the Build Definition.",
          "pos": [
            126,
            150
          ]
        }
      ]
    },
    {
      "pos": [
        23433,
        23871
      ],
      "content": "Arguments = String.Format(\" -File \"\"{0}\"\" -serviceName {1}\n-storageAccountName {2} -packageLocation \"\"{3}\"\"\n-cloudConfigLocation \"\"{4}\"\" -subscriptionDataFile \"\"{5}\"\"\n-selectedSubscription {6} -environment \"\"{7}\"\"\",\nPublishScriptFilePath, ServiceName, StorageAccountName,\nPackageLocation, CloudConfigLocation,\nSubscriptionDataFilePath, SubscriptionName, Environment)",
      "leadings": [
        "",
        "            ",
        "            ",
        "            ",
        "            ",
        "            ",
        "            "
      ],
      "nodes": [
        {
          "content": "Arguments = String.Format(\" -File \"\"{0}\"\" -serviceName {1}",
          "pos": [
            0,
            58
          ]
        },
        {
          "content": "-storageAccountName {2} -packageLocation \"\"{3}\"\"",
          "pos": [
            59,
            107
          ]
        },
        {
          "content": "-cloudConfigLocation \"\"{4}\"\" -subscriptionDataFile \"\"{5}\"\"",
          "pos": [
            108,
            166
          ]
        },
        {
          "content": "-selectedSubscription {6} -environment \"\"{7}\"\"\",",
          "pos": [
            167,
            215
          ]
        },
        {
          "content": "PublishScriptFilePath, ServiceName, StorageAccountName,",
          "pos": [
            216,
            271
          ]
        },
        {
          "content": "PackageLocation, CloudConfigLocation,",
          "pos": [
            272,
            309
          ]
        },
        {
          "content": "SubscriptionDataFilePath, SubscriptionName, Environment)",
          "pos": [
            310,
            366
          ]
        }
      ]
    },
    {
      "content": "DisplayName = Execute publish script",
      "pos": [
        23885,
        23921
      ]
    },
    {
      "content": "FileName = \"PowerShell\" (include the quotes)",
      "pos": [
        23935,
        23979
      ]
    },
    {
      "pos": [
        23993,
        24127
      ],
      "content": "OutputEncoding=\nSystem.Text.Encoding.GetEncoding(System.Globalization.CultureInfo.InstalledUICulture.TextInfo.OEMCodePage)",
      "leadings": [
        "",
        "            "
      ],
      "nodes": [
        {
          "content": "OutputEncoding=",
          "pos": [
            0,
            15
          ]
        },
        {
          "content": "System.Text.Encoding.GetEncoding(System.Globalization.CultureInfo.InstalledUICulture.TextInfo.OEMCodePage)",
          "pos": [
            16,
            122
          ]
        }
      ]
    },
    {
      "pos": [
        24137,
        24311
      ],
      "content": "In the **Handle Standard Output** section textbox of the\nInvokeProcess, set the textbox value to 'data'. This is a\nvariable to store the standard output data.",
      "leadings": [
        "",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "In the <bpt id=\"p1\">**</bpt>Handle Standard Output<ept id=\"p1\">**</ept> section textbox of the",
          "pos": [
            0,
            56
          ]
        },
        {
          "content": "InvokeProcess, set the textbox value to 'data'. This is a",
          "pos": [
            57,
            114
          ],
          "nodes": [
            {
              "content": "InvokeProcess, set the textbox value to 'data'.",
              "pos": [
                0,
                47
              ]
            },
            {
              "content": "This is a",
              "pos": [
                48,
                57
              ]
            }
          ]
        },
        {
          "content": "variable to store the standard output data.",
          "pos": [
            115,
            158
          ]
        }
      ]
    },
    {
      "pos": [
        24321,
        24634
      ],
      "content": "Add a WriteBuildMessage activity just below the **Handle Standard Output**\nsection. Set the Importance =\n'Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High'\nand the Message='data'. This ensures the standard output of the\nscript will get written to the build output.",
      "leadings": [
        "",
        "        ",
        "        ",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "Add a WriteBuildMessage activity just below the <bpt id=\"p1\">**</bpt>Handle Standard Output<ept id=\"p1\">**</ept>",
          "pos": [
            0,
            74
          ]
        },
        {
          "content": "section. Set the Importance =",
          "pos": [
            75,
            104
          ],
          "nodes": [
            {
              "content": "section.",
              "pos": [
                0,
                8
              ]
            },
            {
              "content": "Set the Importance =",
              "pos": [
                9,
                29
              ]
            }
          ]
        },
        {
          "content": "'Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High'",
          "pos": [
            105,
            172
          ]
        },
        {
          "content": "and the Message='data'. This ensures the standard output of the",
          "pos": [
            173,
            236
          ],
          "nodes": [
            {
              "content": "and the Message='data'.",
              "pos": [
                0,
                23
              ]
            },
            {
              "content": "This ensures the standard output of the",
              "pos": [
                24,
                63
              ]
            }
          ]
        },
        {
          "content": "script will get written to the build output.",
          "pos": [
            237,
            281
          ]
        }
      ]
    },
    {
      "pos": [
        24644,
        24814
      ],
      "content": "In the **Handle Error Output** section textbox of the\nInvokeProcess, set the textbox value to 'data'. This is a\nvariable to store the standard error data.",
      "leadings": [
        "",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "In the <bpt id=\"p1\">**</bpt>Handle Error Output<ept id=\"p1\">**</ept> section textbox of the",
          "pos": [
            0,
            53
          ]
        },
        {
          "content": "InvokeProcess, set the textbox value to 'data'. This is a",
          "pos": [
            54,
            111
          ],
          "nodes": [
            {
              "content": "InvokeProcess, set the textbox value to 'data'.",
              "pos": [
                0,
                47
              ]
            },
            {
              "content": "This is a",
              "pos": [
                48,
                57
              ]
            }
          ]
        },
        {
          "content": "variable to store the standard error data.",
          "pos": [
            112,
            154
          ]
        }
      ]
    },
    {
      "pos": [
        24824,
        25033
      ],
      "content": "Add a WriteBuildError activity just below the **Handle Error Output**\nsection. Set the Message='data'. This ensures the standard\nerrors of the script will get written to the build error output.",
      "leadings": [
        "",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "Add a WriteBuildError activity just below the <bpt id=\"p1\">**</bpt>Handle Error Output<ept id=\"p1\">**</ept>",
          "pos": [
            0,
            69
          ]
        },
        {
          "content": "section. Set the Message='data'. This ensures the standard",
          "pos": [
            70,
            128
          ],
          "nodes": [
            {
              "content": "section.",
              "pos": [
                0,
                8
              ]
            },
            {
              "content": "Set the Message='data'.",
              "pos": [
                9,
                32
              ]
            },
            {
              "content": "This ensures the standard",
              "pos": [
                33,
                58
              ]
            }
          ]
        },
        {
          "content": "errors of the script will get written to the build error output.",
          "pos": [
            129,
            193
          ]
        }
      ]
    },
    {
      "pos": [
        25043,
        25214
      ],
      "content": "Correct any errors, indicated by blue exclamation marks. Hover over the\nexclamation marks to get a hint about the error. Save the workflow to\nclear errors.",
      "leadings": [
        "",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "Correct any errors, indicated by blue exclamation marks. Hover over the",
          "pos": [
            0,
            71
          ],
          "nodes": [
            {
              "content": "Correct any errors, indicated by blue exclamation marks.",
              "pos": [
                0,
                56
              ]
            },
            {
              "content": "Hover over the",
              "pos": [
                57,
                71
              ]
            }
          ]
        },
        {
          "content": "exclamation marks to get a hint about the error. Save the workflow to",
          "pos": [
            72,
            141
          ],
          "nodes": [
            {
              "content": "exclamation marks to get a hint about the error.",
              "pos": [
                0,
                48
              ]
            },
            {
              "content": "Save the workflow to",
              "pos": [
                49,
                69
              ]
            }
          ]
        },
        {
          "content": "clear errors.",
          "pos": [
            142,
            155
          ]
        }
      ]
    },
    {
      "pos": [
        25220,
        25312
      ],
      "content": "The final result of the publish workflow activities will look like\nthis in the designer:",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "The final result of the publish workflow activities will look like",
          "pos": [
            0,
            66
          ]
        },
        {
          "content": "this in the designer:",
          "pos": [
            67,
            88
          ]
        }
      ]
    },
    {
      "pos": [
        25330,
        25414
      ],
      "content": "The final result of the publish workflow activities will look like\nthis in XAML:",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "The final result of the publish workflow activities will look like",
          "pos": [
            0,
            66
          ]
        },
        {
          "content": "this in XAML:",
          "pos": [
            67,
            80
          ]
        }
      ]
    },
    {
      "content": "Save the build process template workflow and Check In this file.",
      "pos": [
        28501,
        28565
      ]
    },
    {
      "pos": [
        28571,
        28737
      ],
      "content": "Edit the build definition (close it if it is already open), and select\nthe **New** button if you do not yet see the new template in the list of Process Templates.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Edit the build definition (close it if it is already open), and select",
          "pos": [
            0,
            70
          ]
        },
        {
          "content": "the <bpt id=\"p1\">**</bpt>New<ept id=\"p1\">**</ept> button if you do not yet see the new template in the list of Process Templates.",
          "pos": [
            71,
            162
          ]
        }
      ]
    },
    {
      "content": "Set the parameter property values in the Misc section as follows:",
      "pos": [
        28743,
        28808
      ]
    },
    {
      "pos": [
        28818,
        28989
      ],
      "content": "CloudConfigLocation ='c:\\\\drops\\\\app.publish\\\\ServiceConfiguration.Cloud.cscfg'\n*This value is derived from:\n($PublishDir)ServiceConfiguration.Cloud.cscfg*",
      "leadings": [
        "",
        "        ",
        "        "
      ],
      "nodes": [
        {
          "content": "CloudConfigLocation ='c:\\\\drops\\\\app.publish\\\\ServiceConfiguration.Cloud.cscfg'",
          "pos": [
            0,
            79
          ]
        },
        {
          "content": "<bpt id=\"p1\">*</bpt>This value is derived from:\n($PublishDir)ServiceConfiguration.Cloud.cscfg<ept id=\"p1\">*</ept>",
          "pos": [
            80,
            155
          ]
        }
      ]
    },
    {
      "pos": [
        28999,
        29141
      ],
      "content": "PackageLocation = 'c:\\\\drops\\\\app.publish\\\\ContactManager.Azure.cspkg'\n*This value is derived from: ($PublishDir)($ProjectName).cspkg*",
      "leadings": [
        "",
        "        "
      ],
      "nodes": [
        {
          "content": "PackageLocation = 'c:\\\\drops\\\\app.publish\\\\ContactManager.Azure.cspkg'",
          "pos": [
            0,
            70
          ]
        },
        {
          "content": "<bpt id=\"p1\">*</bpt>This value is derived from: ($PublishDir)($ProjectName).cspkg<ept id=\"p1\">*</ept>",
          "pos": [
            71,
            134
          ]
        }
      ]
    },
    {
      "content": "PublishScriptLocation = 'c:\\\\scripts\\\\WindowsAzure\\\\PublishCloudService.ps1'",
      "pos": [
        29151,
        29227
      ]
    },
    {
      "pos": [
        29237,
        29325
      ],
      "content": "ServiceName = 'mycloudservicename'\n*Use the appropriate cloud service name here*",
      "leadings": [
        "",
        "        "
      ],
      "nodes": [
        {
          "content": "ServiceName = 'mycloudservicename'",
          "pos": [
            0,
            34
          ]
        },
        {
          "content": "<bpt id=\"p1\">*</bpt>Use the appropriate cloud service name here<ept id=\"p1\">*</ept>",
          "pos": [
            35,
            80
          ]
        }
      ]
    },
    {
      "content": "Environment = 'Staging'",
      "pos": [
        29335,
        29358
      ]
    },
    {
      "pos": [
        29368,
        29467
      ],
      "content": "StorageAccountName = 'mystorageaccountname'\n*Use the appropriate storage account name here*",
      "leadings": [
        "",
        "        "
      ],
      "nodes": [
        {
          "content": "StorageAccountName = 'mystorageaccountname'",
          "pos": [
            0,
            43
          ]
        },
        {
          "content": "<bpt id=\"p1\">*</bpt>Use the appropriate storage account name here<ept id=\"p1\">*</ept>",
          "pos": [
            44,
            91
          ]
        }
      ]
    },
    {
      "pos": [
        29477,
        29561
      ],
      "content": "SubscriptionDataFileLocation =\n'c:\\\\scripts\\\\WindowsAzure\\\\Subscription.xml'",
      "leadings": [
        "",
        "        "
      ],
      "nodes": [
        {
          "content": "SubscriptionDataFileLocation =",
          "pos": [
            0,
            30
          ]
        },
        {
          "content": "'c:\\\\scripts\\\\WindowsAzure\\\\Subscription.xml'",
          "pos": [
            31,
            76
          ]
        }
      ]
    },
    {
      "content": "SubscriptionName = 'default'",
      "pos": [
        29571,
        29599
      ]
    },
    {
      "content": "Save the changes to the Build Definition.",
      "pos": [
        29617,
        29658
      ]
    },
    {
      "pos": [
        29664,
        29835
      ],
      "content": "Queue a Build to execute both the package build and publish. If you\nhave a trigger set to Continuous Integration, you will execute this\nbehavior on every check-in.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Queue a Build to execute both the package build and publish. If you",
          "pos": [
            0,
            67
          ],
          "nodes": [
            {
              "content": "Queue a Build to execute both the package build and publish.",
              "pos": [
                0,
                60
              ]
            },
            {
              "content": "If you",
              "pos": [
                61,
                67
              ]
            }
          ]
        },
        {
          "content": "have a trigger set to Continuous Integration, you will execute this",
          "pos": [
            68,
            135
          ]
        },
        {
          "content": "behavior on every check-in.",
          "pos": [
            136,
            163
          ]
        }
      ]
    },
    {
      "content": "PublishCloudService.ps1 script template",
      "pos": [
        29841,
        29880
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        37643,
        37653
      ]
    },
    {
      "pos": [
        37655,
        37875
      ],
      "content": "To enable remote debugging when using continuous delivery, see <bpt id=\"p1\">[</bpt>Enable remote debugging when using continuous delivery to publish to Azure<ept id=\"p1\">](cloud-services-virtual-machines-dotnet-continuous-delivery-remote-debugging.md)</ept>."
    },
    {
      "content": "test",
      "pos": [
        39178,
        39182
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Continuous delivery for cloud services with TFS in Azure | Microsoft Azure\"\n    description=\"Learn how to set up continuous delivery for Azure cloud apps. Code samples for MSBuild command-line statements and PowerShell scripts.\"\n    services=\"cloud-services\"\n    documentationCenter=\"\"\n    authors=\"kempb\"\n    manager=\"douge\"\n    editor=\"tglee\"/>\n\n<tags\n    ms.service=\"cloud-services\"\n    ms.workload=\"tbd\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"dotnet\"\n    ms.topic=\"article\"\n    ms.date=\"08/19/2015\"\n    ms.author=\"kempb\"/>\n\n# Continuous Delivery for Cloud Services in Azure\n\nThe process described in this article shows you how to set up continuous\ndelivery for Azure cloud apps. This process enables you to\nautomatically create packages and deploy the package to Azure\nafter every code check-in. The package build process described in this\narticle is equivalent to the Package command in Visual Studio, and the\npublishing steps are equivalent to the Publish command in Visual Studio.\nThe article covers the methods you would use to create a build server\nwith MSBuild command-line statements and Windows PowerShell scripts, and\nit also demonstrates how to optionally configure Visual Studio Team\nFoundation Server - Team Build definitions to use the MSBuild commands\nand PowerShell scripts. The process is customizable for your build\nenvironment and Azure target environments.\n\nYou can also use Visual Studio Online, a version of TFS that is hosted in Azure, to do this more easily. For more information, see [Continuous Delivery to Azure by Using Visual Studio Online][].\n\nBefore you start, you should publish your application from Visual Studio.\nThis will ensure that all the resources are available and initialized when you\nattempt to automate the publication process.\n\n## Step 1: Configure the Build Server\n\nBefore you can create an Azure package by using MSBuild, you must\ninstall the required software and tools on the build server.\n\nVisual Studio is not required to be installed on the build server. If\nyou want to use Team Foundation Build Service to manage your build\nserver, follow the instructions in the [Team Foundation Build Service][]\ndocumentation.\n\n1.  On the build server, install the [.NET Framework 4][], [.NET Framework 4.5][], or [.NET Framework 4.5.2][], which include MSBuild.\n2.  Install the [Azure Authoring Tools for .NET](http://go.microsoft.com/fwlink/?LinkId=623518) (substitute MicrosoftAzureAuthoringTools-x86.msi in the link instead of MicrosoftAzureAuthoringTools-x64.msi if your build server has a 32-bit OS/processor).\n3. Install the [Azure Libraries for .NET](http://go.microsoft.com/fwlink/?LinkId=623519) (substitute MicrosoftAzureLibsForNet-x86.msi in the link if needed).\n4.  Copy the Microsoft.WebApplication.targets file from a Visual Studio installation to the build server.\n\n    On a computer with Visual Studio installed, this file is located in the directory C:\\\\Program Files(x86)\\\\MSBuild\\\\Microsoft\\\\VisualStudio\\\\v14.0\\\\WebApplications (v12.0 for Visual Studio 2013). You should copy it to the same directory on the build server.\n5.  Install the [Azure Tools for Visual Studio](http://go.microsoft.com/fwlink/?LinkId=623520). Use MicrosoftAzureTools.VS140.exe to build Visual Studio 2015 projects, or MicrosoftAzureTools.VS120.exe to build Visual Studio 2013 projects.\n\n## Step 2: Build a Package using MSBuild Commands\n\nThis section describes how to construct an MSBuild command that builds an\nAzure package. Run this step on the build server to verify that\neverything is configured correctly and that the MSBuild command does\nwhat you want it to do. You can either add this command line to existing\nbuild scripts on the build server, or you can use the command line in a\nTFS Build Definition, as described in the next section. For more\ninformation about command-line parameters and MSBuild, see [MSBuild Command Line Reference](https://msdn.microsoft.com/library/ms164311%28v=vs.140%29.aspx).\n\n1.  If Visual Studio is installed on the build server, click\n    **Start**, click **All Programs**, and then locate and click\n    **Visual Studio Commmand Prompt** in the **Visual Studio Tools**\n    folder.\n\n    If Visual Studio is not installed on the build server, open a\n    command prompt and make sure that MSBuild.exe is accessible on the\n    path. MSBuild is installed with the .NET Framework in the path\n    %WINDIR%\\\\Microsoft.NET\\\\Framework\\\\*Version*. For example, to\n    add MSBuild.exe to the PATH environment variable when you have .NET\n    Framework 4 installed, type the following command at the command\n    prompt:\n\n        set PATH=%PATH%;\"C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\"\n\n2.  At the command prompt, navigate to the folder containing the\n    Azure project file that you want to build.\n\n3.  Run msbuild with the /target:Publish option as in the following\n    example:\n\n        MSBuild /target:Publish\n\n    This option can be abbreviated as /t:Publish. The /t:Publish option\n    in MSBuild should not be confused with the Publish commands\n    available in Visual Studio when you have the Azure SDK\n    installed. The /t:Publish option only builds the Azure\n    packages. It does not deploy the packages as the Publish commands in\n    Visual Studio do.\n\n    Optionally, you can specify the project name as an MSBuild\n    parameter. If not specified, the current directory is used. For more\n    information about MSBuild command line options, see [MSBuild Command\n    Line Reference][1].\n\n4.  Locate the output. By default, this command creates a directory in\n    relation to the root folder for the project, such as\n    *ProjectDir*\\\\bin\\\\*Configuration*\\\\app.publish\\\\. When you\n    build an Azure project, you generate two files, the package\n    file itself and the accompanying configuration file:\n\n    -   Project.cspkg\n    -   ServiceConfiguration.*TargetProfile*.cscfg\n\n    By default, each Azure project includes one\n    service configuration file (.cscfg file) for local (debugging)\n    builds and another for cloud (staging or production) builds, but you\n    can add or remove service configuration files as needed. When you\n    build a package within Visual Studio, you will be asked which\n    service configuration file to include alongside the package.\n\n5.  Specify the service configuration file. When you build a package by\n    using MSBuild, the local service configuration file is included by\n    default. To include a different service configuration file, set the\n    TargetProfile property of the MSBuild command, as in the following\n    example:\n\n        MSBuild /t:Publish /p:TargetProfile=Cloud\n\n6.  Specify the location for the output. Set the path by using the\n    /p:PublishDir=*Directory*\\\\ option, including the trailing\n    backslash separator, as in the following example:\n\n        MSBuild /target:Publish /p:PublishDir=\\\\myserver\\drops\\\n\n    Once you've constructed and tested an appropriate MSBuild command\n    line to build your projects and combine them into an Azure package,\n    you can add this command line to your build scripts. If your build\n    server uses custom scripts, this process will depend on the\n    specifics of your custom build process. If you are using TFS as a\n    build environment, then you can follow the instructions in the next\n    step to add the Azure package build to your build process.\n\n## Step 3: Build a Package using TFS Team Build (Optional)\n\nIf you have Team Foundation Server (TFS) set up as a build controller\nand the build server set up as a TFS build machine, then you can set up\nan automated build for your Azure package. For information on\nhow to set up and use Team Foundation server as a build system, see\n[Scale out your build system][]. In particular, the\nfollowing procedure assumes that you have configured your build server\nas described in [Deploy and configure a build server][], and that you have created\na team project, created a cloud service project in the team project.\n\nTo configure TFS to build Azure packages, perform the following\nsteps:\n\n1.  In Visual Studio on your development computer, on the View\n    menu, choose **Team Explorer**, or choose Ctrl+\\\\, Ctrl+M. In the\n    Team Explorer window, expand the **Builds** node or choose the **Builds**\n    page, and choose **New Build Definition**.\n\n    ![][0]\n\n2.  Click the **Trigger** tab, and specify the desired conditions for\n    when you want the package to be built. For example, specify\n    **Continuous Integration** to build the package whenever a source\n    control check-in occurs.\n\n3.  Choose the **Source Settings** tab, and make sure your project folder is listed\n    in the **Source Control Folder** column, and the status is **Active**.\n\n4.  Choose the **Build Defaults** tab, and under Build controller, verify\n    the name of the build server.  Also, choose the option **Copy build\n    output to the following drop folder** and specify the desired drop\n    location.\n\n5.  Click the **Process** tab. On the Process tab, choose the default\n    template, under **Build**, choose the project if it is not already selected,\n    and expand the **Advanced** section in the **Build** section of the grid.\n\n6.  Choose **MSBuild Arguments**, and set the appropriate MSBuild\n    command line arguments as described in Step 2 above. For example,\n    enter **/t:Publish /p:PublishDir=\\\\\\\\myserver\\\\drops\\\\** to build a\n    package and copy the package files to the location\n    \\\\\\\\myserver\\\\drops\\\\:\n\n    ![][2]\n\n    **Note:** Copying the files to a public share makes it easier to\n    manually deploy the packages from your development computer.\n\n5.  Test the success of your build step by checking in a change to your\n    project, or queue up a new build. To queue up a new build, in the\n    Team Explorer, right-click **All Build Definitions,** and then\n    choose **Queue New Build**.\n\n## Step 4: Publish a Package using a PowerShell Script\n\nThis section describes how to construct a Windows PowerShell script that\nwill publish the Cloud app package output to Azure using\noptional parameters. This script can be called after the build step in\nyour custom build automation. It can also be called from Process\nTemplate workflow activities in Visual Studio TFS Team Build.\n\n1.  Install the [Azure PowerShell cmdlets][] (v0.6.1 or higher).\n    During the cmdlet setup phase choose to install as a snap-in. Note\n    that this officially supported version replaces the older version\n    offered through CodePlex, although the previous versions were numbered 2.x.x.\n\n2.  Start Azure PowerShell using the Start menu or Start page. If you start in this way,\n    the Azure PowerShell cmdlets will be loaded.\n\n3.  At the PowerShell prompt, verify that the PowerShell cmdlets are loaded\n    by typing the partial command Get-Azure and then pressing tab for statement\n    completion.\n\n    If you press tab repeatedly, you should see various Azure PowerShell commands.\n\n4.  Verify that you can connect to your Azure subscription by\n    importing your subscription information from the .publishsettings file.\n\n    Import-AzurePublishSettingsFile c:\\scripts\\WindowsAzure\\default.publishsettings\n\n    Then give the command\n\n    Get-AzureSubscription\n\n    This will display information about your subscription. Verify that everything is correct.\n\n4.  Save the script template provided at the [end of this article][] to\n    your scripts folder as\n    c:\\\\scripts\\\\WindowsAzure\\\\**PublishCloudService.ps1**.\n\n5.  Review the parameters section of the script. Add or modify any\n    default values. These values can always be overridden by passing in\n    explicit parameters.\n\n6.  Ensure there are valid cloud service and storage accounts created\n    in your subscription that can be targeted by the publish script. The\n    storage account (blob storage) will be used to upload and\n    temporarily store the deployment package and config file while the\n    deployment is being created.\n\n    -   To create a new cloud service, you can call this script or use\n        the Azure Management Portal. The cloud service name\n        will be used as a prefix in a fully qualified domain name and\n        hence it must be unique.\n\n            New-AzureService -ServiceName \"mytestcloudservice\" -Location \"North Central US\" -Label \"mytestcloudservice\"\n\n    -   To create a new storage account, you can call this script or use\n        the Azure Management Portal. The storage account name\n        will be used as a prefix in a fully qualified domain name and\n        hence it must be unique. You can try using the same name as the\n        cloud service.\n\n            New-AzureStorageAccount -ServiceName \"mytestcloudservice\" -Location \"North Central US\" -Label \"mytestcloudservice\"\n\n7.  Call the script directly from Azure PowerShell, or wire up this\n    script to your host build automation to occur after the package\n    build.\n\n    **WARNING:** The script will always delete or replace your existing\n    deployments by default if they are detected. This is necessary to\n    enable continuous delivery from automation where no user prompting\n    is possible.\n\n    **Example scenario 1:** continuous deployment to the staging\n    environment of a service:\n\n        PowerShell c:\\scripts\\windowsazure\\PublishCloudService.ps1 -environment Staging -serviceName mycloudservice -storageAccountName mystoragesaccount -packageLocation c:\\drops\\app.publish\\ContactManager.Azure.cspkg -cloudConfigLocation c:\\drops\\app.publish\\ServiceConfiguration.Cloud.cscfg -subscriptionDataFile c:\\scripts\\default.publishsettings\n\n    This is typically followed up by test run verification and a VIP\n    swap. The VIP swap can be done via the Azure Management\n    Portal or by using the Move-Deployment cmdlet.\n\n    **Example scenario 2:** continuous deployment to the production\n    environment of a dedicated test service\n\n        PowerShell c:\\scripts\\windowsazure\\PublishCloudService.ps1 -environment Production -enableDeploymentUpgrade 1 -serviceName mycloudservice -storageAccountName mystorageaccount -packageLocation c:\\drops\\app.publish\\ContactManager.Azure.cspkg -cloudConfigLocation c:\\drops\\app.publish\\ServiceConfiguration.Cloud.cscfg -subscriptionDataFile c:\\scripts\\default.publishsettings\n\n    **Remote Desktop:**\n\n    If Remote Desktop is enabled in your Azure project you will\n    need to perform additional one-time steps to ensure the correct\n    Cloud Service Certificate is uploaded to all cloud services\n    targeted by this script.\n\n    Locate the certificate thumbprint values expected by your roles. The\n    thumbprint values are visible in the Certificates section of the\n    cloud config file (i.e. ServiceConfiguration.Cloud.cscfg). It is\n    also visible in the Remote Desktop Configuration dialog in Visual\n    Studio when you Show Options and view the selected certificate.\n\n        <Certificates>\n              <Certificate name=\"Microsoft.WindowsAzure.Plugins.RemoteAccess.PasswordEncryption\" thumbprint=\"C33B6C432C25581601B84C80F86EC2809DC224E8\" thumbprintAlgorithm=\"sha1\" />\n        </Certificates>\n\n    Upload Remote Desktop certificates as a one-time setup step using\n    the following cmdlet script:\n\n        Add-AzureCertificate -serviceName <CLOUDSERVICENAME> -certToDeploy (get-item cert:\\CurrentUser\\MY\\<THUMBPRINT>)\n\n    For example:\n\n        Add-AzureCertificate -serviceName 'mytestcloudservice' -certToDeploy (get-item cert:\\CurrentUser\\MY\\C33B6C432C25581601B84C80F86EC2809DC224E8\n\n    Alternatively you can export the certificate file PFX with private\n    key and upload certificates to each target cloud service using the\n    Azure Management Portal. Read the following article to learn\n    more:\n    [http://msdn.microsoft.com/library/windowsazure/gg443832.aspx][].\n\n    **Upgrade Deployment vs. Delete Deployment -\\> New Deployment**\n\n    The script will by default perform an Upgrade Deployment\n    ($enableDeploymentUpgrade = 1) when no parameter is passed in or the\n    value 1 is passed explicitly. For single instances this has the\n    advantage of taking less time than a full deployment. For instances\n    that require high availability this also has the advantage of\n    leaving some instances running while others are upgraded (walking\n    your update domain), plus your VIP will not be deleted.\n\n    Upgrade Deployment can be disabled in the script\n    ($enableDeploymentUpgrade = 0) or by passing\n    -enableDeploymentUpgrade 0 as a parameter, which will alter the\n    script behavior to first delete any existing deployment and then\n    create a new deployment.\n\n    **Warning:** The script will always delete or replace your existing\n    deployments by default if they are detected. This is necessary to\n    enable continuous delivery from automation where no user/operator\n    prompting is possible.\n\n## Step 5: Publish a Package using TFS Team Build (Optional)\n\nThis step will wire up TFS Team Build to the script created in step 4,\nwhich handles publishing of the package build to Azure. This\nentails modifying the Process Template used by your build definition so\nthat it runs a Publish activity at the end of the workflow. The Publish\nactivity will execute your PowerShell command passing in parameters from\nthe build. Output of the MSBuild targets and publish script will be\npiped into the standard build output.\n\n1.  Edit the Build Definition responsible for continuous deploy.\n\n2.  Select the **Process** tab.\n\n3.  Follow [these instructions](http://msdn.microsoft.com/library/dd647551.aspx) to add an\n    Activity project for the build process template, download the default template, add it to\n    the project and check it in. Give the build process template a new name, such as\n    AzureBuildProcessTemplate.\n\n3.  Return to the **Process** tab, and use **Show Details** to show a list of available\n    build process templates. Choose the **New...** button, and navigate to the project you\n    just added and checked in. Locate the template you just created and choose **OK**.\n\n4.  Open the selected Process Template for editing. You can open\n    directly in the Workflow designer or in the XML editor to work with\n    the XAML.\n\n5.  Add the following list of new arguments as separate line items in\n    the arguments tab of the workflow designer. All arguments should\n    have direction=In and type=String. These will be used to flow\n    parameters from the build definition into the workflow, which then\n    get used to call the publish script.\n\n        SubscriptionName\n        StorageAccountName\n        CloudConfigLocation\n        PackageLocation\n        Environment\n        SubscriptionDataFileLocation\n        PublishScriptLocation\n        ServiceName\n\n    ![][3]\n\n    The corresponding XAML looks like this:\n\n        <Activity  _ />\n          <x:Members>\n            <x:Property Name=\"BuildSettings\" Type=\"InArgument(mtbwa:BuildSettings)\" />\n            <x:Property Name=\"TestSpecs\" Type=\"InArgument(mtbwa:TestSpecList)\" />\n            <x:Property Name=\"BuildNumberFormat\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"CleanWorkspace\" Type=\"InArgument(mtbwa:CleanWorkspaceOption)\" />\n            <x:Property Name=\"RunCodeAnalysis\" Type=\"InArgument(mtbwa:CodeAnalysisOption)\" />\n            <x:Property Name=\"SourceAndSymbolServerSettings\" Type=\"InArgument(mtbwa:SourceAndSymbolServerSettings)\" />\n            <x:Property Name=\"AgentSettings\" Type=\"InArgument(mtbwa:AgentSettings)\" />\n            <x:Property Name=\"AssociateChangesetsAndWorkItems\" Type=\"InArgument(x:Boolean)\" />\n            <x:Property Name=\"CreateWorkItem\" Type=\"InArgument(x:Boolean)\" />\n            <x:Property Name=\"DropBuild\" Type=\"InArgument(x:Boolean)\" />\n            <x:Property Name=\"MSBuildArguments\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"MSBuildPlatform\" Type=\"InArgument(mtbwa:ToolPlatform)\" />\n            <x:Property Name=\"PerformTestImpactAnalysis\" Type=\"InArgument(x:Boolean)\" />\n            <x:Property Name=\"CreateLabel\" Type=\"InArgument(x:Boolean)\" />\n            <x:Property Name=\"DisableTests\" Type=\"InArgument(x:Boolean)\" />\n            <x:Property Name=\"GetVersion\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"PrivateDropLocation\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"Verbosity\" Type=\"InArgument(mtbw:BuildVerbosity)\" />\n            <x:Property Name=\"Metadata\" Type=\"mtbw:ProcessParameterMetadataCollection\" />\n            <x:Property Name=\"SupportedReasons\" Type=\"mtbc:BuildReason\" />\n            <x:Property Name=\"SubscriptionName\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"StorageAccountName\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"CloudConfigLocation\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"PackageLocation\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"Environment\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"SubscriptionDataFileLocation\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"PublishScriptLocation\" Type=\"InArgument(x:String)\" />\n            <x:Property Name=\"ServiceName\" Type=\"InArgument(x:String)\" />\n          </x:Members>\n\n          <this:Process.MSBuildArguments>\n\n6.  Add a new sequence at the end of Run On Agent:\n\n    1.  Start by adding an If Statement activity to check for a valid\n        script file. Set the condition to this value:\n\n            Not String.IsNullOrEmpty(PublishScriptLocation)\n\n    2.  In the Then case of the If Statement, add a new Sequence\n        activity. Set the display name to 'Start publish'\n\n    3.  With the Start publish sequence still selected, add the\n        following list of new variables as separate line items in the\n        variables tab of the workflow designer. All variables should\n        have Variable type =String and Scope=Start publish. These will\n        be used to flow parameters from the build definition into the\n        workflow, which then get used to call the publish script.\n\n        -   SubscriptionDataFilePath, of type String\n\n        -   PublishScriptFilePath, of type String\n\n            ![][4]\n\n    4.  If you are using TFS 2012 or earlier, add a ConvertWorkspaceItem activity at the beginning of the new\n        Sequence. If you are using TFS 2013 or later, add a GetLocalPath activity at the beginning of the new sequence. For a ConvertWorkspaceItem, set the properties as follows: Direction=ServerToLocal, DisplayName='Convert publish\n        script filename', Input=' PublishScriptLocation',\n        Result='PublishScriptFilePath', Workspace='Workspace'. For a GetLocalPath activity, set the property IncomingPath to 'PublishScriptLocation', and the Result to 'PublishScriptFilePath'. This\n        activity converts the path to the publish script from TFS server\n        locations (if applicable) to a standard local disk path.\n\n    5.  If you are using TFS 2012 or earlier, add another ConvertWorkspaceItem activity at the end of the new\n        Sequence. Direction=ServerToLocal, DisplayName='Convert\n        subscription filename', Input=' SubscriptionDataFileLocation',\n        Result= 'SubscriptionDataFilePath', Workspace='Workspace'. If you are using TFS 2013 or later, add another GetLocalPath. IncomingPath='SubscriptionDataFileLocation', and Result='SubscriptionDataFilePath.'\n\n    6.  Add an InvokeProcess activity at the end of the new Sequence.\n        This activity calls PowerShell.exe with the arguments passed in\n        by the Build Definition.\n\n        1.  Arguments = String.Format(\" -File \"\"{0}\"\" -serviceName {1}\n            -storageAccountName {2} -packageLocation \"\"{3}\"\"\n            -cloudConfigLocation \"\"{4}\"\" -subscriptionDataFile \"\"{5}\"\"\n            -selectedSubscription {6} -environment \"\"{7}\"\"\",\n            PublishScriptFilePath, ServiceName, StorageAccountName,\n            PackageLocation, CloudConfigLocation,\n            SubscriptionDataFilePath, SubscriptionName, Environment)\n\n        2.  DisplayName = Execute publish script\n\n        3.  FileName = \"PowerShell\" (include the quotes)\n\n        4.  OutputEncoding=\n            System.Text.Encoding.GetEncoding(System.Globalization.CultureInfo.InstalledUICulture.TextInfo.OEMCodePage)\n\n    7.  In the **Handle Standard Output** section textbox of the\n        InvokeProcess, set the textbox value to 'data'. This is a\n        variable to store the standard output data.\n\n    8.  Add a WriteBuildMessage activity just below the **Handle Standard Output**\n        section. Set the Importance =\n        'Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High'\n        and the Message='data'. This ensures the standard output of the\n        script will get written to the build output.\n\n    9.  In the **Handle Error Output** section textbox of the\n        InvokeProcess, set the textbox value to 'data'. This is a\n        variable to store the standard error data.\n\n    10. Add a WriteBuildError activity just below the **Handle Error Output**\n        section. Set the Message='data'. This ensures the standard\n        errors of the script will get written to the build error output.\n\n    11. Correct any errors, indicated by blue exclamation marks. Hover over the\n        exclamation marks to get a hint about the error. Save the workflow to\n        clear errors.\n\n    The final result of the publish workflow activities will look like\n    this in the designer:\n\n    ![][5]\n\n    The final result of the publish workflow activities will look like\n    this in XAML:\n\n        <If Condition=\"[Not String.IsNullOrEmpty(PublishScriptLocation)]\" sap2010:WorkflowViewState.IdRef=\"If_1\">\n            <If.Then>\n              <Sequence DisplayName=\"Start Publish\" sap2010:WorkflowViewState.IdRef=\"Sequence_4\">\n                <Sequence.Variables>\n                  <Variable x:TypeArguments=\"x:String\" Name=\"SubscriptionDataFilePath\" />\n                  <Variable x:TypeArguments=\"x:String\" Name=\"PublishScriptFilePath\" />\n                </Sequence.Variables>\n                <mtbwa:ConvertWorkspaceItem DisplayName=\"Convert publish script filename\" sap2010:WorkflowViewState.IdRef=\"ConvertWorkspaceItem_1\" Input=\"[PublishScriptLocation]\" Result=\"[PublishScriptFilePath]\" Workspace=\"[Workspace]\" />\n                <mtbwa:ConvertWorkspaceItem DisplayName=\"Convert subscription filename\" sap2010:WorkflowViewState.IdRef=\"ConvertWorkspaceItem_2\" Input=\"[SubscriptionDataFileLocation]\" Result=\"[SubscriptionDataFilePath]\" Workspace=\"[Workspace]\" />\n                <mtbwa:InvokeProcess Arguments=\"[String.Format(&quot; -File &quot;&quot;{0}&quot;&quot; -serviceName {1}&#xD;&#xA;            -storageAccountName {2} -packageLocation &quot;&quot;{3}&quot;&quot;&#xD;&#xA;            -cloudConfigLocation &quot;&quot;{4}&quot;&quot; -subscriptionDataFile &quot;&quot;{5}&quot;&quot;&#xD;&#xA;            -selectedSubscription {6} -environment &quot;&quot;{7}&quot;&quot;&quot;,&#xD;&#xA;            PublishScriptFilePath, ServiceName, StorageAccountName,&#xD;&#xA;            PackageLocation, CloudConfigLocation,&#xD;&#xA;            SubscriptionDataFilePath, SubscriptionName, Environment)]\" DisplayName=\"'Execute Publish Script'\" FileName=\"[PowerShell]\" sap2010:WorkflowViewState.IdRef=\"InvokeProcess_1\">\n                  <mtbwa:InvokeProcess.ErrorDataReceived>\n                    <ActivityAction x:TypeArguments=\"x:String\">\n                      <ActivityAction.Argument>\n                        <DelegateInArgument x:TypeArguments=\"x:String\" Name=\"data\" />\n                      </ActivityAction.Argument>\n                      <mtbwa:WriteBuildError Message=\"{x:Null}\" sap2010:WorkflowViewState.IdRef=\"WriteBuildError_1\" />\n                    </ActivityAction>\n                  </mtbwa:InvokeProcess.ErrorDataReceived>\n                  <mtbwa:InvokeProcess.OutputDataReceived>\n                    <ActivityAction x:TypeArguments=\"x:String\">\n                      <ActivityAction.Argument>\n                        <DelegateInArgument x:TypeArguments=\"x:String\" Name=\"data\" />\n                      </ActivityAction.Argument>\n                      <mtbwa:WriteBuildMessage sap2010:WorkflowViewState.IdRef=\"WriteBuildMessage_2\" Importance=\"[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]\" Message=\"[data]\" mva:VisualBasic.Settings=\"Assembly references and imported namespaces serialized as XML namespaces\" />\n                    </ActivityAction>\n                  </mtbwa:InvokeProcess.OutputDataReceived>\n                </mtbwa:InvokeProcess>\n              </Sequence>\n            </If.Then>\n          </If>\n        </Sequence>\n\n\n7.  Save the build process template workflow and Check In this file.\n\n8.  Edit the build definition (close it if it is already open), and select\n    the **New** button if you do not yet see the new template in the list of Process Templates.\n\n9.  Set the parameter property values in the Misc section as follows:\n\n    1.  CloudConfigLocation ='c:\\\\drops\\\\app.publish\\\\ServiceConfiguration.Cloud.cscfg'\n        *This value is derived from:\n        ($PublishDir)ServiceConfiguration.Cloud.cscfg*\n\n    2.  PackageLocation = 'c:\\\\drops\\\\app.publish\\\\ContactManager.Azure.cspkg'\n        *This value is derived from: ($PublishDir)($ProjectName).cspkg*\n\n    3.  PublishScriptLocation = 'c:\\\\scripts\\\\WindowsAzure\\\\PublishCloudService.ps1'\n\n    4.  ServiceName = 'mycloudservicename'\n        *Use the appropriate cloud service name here*\n\n    5.  Environment = 'Staging'\n\n    6.  StorageAccountName = 'mystorageaccountname'\n        *Use the appropriate storage account name here*\n\n    7.  SubscriptionDataFileLocation =\n        'c:\\\\scripts\\\\WindowsAzure\\\\Subscription.xml'\n\n    8.  SubscriptionName = 'default'\n\n    ![][6]\n\n10. Save the changes to the Build Definition.\n\n11. Queue a Build to execute both the package build and publish. If you\n    have a trigger set to Continuous Integration, you will execute this\n    behavior on every check-in.\n\n### PublishCloudService.ps1 script template\n\n```\nParam(  $serviceName = \"\",\n        $storageAccountName = \"\",\n        $packageLocation = \"\",\n        $cloudConfigLocation = \"\",\n        $environment = \"Staging\",\n        $deploymentLabel = \"ContinuousDeploy to $servicename\",\n        $timeStampFormat = \"g\",\n        $alwaysDeleteExistingDeployments = 1,\n        $enableDeploymentUpgrade = 1,\n        $selectedsubscription = \"default\",\n        $subscriptionDataFile = \"\"\n     )\n\n\nfunction Publish()\n{\n    $deployment = Get-AzureDeployment -ServiceName $serviceName -Slot $slot -ErrorVariable a -ErrorAction silentlycontinue\n    if ($a[0] -ne $null)\n    {\n        Write-Output \"$(Get-Date -f $timeStampFormat) - No deployment is detected. Creating a new deployment. \"\n    }\n    #check for existing deployment and then either upgrade, delete + deploy, or cancel according to $alwaysDeleteExistingDeployments and $enableDeploymentUpgrade boolean variables\n    if ($deployment.Name -ne $null)\n    {\n        switch ($alwaysDeleteExistingDeployments)\n        {\n            1\n            {\n                switch ($enableDeploymentUpgrade)\n                {\n                    1  #Update deployment inplace (usually faster, cheaper, won't destroy VIP)\n                    {\n                        Write-Output \"$(Get-Date -f $timeStampFormat) - Deployment exists in $servicename.  Upgrading deployment.\"\n                        UpgradeDeployment\n                    }\n                    0  #Delete then create new deployment\n                    {\n                        Write-Output \"$(Get-Date -f $timeStampFormat) - Deployment exists in $servicename.  Deleting deployment.\"\n                        DeleteDeployment\n                        CreateNewDeployment\n\n                    }\n                } # switch ($enableDeploymentUpgrade)\n            }\n            0\n            {\n                Write-Output \"$(Get-Date -f $timeStampFormat) - ERROR: Deployment exists in $servicename.  Script execution cancelled.\"\n                exit\n            }\n        } #switch ($alwaysDeleteExistingDeployments)\n    } else {\n            CreateNewDeployment\n    }\n}\n\nfunction CreateNewDeployment()\n{\n    write-progress -id 3 -activity \"Creating New Deployment\" -Status \"In progress\"\n    Write-Output \"$(Get-Date -f $timeStampFormat) - Creating New Deployment: In progress\"\n\n    $opstat = New-AzureDeployment -Slot $slot -Package $packageLocation -Configuration $cloudConfigLocation -label $deploymentLabel -ServiceName $serviceName\n\n    $completeDeployment = Get-AzureDeployment -ServiceName $serviceName -Slot $slot\n    $completeDeploymentID = $completeDeployment.deploymentid\n\n    write-progress -id 3 -activity \"Creating New Deployment\" -completed -Status \"Complete\"\n    Write-Output \"$(Get-Date -f $timeStampFormat) - Creating New Deployment: Complete, Deployment ID: $completeDeploymentID\"\n\n    StartInstances\n}\n\nfunction UpgradeDeployment()\n{\n    write-progress -id 3 -activity \"Upgrading Deployment\" -Status \"In progress\"\n    Write-Output \"$(Get-Date -f $timeStampFormat) - Upgrading Deployment: In progress\"\n\n    # perform Update-Deployment\n    $setdeployment = Set-AzureDeployment -Upgrade -Slot $slot -Package $packageLocation -Configuration $cloudConfigLocation -label $deploymentLabel -ServiceName $serviceName -Force\n\n    $completeDeployment = Get-AzureDeployment -ServiceName $serviceName -Slot $slot\n    $completeDeploymentID = $completeDeployment.deploymentid\n\n    write-progress -id 3 -activity \"Upgrading Deployment\" -completed -Status \"Complete\"\n    Write-Output \"$(Get-Date -f $timeStampFormat) - Upgrading Deployment: Complete, Deployment ID: $completeDeploymentID\"\n}\n\nfunction DeleteDeployment()\n{\n\n    write-progress -id 2 -activity \"Deleting Deployment\" -Status \"In progress\"\n    Write-Output \"$(Get-Date -f $timeStampFormat) - Deleting Deployment: In progress\"\n\n    #WARNING - always deletes with force\n    $removeDeployment = Remove-AzureDeployment -Slot $slot -ServiceName $serviceName -Force\n\n    write-progress -id 2 -activity \"Deleting Deployment: Complete\" -completed -Status $removeDeployment\n    Write-Output \"$(Get-Date -f $timeStampFormat) - Deleting Deployment: Complete\"\n\n}\n\nfunction StartInstances()\n{\n    write-progress -id 4 -activity \"Starting Instances\" -status \"In progress\"\n    Write-Output \"$(Get-Date -f $timeStampFormat) - Starting Instances: In progress\"\n\n    $deployment = Get-AzureDeployment -ServiceName $serviceName -Slot $slot\n    $runstatus = $deployment.Status\n\n    if ($runstatus -ne 'Running')\n    {\n        $run = Set-AzureDeployment -Slot $slot -ServiceName $serviceName -Status Running\n    }\n    $deployment = Get-AzureDeployment -ServiceName $serviceName -Slot $slot\n    $oldStatusStr = @(\"\") * $deployment.RoleInstanceList.Count\n\n    while (-not(AllInstancesRunning($deployment.RoleInstanceList)))\n    {\n        $i = 1\n        foreach ($roleInstance in $deployment.RoleInstanceList)\n        {\n            $instanceName = $roleInstance.InstanceName\n            $instanceStatus = $roleInstance.InstanceStatus\n\n            if ($oldStatusStr[$i - 1] -ne $roleInstance.InstanceStatus)\n            {\n                $oldStatusStr[$i - 1] = $roleInstance.InstanceStatus\n                Write-Output \"$(Get-Date -f $timeStampFormat) - Starting Instance '$instanceName': $instanceStatus\"\n            }\n\n            write-progress -id (4 + $i) -activity \"Starting Instance '$instanceName'\" -status \"$instanceStatus\"\n            $i = $i + 1\n        }\n\n        sleep -Seconds 1\n\n        $deployment = Get-AzureDeployment -ServiceName $serviceName -Slot $slot\n    }\n\n    $i = 1\n    foreach ($roleInstance in $deployment.RoleInstanceList)\n    {\n        $instanceName = $roleInstance.InstanceName\n        $instanceStatus = $roleInstance.InstanceStatus\n\n        if ($oldStatusStr[$i - 1] -ne $roleInstance.InstanceStatus)\n        {\n            $oldStatusStr[$i - 1] = $roleInstance.InstanceStatus\n            Write-Output \"$(Get-Date -f $timeStampFormat) - Starting Instance '$instanceName': $instanceStatus\"\n        }\n\n        $i = $i + 1\n    }\n\n    $deployment = Get-AzureDeployment -ServiceName $serviceName -Slot $slot\n    $opstat = $deployment.Status\n\n    write-progress -id 4 -activity \"Starting Instances\" -completed -status $opstat\n    Write-Output \"$(Get-Date -f $timeStampFormat) - Starting Instances: $opstat\"\n}\n\nfunction AllInstancesRunning($roleInstanceList)\n{\n    foreach ($roleInstance in $roleInstanceList)\n    {\n        if ($roleInstance.InstanceStatus -ne \"ReadyRole\")\n        {\n            return $false\n        }\n    }\n\n    return $true\n}\n\n#configure powershell with Azure 1.7 modules\nImport-Module Azure\n\n#configure powershell with publishsettings for your subscription\n$pubsettings = $subscriptionDataFile\nImport-AzurePublishSettingsFile $pubsettings\nSet-AzureSubscription -CurrentStorageAccountName $storageAccountName -SubscriptionName $selectedsubscription\nSelect-AzureSubscription $selectedsubscription\n\n#set remaining environment variables for Azure cmdlets\n$subscription = Get-AzureSubscription $selectedsubscription\n$subscriptionname = $subscription.subscriptionname\n$subscriptionid = $subscription.subscriptionid\n$slot = $environment\n\n#main driver - publish & write progress to activity log\nWrite-Output \"$(Get-Date -f $timeStampFormat) - Azure Cloud Service deploy script started.\"\nWrite-Output \"$(Get-Date -f $timeStampFormat) - Preparing deployment of $deploymentLabel for $subscriptionname with Subscription ID $subscriptionid.\"\n\nPublish\n\n$deployment = Get-AzureDeployment -slot $slot -serviceName $servicename\n$deploymentUrl = $deployment.Url\n\nWrite-Output \"$(Get-Date -f $timeStampFormat) - Created Cloud Service with URL $deploymentUrl.\"\nWrite-Output \"$(Get-Date -f $timeStampFormat) - Azure Cloud Service deploy script finished.\"\n```\n\n## Next steps\n\nTo enable remote debugging when using continuous delivery, see [Enable remote debugging when using continuous delivery to publish to Azure](cloud-services-virtual-machines-dotnet-continuous-delivery-remote-debugging.md).\n\n  [Continuous Delivery to Azure by Using Visual Studio Online]: cloud-services-continuous-delivery-use-vso.md  \n  [Team Foundation Build Service]: http://go.microsoft.com/fwlink/p/?LinkId=239963\n  [.NET Framework 4]: http://go.microsoft.com/fwlink/?LinkId=239538\n  [.NET Framework 4.5]: http://go.microsoft.com/fwlink/?LinkId=245484\n  [.NET Framework 4.5.2]: http://go.microsoft.com/fwlink/?LinkId=521668\n    [1]: http://go.microsoft.com/fwlink/p/?LinkId=239966\n  [Scale out your build system]: http://go.microsoft.com/fwlink/?LinkId=238798\n  [Deploy and configure a build server]: http://go.microsoft.com/fwlink/?LinkId=238799\n  [0]: ./media/cloud-services-dotnet-continuous-delivery/tfs-01.png\n  [2]: ./media/cloud-services-dotnet-continuous-delivery/tfs-02.png\n  [Azure PowerShell cmdlets]: http://go.microsoft.com/fwlink/?LinkId=256262\n  [the .publishsettings file]: https://manage.windowsazure.com/download/publishprofile.aspx?wa=wsignin1.0\n  [end of this article]: #script\n\n  [3]: ./media/cloud-services-dotnet-continuous-delivery/common-task-tfs-03.png\n  [4]: ./media/cloud-services-dotnet-continuous-delivery/common-task-tfs-04.png\n  [5]: ./media/cloud-services-dotnet-continuous-delivery/common-task-tfs-05.png\n  [6]: ./media/cloud-services-dotnet-continuous-delivery/common-task-tfs-06.png\n\ntest\n"
}