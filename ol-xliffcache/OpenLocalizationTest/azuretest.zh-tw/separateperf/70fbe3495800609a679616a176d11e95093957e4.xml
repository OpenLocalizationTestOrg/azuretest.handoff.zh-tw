{
  "nodes": [
    {
      "content": "How to use Blob storage from Ruby | Microsoft Azure",
      "pos": [
        27,
        78
      ]
    },
    {
      "content": "Learn how to use the Azure Blob service to upload, download, list, and delete blob content.",
      "pos": [
        97,
        188
      ]
    },
    {
      "content": "Samples written in Ruby.",
      "pos": [
        189,
        213
      ]
    },
    {
      "content": "How to use Blob storage from Ruby",
      "pos": [
        512,
        545
      ]
    },
    {
      "content": "Overview",
      "pos": [
        648,
        656
      ]
    },
    {
      "content": "This guide will show you how to perform common scenarios using the Azure Blob service.",
      "pos": [
        658,
        744
      ]
    },
    {
      "content": "The samples are written using the Ruby API.",
      "pos": [
        745,
        788
      ]
    },
    {
      "content": "The scenarios covered include <bpt id=\"p1\">**</bpt>uploading, listing, downloading,<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>deleting<ept id=\"p2\">**</ept> blobs.",
      "pos": [
        789,
        879
      ]
    },
    {
      "content": "Create a Ruby application",
      "pos": [
        1082,
        1107
      ]
    },
    {
      "content": "Create a Ruby application.",
      "pos": [
        1109,
        1135
      ]
    },
    {
      "content": "For instructions,",
      "pos": [
        1136,
        1153
      ]
    },
    {
      "content": "see <bpt id=\"p1\">[</bpt>Create a Ruby application on Azure<ept id=\"p1\">](/develop/ruby/tutorials/web-app-with-linux-vm/)</ept>.",
      "pos": [
        1154,
        1243
      ]
    },
    {
      "content": "Configure your application to access Storage",
      "pos": [
        1248,
        1292
      ]
    },
    {
      "content": "To use Azure Storage, you need to download and use the Ruby azure package, which includes a set of convenience libraries that communicate with the storage REST services.",
      "pos": [
        1294,
        1463
      ]
    },
    {
      "content": "Use RubyGems to obtain the package",
      "pos": [
        1469,
        1503
      ]
    },
    {
      "pos": [
        1508,
        1610
      ],
      "content": "Use a command-line interface such as <bpt id=\"p1\">**</bpt>PowerShell<ept id=\"p1\">**</ept> (Windows), <bpt id=\"p2\">**</bpt>Terminal<ept id=\"p2\">**</ept> (Mac), or <bpt id=\"p3\">**</bpt>Bash<ept id=\"p3\">**</ept> (Unix)."
    },
    {
      "content": "Type \"gem install azure\" in the command window to install the gem and dependencies.",
      "pos": [
        1615,
        1698
      ]
    },
    {
      "content": "Import the package",
      "pos": [
        1704,
        1722
      ]
    },
    {
      "content": "Using your favorite text editor, add the following to the top of the Ruby file where you intend to use storage:",
      "pos": [
        1724,
        1835
      ]
    },
    {
      "content": "Setup an Azure Storage Connection",
      "pos": [
        1861,
        1894
      ]
    },
    {
      "content": "The azure module will read the environment variables <bpt id=\"p1\">**</bpt>AZURE\\_STORAGE\\_ACCOUNT<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>AZURE\\_STORAGE\\_ACCESS_KEY<ept id=\"p2\">**</ept>",
      "pos": [
        1896,
        2011
      ]
    },
    {
      "content": "for information required to connect to your Azure storage account.",
      "pos": [
        2012,
        2078
      ]
    },
    {
      "content": "If these environment variables are not set, you must specify the account information before using <bpt id=\"p1\">**</bpt>Azure::BlobService<ept id=\"p1\">**</ept> with the following code:",
      "pos": [
        2079,
        2224
      ]
    },
    {
      "content": "To obtain these values:",
      "pos": [
        2371,
        2394
      ]
    },
    {
      "pos": [
        2399,
        2473
      ],
      "content": "Log in to the <bpt id=\"p1\">[</bpt>Azure Management Portal<ept id=\"p1\">](https://manage.windowsazure.com/)</ept>."
    },
    {
      "content": "Navigate to the storage account you want to use.",
      "pos": [
        2477,
        2525
      ]
    },
    {
      "pos": [
        2529,
        2588
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>MANAGE KEYS<ept id=\"p1\">**</ept> at the bottom of the navigation pane."
    },
    {
      "content": "In the pop up dialog, you'll see the storage account name, primary access key and secondary access key.",
      "pos": [
        2592,
        2695
      ]
    },
    {
      "content": "For access key, you can use either the primary one or the secondary one.",
      "pos": [
        2696,
        2768
      ]
    },
    {
      "content": "Create a container",
      "pos": [
        2773,
        2791
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Azure::BlobService<ept id=\"p1\">**</ept> object lets you work with containers and blobs.",
      "pos": [
        2909,
        2983
      ]
    },
    {
      "content": "To create a container, use the <bpt id=\"p1\">**</bpt>create\\_container()<ept id=\"p1\">**</ept> method.",
      "pos": [
        2984,
        3046
      ]
    },
    {
      "content": "The following code example creates a container or print out the error if there is any.",
      "pos": [
        3048,
        3134
      ]
    },
    {
      "content": "If you want to make the files in the container public, you can set the container's permissions.",
      "pos": [
        3300,
        3395
      ]
    },
    {
      "pos": [
        3397,
        3509
      ],
      "content": "You can just modify the <ph id=\"ph1\">&lt;strong&gt;</ph>create\\_container()<ph id=\"ph2\">&lt;/strong&gt;</ph> call to pass the <bpt id=\"p1\">**</bpt>:public\\_access\\_level<ept id=\"p1\">**</ept> option:"
    },
    {
      "pos": [
        3638,
        3697
      ],
      "content": "Valid values for the <bpt id=\"p1\">**</bpt>:public\\_access\\_level<ept id=\"p1\">**</ept> option are:"
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>blob:<ept id=\"p1\">**</ept> Specifies full public read access for container and blob data.",
      "pos": [
        3701,
        3773
      ]
    },
    {
      "content": "Clients can enumerate blobs within the container via anonymous request, but cannot enumerate containers within the storage account.",
      "pos": [
        3774,
        3905
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>container:<ept id=\"p1\">**</ept> Specifies public read access for blobs.",
      "pos": [
        3909,
        3963
      ]
    },
    {
      "content": "Blob data within this container can be read via anonymous request, but container data is not available.",
      "pos": [
        3964,
        4067
      ]
    },
    {
      "content": "Clients cannot enumerate blobs within the container via anonymous request.",
      "pos": [
        4068,
        4142
      ]
    },
    {
      "pos": [
        4144,
        4290
      ],
      "content": "Alternatively, you can modify the public access level of a container by using <bpt id=\"p1\">**</bpt>set\\_container\\_acl()<ept id=\"p1\">**</ept> method to specify the public access level."
    },
    {
      "pos": [
        4292,
        4368
      ],
      "content": "The following code example changes the public access level to <bpt id=\"p1\">**</bpt>container<ept id=\"p1\">**</ept>:"
    },
    {
      "content": "Upload a blob into a container",
      "pos": [
        4446,
        4476
      ]
    },
    {
      "pos": [
        4478,
        4616
      ],
      "content": "To upload content to a blob, use the <bpt id=\"p1\">**</bpt>create\\_block\\_blob()<ept id=\"p1\">**</ept> method to create the blob, use a file or string as the content of the blob."
    },
    {
      "pos": [
        4618,
        4717
      ],
      "content": "The following code uploads the file <bpt id=\"p1\">**</bpt>test.png<ept id=\"p1\">**</ept> as a new blob named \"image-blob\" in the container."
    },
    {
      "content": "List the blobs in a container",
      "pos": [
        4898,
        4927
      ]
    },
    {
      "content": "To list the containers, use <bpt id=\"p1\">**</bpt>list_containers()<ept id=\"p1\">**</ept> method.",
      "pos": [
        4929,
        4986
      ]
    },
    {
      "content": "To list the blobs within a container, use <bpt id=\"p1\">**</bpt>list\\_blobs()<ept id=\"p1\">**</ept> method.",
      "pos": [
        4987,
        5054
      ]
    },
    {
      "content": "This outputs the urls of all the blobs in all the containers for the account.",
      "pos": [
        5056,
        5133
      ]
    },
    {
      "content": "Download blobs",
      "pos": [
        5356,
        5370
      ]
    },
    {
      "pos": [
        5372,
        5447
      ],
      "content": "To download blobs, use the <bpt id=\"p1\">**</bpt>get\\_blob()<ept id=\"p1\">**</ept> method to retrieve the contents."
    },
    {
      "pos": [
        5449,
        5581
      ],
      "content": "The following code example demonstrates using <bpt id=\"p1\">**</bpt>get\\_blob()<ept id=\"p1\">**</ept> to download the contents of \"image-blob\" and write it to a local file."
    },
    {
      "content": "Delete a Blob",
      "pos": [
        5722,
        5735
      ]
    },
    {
      "content": "Finally, to delete a blob, use the <bpt id=\"p1\">**</bpt>delete\\_blob()<ept id=\"p1\">**</ept> method.",
      "pos": [
        5736,
        5797
      ]
    },
    {
      "content": "The following code example demonstrates how to delete a blob.",
      "pos": [
        5798,
        5859
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        5930,
        5940
      ]
    },
    {
      "content": "To learn about more complex storage tasks, follow these links:",
      "pos": [
        5942,
        6004
      ]
    },
    {
      "pos": [
        6008,
        6094
      ],
      "content": "MSDN Reference: <bpt id=\"p1\">[</bpt>Azure Storage<ept id=\"p1\">](http://msdn.microsoft.com/library/azure/gg433040.aspx)</ept>"
    },
    {
      "content": "Azure Storage Team Blog",
      "pos": [
        6098,
        6121
      ]
    },
    {
      "pos": [
        6171,
        6264
      ],
      "content": "<bpt id=\"p1\">[</bpt>Azure SDK for Ruby<ept id=\"p1\">](https://github.com/WindowsAzure/azure-sdk-for-ruby)</ept> repository on GitHub"
    }
  ],
  "content": "<properties\n    pageTitle=\"How to use Blob storage from Ruby | Microsoft Azure\"\n    description=\"Learn how to use the Azure Blob service to upload, download, list, and delete blob content. Samples written in Ruby.\"\n    services=\"storage\"\n    documentationCenter=\"ruby\"\n    authors=\"tfitzmac\"\n    manager=\"wpickett\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"storage\"\n    ms.workload=\"storage\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"ruby\"\n    ms.topic=\"article\"\n    ms.date=\"09/01/2015\"\n    ms.author=\"tomfitz\"/>\n\n\n# How to use Blob storage from Ruby\n\n[AZURE.INCLUDE [storage-selector-blob-include](../../includes/storage-selector-blob-include.md)]\n\n## Overview\n\nThis guide will show you how to perform common scenarios using the Azure Blob service. The samples are written using the Ruby API. The scenarios covered include **uploading, listing, downloading,** and **deleting** blobs.\n\n[AZURE.INCLUDE [storage-blob-concepts-include](../../includes/storage-blob-concepts-include.md)]\n\n[AZURE.INCLUDE [storage-create-account-include](../../includes/storage-create-account-include.md)]\n\n## Create a Ruby application\n\nCreate a Ruby application. For instructions,\nsee [Create a Ruby application on Azure](/develop/ruby/tutorials/web-app-with-linux-vm/).\n\n## Configure your application to access Storage\n\nTo use Azure Storage, you need to download and use the Ruby azure package, which includes a set of convenience libraries that communicate with the storage REST services.\n\n### Use RubyGems to obtain the package\n\n1. Use a command-line interface such as **PowerShell** (Windows), **Terminal** (Mac), or **Bash** (Unix).\n\n2. Type \"gem install azure\" in the command window to install the gem and dependencies.\n\n### Import the package\n\nUsing your favorite text editor, add the following to the top of the Ruby file where you intend to use storage:\n\n    require \"azure\"\n\n## Setup an Azure Storage Connection\n\nThe azure module will read the environment variables **AZURE\\_STORAGE\\_ACCOUNT** and **AZURE\\_STORAGE\\_ACCESS_KEY**\nfor information required to connect to your Azure storage account. If these environment variables are not set, you must specify the account information before using **Azure::BlobService** with the following code:\n\n    Azure.config.storage_account_name = \"<your azure storage account>\"\n    Azure.config.storage_access_key = \"<your azure storage access key>\"\n\n\nTo obtain these values:\n\n1. Log in to the [Azure Management Portal](https://manage.windowsazure.com/).\n2. Navigate to the storage account you want to use.\n3. Click **MANAGE KEYS** at the bottom of the navigation pane.\n4. In the pop up dialog, you'll see the storage account name, primary access key and secondary access key. For access key, you can use either the primary one or the secondary one.\n\n## Create a container\n\n[AZURE.INCLUDE [storage-container-naming-rules-include](../../includes/storage-container-naming-rules-include.md)]\n\nThe **Azure::BlobService** object lets you work with containers and blobs. To create a container, use the **create\\_container()** method.\n\nThe following code example creates a container or print out the error if there is any.\n\n    azure_blob_service = Azure::BlobService.new\n    begin\n      container = azure_blob_service.create_container(\"test-container\")\n    rescue\n      puts $!\n    end\n\nIf you want to make the files in the container public, you can set the container's permissions.\n\nYou can just modify the <strong>create\\_container()</strong> call to pass the **:public\\_access\\_level** option:\n\n    container = azure_blob_service.create_container(\"test-container\",\n      :public_access_level => \"<public access level>\")\n\n\nValid values for the **:public\\_access\\_level** option are:\n\n* **blob:** Specifies full public read access for container and blob data. Clients can enumerate blobs within the container via anonymous request, but cannot enumerate containers within the storage account.\n\n* **container:** Specifies public read access for blobs. Blob data within this container can be read via anonymous request, but container data is not available. Clients cannot enumerate blobs within the container via anonymous request.\n\nAlternatively, you can modify the public access level of a container by using **set\\_container\\_acl()** method to specify the public access level.\n\nThe following code example changes the public access level to **container**:\n\n    azure_blob_service.set_container_acl('test-container', \"container\")\n\n## Upload a blob into a container\n\nTo upload content to a blob, use the **create\\_block\\_blob()** method to create the blob, use a file or string as the content of the blob.\n\nThe following code uploads the file **test.png** as a new blob named \"image-blob\" in the container.\n\n    content = File.open(\"test.png\", \"rb\") { |file| file.read }\n    blob = azure_blob_service.create_block_blob(container.name,\n      \"image-blob\", content)\n    puts blob.name\n\n## List the blobs in a container\n\nTo list the containers, use **list_containers()** method.\nTo list the blobs within a container, use **list\\_blobs()** method.\n\nThis outputs the urls of all the blobs in all the containers for the account.\n\n    containers = azure_blob_service.list_containers()\n    containers.each do |container|\n      blobs = azure_blob_service.list_blobs(container.name)\n      blobs.each do |blob|\n        puts blob.name\n      end\n    end\n\n## Download blobs\n\nTo download blobs, use the **get\\_blob()** method to retrieve the contents.\n\nThe following code example demonstrates using **get\\_blob()** to download the contents of \"image-blob\" and write it to a local file.\n\n    blob, content = azure_blob_service.get_blob(container.name,\"image-blob\")\n    File.open(\"download.png\",\"wb\") {|f| f.write(content)}\n\n## Delete a Blob\nFinally, to delete a blob, use the **delete\\_blob()** method. The following code example demonstrates how to delete a blob.\n\n    azure_blob_service.delete_blob(container.name, \"image-blob\")\n\n## Next steps\n\nTo learn about more complex storage tasks, follow these links:\n\n- MSDN Reference: [Azure Storage](http://msdn.microsoft.com/library/azure/gg433040.aspx)\n- [Azure Storage Team Blog](http://blogs.msdn.com/b/windowsazurestorage/)\n- [Azure SDK for Ruby](https://github.com/WindowsAzure/azure-sdk-for-ruby) repository on GitHub\n"
}