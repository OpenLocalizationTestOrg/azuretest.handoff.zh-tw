{
  "nodes": [
    {
      "content": "Get started with Notification Hubs for Xamarin iOS apps | Microsoft Azure",
      "pos": [
        27,
        100
      ]
    },
    {
      "content": "In this tutorial, you learn how to use Azure Notification Hubs to send push notifications to a Xamarin iOS application.",
      "pos": [
        119,
        238
      ]
    },
    {
      "content": "Get started with Notification Hubs",
      "pos": [
        573,
        607
      ]
    },
    {
      "content": "Overview",
      "pos": [
        727,
        735
      ]
    },
    {
      "content": "This tutorial shows you how to use Azure Notification Hubs to send push notifications to an iOS application.",
      "pos": [
        737,
        845
      ]
    },
    {
      "content": "You'll create a blank Xamarin.iOS app that receives push notifications by using the Apple Push Notification Service (APNs).",
      "pos": [
        846,
        969
      ]
    },
    {
      "content": "When you're finished, you'll be able to use your notification hub to broadcast push notifications to all the devices running your app.",
      "pos": [
        970,
        1104
      ]
    },
    {
      "content": "The finished code is available in the [NotificationHubs app][GitHub] sample.",
      "pos": [
        1105,
        1181
      ]
    },
    {
      "content": "This tutorial demonstrates the simple broadcast scenario in using Notification Hubs.",
      "pos": [
        1183,
        1267
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        1271,
        1284
      ]
    },
    {
      "content": "This tutorial requires the following:",
      "pos": [
        1286,
        1323
      ]
    },
    {
      "content": "[Xcode 6.0][Install Xcode]",
      "pos": [
        1327,
        1353
      ]
    },
    {
      "content": "An iOS 7.0 (or later version) capable device",
      "pos": [
        1356,
        1400
      ]
    },
    {
      "content": "iOS Developer Program membership",
      "pos": [
        1403,
        1435
      ]
    },
    {
      "content": "[Xamarin.iOS]",
      "pos": [
        1438,
        1451
      ]
    },
    {
      "content": "[Azure Mobile Services Component]",
      "pos": [
        1454,
        1487
      ]
    },
    {
      "pos": [
        1494,
        1683
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Because of configuration requirements for push notifications, you must deploy and test push notifications on an iOS capable device (iPhone or iPad) instead of in the simulator."
    },
    {
      "content": "Completing this tutorial is a prerequisite for all other Notification Hubs tutorials for Xamarin.iOS apps.",
      "pos": [
        1685,
        1791
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> To complete this tutorial, you must have an active Azure account.",
      "pos": [
        1795,
        1878
      ]
    },
    {
      "content": "If you don't have an account, you can create a free trial account in just a couple of minutes.",
      "pos": [
        1879,
        1973
      ]
    },
    {
      "content": "For details, see <bpt id=\"p1\">[</bpt>Azure Free Trial<ept id=\"p1\">](http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A643EE910&amp;amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fdocumentation%2Farticles%2Fpartner-xamarin-notification-hubs-ios-get-started)</ept>.",
      "pos": [
        1974,
        2211
      ]
    },
    {
      "content": "The Apple Push Notification Service uses certificates to authenticate your mobile service.",
      "pos": [
        2213,
        2303
      ]
    },
    {
      "content": "Follow these instructions to create the necessary certificates and upload them to your mobile service.",
      "pos": [
        2304,
        2406
      ]
    },
    {
      "content": "For the official APNs feature documentation, see [Apple Push Notification Service].",
      "pos": [
        2407,
        2490
      ]
    },
    {
      "pos": [
        2495,
        2567
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"certificates\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Generate the Certificate Signing Request file"
    },
    {
      "content": "First you must generate the Certificate Signing Request (CSR) file, which is used by Apple to generate a signed certificate.",
      "pos": [
        2569,
        2693
      ]
    },
    {
      "content": "From the Utilities folder, run the Keychain Access tool.",
      "pos": [
        2698,
        2754
      ]
    },
    {
      "pos": [
        2759,
        2890
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Keychain Access<ept id=\"p1\">**</ept>, expand <bpt id=\"p2\">**</bpt>Certificate Assistant<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>Request a Certificate from a Certificate Authority<ept id=\"p3\">**</ept>."
    },
    {
      "pos": [
        2907,
        3071
      ],
      "content": "Select your <bpt id=\"p1\">**</bpt>User Email Address<ept id=\"p1\">**</ept>, type <bpt id=\"p2\">**</bpt>Common Name<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>CA Email Address<ept id=\"p3\">**</ept> values, make sure that <bpt id=\"p4\">**</bpt>Saved to disk<ept id=\"p4\">**</ept> is selected, and then click <bpt id=\"p5\">**</bpt>Continue<ept id=\"p5\">**</ept>."
    },
    {
      "pos": [
        3088,
        3191
      ],
      "content": "Type a name for the CSR file in <bpt id=\"p1\">**</bpt>Save As<ept id=\"p1\">**</ept>, select the location in <bpt id=\"p2\">**</bpt>Where<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>Save<ept id=\"p3\">**</ept>."
    },
    {
      "content": "This saves the CSR file in the selected location.",
      "pos": [
        3209,
        3258
      ]
    },
    {
      "content": "The default location is on the desktop.",
      "pos": [
        3259,
        3298
      ]
    },
    {
      "content": "Remember the location that you have chosen for this file.",
      "pos": [
        3299,
        3356
      ]
    },
    {
      "content": "Next, register your app with Apple, enable push notifications, and upload this exported CSR to create a push certificate.",
      "pos": [
        3358,
        3479
      ]
    },
    {
      "pos": [
        3483,
        3546
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"register\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Register your app for push notifications"
    },
    {
      "content": "To be able to send push notifications to an iOS app from Mobile Services, you must register your application with Apple and also register for push notifications.",
      "pos": [
        3548,
        3709
      ]
    },
    {
      "pos": [
        3716,
        4035
      ],
      "content": "If you have not already registered your app, navigate to the <ph id=\"ph1\">&lt;a href=\"http://go.microsoft.com/fwlink/p/?LinkId=272456\" target=\"_blank\"&gt;</ph>iOS Provisioning Portal<ph id=\"ph2\">&lt;/a&gt;</ph> at the Apple Developer Center, sign in with your Apple ID, click <bpt id=\"p1\">**</bpt>Identifiers<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>App IDs<ept id=\"p2\">**</ept>, and finally click the <bpt id=\"p3\">**</bpt>+<ept id=\"p3\">**</ept> sign to register a new app."
    },
    {
      "pos": [
        4054,
        4238
      ],
      "content": "Type a name for your app in <bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept> and a value for <bpt id=\"p2\">**</bpt>Bundle Identifier<ept id=\"p2\">**</ept>, check the <bpt id=\"p3\">**</bpt>Push Notifications<ept id=\"p3\">**</ept> option in the <bpt id=\"p4\">**</bpt>App Services<ept id=\"p4\">**</ept> section, and then click <bpt id=\"p5\">**</bpt>Continue<ept id=\"p5\">**</ept>."
    },
    {
      "content": "Locate the app ID that you just created, and click its row.",
      "pos": [
        4713,
        4772
      ]
    },
    {
      "content": "Clicking the app ID will display details about the app and the app ID:",
      "pos": [
        4792,
        4862
      ]
    },
    {
      "pos": [
        4895,
        5046
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Edit<ept id=\"p1\">**</ept>, and then scroll to the bottom of the screen and click <bpt id=\"p2\">**</bpt>Create Certificate...<ept id=\"p2\">**</ept> under the section <bpt id=\"p3\">**</bpt>Development Push SSL Certificate<ept id=\"p3\">**</ept>."
    },
    {
      "content": "This displays the Add iOS Certificate assistant.",
      "pos": [
        5066,
        5114
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> This tutorial uses a development certificate.",
      "pos": [
        5136,
        5194
      ]
    },
    {
      "content": "The same process is used for registering a production certificate.",
      "pos": [
        5195,
        5261
      ]
    },
    {
      "content": "Just make sure that you set the same certificate type when you upload the certificate to Mobile Services.",
      "pos": [
        5262,
        5367
      ]
    },
    {
      "pos": [
        5372,
        5514
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Choose File<ept id=\"p1\">**</ept>, browse to the location in which you saved the CSR file that you created in the first task, and then click <bpt id=\"p2\">**</bpt>Generate<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        5533,
        5625
      ],
      "content": "After the certificate is created by the portal, click <bpt id=\"p1\">**</bpt>Download<ept id=\"p1\">**</ept>, and then click <bpt id=\"p2\">**</bpt>Done<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        5661,
        5759
      ],
      "content": "This downloads the signing certificate and saves it to your computer in your <bpt id=\"p1\">**</bpt>Downloads<ept id=\"p1\">**</ept> folder."
    },
    {
      "pos": [
        5779,
        5887
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> By default, the downloaded file for a development certificate is named <bpt id=\"p1\">**</bpt>aps_development.cer<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        5892,
        5961
      ],
      "content": "Double-click the downloaded push certificate <bpt id=\"p1\">**</bpt>aps_development.cer<ept id=\"p1\">**</ept>."
    },
    {
      "content": "This installs the new certificate in the Keychain, as shown below:",
      "pos": [
        5967,
        6033
      ]
    },
    {
      "pos": [
        6054,
        6218
      ],
      "content": "[AZURE.NOTE]\nThe name in your certificate might be different, but it will be prefixed with <strong>Apple Development iOS Push Notification Services:</strong>.",
      "leadings": [
        "",
        "    > "
      ],
      "nodes": [
        {
          "content": "The name in your certificate might be different, but it will be prefixed with <ph id=\"ph1\">&lt;strong&gt;</ph>Apple Development iOS Push Notification Services:<ph id=\"ph2\">&lt;/strong&gt;</ph>.",
          "pos": [
            13,
            158
          ]
        }
      ]
    },
    {
      "content": "Later, you will use this certificate to generate a .p12 file and upload it to your notification hub to enable push notifications through APNs.",
      "pos": [
        6224,
        6366
      ]
    },
    {
      "pos": [
        6370,
        6433
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"profile\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Create a provisioning profile for the app"
    },
    {
      "content": "Back in the <ph id=\"ph1\">&lt;a href=\"http://go.microsoft.com/fwlink/p/?LinkId=272456\" target=\"_blank\"&gt;</ph>iOS Provisioning Portal<ph id=\"ph2\">&lt;/a&gt;</ph>, select <bpt id=\"p1\">**</bpt>Provisioning Profiles<ept id=\"p1\">**</ept>, select <bpt id=\"p2\">**</bpt>All<ept id=\"p2\">**</ept>, and then click the <bpt id=\"p3\">**</bpt>+<ept id=\"p3\">**</ept> button to create a new profile.",
      "pos": [
        6438,
        6659
      ]
    },
    {
      "content": "This displays the <bpt id=\"p1\">**</bpt>Add iOS Provisioning Profile<ept id=\"p1\">**</ept> wizard.",
      "pos": [
        6660,
        6718
      ]
    },
    {
      "pos": [
        6737,
        6847
      ],
      "content": "Select <bpt id=\"p1\">**</bpt>iOS App Development<ept id=\"p1\">**</ept> under <bpt id=\"p2\">**</bpt>Development<ept id=\"p2\">**</ept> as the provisioning profile type, and click <bpt id=\"p3\">**</bpt>Continue<ept id=\"p3\">**</ept>."
    },
    {
      "pos": [
        6866,
        6982
      ],
      "content": "Select the app ID for the Mobile Services Quickstart app from the <bpt id=\"p1\">**</bpt>App ID<ept id=\"p1\">**</ept> drop-down list, and click <bpt id=\"p2\">**</bpt>Continue<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        7001,
        7112
      ],
      "content": "In the <bpt id=\"p1\">**</bpt>Select certificates<ept id=\"p1\">**</ept> screen, select the certificate that you created earlier, and click <bpt id=\"p2\">**</bpt>Continue<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        7131,
        7193
      ],
      "content": "Select the devices to use for testing, and click <bpt id=\"p1\">**</bpt>Continue<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        7212,
        7311
      ],
      "content": "Finally, choose a name for the profile in <bpt id=\"p1\">**</bpt>Profile Name<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Generate<ept id=\"p2\">**</ept>, and click <bpt id=\"p3\">**</bpt>Done<ept id=\"p3\">**</ept>."
    },
    {
      "content": "This creates a new provisioning profile.",
      "pos": [
        7345,
        7385
      ]
    },
    {
      "pos": [
        7390,
        7581
      ],
      "content": "In Xcode, open the Organizer, select the Devices view, select <bpt id=\"p1\">**</bpt>Provisioning Profiles<ept id=\"p1\">**</ept> in the <bpt id=\"p2\">**</bpt>Library<ept id=\"p2\">**</ept> section in the left pane, and import the provisioning profile that you just created."
    },
    {
      "content": "On the left, select your device, and again import the provisioning profile.",
      "pos": [
        7586,
        7661
      ]
    },
    {
      "pos": [
        7666,
        7823
      ],
      "content": "In Keychain Access, right-click the new certificate, click <bpt id=\"p1\">**</bpt>Export<ept id=\"p1\">**</ept>, type a name for your certificate, select the <bpt id=\"p2\">**</bpt>.p12<ept id=\"p2\">**</ept> format, and then click <bpt id=\"p3\">**</bpt>Save<ept id=\"p3\">**</ept>."
    },
    {
      "content": "Make a note of the file name and location of the exported certificate.",
      "pos": [
        7842,
        7912
      ]
    },
    {
      "content": "This ensures that the Xcode project uses the new profile for code signing.",
      "pos": [
        7914,
        7988
      ]
    },
    {
      "content": "Next, you must upload the certificate to your notification hub.",
      "pos": [
        7989,
        8052
      ]
    },
    {
      "pos": [
        8056,
        8115
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"configure-hub\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Configure your notification hub"
    },
    {
      "pos": [
        8120,
        8198
      ],
      "content": "Sign in to the [Azure portal], and click <bpt id=\"p1\">**</bpt>+NEW<ept id=\"p1\">**</ept> at the bottom of the screen."
    },
    {
      "pos": [
        8203,
        8310
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>App Services<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Service Bus<ept id=\"p2\">**</ept>, click <bpt id=\"p3\">**</bpt>Notification Hub<ept id=\"p3\">**</ept>, and then click <bpt id=\"p4\">**</bpt>Quick Create<ept id=\"p4\">**</ept>."
    },
    {
      "pos": [
        8328,
        8444
      ],
      "content": "Type a name for your notification hub, select your desired region, and then click <bpt id=\"p1\">**</bpt>Create a New Notification Hub<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        8462,
        8594
      ],
      "content": "Click the namespace that you just created (usually <bpt id=\"p1\">**</bpt><bpt id=\"p2\">*</bpt>notification hub name<ept id=\"p2\">*</ept>-ns<ept id=\"p1\">**</ept>), and then click the <bpt id=\"p3\">**</bpt>Configure<ept id=\"p3\">**</ept> tab at the top."
    },
    {
      "pos": [
        8612,
        8718
      ],
      "content": "Click the <bpt id=\"p1\">**</bpt>Notification Hubs<ept id=\"p1\">**</ept> tab at the top, and then click the notification hub that you just created."
    },
    {
      "content": "Select the <bpt id=\"p1\">**</bpt>Configure<ept id=\"p1\">**</ept> tab at the top, and then click <bpt id=\"p2\">**</bpt>Upload<ept id=\"p2\">**</ept> for the Apple notification settings.",
      "pos": [
        8737,
        8840
      ]
    },
    {
      "content": "Then select the <bpt id=\"p1\">**</bpt>.p12<ept id=\"p1\">**</ept> certificate that you exported earlier, along with the password for the certificate.",
      "pos": [
        8841,
        8949
      ]
    },
    {
      "content": "Make sure to select whether you want to use the <bpt id=\"p1\">**</bpt>Production<ept id=\"p1\">**</ept> (if you want to send push notifications to users who purchased your app from the store) or the <bpt id=\"p2\">**</bpt>Sandbox<ept id=\"p2\">**</ept> (during development) push service.",
      "pos": [
        8950,
        9154
      ]
    },
    {
      "content": "Click the <bpt id=\"p1\">**</bpt>Dashboard<ept id=\"p1\">**</ept> tab at the top, and then click <bpt id=\"p2\">**</bpt>Connection Information<ept id=\"p2\">**</ept>.",
      "pos": [
        9173,
        9255
      ]
    },
    {
      "content": "Take note of the two connection strings.",
      "pos": [
        9256,
        9296
      ]
    },
    {
      "content": "Your notification hub is now configured to work with APNs, and you have the connection strings to register your app and send notifications.",
      "pos": [
        9312,
        9451
      ]
    },
    {
      "pos": [
        9455,
        9524
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"connecting-app\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Connect your app to the notification hub"
    },
    {
      "content": "Create a new project",
      "pos": [
        9530,
        9550
      ]
    },
    {
      "pos": [
        9555,
        9669
      ],
      "content": "In Xamarin Studio, create a new iOS project and select the <bpt id=\"p1\">**</bpt>Unified API<ept id=\"p1\">**</ept> &gt; <bpt id=\"p2\">**</bpt>Single View Application<ept id=\"p2\">**</ept> template."
    },
    {
      "content": "Add a reference to the Azure Messaging component.",
      "pos": [
        9687,
        9736
      ]
    },
    {
      "content": "In the Solution view, right-click the <bpt id=\"p1\">**</bpt>Components<ept id=\"p1\">**</ept> folder for your project and choose <bpt id=\"p2\">**</bpt>Get More Components<ept id=\"p2\">**</ept>.",
      "pos": [
        9737,
        9849
      ]
    },
    {
      "content": "Search for the <bpt id=\"p1\">**</bpt>Azure Messaging<ept id=\"p1\">**</ept> component and add the component to your project.",
      "pos": [
        9850,
        9933
      ]
    },
    {
      "pos": [
        9938,
        9995
      ],
      "content": "In <bpt id=\"p1\">**</bpt>AppDelegate.cs<ept id=\"p1\">**</ept>, add the following using statement:"
    },
    {
      "content": "using WindowsAzure.Messaging;",
      "pos": [
        10001,
        10030
      ]
    },
    {
      "pos": [
        10035,
        10080
      ],
      "content": "Declare an instance of <bpt id=\"p1\">**</bpt>SBNotificationHub<ept id=\"p1\">**</ept>:"
    },
    {
      "pos": [
        10138,
        10199
      ],
      "content": "Create a <bpt id=\"p1\">**</bpt>Constants.cs<ept id=\"p1\">**</ept> class with the following variables:"
    },
    {
      "pos": [
        10413,
        10490
      ],
      "content": "In <bpt id=\"p1\">**</bpt>AppDelegate.cs<ept id=\"p1\">**</ept>, update <bpt id=\"p2\">**</bpt>FinishedLaunching()<ept id=\"p2\">**</ept> to match the following:"
    },
    {
      "pos": [
        10914,
        10995
      ],
      "content": "Override the <bpt id=\"p1\">**</bpt>RegisteredForRemoteNotifications()<ept id=\"p1\">**</ept> method in <bpt id=\"p2\">**</bpt>AppDelegate.cs<ept id=\"p2\">**</ept>:"
    },
    {
      "pos": [
        11809,
        11884
      ],
      "content": "Override the <bpt id=\"p1\">**</bpt>ReceivedRemoteNotification()<ept id=\"p1\">**</ept> method in <bpt id=\"p2\">**</bpt>AppDelegate.cs<ept id=\"p2\">**</ept>:"
    },
    {
      "pos": [
        12066,
        12142
      ],
      "content": "Create the following <bpt id=\"p1\">**</bpt>ProcessNotification()<ept id=\"p1\">**</ept> method in <bpt id=\"p2\">**</bpt>AppDelegate.cs<ept id=\"p2\">**</ept>:"
    },
    {
      "pos": [
        13850,
        13986
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> You can choose to override <bpt id=\"p1\">**</bpt>FailedToRegisterForRemoteNotifications()<ept id=\"p1\">**</ept> to handle situations such as no network connection."
    },
    {
      "content": "Run the app on your device.",
      "pos": [
        13993,
        14020
      ]
    },
    {
      "pos": [
        14024,
        14079
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"send\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Send notifications from your backend"
    },
    {
      "content": "You can send notifications by using Notification Hubs from any backend via our <ph id=\"ph1\">&lt;a href=\"http://msdn.microsoft.com/library/windowsazure/dn223264.aspx\"&gt;</ph>REST interface<ph id=\"ph2\">&lt;/a&gt;</ph>.",
      "pos": [
        14081,
        14250
      ]
    },
    {
      "content": "In this tutorial, we will send notifications by using a .NET console app and by using a mobile service through a node script.",
      "pos": [
        14251,
        14376
      ]
    },
    {
      "content": "To send notifications by using a .NET app:",
      "pos": [
        14378,
        14420
      ]
    },
    {
      "content": "Create a new Visual C# console application:",
      "pos": [
        14425,
        14468
      ]
    },
    {
      "content": "Add a reference to the Azure Service Bus SDK by using the <ph id=\"ph1\">&lt;a href=\"http://nuget.org/packages/WindowsAzure.ServiceBus/\"&gt;</ph>WindowsAzure.ServiceBus NuGet package<ph id=\"ph2\">&lt;/a&gt;</ph>.",
      "pos": [
        14487,
        14648
      ]
    },
    {
      "content": "In the Visual Studio main menu, click <bpt id=\"p1\">**</bpt>Tools<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Library Package Manager<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>Package Manager Console<ept id=\"p3\">**</ept>.",
      "pos": [
        14649,
        14776
      ]
    },
    {
      "content": "Then, in the console window, type the following and press Enter:",
      "pos": [
        14777,
        14841
      ]
    },
    {
      "content": "Open the Program.cs file and add the following using statement:",
      "pos": [
        14895,
        14958
      ]
    },
    {
      "pos": [
        15014,
        15064
      ],
      "content": "In your <ph id=\"ph1\">`Program`</ph> class, add the following method:"
    },
    {
      "pos": [
        15431,
        15477
      ],
      "content": "Add the following lines in your <ph id=\"ph1\">`Main`</ph> method:"
    },
    {
      "content": "Press the F5 key to run the app.",
      "pos": [
        15546,
        15578
      ]
    },
    {
      "content": "You should receive an alert on your device.",
      "pos": [
        15579,
        15622
      ]
    },
    {
      "content": "If you are using Wi-Fi, make sure that your connection is working.",
      "pos": [
        15623,
        15689
      ]
    },
    {
      "content": "You can find all the possible payloads in the Apple [Local and Push Notification Programming Guide].",
      "pos": [
        15691,
        15791
      ]
    },
    {
      "content": "To send a notification by using a mobile service, follow [Get started with Mobile Services], and then:",
      "pos": [
        15793,
        15895
      ]
    },
    {
      "content": "Sign in to the [Azure portal], and select your mobile service.",
      "pos": [
        15900,
        15962
      ]
    },
    {
      "pos": [
        15967,
        16007
      ],
      "content": "Select the <bpt id=\"p1\">**</bpt>Scheduler<ept id=\"p1\">**</ept> tab on the top."
    },
    {
      "pos": [
        16026,
        16094
      ],
      "content": "Create a new scheduled job, insert a name, and select <bpt id=\"p1\">**</bpt>On demand<ept id=\"p1\">**</ept>."
    },
    {
      "content": "When the job is created, click the job name.",
      "pos": [
        16113,
        16157
      ]
    },
    {
      "content": "Then click the <bpt id=\"p1\">**</bpt>Script<ept id=\"p1\">**</ept> tab on the top bar.",
      "pos": [
        16158,
        16203
      ]
    },
    {
      "content": "Insert the following script inside your scheduler function.",
      "pos": [
        16208,
        16267
      ]
    },
    {
      "content": "Make sure to replace the placeholders with your notification hub name and the connection string for <bpt id=\"p1\">*</bpt>DefaultFullSharedAccessSignature<ept id=\"p1\">*</ept> that you obtained earlier.",
      "pos": [
        16268,
        16429
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept>.",
      "pos": [
        16430,
        16445
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Run Once<ept id=\"p1\">**</ept> on the bottom bar.",
      "pos": [
        16961,
        16998
      ]
    },
    {
      "content": "You should receive an alert on your device.",
      "pos": [
        16999,
        17042
      ]
    },
    {
      "pos": [
        17047,
        17083
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"next-steps\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>Next steps"
    },
    {
      "content": "In this simple example, you broadcasted notifications to all your iOS devices.",
      "pos": [
        17085,
        17163
      ]
    },
    {
      "content": "In order to target specific users, refer to the tutorial [Use Notification Hubs to push notifications to users].",
      "pos": [
        17164,
        17276
      ]
    },
    {
      "content": "If you want to segment your users by interest groups, you can read [Use Notification Hubs to send breaking news].",
      "pos": [
        17277,
        17390
      ]
    },
    {
      "content": "Learn more about how to use Notification Hubs in [Notification Hubs Guidance] and in the [Notification Hubs How-To for iOS].",
      "pos": [
        17391,
        17515
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Get started with Notification Hubs for Xamarin iOS apps | Microsoft Azure\"\n    description=\"In this tutorial, you learn how to use Azure Notification Hubs to send push notifications to a Xamarin iOS application.\"\n    services=\"notification-hubs\"\n    documentationCenter=\"xamarin\"\n    authors=\"ysxu\"\n    manager=\"dwrede\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"notification-hubs\"\n    ms.workload=\"mobile\"\n    ms.tgt_pltfrm=\"mobile-xamarin-ios\"\n    ms.devlang=\"dotnet\"\n    ms.topic=\"hero-article\"\n    ms.date=\"07/28/2015\"\n    ms.author=\"yuaxu\"/>\n\n# Get started with Notification Hubs\n\n[AZURE.INCLUDE [notification-hubs-selector-get-started](../../includes/notification-hubs-selector-get-started.md)]\n\n##Overview\n\nThis tutorial shows you how to use Azure Notification Hubs to send push notifications to an iOS application.\nYou'll create a blank Xamarin.iOS app that receives push notifications by using the Apple Push Notification Service (APNs). When you're finished, you'll be able to use your notification hub to broadcast push notifications to all the devices running your app. The finished code is available in the [NotificationHubs app][GitHub] sample.\n\nThis tutorial demonstrates the simple broadcast scenario in using Notification Hubs.\n\n##Prerequisites\n\nThis tutorial requires the following:\n\n+ [Xcode 6.0][Install Xcode]\n+ An iOS 7.0 (or later version) capable device\n+ iOS Developer Program membership\n+ [Xamarin.iOS]\n+ [Azure Mobile Services Component]\n\n   > [AZURE.NOTE] Because of configuration requirements for push notifications, you must deploy and test push notifications on an iOS capable device (iPhone or iPad) instead of in the simulator.\n\nCompleting this tutorial is a prerequisite for all other Notification Hubs tutorials for Xamarin.iOS apps.\n\n> [AZURE.IMPORTANT] To complete this tutorial, you must have an active Azure account. If you don't have an account, you can create a free trial account in just a couple of minutes. For details, see [Azure Free Trial](http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A643EE910&amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fdocumentation%2Farticles%2Fpartner-xamarin-notification-hubs-ios-get-started).\n\nThe Apple Push Notification Service uses certificates to authenticate your mobile service. Follow these instructions to create the necessary certificates and upload them to your mobile service. For the official APNs feature documentation, see [Apple Push Notification Service].\n\n\n##<a name=\"certificates\"></a>Generate the Certificate Signing Request file\n\nFirst you must generate the Certificate Signing Request (CSR) file, which is used by Apple to generate a signed certificate.\n\n1. From the Utilities folder, run the Keychain Access tool.\n\n2. Click **Keychain Access**, expand **Certificate Assistant**, and then click **Request a Certificate from a Certificate Authority**.\n\n    ![][5]\n\n3. Select your **User Email Address**, type **Common Name** and **CA Email Address** values, make sure that **Saved to disk** is selected, and then click **Continue**.\n\n    ![][6]\n\n4. Type a name for the CSR file in **Save As**, select the location in **Where**, and then click **Save**.\n\n    ![][7]\n\n    This saves the CSR file in the selected location. The default location is on the desktop. Remember the location that you have chosen for this file.\n\nNext, register your app with Apple, enable push notifications, and upload this exported CSR to create a push certificate.\n\n##<a name=\"register\"></a>Register your app for push notifications\n\nTo be able to send push notifications to an iOS app from Mobile Services, you must register your application with Apple and also register for push notifications.  \n\n1. If you have not already registered your app, navigate to the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=272456\" target=\"_blank\">iOS Provisioning Portal</a> at the Apple Developer Center, sign in with your Apple ID, click **Identifiers**, click **App IDs**, and finally click the **+** sign to register a new app.\n\n    ![][105]\n\n2. Type a name for your app in **Description** and a value for **Bundle Identifier**, check the **Push Notifications** option in the **App Services** section, and then click **Continue**.\n\n    ![][106]\n\n    ![][107]\n\n    ![][108]\n\n\n    This generates your app ID and requests that you submit the information. Click **Submit**.\n\n    ![][109]\n\n    Once you click **Submit**, you will see the **Registration complete** screen, as shown below. Click **Done**.\n\n    ![][110]\n\n    > [AZURE.NOTE] If you choose to supply a **Bundle Identifier** value other than **MobileServices.Quickstart**, you must also update the bundle identifier value in your Xcode project.\n\n3. Locate the app ID that you just created, and click its row.\n\n    ![][111]\n\n    Clicking the app ID will display details about the app and the app ID:\n\n    ![][112]\n\n    ![][113]\n\n4. Click **Edit**, and then scroll to the bottom of the screen and click **Create Certificate...** under the section **Development Push SSL Certificate**.\n\n    ![][114]\n\n    This displays the Add iOS Certificate assistant.\n\n    ![][115]\n\n    > [AZURE.NOTE] This tutorial uses a development certificate. The same process is used for registering a production certificate. Just make sure that you set the same certificate type when you upload the certificate to Mobile Services.\n\n5. Click **Choose File**, browse to the location in which you saved the CSR file that you created in the first task, and then click **Generate**.\n\n    ![][116]\n\n6. After the certificate is created by the portal, click **Download**, and then click **Done**.\n\n    ![][118]\n\n    ![][119]  \n\n    This downloads the signing certificate and saves it to your computer in your **Downloads** folder.\n\n    ![][9]\n\n    > [AZURE.NOTE] By default, the downloaded file for a development certificate is named **aps_development.cer**.\n\n7. Double-click the downloaded push certificate **aps_development.cer**.\n\n    This installs the new certificate in the Keychain, as shown below:\n\n    ![][10]\n\n    > [AZURE.NOTE]\n    > The name in your certificate might be different, but it will be prefixed with <strong>Apple Development iOS Push Notification Services:</strong>.\n\n    Later, you will use this certificate to generate a .p12 file and upload it to your notification hub to enable push notifications through APNs.\n\n##<a name=\"profile\"></a>Create a provisioning profile for the app\n\n1. Back in the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=272456\" target=\"_blank\">iOS Provisioning Portal</a>, select **Provisioning Profiles**, select **All**, and then click the **+** button to create a new profile. This displays the **Add iOS Provisioning Profile** wizard.\n\n    ![][120]\n\n2. Select **iOS App Development** under **Development** as the provisioning profile type, and click **Continue**.\n\n    ![][121]\n\n3. Select the app ID for the Mobile Services Quickstart app from the **App ID** drop-down list, and click **Continue**.\n\n    ![][122]\n\n4. In the **Select certificates** screen, select the certificate that you created earlier, and click **Continue**.\n\n    ![][123]\n\n5. Select the devices to use for testing, and click **Continue**.\n\n    ![][124]\n\n6. Finally, choose a name for the profile in **Profile Name**, click **Generate**, and click **Done**.\n\n    ![][125]\n\n    ![][126]\n\n    This creates a new provisioning profile.\n\n7. In Xcode, open the Organizer, select the Devices view, select **Provisioning Profiles** in the **Library** section in the left pane, and import the provisioning profile that you just created.\n\n8. On the left, select your device, and again import the provisioning profile.\n\n9. In Keychain Access, right-click the new certificate, click **Export**, type a name for your certificate, select the **.p12** format, and then click **Save**.\n\n    ![][18]\n\n    Make a note of the file name and location of the exported certificate.\n\nThis ensures that the Xcode project uses the new profile for code signing. Next, you must upload the certificate to your notification hub.\n\n##<a name=\"configure-hub\"></a>Configure your notification hub\n\n1. Sign in to the [Azure portal], and click **+NEW** at the bottom of the screen.\n\n2. Click **App Services**, click **Service Bus**, click **Notification Hub**, and then click **Quick Create**.\n\n    ![][27]\n\n3. Type a name for your notification hub, select your desired region, and then click **Create a New Notification Hub**.\n\n    ![][28]\n\n4. Click the namespace that you just created (usually ***notification hub name*-ns**), and then click the **Configure** tab at the top.\n\n    ![][29]\n\n5. Click the **Notification Hubs** tab at the top, and then click the notification hub that you just created.\n\n    ![][210]\n\n6. Select the **Configure** tab at the top, and then click **Upload** for the Apple notification settings. Then select the **.p12** certificate that you exported earlier, along with the password for the certificate. Make sure to select whether you want to use the **Production** (if you want to send push notifications to users who purchased your app from the store) or the **Sandbox** (during development) push service.\n\n    ![][211]\n\n7. Click the **Dashboard** tab at the top, and then click **Connection Information**. Take note of the two connection strings.\n\n    ![][212]\n\nYour notification hub is now configured to work with APNs, and you have the connection strings to register your app and send notifications.\n\n##<a name=\"connecting-app\"></a>Connect your app to the notification hub\n\n### Create a new project\n\n1. In Xamarin Studio, create a new iOS project and select the **Unified API** > **Single View Application** template.\n\n    ![][31]\n\n2. Add a reference to the Azure Messaging component. In the Solution view, right-click the **Components** folder for your project and choose **Get More Components**. Search for the **Azure Messaging** component and add the component to your project.\n\n3. In **AppDelegate.cs**, add the following using statement:\n\n    using WindowsAzure.Messaging;\n\n4. Declare an instance of **SBNotificationHub**:\n\n        private SBNotificationHub Hub { get; set; }\n\n5. Create a **Constants.cs** class with the following variables:\n\n        // Azure app-specific connection string and hub path\n        public const string ConnectionString = \"<Azure connection string>\";\n        public const string NotificationHubPath = \"<Azure hub path>\";\n\n\n6. In **AppDelegate.cs**, update **FinishedLaunching()** to match the following:\n\n        public override bool FinishedLaunching(UIApplication application, NSDictionary launchOptions)\n        {\n            UIRemoteNotificationType notificationTypes = UIRemoteNotificationType.Alert |\n                UIRemoteNotificationType.Badge | UIRemoteNotificationType.Sound;\n            UIApplication.SharedApplication.RegisterForRemoteNotificationTypes(notificationTypes);\n\n            return true;\n        }\n\n7. Override the **RegisteredForRemoteNotifications()** method in **AppDelegate.cs**:\n\n        public override void RegisteredForRemoteNotifications(UIApplication application, NSData deviceToken)\n        {\n            Hub = new SBNotificationHub(Constants.ConnectionString, Constants.NotificationHubPath);\n\n            Hub.UnregisterAllAsync (deviceToken, (error) => {\n                if (error != null)\n                {\n                    Console.WriteLine(\"Error calling Unregister: {0}\", error.ToString());\n                    return;\n                }\n\n                NSSet tags = null; // create tags if you want\n                Hub.RegisterNativeAsync(deviceToken, tags, (errorCallback) => {\n                    if (errorCallback != null)\n                        Console.WriteLine(\"RegisterNativeAsync error: \" + errorCallback.ToString());\n                });\n            });\n        }\n\n8. Override the **ReceivedRemoteNotification()** method in **AppDelegate.cs**:\n\n        public override void ReceivedRemoteNotification(UIApplication application, NSDictionary userInfo)\n        {\n            ProcessNotification(userInfo, false);\n        }\n\n9. Create the following **ProcessNotification()** method in **AppDelegate.cs**:\n\n        void ProcessNotification(NSDictionary options, bool fromFinishedLaunching)\n        {\n            // Check to see if the dictionary has the aps key.  This is the notification payload you would have sent\n            if (null != options && options.ContainsKey(new NSString(\"aps\")))\n            {\n                //Get the aps dictionary\n                NSDictionary aps = options.ObjectForKey(new NSString(\"aps\")) as NSDictionary;\n\n                string alert = string.Empty;\n\n                //Extract the alert text\n                // NOTE: If you're using the simple alert by just specifying\n                // \"  aps:{alert:\"alert msg here\"}  \", this will work fine.\n                // But if you're using a complex alert with Localization keys, etc.,\n                // your \"alert\" object from the aps dictionary will be another NSDictionary.\n                // Basically the JSON gets dumped right into a NSDictionary,\n                // so keep that in mind.\n                if (aps.ContainsKey(new NSString(\"alert\")))\n                    alert = (aps [new NSString(\"alert\")] as NSString).ToString();\n\n                //If this came from the ReceivedRemoteNotification while the app was running,\n                // we of course need to manually process things like the sound, badge, and alert.\n                if (!fromFinishedLaunching)\n                {\n                    //Manually show an alert\n                    if (!string.IsNullOrEmpty(alert))\n                    {\n                        UIAlertView avAlert = new UIAlertView(\"Notification\", alert, null, \"OK\", null);\n                        avAlert.Show();\n                    }\n                }\n            }\n        }\n\n    > [AZURE.NOTE] You can choose to override **FailedToRegisterForRemoteNotifications()** to handle situations such as no network connection.\n\n\n10. Run the app on your device.\n\n##<a name=\"send\"></a>Send notifications from your backend\n\nYou can send notifications by using Notification Hubs from any backend via our <a href=\"http://msdn.microsoft.com/library/windowsazure/dn223264.aspx\">REST interface</a>. In this tutorial, we will send notifications by using a .NET console app and by using a mobile service through a node script.\n\nTo send notifications by using a .NET app:\n\n1. Create a new Visual C# console application:\n\n    ![][213]\n\n2. Add a reference to the Azure Service Bus SDK by using the <a href=\"http://nuget.org/packages/WindowsAzure.ServiceBus/\">WindowsAzure.ServiceBus NuGet package</a>. In the Visual Studio main menu, click **Tools**, click **Library Package Manager**, and then click **Package Manager Console**. Then, in the console window, type the following and press Enter:\n\n        Install-Package WindowsAzure.ServiceBus\n\n2. Open the Program.cs file and add the following using statement:\n\n        using Microsoft.ServiceBus.Notifications;\n\n3. In your `Program` class, add the following method:\n\n        private static async void SendNotificationAsync()\n        {\n            NotificationHubClient hub = NotificationHubClient.CreateClientFromConnectionString(\"<connection string with full access>\", \"<hub name>\");\n            var alert = \"{\\\"aps\\\":{\\\"alert\\\":\\\"Hello from .NET!\\\"}}\";\n            await hub.SendAppleNativeNotificationAsync(alert);\n        }\n\n4. Add the following lines in your `Main` method:\n\n         SendNotificationAsync();\n         Console.ReadLine();\n\n5. Press the F5 key to run the app. You should receive an alert on your device. If you are using Wi-Fi, make sure that your connection is working.\n\nYou can find all the possible payloads in the Apple [Local and Push Notification Programming Guide].\n\nTo send a notification by using a mobile service, follow [Get started with Mobile Services], and then:\n\n1. Sign in to the [Azure portal], and select your mobile service.\n\n2. Select the **Scheduler** tab on the top.\n\n    ![][215]\n\n3. Create a new scheduled job, insert a name, and select **On demand**.\n\n    ![][216]\n\n4. When the job is created, click the job name. Then click the **Script** tab on the top bar.\n\n5. Insert the following script inside your scheduler function. Make sure to replace the placeholders with your notification hub name and the connection string for *DefaultFullSharedAccessSignature* that you obtained earlier. Click **Save**.\n\n        var azure = require('azure');\n        var notificationHubService = azure.createNotificationHubService('<Hubname>', '<SAS Full access >');\n        notificationHubService.apns.send(\n            null,\n            {\"aps\":\n                {\n                \"alert\": \"Hello from Mobile Services!\"\n                }\n            },\n            function (error)\n            {\n                if (!error) {\n                    console.warn(\"Notification successful\");\n                }\n            }\n        );\n\n\n6. Click **Run Once** on the bottom bar. You should receive an alert on your device.\n\n## <a name=\"next-steps\"> </a>Next steps\n\nIn this simple example, you broadcasted notifications to all your iOS devices. In order to target specific users, refer to the tutorial [Use Notification Hubs to push notifications to users]. If you want to segment your users by interest groups, you can read [Use Notification Hubs to send breaking news]. Learn more about how to use Notification Hubs in [Notification Hubs Guidance] and in the [Notification Hubs How-To for iOS].\n\n<!-- Anchors. -->\n[Generate the certificate signing request]: #certificates\n[Register your app and enable push notifications]: #register\n[Create a provisioning profile for the app]: #profile\n[Configure your Notification Hub]: #configure-hub\n[Connecting your app to the Notification Hub]: #connecting-app\n[Send notifications from your back-end]: #send\n[Next Steps]:#next-steps\n\n<!-- Images. -->\n[5]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-step5.png\n[6]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-step6.png\n[7]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-step7.png\n\n[9]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-step9.png\n[10]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-step10.png\n[18]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-step18.png\n[105]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-05.png\n[106]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-06.png\n[107]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-07.png\n[108]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-08.png\n[109]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-09.png\n[110]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-10.png\n[111]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-11.png\n[112]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-12.png\n[113]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-13.png\n[114]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-14.png\n[115]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-15.png\n[116]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-16.png\n\n[118]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-18.png\n[119]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-19.png\n\n[120]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-20.png\n[121]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-21.png\n[122]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-22.png\n[123]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-23.png\n[124]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-24.png\n[125]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-25.png\n[126]: ./media/partner-xamarin-notification-hubs-ios-get-started/mobile-services-ios-push-26.png\n\n[27]: ./media/partner-xamarin-notification-hubs-ios-get-started/notification-hub-create-from-portal.png\n[28]: ./media/partner-xamarin-notification-hubs-ios-get-started/notification-hub-create-from-portal2.png\n[29]: ./media/partner-xamarin-notification-hubs-ios-get-started/notification-hub-select-from-portal.png\n[210]: ./media/partner-xamarin-notification-hubs-ios-get-started/notification-hub-select-from-portal2.png\n[211]: ./media/partner-xamarin-notification-hubs-ios-get-started/notification-hub-configure-ios.png\n[212]: ./media/partner-xamarin-notification-hubs-ios-get-started/notification-hub-connection-strings.png\n\n\n[213]: ./media/partner-xamarin-notification-hubs-ios-get-started/notification-hub-create-console-app.png\n\n\n\n[215]: ./media/partner-xamarin-notification-hubs-ios-get-started/notification-hub-scheduler1.png\n[216]: ./media/partner-xamarin-notification-hubs-ios-get-started/notification-hub-scheduler2.png\n\n\n[31]: ./media/partner-xamarin-notification-hubs-ios-get-started/notification-hub-create-ios-app.png\n\n\n\n\n<!-- URLs. -->\n[Mobile Services iOS SDK]: http://go.microsoft.com/fwLink/?LinkID=266533\n[Submit an app page]: http://go.microsoft.com/fwlink/p/?LinkID=266582\n[My Applications]: http://go.microsoft.com/fwlink/p/?LinkId=262039\n[Live SDK for Windows]: http://go.microsoft.com/fwlink/p/?LinkId=262253\n\n[Get started with Mobile Services]: /develop/mobile/tutorials/get-started-xamarin-ios\n[Azure portal]: https://manage.windowsazure.com/\n[Notification Hubs Guidance]: http://msdn.microsoft.com/library/jj927170.aspx\n[Notification Hubs How-To for iOS]: http://msdn.microsoft.com/library/jj927168.aspx\n[Install Xcode]: https://go.microsoft.com/fwLink/p/?LinkID=266532\n[iOS Provisioning Portal]: http://go.microsoft.com/fwlink/p/?LinkId=272456\n\n[Use Notification Hubs to push notifications to users]: /manage/services/notification-hubs/notify-users-aspnet\n[Use Notification Hubs to send breaking news]: /manage/services/notification-hubs/breaking-news-dotnet\n\n[Local and Push Notification Programming Guide]: http://developer.apple.com/library/mac/#documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ApplePushService.html#//apple_ref/doc/uid/TP40008194-CH100-SW1\n[Apple Push Notification Service]: http://go.microsoft.com/fwlink/p/?LinkId=272584\n\n[Azure Mobile Services Component]: http://components.xamarin.com/view/azure-mobile-services/\n[GitHub]: http://go.microsoft.com/fwlink/p/?LinkId=331329\n[Xamarin.iOS]: http://xamarin.com/download\n[WindowsAzure.Messaging]: https://github.com/infosupport/WindowsAzure.Messaging.iOS\n"
}