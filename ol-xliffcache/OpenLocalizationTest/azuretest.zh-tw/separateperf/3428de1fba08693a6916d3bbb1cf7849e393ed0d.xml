{
  "nodes": [
    {
      "content": "Create, start, or delete an Application Gateway | Microsoft Azure",
      "pos": [
        26,
        91
      ]
    },
    {
      "content": "This page provides instructions to create, configure, start, and delete an Azure Application Gateway",
      "pos": [
        109,
        209
      ]
    },
    {
      "content": "Create, start, or delete an Application Gateway",
      "pos": [
        535,
        582
      ]
    },
    {
      "content": "In this release, you can create an Application Gateway by using PowerShell or REST API calls.",
      "pos": [
        584,
        677
      ]
    },
    {
      "content": "Azure portal and CLI support will be provided in an upcoming release.",
      "pos": [
        678,
        747
      ]
    },
    {
      "content": "This article walks you through the steps to create and configure, start, and delete an Application Gateway.",
      "pos": [
        748,
        855
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        859,
        875
      ]
    },
    {
      "content": "Azure classic steps",
      "pos": [
        879,
        898
      ]
    },
    {
      "content": "Resource Manager Powershell steps",
      "pos": [
        942,
        975
      ]
    },
    {
      "content": "Before you begin",
      "pos": [
        1026,
        1042
      ]
    },
    {
      "content": "Install the latest version of the Azure PowerShell cmdlets using the Web Platform Installer.",
      "pos": [
        1047,
        1139
      ]
    },
    {
      "content": "You can download and install the latest version from the <bpt id=\"p1\">**</bpt>Windows PowerShell<ept id=\"p1\">**</ept> section of the <bpt id=\"p2\">[</bpt>Download page<ept id=\"p2\">](http://azure.microsoft.com/downloads/)</ept>.",
      "pos": [
        1140,
        1290
      ]
    },
    {
      "content": "Verify that you have a working virtual network with a valid subnet.",
      "pos": [
        1294,
        1361
      ]
    },
    {
      "content": "Make sure no virtual machines or cloud deployments are using the subnet.",
      "pos": [
        1362,
        1434
      ]
    },
    {
      "content": "The Application Gateway must be by itself in a virtual network subnet.",
      "pos": [
        1435,
        1505
      ]
    },
    {
      "content": "The servers which you will configure to use the Application Gateway must exist or have their endpoints created either in the virtual network, or with a public IP/VIP assigned.",
      "pos": [
        1509,
        1684
      ]
    },
    {
      "content": "What is required to create an Application Gateway?",
      "pos": [
        1689,
        1739
      ]
    },
    {
      "pos": [
        1742,
        1974
      ],
      "content": "When you use ther <bpt id=\"p1\">**</bpt>New-AzureApplicationGateway<ept id=\"p1\">**</ept> command to create the Application Gateway, no configuration is set at this point and the newly created resource will have to be configured either using XML or a configuration object."
    },
    {
      "content": "The values are:",
      "pos": [
        1977,
        1992
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Back end server pool:<ept id=\"p1\">**</ept> The list of IP addresses of the back end servers.",
      "pos": [
        1996,
        2071
      ]
    },
    {
      "content": "The IP addresses listed should either belong to the virtual network subnet, or should be a public IP/VIP.",
      "pos": [
        2072,
        2177
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Back end server pool settings:<ept id=\"p1\">**</ept> Every pool has settings like port, protocol, and cookie-based affinity.",
      "pos": [
        2180,
        2286
      ]
    },
    {
      "content": "These settings are tied to a pool and are applied to all servers within the pool.",
      "pos": [
        2287,
        2368
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Front end Port:<ept id=\"p1\">**</ept> This port is the public port opened on the Application Gateway.",
      "pos": [
        2371,
        2454
      ]
    },
    {
      "content": "Traffic hits this port, and then gets redirected to one of the back end servers.",
      "pos": [
        2455,
        2535
      ]
    },
    {
      "pos": [
        2538,
        2699
      ],
      "content": "<bpt id=\"p1\">**</bpt>Listener:<ept id=\"p1\">**</ept> The listener has a front end port, a protocol (Http or Https, these are case-sensitive), and the SSL certificate name (if configuring SSL offload)."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Rule:<ept id=\"p1\">**</ept> The rule binds the listener and the back end server pool and defines which back end server pool the traffic should be directed to when it hits a particular listener.",
      "pos": [
        2702,
        2877
      ]
    },
    {
      "content": "Currently, only the <bpt id=\"p1\">*</bpt>basic<ept id=\"p1\">*</ept> rule is supported.",
      "pos": [
        2878,
        2924
      ]
    },
    {
      "content": "The <bpt id=\"p1\">*</bpt>basic<ept id=\"p1\">*</ept> rule is round-robin load distribution.",
      "pos": [
        2925,
        2975
      ]
    },
    {
      "content": "Create a new Application Gateway",
      "pos": [
        2982,
        3014
      ]
    },
    {
      "content": "There is an order of steps you will have to follow to create an Application Gateway:",
      "pos": [
        3016,
        3100
      ]
    },
    {
      "content": "Create Application Gateway resource.",
      "pos": [
        3105,
        3141
      ]
    },
    {
      "content": "Create configuration XML file or configuration object.",
      "pos": [
        3145,
        3199
      ]
    },
    {
      "content": "Commit the configuration to newly created Application Gateway resource.",
      "pos": [
        3203,
        3274
      ]
    },
    {
      "content": "Create an Application Gateway Resource",
      "pos": [
        3280,
        3318
      ]
    },
    {
      "content": "To create the gateway, use the <ph id=\"ph1\">`New-AzureApplicationGateway`</ph> cmdlet, replacing the values with your own.",
      "pos": [
        3320,
        3424
      ]
    },
    {
      "content": "Note that billing for the gateway does not start at this point.",
      "pos": [
        3425,
        3488
      ]
    },
    {
      "content": "Billing begins in a later step, when the gateway is successfully started.",
      "pos": [
        3489,
        3562
      ]
    },
    {
      "content": "The following example creates a new Application Gateway using a virtual network called \"testvnet1\" and a subnet called \"subnet-1\".",
      "pos": [
        3564,
        3694
      ]
    },
    {
      "pos": [
        4184,
        4258
      ],
      "content": "<bpt id=\"p1\">*</bpt>Description<ept id=\"p1\">*</ept>, <bpt id=\"p2\">*</bpt>InstanceCount<ept id=\"p2\">*</ept>, and <bpt id=\"p3\">*</bpt>GatewaySize<ept id=\"p3\">*</ept> are optional parameters."
    },
    {
      "pos": [
        4261,
        4360
      ],
      "content": "<bpt id=\"p1\">**</bpt>To validate<ept id=\"p1\">**</ept> that the gateway was created, you can use the <ph id=\"ph1\">`Get-AzureApplicationGateway`</ph> cmdlet."
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>  The default value for <bpt id=\"p1\">*</bpt>InstanceCount<ept id=\"p1\">*</ept> is 2, with a maximum value of 10.",
      "pos": [
        4648,
        4733
      ]
    },
    {
      "content": "The default value for <bpt id=\"p1\">*</bpt>GatewaySize<ept id=\"p1\">*</ept> is Medium.",
      "pos": [
        4734,
        4780
      ]
    },
    {
      "content": "You can choose between Small, Medium and Large.",
      "pos": [
        4781,
        4828
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>Vip<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>DnsName<ept id=\"p2\">*</ept> are shown as blank because the gateway has not started yet.",
      "pos": [
        4832,
        4911
      ]
    },
    {
      "content": "These will be created once the gateway is in the running state.",
      "pos": [
        4912,
        4975
      ]
    },
    {
      "content": "Configure Application Gateway",
      "pos": [
        4980,
        5009
      ]
    },
    {
      "content": "You can configure Application Gateway using XML or a configuration object.",
      "pos": [
        5011,
        5085
      ]
    },
    {
      "content": "Configure Application Gateway using XML",
      "pos": [
        5090,
        5129
      ]
    },
    {
      "content": "In the following example, you will use an XML file to configure all Application Gateway settings and commit them to the Application Gateway resource.",
      "pos": [
        5131,
        5280
      ]
    },
    {
      "content": "Step 1",
      "pos": [
        5288,
        5294
      ]
    },
    {
      "content": "Copy the following text to Notepad.",
      "pos": [
        5298,
        5333
      ]
    },
    {
      "content": "Edit the values between the parenthesis for the configuration items.",
      "pos": [
        7288,
        7356
      ]
    },
    {
      "content": "Save the file with extension .xml",
      "pos": [
        7357,
        7390
      ]
    },
    {
      "pos": [
        7393,
        7461
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> The protocol item Http or Https is case sensitive."
    },
    {
      "content": "The following example shows how to use a configuration file to set up the Application Gateway to load balance Http traffic on public port 80 and send network traffic to back end port 80 between 2 IP addresses.",
      "pos": [
        7463,
        7672
      ]
    },
    {
      "content": "Step 2",
      "pos": [
        9403,
        9409
      ]
    },
    {
      "content": "Next, you'll set the Application Gateway.",
      "pos": [
        9411,
        9452
      ]
    },
    {
      "content": "You will use the <ph id=\"ph1\">`Set-AzureApplicationGatewayConfig`</ph> cmdlet with a configuration XML file.",
      "pos": [
        9453,
        9543
      ]
    },
    {
      "content": "Configure Application Gateway using a configuration object",
      "pos": [
        10037,
        10095
      ]
    },
    {
      "content": "The following example shows how to configure the Application Gateway using configuration objects.",
      "pos": [
        10097,
        10194
      ]
    },
    {
      "content": "All configuration items have to be configured individually and then added to an Application Gateway configuration object.",
      "pos": [
        10195,
        10316
      ]
    },
    {
      "content": "After creating the configuration object, you will use the <ph id=\"ph1\">`Set-AzureApplicationGateway`</ph> command to commit the configuration to the previously created Application Gateway resource.",
      "pos": [
        10317,
        10496
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Before assigning a value to each configuration object, you need to declare what kind of object PowerShell uses for storage.",
      "pos": [
        10499,
        10635
      ]
    },
    {
      "content": "The first line to create the individual items defines what Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model(object name) will be used.",
      "pos": [
        10636,
        10804
      ]
    },
    {
      "content": "Step 1",
      "pos": [
        10810,
        10816
      ]
    },
    {
      "content": "Create all individual configuration items.",
      "pos": [
        10818,
        10860
      ]
    },
    {
      "content": "Create front end IP as shown in the following example.",
      "pos": [
        10862,
        10916
      ]
    },
    {
      "content": "Create front end port as shown in the following example.",
      "pos": [
        11167,
        11223
      ]
    },
    {
      "content": "Create back end server pool",
      "pos": [
        11410,
        11437
      ]
    },
    {
      "content": "Define the IP addresses which will be added to the back end server pool as shown in the next example.",
      "pos": [
        11440,
        11541
      ]
    },
    {
      "content": "Using the $server object, add the values to the back end pool object ($pool).",
      "pos": [
        11761,
        11838
      ]
    },
    {
      "content": "Create back end server pool setting",
      "pos": [
        12051,
        12086
      ]
    },
    {
      "content": "Create listener",
      "pos": [
        12388,
        12403
      ]
    },
    {
      "content": "Create rule",
      "pos": [
        12739,
        12750
      ]
    },
    {
      "content": "Step 2",
      "pos": [
        13098,
        13104
      ]
    },
    {
      "content": "Assign all individual configuration items to a Application Gateway configuration object ($appgwconfig):",
      "pos": [
        13106,
        13209
      ]
    },
    {
      "content": "Add front end IP to the configuration",
      "pos": [
        13211,
        13248
      ]
    },
    {
      "content": "Add front end port to the configuration",
      "pos": [
        13669,
        13708
      ]
    },
    {
      "content": "Add back end server pool to the configuration",
      "pos": [
        13943,
        13988
      ]
    },
    {
      "content": "Add back end pool setting to the configuration",
      "pos": [
        14244,
        14290
      ]
    },
    {
      "content": "Add listener to the configuration",
      "pos": [
        14556,
        14589
      ]
    },
    {
      "content": "Add rule to the configuration",
      "pos": [
        14829,
        14858
      ]
    },
    {
      "content": "Step 3",
      "pos": [
        15125,
        15131
      ]
    },
    {
      "pos": [
        15133,
        15243
      ],
      "content": "Commit the configuration object to the Application Gateway resource using <ph id=\"ph1\">`Set-AzureApplicationGatewayConfig`</ph>."
    },
    {
      "content": "Start the gateway",
      "pos": [
        15324,
        15341
      ]
    },
    {
      "content": "Once the gateway has been configured, use the <ph id=\"ph1\">`Start-AzureApplicationGateway`</ph> cmdlet to start the gateway.",
      "pos": [
        15343,
        15449
      ]
    },
    {
      "content": "Billing for an Application Gateway begins after the gateway has been successfully started.",
      "pos": [
        15450,
        15540
      ]
    },
    {
      "pos": [
        15545,
        15644
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The <ph id=\"ph2\">`Start-AzureApplicationGateway`</ph> cmdlet might take up to 15-20 minutes to complete."
    },
    {
      "content": "Verify the gateway status",
      "pos": [
        16093,
        16118
      ]
    },
    {
      "content": "Use the <ph id=\"ph1\">`Get-AzureApplicationGateway`</ph> cmdlet to check the status of the gateway.",
      "pos": [
        16120,
        16200
      ]
    },
    {
      "content": "If <bpt id=\"p1\">*</bpt>Start-AzureApplicationGateway<ept id=\"p1\">*</ept> succeeded in the previous step, the State should be <bpt id=\"p2\">*</bpt>Running<ept id=\"p2\">*</ept>, and the Vip and DnsName should have valid entries.",
      "pos": [
        16201,
        16349
      ]
    },
    {
      "pos": [
        16351,
        16504
      ],
      "content": "The following example shows an Application Gateway that is up, running, and ready to take traffic destined to <ph id=\"ph1\">`http://&lt;generated-dns-name&gt;.cloudapp.net`</ph>."
    },
    {
      "content": "Delete an Application Gateway",
      "pos": [
        17006,
        17035
      ]
    },
    {
      "content": "To delete an Application Gateway:",
      "pos": [
        17037,
        17070
      ]
    },
    {
      "pos": [
        17075,
        17141
      ],
      "content": "Use the <ph id=\"ph1\">`Stop-AzureApplicationGateway`</ph> cmdlet to stop the gateway."
    },
    {
      "pos": [
        17145,
        17215
      ],
      "content": "Use the <ph id=\"ph1\">`Remove-AzureApplicationGateway`</ph> cmdlet to remove the gateway."
    },
    {
      "pos": [
        17219,
        17305
      ],
      "content": "Verify the gateway has been removed by using the <ph id=\"ph1\">`Get-AzureApplicationGateway`</ph> cmdlet."
    },
    {
      "pos": [
        17307,
        17419
      ],
      "content": "The following example shows the <ph id=\"ph1\">`Stop-AzureApplicationGateway`</ph> cmdlet on the first line, followed by the output."
    },
    {
      "pos": [
        17861,
        17983
      ],
      "content": "Once the Application Gateway is in a Stopped state, use the <ph id=\"ph1\">`Remove-AzureApplicationGateway`</ph> cmdlet to remove the service."
    },
    {
      "content": "To verify that the service has been removed, you can use the <ph id=\"ph1\">`Get-AzureApplicationGateway`</ph> cmdlet.",
      "pos": [
        18433,
        18531
      ]
    },
    {
      "content": "This step is not required.",
      "pos": [
        18532,
        18558
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        18779,
        18789
      ]
    },
    {
      "pos": [
        18791,
        18909
      ],
      "content": "If you want to configure SSL offload, see <bpt id=\"p1\">[</bpt>Configure Application Gateway for SSL offload<ept id=\"p1\">](application-gateway-ssl.md)</ept>."
    },
    {
      "pos": [
        18911,
        19077
      ],
      "content": "If you want to configure an Application Gateway to use with ILB, see <bpt id=\"p1\">[</bpt>Create an Application Gateway with an Internal Load Balancer (ILB)<ept id=\"p1\">](application-gateway-ilb.md)</ept>."
    },
    {
      "content": "If you want more information about load balancing options in general, see:",
      "pos": [
        19079,
        19153
      ]
    },
    {
      "content": "Azure Load Balancer",
      "pos": [
        19158,
        19177
      ]
    },
    {
      "content": "Azure Traffic Manager",
      "pos": [
        19249,
        19270
      ]
    },
    {
      "content": "test",
      "pos": [
        19342,
        19346
      ]
    }
  ],
  "content": "<properties\n   pageTitle=\"Create, start, or delete an Application Gateway | Microsoft Azure\"\n   description=\"This page provides instructions to create, configure, start, and delete an Azure Application Gateway\"\n   documentationCenter=\"na\"\n   services=\"application-gateway\"\n   authors=\"joaoma\"\n   manager=\"jdial\"\n   editor=\"tysonn\"/>\n<tags\n   ms.service=\"application-gateway\"\n   ms.devlang=\"na\"\n   ms.topic=\"hero-article\"\n   ms.tgt_pltfrm=\"na\"\n   ms.workload=\"infrastructure-services\"\n   ms.date=\"07/29/2015\"\n   ms.author=\"joaoma\"/>\n\n# Create, start, or delete an Application Gateway\n\nIn this release, you can create an Application Gateway by using PowerShell or REST API calls. Azure portal and CLI support will be provided in an upcoming release.\nThis article walks you through the steps to create and configure, start, and delete an Application Gateway.\n\n> [AZURE.SELECTOR]\n- [Azure classic steps](application-gateway-create-gateway.md)\n- [Resource Manager Powershell steps](application-gateway-create-gateway-arm.md)\n\n\n\n## Before you begin\n\n1. Install the latest version of the Azure PowerShell cmdlets using the Web Platform Installer. You can download and install the latest version from the **Windows PowerShell** section of the [Download page](http://azure.microsoft.com/downloads/).\n2. Verify that you have a working virtual network with a valid subnet. Make sure no virtual machines or cloud deployments are using the subnet. The Application Gateway must be by itself in a virtual network subnet.\n3. The servers which you will configure to use the Application Gateway must exist or have their endpoints created either in the virtual network, or with a public IP/VIP assigned.\n\n## What is required to create an Application Gateway?\n\n\nWhen you use ther **New-AzureApplicationGateway** command to create the Application Gateway, no configuration is set at this point and the newly created resource will have to be configured either using XML or a configuration object.\n\n\nThe values are:\n\n- **Back end server pool:** The list of IP addresses of the back end servers. The IP addresses listed should either belong to the virtual network subnet, or should be a public IP/VIP.\n- **Back end server pool settings:** Every pool has settings like port, protocol, and cookie-based affinity. These settings are tied to a pool and are applied to all servers within the pool.\n- **Front end Port:** This port is the public port opened on the Application Gateway. Traffic hits this port, and then gets redirected to one of the back end servers.\n- **Listener:** The listener has a front end port, a protocol (Http or Https, these are case-sensitive), and the SSL certificate name (if configuring SSL offload).\n- **Rule:** The rule binds the listener and the back end server pool and defines which back end server pool the traffic should be directed to when it hits a particular listener. Currently, only the *basic* rule is supported. The *basic* rule is round-robin load distribution.\n\n\n\n## Create a new Application Gateway\n\nThere is an order of steps you will have to follow to create an Application Gateway:\n\n1. Create Application Gateway resource.\n2. Create configuration XML file or configuration object.\n3. Commit the configuration to newly created Application Gateway resource.\n\n### Create an Application Gateway Resource\n\nTo create the gateway, use the `New-AzureApplicationGateway` cmdlet, replacing the values with your own. Note that billing for the gateway does not start at this point. Billing begins in a later step, when the gateway is successfully started.\n\nThe following example creates a new Application Gateway using a virtual network called \"testvnet1\" and a subnet called \"subnet-1\".\n\n\n    PS C:\\> New-AzureApplicationGateway -Name AppGwTest -VnetName testvnet1 -Subnets @(\"Subnet-1\")\n\n    VERBOSE: 4:31:35 PM - Begin Operation: New-AzureApplicationGateway\n    VERBOSE: 4:32:37 PM - Completed Operation: New-AzureApplicationGateway\n    Name       HTTP Status Code     Operation ID                             Error\n    ----       ----------------     ------------                             ----\n    Successful OK                   55ef0460-825d-2981-ad20-b9a8af41b399\n\n\n *Description*, *InstanceCount*, and *GatewaySize* are optional parameters.\n\n\n**To validate** that the gateway was created, you can use the `Get-AzureApplicationGateway` cmdlet.\n\n\n\n\n    PS C:\\> Get-AzureApplicationGateway AppGwTest\n    Name          : AppGwTest\n    Description   :\n    VnetName      : testvnet1\n    Subnets       : {Subnet-1}\n    InstanceCount : 2\n    GatewaySize   : Medium\n    State         : Stopped\n    VirtualIPs    : {}\n    DnsName       :\n\n>[AZURE.NOTE]  The default value for *InstanceCount* is 2, with a maximum value of 10. The default value for *GatewaySize* is Medium. You can choose between Small, Medium and Large.\n\n\n *Vip* and *DnsName* are shown as blank because the gateway has not started yet. These will be created once the gateway is in the running state.\n\n## Configure Application Gateway\n\nYou can configure Application Gateway using XML or a configuration object.\n\n## Configure Application Gateway using XML\n\nIn the following example, you will use an XML file to configure all Application Gateway settings and commit them to the Application Gateway resource.  \n\n### Step 1  \n\nCopy the following text to Notepad.\n\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <ApplicationGatewayConfiguration xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/windowsazure\">\n        <FrontendPorts>\n            <FrontendPort>\n                <Name>(name-of-your-frontend-port)</Name>\n                <Port>(port number)</Port>\n            </FrontendPort>\n        </FrontendPorts>\n        <BackendAddressPools>\n            <BackendAddressPool>\n                <Name>(name-of-your-backend-pool)</Name>\n                <IPAddresses>\n                    <IPAddress>(your-IP-address-for-backend-pool)</IPAddress>\n                    <IPAddress>(your-second-IP-address-for-backend-pool)</IPAddress>\n                </IPAddresses>\n            </BackendAddressPool>\n        </BackendAddressPools>\n        <BackendHttpSettingsList>\n            <BackendHttpSettings>\n                <Name>(backend-setting-name-to-configure-rule)</Name>\n                <Port>80</Port>\n                <Protocol>[Http|Https]</Protocol>\n                <CookieBasedAffinity>Enabled</CookieBasedAffinity>\n            </BackendHttpSettings>\n        </BackendHttpSettingsList>\n        <HttpListeners>\n            <HttpListener>\n                <Name>(name-of-the-listener)</Name>\n                <FrontendPort>(name-of-your-frontend-port)</FrontendPort>\n                <Protocol>[Http|Https]</Protocol>\n            </HttpListener>\n        </HttpListeners>\n        <HttpLoadBalancingRules>\n            <HttpLoadBalancingRule>\n                <Name>(name-of-load-balancing-rule)</Name>\n                <Type>basic</Type>\n                <BackendHttpSettings>(backend-setting-name-to-configure-rule)</BackendHttpSettings>\n                <Listener>(name-of-the-listener)</Listener>\n                <BackendAddressPool>(name-of-your-backend-pool)</BackendAddressPool>\n            </HttpLoadBalancingRule>\n        </HttpLoadBalancingRules>\n    </ApplicationGatewayConfiguration>\n\nEdit the values between the parenthesis for the configuration items. Save the file with extension .xml\n\n>[AZURE.IMPORTANT] The protocol item Http or Https is case sensitive.\n\nThe following example shows how to use a configuration file to set up the Application Gateway to load balance Http traffic on public port 80 and send network traffic to back end port 80 between 2 IP addresses.\n\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <ApplicationGatewayConfiguration xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/windowsazure\">\n        <FrontendPorts>\n            <FrontendPort>\n                <Name>FrontendPort1</Name>\n                <Port>80</Port>\n            </FrontendPort>\n        </FrontendPorts>\n        <BackendAddressPools>\n            <BackendAddressPool>\n                <Name>BackendPool1</Name>\n                <IPAddresses>\n                    <IPAddress>10.0.0.1</IPAddress>\n                    <IPAddress>10.0.0.2</IPAddress>\n                </IPAddresses>\n            </BackendAddressPool>\n        </BackendAddressPools>\n        <BackendHttpSettingsList>\n            <BackendHttpSettings>\n                <Name>BackendSetting1</Name>\n                <Port>80</Port>\n                <Protocol>Http</Protocol>\n                <CookieBasedAffinity>Enabled</CookieBasedAffinity>\n            </BackendHttpSettings>\n        </BackendHttpSettingsList>\n        <HttpListeners>\n            <HttpListener>\n                <Name>HTTPListener1</Name>\n                <FrontendPort>FrontendPort1</FrontendPort>\n                <Protocol>Http</Protocol>\n            </HttpListener>\n        </HttpListeners>\n        <HttpLoadBalancingRules>\n            <HttpLoadBalancingRule>\n                <Name>HttpLBRule1</Name>\n                <Type>basic</Type>\n                <BackendHttpSettings>BackendSetting1</BackendHttpSettings>\n                <Listener>HTTPListener1</Listener>\n                <BackendAddressPool>BackendPool1</BackendAddressPool>\n            </HttpLoadBalancingRule>\n        </HttpLoadBalancingRules>\n    </ApplicationGatewayConfiguration>\n\n\n\n\n\n### Step 2\n\nNext, you'll set the Application Gateway. You will use the `Set-AzureApplicationGatewayConfig` cmdlet with a configuration XML file.\n\n\n    PS C:\\> Set-AzureApplicationGatewayConfig -Name AppGwTest -ConfigFile \"D:\\config.xml\"\n\n    VERBOSE: 7:54:59 PM - Begin Operation: Set-AzureApplicationGatewayConfig\n    VERBOSE: 7:55:32 PM - Completed Operation: Set-AzureApplicationGatewayConfig\n    Name       HTTP Status Code     Operation ID                             Error\n    ----       ----------------     ------------                             ----\n    Successful OK                   9b995a09-66fe-2944-8b67-9bb04fcccb9d\n\n## Configure Application Gateway using a configuration object\n\nThe following example shows how to configure the Application Gateway using configuration objects. All configuration items have to be configured individually and then added to an Application Gateway configuration object. After creating the configuration object, you will use the `Set-AzureApplicationGateway` command to commit the configuration to the previously created Application Gateway resource.\n\n>[AZURE.NOTE] Before assigning a value to each configuration object, you need to declare what kind of object PowerShell uses for storage. The first line to create the individual items defines what Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model(object name) will be used.\n\n### Step 1\n\nCreate all individual configuration items.\n\nCreate front end IP as shown in the following example.\n\n    PS C:\\> $fip = New-Object Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.FrontendIPConfiguration\n    PS C:\\> $fip.Name = \"fip1\"\n    PS C:\\> $fip.Type = \"Private\"\n    PS C:\\> $fip.StaticIPAddress = \"10.0.0.5\"\n\nCreate front end port as shown in the following example.\n\n    PS C:\\> $fep = New-Object Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.FrontendPort\n    PS C:\\> $fep.Name = \"fep1\"\n    PS C:\\> $fep.Port = 80\n\nCreate back end server pool\n\n Define the IP addresses which will be added to the back end server pool as shown in the next example.\n\n\n    PS C:\\> $servers = New-Object Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.BackendServerCollection\n    PS C:\\> $servers.Add(\"10.0.0.1\")\n    PS C:\\> $servers.Add(\"10.0.0.2\")\n\n Using the $server object, add the values to the back end pool object ($pool).\n\n    PS C:\\> $pool = New-Object Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.BackendAddressPool\n    PS C:\\> $pool.BackendServers = $servers\n    PS C:\\> $pool.Name = \"pool1\"\n\nCreate back end server pool setting\n\n    PS C:\\> $setting = New-Object Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.BackendHttpSettings\n    PS C:\\> $setting.Name = \"setting1\"\n    PS C:\\> $setting.CookieBasedAffinity = \"enabled\"\n    PS C:\\> $setting.Port = 80\n    PS C:\\> $setting.Protocol = \"http\"\n\nCreate listener\n\n    PS C:\\> $listener = New-Object Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.HttpListener\n    PS C:\\> $listener.Name = \"listener1\"\n    PS C:\\> $listener.FrontendPort = \"fep1\"\n    PS C:\\> $listener.FrontendIP = \"fip1\"\n    PS C:\\> $listener.Protocol = \"http\"\n    PS C:\\> $listener.SslCert = \"\"\n\nCreate rule\n\n    PS C:\\> $rule = New-Object Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.HttpLoadBalancingRule\n    PS C:\\> $rule.Name = \"rule1\"\n    PS C:\\> $rule.Type = \"basic\"\n    PS C:\\> $rule.BackendHttpSettings = \"setting1\"\n    PS C:\\> $rule.Listener = \"listener1\"\n    PS C:\\> $rule.BackendAddressPool = \"pool1\"\n\n### Step 2\n\nAssign all individual configuration items to a Application Gateway configuration object ($appgwconfig):\n\nAdd front end IP to the configuration\n\n    PS C:\\> $appgwconfig = New-Object Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.ApplicationGatewayConfiguration\n    PS C:\\> $appgwconfig.FrontendIPConfigurations = New-Object \"System.Collections.Generic.List[Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.FrontendIPConfiguration]\"\n    PS C:\\> $appgwconfig.FrontendIPConfigurations.Add($fip)\n\nAdd front end port to the configuration\n\n    PS C:\\> $appgwconfig.FrontendPorts = New-Object \"System.Collections.Generic.List[Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.FrontendPort]\"\n    PS C:\\> $appgwconfig.FrontendPorts.Add($fep)\n\nAdd back end server pool to the configuration\n\n    PS C:\\> $appgwconfig.BackendAddressPools = New-Object \"System.Collections.Generic.List[Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.BackendAddressPool]\"\n    PS C:\\> $appgwconfig.BackendAddressPools.Add($pool)  \n\nAdd back end pool setting to the configuration\n\n    PS C:\\> $appgwconfig.BackendHttpSettingsList = New-Object \"System.Collections.Generic.List[Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.BackendHttpSettings]\"\n    PS C:\\> $appgwconfig.BackendHttpSettingsList.Add($setting)\n\nAdd listener to the configuration\n\n    PS C:\\> $appgwconfig.HttpListeners = New-Object \"System.Collections.Generic.List[Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.HttpListener]\"\n    PS C:\\> $appgwconfig.HttpListeners.Add($listener)\n\nAdd rule to the configuration\n\n    PS C:\\> $appgwconfig.HttpLoadBalancingRules = New-Object \"System.Collections.Generic.List[Microsoft.WindowsAzure.Commands.ServiceManagement.Network.ApplicationGateway.Model.HttpLoadBalancingRule]\"\n    PS C:\\> $appgwconfig.HttpLoadBalancingRules.Add($rule)\n\n### Step 3\n\nCommit the configuration object to the Application Gateway resource using `Set-AzureApplicationGatewayConfig`.\n\n    Set-AzureApplicationGatewayConfig -Name AppGwTest -Config $appgwconfig\n\n## Start the gateway\n\nOnce the gateway has been configured, use the `Start-AzureApplicationGateway` cmdlet to start the gateway. Billing for an Application Gateway begins after the gateway has been successfully started.\n\n\n> [AZURE.NOTE] The `Start-AzureApplicationGateway` cmdlet might take up to 15-20 minutes to complete.\n\n\n\n    PS C:\\> Start-AzureApplicationGateway AppGwTest\n\n    VERBOSE: 7:59:16 PM - Begin Operation: Start-AzureApplicationGateway\n    VERBOSE: 8:05:52 PM - Completed Operation: Start-AzureApplicationGateway\n    Name       HTTP Status Code     Operation ID                             Error\n    ----       ----------------     ------------                             ----\n    Successful OK                   fc592db8-4c58-2c8e-9a1d-1c97880f0b9b\n\n## Verify the gateway status\n\nUse the `Get-AzureApplicationGateway` cmdlet to check the status of the gateway. If *Start-AzureApplicationGateway* succeeded in the previous step, the State should be *Running*, and the Vip and DnsName should have valid entries.\n\nThe following example shows an Application Gateway that is up, running, and ready to take traffic destined to `http://<generated-dns-name>.cloudapp.net`.\n\n    PS C:\\> Get-AzureApplicationGateway AppGwTest\n\n    VERBOSE: 8:09:28 PM - Begin Operation: Get-AzureApplicationGateway\n    VERBOSE: 8:09:30 PM - Completed Operation: Get-AzureApplicationGateway\n    Name          : AppGwTest\n    Description   :\n    VnetName      : testvnet1\n    Subnets       : {Subnet-1}\n    InstanceCount : 2\n    GatewaySize   : Medium\n    State         : Running\n    Vip           : 138.91.170.26\n    DnsName       : appgw-1b8402e8-3e0d-428d-b661-289c16c82101.cloudapp.net\n\n\n## Delete an Application Gateway\n\nTo delete an Application Gateway:\n\n1. Use the `Stop-AzureApplicationGateway` cmdlet to stop the gateway.\n2. Use the `Remove-AzureApplicationGateway` cmdlet to remove the gateway.\n3. Verify the gateway has been removed by using the `Get-AzureApplicationGateway` cmdlet.\n\nThe following example shows the `Stop-AzureApplicationGateway` cmdlet on the first line, followed by the output.\n\n    PS C:\\> Stop-AzureApplicationGateway AppGwTest\n\n    VERBOSE: 9:49:34 PM - Begin Operation: Stop-AzureApplicationGateway\n    VERBOSE: 10:10:06 PM - Completed Operation: Stop-AzureApplicationGateway\n    Name       HTTP Status Code     Operation ID                             Error\n    ----       ----------------     ------------                             ----\n    Successful OK                   ce6c6c95-77b4-2118-9d65-e29defadffb8\n\nOnce the Application Gateway is in a Stopped state, use the `Remove-AzureApplicationGateway` cmdlet to remove the service.\n\n\n    PS C:\\> Remove-AzureApplicationGateway AppGwTest\n\n    VERBOSE: 10:49:34 PM - Begin Operation: Remove-AzureApplicationGateway\n    VERBOSE: 10:50:36 PM - Completed Operation: Remove-AzureApplicationGateway\n    Name       HTTP Status Code     Operation ID                             Error\n    ----       ----------------     ------------                             ----\n    Successful OK                   055f3a96-8681-2094-a304-8d9a11ad8301\n\nTo verify that the service has been removed, you can use the `Get-AzureApplicationGateway` cmdlet. This step is not required.\n\n\n    PS C:\\> Get-AzureApplicationGateway AppGwTest\n\n    VERBOSE: 10:52:46 PM - Begin Operation: Get-AzureApplicationGateway\n\n    Get-AzureApplicationGateway : ResourceNotFound: The gateway does not exist.\n    .....\n\n## Next steps\n\nIf you want to configure SSL offload, see [Configure Application Gateway for SSL offload](application-gateway-ssl.md).\n\nIf you want to configure an Application Gateway to use with ILB, see [Create an Application Gateway with an Internal Load Balancer (ILB)](application-gateway-ilb.md).\n\nIf you want more information about load balancing options in general, see:\n\n- [Azure Load Balancer](https://azure.microsoft.com/documentation/services/load-balancer/)\n- [Azure Traffic Manager](https://azure.microsoft.com/documentation/services/traffic-manager/)\n\ntest\n"
}