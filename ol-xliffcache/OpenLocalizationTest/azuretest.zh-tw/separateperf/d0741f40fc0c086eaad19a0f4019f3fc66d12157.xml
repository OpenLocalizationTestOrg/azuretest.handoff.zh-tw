{
  "nodes": [
    {
      "content": "Lock Resources with Azure Resource Manager",
      "pos": [
        28,
        70
      ]
    },
    {
      "content": "Lock resources to prevent users from updating or deleting certain resources.",
      "pos": [
        90,
        166
      ]
    },
    {
      "content": "Lock resources with Azure Resource Manager",
      "pos": [
        501,
        543
      ]
    },
    {
      "content": "As an administrator, there are scenarios where you will want to place a lock on a resource or resource group to prevent other users in your organization from committing write actions or accidentally deleting a critical resource.",
      "pos": [
        545,
        773
      ]
    },
    {
      "content": "Azure Resource Manager provides the ability to restrict operations on resources through resource management locks.",
      "pos": [
        776,
        890
      ]
    },
    {
      "content": "Resource locks are policies which enforce a lock level at a particular scope.",
      "pos": [
        891,
        968
      ]
    },
    {
      "content": "The lock level identifies the type of enforcement for the policy, which presently has two values – <bpt id=\"p1\">**</bpt>CanNotDelete<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>ReadOnly<ept id=\"p2\">**</ept>.",
      "pos": [
        969,
        1102
      ]
    },
    {
      "content": "The scope is expressed as a URI and can be either a resource or a resource group.",
      "pos": [
        1103,
        1184
      ]
    },
    {
      "content": "Locks are different from assigning user permissions to perform certain actions.",
      "pos": [
        1186,
        1265
      ]
    },
    {
      "content": "To learn about setting permissions for users and roles, see",
      "pos": [
        1266,
        1325
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Role-based access control in the preview portal<ept id=\"p1\">](role-based-access-control-configure.md)</ept> and <bpt id=\"p2\">[</bpt>Managing and Auditing Access to Resources<ept id=\"p2\">](resource-group-rbac.md)</ept>.",
      "pos": [
        1327,
        1489
      ]
    },
    {
      "content": "Common scenarios",
      "pos": [
        1494,
        1510
      ]
    },
    {
      "content": "One common scenario is when you have a resource group with some resources that are used in an off-and-on pattern.",
      "pos": [
        1512,
        1625
      ]
    },
    {
      "content": "VM resources are turned on periodically to process data for a given interval of",
      "pos": [
        1627,
        1706
      ]
    },
    {
      "content": "time and then turned off.",
      "pos": [
        1708,
        1733
      ]
    },
    {
      "content": "In this scenario, you will want to enable the shut down of the VMs but it is imperative",
      "pos": [
        1734,
        1821
      ]
    },
    {
      "content": "that a storage account not be deleted.",
      "pos": [
        1823,
        1861
      ]
    },
    {
      "content": "In this scenario, you would use a resource lock with a lock level of <bpt id=\"p1\">**</bpt>CanNotDelete<ept id=\"p1\">**</ept> on the storage account.",
      "pos": [
        1862,
        1971
      ]
    },
    {
      "content": "In another scenario, your business may have periods where you don't want updates going into production.",
      "pos": [
        1973,
        2076
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>ReadOnly<ept id=\"p1\">**</ept> lock level stops creation or updates.",
      "pos": [
        2077,
        2131
      ]
    },
    {
      "content": "If you’re a retail company, you may not want to allow updates during holiday shopping periods.",
      "pos": [
        2132,
        2226
      ]
    },
    {
      "content": "If you’re a financial services company, you may have constraints related to deployments during",
      "pos": [
        2228,
        2322
      ]
    },
    {
      "content": "certain market hours.",
      "pos": [
        2324,
        2345
      ]
    },
    {
      "content": "A resource lock can provide a policy to lock the resources as appropriate.",
      "pos": [
        2346,
        2420
      ]
    },
    {
      "content": "This could be applied to just certain resources or to the entirety of the resource group.",
      "pos": [
        2421,
        2510
      ]
    },
    {
      "content": "Creating a lock in a template",
      "pos": [
        2515,
        2544
      ]
    },
    {
      "content": "The example below shows a template that creates a lock on a storage account.",
      "pos": [
        2546,
        2622
      ]
    },
    {
      "content": "The storage account on which to apply the lock is provided as a parameter, and that is used",
      "pos": [
        2623,
        2714
      ]
    },
    {
      "content": "in conjunction with the concat() function.",
      "pos": [
        2716,
        2758
      ]
    },
    {
      "content": "The result is the resource name appended with ‘Microsoft.Authorization’ and then a name of the lock, in this case <bpt id=\"p1\">**</bpt>myLock<ept id=\"p1\">**</ept>.",
      "pos": [
        2760,
        2885
      ]
    },
    {
      "content": "The type provided is specific to the resource type.",
      "pos": [
        2887,
        2938
      ]
    },
    {
      "content": "For storage, this type is \"Microsoft.Storage/storageaccounts/providers/locks\".",
      "pos": [
        2939,
        3017
      ]
    },
    {
      "content": "The scope level is set using the <bpt id=\"p1\">**</bpt>level<ept id=\"p1\">**</ept> property of the resource.",
      "pos": [
        3019,
        3087
      ]
    },
    {
      "content": "As the example is focused on helping avoid accidental deletion, the level is set as <bpt id=\"p1\">**</bpt>CannotDelete<ept id=\"p1\">**</ept>.",
      "pos": [
        3088,
        3189
      ]
    },
    {
      "content": "Creating a lock with REST API",
      "pos": [
        3837,
        3866
      ]
    },
    {
      "content": "You can lock deployed resources with the <bpt id=\"p1\">[</bpt>REST API for management locks<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/mt204563.aspx)</ept>.",
      "pos": [
        3868,
        3997
      ]
    },
    {
      "content": "The REST API enables you to create and delete locks, and",
      "pos": [
        3998,
        4054
      ]
    },
    {
      "content": "retrieve information about existing locks.",
      "pos": [
        4056,
        4098
      ]
    },
    {
      "content": "To create a lock, run:",
      "pos": [
        4100,
        4122
      ]
    },
    {
      "content": "The scope could be a subscription, resource group or resource.",
      "pos": [
        4248,
        4310
      ]
    },
    {
      "content": "The lock-name is whatever you want to call the lock.",
      "pos": [
        4311,
        4363
      ]
    },
    {
      "content": "For api-version, use <bpt id=\"p1\">**</bpt>2015-01-01<ept id=\"p1\">**</ept>.",
      "pos": [
        4364,
        4400
      ]
    },
    {
      "content": "In the request, include a JSON object that specifies the properties for the lock.",
      "pos": [
        4402,
        4483
      ]
    },
    {
      "pos": [
        4612,
        4676
      ],
      "content": "For lock-level, specify either <bpt id=\"p1\">**</bpt>CanNotDelete<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>ReadOnly<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        4678,
        4784
      ],
      "content": "For examples, see <bpt id=\"p1\">[</bpt>REST API for management locks<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/mt204563.aspx)</ept>."
    },
    {
      "content": "Creating a lock with Azure PowerShell",
      "pos": [
        4789,
        4826
      ]
    },
    {
      "content": "You can lock deployed resources with Azure PowerShell by using the <bpt id=\"p1\">**</bpt>New-AzureResourceLock<ept id=\"p1\">**</ept> as shown below.",
      "pos": [
        4828,
        4936
      ]
    },
    {
      "content": "Through PowerShell, you can only set the <bpt id=\"p1\">**</bpt>LockLevel<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>CanNotDelete<ept id=\"p2\">**</ept>.",
      "pos": [
        4937,
        5012
      ]
    },
    {
      "pos": [
        5184,
        5339
      ],
      "content": "PowerShell provides other commands for working locks, such as <bpt id=\"p1\">**</bpt>Set-AzureResourceLock<ept id=\"p1\">**</ept> to update a lock and <bpt id=\"p2\">**</bpt>Remove-AzureResourceLock<ept id=\"p2\">**</ept> to delete a lock."
    },
    {
      "content": "Next steps",
      "pos": [
        5344,
        5354
      ]
    },
    {
      "pos": [
        5358,
        5555
      ],
      "content": "For more information about working with resource locks, see <bpt id=\"p1\">[</bpt>Lock Down Your Azure Resources<ept id=\"p1\">](http://blogs.msdn.com/b/cloud_solution_architect/archive/2015/06/18/lock-down-your-azure-resources.aspx)</ept>"
    },
    {
      "pos": [
        5558,
        5683
      ],
      "content": "To learn about logically organizing your resources, see <bpt id=\"p1\">[</bpt>Using tags to organize your resources<ept id=\"p1\">](resource-group-using-tags.md)</ept>"
    },
    {
      "pos": [
        5686,
        5816
      ],
      "content": "To change which resource group a resource resides in, see <bpt id=\"p1\">[</bpt>Move resources to new resource group<ept id=\"p1\">](resource-group-move-resources.md)</ept>"
    },
    {
      "content": "test",
      "pos": [
        5818,
        5822
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Lock Resources with Azure Resource Manager\" \n    description=\"Lock resources to prevent users from updating or deleting certain resources.\" \n    services=\"azure-resource-manager\" \n    documentationCenter=\"\" \n    authors=\"tfitzmac\" \n    manager=\"wpickett\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"azure-resource-manager\" \n    ms.workload=\"multiple\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"08/10/2015\" \n    ms.author=\"tomfitz\"/>\n\n# Lock resources with Azure Resource Manager\n\nAs an administrator, there are scenarios where you will want to place a lock on a resource or resource group to prevent other users in your organization from committing write actions or accidentally deleting a critical resource. \n\nAzure Resource Manager provides the ability to restrict operations on resources through resource management locks. Resource locks are policies which enforce a lock level at a particular scope. The lock level identifies the type of enforcement for the policy, which presently has two values – **CanNotDelete** and **ReadOnly**. The scope is expressed as a URI and can be either a resource or a resource group.\n\nLocks are different from assigning user permissions to perform certain actions. To learn about setting permissions for users and roles, see \n[Role-based access control in the preview portal](role-based-access-control-configure.md) and [Managing and Auditing Access to Resources](resource-group-rbac.md).\n\n## Common scenarios\n\nOne common scenario is when you have a resource group with some resources that are used in an off-and-on pattern.  VM resources are turned on periodically to process data for a given interval of \ntime and then turned off. In this scenario, you will want to enable the shut down of the VMs but it is imperative \nthat a storage account not be deleted. In this scenario, you would use a resource lock with a lock level of **CanNotDelete** on the storage account.\n\nIn another scenario, your business may have periods where you don't want updates going into production. The **ReadOnly** lock level stops creation or updates. If you’re a retail company, you may not want to allow updates during holiday shopping periods.  If you’re a financial services company, you may have constraints related to deployments during \ncertain market hours. A resource lock can provide a policy to lock the resources as appropriate. This could be applied to just certain resources or to the entirety of the resource group.\n\n## Creating a lock in a template\n\nThe example below shows a template that creates a lock on a storage account. The storage account on which to apply the lock is provided as a parameter, and that is used \nin conjunction with the concat() function.  The result is the resource name appended with ‘Microsoft.Authorization’ and then a name of the lock, in this case **myLock**.\n\nThe type provided is specific to the resource type. For storage, this type is \"Microsoft.Storage/storageaccounts/providers/locks\".\n\nThe scope level is set using the **level** property of the resource. As the example is focused on helping avoid accidental deletion, the level is set as **CannotDelete**.\n\n    {\n        \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n        \"contentVersion\": \"1.0.0.0\",\n        \"parameters\": {\n            \"lockedResource\": {\n                \"type\": \"string\"\n            }\n        },\n        \"resources\": [\n            {\n                \"name\": \"[concat(parameters('lockedResource'), '/Microsoft.Authorization/myLock')]\",\n                \"type\": \"Microsoft.Storage/storageAccounts/providers/locks\",\n                \"apiVersion\": \"2015-01-01\",\n                \"properties\": {\n                    \"level\": \"CannotDelete\"\n                }\n            }\n        ]\n    }\n\n## Creating a lock with REST API\n\nYou can lock deployed resources with the [REST API for management locks](https://msdn.microsoft.com/library/azure/mt204563.aspx). The REST API enables you to create and delete locks, and \nretrieve information about existing locks.\n\nTo create a lock, run:\n\n    PUT https://management.azure.com/{scope}/providers/Microsoft.Authorization/locks/{lock-name}?api-version={api-version}\n\nThe scope could be a subscription, resource group or resource. The lock-name is whatever you want to call the lock. For api-version, use **2015-01-01**.\n\nIn the request, include a JSON object that specifies the properties for the lock.\n\n    {\n        \"properties\": {\n            \"level\": {lock-level},\n            \"notes\": \"Optional text notes.\"\n        }\n    } \n\nFor lock-level, specify either **CanNotDelete** or **ReadOnly**.\n\nFor examples, see [REST API for management locks](https://msdn.microsoft.com/library/azure/mt204563.aspx).\n\n## Creating a lock with Azure PowerShell\n\nYou can lock deployed resources with Azure PowerShell by using the **New-AzureResourceLock** as shown below. Through PowerShell, you can only set the **LockLevel** to **CanNotDelete**.\n\n    PS C:\\> New-AzureResourceLock -LockLevel CanNotDelete -LockName LockSite -ResourceName examplesite -ResourceType Microsoft.Web/sites -ResourceGroupName ExampleGroup\n\nPowerShell provides other commands for working locks, such as **Set-AzureResourceLock** to update a lock and **Remove-AzureResourceLock** to delete a lock.\n\n## Next steps\n\n- For more information about working with resource locks, see [Lock Down Your Azure Resources](http://blogs.msdn.com/b/cloud_solution_architect/archive/2015/06/18/lock-down-your-azure-resources.aspx)\n- To learn about logically organizing your resources, see [Using tags to organize your resources](resource-group-using-tags.md)\n- To change which resource group a resource resides in, see [Move resources to new resource group](resource-group-move-resources.md)\n\ntest\n"
}