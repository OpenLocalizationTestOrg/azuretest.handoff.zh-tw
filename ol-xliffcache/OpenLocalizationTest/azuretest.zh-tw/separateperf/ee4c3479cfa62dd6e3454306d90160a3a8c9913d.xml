{
  "nodes": [
    {
      "content": "Add Mobile Services to an existing app (HTML 5) | Microsoft Azure",
      "pos": [
        28,
        93
      ]
    },
    {
      "content": "Learn how to get started using Mobile Services in an existing HTML app.",
      "pos": [
        113,
        184
      ]
    },
    {
      "content": "Add Mobile Services to an existing app",
      "pos": [
        519,
        557
      ]
    },
    {
      "content": "Overview",
      "pos": [
        683,
        691
      ]
    },
    {
      "content": "This topic shows you how to use Azure Mobile Services to leverage data in an HTML app.",
      "pos": [
        694,
        780
      ]
    },
    {
      "content": "In this tutorial, you will download an app that stores data in memory, create a new mobile service, integrate the mobile service with the app, and then sign in to the Azure Management Portal to view changes to data made when running the app.",
      "pos": [
        781,
        1022
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>This tutorial is intended to help you better understand how Mobile Services enables you to use Azure to store and retrieve data from an HTML app.",
      "pos": [
        1025,
        1182
      ]
    },
    {
      "content": "As such, this topic walks you through many of the steps that are completed for you in the Mobile Services quickstart.",
      "pos": [
        1183,
        1300
      ]
    },
    {
      "content": "If this is your first experience with Mobile Services, consider first completing the tutorial [Get started with Mobile Services].",
      "pos": [
        1301,
        1430
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> To complete this tutorial, you need an Azure account.",
      "pos": [
        1434,
        1505
      ]
    },
    {
      "content": "If you don't have an account, you can create a free trial account in just a couple of minutes.",
      "pos": [
        1506,
        1600
      ]
    },
    {
      "content": "For details, see <bpt id=\"p1\">[</bpt>Azure Free Trial<ept id=\"p1\">](http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A756A2826&amp;amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2documentation%2Farticles%2Fmobile-services-html-get-started-data)</ept>.",
      "pos": [
        1601,
        1817
      ]
    },
    {
      "content": "Additional requirements",
      "pos": [
        1822,
        1845
      ]
    },
    {
      "content": "You can host the GetStartedWithData app on any web server.",
      "pos": [
        1847,
        1905
      ]
    },
    {
      "content": "However, for your convenience scripts have been provided that enable you to run the app on <ph id=\"ph1\">`http://localhost:8000`</ph>.",
      "pos": [
        1906,
        2021
      ]
    },
    {
      "content": "To use localhost, this tutorial requires that you have one of the following web servers running on your local computer:",
      "pos": [
        2026,
        2145
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>On Windows<ept id=\"p1\">**</ept>: IIS Express.",
      "pos": [
        2154,
        2182
      ]
    },
    {
      "content": "IIS Express is installed by the [Microsoft Web Platform Installer].",
      "pos": [
        2183,
        2250
      ]
    },
    {
      "pos": [
        2261,
        2319
      ],
      "content": "<bpt id=\"p1\">**</bpt>On MacOS X<ept id=\"p1\">**</ept>: Python, which should already be installed."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>On Linux<ept id=\"p1\">**</ept>: Python.",
      "pos": [
        2327,
        2348
      ]
    },
    {
      "content": "You must install the [latest version of Python].",
      "pos": [
        2349,
        2397
      ]
    },
    {
      "content": "You can use any web server to host the app, but these are the web servers that are supported by the downloaded scripts.",
      "pos": [
        2408,
        2527
      ]
    },
    {
      "content": "A web browser that supports HTML5.",
      "pos": [
        2533,
        2567
      ]
    },
    {
      "pos": [
        2571,
        2637
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"download-app\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Download the GetStartedWithData project"
    },
    {
      "content": "This tutorial is built on the [GetStartedWithData app], which is an HTML5 app.",
      "pos": [
        2639,
        2717
      ]
    },
    {
      "content": "The UI for this app is identical to the app generated by the Mobile Services quickstart, except that added items are stored locally in memory.",
      "pos": [
        2718,
        2860
      ]
    },
    {
      "content": "[Download the HTML app project files][GetStartedWithData app].",
      "pos": [
        2866,
        2928
      ]
    },
    {
      "content": "In an HTML editor, open the downloaded project and examine the app.js file.",
      "pos": [
        2933,
        3008
      ]
    },
    {
      "content": "Notice that added items are stored in an in-memory <bpt id=\"p1\">**</bpt>Array<ept id=\"p1\">**</ept> object (<bpt id=\"p2\">**</bpt>staticItems<ept id=\"p2\">**</ept>).",
      "pos": [
        3014,
        3100
      ]
    },
    {
      "content": "Refresh the page, and the data disappears.",
      "pos": [
        3101,
        3143
      ]
    },
    {
      "content": "It is not persisted.",
      "pos": [
        3144,
        3164
      ]
    },
    {
      "pos": [
        3169,
        3241
      ],
      "content": "Launch one of the following command files from the <bpt id=\"p1\">**</bpt>server<ept id=\"p1\">**</ept> subfolder."
    },
    {
      "pos": [
        3249,
        3287
      ],
      "content": "<bpt id=\"p1\">**</bpt>launch-windows<ept id=\"p1\">**</ept> (Windows computers)"
    },
    {
      "pos": [
        3295,
        3338
      ],
      "content": "<bpt id=\"p1\">**</bpt>launch-mac.command<ept id=\"p1\">**</ept> (Mac OS X computers)"
    },
    {
      "pos": [
        3345,
        3382
      ],
      "content": "<bpt id=\"p1\">**</bpt>launch-linux.sh<ept id=\"p1\">**</ept> (Linux computers)"
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> On a Windows computer, type <ph id=\"ph2\">`R`</ph> when PowerShell asks you to confirm that you want to run the script.",
      "pos": [
        3390,
        3503
      ]
    },
    {
      "content": "Your web browser might warn you to not run the script because it was downloaded from the internet.",
      "pos": [
        3504,
        3602
      ]
    },
    {
      "content": "When this happens, you must request that the browser proceed to load the script",
      "pos": [
        3603,
        3682
      ]
    },
    {
      "content": "This starts a web server on your local computer to host the new app.",
      "pos": [
        3692,
        3760
      ]
    },
    {
      "pos": [
        3765,
        3888
      ],
      "content": "Open the URL <ph id=\"ph1\">&lt;a href=\"http://localhost:8000/\" target=\"_blank\"&gt;</ph>http://localhost:8000/<ph id=\"ph2\">&lt;/a&gt;</ph> in a web browser to start the app."
    },
    {
      "pos": [
        3893,
        4006
      ],
      "content": "In the app, type meaningful text, such as <bpt id=\"p1\">_</bpt>Complete the tutorial<ept id=\"p1\">_</ept>, in <bpt id=\"p2\">**</bpt>Enter new task<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>."
    },
    {
      "pos": [
        4026,
        4142
      ],
      "content": "Notice that the saved text is added to the <bpt id=\"p1\">**</bpt>staticItems<ept id=\"p1\">**</ept> array, and the page is refreshed to display the new item."
    },
    {
      "pos": [
        4146,
        4227
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"create-service\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Create a new mobile service in the Management Portal"
    },
    {
      "pos": [
        4349,
        4410
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"add-table\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Add a new table to the mobile service"
    },
    {
      "content": "To be able to store app data in the new mobile service, you must first create a new table in the associated SQL Database instance.",
      "pos": [
        4412,
        4542
      ]
    },
    {
      "pos": [
        4547,
        4656
      ],
      "content": "In the Management Portal, click <bpt id=\"p1\">**</bpt>Mobile Services<ept id=\"p1\">**</ept>, and then click the mobile service that you just created."
    },
    {
      "pos": [
        4661,
        4708
      ],
      "content": "Click the <bpt id=\"p1\">**</bpt>Data<ept id=\"p1\">**</ept> tab, then click <bpt id=\"p2\">**</bpt>+Create<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        4714,
        4760
      ],
      "content": "This displays the <bpt id=\"p1\">**</bpt>Create new table<ept id=\"p1\">**</ept> dialog."
    },
    {
      "pos": [
        4765,
        4828
      ],
      "content": "In <bpt id=\"p1\">**</bpt>Table name<ept id=\"p1\">**</ept> type <bpt id=\"p2\">_</bpt>TodoItem<ept id=\"p2\">_</ept>, then click the check button."
    },
    {
      "content": "This creates a new storage table <bpt id=\"p1\">**</bpt>TodoItem<ept id=\"p1\">**</ept> with the default permissions set.",
      "pos": [
        4834,
        4913
      ]
    },
    {
      "content": "This means that anyone with the application key, which is distributed with your app, can access and change data in the table.",
      "pos": [
        4914,
        5039
      ]
    },
    {
      "content": "The table is created in a schema that is specific to a given mobile service.",
      "pos": [
        5040,
        5116
      ]
    },
    {
      "content": "This is to prevent data collisions when multiple mobile services use the same database.",
      "pos": [
        5117,
        5204
      ]
    },
    {
      "pos": [
        5209,
        5281
      ],
      "content": "Click the new <bpt id=\"p1\">**</bpt>TodoItem<ept id=\"p1\">**</ept> table and verify that there are no data rows."
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>New tables are created with the Id, __createdAt, __updatedAt, and __version columns.",
      "pos": [
        5288,
        5384
      ]
    },
    {
      "content": "When dynamic schema is enabled, Mobile Services automatically generates new columns based on the JSON object in the insert or update request.",
      "pos": [
        5385,
        5526
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>Dynamic schema<ept id=\"p1\">](http://msdn.microsoft.com/library/windowsazure/jj193175.aspx)</ept>.",
      "pos": [
        5527,
        5632
      ]
    },
    {
      "content": "In the <bpt id=\"p1\">**</bpt>Configure<ept id=\"p1\">**</ept> tab, verify that <ph id=\"ph1\">`localhost`</ph> is already listed in the <bpt id=\"p2\">**</bpt>Allow requests from host names<ept id=\"p2\">**</ept> list under <bpt id=\"p3\">**</bpt>Cross-Origin Resource Sharing (CORS)<ept id=\"p3\">**</ept>.",
      "pos": [
        5637,
        5799
      ]
    },
    {
      "content": "If it's not, type <ph id=\"ph1\">`localhost`</ph> in the <bpt id=\"p1\">**</bpt>Host name<ept id=\"p1\">**</ept> field and then click <bpt id=\"p2\">**</bpt>Save<ept id=\"p2\">**</ept>.",
      "pos": [
        5800,
        5881
      ]
    },
    {
      "content": "You are now ready to use the new mobile service as data storage for the app.",
      "pos": [
        6212,
        6288
      ]
    },
    {
      "pos": [
        6292,
        6373
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"update-app\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Update the app to use the mobile service for data access"
    },
    {
      "content": "Now that your mobile service is ready, you can update the app to store items in Mobile Services instead of the local collection.",
      "pos": [
        6375,
        6503
      ]
    },
    {
      "pos": [
        6509,
        6613
      ],
      "content": "In the Management Portal, click <bpt id=\"p1\">**</bpt>Mobile Services<ept id=\"p1\">**</ept>, and then click the mobile service you just created."
    },
    {
      "pos": [
        6618,
        6763
      ],
      "content": "Click the <bpt id=\"p1\">**</bpt>Dashboard<ept id=\"p1\">**</ept> tab and make a note of the <bpt id=\"p2\">**</bpt>Mobile Service URL<ept id=\"p2\">**</ept>, then click <bpt id=\"p3\">**</bpt>Manage keys<ept id=\"p3\">**</ept> and make a note of the <bpt id=\"p4\">**</bpt>Application key<ept id=\"p4\">**</ept>."
    },
    {
      "content": "You will need these values when accessing the mobile service from your app code.",
      "pos": [
        6769,
        6849
      ]
    },
    {
      "content": "In your web editor, open the index.html project file and add the following to the script references for the page:",
      "pos": [
        6854,
        6967
      ]
    },
    {
      "pos": [
        7083,
        7321
      ],
      "content": "In the editor, open the file app.js, uncomment the following code that defines the <bpt id=\"p1\">**</bpt>MobileServiceClient<ept id=\"p1\">**</ept> variable, and supply the URL and application key from the mobile service in the <bpt id=\"p2\">**</bpt>MobileServiceClient<ept id=\"p2\">**</ept> constructor, in that order:"
    },
    {
      "content": "This creates a new instance of MobileServiceClient that is used to access your mobile service.",
      "pos": [
        7477,
        7571
      ]
    },
    {
      "content": "Comment-out the following lines of code:",
      "pos": [
        7576,
        7616
      ]
    },
    {
      "content": "Data will be stored in the mobile service and not in an in-memory array.",
      "pos": [
        7680,
        7752
      ]
    },
    {
      "content": "Uncomment the following line of code:",
      "pos": [
        7757,
        7794
      ]
    },
    {
      "pos": [
        7854,
        7941
      ],
      "content": "This code creates a proxy object (<bpt id=\"p1\">**</bpt>todoItemTable<ept id=\"p1\">**</ept>) for the SQL Database <bpt id=\"p2\">**</bpt>TodoItem<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        7947,
        8023
      ],
      "content": "Replace the <bpt id=\"p1\">**</bpt>$('#add-item').submit<ept id=\"p1\">**</ept> event handler with the following code:"
    },
    {
      "content": "This code inserts a new item into the table.",
      "pos": [
        8417,
        8461
      ]
    },
    {
      "pos": [
        8466,
        8530
      ],
      "content": "Replace the <bpt id=\"p1\">**</bpt>refreshTodoItems<ept id=\"p1\">**</ept> method with the following code:"
    },
    {
      "content": "This sends a query to the mobile service that returns all items.",
      "pos": [
        9377,
        9441
      ]
    },
    {
      "content": "The results is iterated over and data is displayed on the page.",
      "pos": [
        9442,
        9505
      ]
    },
    {
      "pos": [
        9511,
        9666
      ],
      "content": "Replace the <bpt id=\"p1\">**</bpt>$(document.body).on('change', '.item-text')<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>$(document.body).on('change', '.item-complete')<ept id=\"p2\">**</ept> event handlers with the following code:"
    },
    {
      "content": "This sends an item update to the mobile service when text is changed or when the box is checked.",
      "pos": [
        10139,
        10235
      ]
    },
    {
      "pos": [
        10241,
        10340
      ],
      "content": "Replace the <bpt id=\"p1\">**</bpt>$(document.body).on('click', '.item-delete')<ept id=\"p1\">**</ept> event handler with the following code:"
    },
    {
      "pos": [
        10509,
        10589
      ],
      "content": "This sends a delete to the mobile service when the <bpt id=\"p1\">**</bpt>Delete<ept id=\"p1\">**</ept> button is clicked."
    },
    {
      "content": "Now that the app has been updated to use Mobile Services for backend storage, it's time to test the app against Mobile Services.",
      "pos": [
        10591,
        10719
      ]
    },
    {
      "pos": [
        10723,
        10790
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"test-app\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Test the app against your new mobile service"
    },
    {
      "pos": [
        10795,
        10917
      ],
      "content": "Reload the URL <ph id=\"ph1\">&lt;a href=\"http://localhost:8000/\" target=\"_blank\"&gt;</ph>http://localhost:8000/<ph id=\"ph2\">&lt;/a&gt;</ph> in a web browser start the app."
    },
    {
      "pos": [
        10925,
        11015
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you need to restart the web server, repeat the steps in the first section."
    },
    {
      "pos": [
        11020,
        11087
      ],
      "content": "As before, type text in <bpt id=\"p1\">**</bpt>Enter new task<ept id=\"p1\">**</ept>, and then click <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>."
    },
    {
      "content": "This sends a new item as an insert to the mobile service.",
      "pos": [
        11094,
        11151
      ]
    },
    {
      "pos": [
        11156,
        11246
      ],
      "content": "In the [Management Portal], click <bpt id=\"p1\">**</bpt>Mobile Services<ept id=\"p1\">**</ept>, and then click your mobile service."
    },
    {
      "pos": [
        11251,
        11297
      ],
      "content": "Click the <bpt id=\"p1\">**</bpt>Data<ept id=\"p1\">**</ept> tab, then click <bpt id=\"p2\">**</bpt>Browse<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        11305,
        11503
      ],
      "content": "Notice that the <bpt id=\"p1\">**</bpt>TodoItem<ept id=\"p1\">**</ept> table now contains data, with id values generated by Mobile Services, and that columns have been automatically added to the table to match the TodoItem class in the app."
    },
    {
      "pos": [
        11508,
        11623
      ],
      "content": "In the app, check one of the items in the list, then go back to the Browse tab in the portal and click <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        11630,
        11700
      ],
      "content": "Notice that the complete value has changed from <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        11705,
        11841
      ],
      "content": "In the app.js project file, locate the <bpt id=\"p1\">**</bpt>RefreshTodoItems<ept id=\"p1\">**</ept> method and replace the line of code that defines <ph id=\"ph1\">`query`</ph> with the following:"
    },
    {
      "content": "Load the page again, check another one of the items in the list.",
      "pos": [
        11909,
        11973
      ]
    },
    {
      "content": "Notice that the checked item now disappears from the list.",
      "pos": [
        11979,
        12037
      ]
    },
    {
      "content": "Each update results in a round-trip to the mobile service, which now returns filtered data.",
      "pos": [
        12038,
        12129
      ]
    },
    {
      "pos": [
        12131,
        12185
      ],
      "content": "This concludes the <bpt id=\"p1\">**</bpt>Get started with data<ept id=\"p1\">**</ept> tutorial."
    },
    {
      "pos": [
        12190,
        12226
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"next-steps\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>Next steps"
    },
    {
      "content": "This tutorial demonstrated the basics of enabling an HTML app to work with data in Mobile Services.",
      "pos": [
        12228,
        12327
      ]
    },
    {
      "content": "Next, learn how to authenticate users of your app try one of these other tutorials by completing [Add authentication to your app].",
      "pos": [
        12328,
        12458
      ]
    },
    {
      "content": "If you are working with a Cordova or PhoneGap app project, learn more about push notifications in <bpt id=\"p1\">[</bpt>Push Notifications to Cordova Apps with Microsoft Azure<ept id=\"p1\">](https://msdn.microsoft.com/magazine/dn879353.aspx)</ept>.",
      "pos": [
        12459,
        12666
      ]
    },
    {
      "content": "test",
      "pos": [
        13611,
        13615
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Add Mobile Services to an existing app (HTML 5) | Microsoft Azure\" \n    description=\"Learn how to get started using Mobile Services in an existing HTML app.\" \n    services=\"mobile-services\" \n    documentationCenter=\"\" \n    authors=\"ggailey777\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"mobile-services\" \n    ms.workload=\"mobile\" \n    ms.tgt_pltfrm=\"mobile-html\" \n    ms.devlang=\"javascript\" \n    ms.topic=\"article\" \n    ms.date=\"08/16/2015\" \n    ms.author=\"glenga\"/>\n\n# Add Mobile Services to an existing app\n\n[AZURE.INCLUDE [mobile-services-selector-get-started-data](../../includes/mobile-services-selector-get-started-data.md)]\n\n##Overview \n\nThis topic shows you how to use Azure Mobile Services to leverage data in an HTML app. In this tutorial, you will download an app that stores data in memory, create a new mobile service, integrate the mobile service with the app, and then sign in to the Azure Management Portal to view changes to data made when running the app.\n\n>[AZURE.NOTE]This tutorial is intended to help you better understand how Mobile Services enables you to use Azure to store and retrieve data from an HTML app. As such, this topic walks you through many of the steps that are completed for you in the Mobile Services quickstart. If this is your first experience with Mobile Services, consider first completing the tutorial [Get started with Mobile Services].\n\n> [AZURE.IMPORTANT] To complete this tutorial, you need an Azure account. If you don't have an account, you can create a free trial account in just a couple of minutes. For details, see [Azure Free Trial](http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A756A2826&amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2documentation%2Farticles%2Fmobile-services-html-get-started-data).\n\n###Additional requirements\n\nYou can host the GetStartedWithData app on any web server. However, for your convenience scripts have been provided that enable you to run the app on `http://localhost:8000`.\n \n+ To use localhost, this tutorial requires that you have one of the following web servers running on your local computer:\n\n    +  **On Windows**: IIS Express. IIS Express is installed by the [Microsoft Web Platform Installer].   \n    +  **On MacOS X**: Python, which should already be installed.\n    +  **On Linux**: Python. You must install the [latest version of Python]. \n    \n    You can use any web server to host the app, but these are the web servers that are supported by the downloaded scripts.  \n\n+ A web browser that supports HTML5.\n\n##<a name=\"download-app\"></a>Download the GetStartedWithData project\n\nThis tutorial is built on the [GetStartedWithData app], which is an HTML5 app. The UI for this app is identical to the app generated by the Mobile Services quickstart, except that added items are stored locally in memory. \n\n1. [Download the HTML app project files][GetStartedWithData app].\n\n2. In an HTML editor, open the downloaded project and examine the app.js file.\n\n    Notice that added items are stored in an in-memory **Array** object (**staticItems**). Refresh the page, and the data disappears. It is not persisted.\n\n3. Launch one of the following command files from the **server** subfolder.\n\n    + **launch-windows** (Windows computers) \n    + **launch-mac.command** (Mac OS X computers)\n    + **launch-linux.sh** (Linux computers)\n\n    > [AZURE.NOTE] On a Windows computer, type `R` when PowerShell asks you to confirm that you want to run the script. Your web browser might warn you to not run the script because it was downloaded from the internet. When this happens, you must request that the browser proceed to load the script\n    \n    This starts a web server on your local computer to host the new app.\n\n4. Open the URL <a href=\"http://localhost:8000/\" target=\"_blank\">http://localhost:8000/</a> in a web browser to start the app.\n\n5. In the app, type meaningful text, such as _Complete the tutorial_, in **Enter new task**, and then click **Add**.\n\n    ![][0]  \n\n    Notice that the saved text is added to the **staticItems** array, and the page is refreshed to display the new item.\n\n##<a name=\"create-service\"></a>Create a new mobile service in the Management Portal\n\n[AZURE.INCLUDE [mobile-services-create-new-service-data](../../includes/mobile-services-create-new-service-data.md)]\n\n##<a name=\"add-table\"></a>Add a new table to the mobile service\n\nTo be able to store app data in the new mobile service, you must first create a new table in the associated SQL Database instance.\n\n1. In the Management Portal, click **Mobile Services**, and then click the mobile service that you just created.\n\n2. Click the **Data** tab, then click **+Create**.\n\n    This displays the **Create new table** dialog.\n\n3. In **Table name** type _TodoItem_, then click the check button.\n\n    This creates a new storage table **TodoItem** with the default permissions set. This means that anyone with the application key, which is distributed with your app, can access and change data in the table. The table is created in a schema that is specific to a given mobile service. This is to prevent data collisions when multiple mobile services use the same database.\n\n4. Click the new **TodoItem** table and verify that there are no data rows.\n\n    >[AZURE.NOTE]New tables are created with the Id, __createdAt, __updatedAt, and __version columns. When dynamic schema is enabled, Mobile Services automatically generates new columns based on the JSON object in the insert or update request. For more information, see [Dynamic schema](http://msdn.microsoft.com/library/windowsazure/jj193175.aspx).\n\n6. In the **Configure** tab, verify that `localhost` is already listed in the **Allow requests from host names** list under **Cross-Origin Resource Sharing (CORS)**. If it's not, type `localhost` in the **Host name** field and then click **Save**.\n\n\n    > [AZURE.IMPORTANT] If you deploy the quickstart app to a web server other than localhost, you must add the host name of the web server to the **Allow requests from host names** list. For more information, see [Cross-origin resource sharing](http://msdn.microsoft.com/library/windowsazure/dn155871.aspx\"%20target=\"_blank).\n\nYou are now ready to use the new mobile service as data storage for the app.\n\n##<a name=\"update-app\"></a>Update the app to use the mobile service for data access\n\nNow that your mobile service is ready, you can update the app to store items in Mobile Services instead of the local collection. \n\n3. In the Management Portal, click **Mobile Services**, and then click the mobile service you just created.\n\n4. Click the **Dashboard** tab and make a note of the **Mobile Service URL**, then click **Manage keys** and make a note of the **Application key**.\n\n    You will need these values when accessing the mobile service from your app code.\n\n1. In your web editor, open the index.html project file and add the following to the script references for the page:\n\n        <script src=\"http://ajax.aspnetcdn.com/ajax/mobileservices/MobileServices.Web-1.2.5.min.js\"></script>\n\n5. In the editor, open the file app.js, uncomment the following code that defines the **MobileServiceClient** variable, and supply the URL and application key from the mobile service in the **MobileServiceClient** constructor, in that order:\n\n        var MobileServiceClient = WindowsAzure.MobileServiceClient,\n            client = new MobileServiceClient('AppUrl', 'AppKey'),               \n\n    This creates a new instance of MobileServiceClient that is used to access your mobile service.\n\n6. Comment-out the following lines of code:\n\n        var itemCount = 0;\n        var staticItems = [];\n\n    Data will be stored in the mobile service and not in an in-memory array.\n\n6. Uncomment the following line of code:\n\n        todoItemTable = client.getTable('todoitem');\n\n    This code creates a proxy object (**todoItemTable**) for the SQL Database **TodoItem**. \n\n7. Replace the **$('#add-item').submit** event handler with the following code:\n\n        $('#add-item').submit(function(evt) {\n            var textbox = $('#new-item-text'),\n                itemText = textbox.val();\n            if (itemText !== '') {\n                todoItemTable.insert({ text: itemText, complete: false })\n                    .then(refreshTodoItems);\n            }\n            textbox.val('').focus();\n            evt.preventDefault();\n        });\n\n\n    This code inserts a new item into the table.\n\n8. Replace the **refreshTodoItems** method with the following code:\n\n        function refreshTodoItems() {\n\n            var query = todoItemTable;\n\n            query.read().then(function(todoItems) {\n                listItems = $.map(todoItems, function(item) {\n                    return $('<li>')\n                        .attr('data-todoitem-id', item.id)\n                        .append($('<button class=\"item-delete\">Delete</button>'))\n                        .append($('<input type=\"checkbox\" class=\"item-complete\">').prop('checked', item.complete))\n                        .append($('<div>').append($('<input class=\"item-text\">').val(item.text)));\n                });\n                       \n                $('#todo-items').empty().append(listItems).toggle(listItems.length > 0);\n                $('#summary').html('<strong>' + todoItems.length + '</strong> item(s)');\n            });\n        }\n       \n\n   This sends a query to the mobile service that returns all items. The results is iterated over and data is displayed on the page. \n\n9. Replace the **$(document.body).on('change', '.item-text')** and **$(document.body).on('change', '.item-complete')** event handlers with the following code:\n        \n        $(document.body).on('change', '.item-text', function() {\n            var newText = $(this).val();\n            todoItemTable.update({ id: getTodoItemId(this), text: newText });\n        });\n\n        $(document.body).on('change', '.item-complete', function() {\n            var isComplete = $(this).prop('checked');\n            todoItemTable.update({ id: getTodoItemId(this), complete: isComplete })\n                .then(refreshTodoItems);\n        });\n \n    This sends an item update to the mobile service when text is changed or when the box is checked.\n\n10. Replace the **$(document.body).on('click', '.item-delete')** event handler with the following code:\n\n        $(document.body).on('click', '.item-delete', function () {\n            todoItemTable.del({ id: getTodoItemId(this) }).then(refreshTodoItems);\n        });\n\n    This sends a delete to the mobile service when the **Delete** button is clicked.\n\nNow that the app has been updated to use Mobile Services for backend storage, it's time to test the app against Mobile Services.\n\n##<a name=\"test-app\"></a>Test the app against your new mobile service\n\n4. Reload the URL <a href=\"http://localhost:8000/\" target=\"_blank\">http://localhost:8000/</a> in a web browser start the app.\n\n    > [AZURE.NOTE] If you need to restart the web server, repeat the steps in the first section.\n\n2. As before, type text in **Enter new task**, and then click **Add**. \n\n    This sends a new item as an insert to the mobile service.\n\n3. In the [Management Portal], click **Mobile Services**, and then click your mobile service.\n\n4. Click the **Data** tab, then click **Browse**.\n  \n    Notice that the **TodoItem** table now contains data, with id values generated by Mobile Services, and that columns have been automatically added to the table to match the TodoItem class in the app.\n\n5. In the app, check one of the items in the list, then go back to the Browse tab in the portal and click **Refresh**. \n\n    Notice that the complete value has changed from **false** to **true**.\n\n6. In the app.js project file, locate the **RefreshTodoItems** method and replace the line of code that defines `query` with the following:\n\n        var query = todoItemTable.where({ complete: false });\n\n7. Load the page again, check another one of the items in the list.\n\n    Notice that the checked item now disappears from the list. Each update results in a round-trip to the mobile service, which now returns filtered data.\n\nThis concludes the **Get started with data** tutorial.\n\n## <a name=\"next-steps\"> </a>Next steps\n\nThis tutorial demonstrated the basics of enabling an HTML app to work with data in Mobile Services. Next, learn how to authenticate users of your app try one of these other tutorials by completing [Add authentication to your app]. If you are working with a Cordova or PhoneGap app project, learn more about push notifications in [Push Notifications to Cordova Apps with Microsoft Azure](https://msdn.microsoft.com/magazine/dn879353.aspx).\n\n<!-- Anchors. -->\n[Download the HTML app project]: #download-app\n[Create the mobile service]: #create-service\n[Add a data table for storage]: #add-table\n[Update the app to use Mobile Services]: #update-app\n[Test the app against Mobile Services]: #test-app\n[Next Steps]:#next-steps\n\n<!-- Images. -->\n[0]: ./media/mobile-services-html-get-started-data/mobile-quickstart-startup-html.png\n\n<!-- URLs. -->\n[Get started with Mobile Services]: mobile-services-html-get-started.md\n[Add authentication to your app]: mobile-services-html-get-started-users.md\n\n[Azure Management Portal]: https://manage.windowsazure.com/\n[Management Portal]: https://manage.windowsazure.com/\n[GetStartedWithData app]:  http://go.microsoft.com/fwlink/?LinkID=286345\n\n[Mobile Services HTML/JavaScript How-to Conceptual Reference]: mobile-services-html-how-to-use-client-library.md\n\n[Cross-origin resource sharing]: http://msdn.microsoft.com/library/azure/dn155871.aspx\n\n \n\ntest\n"
}