<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure SQL Database - elastic database tools</source>
          <target state="new">Azure SQL Database - elastic database tools</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Software as a Service (SaaS) developers can easily create elastic, scalable databases in the cloud using these tools</source>
          <target state="new">Software as a Service (SaaS) developers can easily create elastic, scalable databases in the cloud using these tools</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Elastic Database features overview</source>
          <target state="new">Elastic Database features overview</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Elastic Database<ept id="p1">**</ept> features enables you to use the virtually unlimited database resources of <bpt id="p2">**</bpt>Azure SQL Database<ept id="p2">**</ept> to create solutions for transactional workloads, and especially Software as a Service (SaaS) applications.</source>
          <target state="new"><bpt id="p1">**</bpt>Elastic Database<ept id="p1">**</ept> features enables you to use the virtually unlimited database resources of <bpt id="p2">**</bpt>Azure SQL Database<ept id="p2">**</ept> to create solutions for transactional workloads, and especially Software as a Service (SaaS) applications.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Elastic Database features are composed of the following:</source>
          <target state="new">Elastic Database features are composed of the following:</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Elastic Database tools: These two tools simplify development and management of sharded database solutions.</source>
          <target state="new">Elastic Database tools: These two tools simplify development and management of sharded database solutions.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The tools are: the <bpt id="p1">[</bpt>Elastic Database client library<ept id="p1">](sql-database-elastic-database-client-library.md)</ept> and the <bpt id="p2">[</bpt>Elastic Database split-merge tool<ept id="p2">](sql-database-elastic-scale-overview-split-and-merge.md)</ept>.</source>
          <target state="new">The tools are: the <bpt id="p1">[</bpt>Elastic Database client library<ept id="p1">](sql-database-elastic-database-client-library.md)</ept> and the <bpt id="p2">[</bpt>Elastic Database split-merge tool<ept id="p2">](sql-database-elastic-scale-overview-split-and-merge.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Elastic Database pools<ept id="p1">](sql-database-elastic-pool-guidance.md)</ept> (preview): A pool is a collection of databases to which you can add or remove databases at any time.</source>
          <target state="new"><bpt id="p1">[</bpt>Elastic Database pools<ept id="p1">](sql-database-elastic-pool-guidance.md)</ept> (preview): A pool is a collection of databases to which you can add or remove databases at any time.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The databases in the pool share a fixed amount of resources (known as database throughput units, or DTUs).</source>
          <target state="new">The databases in the pool share a fixed amount of resources (known as database throughput units, or DTUs).</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You pay a fixed price for the resources, which enables you to easily calculate costs while managing performance.</source>
          <target state="new">You pay a fixed price for the resources, which enables you to easily calculate costs while managing performance.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Elastic Database jobs<ept id="p1">](sql-database-elastic-jobs-overview.md)</ept> (preview): Use jobs to manage large numbers of Azure SQL databases.</source>
          <target state="new"><bpt id="p1">[</bpt>Elastic Database jobs<ept id="p1">](sql-database-elastic-jobs-overview.md)</ept> (preview): Use jobs to manage large numbers of Azure SQL databases.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Easily perform administrative operations such as schema changes, credentials management, reference data updates, performance data collection or tenant (customer) telemetry collection using jobs.</source>
          <target state="new">Easily perform administrative operations such as schema changes, credentials management, reference data updates, performance data collection or tenant (customer) telemetry collection using jobs.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Elastic Database query<ept id="p1">](sql-database-elastic-query-overview.md)</ept> (preview): Enables you to run a Transact-SQL query that spans multiple databases.</source>
          <target state="new"><bpt id="p1">[</bpt>Elastic Database query<ept id="p1">](sql-database-elastic-query-overview.md)</ept> (preview): Enables you to run a Transact-SQL query that spans multiple databases.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This enables connection to reporting tools such as Excel, PowerBI, Tableau, etc.</source>
          <target state="new">This enables connection to reporting tools such as Excel, PowerBI, Tableau, etc.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The graphic below shows an architecture that includes the <bpt id="p1">**</bpt>Elastic Database features<ept id="p1">**</ept> in relation to a collection of databases.</source>
          <target state="new">The graphic below shows an architecture that includes the <bpt id="p1">**</bpt>Elastic Database features<ept id="p1">**</ept> in relation to a collection of databases.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Elastic Database tools</source>
          <target state="new">Elastic Database tools</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For a printable version of this graphic, go to <bpt id="p1">[</bpt>Elastic database overview download<ept id="p1">](http://aka.ms/axmybc)</ept>.</source>
          <target state="new">For a printable version of this graphic, go to <bpt id="p1">[</bpt>Elastic database overview download<ept id="p1">](http://aka.ms/axmybc)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In this graphic, colors of the database represent schemas.</source>
          <target state="new">In this graphic, colors of the database represent schemas.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Databases with the same color share the same schemas.</source>
          <target state="new">Databases with the same color share the same schemas.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A set of <bpt id="p1">**</bpt>Azure SQL databases<ept id="p1">**</ept> are hosted on Azure using sharding architecture.</source>
          <target state="new">A set of <bpt id="p1">**</bpt>Azure SQL databases<ept id="p1">**</ept> are hosted on Azure using sharding architecture.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Elastic Database client library<ept id="p1">**</ept> is used to manage a shard set.</source>
          <target state="new">The <bpt id="p1">**</bpt>Elastic Database client library<ept id="p1">**</ept> is used to manage a shard set.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A subset of the databases are put into an <bpt id="p1">**</bpt>Elastic Database pool<ept id="p1">**</ept>.</source>
          <target state="new">A subset of the databases are put into an <bpt id="p1">**</bpt>Elastic Database pool<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>(See <bpt id="p1">[</bpt>Tame explosive growth with elastic databases<ept id="p1">](sql-database-elastic-pool.md)</ept>).</source>
          <target state="new">(See <bpt id="p1">[</bpt>Tame explosive growth with elastic databases<ept id="p1">](sql-database-elastic-pool.md)</ept>).</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>Elastic Database job<ept id="p1">**</ept> runs T-SQL scripts against all databases.</source>
          <target state="new">An <bpt id="p1">**</bpt>Elastic Database job<ept id="p1">**</ept> runs T-SQL scripts against all databases.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>split-merge tool<ept id="p1">**</ept> is used to move data from one shard to another.</source>
          <target state="new">The <bpt id="p1">**</bpt>split-merge tool<ept id="p1">**</ept> is used to move data from one shard to another.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Elastic Database query<ept id="p1">**</ept> allows you to write a query that spans all databases in the shard set.</source>
          <target state="new">The <bpt id="p1">**</bpt>Elastic Database query<ept id="p1">**</ept> allows you to write a query that spans all databases in the shard set.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Promises and challenges</source>
          <target state="new">Promises and challenges</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Achieving elasticity and scale for cloud applications has been straightforward for compute and blob storage--simply add or subtract units.</source>
          <target state="new">Achieving elasticity and scale for cloud applications has been straightforward for compute and blob storage--simply add or subtract units.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>But it has remained a challenge for stateful data processing in relational databases.</source>
          <target state="new">But it has remained a challenge for stateful data processing in relational databases.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>We have seen these challenges emerge most prominently in the two following scenarios:</source>
          <target state="new">We have seen these challenges emerge most prominently in the two following scenarios:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Growing and shrinking capacity for the relational database part of your workload.</source>
          <target state="new">Growing and shrinking capacity for the relational database part of your workload.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Managing hotspots that may arise affecting a specific subset of data – such as a particularly busy end-customer (tenant).</source>
          <target state="new">Managing hotspots that may arise affecting a specific subset of data – such as a particularly busy end-customer (tenant).</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Traditionally, scenarios like these have been addressed by investing in larger-scale database servers to support the application.</source>
          <target state="new">Traditionally, scenarios like these have been addressed by investing in larger-scale database servers to support the application.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>However, this option is limited in the cloud where all processing happens on predefined commodity hardware.</source>
          <target state="new">However, this option is limited in the cloud where all processing happens on predefined commodity hardware.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Instead, distributing data and processing across many identically-structured databases (a scale-out pattern known as "sharding") provides an alternative to traditional scale-up approaches both in terms of cost and elasticity.</source>
          <target state="new">Instead, distributing data and processing across many identically-structured databases (a scale-out pattern known as "sharding") provides an alternative to traditional scale-up approaches both in terms of cost and elasticity.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Horizontal and vertical scaling</source>
          <target state="new">Horizontal and vertical scaling</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The figure below shows the horizontal and vertical dimensions of scaling, which are the basic ways the elastic databases can be scaled.</source>
          <target state="new">The figure below shows the horizontal and vertical dimensions of scaling, which are the basic ways the elastic databases can be scaled.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Horizontal versus Vertical Scaleout</source>
          <target state="new">Horizontal versus Vertical Scaleout</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Horizontal scaling refers to adding or removing databases in order to adjust capacity or overall performance.</source>
          <target state="new">Horizontal scaling refers to adding or removing databases in order to adjust capacity or overall performance.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This is also called “scaling out”.</source>
          <target state="new">This is also called “scaling out”.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Sharding, in which data is partitioned across a collection of identically structured databases, is a common way to implement horizontal scaling.</source>
          <target state="new">Sharding, in which data is partitioned across a collection of identically structured databases, is a common way to implement horizontal scaling.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Vertical scaling refers to increasing or decreasing the performance level of an individual database—this is also known as “scaling up.”</source>
          <target state="new">Vertical scaling refers to increasing or decreasing the performance level of an individual database—this is also known as “scaling up.”</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Most cloud-scale database applications will use a combination of these two strategies.</source>
          <target state="new">Most cloud-scale database applications will use a combination of these two strategies.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, a Software as a Service application may use horizontal scaling to provision new end-customers and vertical scaling to allow each end-customer’s database to grow or shrink resources as needed by the workload.</source>
          <target state="new">For example, a Software as a Service application may use horizontal scaling to provision new end-customers and vertical scaling to allow each end-customer’s database to grow or shrink resources as needed by the workload.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Horizontal scaling is managed using the <bpt id="p1">[</bpt>Elastic Database client library<ept id="p1">](sql-database-elastic-client-overview.md)</ept>.</source>
          <target state="new">Horizontal scaling is managed using the <bpt id="p1">[</bpt>Elastic Database client library<ept id="p1">](sql-database-elastic-client-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Vertical scaling is accomplished using Azure PowerShell cmdlets to change the service tier, or by placing databases in an Elastic Database pool.</source>
          <target state="new">Vertical scaling is accomplished using Azure PowerShell cmdlets to change the service tier, or by placing databases in an Elastic Database pool.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Single and multi-tenancy patterns</source>
          <target state="new">Single and multi-tenancy patterns</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Sharding<ept id="p1">*</ept> is a technique to distribute large amounts of identically-structured data across a number of independent databases.</source>
          <target state="new"><bpt id="p1">*</bpt>Sharding<ept id="p1">*</ept> is a technique to distribute large amounts of identically-structured data across a number of independent databases.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It is especially popular with cloud developers who are creating Software as a Service (SAAS) offerings for end customers or businesses.</source>
          <target state="new">It is especially popular with cloud developers who are creating Software as a Service (SAAS) offerings for end customers or businesses.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>These end customers are often referred to as “tenants”.</source>
          <target state="new">These end customers are often referred to as “tenants”.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Sharding may be required for any number of reasons:</source>
          <target state="new">Sharding may be required for any number of reasons:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The total amount of data is too large to fit within the constraints of a single database</source>
          <target state="new">The total amount of data is too large to fit within the constraints of a single database</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The transaction throughput of the overall workload exceeds the capabilities of a single database</source>
          <target state="new">The transaction throughput of the overall workload exceeds the capabilities of a single database</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Tenants may require physical isolation from each other, so separate databases are needed for each tenant</source>
          <target state="new">Tenants may require physical isolation from each other, so separate databases are needed for each tenant</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Different sections of a database may need to reside in different geographies for compliance, performance or geopolitical reasons.</source>
          <target state="new">Different sections of a database may need to reside in different geographies for compliance, performance or geopolitical reasons.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In other scenarios, such as ingestion of data from distributed devices, sharding can be used to fill a set of databases that are organized temporally.</source>
          <target state="new">In other scenarios, such as ingestion of data from distributed devices, sharding can be used to fill a set of databases that are organized temporally.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, a separate database can be dedicated to each day or week.</source>
          <target state="new">For example, a separate database can be dedicated to each day or week.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In that case, the sharding key can be an integer representing the date (present in all rows of the sharded tables) and queries retrieving information for a date range must be routed by the application to the subset of databases covering the range in question.</source>
          <target state="new">In that case, the sharding key can be an integer representing the date (present in all rows of the sharded tables) and queries retrieving information for a date range must be routed by the application to the subset of databases covering the range in question.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Sharding works best when every transaction in an application can be restricted to a single value of a sharding key.</source>
          <target state="new">Sharding works best when every transaction in an application can be restricted to a single value of a sharding key.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>That ensures that all transactions will be local to a specific database.</source>
          <target state="new">That ensures that all transactions will be local to a specific database.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Some applications use the simplest approach of creating a separate database for each tenant.</source>
          <target state="new">Some applications use the simplest approach of creating a separate database for each tenant.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is the <bpt id="p1">**</bpt>single tenant sharding pattern<ept id="p1">**</ept> that provides isolation, backup/restore ability and resource scaling at the granularity of the tenant.</source>
          <target state="new">This is the <bpt id="p1">**</bpt>single tenant sharding pattern<ept id="p1">**</ept> that provides isolation, backup/restore ability and resource scaling at the granularity of the tenant.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>With single tenant sharding, each database is associated with a specific tenant ID value (or customer key value), but that key need not always be present in the data itself.</source>
          <target state="new">With single tenant sharding, each database is associated with a specific tenant ID value (or customer key value), but that key need not always be present in the data itself.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>It is the application’s responsibility to route each request to the appropriate database – and the client library can simplify this.</source>
          <target state="new">It is the application’s responsibility to route each request to the appropriate database – and the client library can simplify this.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Single tenant versus multi-tenant</source>
          <target state="new">Single tenant versus multi-tenant</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Others scenarios pack multiple tenants together into databases, rather than isolating them into separate databases.</source>
          <target state="new">Others scenarios pack multiple tenants together into databases, rather than isolating them into separate databases.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This is a typical <bpt id="p1">**</bpt>multi-tenant sharding pattern<ept id="p1">**</ept> – and it may be driven by the fact that an application manages large numbers of very small tenants.</source>
          <target state="new">This is a typical <bpt id="p1">**</bpt>multi-tenant sharding pattern<ept id="p1">**</ept> – and it may be driven by the fact that an application manages large numbers of very small tenants.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In multi-tenant sharding, the rows in the database tables are all designed to carry a key identifying the tenant ID or sharding key.</source>
          <target state="new">In multi-tenant sharding, the rows in the database tables are all designed to carry a key identifying the tenant ID or sharding key.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Again, the application tier is responsible for routing a tenant’s request to the appropriate database, and this can be supported by the elastic database client library.</source>
          <target state="new">Again, the application tier is responsible for routing a tenant’s request to the appropriate database, and this can be supported by the elastic database client library.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In addition, row-level security can be used to filter which rows each tenant can access – for details, see <bpt id="p1">[</bpt>Multi-tenant applications with elastic database tools and row-level security<ept id="p1">](sql-database-elastic-tools-multi-tenant-row-level-security.md)</ept>.</source>
          <target state="new">In addition, row-level security can be used to filter which rows each tenant can access – for details, see <bpt id="p1">[</bpt>Multi-tenant applications with elastic database tools and row-level security<ept id="p1">](sql-database-elastic-tools-multi-tenant-row-level-security.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Redistributing data among databases may be needed with the multi-tenant sharding pattern, and this is facilitated by the elastic database split-merge tool.</source>
          <target state="new">Redistributing data among databases may be needed with the multi-tenant sharding pattern, and this is facilitated by the elastic database split-merge tool.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Move data from multiple to single-tenancy databases</source>
          <target state="new">Move data from multiple to single-tenancy databases</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When creating a SaaS application, it is typical to offer prospective customers a trial version of the software.</source>
          <target state="new">When creating a SaaS application, it is typical to offer prospective customers a trial version of the software.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In this case, it is cost-effective to use a multi-tenant database for the data.</source>
          <target state="new">In this case, it is cost-effective to use a multi-tenant database for the data.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>However, when a prospect becomes a customer, a single-tenant database is better since it provides better performance.</source>
          <target state="new">However, when a prospect becomes a customer, a single-tenant database is better since it provides better performance.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If the customer had created data during the trial period, use the <bpt id="p1">[</bpt>split-merge tool<ept id="p1">](sql-database-elastic-scale-overview-split-and-merge)</ept> to move the data from the multi-tenant to the new single-tenant database.</source>
          <target state="new">If the customer had created data during the trial period, use the <bpt id="p1">[</bpt>split-merge tool<ept id="p1">](sql-database-elastic-scale-overview-split-and-merge)</ept> to move the data from the multi-tenant to the new single-tenant database.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For a sample app that demonstrates the client library, see <bpt id="p1">[</bpt>Get started with Elastic Datbabase tools<ept id="p1">](sql-database-elastic-scale-get-started.md)</ept>.</source>
          <target state="new">For a sample app that demonstrates the client library, see <bpt id="p1">[</bpt>Get started with Elastic Datbabase tools<ept id="p1">](sql-database-elastic-scale-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To use the split-merge tool, you must <bpt id="p1">[</bpt>configure security<ept id="p1">](sql-database-elastic-scale-split-merge-security-configuration,md)</ept>.</source>
          <target state="new">To use the split-merge tool, you must <bpt id="p1">[</bpt>configure security<ept id="p1">](sql-database-elastic-scale-split-merge-security-configuration,md)</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To see the specifics of the Elastic Database pool, see <bpt id="p1">[</bpt>Price and performance considerations for an elastic database pool<ept id="p1">](sql-database-elastic-pool-guidance.md)</ept>, or create a new pool with the <bpt id="p2">[</bpt>tutorial<ept id="p2">](sql-database-elastic-pool-portal.md)</ept>.</source>
          <target state="new">To see the specifics of the Elastic Database pool, see <bpt id="p1">[</bpt>Price and performance considerations for an elastic database pool<ept id="p1">](sql-database-elastic-pool-guidance.md)</ept>, or create a new pool with the <bpt id="p2">[</bpt>tutorial<ept id="p2">](sql-database-elastic-pool-portal.md)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c51494b0540ccd16b7548348b42285e66ca7d30c</xliffext:olfilehash>
  </header>
</xliff>