{
  "nodes": [
    {
      "content": "How to set a static internal private IP",
      "pos": [
        27,
        66
      ]
    },
    {
      "content": "Understanding static internal IPs (DIPs) and how to manage them",
      "pos": [
        84,
        147
      ]
    },
    {
      "content": "How to Set a Static Internal Private IP",
      "pos": [
        470,
        509
      ]
    },
    {
      "content": "In most cases, you won’t need to specify a static internal IP address for your virtual machine.",
      "pos": [
        510,
        605
      ]
    },
    {
      "content": "VMs in a virtual network will automatically receive an internal IP address from a range that you specify.",
      "pos": [
        606,
        711
      ]
    },
    {
      "content": "But in certain cases, specifying a static IP address for a particular VM makes sense.",
      "pos": [
        712,
        797
      ]
    },
    {
      "content": "For example, if your VM is going to run DNS or will be a domain controller.",
      "pos": [
        798,
        873
      ]
    },
    {
      "pos": [
        877,
        975
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> A static internal IP address stays with the VM even through a stop/deprovision state."
    },
    {
      "content": "How to verify if a specific IP address is available",
      "pos": [
        981,
        1032
      ]
    },
    {
      "pos": [
        1033,
        1189
      ],
      "content": "To verify if the IP address <bpt id=\"p1\">*</bpt>10.0.0.7<ept id=\"p1\">*</ept> is available in a vnet named <bpt id=\"p2\">*</bpt>TestVnet<ept id=\"p2\">*</ept>, run the following PowerShell command and verify the value for <bpt id=\"p3\">*</bpt>IsAvailable<ept id=\"p3\">*</ept>:"
    },
    {
      "pos": [
        1474,
        1735
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you want to test the command above in a safe environment follow the guidelines in <bpt id=\"p1\">[</bpt>Create a Virtual Network<ept id=\"p1\">](../virtual-network/virtual-networks-create-vnet.md)</ept> to create a vnet named <bpt id=\"p2\">*</bpt>TestVnet<ept id=\"p2\">*</ept> and ensure it uses the <bpt id=\"p3\">*</bpt>10.0.0.0/8<ept id=\"p3\">*</ept> address space."
    },
    {
      "content": "How to specify a static internal IP when creating a VM",
      "pos": [
        1740,
        1794
      ]
    },
    {
      "pos": [
        1795,
        2096
      ],
      "content": "The PowerShell script below creates a new cloud service named <bpt id=\"p1\">*</bpt>TestService<ept id=\"p1\">*</ept>, then retrieves an image from Azure, then creates a VM named <bpt id=\"p2\">*</bpt>TestVM<ept id=\"p2\">*</ept> in the new cloud service using the retrieved image, sets the VM to be in a subnet named <bpt id=\"p3\">*</bpt>Subnet-1<ept id=\"p3\">*</ept>, and sets <bpt id=\"p4\">*</bpt>10.0.0.7<ept id=\"p4\">*</ept> as a static internal IP for the VM:"
    },
    {
      "content": "How to retrieve static internal IP information for a VM",
      "pos": [
        2595,
        2650
      ]
    },
    {
      "pos": [
        2651,
        2812
      ],
      "content": "To view the static internal IP information for the VM created with the script above, run the following PowerShell command and observe the values for <bpt id=\"p1\">*</bpt>IpAddress<ept id=\"p1\">*</ept>:"
    },
    {
      "content": "How to remove a static internal IP from a VM",
      "pos": [
        4170,
        4214
      ]
    },
    {
      "content": "To remove the static internal IP added to the VM in the script above, run the following PowerShell command:",
      "pos": [
        4215,
        4322
      ]
    },
    {
      "content": "How to add a static internal IP to an existing VM",
      "pos": [
        4442,
        4491
      ]
    },
    {
      "content": "To add a static internal IP to the VM created using the script above, runt he following command:",
      "pos": [
        4492,
        4588
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        4725,
        4735
      ]
    },
    {
      "content": "Reserved IP",
      "pos": [
        4738,
        4749
      ]
    },
    {
      "content": "Instance-Level Public IP (ILPIP)",
      "pos": [
        4793,
        4825
      ]
    },
    {
      "content": "Reserved IP REST APIs",
      "pos": [
        4875,
        4896
      ]
    }
  ],
  "content": "<properties \n   pageTitle=\"How to set a static internal private IP\"\n   description=\"Understanding static internal IPs (DIPs) and how to manage them\"\n   services=\"virtual-network\"\n   documentationCenter=\"na\"\n   authors=\"telmosampaio\"\n   manager=\"adinah\"\n   editor=\"tysonn\" />\n<tags \n   ms.service=\"virtual-network\"\n   ms.devlang=\"na\"\n   ms.topic=\"article\"\n   ms.tgt_pltfrm=\"na\"\n   ms.workload=\"infrastructure-services\"\n   ms.date=\"08/17/2015\"\n   ms.author=\"telmos\" />\n\n# How to Set a Static Internal Private IP\nIn most cases, you won’t need to specify a static internal IP address for your virtual machine. VMs in a virtual network will automatically receive an internal IP address from a range that you specify. But in certain cases, specifying a static IP address for a particular VM makes sense. For example, if your VM is going to run DNS or will be a domain controller. \n\n>[AZURE.NOTE] A static internal IP address stays with the VM even through a stop/deprovision state. \n\n## How to verify if a specific IP address is available\nTo verify if the IP address *10.0.0.7* is available in a vnet named *TestVnet*, run the following PowerShell command and verify the value for *IsAvailable*:\n\n    Test-AzureStaticVNetIP –VNetName TestVNet –IPAddress 10.0.0.7 \n\n    IsAvailable          : True\n    AvailableAddresses   : {}\n    OperationDescription : Test-AzureStaticVNetIP\n    OperationId          : fd3097e1-5f4b-9cac-8afa-bba1e3492609\n    OperationStatus      : Succeeded\n\n>[AZURE.NOTE] If you want to test the command above in a safe environment follow the guidelines in [Create a Virtual Network](../virtual-network/virtual-networks-create-vnet.md) to create a vnet named *TestVnet* and ensure it uses the *10.0.0.0/8* address space.\n\n## How to specify a static internal IP when creating a VM\nThe PowerShell script below creates a new cloud service named *TestService*, then retrieves an image from Azure, then creates a VM named *TestVM* in the new cloud service using the retrieved image, sets the VM to be in a subnet named *Subnet-1*, and sets *10.0.0.7* as a static internal IP for the VM:\n\n    New-AzureService -ServiceName TestService -Location \"Central US\"\n    $image = Get-AzureVMImage|?{$_.ImageName -like \"*RightImage-Windows-2012R2-x64*\"}\n    New-AzureVMConfig -Name TestVM -InstanceSize Small -ImageName $image.ImageName `\n    | Add-AzureProvisioningConfig -Windows -AdminUsername adminuser -Password MyP@ssw0rd!! `\n    | Set-AzureSubnet –SubnetNames Subnet-1 `\n    | Set-AzureStaticVNetIP -IPAddress 10.0.0.7 `\n    | New-AzureVM -ServiceName \"TestService\" –VNetName TestVnet\n\n## How to retrieve static internal IP information for a VM\nTo view the static internal IP information for the VM created with the script above, run the following PowerShell command and observe the values for *IpAddress*:\n\n    Get-AzureVM -Name TestVM -ServiceName TestService\n\n    DeploymentName              : TestService\n    Name                        : TestVM\n    Label                       : \n    VM                          : Microsoft.WindowsAzure.Commands.ServiceManagement.Model.PersistentVM\n    InstanceStatus              : Provisioning\n    IpAddress                   : 10.0.0.7\n    InstanceStateDetails        : Windows is preparing your computer for first use...\n    PowerState                  : Started\n    InstanceErrorCode           : \n    InstanceFaultDomain         : 0\n    InstanceName                : TestVM\n    InstanceUpgradeDomain       : 0\n    InstanceSize                : Small\n    HostName                    : rsR2-797\n    AvailabilitySetName         : \n    DNSName                     : http://testservice000.cloudapp.net/\n    Status                      : Provisioning\n    GuestAgentStatus            : Microsoft.WindowsAzure.Commands.ServiceManagement.Model.GuestAgentStatus\n    ResourceExtensionStatusList : {Microsoft.Compute.BGInfo}\n    PublicIPAddress             : \n    PublicIPName                : \n    NetworkInterfaces           : {}\n    ServiceName                 : TestService\n    OperationDescription        : Get-AzureVM\n    OperationId                 : 34c1560a62f0901ab75cde4fed8e8bd1\n    OperationStatus             : OK\n\n## How to remove a static internal IP from a VM\nTo remove the static internal IP added to the VM in the script above, run the following PowerShell command:\n    \n    Get-AzureVM -ServiceName TestService -Name TestVM `\n    | Remove-AzureStaticVNetIP `\n    | Update-AzureVM\n\n## How to add a static internal IP to an existing VM\nTo add a static internal IP to the VM created using the script above, runt he following command:\n\n    Get-AzureVM -ServiceName TestService000 -Name TestVM `\n    | Set-AzureStaticVNetIP -IPAddress 10.10.0.7 `\n    | Update-AzureVM\n\n## Next steps\n\n[Reserved IP](../virtual-networks-reserved-public-ip)\n\n[Instance-Level Public IP (ILPIP)](../virtual-networks-instance-level-public-ip)\n\n[Reserved IP REST APIs](https://msdn.microsoft.com/library/azure/dn722420.aspx)\n \n"
}