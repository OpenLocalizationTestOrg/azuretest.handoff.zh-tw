{
  "nodes": [
    {
      "content": "How to use the service management API (Python) - feature guide",
      "pos": [
        27,
        89
      ]
    },
    {
      "content": "Learn how to programmatically perform common service management tasks from Python.",
      "pos": [
        108,
        190
      ]
    },
    {
      "content": "How to use Service Management from Python",
      "pos": [
        500,
        541
      ]
    },
    {
      "content": "This guide will show you how to programmatically perform common service management tasks from Python.",
      "pos": [
        543,
        644
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>ServiceManagementService<ept id=\"p1\">**</ept> class in the <bpt id=\"p2\">[</bpt>Azure SDK for Python<ept id=\"p2\">][download-SDK-Python]</ept> supports programmatic access to much of the service management-related functionality that is available in the <bpt id=\"p3\">[</bpt>management portal<ept id=\"p3\">][management-portal]</ept> (such as <bpt id=\"p4\">**</bpt>creating, updating, and deleting cloud services, deployments, data management services and virtual machines<ept id=\"p4\">**</ept>).",
      "pos": [
        645,
        1006
      ]
    },
    {
      "content": "This functionality can be useful in building applications that need programmatic access to service management.",
      "pos": [
        1007,
        1117
      ]
    },
    {
      "pos": [
        1122,
        1170
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"WhatIs\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>What is Service Management"
    },
    {
      "content": "The Service Management API provides programmatic access to much of the service management functionality available through the <bpt id=\"p1\">[</bpt>management portal<ept id=\"p1\">][management-portal]</ept>.",
      "pos": [
        1171,
        1336
      ]
    },
    {
      "content": "The Azure SDK for Python allows you to manage your cloud services and storage accounts.",
      "pos": [
        1337,
        1424
      ]
    },
    {
      "pos": [
        1426,
        1552
      ],
      "content": "To use the Service Management API, you will need to <bpt id=\"p1\">[</bpt>create an Azure account<ept id=\"p1\">](http://azure.microsoft.com/pricing/free-trial/)</ept>."
    },
    {
      "pos": [
        1557,
        1589
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"Concepts\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>Concepts"
    },
    {
      "content": "The Azure SDK for Python wraps the <bpt id=\"p1\">[</bpt>Azure Service Management API<ept id=\"p1\">][svc-mgmt-rest-api]</ept>, which is a REST API.",
      "pos": [
        1590,
        1696
      ]
    },
    {
      "content": "All API operations are performed over SSL and mutually authenticated using X.509 v3 certificates.",
      "pos": [
        1697,
        1794
      ]
    },
    {
      "content": "The management service may be accessed from within a service running in Azure, or directly over the Internet from any application that can send an HTTPS request and receive an HTTPS response.",
      "pos": [
        1795,
        1986
      ]
    },
    {
      "pos": [
        1991,
        2051
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"Connect\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: Connect to service management"
    },
    {
      "content": "To connect to the Service Management endpoint, you need your Azure subscription ID and a valid management certificate.",
      "pos": [
        2052,
        2170
      ]
    },
    {
      "content": "You can obtain your subscription ID through the <bpt id=\"p1\">[</bpt>management portal<ept id=\"p1\">][management-portal]</ept>.",
      "pos": [
        2171,
        2258
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Since Azure SDK for Python v0.8.0, it is now possible to use certificates created with OpenSSL when running on Windows.",
      "pos": [
        2262,
        2394
      ]
    },
    {
      "content": "This requires Python 2.7.4 or later.",
      "pos": [
        2396,
        2432
      ]
    },
    {
      "content": "We recommend users to use OpenSSL instead of .pfx, since support for .pfx certificates will likely be removed in the future.",
      "pos": [
        2433,
        2557
      ]
    },
    {
      "content": "Management certificates on Windows/Mac/Linux (OpenSSL)",
      "pos": [
        2563,
        2617
      ]
    },
    {
      "content": "You can use <bpt id=\"p1\">[</bpt>OpenSSL<ept id=\"p1\">](http://www.openssl.org/)</ept> to create your management certificate.",
      "pos": [
        2618,
        2703
      ]
    },
    {
      "content": "You actually need to create two certificates, one for the server (a <ph id=\"ph1\">`.cer`</ph> file) and one for the client (a <ph id=\"ph2\">`.pem`</ph> file).",
      "pos": [
        2705,
        2825
      ]
    },
    {
      "content": "To create the <ph id=\"ph1\">`.pem`</ph> file, execute this:",
      "pos": [
        2826,
        2866
      ]
    },
    {
      "pos": [
        2962,
        3009
      ],
      "content": "To create the <ph id=\"ph1\">`.cer`</ph> certificate, execute this:"
    },
    {
      "content": "For more information about Azure certificates, see <bpt id=\"p1\">[</bpt>Managing Certificates in Azure<ept id=\"p1\">](http://msdn.microsoft.com/en-us/library/windowsazure/gg981929.aspx)</ept>.",
      "pos": [
        3087,
        3239
      ]
    },
    {
      "content": "For a complete description of OpenSSL parameters, see the documentation at <bpt id=\"p1\">[</bpt>http://www.openssl.org/docs/apps/openssl.html<ept id=\"p1\">](http://www.openssl.org/docs/apps/openssl.html)</ept>.",
      "pos": [
        3240,
        3410
      ]
    },
    {
      "pos": [
        3412,
        3656
      ],
      "content": "After you have created these files, you will need to upload the <ph id=\"ph1\">`.cer`</ph> file to Azure via the \"Upload\" action of the \"Settings\" tab of the <bpt id=\"p1\">[</bpt>management portal<ept id=\"p1\">][management-portal]</ept>, and you will need to make note of where you saved the <ph id=\"ph2\">`.pem`</ph> file."
    },
    {
      "pos": [
        3658,
        3910
      ],
      "content": "After you have obtained your subscription ID, created a certificate, and uploaded the <ph id=\"ph1\">`.cer`</ph> file to Azure, you can connect to the Azure management endpoint by passing the subscription id and the path to the <ph id=\"ph2\">`.pem`</ph> file to <bpt id=\"p1\">**</bpt>ServiceManagementService<ept id=\"p1\">**</ept>:"
    },
    {
      "content": "In the example above, <ph id=\"ph1\">`sms`</ph> is a <bpt id=\"p1\">**</bpt>ServiceManagementService<ept id=\"p1\">**</ept> object.",
      "pos": [
        4150,
        4219
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>ServiceManagementService<ept id=\"p1\">**</ept> class is the primary class used to manage Azure services.",
      "pos": [
        4220,
        4310
      ]
    },
    {
      "content": "Management certificates on Windows (MakeCert)",
      "pos": [
        4316,
        4361
      ]
    },
    {
      "content": "You can create a self-signed management certificate on your machine using <ph id=\"ph1\">`makecert.exe`</ph>.",
      "pos": [
        4363,
        4452
      ]
    },
    {
      "content": "Open a <bpt id=\"p1\">**</bpt>Visual Studio command prompt<ept id=\"p1\">**</ept> as an <bpt id=\"p2\">**</bpt>administrator<ept id=\"p2\">**</ept> and use the following command, replacing <bpt id=\"p3\">*</bpt>AzureCertificate<ept id=\"p3\">*</ept> with the certificate name you would like to use.",
      "pos": [
        4454,
        4626
      ]
    },
    {
      "content": "The command will create the <ph id=\"ph1\">`.cer`</ph> file, and install it in the <bpt id=\"p1\">**</bpt>Personal<ept id=\"p1\">**</ept> certificate store.",
      "pos": [
        4736,
        4830
      ]
    },
    {
      "content": "For more details, see <bpt id=\"p1\">[</bpt>Create and Upload a Management Certificate for Azure<ept id=\"p1\">](http://msdn.microsoft.com/en-us/library/windowsazure/gg551722.aspx)</ept>.",
      "pos": [
        4831,
        4976
      ]
    },
    {
      "pos": [
        4978,
        5159
      ],
      "content": "After you have created the certificate, you will need to upload the <ph id=\"ph1\">`.cer`</ph> file to Azure via the \"Upload\" action of the \"Settings\" tab of the <bpt id=\"p1\">[</bpt>management portal<ept id=\"p1\">][management-portal]</ept>."
    },
    {
      "pos": [
        5161,
        5526
      ],
      "content": "After you have obtained your subscription ID, created a certificate, and uploaded the <ph id=\"ph1\">`.cer`</ph> file to Azure, you can connect to the Azure management endpoint by passing the subscription id and the location of the certificate in your <bpt id=\"p1\">**</bpt>Personal<ept id=\"p1\">**</ept> certificate store to <bpt id=\"p2\">**</bpt>ServiceManagementService<ept id=\"p2\">**</ept> (again, replace <bpt id=\"p3\">*</bpt>AzureCertificate<ept id=\"p3\">*</ept> with the name of your certificate):"
    },
    {
      "content": "In the example above, <ph id=\"ph1\">`sms`</ph> is a <bpt id=\"p1\">**</bpt>ServiceManagementService<ept id=\"p1\">**</ept> object.",
      "pos": [
        5774,
        5843
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>ServiceManagementService<ept id=\"p1\">**</ept> class is the primary class used to manage Azure services.",
      "pos": [
        5844,
        5934
      ]
    },
    {
      "pos": [
        5939,
        6009
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"ListAvailableLocations\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: List available locations"
    },
    {
      "pos": [
        6011,
        6109
      ],
      "content": "To list the locations that are available for hosting services, use the <bpt id=\"p1\">**</bpt>list\\_locations<ept id=\"p1\">**</ept> method:"
    },
    {
      "content": "When you create a cloud service or storage service you will need to provide a valid location.",
      "pos": [
        6341,
        6434
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>list\\_locations<ept id=\"p1\">**</ept> method will always return an up-to-date list of the currently available locations.",
      "pos": [
        6435,
        6541
      ]
    },
    {
      "content": "As of this writing, the available locations are:",
      "pos": [
        6542,
        6590
      ]
    },
    {
      "content": "West Europe",
      "pos": [
        6594,
        6605
      ]
    },
    {
      "content": "North Europe",
      "pos": [
        6608,
        6620
      ]
    },
    {
      "content": "Southeast Asia",
      "pos": [
        6623,
        6637
      ]
    },
    {
      "content": "East Asia",
      "pos": [
        6640,
        6649
      ]
    },
    {
      "content": "Central US",
      "pos": [
        6652,
        6662
      ]
    },
    {
      "content": "North Central US",
      "pos": [
        6665,
        6681
      ]
    },
    {
      "content": "South Central US",
      "pos": [
        6684,
        6700
      ]
    },
    {
      "content": "West US",
      "pos": [
        6703,
        6710
      ]
    },
    {
      "content": "East US",
      "pos": [
        6713,
        6720
      ]
    },
    {
      "content": "Japan East",
      "pos": [
        6723,
        6733
      ]
    },
    {
      "content": "Japan West",
      "pos": [
        6736,
        6746
      ]
    },
    {
      "content": "Brazil South",
      "pos": [
        6749,
        6761
      ]
    },
    {
      "content": "Australia East",
      "pos": [
        6764,
        6778
      ]
    },
    {
      "content": "Australia Southeast",
      "pos": [
        6781,
        6800
      ]
    },
    {
      "pos": [
        6805,
        6869
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"CreateCloudService\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: Create a cloud service"
    },
    {
      "content": "When you create an application and run it in Azure, the code and configuration together are called an Azure <bpt id=\"p1\">[</bpt><ept id=\"p1\">cloud service]</ept> (known as a <bpt id=\"p2\">*</bpt>hosted service<ept id=\"p2\">*</ept> in earlier Azure releases).",
      "pos": [
        6871,
        7051
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>create\\_hosted\\_service<ept id=\"p1\">**</ept> method allows you to create a new hosted service by providing a hosted service name (which must be unique in Azure), a label (automatically encoded to base64), a description and a location.",
      "pos": [
        7052,
        7273
      ]
    },
    {
      "pos": [
        7589,
        7691
      ],
      "content": "You can list all the hosted services for your subscription with the <bpt id=\"p1\">**</bpt>list\\_hosted\\_services<ept id=\"p1\">**</ept> method:"
    },
    {
      "pos": [
        7984,
        8150
      ],
      "content": "If you want to get information about a particular hosted service, you can do so by passing the hosted service name to the <bpt id=\"p1\">**</bpt>get\\_hosted\\_service\\_properties<ept id=\"p1\">**</ept> method:"
    },
    {
      "pos": [
        8413,
        8532
      ],
      "content": "After you have created a cloud service, you can deploy your code to the service with the <bpt id=\"p1\">**</bpt>create\\_deployment<ept id=\"p1\">**</ept> method."
    },
    {
      "pos": [
        8537,
        8601
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"DeleteCloudService\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: Delete a cloud service"
    },
    {
      "pos": [
        8603,
        8704
      ],
      "content": "You can delete a cloud service by passing the service name to the <bpt id=\"p1\">**</bpt>delete\\_hosted\\_service<ept id=\"p1\">**</ept> method:"
    },
    {
      "content": "Note that before you can delete a service, all deployments for the the service must first be deleted.",
      "pos": [
        8756,
        8857
      ]
    },
    {
      "content": "(See <bpt id=\"p1\">[</bpt>How to: Delete a deployment<ept id=\"p1\">](#DeleteDeployment)</ept> for details.)",
      "pos": [
        8858,
        8925
      ]
    },
    {
      "pos": [
        8930,
        8989
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"DeleteDeployment\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: Delete a deployment"
    },
    {
      "content": "To delete a deployment, use the <bpt id=\"p1\">**</bpt>delete\\_deployment<ept id=\"p1\">**</ept> method.",
      "pos": [
        8991,
        9053
      ]
    },
    {
      "content": "The following example shows how to delete a deployment named <ph id=\"ph1\">`v1`</ph>.",
      "pos": [
        9054,
        9120
      ]
    },
    {
      "pos": [
        9315,
        9383
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"CreateStorageService\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: Create a storage service"
    },
    {
      "content": "A <bpt id=\"p1\">[</bpt><ept id=\"p1\">storage service]</ept> gives you access to Azure <bpt id=\"p2\">[</bpt>Blobs<ept id=\"p2\">][azure-blobs]</ept>, <bpt id=\"p3\">[</bpt>Tables<ept id=\"p3\">][azure-tables]</ept>, and <bpt id=\"p4\">[</bpt>Queues<ept id=\"p4\">][azure-queues]</ept>.",
      "pos": [
        9385,
        9504
      ]
    },
    {
      "content": "To create a storage service, you need a name for the service (between 3 and 24 lowercase characters and unique within Azure), a description, a label (up to 100 characters, automatically encoded to base64), and a location.",
      "pos": [
        9505,
        9726
      ]
    },
    {
      "content": "The following example shows how to create a storage service by specifying a location.",
      "pos": [
        9727,
        9812
      ]
    },
    {
      "pos": [
        10289,
        10498
      ],
      "content": "Note in the example above that the status of the <bpt id=\"p1\">**</bpt>create\\_storage\\_account<ept id=\"p1\">**</ept> operation can be retrieved by passing the result returned by <bpt id=\"p2\">**</bpt>create\\_storage\\_account<ept id=\"p2\">**</ept> to the <bpt id=\"p3\">**</bpt>get\\_operation\\_status<ept id=\"p3\">**</ept> method."
    },
    {
      "pos": [
        10502,
        10602
      ],
      "content": "You can list your storage accounts and their properties with the <bpt id=\"p1\">**</bpt>list\\_storage\\_accounts<ept id=\"p1\">**</ept> method:"
    },
    {
      "pos": [
        10961,
        11029
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"DeleteStorageService\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: Delete a storage service"
    },
    {
      "content": "You can delete a storage service by passing the storage service name to the <bpt id=\"p1\">**</bpt>delete\\_storage\\_account<ept id=\"p1\">**</ept> method.",
      "pos": [
        11031,
        11143
      ]
    },
    {
      "content": "Deleting a storage service will delete all data stored in the service (blobs, tables and queues).",
      "pos": [
        11144,
        11241
      ]
    },
    {
      "pos": [
        11436,
        11512
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"ListOperatingSystems\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: List available operating systems"
    },
    {
      "pos": [
        11514,
        11629
      ],
      "content": "To list the operating systems that are available for hosting services, use the <bpt id=\"p1\">**</bpt>list\\_operating\\_systems<ept id=\"p1\">**</ept> method:"
    },
    {
      "pos": [
        11958,
        12080
      ],
      "content": "Alternatively, you can use the <bpt id=\"p1\">**</bpt>list\\_operating\\_system\\_families<ept id=\"p1\">**</ept> method, which groups the operating systems by family:"
    },
    {
      "pos": [
        12384,
        12453
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"CreateVMImage\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: Create an operating system image"
    },
    {
      "pos": [
        12455,
        12547
      ],
      "content": "To add an operating system image to the image repository, use the <bpt id=\"p1\">**</bpt>add\\_os\\_image<ept id=\"p1\">**</ept> method:"
    },
    {
      "content": "To list the operating system images that are available, use the <bpt id=\"p1\">**</bpt>list\\_os\\_images<ept id=\"p1\">**</ept> method.",
      "pos": [
        13015,
        13107
      ]
    },
    {
      "content": "This includes all platform images and user images:",
      "pos": [
        13108,
        13158
      ]
    },
    {
      "pos": [
        13541,
        13610
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"DeleteVMImage\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: Delete an operating system image"
    },
    {
      "pos": [
        13612,
        13673
      ],
      "content": "To delete a user image, use the <bpt id=\"p1\">**</bpt>delete\\_os\\_image<ept id=\"p1\">**</ept> method:"
    },
    {
      "pos": [
        13988,
        14044
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"CreateVM\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: Create a virtual machine"
    },
    {
      "content": "To create a virtual machine, you first need to create a <bpt id=\"p1\">[</bpt>cloud service<ept id=\"p1\">](#CreateCloudService)</ept>.",
      "pos": [
        14046,
        14139
      ]
    },
    {
      "content": "Then create the virtual machine deployment using the <bpt id=\"p1\">**</bpt>create\\_virtual\\_machine\\_deployment<ept id=\"p1\">**</ept> method:",
      "pos": [
        14141,
        14242
      ]
    },
    {
      "pos": [
        15336,
        15392
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"DeleteVM\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>How to: Delete a virtual machine"
    },
    {
      "pos": [
        15394,
        15495
      ],
      "content": "To delete a virtual machine, you first delete the deployment using the <bpt id=\"p1\">**</bpt>delete\\_deployment<ept id=\"p1\">**</ept> method:"
    },
    {
      "pos": [
        15715,
        15798
      ],
      "content": "The cloud service can then be deleted using the <bpt id=\"p1\">**</bpt>delete\\_hosted\\_service<ept id=\"p1\">**</ept> method:"
    },
    {
      "content": "How To: Create a Virtual Machine from a Captured Virtual Machine Image",
      "pos": [
        15854,
        15924
      ]
    },
    {
      "pos": [
        15926,
        15998
      ],
      "content": "To capture a VM image, you first call the <bpt id=\"p1\">**</bpt>capture\\_vm\\_image<ept id=\"p1\">**</ept> method:"
    },
    {
      "pos": [
        16639,
        16791
      ],
      "content": "Next, to make sure that you have successfully captured the image, use the <bpt id=\"p1\">**</bpt>list\\_vm\\_images<ept id=\"p1\">**</ept> api and make sure your image is displayed in the results:"
    },
    {
      "pos": [
        16828,
        17006
      ],
      "content": "To finally create the virtual machine using the captured image, use the <bpt id=\"p1\">**</bpt>create\\_virtual\\_machine\\_deployment<ept id=\"p1\">**</ept> method as before, but this time pass in the vm_image_name instead"
    },
    {
      "pos": [
        17617,
        17766
      ],
      "content": "To learn more about how to capture a Linux Virtual Machine, see <bpt id=\"p1\">[</bpt>How to Capture a Linux Virtual Machine.<ept id=\"p1\">](../virtual-machines-linux-capture-image.md)</ept>"
    },
    {
      "pos": [
        17768,
        17930
      ],
      "content": "To learn more about how to capture a Windows Virtual Machine, see <bpt id=\"p1\">[</bpt>How to Capture a Windows Virtual Machine.<ept id=\"p1\">](../virtual-machines-capture-image-windows-server.md)</ept>"
    },
    {
      "pos": [
        17935,
        17972
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"What's Next\"&gt;</ph> <ph id=\"ph2\">&lt;/a&gt;</ph>Next Steps"
    },
    {
      "pos": [
        17974,
        18255
      ],
      "content": "Now that you've learned the basics of service management, you can access the <bpt id=\"p1\">[</bpt>Complete API reference documentation for the Azure Python SDK<ept id=\"p1\">](http://azure-sdk-for-python.readthedocs.org/en/documentation/index.html)</ept> and perform complex tasks easily to manage your python application."
    },
    {
      "content": "test",
      "pos": [
        20493,
        20497
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"How to use the service management API (Python) - feature guide\"\n    description=\"Learn how to programmatically perform common service management tasks from Python.\"\n    services=\"cloud-services\"\n    documentationCenter=\"python\"\n    authors=\"huguesv\"\n    manager=\"wpickett\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"cloud-services\"\n    ms.workload=\"tbd\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"python\"\n    ms.topic=\"article\"\n    ms.date=\"03/11/2015\"\n    ms.author=\"huvalo\"/>\n\n# How to use Service Management from Python\n\nThis guide will show you how to programmatically perform common service management tasks from Python. The **ServiceManagementService** class in the [Azure SDK for Python][download-SDK-Python] supports programmatic access to much of the service management-related functionality that is available in the [management portal][management-portal] (such as **creating, updating, and deleting cloud services, deployments, data management services and virtual machines**). This functionality can be useful in building applications that need programmatic access to service management.\n\n## <a name=\"WhatIs\"> </a>What is Service Management\nThe Service Management API provides programmatic access to much of the service management functionality available through the [management portal][management-portal]. The Azure SDK for Python allows you to manage your cloud services and storage accounts.\n\nTo use the Service Management API, you will need to [create an Azure account](http://azure.microsoft.com/pricing/free-trial/).\n\n## <a name=\"Concepts\"> </a>Concepts\nThe Azure SDK for Python wraps the [Azure Service Management API][svc-mgmt-rest-api], which is a REST API. All API operations are performed over SSL and mutually authenticated using X.509 v3 certificates. The management service may be accessed from within a service running in Azure, or directly over the Internet from any application that can send an HTTPS request and receive an HTTPS response.\n\n## <a name=\"Connect\"> </a>How to: Connect to service management\nTo connect to the Service Management endpoint, you need your Azure subscription ID and a valid management certificate. You can obtain your subscription ID through the [management portal][management-portal].\n\n> [AZURE.NOTE] Since Azure SDK for Python v0.8.0, it is now possible to use certificates created with OpenSSL when running on Windows.  This requires Python 2.7.4 or later. We recommend users to use OpenSSL instead of .pfx, since support for .pfx certificates will likely be removed in the future.\n\n### Management certificates on Windows/Mac/Linux (OpenSSL)\nYou can use [OpenSSL](http://www.openssl.org/) to create your management certificate.  You actually need to create two certificates, one for the server (a `.cer` file) and one for the client (a `.pem` file). To create the `.pem` file, execute this:\n\n    `openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem`\n\nTo create the `.cer` certificate, execute this:\n\n    `openssl x509 -inform pem -in mycert.pem -outform der -out mycert.cer`\n\nFor more information about Azure certificates, see [Managing Certificates in Azure](http://msdn.microsoft.com/en-us/library/windowsazure/gg981929.aspx). For a complete description of OpenSSL parameters, see the documentation at [http://www.openssl.org/docs/apps/openssl.html](http://www.openssl.org/docs/apps/openssl.html).\n\nAfter you have created these files, you will need to upload the `.cer` file to Azure via the \"Upload\" action of the \"Settings\" tab of the [management portal][management-portal], and you will need to make note of where you saved the `.pem` file.\n\nAfter you have obtained your subscription ID, created a certificate, and uploaded the `.cer` file to Azure, you can connect to the Azure management endpoint by passing the subscription id and the path to the `.pem` file to **ServiceManagementService**:\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    subscription_id = '<your_subscription_id>'\n    certificate_path = '<path_to_.pem_certificate>'\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\nIn the example above, `sms` is a **ServiceManagementService** object. The **ServiceManagementService** class is the primary class used to manage Azure services.\n\n### Management certificates on Windows (MakeCert)\n\nYou can create a self-signed management certificate on your machine using `makecert.exe`.  Open a **Visual Studio command prompt** as an **administrator** and use the following command, replacing *AzureCertificate* with the certificate name you would like to use.\n\n    makecert -sky exchange -r -n \"CN=AzureCertificate\" -pe -a sha1 -len 2048 -ss My \"AzureCertificate.cer\"\n\nThe command will create the `.cer` file, and install it in the **Personal** certificate store. For more details, see [Create and Upload a Management Certificate for Azure](http://msdn.microsoft.com/en-us/library/windowsazure/gg551722.aspx).\n\nAfter you have created the certificate, you will need to upload the `.cer` file to Azure via the \"Upload\" action of the \"Settings\" tab of the [management portal][management-portal].\n\nAfter you have obtained your subscription ID, created a certificate, and uploaded the `.cer` file to Azure, you can connect to the Azure management endpoint by passing the subscription id and the location of the certificate in your **Personal** certificate store to **ServiceManagementService** (again, replace *AzureCertificate* with the name of your certificate):\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    subscription_id = '<your_subscription_id>'\n    certificate_path = 'CURRENT_USER\\\\my\\\\AzureCertificate'\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\nIn the example above, `sms` is a **ServiceManagementService** object. The **ServiceManagementService** class is the primary class used to manage Azure services.\n\n## <a name=\"ListAvailableLocations\"> </a>How to: List available locations\n\nTo list the locations that are available for hosting services, use the **list\\_locations** method:\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    result = sms.list_locations()\n    for location in result:\n        print(location.name)\n\nWhen you create a cloud service or storage service you will need to provide a valid location. The **list\\_locations** method will always return an up-to-date list of the currently available locations. As of this writing, the available locations are:\n\n- West Europe\n- North Europe\n- Southeast Asia\n- East Asia\n- Central US\n- North Central US\n- South Central US\n- West US\n- East US\n- Japan East\n- Japan West\n- Brazil South\n- Australia East\n- Australia Southeast\n\n## <a name=\"CreateCloudService\"> </a>How to: Create a cloud service\n\nWhen you create an application and run it in Azure, the code and configuration together are called an Azure [cloud service] (known as a *hosted service* in earlier Azure releases). The **create\\_hosted\\_service** method allows you to create a new hosted service by providing a hosted service name (which must be unique in Azure), a label (automatically encoded to base64), a description and a location.\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    name = 'myhostedservice'\n    label = 'myhostedservice'\n    desc = 'my hosted service'\n    location = 'West US'\n\n    sms.create_hosted_service(name, label, desc, location)\n\nYou can list all the hosted services for your subscription with the **list\\_hosted\\_services** method:\n\n    result = sms.list_hosted_services()\n\n    for hosted_service in result:\n        print('Service name: ' + hosted_service.service_name)\n        print('Management URL: ' + hosted_service.url)\n        print('Location: ' + hosted_service.hosted_service_properties.location)\n        print('')\n\nIf you want to get information about a particular hosted service, you can do so by passing the hosted service name to the **get\\_hosted\\_service\\_properties** method:\n\n    hosted_service = sms.get_hosted_service_properties('myhostedservice')\n\n    print('Service name: ' + hosted_service.service_name)\n    print('Management URL: ' + hosted_service.url)\n    print('Location: ' + hosted_service.hosted_service_properties.location)\n\nAfter you have created a cloud service, you can deploy your code to the service with the **create\\_deployment** method.\n\n## <a name=\"DeleteCloudService\"> </a>How to: Delete a cloud service\n\nYou can delete a cloud service by passing the service name to the **delete\\_hosted\\_service** method:\n\n    sms.delete_hosted_service('myhostedservice')\n\nNote that before you can delete a service, all deployments for the the service must first be deleted. (See [How to: Delete a deployment](#DeleteDeployment) for details.)\n\n## <a name=\"DeleteDeployment\"> </a>How to: Delete a deployment\n\nTo delete a deployment, use the **delete\\_deployment** method. The following example shows how to delete a deployment named `v1`.\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    sms.delete_deployment('myhostedservice', 'v1')\n\n## <a name=\"CreateStorageService\"> </a>How to: Create a storage service\n\nA [storage service] gives you access to Azure [Blobs][azure-blobs], [Tables][azure-tables], and [Queues][azure-queues]. To create a storage service, you need a name for the service (between 3 and 24 lowercase characters and unique within Azure), a description, a label (up to 100 characters, automatically encoded to base64), and a location. The following example shows how to create a storage service by specifying a location.\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    name = 'mystorageaccount'\n    label = 'mystorageaccount'\n    location = 'West US'\n    desc = 'My storage account description.'\n\n    result = sms.create_storage_account(name, desc, label, location=location)\n\n    operation_result = sms.get_operation_status(result.request_id)\n    print('Operation status: ' + operation_result.status)\n\nNote in the example above that the status of the **create\\_storage\\_account** operation can be retrieved by passing the result returned by **create\\_storage\\_account** to the **get\\_operation\\_status** method.  \n\nYou can list your storage accounts and their properties with the **list\\_storage\\_accounts** method:\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    result = sms.list_storage_accounts()\n    for account in result:\n        print('Service name: ' + account.service_name)\n        print('Location: ' + account.storage_service_properties.location)\n        print('')\n\n## <a name=\"DeleteStorageService\"> </a>How to: Delete a storage service\n\nYou can delete a storage service by passing the storage service name to the **delete\\_storage\\_account** method. Deleting a storage service will delete all data stored in the service (blobs, tables and queues).\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    sms.delete_storage_account('mystorageaccount')\n\n## <a name=\"ListOperatingSystems\"> </a>How to: List available operating systems\n\nTo list the operating systems that are available for hosting services, use the **list\\_operating\\_systems** method:\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    result = sms.list_operating_systems()\n\n    for os in result:\n        print('OS: ' + os.label)\n        print('Family: ' + os.family_label)\n        print('Active: ' + str(os.is_active))\n\nAlternatively, you can use the **list\\_operating\\_system\\_families** method, which groups the operating systems by family:\n\n    result = sms.list_operating_system_families()\n\n    for family in result:\n        print('Family: ' + family.label)\n        for os in family.operating_systems:\n            if os.is_active:\n                print('OS: ' + os.label)\n                print('Version: ' + os.version)\n        print('')\n\n## <a name=\"CreateVMImage\"> </a>How to: Create an operating system image\n\nTo add an operating system image to the image repository, use the **add\\_os\\_image** method:\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    name = 'mycentos'\n    label = 'mycentos'\n    os = 'Linux' # Linux or Windows\n    media_link = 'url_to_storage_blob_for_source_image_vhd'\n\n    result = sms.add_os_image(label, media_link, name, os)\n\n    operation_result = sms.get_operation_status(result.request_id)\n    print('Operation status: ' + operation_result.status)\n\nTo list the operating system images that are available, use the **list\\_os\\_images** method. This includes all platform images and user images:\n\n    result = sms.list_os_images()\n\n    for image in result:\n        print('Name: ' + image.name)\n        print('Label: ' + image.label)\n        print('OS: ' + image.os)\n        print('Category: ' + image.category)\n        print('Description: ' + image.description)\n        print('Location: ' + image.location)\n        print('Media link: ' + image.media_link)\n        print('')\n\n## <a name=\"DeleteVMImage\"> </a>How to: Delete an operating system image\n\nTo delete a user image, use the **delete\\_os\\_image** method:\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    result = sms.delete_os_image('mycentos')\n\n    operation_result = sms.get_operation_status(result.request_id)\n    print('Operation status: ' + operation_result.status)\n\n## <a name=\"CreateVM\"> </a>How to: Create a virtual machine\n\nTo create a virtual machine, you first need to create a [cloud service](#CreateCloudService).  Then create the virtual machine deployment using the **create\\_virtual\\_machine\\_deployment** method:\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    name = 'myvm'\n    location = 'West US'\n\n    #Set the location\n    sms.create_hosted_service(service_name=name,\n        label=name,\n        location=location)\n\n    # Name of an os image as returned by list_os_images\n    image_name = 'OpenLogic__OpenLogic-CentOS-62-20120531-en-us-30GB.vhd'\n\n    # Destination storage account container/blob where the VM disk\n    # will be created\n    media_link = 'url_to_target_storage_blob_for_vm_hd'\n\n    # Linux VM configuration, you can use WindowsConfigurationSet\n    # for a Windows VM instead\n    linux_config = LinuxConfigurationSet('myhostname', 'myuser', 'mypassword', True)\n\n    os_hd = OSVirtualHardDisk(image_name, media_link)\n\n    sms.create_virtual_machine_deployment(service_name=name,\n        deployment_name=name,\n        deployment_slot='production',\n        label=name,\n        role_name=name,\n        system_config=linux_config,\n        os_virtual_hard_disk=os_hd,\n        role_size='Small')\n\n## <a name=\"DeleteVM\"> </a>How to: Delete a virtual machine\n\nTo delete a virtual machine, you first delete the deployment using the **delete\\_deployment** method:\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    sms.delete_deployment(service_name='myvm',\n        deployment_name='myvm')\n\nThe cloud service can then be deleted using the **delete\\_hosted\\_service** method:\n\n    sms.delete_hosted_service(service_name='myvm')\n\n##How To: Create a Virtual Machine from a Captured Virtual Machine Image\n\nTo capture a VM image, you first call the **capture\\_vm\\_image** method:\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    # replace the below three parameters with actual values\n    hosted_service_name = 'hs1'\n    deployment_name = 'dep1'\n    vm_name = 'vm1'\n\n    image_name = vm_name + 'image'\n    image = CaptureRoleAsVMImage    ('Specialized',\n        image_name,\n        image_name + 'label',\n        image_name + 'description',\n        'english',\n        'mygroup')\n\n    result = sms.capture_vm_image(\n            hosted_service_name,\n            deployment_name,\n            vm_name,\n            image\n        )\n\nNext, to make sure that you have successfully captured the image, use the **list\\_vm\\_images** api and make sure your image is displayed in the results:\n\n    images = sms.list_vm_images()\n\nTo finally create the virtual machine using the captured image, use the **create\\_virtual\\_machine\\_deployment** method as before, but this time pass in the vm_image_name instead\n\n    from azure import *\n    from azure.servicemanagement import *\n\n    sms = ServiceManagementService(subscription_id, certificate_path)\n\n    name = 'myvm'\n    location = 'West US'\n\n    #Set the location\n    sms.create_hosted_service(service_name=name,\n        label=name,\n        location=location)\n\n    sms.create_virtual_machine_deployment(service_name=name,\n        deployment_name=name,\n        deployment_slot='production',\n        label=name,\n        role_name=name,\n        system_config=linux_config,\n        os_virtual_hard_disk=None,\n        role_size='Small',\n        vm_image_name = image_name)\n\nTo learn more about how to capture a Linux Virtual Machine, see [How to Capture a Linux Virtual Machine.](../virtual-machines-linux-capture-image.md)\n\nTo learn more about how to capture a Windows Virtual Machine, see [How to Capture a Windows Virtual Machine.](../virtual-machines-capture-image-windows-server.md)\n\n## <a name=\"What's Next\"> </a>Next Steps\n\nNow that you've learned the basics of service management, you can access the [Complete API reference documentation for the Azure Python SDK](http://azure-sdk-for-python.readthedocs.org/en/documentation/index.html) and perform complex tasks easily to manage your python application.\n\n\n\n[What is Service Management]: #WhatIs\n[Concepts]: #Concepts\n[How to: Connect to service management]: #Connect\n[How to: List available locations]: #ListAvailableLocations\n[How to: Create a cloud service]: #CreateCloudService\n[How to: Delete a cloud service]: #DeleteCloudService\n[How to: Create a deployment]: #CreateDeployment\n[How to: Update a deployment]: #UpdateDeployment\n[How to: Move deployments between staging and production]: #MoveDeployments\n[How to: Delete a deployment]: #DeleteDeployment\n[How to: Create a storage service]: #CreateStorageService\n[How to: Delete a storage service]: #DeleteStorageService\n[How to: List available operating systems]: #ListOperatingSystems\n[How to: Create an operating system image]: #CreateVMImage\n[How to: Delete an operating system image]: #DeleteVMImage\n[How to: Create a virtual machine]: #CreateVM\n[How to: Delete a virtual machine]: #DeleteVM\n[Next Steps]: #NextSteps\n[management-portal]: https://manage.windowsazure.com/\n[svc-mgmt-rest-api]: http://msdn.microsoft.com/library/windowsazure/ee460799.aspx\n\n\n[download-SDK-Python]: https://www.windowsazure.com/develop/python/common-tasks/install-python/\n[cloud service]:http://windowsazure.com/documentation/articles/cloud-services-what-is\n[service package]: http://msdn.microsoft.com/library/windowsazure/jj155995.aspx\n[Azure PowerShell cmdlets]: https://www.windowsazure.com/develop/php/how-to-guides/powershell-cmdlets/\n[cspack commandline tool]: http://msdn.microsoft.com/library/windowsazure/gg432988.aspx\n[Deploying an Azure Service]: http://msdn.microsoft.com/library/windowsazure/gg433027.aspx\n[storage service]: https://www.windowsazure.com/manage/services/storage/what-is-a-storage-account/\n[azure-blobs]: https://www.windowsazure.com/develop/python/how-to-guides/blob-service/\n[azure-tables]: https://www.windowsazure.com/develop/python/how-to-guides/table-service/\n[azure-queues]: https://www.windowsazure.com/develop/python/how-to-guides/queue-service/\n[Azure Service Configuration Schema (.cscfg)]: http://msdn.microsoft.com/library/windowsazure/ee758710.aspx\n[Cloud Services]: http://msdn.microsoft.com/library/windowsazure/jj155995.aspx\n[Virtual Machines]: http://msdn.microsoft.com/library/windowsazure/jj156003.aspx\n \ntest\n"
}