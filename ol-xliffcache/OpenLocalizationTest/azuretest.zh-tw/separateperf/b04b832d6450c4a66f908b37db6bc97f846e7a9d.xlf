<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Deploy from Visual Studio</source>
          <target state="new">Deploy from Visual Studio</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create a project in Visual Studio to manage your Logic app.</source>
          <target state="new">Create a project in Visual Studio to manage your Logic app.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Deploy from Visual Studio</source>
          <target state="new">Deploy from Visual Studio</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Although the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">](https://portal.azure.com)</ept> gives you a great way to design and manage your Logic apps, you may also want to deploy your Logic app from Visual Studio instead.</source>
          <target state="new">Although the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">](https://portal.azure.com)</ept> gives you a great way to design and manage your Logic apps, you may also want to deploy your Logic app from Visual Studio instead.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are a couple key capabilities this enables:</source>
          <target state="new">There are a couple key capabilities this enables:</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Store your Logic app alongside the other assets in your Solution, so it can contain all aspects of your application</source>
          <target state="new">Store your Logic app alongside the other assets in your Solution, so it can contain all aspects of your application</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Keep your Logic app definition checked into source control so that you can use TFS or Git to track revisions to it</source>
          <target state="new">Keep your Logic app definition checked into source control so that you can use TFS or Git to track revisions to it</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You have to have the Azure SDK 2.7 or later installed in order to follow the steps below.</source>
          <target state="new">You have to have the Azure SDK 2.7 or later installed in order to follow the steps below.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Find <bpt id="p1">[</bpt>the latest SDK for VS<ept id="p1">](http://azure.microsoft.com/downloads/)</ept> here.</source>
          <target state="new">Find <bpt id="p1">[</bpt>the latest SDK for VS<ept id="p1">](http://azure.microsoft.com/downloads/)</ept> here.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a project</source>
          <target state="new">Create a project</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Go to the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu and select <bpt id="p2">**</bpt>New<ept id="p2">**</ept> &gt;  <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> (or, you can go to <bpt id="p4">**</bpt>Add<ept id="p4">**</ept> and then select <bpt id="p5">**</bpt>New project<ept id="p5">**</ept> to add it to an existing solution)</source>
          <target state="new">Go to the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu and select <bpt id="p2">**</bpt>New<ept id="p2">**</ept> &gt;  <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> (or, you can go to <bpt id="p4">**</bpt>Add<ept id="p4">**</ept> and then select <bpt id="p5">**</bpt>New project<ept id="p5">**</ept> to add it to an existing solution)</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> ![</ph>File menu<ph id="ph2">](./media/app-service-logic-deploy-from-vs/filemenu.png)</ph></source>
          <target state="new"><ph id="ph1"> ![</ph>File menu<ph id="ph2">](./media/app-service-logic-deploy-from-vs/filemenu.png)</ph></target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the dialog find <bpt id="p1">**</bpt>Cloud<ept id="p1">**</ept> and then select <bpt id="p2">**</bpt>Azure Resource Group<ept id="p2">**</ept>.</source>
          <target state="new">In the dialog find <bpt id="p1">**</bpt>Cloud<ept id="p1">**</ept> and then select <bpt id="p2">**</bpt>Azure Resource Group<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Type a <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new">Type a <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> ![</ph>Add new project<ph id="ph2">](./media/app-service-logic-deploy-from-vs/addnewproject.png)</ph></source>
          <target state="new"><ph id="ph1"> ![</ph>Add new project<ph id="ph2">](./media/app-service-logic-deploy-from-vs/addnewproject.png)</ph></target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You now need to select if you want an <bpt id="p1">**</bpt>Logic app<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Logic app + API app<ept id="p2">**</ept>.</source>
          <target state="new">You now need to select if you want an <bpt id="p1">**</bpt>Logic app<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Logic app + API app<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Selecting <bpt id="p1">**</bpt>Logic app<ept id="p1">**</ept> requires you to point to existing API's.</source>
          <target state="new">Selecting <bpt id="p1">**</bpt>Logic app<ept id="p1">**</ept> requires you to point to existing API's.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you select <bpt id="p1">**</bpt>Logic app + API app<ept id="p1">**</ept> then you can also create an new, empty, API app at the same time.</source>
          <target state="new">If you select <bpt id="p1">**</bpt>Logic app + API app<ept id="p1">**</ept> then you can also create an new, empty, API app at the same time.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> ![</ph>Select Azure template<ph id="ph2">](./media/app-service-logic-deploy-from-vs/selectazuretemplate.png)</ph></source>
          <target state="new"><ph id="ph1"> ![</ph>Select Azure template<ph id="ph2">](./media/app-service-logic-deploy-from-vs/selectazuretemplate.png)</ph></target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Once you have selected your <bpt id="p1">**</bpt>Template<ept id="p1">**</ept> hit <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new">Once you have selected your <bpt id="p1">**</bpt>Template<ept id="p1">**</ept> hit <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Now your Logic app project will be added to your solution.</source>
          <target state="new">Now your Logic app project will be added to your solution.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You should see the deployment in the Solution Explorer:</source>
          <target state="new">You should see the deployment in the Solution Explorer:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="new">Deployment</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Configuring your Logic app</source>
          <target state="new">Configuring your Logic app</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Once you have a project you can edit the definition of your Logic app inside VS.</source>
          <target state="new">Once you have a project you can edit the definition of your Logic app inside VS.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Click on the JSON file in the solution explorer.</source>
          <target state="new">Click on the JSON file in the solution explorer.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You will see a placeholder definition that you can fill in with your application's logic.</source>
          <target state="new">You will see a placeholder definition that you can fill in with your application's logic.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It's recommended to use <bpt id="p1">**</bpt>parameters<ept id="p1">**</ept> throughout your definition.</source>
          <target state="new">It's recommended to use <bpt id="p1">**</bpt>parameters<ept id="p1">**</ept> throughout your definition.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This will be useful if you want to deploy to both a development and production environment.</source>
          <target state="new">This will be useful if you want to deploy to both a development and production environment.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In that case, you should put all environment-specific configuration in the <ph id="ph1">`.param`</ph> file, and the parameters instead of the actual strings.</source>
          <target state="new">In that case, you should put all environment-specific configuration in the <ph id="ph1">`.param`</ph> file, and the parameters instead of the actual strings.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Today, Visual Studio does not have a built-in designer, so if you'd like to use a graphical interface (as opposed to writing JSON), you will need to use the Azure Portal.</source>
          <target state="new">Today, Visual Studio does not have a built-in designer, so if you'd like to use a graphical interface (as opposed to writing JSON), you will need to use the Azure Portal.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you previously created a Logic app inside the Azure Portal and now want to check it in to source control, you can do that one of 3 different ways:</source>
          <target state="new">If you previously created a Logic app inside the Azure Portal and now want to check it in to source control, you can do that one of 3 different ways:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Go to <bpt id="p1">**</bpt>Code view<ept id="p1">**</ept> in the portal and copy the definition.</source>
          <target state="new">Go to <bpt id="p1">**</bpt>Code view<ept id="p1">**</ept> in the portal and copy the definition.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Use the Logic apps <bpt id="p1">[</bpt>REST API<ept id="p1">](https://msdn.microsoft.com/library/azure/dn948510.aspx)</ept> to get the definition.</source>
          <target state="new">Use the Logic apps <bpt id="p1">[</bpt>REST API<ept id="p1">](https://msdn.microsoft.com/library/azure/dn948510.aspx)</ept> to get the definition.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>Azure Resource manager powershell<ept id="p1">](../powershell-azure-resource-manager.md)</ept>,  specifically the <bpt id="p2">[</bpt><ph id="ph1">`Get-AzureResource`</ph> command<ept id="p2">](https://msdn.microsoft.com/library/dn654579.aspx)</ept> to download the definition.</source>
          <target state="new">Use <bpt id="p1">[</bpt>Azure Resource manager powershell<ept id="p1">](../powershell-azure-resource-manager.md)</ept>,  specifically the <bpt id="p2">[</bpt><ph id="ph1">`Get-AzureResource`</ph> command<ept id="p2">](https://msdn.microsoft.com/library/dn654579.aspx)</ept> to download the definition.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Deploying your Logic app</source>
          <target state="new">Deploying your Logic app</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Finally, after you have configured your app you can deploy directly from Visual Studio in just a couple steps.</source>
          <target state="new">Finally, after you have configured your app you can deploy directly from Visual Studio in just a couple steps.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Right-click on the deployment in the Solution Explorer and go to <bpt id="p1">**</bpt>Deploy<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>New deployment...<ept id="p2">**</ept></source>
          <target state="new">Right-click on the deployment in the Solution Explorer and go to <bpt id="p1">**</bpt>Deploy<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>New deployment...<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> ![</ph>New deployment<ph id="ph2">](./media/app-service-logic-deploy-from-vs/newdeployment.png)</ph></source>
          <target state="new"><ph id="ph1"> ![</ph>New deployment<ph id="ph2">](./media/app-service-logic-deploy-from-vs/newdeployment.png)</ph></target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You will be prompted to sign in to your Azure subscription(s).</source>
          <target state="new">You will be prompted to sign in to your Azure subscription(s).</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Now you need to choose the details of the resource group that you want to deploy the Logic app to.</source>
          <target state="new">Now you need to choose the details of the resource group that you want to deploy the Logic app to.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Deploy to resource group</source>
          <target state="new">Deploy to resource group</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Be sure to select the right template and parameters files for the resource group (for example if you are deploying to a production environment you'll want to choose the production parameters file).</source>
          <target state="new">Be sure to select the right template and parameters files for the resource group (for example if you are deploying to a production environment you'll want to choose the production parameters file).</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The status of the deployment will appear in the <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window (you may need to choose <bpt id="p2">**</bpt>Azure Provisioning<ept id="p2">**</ept>.</source>
          <target state="new">The status of the deployment will appear in the <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window (you may need to choose <bpt id="p2">**</bpt>Azure Provisioning<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> ![</ph>Output<ph id="ph2">](./media/app-service-logic-deploy-from-vs/output.png)</ph></source>
          <target state="new"><ph id="ph1"> ![</ph>Output<ph id="ph2">](./media/app-service-logic-deploy-from-vs/output.png)</ph></target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the future you can revise your Logic app in source control and use Visual Studio to deploy new versions.</source>
          <target state="new">In the future you can revise your Logic app in source control and use Visual Studio to deploy new versions.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Note that if you modify the definition in the Azure Portal directly, the next time that you deploy from Visual Studio those changes will be overriden.</source>
          <target state="new">Note that if you modify the definition in the Azure Portal directly, the next time that you deploy from Visual Studio those changes will be overriden.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you do not want to use Visual Studio, but still want to having tooling to deploy your Logic app from source control you can always use the <bpt id="p1">[</bpt>API<ept id="p1">](https://msdn.microsoft.com/library/azure/dn948510.aspx)</ept> or <bpt id="p2">[</bpt>Powershell<ept id="p2">](../powershell-azure-resource-manager.md)</ept> directly to automate your deployments.</source>
          <target state="new">If you do not want to use Visual Studio, but still want to having tooling to deploy your Logic app from source control you can always use the <bpt id="p1">[</bpt>API<ept id="p1">](https://msdn.microsoft.com/library/azure/dn948510.aspx)</ept> or <bpt id="p2">[</bpt>Powershell<ept id="p2">](../powershell-azure-resource-manager.md)</ept> directly to automate your deployments.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b04b832d6450c4a66f908b37db6bc97f846e7a9d</xliffext:olfilehash>
  </header>
</xliff>