<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use Azure Mobile Services and Notification Hubs to send notifications to your Windows Phone app</source>
          <target state="new">Use Azure Mobile Services and Notification Hubs to send notifications to your Windows Phone app</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Notification Hubs with Azure mobile services to send push notifications to your Windows phone app.</source>
          <target state="new">Learn how to use Notification Hubs with Azure mobile services to send push notifications to your Windows phone app.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Add push notifications to your Mobile Services app</source>
          <target state="new">Add push notifications to your Mobile Services app</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic shows you how to use Azure Mobile Services with a .NET backend to send push notifications to a Windows Phone Silverlight 8 app using the Microsoft Push Notification Service (MPNS).</source>
          <target state="new">This topic shows you how to use Azure Mobile Services with a .NET backend to send push notifications to a Windows Phone Silverlight 8 app using the Microsoft Push Notification Service (MPNS).</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this tutorial you enable push notifications using Azure Notification Hubs to the quickstart project.</source>
          <target state="new">In this tutorial you enable push notifications using Azure Notification Hubs to the quickstart project.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When complete, your mobile service will send a push notification using Notification Hubs each time a record is inserted.</source>
          <target state="new">When complete, your mobile service will send a push notification using Notification Hubs each time a record is inserted.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The notification hub that you create is free with your mobile service, can be managed independent of the mobile service, and can be used by other applications and services.</source>
          <target state="new">The notification hub that you create is free with your mobile service, can be managed independent of the mobile service, and can be used by other applications and services.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This tutorial is based on the Mobile Services TodoList project.</source>
          <target state="new">This tutorial is based on the Mobile Services TodoList project.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Before you start this tutorial, you must first complete <bpt id="p1">[</bpt><ept id="p1">Add Mobile Services to an existing app]</ept> to connect your project to the mobile service.</source>
          <target state="new">Before you start this tutorial, you must first complete <bpt id="p1">[</bpt><ept id="p1">Add Mobile Services to an existing app]</ept> to connect your project to the mobile service.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>This tutorial targets Windows Phone 8.1 Silverlight apps.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>This tutorial targets Windows Phone 8.1 Silverlight apps.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you are instead building a Windows Phone 8.1 Store app, see the <bpt id="p1">[</bpt>Windows Store app<ept id="p1">](mobile-services-dotnet-backend-windows-store-dotnet-get-started-push)</ept> version of this tutorial.</source>
          <target state="new">If you are instead building a Windows Phone 8.1 Store app, see the <bpt id="p1">[</bpt>Windows Store app<ept id="p1">](mobile-services-dotnet-backend-windows-store-dotnet-get-started-push)</ept> version of this tutorial.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For information on Windows Phone Silverlight apps and how they compare with Windows Phone Store apps, see <bpt id="p1">[</bpt><ept id="p1">Windows Phone Silverlight 8.1 apps]</ept>.</source>
          <target state="new">For information on Windows Phone Silverlight apps and how they compare with Windows Phone Store apps, see <bpt id="p1">[</bpt><ept id="p1">Windows Phone Silverlight 8.1 apps]</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Update the app to register for notifications</source>
          <target state="new">Update the app to register for notifications</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Before your app can receive push notifications, you must register a notification channel.</source>
          <target state="new">Before your app can receive push notifications, you must register a notification channel.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open the file App.xaml.cs and add the following <ph id="ph1">`using`</ph> statement:</source>
          <target state="new">In Visual Studio, open the file App.xaml.cs and add the following <ph id="ph1">`using`</ph> statement:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`AcquirePushChannel`</ph> method to <ph id="ph2">`App`</ph> class:</source>
          <target state="new">Add the following <ph id="ph1">`AcquirePushChannel`</ph> method to <ph id="ph2">`App`</ph> class:</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This code retrieves the channel URI for the app if it exists.</source>
          <target state="new">This code retrieves the channel URI for the app if it exists.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Otherwise, it will be created.</source>
          <target state="new">Otherwise, it will be created.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The channel URI is then opened and bound for toast notifications.</source>
          <target state="new">The channel URI is then opened and bound for toast notifications.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Once the channel URI is completely opened, the handler for the <ph id="ph1">`ChannelUriUpdated`</ph> method is called and the channel is registered to received push notifications.</source>
          <target state="new">Once the channel URI is completely opened, the handler for the <ph id="ph1">`ChannelUriUpdated`</ph> method is called and the channel is registered to received push notifications.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the registration should fail, the channel is closed so that subsequent executions of the app can try registration again.</source>
          <target state="new">If the registration should fail, the channel is closed so that subsequent executions of the app can try registration again.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ShellToastNotificationReceived`</ph> handler is setup so that the app can receive and handle push notifications while running.</source>
          <target state="new">The <ph id="ph1">`ShellToastNotificationReceived`</ph> handler is setup so that the app can receive and handle push notifications while running.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`Application_Launching`</ph> event handler in App.xaml.cs, add the following call to the new <ph id="ph2">`AcquirePushChannel`</ph> method:</source>
          <target state="new">In the <ph id="ph1">`Application_Launching`</ph> event handler in App.xaml.cs, add the following call to the new <ph id="ph2">`AcquirePushChannel`</ph> method:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This makes sure that registration is requested every time that the app is loaded.</source>
          <target state="new">This makes sure that registration is requested every time that the app is loaded.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In your app, you may only want to make this registration periodically to ensure that the registration is current.</source>
          <target state="new">In your app, you may only want to make this registration periodically to ensure that the registration is current.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Press the <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> key to run the app.</source>
          <target state="new">Press the <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> key to run the app.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A popup dialog with the registration key is displayed.</source>
          <target state="new">A popup dialog with the registration key is displayed.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open the Package.appxmanifest file and make sure that <bpt id="p1">**</bpt>Toast capable<ept id="p1">**</ept> is set to <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept> on the <bpt id="p3">**</bpt>Application UI<ept id="p3">**</ept> tab.</source>
          <target state="new">In Visual Studio, open the Package.appxmanifest file and make sure that <bpt id="p1">**</bpt>Toast capable<ept id="p1">**</ept> is set to <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept> on the <bpt id="p3">**</bpt>Application UI<ept id="p3">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>![][1]</source>
          <target state="new">![][1]</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This makes sure that your app can raise toast notifications.</source>
          <target state="new">This makes sure that your app can raise toast notifications.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Update the server to send push notifications</source>
          <target state="new">Update the server to send push notifications</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In Visual Studio Solution Explorer, expand the <bpt id="p1">**</bpt>Controllers<ept id="p1">**</ept> folder in the mobile service project.</source>
          <target state="new">In Visual Studio Solution Explorer, expand the <bpt id="p1">**</bpt>Controllers<ept id="p1">**</ept> folder in the mobile service project.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Open TodoItemController.cs and update the <ph id="ph1">`PostTodoItem`</ph> method definition with the following code:</source>
          <target state="new">Open TodoItemController.cs and update the <ph id="ph1">`PostTodoItem`</ph> method definition with the following code:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This code will send a push notification (with the text of the inserted item) after inserting a todo item.</source>
          <target state="new">This code will send a push notification (with the text of the inserted item) after inserting a todo item.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In the event of an error, the code will add an error log entry which is viewable on the <bpt id="p1">**</bpt>Logs<ept id="p1">**</ept> tab of the mobile service in the Management Portal.</source>
          <target state="new">In the event of an error, the code will add an error log entry which is viewable on the <bpt id="p1">**</bpt>Logs<ept id="p1">**</ept> tab of the mobile service in the Management Portal.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Log on to the <bpt id="p1">[</bpt><ept id="p1">Azure Management Portal]</ept>, click <bpt id="p2">**</bpt>Mobile Services<ept id="p2">**</ept>, and then click your app.</source>
          <target state="new">Log on to the <bpt id="p1">[</bpt><ept id="p1">Azure Management Portal]</ept>, click <bpt id="p2">**</bpt>Mobile Services<ept id="p2">**</ept>, and then click your app.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> tab, check <bpt id="p2">**</bpt>Enable unauthenticated push notifications<ept id="p2">**</ept>, then click <bpt id="p3">**</bpt>Save<ept id="p3">**</ept>.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Push<ept id="p1">**</ept> tab, check <bpt id="p2">**</bpt>Enable unauthenticated push notifications<ept id="p2">**</ept>, then click <bpt id="p3">**</bpt>Save<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Mobile Services Push tab</source>
          <target state="new">Mobile Services Push tab</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>This tutorial uses MPNS in unauthenticated mode.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>This tutorial uses MPNS in unauthenticated mode.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In this mode, MPNS limits the number of notifications that can be sent to a device channel.</source>
          <target state="new">In this mode, MPNS limits the number of notifications that can be sent to a device channel.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To remove this restriction, you must generate and upload a certificate by clicking <ph id="ph1">&lt;strong&gt;</ph>Upload<ph id="ph2">&lt;/strong&gt;</ph> and selecting the certificate.</source>
          <target state="new">To remove this restriction, you must generate and upload a certificate by clicking <ph id="ph1">&lt;strong&gt;</ph>Upload<ph id="ph2">&lt;/strong&gt;</ph> and selecting the certificate.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information on generating the certificate, see <ph id="ph1">&lt;a href="http://msdn.microsoft.com/library/windowsphone/develop/ff941099(v=vs.105).aspx"&gt;</ph>Setting up an authenticated web service to send push notifications for Windows Phone<ph id="ph2">&lt;/a&gt;</ph>.</source>
          <target state="new">For more information on generating the certificate, see <ph id="ph1">&lt;a href="http://msdn.microsoft.com/library/windowsphone/develop/ff941099(v=vs.105).aspx"&gt;</ph>Setting up an authenticated web service to send push notifications for Windows Phone<ph id="ph2">&lt;/a&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This enables the mobile service to connect to MPNS in unauthenticated mode to send push notifications.</source>
          <target state="new">This enables the mobile service to connect to MPNS in unauthenticated mode to send push notifications.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Enable push notifications for local testing</source>
          <target state="new">Enable push notifications for local testing</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Test push notifications in your app</source>
          <target state="new">Test push notifications in your app</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In Visual Studio, press the F5 key to run the app.</source>
          <target state="new">In Visual Studio, press the F5 key to run the app.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> You may encounter a 401 Unauthorized RegistrationAuthorizationException when testing on the Windows Phone emulator.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> You may encounter a 401 Unauthorized RegistrationAuthorizationException when testing on the Windows Phone emulator.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This can occur during the <ph id="ph1">`RegisterNativeAsync()`</ph> call because of the way the Windows Phone emulator syncs it's clock with the host PC.</source>
          <target state="new">This can occur during the <ph id="ph1">`RegisterNativeAsync()`</ph> call because of the way the Windows Phone emulator syncs it's clock with the host PC.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It can result in a security token that will be rejected.</source>
          <target state="new">It can result in a security token that will be rejected.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To resolve this simply manually set the clock in the emulator before testing.</source>
          <target state="new">To resolve this simply manually set the clock in the emulator before testing.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the app, enter the text "hello push" in the textbox, click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>, then immediately click the start button or back button to leave the app.</source>
          <target state="new">In the app, enter the text "hello push" in the textbox, click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>, then immediately click the start button or back button to leave the app.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>![Insert text][2]</source>
          <target state="new">![Insert text][2]</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This sends an insert request to the mobile service to store the added item.</source>
          <target state="new">This sends an insert request to the mobile service to store the added item.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Notice that the device receives a toast notification that says <bpt id="p1">**</bpt>hello push<ept id="p1">**</ept>.</source>
          <target state="new">Notice that the device receives a toast notification that says <bpt id="p1">**</bpt>hello push<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Push notification received</source>
          <target state="new">Push notification received</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>You will not receive the notification when you are still in the app.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>You will not receive the notification when you are still in the app.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To receive a toast notification while the app is active, you must handle the <bpt id="p1">[</bpt>ShellToastNotificationReceived<ept id="p1">](http://msdn.microsoft.com/library/windowsphone/develop/microsoft.phone.notification.httpnotificationchannel.shelltoastnotificationreceived.aspx)</ept> event.</source>
          <target state="new">To receive a toast notification while the app is active, you must handle the <bpt id="p1">[</bpt>ShellToastNotificationReceived<ept id="p1">](http://msdn.microsoft.com/library/windowsphone/develop/microsoft.phone.notification.httpnotificationchannel.shelltoastnotificationreceived.aspx)</ept> event.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrated the basics of enabling a Windows Phone app to use Mobile Services and Notification Hubs to send push notifications.</source>
          <target state="new">This tutorial demonstrated the basics of enabling a Windows Phone app to use Mobile Services and Notification Hubs to send push notifications.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Next, consider completing the next tutorial, <bpt id="p1">[</bpt><ept id="p1">Send push notifications to authenticated users]</ept>, which shows how to use tags to send push notifications from a Mobile Service to only an authenticated user.</source>
          <target state="new">Next, consider completing the next tutorial, <bpt id="p1">[</bpt><ept id="p1">Send push notifications to authenticated users]</ept>, which shows how to use tags to send push notifications from a Mobile Service to only an authenticated user.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Consider finding out more about the following Mobile Services and Notification Hubs topics:</source>
          <target state="new">Consider finding out more about the following Mobile Services and Notification Hubs topics:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Learn how to authenticate users of your app with different account types using mobile services.</source>
          <target state="new">Learn how to authenticate users of your app with different account types using mobile services.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Learn more about how Notification Hubs works to deliver notifications to your apps across all major client platforms.</source>
          <target state="new">Learn more about how Notification Hubs works to deliver notifications to your apps across all major client platforms.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debug Notification Hubs applications<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=386630)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Debug Notification Hubs applications<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=386630)</ept></target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Get guidance troubleshooting and debugging Notification Hubs solutions.</source>
          <target state="new">Get guidance troubleshooting and debugging Notification Hubs solutions.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Learn more about how to use Mobile Services with .NET.</source>
          <target state="new">Learn more about how to use Mobile Services with .NET.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b085fc583d2042e7dd27584cef13141ddaf35c2</xliffext:olfilehash>
  </header>
</xliff>