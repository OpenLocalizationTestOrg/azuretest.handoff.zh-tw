{
  "nodes": [
    {
      "content": "SQL Database Disaster Recovery Drills",
      "pos": [
        27,
        64
      ]
    },
    {
      "content": "Learn guidance and best practices for using Azure SQL Database to perform disaster recovery drills that will help keep your mission critical business applications resilient to failures and outages.",
      "pos": [
        83,
        280
      ]
    },
    {
      "content": "Performing Disaster Recovery Drill",
      "pos": [
        597,
        631
      ]
    },
    {
      "content": "It is recommended that validation of application readiness for recovery workflow is performed periodically.",
      "pos": [
        633,
        740
      ]
    },
    {
      "content": "Verifying the application behavior and implications of data loss and/or the disruption that failover involves is a good engineering practice.",
      "pos": [
        741,
        882
      ]
    },
    {
      "content": "It is also a requirement by most industry standards as part of business continuity certification.",
      "pos": [
        883,
        980
      ]
    },
    {
      "content": "Performing a disaster recovery drill consists of:",
      "pos": [
        982,
        1031
      ]
    },
    {
      "content": "Simulating data tier outage",
      "pos": [
        1035,
        1062
      ]
    },
    {
      "content": "Recovering",
      "pos": [
        1065,
        1075
      ]
    },
    {
      "content": "Validate application integrity post recovery",
      "pos": [
        1079,
        1123
      ]
    },
    {
      "content": "Depending how you <bpt id=\"p1\">[</bpt>design for business continuity<ept id=\"p1\">](sql-database-business-continuity.md)</ept>, the workflow to execute the drill can vary.",
      "pos": [
        1125,
        1257
      ]
    },
    {
      "content": "Below we describe the best practices conducting a disaster recovery drill in the context of Azure SQL Database.",
      "pos": [
        1258,
        1369
      ]
    },
    {
      "content": "Geo-Restore",
      "pos": [
        1374,
        1385
      ]
    },
    {
      "content": "To prevent the potential data loss when conducting a disaster recovery drill, we recommend performing the drill using a test environment by creating a copy of the production environment and using it to verify the application’s failover workflow.",
      "pos": [
        1387,
        1632
      ]
    },
    {
      "content": "Outage simulation",
      "pos": [
        1639,
        1656
      ]
    },
    {
      "content": "Simulate the outage by either deleting or renaming the source database and cause application connectivity failure.",
      "pos": [
        1660,
        1774
      ]
    },
    {
      "content": "This way you can validate outage detection/alerting and measure RTO for recovery duration.",
      "pos": [
        1775,
        1865
      ]
    },
    {
      "content": "Recovery",
      "pos": [
        1871,
        1879
      ]
    },
    {
      "pos": [
        1883,
        2002
      ],
      "content": "Perform the Geo-Restore of the database into a different server as described <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](sql-database-disaster-recovery.md)</ept>."
    },
    {
      "pos": [
        2006,
        2197
      ],
      "content": "Change the application configuration to connect to the recovered database(s) and follow the <bpt id=\"p1\">[</bpt>Finalize a Recovered Database<ept id=\"p1\">](sql-database-recovered-finalize.md)</ept> guide to complete the recovery."
    },
    {
      "content": "Validation",
      "pos": [
        2203,
        2213
      ]
    },
    {
      "content": "Complete the drill by verifying the application integrity post recovery (i.e. connection strings, logins, basic functionality testing or other validations part of standard application signoffs procedures).",
      "pos": [
        2217,
        2422
      ]
    },
    {
      "content": "Standard Geo-Replication",
      "pos": [
        2426,
        2450
      ]
    },
    {
      "content": "A database that is protected using Standard Geo-Replication can only have one non-readable secondary database.",
      "pos": [
        2452,
        2562
      ]
    },
    {
      "content": "The drill exercise will involve forced termination of the link, at which point the database will be unprotected.",
      "pos": [
        2563,
        2675
      ]
    },
    {
      "content": "Moreover, there is a possibility of data loss, so we don’t recommend customers to perform such test on production databases.",
      "pos": [
        2676,
        2800
      ]
    },
    {
      "content": "Instead we recommend creating a copy of the production environment and using it to verify the application’s failover workflow.",
      "pos": [
        2801,
        2927
      ]
    },
    {
      "content": "Outage simulation",
      "pos": [
        2933,
        2950
      ]
    },
    {
      "content": "Simulate workload on primary database.",
      "pos": [
        2954,
        2992
      ]
    },
    {
      "content": "If the primary is active at the time of termination data loss might occur, which will make the drill more realistic.",
      "pos": [
        2993,
        3109
      ]
    },
    {
      "pos": [
        3112,
        3250
      ],
      "content": "Delete the primary database or <bpt id=\"p1\">[</bpt>perform forced termination<ept id=\"p1\">](sql-database-disaster-recovery.md)</ept> of the link on the secondary database side."
    },
    {
      "content": "Recovery",
      "pos": [
        3256,
        3264
      ]
    },
    {
      "content": "Change the application configuration to connect to the former read-only secondary which will become fully accessible and the application can use it as the new primary.",
      "pos": [
        3268,
        3435
      ]
    },
    {
      "pos": [
        3439,
        3549
      ],
      "content": "Follow the <bpt id=\"p1\">[</bpt>Finalize a Recovered Database<ept id=\"p1\">](sql-database-recovered-finalize.md)</ept> guide to complete the recovery."
    },
    {
      "content": "Validation",
      "pos": [
        3555,
        3565
      ]
    },
    {
      "content": "Complete the drill by verifying the application integrity post recovery (i.e. connection strings, logins, basic functionality testing or other validations part of standard application signoffs procedures).",
      "pos": [
        3569,
        3774
      ]
    },
    {
      "content": "Active Geo-Replication",
      "pos": [
        3778,
        3800
      ]
    },
    {
      "content": "The disaster recovery drill will be conducted by using a parallel target server and creating another set of read only secondaries in it.",
      "pos": [
        3802,
        3938
      ]
    },
    {
      "content": "A test version of the application tier should be used to verify the operation health and data integrity by running tests against that server after forced termination.",
      "pos": [
        3939,
        4105
      ]
    },
    {
      "content": "Outage simulation",
      "pos": [
        4112,
        4129
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Create a new active geo-replication link<ept id=\"p1\">](sql-database-business-continuity-design.md)</ept> from primary database to a secondary test server.",
      "pos": [
        4133,
        4269
      ]
    },
    {
      "content": "If the primary is active at the time of termination the data loss might occur, which will make the drill more realistic.",
      "pos": [
        4270,
        4390
      ]
    },
    {
      "pos": [
        4393,
        4528
      ],
      "content": "<bpt id=\"p1\">[</bpt>Perform forced termination<ept id=\"p1\">](sql-database-disaster-recovery.md)</ept> of the link on the secondary database which resides on the test server."
    },
    {
      "content": "Recovery",
      "pos": [
        4534,
        4542
      ]
    },
    {
      "content": "Change the application configuration to connect to the former read only secondary which will become available for writes after termination.",
      "pos": [
        4546,
        4685
      ]
    },
    {
      "pos": [
        4688,
        4798
      ],
      "content": "Follow the <bpt id=\"p1\">[</bpt>Finalize a Recovered Database<ept id=\"p1\">](sql-database-recovered-finalize.md)</ept> guide to complete the recovery."
    },
    {
      "content": "Validation",
      "pos": [
        4804,
        4814
      ]
    },
    {
      "content": "Complete the drill by verifying the application integrity post recovery (i.e. connection strings, logins, basic functionality testing or other validations part of standard application signoffs procedures).",
      "pos": [
        4818,
        5023
      ]
    }
  ],
  "content": "<properties \n   pageTitle=\"SQL Database Disaster Recovery Drills\" \n   description=\"Learn guidance and best practices for using Azure SQL Database to perform disaster recovery drills that will help keep your mission critical business applications resilient to failures and outages.\" \n   services=\"sql-database\" \n   documentationCenter=\"\" \n   authors=\"mihaelablendea\" \n   manager=\"jeffreyg\" \n   editor=\"monicar\"/>\n\n<tags\n   ms.service=\"sql-database\"\n   ms.devlang=\"NA\"\n   ms.topic=\"article\"\n   ms.tgt_pltfrm=\"NA\"\n   ms.workload=\"data-management\" \n   ms.date=\"07/15/2015\"\n   ms.author=\"mihaelab\"/>\n\n#Performing Disaster Recovery Drill\n\nIt is recommended that validation of application readiness for recovery workflow is performed periodically. Verifying the application behavior and implications of data loss and/or the disruption that failover involves is a good engineering practice. It is also a requirement by most industry standards as part of business continuity certification.\n\nPerforming a disaster recovery drill consists of:\n\n- Simulating data tier outage\n- Recovering \n- Validate application integrity post recovery\n\nDepending how you [design for business continuity](sql-database-business-continuity.md), the workflow to execute the drill can vary. Below we describe the best practices conducting a disaster recovery drill in the context of Azure SQL Database. \n\n##Geo-Restore\n\nTo prevent the potential data loss when conducting a disaster recovery drill, we recommend performing the drill using a test environment by creating a copy of the production environment and using it to verify the application’s failover workflow.\n \n####Outage simulation\n\n- Simulate the outage by either deleting or renaming the source database and cause application connectivity failure. This way you can validate outage detection/alerting and measure RTO for recovery duration.\n\n####Recovery\n\n- Perform the Geo-Restore of the database into a different server as described [here](sql-database-disaster-recovery.md). \n- Change the application configuration to connect to the recovered database(s) and follow the [Finalize a Recovered Database](sql-database-recovered-finalize.md) guide to complete the recovery.\n\n####Validation\n\n- Complete the drill by verifying the application integrity post recovery (i.e. connection strings, logins, basic functionality testing or other validations part of standard application signoffs procedures).\n\n##Standard Geo-Replication\n\nA database that is protected using Standard Geo-Replication can only have one non-readable secondary database. The drill exercise will involve forced termination of the link, at which point the database will be unprotected. Moreover, there is a possibility of data loss, so we don’t recommend customers to perform such test on production databases. Instead we recommend creating a copy of the production environment and using it to verify the application’s failover workflow.\n\n####Outage simulation\n\n- Simulate workload on primary database. If the primary is active at the time of termination data loss might occur, which will make the drill more realistic.\n- Delete the primary database or [perform forced termination](sql-database-disaster-recovery.md) of the link on the secondary database side.\n\n####Recovery\n\n- Change the application configuration to connect to the former read-only secondary which will become fully accessible and the application can use it as the new primary. \n- Follow the [Finalize a Recovered Database](sql-database-recovered-finalize.md) guide to complete the recovery.\n\n####Validation\n\n- Complete the drill by verifying the application integrity post recovery (i.e. connection strings, logins, basic functionality testing or other validations part of standard application signoffs procedures).\n\n##Active Geo-Replication\n\nThe disaster recovery drill will be conducted by using a parallel target server and creating another set of read only secondaries in it. A test version of the application tier should be used to verify the operation health and data integrity by running tests against that server after forced termination. \n\n####Outage simulation\n\n- [Create a new active geo-replication link](sql-database-business-continuity-design.md) from primary database to a secondary test server. If the primary is active at the time of termination the data loss might occur, which will make the drill more realistic.\n- [Perform forced termination](sql-database-disaster-recovery.md) of the link on the secondary database which resides on the test server.\n\n####Recovery\n\n- Change the application configuration to connect to the former read only secondary which will become available for writes after termination.\n- Follow the [Finalize a Recovered Database](sql-database-recovered-finalize.md) guide to complete the recovery.\n\n####Validation\n\n- Complete the drill by verifying the application integrity post recovery (i.e. connection strings, logins, basic functionality testing or other validations part of standard application signoffs procedures).\n"
}