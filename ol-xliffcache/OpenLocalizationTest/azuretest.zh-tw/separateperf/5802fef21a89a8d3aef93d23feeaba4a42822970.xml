{
  "nodes": [
    {
      "content": "Explore .NET trace logs in Application Insights",
      "pos": [
        28,
        75
      ]
    },
    {
      "content": "Search logs generated with Trace, NLog, or Log4Net.",
      "pos": [
        95,
        146
      ]
    },
    {
      "content": "Explore .NET trace logs in Application Insights",
      "pos": [
        468,
        515
      ]
    },
    {
      "content": "If you use NLog, log4Net or System.Diagnostics.Trace for diagnostic tracing in your ASP.NET application, you can have your logs sent to [Visual Studio Application Insights][start], where you can explore and search them.",
      "pos": [
        519,
        738
      ]
    },
    {
      "content": "Your logs will be merged with the other telemetry coming from your application, so that you can identify the traces associated with servicing each user request, and correlate them with other events and exception reports.",
      "pos": [
        739,
        959
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Do you need the log capture module?",
      "pos": [
        963,
        1011
      ]
    },
    {
      "content": "It's a useful adapter for 3rd-party loggers, but if you aren't already using NLog, log4Net or System.Diagnostics.Trace, consider just calling <bpt id=\"p1\">[</bpt>Application Insights TrackTrace()<ept id=\"p1\">](app-insights-api-custom-events-metrics.md#track-trace)</ept> directly.",
      "pos": [
        1012,
        1254
      ]
    },
    {
      "content": "If you haven't yet [set up Application Insights for your project][start], do that now.",
      "pos": [
        1256,
        1342
      ]
    },
    {
      "content": "Your project should have the file <ph id=\"ph1\">`ApplicationInsights.config`</ph> and the NuGet package <ph id=\"ph2\">`Microsoft.ApplicationInsights.Web`</ph>.",
      "pos": [
        1343,
        1464
      ]
    },
    {
      "content": "Install an adapter for your logging framework",
      "pos": [
        1471,
        1516
      ]
    },
    {
      "content": "If you use a logging framework - log4Net, NLog or System.Diagnostics.Trace - you can install an adapter that sends these logs to Application Insights along with other telemetry.",
      "pos": [
        1518,
        1695
      ]
    },
    {
      "content": "If you plan to use log4Net or NLog, install it in your project.",
      "pos": [
        1701,
        1764
      ]
    },
    {
      "pos": [
        1769,
        1853
      ],
      "content": "In Solution Explorer, right-click your project and choose <bpt id=\"p1\">**</bpt>Manage NuGet Packages<ept id=\"p1\">**</ept>."
    },
    {
      "content": "Search for \"Application Insights\"",
      "pos": [
        1857,
        1890
      ]
    },
    {
      "content": "Get the prerelease version of the appropriate adapter",
      "pos": [
        1898,
        1951
      ]
    },
    {
      "content": "Select the appropriate package - one of:",
      "pos": [
        2022,
        2062
      ]
    },
    {
      "content": "Microsoft.ApplicationInsights.TraceListener (to capture System.Diagnostics.Trace calls)",
      "pos": [
        2067,
        2154
      ]
    },
    {
      "content": "Microsoft.ApplicationInsights.NLogTarget",
      "pos": [
        2159,
        2199
      ]
    },
    {
      "content": "Microsoft.ApplicationInsights.Log4NetAppender",
      "pos": [
        2204,
        2249
      ]
    },
    {
      "content": "The NuGet package installs the necessary assemblies, and also modifies web.config or app.config.",
      "pos": [
        2251,
        2347
      ]
    },
    {
      "content": "Insert diagnostic log calls",
      "pos": [
        2354,
        2381
      ]
    },
    {
      "content": "If you use System.Diagnostics.Trace, a typical call would be:",
      "pos": [
        2383,
        2444
      ]
    },
    {
      "content": "If you prefer log4net or NLog:",
      "pos": [
        2520,
        2550
      ]
    },
    {
      "content": "Using the Trace API directly",
      "pos": [
        2604,
        2632
      ]
    },
    {
      "content": "You can call the Application Insights trace API directly.",
      "pos": [
        2634,
        2691
      ]
    },
    {
      "content": "The logging adapters use this API.",
      "pos": [
        2692,
        2726
      ]
    },
    {
      "content": "For example:",
      "pos": [
        2729,
        2741
      ]
    },
    {
      "content": "An advantage of TrackTrace is that you can put relatively long data in the message.",
      "pos": [
        2873,
        2956
      ]
    },
    {
      "content": "For example, you could encode POST data there.",
      "pos": [
        2957,
        3003
      ]
    },
    {
      "content": "Explore your logs",
      "pos": [
        3010,
        3027
      ]
    },
    {
      "content": "In your app's overview blade in [the Application Insights portal][portal], choose [Search][diagnostic].",
      "pos": [
        3029,
        3132
      ]
    },
    {
      "content": "In Application Insights, choose Search",
      "pos": [
        3136,
        3174
      ]
    },
    {
      "content": "Diagnostic Search",
      "pos": [
        3246,
        3263
      ]
    },
    {
      "content": "You can, for example:",
      "pos": [
        3326,
        3347
      ]
    },
    {
      "content": "Filter on log traces, or on items with specific properties",
      "pos": [
        3351,
        3409
      ]
    },
    {
      "content": "Inspect a specific item in detail.",
      "pos": [
        3412,
        3446
      ]
    },
    {
      "content": "Find other telemetry relating to the same user request (that is, with the same OperationId)",
      "pos": [
        3449,
        3540
      ]
    },
    {
      "content": "Save the configuration of this page as a Favorite",
      "pos": [
        3544,
        3593
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        3599,
        3609
      ]
    },
    {
      "content": "[Diagnose failures and exceptions in ASP.NET][exceptions]",
      "pos": [
        3611,
        3668
      ]
    },
    {
      "content": "[Learn more about Diagnostic Search][diagnostic].",
      "pos": [
        3670,
        3719
      ]
    },
    {
      "content": "Troubleshooting",
      "pos": [
        3726,
        3741
      ]
    },
    {
      "pos": [
        3747,
        3822
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"emptykey\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>I get an error \"Instrumentation key cannot be empty\""
    },
    {
      "content": "Looks like you installed the logging adapter Nuget package without installing Application Insights.",
      "pos": [
        3824,
        3923
      ]
    },
    {
      "content": "In Solution Explorer, right-click <ph id=\"ph1\">`ApplicationInsights.config`</ph> and choose <bpt id=\"p1\">**</bpt>Update Application Insights<ept id=\"p1\">**</ept>.",
      "pos": [
        3925,
        4031
      ]
    },
    {
      "content": "You'll get a dialog that invites you to sign in to Azure and either create an Application Insights resource, or re-use an existing one.",
      "pos": [
        4032,
        4167
      ]
    },
    {
      "content": "That should fix it.",
      "pos": [
        4168,
        4187
      ]
    },
    {
      "content": "I can see traces in diagnostic search, but not the other events",
      "pos": [
        4193,
        4256
      ]
    },
    {
      "content": "It can sometimes take a while for all the events and requests to get through the pipeline.",
      "pos": [
        4258,
        4348
      ]
    },
    {
      "pos": [
        4354,
        4401
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"limits\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How much data is retained?"
    },
    {
      "content": "Up to 500 events per second from each application.",
      "pos": [
        4403,
        4453
      ]
    },
    {
      "content": "Events are retained for seven days.",
      "pos": [
        4454,
        4489
      ]
    },
    {
      "pos": [
        4494,
        4522
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"add\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Next steps"
    },
    {
      "content": "[Set up availability and responsiveness tests][availability]",
      "pos": [
        4526,
        4586
      ]
    },
    {
      "content": "[Troubleshooting][qna]",
      "pos": [
        4589,
        4611
      ]
    },
    {
      "content": "test",
      "pos": [
        4919,
        4923
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Explore .NET trace logs in Application Insights\" \n    description=\"Search logs generated with Trace, NLog, or Log4Net.\" \n    services=\"application-insights\" \n    documentationCenter=\".net\"\n    authors=\"alancameronwills\" \n    manager=\"douge\"/>\n\n<tags \n    ms.service=\"application-insights\" \n    ms.workload=\"tbd\" \n    ms.tgt_pltfrm=\"ibiza\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"08/19/2015\" \n    ms.author=\"awills\"/>\n \n# Explore .NET trace logs in Application Insights  \n\nIf you use NLog, log4Net or System.Diagnostics.Trace for diagnostic tracing in your ASP.NET application, you can have your logs sent to [Visual Studio Application Insights][start], where you can explore and search them. Your logs will be merged with the other telemetry coming from your application, so that you can identify the traces associated with servicing each user request, and correlate them with other events and exception reports.\n\n> [AZURE.NOTE] Do you need the log capture module? It's a useful adapter for 3rd-party loggers, but if you aren't already using NLog, log4Net or System.Diagnostics.Trace, consider just calling [Application Insights TrackTrace()](app-insights-api-custom-events-metrics.md#track-trace) directly.\n\nIf you haven't yet [set up Application Insights for your project][start], do that now. Your project should have the file `ApplicationInsights.config` and the NuGet package `Microsoft.ApplicationInsights.Web`.\n\n\n##  Install an adapter for your logging framework\n\nIf you use a logging framework - log4Net, NLog or System.Diagnostics.Trace - you can install an adapter that sends these logs to Application Insights along with other telemetry. \n\n1. If you plan to use log4Net or NLog, install it in your project. \n2. In Solution Explorer, right-click your project and choose **Manage NuGet Packages**.\n3. Search for \"Application Insights\"\n\n    ![Get the prerelease version of the appropriate adapter](./media/app-insights-asp-net-trace-logs/appinsights-36nuget.png)\n\n4. Select the appropriate package - one of:\n  + Microsoft.ApplicationInsights.TraceListener (to capture System.Diagnostics.Trace calls)\n  + Microsoft.ApplicationInsights.NLogTarget\n  + Microsoft.ApplicationInsights.Log4NetAppender\n\nThe NuGet package installs the necessary assemblies, and also modifies web.config or app.config.\n\n#### Insert diagnostic log calls\n\nIf you use System.Diagnostics.Trace, a typical call would be:\n\n    System.Diagnostics.Trace.TraceWarning(\"Slow response - database01\");\n\nIf you prefer log4net or NLog:\n\n    logger.Warn(\"Slow response - database01\");\n\n\n## Using the Trace API directly\n\nYou can call the Application Insights trace API directly. The logging adapters use this API. \n\nFor example:\n\n    var telemetry = new Microsoft.ApplicationInsights.TelemetryClient();\n    telemetry.TrackTrace(\"Slow response - database01\");\n\nAn advantage of TrackTrace is that you can put relatively long data in the message. For example, you could encode POST data there. \n\n\n## Explore your logs\n\nIn your app's overview blade in [the Application Insights portal][portal], choose [Search][diagnostic].\n\n![In Application Insights, choose Search](./media/app-insights-asp-net-trace-logs/020-diagnostic-search.png)\n\n![Diagnostic Search](./media/app-insights-asp-net-trace-logs/10-diagnostics.png)\n\nYou can, for example:\n\n* Filter on log traces, or on items with specific properties\n* Inspect a specific item in detail.\n* Find other telemetry relating to the same user request (that is, with the same OperationId) \n* Save the configuration of this page as a Favorite\n\n\n## Next steps\n\n[Diagnose failures and exceptions in ASP.NET][exceptions]\n\n[Learn more about Diagnostic Search][diagnostic].\n\n\n\n## Troubleshooting\n\n### <a name=\"emptykey\"></a>I get an error \"Instrumentation key cannot be empty\"\n\nLooks like you installed the logging adapter Nuget package without installing Application Insights.\n\nIn Solution Explorer, right-click `ApplicationInsights.config` and choose **Update Application Insights**. You'll get a dialog that invites you to sign in to Azure and either create an Application Insights resource, or re-use an existing one. That should fix it.\n\n### I can see traces in diagnostic search, but not the other events\n\nIt can sometimes take a while for all the events and requests to get through the pipeline.\n\n### <a name=\"limits\"></a>How much data is retained?\n\nUp to 500 events per second from each application. Events are retained for seven days.\n\n## <a name=\"add\"></a>Next steps\n\n* [Set up availability and responsiveness tests][availability]\n* [Troubleshooting][qna]\n\n\n\n\n\n<!--Link references-->\n\n[availability]: app-insights-monitor-web-app-availability.md\n[diagnostic]: app-insights-diagnostic-search.md\n[exceptions]: app-insights-web-failures-exceptions.md\n[portal]: http://portal.azure.com/\n[qna]: app-insights-troubleshoot-faq.md\n[start]: app-insights-get-started.md\n\n \ntest\n"
}