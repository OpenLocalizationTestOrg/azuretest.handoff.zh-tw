<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Develop a Service Fabric service</source>
          <target state="new">Develop a Service Fabric service</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Conceptual information and tutorials that help you understand how to develop a Service Fabric service using the Reliable Actor or Reliable Services programming models.</source>
          <target state="new">Conceptual information and tutorials that help you understand how to develop a Service Fabric service using the Reliable Actor or Reliable Services programming models.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Develop a Service Fabric service</source>
          <target state="new">Develop a Service Fabric service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This page has links to overview and conceptual articles and tutorial to help you learn to develop a Service Fabric service.</source>
          <target state="new">This page has links to overview and conceptual articles and tutorial to help you learn to develop a Service Fabric service.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Service Fabric offers two high-level programming models for building services: the reliable actor APIs and the reliable services APIs.</source>
          <target state="new">Service Fabric offers two high-level programming models for building services: the reliable actor APIs and the reliable services APIs.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>While both are built on the same Service Fabric core, they make different trade-offs between simplicity and flexibility in terms of concurrency, partitioning, and communication.</source>
          <target state="new">While both are built on the same Service Fabric core, they make different trade-offs between simplicity and flexibility in terms of concurrency, partitioning, and communication.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It is useful to understand both models so that you can choose the appropriate framework for a particular service within your application.</source>
          <target state="new">It is useful to understand both models so that you can choose the appropriate framework for a particular service within your application.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Choose a Programming Model</source>
          <target state="new">Choose a Programming Model</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Introduction to the Service Fabric Actor Model</source>
          <target state="new">Introduction to the Service Fabric Actor Model</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Reliable Service Programming Model Introduction</source>
          <target state="new">Reliable Service Programming Model Introduction</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Reliable Actor programming model</source>
          <target state="new">Reliable Actor programming model</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Reliable Actors provide an asynchronous, single-threaded actor model.</source>
          <target state="new">Reliable Actors provide an asynchronous, single-threaded actor model.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The actors represent the unit of state and computation that are distributed throughout the cluster to achieve high scalability.</source>
          <target state="new">The actors represent the unit of state and computation that are distributed throughout the cluster to achieve high scalability.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Reliable Actor model leverages the distributed store provided by underlying Service Fabric platform to provide highly available and consistent state management for the application developers.</source>
          <target state="new">Reliable Actor model leverages the distributed store provided by underlying Service Fabric platform to provide highly available and consistent state management for the application developers.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To learn more, read:</source>
          <target state="new">To learn more, read:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Get started with Reliable Actors</source>
          <target state="new">Get started with Reliable Actors</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Actor lifecycle and Garbage Collection</source>
          <target state="new">Actor lifecycle and Garbage Collection</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>How Fabric Actors use the Service Fabric platform</source>
          <target state="new">How Fabric Actors use the Service Fabric platform</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Notes on Azure Service Fabric Actors type serialization</source>
          <target state="new">Notes on Azure Service Fabric Actors type serialization</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Communicating with Actors is described in:</source>
          <target state="new">Communicating with Actors is described in:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to the Service Fabric Actor Model<ept id="p1">](service-fabric-reliable-actors-introduction.md#actor-communication)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Introduction to the Service Fabric Actor Model<ept id="p1">](service-fabric-reliable-actors-introduction.md#actor-communication)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Communicating with services</source>
          <target state="new">Communicating with services</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>These articles discuss useful design patterns and scenarios:</source>
          <target state="new">These articles discuss useful design patterns and scenarios:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Actor Model Design Patterns</source>
          <target state="new">Actor Model Design Patterns</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Pattern: Smart Cache</source>
          <target state="new">Pattern: Smart Cache</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Pattern: Distributed Networks and Graphs</source>
          <target state="new">Pattern: Distributed Networks and Graphs</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Pattern: Resource Governance</source>
          <target state="new">Pattern: Resource Governance</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Pattern: Stateful Service Composition</source>
          <target state="new">Pattern: Stateful Service Composition</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Pattern: Internet of Things</source>
          <target state="new">Pattern: Internet of Things</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Pattern: Distributed Computation</source>
          <target state="new">Pattern: Distributed Computation</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Some Anti-patterns</source>
          <target state="new">Some Anti-patterns</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A simple turn-based concurrency is provided for Reliable Actor methods.</source>
          <target state="new">A simple turn-based concurrency is provided for Reliable Actor methods.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Concurrency, timers and reminders, and reentrancy are described in these articles:</source>
          <target state="new">Concurrency, timers and reminders, and reentrancy are described in these articles:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Concurrency</source>
          <target state="new">Concurrency</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Events and performance counters related to concurrency</source>
          <target state="new">Events and performance counters related to concurrency</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Actor Reentrancy</source>
          <target state="new">Actor Reentrancy</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Actor Timers</source>
          <target state="new">Actor Timers</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Information on configuring Reliable Actors is found here:</source>
          <target state="new">Information on configuring Reliable Actors is found here:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>KVSActorStateProvider Configuration</source>
          <target state="new">KVSActorStateProvider Configuration</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Configuring Reliable Actors - ReliableDictionaryActorStateProvider</source>
          <target state="new">Configuring Reliable Actors - ReliableDictionaryActorStateProvider</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Reliable Actors emit events and performance counters, which can be used to diagnose and monitor your service:</source>
          <target state="new">Reliable Actors emit events and performance counters, which can be used to diagnose and monitor your service:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Actor Diagnostics</source>
          <target state="new">Actor Diagnostics</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Actor Events</source>
          <target state="new">Actor Events</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Reliable Service programming model</source>
          <target state="new">Reliable Service programming model</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Reliable Services gives you a simple, powerful, top-level programming model to help you express what is important to your application.</source>
          <target state="new">Reliable Services gives you a simple, powerful, top-level programming model to help you express what is important to your application.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To learn more, read:</source>
          <target state="new">To learn more, read:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Get started with Reliable Services</source>
          <target state="new">Get started with Reliable Services</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Programming Model Overview</source>
          <target state="new">Programming Model Overview</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="new">Architecture</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Reliable Collections</source>
          <target state="new">Reliable Collections</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Configuring Stateful Reliable Services</source>
          <target state="new">Configuring Stateful Reliable Services</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Reliable Services Programming Model Advanced Usage</source>
          <target state="new">Reliable Services Programming Model Advanced Usage</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Communicating with Reliable Services and the abstractions which clients can use to discover and communicate with the service endpoints are described in the following:</source>
          <target state="new">Communicating with Reliable Services and the abstractions which clients can use to discover and communicate with the service endpoints are described in the following:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Communicating with services</source>
          <target state="new">Communicating with services</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Service Communication Model</source>
          <target state="new">Service Communication Model</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Default communication stack provided by Reliable Services Framework</source>
          <target state="new">Default communication stack provided by Reliable Services Framework</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>WCF based communication stack for Reliable Services</source>
          <target state="new">WCF based communication stack for Reliable Services</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Getting Started with Microsoft Azure Service Fabric Web API services with OWIN self-host (VS 2015 RC)</source>
          <target state="new">Getting Started with Microsoft Azure Service Fabric Web API services with OWIN self-host (VS 2015 RC)</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Reliable Services emit events and performance counters, which can be used to diagnose and monitor your service:</source>
          <target state="new">Reliable Services emit events and performance counters, which can be used to diagnose and monitor your service:</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Stateful Reliable Service Diagnostics</source>
          <target state="new">Stateful Reliable Service Diagnostics</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bec4c2e9b4c471d0d541c0aed2ce1ac40cc22482</xliffext:olfilehash>
  </header>
</xliff>