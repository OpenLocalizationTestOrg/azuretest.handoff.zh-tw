<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a geospatial search app using Azure Search</source>
          <target state="new">Create a geospatial search app using Azure Search</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create a geospatial search app using Bing and Azure Search</source>
          <target state="new">Create a geospatial search app using Bing and Azure Search</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create a geospatial search app using Azure Search</source>
          <target state="new">Create a geospatial search app using Azure Search</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates how to add geospatial search to web applications using Azure Search and Bing Maps.</source>
          <target state="new">This tutorial demonstrates how to add geospatial search to web applications using Azure Search and Bing Maps.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Using geo-search, you can find search targets within a certain distance of a point (such as finding all restaurants within 5 KM of my current location).</source>
          <target state="new">Using geo-search, you can find search targets within a certain distance of a point (such as finding all restaurants within 5 KM of my current location).</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The geo-spatial capability in Azure Search supports commonly used mapping techniques.</source>
          <target state="new">The geo-spatial capability in Azure Search supports commonly used mapping techniques.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, if you want to use polygon shapes in a real estate app showing houses for sale within a polygon boundary, you can easily do that using either OData or our simple search syntax.</source>
          <target state="new">For example, if you want to use polygon shapes in a real estate app showing houses for sale within a polygon boundary, you can easily do that using either OData or our simple search syntax.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more overview, watch this Channel 9 video about <bpt id="p1">[</bpt>Azure Search and Geospatial Data<ept id="p1">](http://channel9.msdn.com/Shows/Data-Exposed/Azure-Search-and-Geospatial-Data)</ept>.</source>
          <target state="new">For more overview, watch this Channel 9 video about <bpt id="p1">[</bpt>Azure Search and Geospatial Data<ept id="p1">](http://channel9.msdn.com/Shows/Data-Exposed/Azure-Search-and-Geospatial-Data)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To create the application, we'll leverage the Bing mapping service to geocode addresses loaded from a CSV file, and then store the resulting data in a Search index.</source>
          <target state="new">To create the application, we'll leverage the Bing mapping service to geocode addresses loaded from a CSV file, and then store the resulting data in a Search index.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This tutorial builds on the <bpt id="p1">[</bpt>Azure Search – Adventure Works Demo<ept id="p1">](http://azuresearchadventureworksdemo.codeplex.com)</ept>.</source>
          <target state="new">This tutorial builds on the <bpt id="p1">[</bpt>Azure Search – Adventure Works Demo<ept id="p1">](http://azuresearchadventureworksdemo.codeplex.com)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you haven’t walked through that demo yet, start there to get some experience in creating an index and calling the Azure Search API from a web app.</source>
          <target state="new">If you haven’t walked through that demo yet, start there to get some experience in creating an index and calling the Azure Search API from a web app.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Visual Studio 2012 or higher with ASP.NET MVC 4 and SQL Server installed.</source>
          <target state="new">Visual Studio 2012 or higher with ASP.NET MVC 4 and SQL Server installed.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can download the free Express editions if you don't already have the software installed: <bpt id="p1">[</bpt>Visual Studio 2013 Express<ept id="p1">](http://www.visualstudio.com/products/visual-studio-express-vs.aspx)</ept> and <bpt id="p2">[</bpt>Microsoft SQL Server 2014 Express<ept id="p2">](http://msdn.microsoft.com/evalcenter/dn434042.aspx)</ept>.</source>
          <target state="new">You can download the free Express editions if you don't already have the software installed: <bpt id="p1">[</bpt>Visual Studio 2013 Express<ept id="p1">](http://www.visualstudio.com/products/visual-studio-express-vs.aspx)</ept> and <bpt id="p2">[</bpt>Microsoft SQL Server 2014 Express<ept id="p2">](http://msdn.microsoft.com/evalcenter/dn434042.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An Azure Search service.</source>
          <target state="new">An Azure Search service.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You'll need the Search service name, plus the admin key.</source>
          <target state="new">You'll need the Search service name, plus the admin key.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service-portal.md)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create an Azure Search service in the portal<ept id="p1">](search-create-service-portal.md)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A Bing map service and a key to access it.</source>
          <target state="new">A Bing map service and a key to access it.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Instructions are provided in the next section</source>
          <target state="new">Instructions are provided in the next section</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure Search GeoSearch Sample on CodePlex<ept id="p1">](https://azuresearchgeospatial.codeplex.com/)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Azure Search GeoSearch Sample on CodePlex<ept id="p1">](https://azuresearchgeospatial.codeplex.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>On the Source tab, click <bpt id="p1">**</bpt>Download<ept id="p1">**</ept> to get a zip file of the solution.</source>
          <target state="new">On the Source tab, click <bpt id="p1">**</bpt>Download<ept id="p1">**</ept> to get a zip file of the solution.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This solution contains two projects:</source>
          <target state="new">This solution contains two projects:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StoreIndexer<ept id="p1">**</ept> creates an Azure Search index and loads data.</source>
          <target state="new"><bpt id="p1">**</bpt>StoreIndexer<ept id="p1">**</ept> creates an Azure Search index and loads data.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AdventureWorksWebGeo<ept id="p1">**</ept> is an MVC4-based application that queries the Azure Search index and shows store locations on a Bing map.</source>
          <target state="new"><bpt id="p1">**</bpt>AdventureWorksWebGeo<ept id="p1">**</ept> is an MVC4-based application that queries the Azure Search index and shows store locations on a Bing map.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>[AZURE.INCLUDE <bpt id="p1">[</bpt>You need an Azure account to complete this tutorial:<ept id="p1">](../../includes/free-trial-note.md)</ept>]</source>
          <target state="new">[AZURE.INCLUDE <bpt id="p1">[</bpt>You need an Azure account to complete this tutorial:<ept id="p1">](../../includes/free-trial-note.md)</ept>]</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Bing Maps</source>
          <target state="new">Bing Maps</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>We are going to use the Bing Maps API for two things.</source>
          <target state="new">We are going to use the Bing Maps API for two things.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Geocoding Addresses:<ept id="p1">**</ept> In the data, we have addresses (city, state, zip), but we also want the longitude and latitude coordinates of an address so that we can do geospatial searches.</source>
          <target state="new"><bpt id="p1">**</bpt>Geocoding Addresses:<ept id="p1">**</ept> In the data, we have addresses (city, state, zip), but we also want the longitude and latitude coordinates of an address so that we can do geospatial searches.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To get the cooridnates, we'll use the Bing Maps DataFlow API to send up a batch of addresses for geocoding.</source>
          <target state="new">To get the cooridnates, we'll use the Bing Maps DataFlow API to send up a batch of addresses for geocoding.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Using the Bing Trial account, we are limited to 50 addresses at one time, but that will be sufficient for this tutorial.</source>
          <target state="new">Using the Bing Trial account, we are limited to 50 addresses at one time, but that will be sufficient for this tutorial.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bing Maps:<ept id="p1">**</ept> When the app runs, we’ll use Bing Maps to display store locations, overlayed on top of a Bing Map.</source>
          <target state="new"><bpt id="p1">**</bpt>Bing Maps:<ept id="p1">**</ept> When the app runs, we’ll use Bing Maps to display store locations, overlayed on top of a Bing Map.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Create an account for Bing Maps</source>
          <target state="new">Create an account for Bing Maps</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Go to the <bpt id="p1">[</bpt>Bing Maps Portal<ept id="p1">](https://www.bingmapsportal.com/)</ept> and create a new account.</source>
          <target state="new">Go to the <bpt id="p1">[</bpt>Bing Maps Portal<ept id="p1">](https://www.bingmapsportal.com/)</ept> and create a new account.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Enter the details to create the account.</source>
          <target state="new">Enter the details to create the account.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>After the account is created, choose <bpt id="p1">**</bpt>Create or view keys<ept id="p1">**</ept> and enter the details to create a key.</source>
          <target state="new">After the account is created, choose <bpt id="p1">**</bpt>Create or view keys<ept id="p1">**</ept> and enter the details to create a key.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For this demo, you can choose <bpt id="p1">**</bpt>Trial Key<ept id="p1">**</ept>.</source>
          <target state="new">For this demo, you can choose <bpt id="p1">**</bpt>Trial Key<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>you should see the key details for your Bing maps application.</source>
          <target state="new">you should see the key details for your Bing maps application.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Make a note of this key, as we will be using it later.</source>
          <target state="new">Make a note of this key, as we will be using it later.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Geocoding Addresses in C# using Bing Maps DataFlow API</source>
          <target state="new">Geocoding Addresses in C# using Bing Maps DataFlow API</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In this step, we use the Bing Maps DataFlow API to geocode some addresses for various bike stores around the world.</source>
          <target state="new">In this step, we use the Bing Maps DataFlow API to geocode some addresses for various bike stores around the world.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This data comes from a CSV file called store_locations.csv located in the source you downloaded earlier.</source>
          <target state="new">This data comes from a CSV file called store_locations.csv located in the source you downloaded earlier.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you open up this file in a text editor or Excel, you’ll see that it has an ID column for each store, the name of the store, and its address.</source>
          <target state="new">If you open up this file in a text editor or Excel, you’ll see that it has an ID column for each store, the name of the store, and its address.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Let's walk through the code that explains how this works.</source>
          <target state="new">Let's walk through the code that explains how this works.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Open the AdventureWorksGeo solution in Visual Studio, expand the project <bpt id="p1">**</bpt>StoreIndexer<ept id="p1">**</ept> in the Solution Explorer and open Program.cs.</source>
          <target state="new">Open the AdventureWorksGeo solution in Visual Studio, expand the project <bpt id="p1">**</bpt>StoreIndexer<ept id="p1">**</ept> in the Solution Explorer and open Program.cs.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Since we already covered index creation in the <bpt id="p1">[</bpt>Azure Search – Adventure Works Demo<ept id="p1">](http://azuresearchadventureworksdemo.codeplex.com/)</ept>, we'll skip the discussion on how that works in Program.cs.</source>
          <target state="new">Since we already covered index creation in the <bpt id="p1">[</bpt>Azure Search – Adventure Works Demo<ept id="p1">](http://azuresearchadventureworksdemo.codeplex.com/)</ept>, we'll skip the discussion on how that works in Program.cs.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Go to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> function and notice that it calls <bpt id="p2">**</bpt>ApplyStoreData<ept id="p2">**</ept>.</source>
          <target state="new">Go to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> function and notice that it calls <bpt id="p2">**</bpt>ApplyStoreData<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Move to this function and walk through the code.</source>
          <target state="new">Move to this function and walk through the code.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ApplyStoreData<ept id="p1">**</ept> loads data from a CSV file called "store_locations.csv" into a System.Data.DataTable.</source>
          <target state="new"><bpt id="p1">**</bpt>ApplyStoreData<ept id="p1">**</ept> loads data from a CSV file called "store_locations.csv" into a System.Data.DataTable.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This file contains all of the stores, including their addresses we want to load into Azure Search.</source>
          <target state="new">This file contains all of the stores, including their addresses we want to load into Azure Search.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>By iterating through each row in this file, we can create a set of <bpt id="p1">**</bpt>indexOperations<ept id="p1">**</ept> that are then inserted into an Azure Search index (previously created in the <bpt id="p2">**</bpt>CreateStoresIndex()<ept id="p2">**</ept> function).</source>
          <target state="new">By iterating through each row in this file, we can create a set of <bpt id="p1">**</bpt>indexOperations<ept id="p1">**</ept> that are then inserted into an Azure Search index (previously created in the <bpt id="p2">**</bpt>CreateStoresIndex()<ept id="p2">**</ept> function).</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you look carefully at the index afterwards, you will notice that the <bpt id="p1">**</bpt>GeoPt<ept id="p1">**</ept> field that will contain the longitude and latitude of each store is empty.</source>
          <target state="new">If you look carefully at the index afterwards, you will notice that the <bpt id="p1">**</bpt>GeoPt<ept id="p1">**</ept> field that will contain the longitude and latitude of each store is empty.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This leads us to the next step of the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> function.</source>
          <target state="new">This leads us to the next step of the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> function.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Move to the function <bpt id="p1">**</bpt>ExtractAddressInfoToXML()<ept id="p1">**</ept>.</source>
          <target state="new">Move to the function <bpt id="p1">**</bpt>ExtractAddressInfoToXML()<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This function extracts the address information from the store_locations.csv file and loads it into an XML file that is formatted in a way that Bing Maps can accept for geocoding.</source>
          <target state="new">This function extracts the address information from the store_locations.csv file and loads it into an XML file that is formatted in a way that Bing Maps can accept for geocoding.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Once the file is created, it is then sent for processing to Bing Maps DataFlow by calling the function <bpt id="p1">**</bpt>GeoCoding.CreateJob<ept id="p1">**</ept>.</source>
          <target state="new">Once the file is created, it is then sent for processing to Bing Maps DataFlow by calling the function <bpt id="p1">**</bpt>GeoCoding.CreateJob<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Since the process of geocoding can take some time, there is a loop that calls <bpt id="p1">**</bpt>GeoCoding.CheckStatus<ept id="p1">**</ept> every 10 seconds to see if the job is complete.</source>
          <target state="new">Since the process of geocoding can take some time, there is a loop that calls <bpt id="p1">**</bpt>GeoCoding.CheckStatus<ept id="p1">**</ept> every 10 seconds to see if the job is complete.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Once complete, the results are downloaded by calling <bpt id="p1">**</bpt>GeoCoding.DownloadResults<ept id="p1">**</ept> into an addresses class.</source>
          <target state="new">Once complete, the results are downloaded by calling <bpt id="p1">**</bpt>GeoCoding.DownloadResults<ept id="p1">**</ept> into an addresses class.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The final step is to take these geocoded addresses and send them up to Azure Search.</source>
          <target state="new">The final step is to take these geocoded addresses and send them up to Azure Search.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Let's take a closer look at how this is done by opening the <bpt id="p1">**</bpt>UpdateStoreData<ept id="p1">**</ept> function.</source>
          <target state="new">Let's take a closer look at how this is done by opening the <bpt id="p1">**</bpt>UpdateStoreData<ept id="p1">**</ept> function.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>UpdateStoreData<ept id="p1">**</ept> uses the action <bpt id="p2">**</bpt>@search.action: merge<ept id="p2">**</ept> to update the location field of type Edm.GeographyPoint with the geocoded longitude and latitude coordinates that were just downloaded from Bing Maps.</source>
          <target state="new"><bpt id="p1">**</bpt>UpdateStoreData<ept id="p1">**</ept> uses the action <bpt id="p2">**</bpt>@search.action: merge<ept id="p2">**</ept> to update the location field of type Edm.GeographyPoint with the geocoded longitude and latitude coordinates that were just downloaded from Bing Maps.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>It does this by looking up the storeId which is the unique key for the document in the "stores" index and merging this new data into the existing document.</source>
          <target state="new">It does this by looking up the storeId which is the unique key for the document in the "stores" index and merging this new data into the existing document.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Before running the application, add your Azure Search and Bing Maps API information by opening App.config and update the values for "SearchServiceName", "SearchServiceApiKey" and "BingMapsAPI" to those of your Azure Search service and Bing Maps API.</source>
          <target state="new">Before running the application, add your Azure Search and Bing Maps API information by opening App.config and update the values for "SearchServiceName", "SearchServiceApiKey" and "BingMapsAPI" to those of your Azure Search service and Bing Maps API.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For Search service name, if your service is "mysearch.search.windows.net", you would enter "mysearch".</source>
          <target state="new">For Search service name, if your service is "mysearch.search.windows.net", you would enter "mysearch".</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Right-click on the <bpt id="p1">**</bpt>StoreIndexer<ept id="p1">**</ept> project and choose <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> | <bpt id="p3">**</bpt>Start New Instance<ept id="p3">**</ept> to run it.</source>
          <target state="new">Right-click on the <bpt id="p1">**</bpt>StoreIndexer<ept id="p1">**</ept> project and choose <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> | <bpt id="p3">**</bpt>Start New Instance<ept id="p3">**</ept> to run it.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Add Mapping to an MVC4 Application using Azure Search and Bing Maps</source>
          <target state="new">Add Mapping to an MVC4 Application using Azure Search and Bing Maps</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In this step, you'll build and run the search application in a web browser that will load search for stores and then plot them on top of a Bing Map.</source>
          <target state="new">In this step, you'll build and run the search application in a web browser that will load search for stores and then plot them on top of a Bing Map.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open up the Azure Search Demo Solution named AdventureWorksGeo.sln.</source>
          <target state="new">In Visual Studio, open up the Azure Search Demo Solution named AdventureWorksGeo.sln.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>AdventureWorksWebGeo<ept id="p1">**</ept> in the Solution Explorer and select <bpt id="p2">**</bpt>Set as startup project<ept id="p2">**</ept>.</source>
          <target state="new">Right-click <bpt id="p1">**</bpt>AdventureWorksWebGeo<ept id="p1">**</ept> in the Solution Explorer and select <bpt id="p2">**</bpt>Set as startup project<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Open Web.config in this project and update the values for "SearchServiceName", "SearchServiceApiKey" and "BingMapsAPI" to those of your Azure Search service and Bing Maps API.</source>
          <target state="new">Open Web.config in this project and update the values for "SearchServiceName", "SearchServiceApiKey" and "BingMapsAPI" to those of your Azure Search service and Bing Maps API.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For Search service name, if your service is "mysearch.search.windows.net", you would enter "mysearch".</source>
          <target state="new">For Search service name, if your service is "mysearch.search.windows.net", you would enter "mysearch".</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Save Web.config.</source>
          <target state="new">Save Web.config.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> to launch the project.</source>
          <target state="new">Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> to launch the project.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Follow these <bpt id="p1">[</bpt>Troubleshooting<ept id="p1">](#err-mvc)</ept> steps if you get a build error.</source>
          <target state="new">Follow these <bpt id="p1">[</bpt>Troubleshooting<ept id="p1">](#err-mvc)</ept> steps if you get a build error.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Notice how the stores are overlayed as points on the map.</source>
          <target state="new">Notice how the stores are overlayed as points on the map.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Click on one of the stores and you will see a pop-up that outlines the details of the store.</source>
          <target state="new">Click on one of the stores and you will see a pop-up that outlines the details of the store.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>All of this information is coming from an Azure Search index called "stores" that was created in the previous steps.</source>
          <target state="new">All of this information is coming from an Azure Search index called "stores" that was created in the previous steps.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Explore AdventureWorksWebGeo</source>
          <target state="new">Explore AdventureWorksWebGeo</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The project <bpt id="p1">**</bpt>AdventureWorksWebGeo<ept id="p1">**</ept> shows us how ASP.NET MVC 4 can be used to interact with Azure Search to build a mapping application that leverages geosearch.</source>
          <target state="new">The project <bpt id="p1">**</bpt>AdventureWorksWebGeo<ept id="p1">**</ept> shows us how ASP.NET MVC 4 can be used to interact with Azure Search to build a mapping application that leverages geosearch.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In this section, we'll review individual parts of the application code to see what they do.</source>
          <target state="new">In this section, we'll review individual parts of the application code to see what they do.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, expand <bpt id="p1">**</bpt>AdventureWorksWebGeo<ept id="p1">**</ept> | <bpt id="p2">**</bpt>Controller<ept id="p2">**</ept> and open HomeController.cs.</source>
          <target state="new">In Solution Explorer, expand <bpt id="p1">**</bpt>AdventureWorksWebGeo<ept id="p1">**</ept> | <bpt id="p2">**</bpt>Controller<ept id="p2">**</ept> and open HomeController.cs.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Index()<ept id="p1">**</ept> function is called when the application starts and the Index page loads.</source>
          <target state="new">The <bpt id="p1">**</bpt>Index()<ept id="p1">**</ept> function is called when the application starts and the Index page loads.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In this function the Bing Maps API is loaded from the Web.config and passed to the Index view as ViewBag.BingAPI.</source>
          <target state="new">In this function the Bing Maps API is loaded from the Web.config and passed to the Index view as ViewBag.BingAPI.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Open Index.cshtml from <bpt id="p1">**</bpt>Views<ept id="p1">**</ept> | <bpt id="p2">**</bpt>Home<ept id="p2">**</ept>.</source>
          <target state="new">Open Index.cshtml from <bpt id="p1">**</bpt>Views<ept id="p1">**</ept> | <bpt id="p2">**</bpt>Home<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This file follows the typical way that you would add Bing Maps to a web application, however a few things to point out are:</source>
          <target state="new">This file follows the typical way that you would add Bing Maps to a web application, however a few things to point out are:</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The ViewBag from the controller is used to load the credentials for the map using: credentials: '@ViewBag.BingAPI'</source>
          <target state="new">The ViewBag from the controller is used to load the credentials for the map using: credentials: '@ViewBag.BingAPI'</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Once the map is loaded a JQuery $.post is made to the HomeController <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> function by referring to: /home/search</source>
          <target state="new">Once the map is loaded a JQuery $.post is made to the HomeController <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> function by referring to: /home/search</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> function retrieves the store locations which are then received and added as PushPins to the Bing Map.</source>
          <target state="new">The <bpt id="p1">**</bpt>Search<ept id="p1">**</ept> function retrieves the store locations which are then received and added as PushPins to the Bing Map.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Open HomeController.cs under <bpt id="p1">**</bpt>Controllers<ept id="p1">**</ept> and look at the <bpt id="p2">**</bpt>Search<ept id="p2">**</ept> function.</source>
          <target state="new">Open HomeController.cs under <bpt id="p1">**</bpt>Controllers<ept id="p1">**</ept> and look at the <bpt id="p2">**</bpt>Search<ept id="p2">**</ept> function.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Notice how it makes a call to _storeSearch.Search(lat, lon, 10000).</source>
          <target state="new">Notice how it makes a call to _storeSearch.Search(lat, lon, 10000).</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This will cause a query to be executed to find all stores within 10,000 KM of the specified latitude (lat) and longitude (lon).</source>
          <target state="new">This will cause a query to be executed to find all stores within 10,000 KM of the specified latitude (lat) and longitude (lon).</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The results of this query are processed and then sent back to the Index view to be processed as PushPins overlayed on the Bing Map.</source>
          <target state="new">The results of this query are processed and then sent back to the Index view to be processed as PushPins overlayed on the Bing Map.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This concludes the demo.</source>
          <target state="new">This concludes the demo.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You have now walked through all of the main operations that you'll need to know before building out a Map based ASP.NET MVC4 application using Azure Search.</source>
          <target state="new">You have now walked through all of the main operations that you'll need to know before building out a Map based ASP.NET MVC4 application using Azure Search.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>How to resolve "Could not load file or assembly 'System.Web.Mvc"</source>
          <target state="new">How to resolve "Could not load file or assembly 'System.Web.Mvc"</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When building AdventureWorksWeb, if you get "Could not load file or assembly 'System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' or one of its dependencies", try these steps to resolve the error.</source>
          <target state="new">When building AdventureWorksWeb, if you get "Could not load file or assembly 'System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' or one of its dependencies", try these steps to resolve the error.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Open the Package Manager Console: <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept> | <bpt id="p2">**</bpt>NuGet Package Manager<ept id="p2">**</ept> | <bpt id="p3">**</bpt>Package Manager Console<ept id="p3">**</ept></source>
          <target state="new">Open the Package Manager Console: <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept> | <bpt id="p2">**</bpt>NuGet Package Manager<ept id="p2">**</ept> | <bpt id="p3">**</bpt>Package Manager Console<ept id="p3">**</ept></target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>At the PM&gt; prompt, enter "Update-package -reinstall Microsoft.AspNet.Mvc"</source>
          <target state="new">At the PM&gt; prompt, enter "Update-package -reinstall Microsoft.AspNet.Mvc"</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When asked to reload the file, choose <bpt id="p1">**</bpt>Yes to All<ept id="p1">**</ept>.</source>
          <target state="new">When asked to reload the file, choose <bpt id="p1">**</bpt>Yes to All<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Rebuild the solution and try <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> again.</source>
          <target state="new">Rebuild the solution and try <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> again.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For additional self-study, consider adding more capabilities to the mapping application.</source>
          <target state="new">For additional self-study, consider adding more capabilities to the mapping application.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For example, you might want to add:</source>
          <target state="new">For example, you might want to add:</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Search box, to allow users to search for specific stores.</source>
          <target state="new">Search box, to allow users to search for specific stores.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Facets to allow users to filter by country or province.</source>
          <target state="new">Facets to allow users to filter by country or province.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>User-drawn selection areas that let users specify regions to be searched by dragging an area on the map.</source>
          <target state="new">User-drawn selection areas that let users specify regions to be searched by dragging an area on the map.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The area is then filtered by Azure Search using the geo-intersect API and plotted on the map.</source>
          <target state="new">The area is then filtered by Azure Search using the geo-intersect API and plotted on the map.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad2fe72bbca2f3592fc1d235559a72f125248968</xliffext:olfilehash>
  </header>
</xliff>