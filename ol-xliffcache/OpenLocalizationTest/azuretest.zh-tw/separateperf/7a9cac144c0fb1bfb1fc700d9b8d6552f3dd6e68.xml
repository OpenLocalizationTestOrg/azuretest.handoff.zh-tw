{
  "nodes": [
    {
      "content": "Connect to SQL Database by using Python on Windows",
      "pos": [
        28,
        78
      ]
    },
    {
      "content": "Presents a Python code sample you can use to connect to Azure SQL Database from a Windows client.",
      "pos": [
        98,
        195
      ]
    },
    {
      "content": "The sample uses the pymssql driver.",
      "pos": [
        196,
        231
      ]
    },
    {
      "content": "Connect to SQL Database by using Python on Windows",
      "pos": [
        560,
        610
      ]
    },
    {
      "content": "This topic presents a code sample written in Python.",
      "pos": [
        778,
        830
      ]
    },
    {
      "content": "The sample runs on a Windows computer.",
      "pos": [
        831,
        869
      ]
    },
    {
      "content": "The sample and connects to Azure SQL Database by using the <bpt id=\"p1\">**</bpt>pymssql<ept id=\"p1\">**</ept> driver.",
      "pos": [
        870,
        948
      ]
    },
    {
      "content": "Requirements",
      "pos": [
        954,
        966
      ]
    },
    {
      "content": "Python 2.7.6",
      "pos": [
        972,
        984
      ]
    },
    {
      "content": "Install the required modules",
      "pos": [
        1041,
        1069
      ]
    },
    {
      "pos": [
        1072,
        1142
      ],
      "content": "Install <bpt id=\"p1\">[</bpt>pymssql<ept id=\"p1\">](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymssql)</ept>."
    },
    {
      "content": "Make sure you choose the correct whl file.",
      "pos": [
        1145,
        1187
      ]
    },
    {
      "content": "For example : If you are using Python 2.7 on a 64 bit machine choose : pymssql‑2.1.1‑cp27‑none‑win_amd64.whl.",
      "pos": [
        1189,
        1298
      ]
    },
    {
      "content": "Once you download the .whl file place it in the the C:/Python27 folder.",
      "pos": [
        1299,
        1370
      ]
    },
    {
      "content": "Now install the pymssql driver using pip from command line.",
      "pos": [
        1372,
        1431
      ]
    },
    {
      "content": "cd into C:/Python27 and run the following",
      "pos": [
        1432,
        1473
      ]
    },
    {
      "pos": [
        1534,
        1662
      ],
      "content": "Instructions to enable the use pip can be found <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](http://stackoverflow.com/questions/4750806/how-to-install-pip-on-windows)</ept>"
    },
    {
      "content": "Create a database and retrieve your connection string",
      "pos": [
        1668,
        1721
      ]
    },
    {
      "content": "See the <bpt id=\"p1\">[</bpt>Getting Started Topic<ept id=\"p1\">](sql-database-get-started.md)</ept> to learn how to create a sample database and retrieve your connection string.",
      "pos": [
        1724,
        1862
      ]
    },
    {
      "content": "It is important you follow the guide to create an <bpt id=\"p1\">**</bpt>AdventureWorks database template<ept id=\"p1\">**</ept>.",
      "pos": [
        1863,
        1950
      ]
    },
    {
      "content": "The samples shown below only work with the <bpt id=\"p1\">**</bpt>AdventureWorks schema<ept id=\"p1\">**</ept>.",
      "pos": [
        1951,
        2020
      ]
    },
    {
      "content": "Connect to your SQL Database",
      "pos": [
        2027,
        2055
      ]
    },
    {
      "pos": [
        2058,
        2171
      ],
      "content": "The <bpt id=\"p1\">[</bpt>pymssql.connect<ept id=\"p1\">](http://pymssql.org/en/latest/ref/pymssql.html)</ept> function is used to connect to SQL Database."
    },
    {
      "content": "Execute an SQL SELECT statement",
      "pos": [
        2350,
        2381
      ]
    },
    {
      "content": "The <bpt id=\"p1\">[</bpt>cursor.execute<ept id=\"p1\">](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.execute)</ept> function can be used to retrieve a result set from a query against SQL Database.",
      "pos": [
        2383,
        2554
      ]
    },
    {
      "content": "This function essentially accepts any query and returns a result set which can be iterated over with the use of <bpt id=\"p1\">[</bpt>cursor.fetchone()<ept id=\"p1\">](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.fetchone)</ept>.",
      "pos": [
        2555,
        2758
      ]
    },
    {
      "content": "Insert a row, pass parameters, and retrieve the generated primary key",
      "pos": [
        3375,
        3444
      ]
    },
    {
      "pos": [
        3446,
        3712
      ],
      "content": "In SQL Database the <bpt id=\"p1\">[</bpt>IDENTITY<ept id=\"p1\">](https://msdn.microsoft.com/library/ms186775.aspx)</ept> property and the <bpt id=\"p2\">[</bpt>SEQUENCE<ept id=\"p2\">](https://msdn.microsoft.com/library/ff878058.aspx)</ept> object can be used to auto-generate <bpt id=\"p3\">[</bpt>primary key<ept id=\"p3\">](https://msdn.microsoft.com/library/ms179610.aspx)</ept> values."
    },
    {
      "content": "Transactions",
      "pos": [
        4249,
        4261
      ]
    },
    {
      "content": "This code example demonstrates the use of transactions in which you:",
      "pos": [
        4264,
        4332
      ]
    },
    {
      "content": "-Begin a transaction",
      "pos": [
        4335,
        4355
      ]
    },
    {
      "content": "-Insert a row of data",
      "pos": [
        4357,
        4378
      ]
    },
    {
      "content": "-Rollback your transaction to undo the insert",
      "pos": [
        4380,
        4425
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Connect to SQL Database by using Python on Windows\" \n    description=\"Presents a Python code sample you can use to connect to Azure SQL Database from a Windows client. The sample uses the pymssql driver.\"\n    services=\"sql-database\" \n    documentationCenter=\"\" \n    authors=\"meet-bhagdev\" \n    manager=\"jeffreyg\" \n    editor=\"\"/>\n\n\n<tags \n    ms.service=\"sql-database\" \n    ms.workload=\"data-management\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"python\" \n    ms.topic=\"article\" \n    ms.date=\"07/20/2015\" \n    ms.author=\"mebha\"/>\n\n\n# Connect to SQL Database by using Python on Windows\n\n\n[AZURE.INCLUDE [sql-database-develop-includes-selector-language-platform-depth](../../includes/sql-database-develop-includes-selector-language-platform-depth.md)]\n\n\nThis topic presents a code sample written in Python. The sample runs on a Windows computer. The sample and connects to Azure SQL Database by using the **pymssql** driver.\n\n\n## Requirements\n\n\n- [Python 2.7.6](https://www.python.org/download/releases/2.7.6/)\n\n\n### Install the required modules\n\n\nInstall [pymssql](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymssql). \n\nMake sure you choose the correct whl file.\n\nFor example : If you are using Python 2.7 on a 64 bit machine choose : pymssql‑2.1.1‑cp27‑none‑win_amd64.whl.\nOnce you download the .whl file place it in the the C:/Python27 folder.\n\nNow install the pymssql driver using pip from command line. cd into C:/Python27 and run the following\n    \n    pip install pymssql‑2.1.1‑cp27‑none‑win_amd64.whl\n\nInstructions to enable the use pip can be found [here](http://stackoverflow.com/questions/4750806/how-to-install-pip-on-windows)\n\n\n## Create a database and retrieve your connection string\n\n\nSee the [Getting Started Topic](sql-database-get-started.md) to learn how to create a sample database and retrieve your connection string. It is important you follow the guide to create an **AdventureWorks database template**. The samples shown below only work with the **AdventureWorks schema**. \n\n\n## Connect to your SQL Database\n\n\nThe [pymssql.connect](http://pymssql.org/en/latest/ref/pymssql.html) function is used to connect to SQL Database.\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.windows.net', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n\n\n## Execute an SQL SELECT statement\n\nThe [cursor.execute](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.execute) function can be used to retrieve a result set from a query against SQL Database. This function essentially accepts any query and returns a result set which can be iterated over with the use of [cursor.fetchone()](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.fetchone).\n\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.windows.net', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n    cursor = conn.cursor()\n    cursor.execute('SELECT c.CustomerID, c.CompanyName,COUNT(soh.SalesOrderID) AS OrderCount FROM SalesLT.Customer AS c LEFT OUTER JOIN SalesLT.SalesOrderHeader AS soh ON c.CustomerID = soh.CustomerID GROUP BY c.CustomerID, c.CompanyName ORDER BY OrderCount DESC;')\n    row = cursor.fetchone()\n    while row:\n        print str(row[0]) + \" \" + str(row[1]) + \" \" + str(row[2])   \n        row = cursor.fetchone()\n\n\n## Insert a row, pass parameters, and retrieve the generated primary key\n\nIn SQL Database the [IDENTITY](https://msdn.microsoft.com/library/ms186775.aspx) property and the [SEQUENCE](https://msdn.microsoft.com/library/ff878058.aspx) object can be used to auto-generate [primary key](https://msdn.microsoft.com/library/ms179610.aspx) values. \n\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.windows.net', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n    cursor = conn.cursor()\n    cursor.execute(\"INSERT SalesLT.Product (Name, ProductNumber, StandardCost, ListPrice, SellStartDate) OUTPUT INSERTED.ProductID VALUES ('SQL Server Express', 'SQLEXPRESS', 0, 0, CURRENT_TIMESTAMP)\")\n    row = cursor.fetchone()\n    while row:\n        print \"Inserted Product ID : \" +str(row[0])\n        row = cursor.fetchone()\n\n\n## Transactions\n\n\nThis code example demonstrates the use of transactions in which you:\n\n\n-Begin a transaction\n\n-Insert a row of data\n\n-Rollback your transaction to undo the insert\n\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.windows.net', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n    cursor = conn.cursor()\n    cursor.execute(\"BEGIN TRANSACTION\")\n    cursor.execute(\"INSERT SalesLT.Product (Name, ProductNumber, StandardCost, ListPrice, SellStartDate) OUTPUT INSERTED.ProductID VALUES ('SQL Server Express New', 'SQLEXPRESS New', 0, 0, CURRENT_TIMESTAMP)\")\n    cnxn.rollback()\n\n \n"
}