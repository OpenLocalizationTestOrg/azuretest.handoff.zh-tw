<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Build a Java web application using DocumentDB | Microsoft Azure</source>
          <target state="new">Build a Java web application using DocumentDB | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to use the Azure DocumentDB service to store and access data from a Java application hosted on Azure Websites.</source>
          <target state="new">This tutorial shows you how to use the Azure DocumentDB service to store and access data from a Java application hosted on Azure Websites.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Build a Java web application using DocumentDB</source>
          <target state="new">Build a Java web application using DocumentDB</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to use the <bpt id="p1">[</bpt>Microsoft Azure DocumentDB<ept id="p1">](https://portal.azure.com/#gallery/Microsoft.DocumentDB)</ept> service to store and access data from a Java application hosted on Azure Websites.</source>
          <target state="new">This tutorial shows you how to use the <bpt id="p1">[</bpt>Microsoft Azure DocumentDB<ept id="p1">](https://portal.azure.com/#gallery/Microsoft.DocumentDB)</ept> service to store and access data from a Java application hosted on Azure Websites.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this topic, you will learn:</source>
          <target state="new">In this topic, you will learn:</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>How to build a basic JSP application in Eclipse.</source>
          <target state="new">How to build a basic JSP application in Eclipse.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>How to work with the Azure DocumentDB service using the <bpt id="p1">[</bpt>DocumentDB Java SDK<ept id="p1">](https://github.com/Azure/azure-documentdb-java)</ept>.</source>
          <target state="new">How to work with the Azure DocumentDB service using the <bpt id="p1">[</bpt>DocumentDB Java SDK<ept id="p1">](https://github.com/Azure/azure-documentdb-java)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to create a web-based task-management application that enables you to create, retrieve, and mark tasks as complete, as shown in the following image.</source>
          <target state="new">This tutorial shows you how to create a web-based task-management application that enables you to create, retrieve, and mark tasks as complete, as shown in the following image.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each of the tasks in the ToDo list are stored as JSON documents in Azure DocumentDB.</source>
          <target state="new">Each of the tasks in the ToDo list are stored as JSON documents in Azure DocumentDB.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>My ToDo List application</source>
          <target state="new">My ToDo List application</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> This tutorial assumes that you have prior experience using Java.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> This tutorial assumes that you have prior experience using Java.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you are new to Java or the <bpt id="p1">[</bpt>prerequisite tools<ept id="p1">](#Prerequisites)</ept>, we recommend downloading the complete <bpt id="p2">[</bpt>todo<ept id="p2">](https://github.com/Azure/azure-documentdb-java/tree/master/tutorial/todo)</ept> project from <bpt id="p3">[</bpt>GitHub<ept id="p3">](https://github.com/Azure/azure-documentdb-java)</ept> and building it using <bpt id="p4">[</bpt>the instructions at the end of this article<ept id="p4">](#GetProject)</ept>.</source>
          <target state="new">If you are new to Java or the <bpt id="p1">[</bpt>prerequisite tools<ept id="p1">](#Prerequisites)</ept>, we recommend downloading the complete <bpt id="p2">[</bpt>todo<ept id="p2">](https://github.com/Azure/azure-documentdb-java/tree/master/tutorial/todo)</ept> project from <bpt id="p3">[</bpt>GitHub<ept id="p3">](https://github.com/Azure/azure-documentdb-java)</ept> and building it using <bpt id="p4">[</bpt>the instructions at the end of this article<ept id="p4">](#GetProject)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Once you have it built, you can review the article to gain insight on the code in the context of the project.</source>
          <target state="new">Once you have it built, you can review the article to gain insight on the code in the context of the project.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="Prerequisites"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Prerequisites</source>
          <target state="new"><ph id="ph1">&lt;a id="Prerequisites"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Prerequisites</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Before you begin this tutorial, you must have the following:</source>
          <target state="new">Before you begin this tutorial, you must have the following:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An active Azure account.</source>
          <target state="new">An active Azure account.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you don't have an account, you can create a free trial account in just a couple of minutes.</source>
          <target state="new">If you don't have an account, you can create a free trial account in just a couple of minutes.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](../../pricing/free-trial/)</ept>.</source>
          <target state="new">For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](../../pricing/free-trial/)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Java Development Kit (JDK) 7+<ept id="p1">](http://www.oracle.com/technetwork/java/javase/downloads/index.html)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Java Development Kit (JDK) 7+<ept id="p1">](http://www.oracle.com/technetwork/java/javase/downloads/index.html)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Eclipse IDE for Java EE Developers.</source>
          <target state="new">Eclipse IDE for Java EE Developers.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An Azure Website with a Java runtime environment (e.g. Tomcat or Jetty) enabled.</source>
          <target state="new">An Azure Website with a Java runtime environment (e.g. Tomcat or Jetty) enabled.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you're installing these tools for the first time, coreservlets.com provides a walk-through of the installation process in the Quick Start section of their <bpt id="p1">[</bpt>Tutorial: Installing TomCat7 and Using it with Eclipse<ept id="p1">](http://www.coreservlets.com/Apache-Tomcat-Tutorial/tomcat-7-with-eclipse.html)</ept> article.</source>
          <target state="new">If you're installing these tools for the first time, coreservlets.com provides a walk-through of the installation process in the Quick Start section of their <bpt id="p1">[</bpt>Tutorial: Installing TomCat7 and Using it with Eclipse<ept id="p1">](http://www.coreservlets.com/Apache-Tomcat-Tutorial/tomcat-7-with-eclipse.html)</ept> article.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="CreateDB"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 1: Create a DocumentDB database account</source>
          <target state="new"><ph id="ph1">&lt;a id="CreateDB"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 1: Create a DocumentDB database account</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To provision a DocumentDB database account in Azure:</source>
          <target state="new">To provision a DocumentDB database account in Azure:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you don't already have a database account, create one by following the instructions in <bpt id="p1">[</bpt>Create a database account<ept id="p1">](documentdb-create-account.md)</ept>.</source>
          <target state="new">If you don't already have a database account, create one by following the instructions in <bpt id="p1">[</bpt>Create a database account<ept id="p1">](documentdb-create-account.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you already have an account, proceed to step 2.</source>
          <target state="new">If you already have an account, proceed to step 2.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">**</bpt>Keys<ept id="p1">**</ept> blade shown in the following illustration, copy your endpoint <bpt id="p2">**</bpt>URI<ept id="p2">**</ept> and the <bpt id="p3">**</bpt>PRIMARY KEY<ept id="p3">**</ept> to your clipboard and keep them handy as we will use these values in the web application we create next.</source>
          <target state="new">Using the <bpt id="p1">**</bpt>Keys<ept id="p1">**</ept> blade shown in the following illustration, copy your endpoint <bpt id="p2">**</bpt>URI<ept id="p2">**</ept> and the <bpt id="p3">**</bpt>PRIMARY KEY<ept id="p3">**</ept> to your clipboard and keep them handy as we will use these values in the web application we create next.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Screen shot of the Azure Preview portal, showing a DocumentDB account, with the ACTIVE hub highlighted, the Keys button highlighted on the DocumentDB account blade, and the URI, PRIMARY KEY and SECONDARY KEY values highlighted on the Keys blade</source>
          <target state="new">Screen shot of the Azure Preview portal, showing a DocumentDB account, with the ACTIVE hub highlighted, the Keys button highlighted on the DocumentDB account blade, and the URI, PRIMARY KEY and SECONDARY KEY values highlighted on the Keys blade</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="CreateJSP"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 2: Create the JSP application</source>
          <target state="new"><ph id="ph1">&lt;a id="CreateJSP"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 2: Create the JSP application</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To create the JSP application:</source>
          <target state="new">To create the JSP application:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>First, we’ll start off by creating a Java project.</source>
          <target state="new">First, we’ll start off by creating a Java project.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Start Eclipse, then click <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Dynamic Web Project<ept id="p3">**</ept>.</source>
          <target state="new">Start Eclipse, then click <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Dynamic Web Project<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you don’t see <bpt id="p1">**</bpt>Dynamic Web Project<ept id="p1">**</ept> listed as an available project, do the following: click <bpt id="p2">**</bpt>File<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>New<ept id="p3">**</ept>, click <bpt id="p4">**</bpt>Project<ept id="p4">**</ept>…, expand <bpt id="p5">**</bpt>Web<ept id="p5">**</ept>, click <bpt id="p6">**</bpt>Dynamic Web Project<ept id="p6">**</ept>, and click <bpt id="p7">**</bpt>Next<ept id="p7">**</ept>.</source>
          <target state="new">If you don’t see <bpt id="p1">**</bpt>Dynamic Web Project<ept id="p1">**</ept> listed as an available project, do the following: click <bpt id="p2">**</bpt>File<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>New<ept id="p3">**</ept>, click <bpt id="p4">**</bpt>Project<ept id="p4">**</ept>…, expand <bpt id="p5">**</bpt>Web<ept id="p5">**</ept>, click <bpt id="p6">**</bpt>Dynamic Web Project<ept id="p6">**</ept>, and click <bpt id="p7">**</bpt>Next<ept id="p7">**</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Enter a project name in the <bpt id="p1">**</bpt>Project name<ept id="p1">**</ept> box, and in the <bpt id="p2">**</bpt>Target Runtime<ept id="p2">**</ept> drop-down menu, optionally select a value (e.g. Apache Tomcat v7.0), and then click <bpt id="p3">**</bpt>Finish<ept id="p3">**</ept>.</source>
          <target state="new">Enter a project name in the <bpt id="p1">**</bpt>Project name<ept id="p1">**</ept> box, and in the <bpt id="p2">**</bpt>Target Runtime<ept id="p2">**</ept> drop-down menu, optionally select a value (e.g. Apache Tomcat v7.0), and then click <bpt id="p3">**</bpt>Finish<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Selecting a target runtime enables you to run your project locally through Eclipse.</source>
          <target state="new">Selecting a target runtime enables you to run your project locally through Eclipse.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In Eclipse, in the Project Explorer view, expand your project.</source>
          <target state="new">In Eclipse, in the Project Explorer view, expand your project.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>WebContent<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>JSP File<ept id="p3">**</ept>.</source>
          <target state="new">Right-click <bpt id="p1">**</bpt>WebContent<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>JSP File<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New JSP File<ept id="p1">**</ept> dialog box, name the file <bpt id="p2">**</bpt>index.jsp<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>New JSP File<ept id="p1">**</ept> dialog box, name the file <bpt id="p2">**</bpt>index.jsp<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Keep the parent folder as <bpt id="p1">**</bpt>WebContent<ept id="p1">**</ept>, as shown in the following illustration, and then click <bpt id="p2">**</bpt>Next<ept id="p2">**</ept>.</source>
          <target state="new">Keep the parent folder as <bpt id="p1">**</bpt>WebContent<ept id="p1">**</ept>, as shown in the following illustration, and then click <bpt id="p2">**</bpt>Next<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Select JSP Template<ept id="p1">**</ept> dialog box, for the purpose of this tutorial select <bpt id="p2">**</bpt>New JSP File (html)<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Finish<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Select JSP Template<ept id="p1">**</ept> dialog box, for the purpose of this tutorial select <bpt id="p2">**</bpt>New JSP File (html)<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Finish<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When the index.jsp file opens in Eclipse, add text to display <bpt id="p1">**</bpt>Hello World!<ept id="p1">**</ept> within the existing</source>
          <target state="new">When the index.jsp file opens in Eclipse, add text to display <bpt id="p1">**</bpt>Hello World!<ept id="p1">**</ept> within the existing</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>element.</source>
          <target state="new">element.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Your updated</source>
          <target state="new">Your updated</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>content should look like the following code:</source>
          <target state="new">content should look like the following code:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Save the index.jsp file.</source>
          <target state="new">Save the index.jsp file.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If you set a target runtime in step 2, you can click <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Run<ept id="p2">**</ept> to run your JSP application locally:</source>
          <target state="new">If you set a target runtime in step 2, you can click <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> and then <bpt id="p2">**</bpt>Run<ept id="p2">**</ept> to run your JSP application locally:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="InstallSDK"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 3: Install the DocumentDB Java SDK</source>
          <target state="new"><ph id="ph1">&lt;a id="InstallSDK"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 3: Install the DocumentDB Java SDK</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The easiest way to pull in the DocumentDB Java SDK and its dependencies is through <bpt id="p1">[</bpt>Apache Maven<ept id="p1">](http://maven.apache.org/)</ept>.</source>
          <target state="new">The easiest way to pull in the DocumentDB Java SDK and its dependencies is through <bpt id="p1">[</bpt>Apache Maven<ept id="p1">](http://maven.apache.org/)</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To do this, you will need to convert your project to a maven project by completing the following steps:</source>
          <target state="new">To do this, you will need to convert your project to a maven project by completing the following steps:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Right-click your project in the Project Explorer, click <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Convert to Maven Project<ept id="p2">**</ept>.</source>
          <target state="new">Right-click your project in the Project Explorer, click <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Convert to Maven Project<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Create new POM<ept id="p1">**</ept> window, accept the defaults and click <bpt id="p2">**</bpt>Finish<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Create new POM<ept id="p1">**</ept> window, accept the defaults and click <bpt id="p2">**</bpt>Finish<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, open the pom.xml file.</source>
          <target state="new">In <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, open the pom.xml file.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Dependencies<ept id="p1">**</ept> tab, in the <bpt id="p2">**</bpt>Dependencies<ept id="p2">**</ept> pane, click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Dependencies<ept id="p1">**</ept> tab, in the <bpt id="p2">**</bpt>Dependencies<ept id="p2">**</ept> pane, click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Select Dependency<ept id="p1">**</ept> window, do the following:</source>
          <target state="new">In the <bpt id="p1">**</bpt>Select Dependency<ept id="p1">**</ept> window, do the following:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>GroupId<ept id="p1">**</ept> box, enter com.microsoft.azure.</source>
          <target state="new">In the <bpt id="p1">**</bpt>GroupId<ept id="p1">**</ept> box, enter com.microsoft.azure.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Artifact Id<ept id="p1">**</ept> box enter azure-documentdb.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Artifact Id<ept id="p1">**</ept> box enter azure-documentdb.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Version<ept id="p1">**</ept> box enter 1.1.0.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Version<ept id="p1">**</ept> box enter 1.1.0.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Or add the dependency XML for GroupId and ArtifactId directly to the pom.xml via a text editor:</source>
          <target state="new">Or add the dependency XML for GroupId and ArtifactId directly to the pom.xml via a text editor:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Ok<ept id="p1">**</ept> and Maven will install the DocumentDB Java SDK.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Ok<ept id="p1">**</ept> and Maven will install the DocumentDB Java SDK.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Save the pom.xml file.</source>
          <target state="new">Save the pom.xml file.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="UseService"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 4: Using the DocumentDB service in a Java application</source>
          <target state="new"><ph id="ph1">&lt;a id="UseService"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 4: Using the DocumentDB service in a Java application</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>First, let's define the TodoItem object:</source>
          <target state="new">First, let's define the TodoItem object:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In this project, we are using <bpt id="p1">[</bpt>Project Lombok<ept id="p1">](http://projectlombok.org/)</ept> to generate the constructor, getters, setters, and a builder.</source>
          <target state="new">In this project, we are using <bpt id="p1">[</bpt>Project Lombok<ept id="p1">](http://projectlombok.org/)</ept> to generate the constructor, getters, setters, and a builder.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Alternatively, you can write this code manually or have the IDE generate it.</source>
          <target state="new">Alternatively, you can write this code manually or have the IDE generate it.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To invoke the DocumentDB service, you must instantiate a new <bpt id="p1">**</bpt>DocumentClient<ept id="p1">**</ept>.</source>
          <target state="new">To invoke the DocumentDB service, you must instantiate a new <bpt id="p1">**</bpt>DocumentClient<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In general, it is best to reuse the <bpt id="p1">**</bpt>DocumentClient<ept id="p1">**</ept> - rather than construct a new client for each subsequent request.</source>
          <target state="new">In general, it is best to reuse the <bpt id="p1">**</bpt>DocumentClient<ept id="p1">**</ept> - rather than construct a new client for each subsequent request.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>We can reuse the client by wrapping the client in a <bpt id="p1">**</bpt>DocumentClientFactory<ept id="p1">**</ept>.</source>
          <target state="new">We can reuse the client by wrapping the client in a <bpt id="p1">**</bpt>DocumentClientFactory<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This is also where you need to paste the URI and PRIMARY KEY value you saved to your clipboard in <bpt id="p1">[</bpt>step 1<ept id="p1">](#CreateDB)</ept>.</source>
          <target state="new">This is also where you need to paste the URI and PRIMARY KEY value you saved to your clipboard in <bpt id="p1">[</bpt>step 1<ept id="p1">](#CreateDB)</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Replace [YOUR\_ENDPOINT\_HERE] with your URI and replace [YOUR\_KEY\_HERE] with your PRIMARY KEY.</source>
          <target state="new">Replace [YOUR\_ENDPOINT\_HERE] with your URI and replace [YOUR\_KEY\_HERE] with your PRIMARY KEY.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Now let's create a Data Access Object (DAO) to abstract persisting our ToDo items to DocumentDB.</source>
          <target state="new">Now let's create a Data Access Object (DAO) to abstract persisting our ToDo items to DocumentDB.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In order to save ToDo items to a collection, the client needs to know which database and collection to persist to (as referenced by self-links).</source>
          <target state="new">In order to save ToDo items to a collection, the client needs to know which database and collection to persist to (as referenced by self-links).</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In general, it is best to cache the database and collection when possible to avoid additional round-trips to the database.</source>
          <target state="new">In general, it is best to cache the database and collection when possible to avoid additional round-trips to the database.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to retrieve our database and collection, if it exists, or create a new one if it doesn't exist:</source>
          <target state="new">The following code illustrates how to retrieve our database and collection, if it exists, or create a new one if it doesn't exist:</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The next step is to write some code to persist the TodoItems in to the collection.</source>
          <target state="new">The next step is to write some code to persist the TodoItems in to the collection.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In this example, we will use <bpt id="p1">[</bpt>Gson<ept id="p1">](https://code.google.com/p/google-gson/)</ept> to serialize and de-serialize TodoItem Plain Old Java Objects (POJOs) to JSON documents.</source>
          <target state="new">In this example, we will use <bpt id="p1">[</bpt>Gson<ept id="p1">](https://code.google.com/p/google-gson/)</ept> to serialize and de-serialize TodoItem Plain Old Java Objects (POJOs) to JSON documents.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Jackson<ept id="p1">](http://jackson.codehaus.org/)</ept> or your own custom serializer are also great alternatives for serializing POJOs.</source>
          <target state="new"><bpt id="p1">[</bpt>Jackson<ept id="p1">](http://jackson.codehaus.org/)</ept> or your own custom serializer are also great alternatives for serializing POJOs.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Like DocumentDB databases and collections, documents are also referenced by self-links.</source>
          <target state="new">Like DocumentDB databases and collections, documents are also referenced by self-links.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following helper function lets us retrieve documents by another attribute (e.g. "id") rather than self-link:</source>
          <target state="new">The following helper function lets us retrieve documents by another attribute (e.g. "id") rather than self-link:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>We can use the helper method in step 5 to retrieve a TodoItem JSON document by id and then deserialize it to a POJO:</source>
          <target state="new">We can use the helper method in step 5 to retrieve a TodoItem JSON document by id and then deserialize it to a POJO:</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>We can also use the DocumentClient to get a collection or list of TodoItems using DocumentDB SQL:</source>
          <target state="new">We can also use the DocumentClient to get a collection or list of TodoItems using DocumentDB SQL:</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>There are many ways to update a document with the DocumentClient.</source>
          <target state="new">There are many ways to update a document with the DocumentClient.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In our Todo list application, we want to be able to toggle whether a TodoItem is complete.</source>
          <target state="new">In our Todo list application, we want to be able to toggle whether a TodoItem is complete.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This can be achieved by updating the "complete" attribute within the document:</source>
          <target state="new">This can be achieved by updating the "complete" attribute within the document:</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Finally, we want the ability to delete a TodoItem from our list.</source>
          <target state="new">Finally, we want the ability to delete a TodoItem from our list.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To do this, we can use the helper method we wrote earlier to retrieve the self-link and then tell the client to delete it:</source>
          <target state="new">To do this, we can use the helper method we wrote earlier to retrieve the self-link and then tell the client to delete it:</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="Wire"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Step 5: Wiring the rest of the of application together</source>
          <target state="new"><ph id="ph1">&lt;a id="Wire"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Step 5: Wiring the rest of the of application together</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Now that we've finished the fun bits - all that left is to build a quick user interface and wire it up to our DAO.</source>
          <target state="new">Now that we've finished the fun bits - all that left is to build a quick user interface and wire it up to our DAO.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>First, let's start with building a controller to call our DAO:</source>
          <target state="new">First, let's start with building a controller to call our DAO:</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>In a more complex application, the controller may house complicated business logic on top of the DAO.</source>
          <target state="new">In a more complex application, the controller may house complicated business logic on top of the DAO.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Next, we'll create a servlet to route HTTP requests to the controller:</source>
          <target state="new">Next, we'll create a servlet to route HTTP requests to the controller:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>We'll need a Web User Interface to display to the user.</source>
          <target state="new">We'll need a Web User Interface to display to the user.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Let's re-write the index.jsp we created earlier:</source>
          <target state="new">Let's re-write the index.jsp we created earlier:</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>And finally, write some client-side Javascript to tie the web user interface and the servlet together:</source>
          <target state="new">And finally, write some client-side Javascript to tie the web user interface and the servlet together:</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Awesome!</source>
          <target state="new">Awesome!</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Now all that's left is to test the application.</source>
          <target state="new">Now all that's left is to test the application.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Run the application locally, and add some Todo items by filling in the item name and category and clicking <bpt id="p1">**</bpt>Add Task<ept id="p1">**</ept>.</source>
          <target state="new">Run the application locally, and add some Todo items by filling in the item name and category and clicking <bpt id="p1">**</bpt>Add Task<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Once the item appears, you can update whether it's complete by toggling the checkbox and clicking <bpt id="p1">**</bpt>Update Tasks<ept id="p1">**</ept>.</source>
          <target state="new">Once the item appears, you can update whether it's complete by toggling the checkbox and clicking <bpt id="p1">**</bpt>Update Tasks<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="Deploy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 6: Deploy your application to Azure Websites</source>
          <target state="new"><ph id="ph1">&lt;a id="Deploy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 6: Deploy your application to Azure Websites</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Azure Websites makes deploying Java Applications as simple as exporting your application as a WAR file and either uploading it via source control (e.g. GIT) or FTP.</source>
          <target state="new">Azure Websites makes deploying Java Applications as simple as exporting your application as a WAR file and either uploading it via source control (e.g. GIT) or FTP.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To export your application as a WAR, right-click on your project in <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Export<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>WAR File<ept id="p3">**</ept>.</source>
          <target state="new">To export your application as a WAR, right-click on your project in <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Export<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>WAR File<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>WAR Export<ept id="p1">**</ept> window, do the following:</source>
          <target state="new">In the <bpt id="p1">**</bpt>WAR Export<ept id="p1">**</ept> window, do the following:</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In the Web project box, enter azure-documentdb-java-sample.</source>
          <target state="new">In the Web project box, enter azure-documentdb-java-sample.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>In the Destination box, choose a destination to save the WAR file.</source>
          <target state="new">In the Destination box, choose a destination to save the WAR file.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Now that you have a WAR file in hand, you can simply upload it to your Azure Website's <bpt id="p1">**</bpt>webapps<ept id="p1">**</ept> directory.</source>
          <target state="new">Now that you have a WAR file in hand, you can simply upload it to your Azure Website's <bpt id="p1">**</bpt>webapps<ept id="p1">**</ept> directory.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For instructions on uploading the file, see <bpt id="p1">[</bpt>Adding an application to your Java website on Azure<ept id="p1">](../web-sites-java-add-app.md)</ept>.</source>
          <target state="new">For instructions on uploading the file, see <bpt id="p1">[</bpt>Adding an application to your Java website on Azure<ept id="p1">](../web-sites-java-add-app.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Once the WAR file is uploaded to the webapps directory, the runtime environment will detect that you've added it and will automatically load it.</source>
          <target state="new">Once the WAR file is uploaded to the webapps directory, the runtime environment will detect that you've added it and will automatically load it.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To view your finished product, navigate to http://YOUR\_SITE\_NAME.azurewebsites.net/azure-documentdb-java-sample/ and start adding your tasks!</source>
          <target state="new">To view your finished product, navigate to http://YOUR\_SITE\_NAME.azurewebsites.net/azure-documentdb-java-sample/ and start adding your tasks!</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="GetProject"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Get the project from GitHub</source>
          <target state="new"><ph id="ph1">&lt;a id="GetProject"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Get the project from GitHub</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>All the samples in this tutorial are included in the <bpt id="p1">[</bpt>todo<ept id="p1">](https://github.com/Azure/azure-documentdb-java/tree/master/tutorial/todo)</ept> project on GitHub, which is part of the <bpt id="p2">[</bpt>azure-documentdb-java<ept id="p2">](https://github.com/Azure/azure-documentdb-java)</ept> repository.</source>
          <target state="new">All the samples in this tutorial are included in the <bpt id="p1">[</bpt>todo<ept id="p1">](https://github.com/Azure/azure-documentdb-java/tree/master/tutorial/todo)</ept> project on GitHub, which is part of the <bpt id="p2">[</bpt>azure-documentdb-java<ept id="p2">](https://github.com/Azure/azure-documentdb-java)</ept> repository.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>To import the todo project into Eclipse, ensure you have the software and resources listed in the <bpt id="p1">[</bpt>Prerequisites<ept id="p1">](#Prerequisites)</ept> section, then do the following:</source>
          <target state="new">To import the todo project into Eclipse, ensure you have the software and resources listed in the <bpt id="p1">[</bpt>Prerequisites<ept id="p1">](#Prerequisites)</ept> section, then do the following:</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Install <bpt id="p1">[</bpt>Project Lombok<ept id="p1">](http://projectlombok.org/)</ept>.</source>
          <target state="new">Install <bpt id="p1">[</bpt>Project Lombok<ept id="p1">](http://projectlombok.org/)</ept>.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Lombok is used to generate constructors, getters, setters in the project.</source>
          <target state="new">Lombok is used to generate constructors, getters, setters in the project.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Once you have downloaded the lombok.jar file, double-click it to install it or install it from the command line.</source>
          <target state="new">Once you have downloaded the lombok.jar file, double-click it to install it or install it from the command line.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If Eclipse is open, close it and restart it to load Lombok.</source>
          <target state="new">If Eclipse is open, close it and restart it to load Lombok.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>In Eclipse, on the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Import<ept id="p2">**</ept>.</source>
          <target state="new">In Eclipse, on the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Import<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Import<ept id="p1">**</ept> window, click <bpt id="p2">**</bpt>Git<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Projects from Git<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>Next<ept id="p4">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Import<ept id="p1">**</ept> window, click <bpt id="p2">**</bpt>Git<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Projects from Git<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>Next<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Select Repository Source<ept id="p1">**</ept> screen, click <bpt id="p2">**</bpt>Clone URI<ept id="p2">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Select Repository Source<ept id="p1">**</ept> screen, click <bpt id="p2">**</bpt>Clone URI<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Source Git Repository<ept id="p1">**</ept> screen, in the <bpt id="p2">**</bpt>URI<ept id="p2">**</ept> box, enter https://github.com/Azure/azure-documentdb-java.git, and then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Source Git Repository<ept id="p1">**</ept> screen, in the <bpt id="p2">**</bpt>URI<ept id="p2">**</ept> box, enter https://github.com/Azure/azure-documentdb-java.git, and then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Branch Selection<ept id="p1">**</ept> screen, ensure that <bpt id="p2">**</bpt>master<ept id="p2">**</ept> is selected, and then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Branch Selection<ept id="p1">**</ept> screen, ensure that <bpt id="p2">**</bpt>master<ept id="p2">**</ept> is selected, and then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Local Destination<ept id="p1">**</ept> screen, click <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> to select a folder where the repository can be copied, and then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Local Destination<ept id="p1">**</ept> screen, click <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> to select a folder where the repository can be copied, and then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Select a wizard to use for importing projects<ept id="p1">**</ept> screen, ensure that <bpt id="p2">**</bpt>Import existing projects<ept id="p2">**</ept> is selected, and then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Select a wizard to use for importing projects<ept id="p1">**</ept> screen, ensure that <bpt id="p2">**</bpt>Import existing projects<ept id="p2">**</ept> is selected, and then click <bpt id="p3">**</bpt>Next<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Import Projects<ept id="p1">**</ept> screen, unselect the <bpt id="p2">**</bpt>DocumentDB<ept id="p2">**</ept> project, and then click <bpt id="p3">**</bpt>Finish<ept id="p3">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Import Projects<ept id="p1">**</ept> screen, unselect the <bpt id="p2">**</bpt>DocumentDB<ept id="p2">**</ept> project, and then click <bpt id="p3">**</bpt>Finish<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The DocumentDB project contains the DocumentDB Java SDK, which we will add as a dependency instead.</source>
          <target state="new">The DocumentDB project contains the DocumentDB Java SDK, which we will add as a dependency instead.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, navigate to azure-documentdb-java-sample\src\com.microsoft.azure.documentdb.sample.dao\DocumentClientFactory.java and replace the HOST and MASTER_KEY values with the URI and PRIMARY KEY for your DocumentDB account, and then save the file.</source>
          <target state="new">In <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, navigate to azure-documentdb-java-sample\src\com.microsoft.azure.documentdb.sample.dao\DocumentClientFactory.java and replace the HOST and MASTER_KEY values with the URI and PRIMARY KEY for your DocumentDB account, and then save the file.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Step 1. Create a DocumentDB database account<ept id="p1">](#CreateDB)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Step 1. Create a DocumentDB database account<ept id="p1">](#CreateDB)</ept>.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, right click the <bpt id="p2">**</bpt>azure-documentdb-java-sample<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Build Path<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>Configure Build Path<ept id="p4">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, right click the <bpt id="p2">**</bpt>azure-documentdb-java-sample<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Build Path<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>Configure Build Path<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Java Build Path<ept id="p1">**</ept> screen, in the right pane, select the <bpt id="p2">**</bpt>Libraries<ept id="p2">**</ept> tab, and then click <bpt id="p3">**</bpt>Add External JARs<ept id="p3">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Java Build Path<ept id="p1">**</ept> screen, in the right pane, select the <bpt id="p2">**</bpt>Libraries<ept id="p2">**</ept> tab, and then click <bpt id="p3">**</bpt>Add External JARs<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Navigate to the location of the lombok.jar file, and click <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new">Navigate to the location of the lombok.jar file, and click <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Use step 12 to open the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window again, and then in the left pane click <bpt id="p2">**</bpt>Targeted Runtimes<ept id="p2">**</ept>.</source>
          <target state="new">Use step 12 to open the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window again, and then in the left pane click <bpt id="p2">**</bpt>Targeted Runtimes<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Targeted Runtimes<ept id="p1">**</ept> screen, click <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Apache Tomcat v7.0<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Targeted Runtimes<ept id="p1">**</ept> screen, click <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Apache Tomcat v7.0<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Use step 12 to open the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window again, and then in the left pane click <bpt id="p2">**</bpt>Project Facets<ept id="p2">**</ept>.</source>
          <target state="new">Use step 12 to open the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window again, and then in the left pane click <bpt id="p2">**</bpt>Project Facets<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Project Facets<ept id="p1">**</ept> screen, select <bpt id="p2">**</bpt>Dynamic Web Module<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Java<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Project Facets<ept id="p1">**</ept> screen, select <bpt id="p2">**</bpt>Dynamic Web Module<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Java<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Servers<ept id="p1">**</ept> tab at the bottom of the screen, right-click <bpt id="p2">**</bpt>Tomcat v7.0 Server at localhost<ept id="p2">**</ept> and then click <bpt id="p3">**</bpt>Add and Remove<ept id="p3">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Servers<ept id="p1">**</ept> tab at the bottom of the screen, right-click <bpt id="p2">**</bpt>Tomcat v7.0 Server at localhost<ept id="p2">**</ept> and then click <bpt id="p3">**</bpt>Add and Remove<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Add and Remove<ept id="p1">**</ept> window, move <bpt id="p2">**</bpt>azure-documentdb-java-sample<ept id="p2">**</ept> to the <bpt id="p3">**</bpt>Configured<ept id="p3">**</ept> box, and then click <bpt id="p4">**</bpt>Finish<ept id="p4">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Add and Remove<ept id="p1">**</ept> window, move <bpt id="p2">**</bpt>azure-documentdb-java-sample<ept id="p2">**</ept> to the <bpt id="p3">**</bpt>Configured<ept id="p3">**</ept> box, and then click <bpt id="p4">**</bpt>Finish<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Server<ept id="p1">**</ept> tab, right-click <bpt id="p2">**</bpt>Tomcat v7.0 Server at localhost<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Restart<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Server<ept id="p1">**</ept> tab, right-click <bpt id="p2">**</bpt>Tomcat v7.0 Server at localhost<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Restart<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>In a browser, navigate to http://localhost:8080/azure-documentdb-java-sample/ and start adding to your task list.</source>
          <target state="new">In a browser, navigate to http://localhost:8080/azure-documentdb-java-sample/ and start adding to your task list.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Note that if you changed your default port values, change 8080 to the value you selected.</source>
          <target state="new">Note that if you changed your default port values, change 8080 to the value you selected.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To deploy your project to an Azure web site, see <bpt id="p1">[</bpt>Step 6. Deploy your application to Azure Websites<ept id="p1">](#Deploy)</ept>.</source>
          <target state="new">To deploy your project to an Azure web site, see <bpt id="p1">[</bpt>Step 6. Deploy your application to Azure Websites<ept id="p1">](#Deploy)</ept>.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0917ad737d0b1e641b88b0ed3c2571f7cf18da47</xliffext:olfilehash>
  </header>
</xliff>