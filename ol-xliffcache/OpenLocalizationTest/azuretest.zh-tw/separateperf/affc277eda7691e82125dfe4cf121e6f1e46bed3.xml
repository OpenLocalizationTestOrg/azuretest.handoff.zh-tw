{
  "nodes": [
    {
      "content": "Manage DNS record sets and records on Azure DNS | Microsoft Azure",
      "pos": [
        27,
        92
      ]
    },
    {
      "content": "Managing DNS record sets and records on Azure DNS when hosting your domain on Azure DNS.",
      "pos": [
        111,
        199
      ]
    },
    {
      "content": "All PowerShell commands for operations on record sets and records.",
      "pos": [
        200,
        266
      ]
    },
    {
      "content": "How to manage DNS records",
      "pos": [
        557,
        582
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        587,
        603
      ]
    },
    {
      "content": "Azure CLI",
      "pos": [
        607,
        616
      ]
    },
    {
      "content": "Azure Powershell",
      "pos": [
        655,
        671
      ]
    },
    {
      "content": "This guide will show how to manage record sets and records for your DNS zone.",
      "pos": [
        705,
        782
      ]
    },
    {
      "content": "It is important to understand the distinction between DNS record sets and individual DNS records.",
      "pos": [
        784,
        881
      ]
    },
    {
      "content": "A record set is the collection of records in a zone with the same name and the same type.",
      "pos": [
        883,
        972
      ]
    },
    {
      "content": "For more details, see <bpt id=\"p1\">[</bpt>Understanding record sets and records<ept id=\"p1\">](../dns-getstarted-create-recordset#Understanding-record-sets-and-records)</ept>.",
      "pos": [
        974,
        1110
      ]
    },
    {
      "content": "Create a record set",
      "pos": [
        1115,
        1134
      ]
    },
    {
      "content": "Record sets are created using the New-AzureDnsRecordSet cmdlet.",
      "pos": [
        1136,
        1199
      ]
    },
    {
      "content": "You need to specify the record set name, the zone, the Time-to-Live (TTL) and the record type.",
      "pos": [
        1201,
        1295
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The record set name must be a relative name, excluding the zone name.",
      "pos": [
        1298,
        1380
      ]
    },
    {
      "content": "For example, the record set name ‘www’ in zone ‘contoso.com’ will create a record set with the fully-qualified name ‘www.contoso.com’.",
      "pos": [
        1382,
        1516
      ]
    },
    {
      "content": "For a record set at the zone apex, use \"@\" as the record set name, including quotation marks.",
      "pos": [
        1519,
        1612
      ]
    },
    {
      "content": "The fully-qualified name of the record set is then equal to the zone name, in this case \"contoso.com\".",
      "pos": [
        1614,
        1716
      ]
    },
    {
      "content": "Azure DNS supports the following record types: A, AAAA, CNAME, MX, NS, SOA, SRV, TXT.",
      "pos": [
        1718,
        1803
      ]
    },
    {
      "content": "Record sets of type SOA are created automatically with each zone, they cannot be created separately.",
      "pos": [
        1805,
        1905
      ]
    },
    {
      "content": "If a record set already exists, the command will fail unless the -Overwrite switch is used.",
      "pos": [
        2028,
        2119
      ]
    },
    {
      "content": "The ‘-Overwrite’ option will trigger a confirmation prompt, which can be suppressed using the -Force switch.",
      "pos": [
        2121,
        2229
      ]
    },
    {
      "content": "In the above example, the zone is specified using a zone object, as returned by Get-AzureDnsZone or New-AzureDnsZone.",
      "pos": [
        2231,
        2348
      ]
    },
    {
      "content": "Alternatively, you can also specify the zone by zone name and resource group name:",
      "pos": [
        2349,
        2431
      ]
    },
    {
      "content": "New-AzureDnsRecordSet returns a local object representing the record set created in Azure DNS.",
      "pos": [
        2604,
        2698
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> CNAME record sets cannot co-exist with other record sets with the same name.",
      "pos": [
        2701,
        2790
      ]
    },
    {
      "content": "For example, you cannot create a CNAME with the relative name ‘www’ and an A record with the relative name ‘www’ at the same time.",
      "pos": [
        2792,
        2922
      ]
    },
    {
      "content": "Since the zone apex (name = ‘@’) always contains the NS and SOA record sets created when the zone is created, this means you cannot create a CNAME record set at the zone apex.",
      "pos": [
        2924,
        3099
      ]
    },
    {
      "content": "These constraints arise from the DNS standards, they are not limitations of Azure DNS.",
      "pos": [
        3101,
        3187
      ]
    },
    {
      "content": "Wildcard records",
      "pos": [
        3193,
        3209
      ]
    },
    {
      "content": "Azure DNS supports <bpt id=\"p1\">[</bpt>wildcard records<ept id=\"p1\">](https://en.wikipedia.org/wiki/Wildcard_DNS_record)</ept>.",
      "pos": [
        3210,
        3299
      ]
    },
    {
      "content": "These are returned for any query with a matching name (unless there is a closer match from a non-wildcard record set).",
      "pos": [
        3301,
        3419
      ]
    },
    {
      "pos": [
        3422,
        3549
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> To create a wildcard record set, use the record set name \"\\*\", or a name whose first label is \"\\*\", e.g. \"\\*.foo\"."
    },
    {
      "content": "Wildcard record sets are supported for all record types except NS and SOA.",
      "pos": [
        3552,
        3626
      ]
    },
    {
      "content": "Get a record set",
      "pos": [
        3633,
        3649
      ]
    },
    {
      "content": "To retrieve an existing record set, use ‘Get-AzureDnsRecordSet’, specifying the record set relative name, the record type, and the zone:",
      "pos": [
        3650,
        3786
      ]
    },
    {
      "content": "As with New-AzureDnsRecordSet, the record name must be a relative name, i.e. excluding the zone name.",
      "pos": [
        3865,
        3966
      ]
    },
    {
      "content": "The zone can be specified using either a zone object (as above) or by zone name and resource group name:",
      "pos": [
        3968,
        4072
      ]
    },
    {
      "content": "Get-AzureDnsRecordSet returns a local object representing the record set created in Azure DNS.",
      "pos": [
        4201,
        4295
      ]
    },
    {
      "content": "List record sets",
      "pos": [
        4300,
        4316
      ]
    },
    {
      "content": "By omitting the –Name and/or –RecordType parameters, Get-AzureDnsRecordSet can also be used to list record sets:",
      "pos": [
        4317,
        4429
      ]
    },
    {
      "content": "Option 1",
      "pos": [
        4435,
        4443
      ]
    },
    {
      "content": "List all record sets.",
      "pos": [
        4445,
        4466
      ]
    },
    {
      "content": "This will return all record sets, regardless of name or record type:",
      "pos": [
        4468,
        4536
      ]
    },
    {
      "content": "Option 2",
      "pos": [
        4596,
        4604
      ]
    },
    {
      "content": "List record sets of a given record type.",
      "pos": [
        4607,
        4647
      ]
    },
    {
      "content": "This will return all record sets matching the given record type (in this case, A records):",
      "pos": [
        4649,
        4739
      ]
    },
    {
      "content": "In both cases above, the zone can be specified using either a zone object (as shown) or by specifying the –ZoneName and –ResourceGroupName parameters.",
      "pos": [
        4811,
        4961
      ]
    },
    {
      "content": "Add a record to a record set",
      "pos": [
        4966,
        4994
      ]
    },
    {
      "content": "Records are added to record sets using the Add-AzureDnsRecordConfig cmdlet.",
      "pos": [
        4995,
        5070
      ]
    },
    {
      "content": "This is an off-line operation—only the local object representing the record set is changed.",
      "pos": [
        5071,
        5162
      ]
    },
    {
      "content": "The parameters for adding records to a record set vary depending on the type of the record set.",
      "pos": [
        5164,
        5259
      ]
    },
    {
      "content": "For example, when using a record set of type 'A' you will only be able to specify records with the parameter ‘IPv4Address’.",
      "pos": [
        5260,
        5383
      ]
    },
    {
      "content": "Additional records can be added to each record set by additional calls to Add-AzureDnsRecordConfig.",
      "pos": [
        5385,
        5484
      ]
    },
    {
      "content": "You can add up to 100 records to any record set.",
      "pos": [
        5486,
        5534
      ]
    },
    {
      "content": "However, record sets of type CNAME can contain at most 1 record, and a record set cannot contain two identical records.",
      "pos": [
        5536,
        5655
      ]
    },
    {
      "content": "Empty record sets (with zero records) can be created, but do not appear at the Azure DNS name servers.",
      "pos": [
        5657,
        5759
      ]
    },
    {
      "content": "Once the record set contains the desired collection of records, it needs to be committed using the Set-AzureDnsRecordSet cmdlet, which replaces the existing record set in Azure DNS with the record set provided.",
      "pos": [
        5761,
        5971
      ]
    },
    {
      "content": "The following examples show how to create a record set of each record type containing a single record.",
      "pos": [
        5972,
        6074
      ]
    },
    {
      "content": "Create A record set with single record",
      "pos": [
        6080,
        6118
      ]
    },
    {
      "content": "The sequence of operations to create a record can also be ‘piped’, passing the record set object using the pipe rather than as a parameter.",
      "pos": [
        6334,
        6473
      ]
    },
    {
      "content": "For example:",
      "pos": [
        6475,
        6487
      ]
    },
    {
      "content": "Create AAAA record set with single record",
      "pos": [
        6651,
        6692
      ]
    },
    {
      "content": "Create CNAME record set with single record",
      "pos": [
        6936,
        6978
      ]
    },
    {
      "content": "Create MX record set with single record",
      "pos": [
        7208,
        7247
      ]
    },
    {
      "content": "In this example, we use the record set name \"@\" to create the MX record at the zone apex (e.g. \"contoso.com\").",
      "pos": [
        7248,
        7358
      ]
    },
    {
      "content": "This is common for MX records.",
      "pos": [
        7360,
        7390
      ]
    },
    {
      "content": "Create NS record set with single record",
      "pos": [
        7626,
        7665
      ]
    },
    {
      "content": "Create SRV record set with single record",
      "pos": [
        7890,
        7930
      ]
    },
    {
      "content": "If creating an SRV record in root of zone, just specify _service and _protocol in the record name—there is no need to also include ‘.@’ in the record name",
      "pos": [
        7932,
        8086
      ]
    },
    {
      "content": "Create TXT record set with single record",
      "pos": [
        8347,
        8387
      ]
    },
    {
      "content": "Modifying existing record sets",
      "pos": [
        8617,
        8647
      ]
    },
    {
      "content": "Modifying existing record sets follows a similar pattern to creating records.",
      "pos": [
        8648,
        8725
      ]
    },
    {
      "content": "The sequence of operations is as follows:",
      "pos": [
        8727,
        8768
      ]
    },
    {
      "content": "Retrieve the existing record set using Get-AzureDnsRecordSet.",
      "pos": [
        8774,
        8835
      ]
    },
    {
      "content": "Modify the record set, by either adding records, removing records, changing the record parameters or changing the record set TTL.",
      "pos": [
        8840,
        8969
      ]
    },
    {
      "content": "These changes are off-line—only the local object representing the record set is changed.",
      "pos": [
        8971,
        9059
      ]
    },
    {
      "content": "Commit your changes using the Set-AzureDnsRecordSet cmdlet.",
      "pos": [
        9064,
        9123
      ]
    },
    {
      "content": "This replaces the existing record set in Azure DNS with the record set provided.",
      "pos": [
        9125,
        9205
      ]
    },
    {
      "content": "This is shown by the following examples:",
      "pos": [
        9207,
        9247
      ]
    },
    {
      "content": "Update a record in an existing record set",
      "pos": [
        9253,
        9294
      ]
    },
    {
      "content": "For this example we will change the IP address of an existing A record:",
      "pos": [
        9295,
        9366
      ]
    },
    {
      "content": "The Set-AzureDnsRecordSet cmdlet uses ‘etag’ checks to ensure concurrent changes are not overwritten.",
      "pos": [
        9559,
        9660
      ]
    },
    {
      "content": "Use the ‘-Overwrite’ flag to suppress these checks.",
      "pos": [
        9662,
        9713
      ]
    },
    {
      "content": "See Etags and Tags for more information.",
      "pos": [
        9715,
        9755
      ]
    },
    {
      "content": "Modify SOA record",
      "pos": [
        9761,
        9778
      ]
    },
    {
      "pos": [
        9781,
        9983
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> You cannot add or remove records from the automatically-created SOA record set at the zone apex (name = ‘@’), but you can modify the parameters within the SOA record and the record set TTL."
    },
    {
      "content": "The following example shows how to change the ‘Email’ property of the SOA record:",
      "pos": [
        9985,
        10066
      ]
    },
    {
      "content": "Modify NS records at zone apex",
      "pos": [
        10256,
        10286
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> You cannot add to, remove or modify the records in the automatically-created NS record set at the zone apex (name = ‘@’).",
      "pos": [
        10289,
        10423
      ]
    },
    {
      "content": "The only change permitted is to modify the record set TTL.",
      "pos": [
        10425,
        10483
      ]
    },
    {
      "content": "The following example shows how to change the TTL property of the NS record set:",
      "pos": [
        10485,
        10565
      ]
    },
    {
      "content": "Add records to an existing record set",
      "pos": [
        10725,
        10762
      ]
    },
    {
      "content": "In this example we add two additional MX records to the existing record set:",
      "pos": [
        10763,
        10839
      ]
    },
    {
      "content": "Remove a record from an existing record set",
      "pos": [
        11172,
        11215
      ]
    },
    {
      "content": "Records can be removed from a record set using Remove-AzureDnsRecordConfig.",
      "pos": [
        11217,
        11292
      ]
    },
    {
      "content": "Note that the record being removed must be an exact match with an existing record, across all parameters.",
      "pos": [
        11294,
        11399
      ]
    },
    {
      "content": "Changes must be committed using Set-AzureDnsRecordSet.",
      "pos": [
        11401,
        11455
      ]
    },
    {
      "content": "Removing the last record from a record set does not delete the record set.",
      "pos": [
        11457,
        11531
      ]
    },
    {
      "content": "See <bpt id=\"p1\">[</bpt>Delete a record set<ept id=\"p1\">](#delete-a-record-set)</ept> below for more.",
      "pos": [
        11533,
        11596
      ]
    },
    {
      "content": "The sequence of operations to remove a record from a record set can also be ‘piped’, passing the record set object using the pipe rather than as a parameter.",
      "pos": [
        11808,
        11965
      ]
    },
    {
      "content": "For example:",
      "pos": [
        11967,
        11979
      ]
    },
    {
      "content": "Remove AAAA record from a record set",
      "pos": [
        12137,
        12173
      ]
    },
    {
      "content": "Remove CNAME record from a record set",
      "pos": [
        12412,
        12449
      ]
    },
    {
      "content": "Since a CNAME record set can contain at most one record, removing that record will leave an empty record set.",
      "pos": [
        12451,
        12560
      ]
    },
    {
      "content": "Remove MX record from a record set",
      "pos": [
        12789,
        12823
      ]
    },
    {
      "content": "Remove NS record from record set",
      "pos": [
        13066,
        13098
      ]
    },
    {
      "content": "Remove SRV record from a record set",
      "pos": [
        13323,
        13358
      ]
    },
    {
      "content": "Remove TXT record from a record set",
      "pos": [
        13614,
        13649
      ]
    },
    {
      "content": "Delete a record set",
      "pos": [
        13874,
        13893
      ]
    },
    {
      "content": "Record sets can be deleted using the Remove-AzureDnsRecordSet cmdlet.",
      "pos": [
        13894,
        13963
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> You cannot delete the SOA and NS record sets at the zone apex (name = ‘@’) that are created automatically when the zone is created.",
      "pos": [
        13966,
        14110
      ]
    },
    {
      "content": "They will be deleted automatically when deleting the zone.",
      "pos": [
        14112,
        14170
      ]
    },
    {
      "content": "Use one of the following three ways to remove a record set:",
      "pos": [
        14172,
        14231
      ]
    },
    {
      "content": "Option 1",
      "pos": [
        14236,
        14244
      ]
    },
    {
      "content": "Specify the all parameters by name:",
      "pos": [
        14245,
        14280
      ]
    },
    {
      "content": "The optional ‘-Force’ switch can be used to suppress the confirmation prompt.",
      "pos": [
        14421,
        14498
      ]
    },
    {
      "content": "Option 2",
      "pos": [
        14504,
        14512
      ]
    },
    {
      "content": "Specify the record set by name and type, specify the zone by object:",
      "pos": [
        14513,
        14581
      ]
    },
    {
      "content": "Option 3",
      "pos": [
        14675,
        14683
      ]
    },
    {
      "content": "Specify the record set by object:",
      "pos": [
        14684,
        14717
      ]
    },
    {
      "content": "Specifying the record set using an object enables ‘etag’ checks to ensure concurrent changes are not deleted.",
      "pos": [
        14794,
        14903
      ]
    },
    {
      "content": "The optional ‘-Overwrite’ flag suppresses these checks.",
      "pos": [
        14905,
        14960
      ]
    },
    {
      "content": "See <bpt id=\"p1\">[</bpt>Etags and tags<ept id=\"p1\">](../dns-getstarted-create-dnszone#Etags-and-tags)</ept> for more information.",
      "pos": [
        14961,
        15052
      ]
    },
    {
      "content": "The record set object can also be piped instead of being passed as a parameter:",
      "pos": [
        15054,
        15133
      ]
    },
    {
      "content": "See Also",
      "pos": [
        15262,
        15270
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Get started creating record sets and records<ept id=\"p1\">](../dns-getstarted-create-recordset)</ept>",
      "pos": [
        15272,
        15354
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Perform operations on DNS zones<ept id=\"p1\">](../dns-operations-dnszones)</ept>",
      "pos": [
        15359,
        15420
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Automate operations using .NET SDK<ept id=\"p1\">](../dns-sdk)</ept>",
      "pos": [
        15425,
        15473
      ]
    },
    {
      "content": "test",
      "pos": [
        15477,
        15481
      ]
    }
  ],
  "content": "<properties \n   pageTitle=\"Manage DNS record sets and records on Azure DNS | Microsoft Azure\" \n   description=\"Managing DNS record sets and records on Azure DNS when hosting your domain on Azure DNS. All PowerShell commands for operations on record sets and records.\" \n   services=\"dns\" \n   documentationCenter=\"na\" \n   authors=\"joaoma\" \n   manager=\"Adinah\" \n   editor=\"\"/>\n\n<tags\n   ms.service=\"dns\"\n   ms.devlang=\"en\"\n   ms.topic=\"article\"\n   ms.tgt_pltfrm=\"na\"\n   ms.workload=\"infrastructure-services\" \n   ms.date=\"08/02/2015\"\n   ms.author=\"joaoma\"/>\n\n# How to manage DNS records\n\n\n> [AZURE.SELECTOR]\n- [Azure CLI](dns-operations-recordsets-cli.md)\n- [Azure Powershell](dns-operations-recordsets.md)\n\n\nThis guide will show how to manage record sets and records for your DNS zone.\n\nIt is important to understand the distinction between DNS record sets and individual DNS records.  A record set is the collection of records in a zone with the same name and the same type.  For more details, see [Understanding record sets and records](../dns-getstarted-create-recordset#Understanding-record-sets-and-records).\n\n## Create a record set\n\nRecord sets are created using the New-AzureDnsRecordSet cmdlet.  You need to specify the record set name, the zone, the Time-to-Live (TTL) and the record type.\n\n>[AZURE.NOTE] The record set name must be a relative name, excluding the zone name.  For example, the record set name ‘www’ in zone ‘contoso.com’ will create a record set with the fully-qualified name ‘www.contoso.com’.\n\n>For a record set at the zone apex, use \"@\" as the record set name, including quotation marks.  The fully-qualified name of the record set is then equal to the zone name, in this case \"contoso.com\".\n\nAzure DNS supports the following record types: A, AAAA, CNAME, MX, NS, SOA, SRV, TXT.  Record sets of type SOA are created automatically with each zone, they cannot be created separately.\n\n    PS C:\\> $rs = New-AzureDnsRecordSet -Name www -Zone $zone -RecordType A -Ttl 300 [-Tag $tags] [-Overwrite] [-Force]\n\nIf a record set already exists, the command will fail unless the -Overwrite switch is used.  The ‘-Overwrite’ option will trigger a confirmation prompt, which can be suppressed using the -Force switch.\n\nIn the above example, the zone is specified using a zone object, as returned by Get-AzureDnsZone or New-AzureDnsZone. Alternatively, you can also specify the zone by zone name and resource group name:\n\n    PS C:\\> $rs = New-AzureDnsRecordSet -Name www –ZoneName contoso.com –ResourceGroupName MyAzureResourceGroup -RecordType A -Ttl 300 [-Tag $tags] [-Overwrite] [-Force]\n\nNew-AzureDnsRecordSet returns a local object representing the record set created in Azure DNS.\n\n>[AZURE.NOTE] CNAME record sets cannot co-exist with other record sets with the same name.  For example, you cannot create a CNAME with the relative name ‘www’ and an A record with the relative name ‘www’ at the same time.  Since the zone apex (name = ‘@’) always contains the NS and SOA record sets created when the zone is created, this means you cannot create a CNAME record set at the zone apex.  These constraints arise from the DNS standards, they are not limitations of Azure DNS.\n\n### Wildcard records\nAzure DNS supports [wildcard records](https://en.wikipedia.org/wiki/Wildcard_DNS_record).  These are returned for any query with a matching name (unless there is a closer match from a non-wildcard record set).\n\n>[AZURE.NOTE] To create a wildcard record set, use the record set name \"\\*\", or a name whose first label is \"\\*\", e.g. \"\\*.foo\".\n\n>Wildcard record sets are supported for all record types except NS and SOA.  \n\n## Get a record set\nTo retrieve an existing record set, use ‘Get-AzureDnsRecordSet’, specifying the record set relative name, the record type, and the zone:\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet -Name www –RecordType A -Zone $zone\n\nAs with New-AzureDnsRecordSet, the record name must be a relative name, i.e. excluding the zone name.  The zone can be specified using either a zone object (as above) or by zone name and resource group name:\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet –Name www –RecordType A -Zonename contoso.com -ResourceGroupName MyAzureResourceGroup\n\nGet-AzureDnsRecordSet returns a local object representing the record set created in Azure DNS.\n\n## List record sets\nBy omitting the –Name and/or –RecordType parameters, Get-AzureDnsRecordSet can also be used to list record sets:\n\n### Option 1 \nList all record sets.  This will return all record sets, regardless of name or record type:\n\n    PS C:\\> $list = Get-AzureDnsRecordSet -Zone $zone\n### Option 2 \n\nList record sets of a given record type.  This will return all record sets matching the given record type (in this case, A records):\n\n    PS C:\\> $list = Get-AzureDnsRecordSet –RecordType A -Zone $zone \n\nIn both cases above, the zone can be specified using either a zone object (as shown) or by specifying the –ZoneName and –ResourceGroupName parameters.\n\n## Add a record to a record set\nRecords are added to record sets using the Add-AzureDnsRecordConfig cmdlet. This is an off-line operation—only the local object representing the record set is changed.\n\nThe parameters for adding records to a record set vary depending on the type of the record set. For example, when using a record set of type 'A' you will only be able to specify records with the parameter ‘IPv4Address’.\n\nAdditional records can be added to each record set by additional calls to Add-AzureDnsRecordConfig.  You can add up to 100 records to any record set.  However, record sets of type CNAME can contain at most 1 record, and a record set cannot contain two identical records.  Empty record sets (with zero records) can be created, but do not appear at the Azure DNS name servers.\n\nOnce the record set contains the desired collection of records, it needs to be committed using the Set-AzureDnsRecordSet cmdlet, which replaces the existing record set in Azure DNS with the record set provided.\nThe following examples show how to create a record set of each record type containing a single record.\n\n### Create A record set with single record\n\n    PS C:\\> $rs = New-AzureDnsRecordSet -Name \"test-a\" -RecordType A -Zone $zone -Ttl 60\n    PS C:\\> Add-AzureDnsRecordConfig -RecordSet $rs -Ipv4Address \"1.2.3.4\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\nThe sequence of operations to create a record can also be ‘piped’, passing the record set object using the pipe rather than as a parameter.  For example:\n\n    PS C:\\> New-AzureDnsRecordSet -Name \"test-a\" -RecordType A -Zone $zone -Ttl 60 | Add-AzureDnsRecordConfig -Ipv4Address \"1.2.3.4\" | Set-AzureDnsRecordSet\n\n### Create AAAA record set with single record\n\n    PS C:\\> $rs = New-AzureDnsRecordSet -Name \"test-aaaa\" -RecordType AAAA -Zone $zone -Ttl 60\n    PS C:\\> Add-AzureDnsRecordConfig -RecordSet $rs -Ipv6Address \"2607:f8b0:4009:1803::1005\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n### Create CNAME record set with single record\n\n    PS C:\\> $rs = New-AzureDnsRecordSet -Name \"test-cname\" -RecordType CNAME -Zone $zone -Ttl 60\n    PS C:\\> Add-AzureDnsRecordConfig -RecordSet $rs -Cname \"www.contoso.com\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n### Create MX record set with single record\nIn this example, we use the record set name \"@\" to create the MX record at the zone apex (e.g. \"contoso.com\").  This is common for MX records.\n\n    PS C:\\> $rs = New-AzureDnsRecordSet -Name \"@\" -RecordType MX -Zone $zone -Ttl 60\n    PS C:\\> Add-AzureDnsRecordConfig -RecordSet $rs -Exchange \"mail.contoso.com\" -Preference 5\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n### Create NS record set with single record\n\n    PS C:\\> $rs = New-AzureDnsRecordSet -Name \"test-ns\" -RecordType NS -Zone $zone -Ttl 60\n    PS C:\\> Add-AzureDnsRecordConfig -RecordSet $rs -Nsdname \"ns1.contoso.com\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n### Create SRV record set with single record\n\nIf creating an SRV record in root of zone, just specify _service and _protocol in the record name—there is no need to also include ‘.@’ in the record name\n\n    PS C:\\> $rs = New-AzureDnsRecordSet -Name \"_sip._tls\" -RecordType SRV -Zone $zone -Ttl 60\n    PS C:\\> Add-AzureDnsRecordConfig -RecordSet $rs –Priority 0 –Weight 5 –Port 8080 –Target \"sip.contoso.com\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n### Create TXT record set with single record\n\n    PS C:\\> $rs = New-AzureDnsRecordSet -Name \"test-txt\" -RecordType TXT -Zone $zone -Ttl 60\n    PS C:\\> Add-AzureDnsRecordConfig -RecordSet $rs -Value \"This is a TXT record\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n## Modifying existing record sets\nModifying existing record sets follows a similar pattern to creating records.  The sequence of operations is as follows:\n\n1.  Retrieve the existing record set using Get-AzureDnsRecordSet.\n2.  Modify the record set, by either adding records, removing records, changing the record parameters or changing the record set TTL.  These changes are off-line—only the local object representing the record set is changed.\n3.  Commit your changes using the Set-AzureDnsRecordSet cmdlet.  This replaces the existing record set in Azure DNS with the record set provided.\n\nThis is shown by the following examples:\n\n### Update a record in an existing record set\nFor this example we will change the IP address of an existing A record:\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet -name \"test-a\" -RecordType A -Zone $zone \n    PS C:\\> $rs.Records[0].Ipv4Address = \"134.170.185.46\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs \n\nThe Set-AzureDnsRecordSet cmdlet uses ‘etag’ checks to ensure concurrent changes are not overwritten.  Use the ‘-Overwrite’ flag to suppress these checks.  See Etags and Tags for more information.\n\n### Modify SOA record\n\n>[AZURE.NOTE] You cannot add or remove records from the automatically-created SOA record set at the zone apex (name = ‘@’), but you can modify the parameters within the SOA record and the record set TTL.\n\nThe following example shows how to change the ‘Email’ property of the SOA record:\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet -Name \"@\" -RecordType SOA -Zone $zone\n    PS C:\\> $rs.Records[0].Email = \"admin.contoso.com\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs \n\n### Modify NS records at zone apex\n\n>[AZURE.NOTE] You cannot add to, remove or modify the records in the automatically-created NS record set at the zone apex (name = ‘@’).  The only change permitted is to modify the record set TTL.\n\nThe following example shows how to change the TTL property of the NS record set:\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet -Name \"@\" -RecordType NS -Zone $zone\n    PS C:\\> $rs.Ttl = 300\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs \n\n### Add records to an existing record set\nIn this example we add two additional MX records to the existing record set:\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet -name \"test-mx\" -RecordType MX -Zone $zone\n    PS C:\\> Add-AzureDnsRecordConfig -RecordSet $rs -Exchange \"mail2.contoso.com\" -Preference 10\n    PS C:\\> Add-AzureDnsRecordConfig -RecordSet $rs -Exchange \"mail3.contoso.com\" -Preference 20\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs \n\n## Remove a record from an existing record set\n\nRecords can be removed from a record set using Remove-AzureDnsRecordConfig.  Note that the record being removed must be an exact match with an existing record, across all parameters.  Changes must be committed using Set-AzureDnsRecordSet.\n\nRemoving the last record from a record set does not delete the record set.  See [Delete a record set](#delete-a-record-set) below for more.\n\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet -Name \"test-a\" -RecordType A –Zone $zone\n    PS C:\\> Remove-AzureDnsRecordConfig -RecordSet $rs -Ipv4Address \"1.2.3.4\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\nThe sequence of operations to remove a record from a record set can also be ‘piped’, passing the record set object using the pipe rather than as a parameter.  For example:\n\n    PS C:\\> Get-AzureDnsRecordSet -Name \"test-a\" -RecordType A -Zone $zone | Remove-AzureDnsRecordConfig -Ipv4Address \"1.2.3.4\" | Set-AzureDnsRecordSet\n### Remove AAAA record from a record set\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet -Name \"test-aaaa\" -RecordType AAAA –Zone $zone\n    PS C:\\> Remove-AzureDnsRecordConfig -RecordSet $rs -Ipv6Address \"2607:f8b0:4009:1803::1005\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n### Remove CNAME record from a record set\n\nSince a CNAME record set can contain at most one record, removing that record will leave an empty record set.\n\n    PS C:\\> $rs =  Get-AzureDnsRecordSet -name \"test-cname\" -RecordType CNAME –Zone $zone   \n    PS C:\\> Remove-AzureDnsRecordConfig -RecordSet $rs -Cname \"www.contoso.com\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n### Remove MX record from a record set\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet -name \"test-mx\" -RecordType 'MX' –Zone $zone    \n    PS C:\\> Remove-AzureDnsRecordConfig -RecordSet $rs -Exchange \"mail.contoso.com\" -Preference 5\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n### Remove NS record from record set\n    \n    PS C:\\> $rs = Get-AzureDnsRecordSet -Name \"test-ns\" -RecordType NS -Zone $zone\n    PS C:\\> Remove-AzureDnsRecordConfig -RecordSet $rs -Nsdname \"ns1.contoso.com\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n### Remove SRV record from a record set\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet -Name \"_sip._tls\" -RecordType SRV -Zone $zone\n    PS C:\\> Remove-AzureDnsRecordConfig -RecordSet $rs –Priority 0 –Weight 5 –Port 8080 –Target \"sip.contoso.com\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n### Remove TXT record from a record set\n\n    PS C:\\> $rs = Get-AzureDnsRecordSet -Name \"test-txt\" -RecordType TXT -Zone $zone\n    PS C:\\> Remove-AzureDnsRecordConfig -RecordSet $rs -Value \"This is a TXT record\"\n    PS C:\\> Set-AzureDnsRecordSet -RecordSet $rs\n\n## Delete a record set\nRecord sets can be deleted using the Remove-AzureDnsRecordSet cmdlet.\n\n>[AZURE.NOTE] You cannot delete the SOA and NS record sets at the zone apex (name = ‘@’) that are created automatically when the zone is created.  They will be deleted automatically when deleting the zone.\n\nUse one of the following three ways to remove a record set:\n### Option 1\nSpecify the all parameters by name:\n\n    PS C:\\> Remove-AzureDnsRecordSet -Name \"test-a\" -RecordType A -Zonename \"contoso.com\" -ResourceGroupName MyAzureResourceGroup [-Force]\nThe optional ‘-Force’ switch can be used to suppress the confirmation prompt.\n\n### Option 2\nSpecify the record set by name and type, specify the zone by object:\n\n    PS C:\\> Remove-AzureDnsRecordSet -Name \"test-a\" -RecordType A -Zone $zone [-Force]\n\n### Option 3\nSpecify the record set by object:\n\n    PS C:\\> Remove-AzureDnsRecordSet –RecordSet $rs [-Overwrite] [-Force]\n\nSpecifying the record set using an object enables ‘etag’ checks to ensure concurrent changes are not deleted.  The optional ‘-Overwrite’ flag suppresses these checks. See [Etags and tags](../dns-getstarted-create-dnszone#Etags-and-tags) for more information.\n\nThe record set object can also be piped instead of being passed as a parameter:\n\n    PS C:\\> Get-AzureDnsRecordSet -Name \"test-a\" -RecordType A -Zone $zone | Remove-AzureDnsRecordSet [-Overwrite] [-Force]\n\n##See Also\n\n[Get started creating record sets and records](../dns-getstarted-create-recordset)<BR>\n[Perform operations on DNS zones](../dns-operations-dnszones)<BR>\n[Automate operations using .NET SDK](../dns-sdk)\n \n\ntest\n"
}