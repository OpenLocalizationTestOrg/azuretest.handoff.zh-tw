{
  "nodes": [
    {
      "content": "Connect to SQL Database by using Python on Mac OS",
      "pos": [
        28,
        77
      ]
    },
    {
      "content": "Presents a Python code sample you can use to connect to Azure SQL Database from a Mac.",
      "pos": [
        97,
        183
      ]
    },
    {
      "content": "The sample uses the pymssql driver.",
      "pos": [
        184,
        219
      ]
    },
    {
      "content": "Connect to SQL Database by using Python on Mac OS",
      "pos": [
        548,
        597
      ]
    },
    {
      "content": "This topic presents a code sample written in Python.",
      "pos": [
        765,
        817
      ]
    },
    {
      "content": "The sample runs on a Mac computer.",
      "pos": [
        818,
        852
      ]
    },
    {
      "content": "The sample and connects to Azure SQL Database by using the <bpt id=\"p1\">**</bpt>pymssql<ept id=\"p1\">**</ept> driver.",
      "pos": [
        853,
        931
      ]
    },
    {
      "content": "Requirements",
      "pos": [
        937,
        949
      ]
    },
    {
      "pos": [
        954,
        1018
      ],
      "content": "<bpt id=\"p1\">[</bpt>Python 2.7.6<ept id=\"p1\">](https://www.python.org/download/releases/2.7.6/)</ept>."
    },
    {
      "content": "FreeTDS",
      "pos": [
        1022,
        1029
      ]
    },
    {
      "content": "Pymssql",
      "pos": [
        1069,
        1076
      ]
    },
    {
      "content": "Install the required modules",
      "pos": [
        1119,
        1147
      ]
    },
    {
      "content": "Open your terminal and install",
      "pos": [
        1150,
        1180
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>1) Homebrew<ept id=\"p1\">**</ept>: Run the following command from your terminal.",
      "pos": [
        1182,
        1244
      ]
    },
    {
      "content": "This will download the Homebrew package manager on your machine.",
      "pos": [
        1245,
        1309
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>2) FreeTDS<ept id=\"p1\">**</ept>: Run the following command from your terminal.",
      "pos": [
        1406,
        1467
      ]
    },
    {
      "content": "This will download FreeTDS on your machine.",
      "pos": [
        1468,
        1511
      ]
    },
    {
      "content": "FreeTDS is required for pymmsql to work.",
      "pos": [
        1512,
        1552
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>3) Pymmsql<ept id=\"p1\">**</ept>: Run the following command from your terminal.",
      "pos": [
        1582,
        1643
      ]
    },
    {
      "content": "This will install pymmsql on your machine.",
      "pos": [
        1644,
        1686
      ]
    },
    {
      "content": "Create a database and retrieve your connection string",
      "pos": [
        1725,
        1778
      ]
    },
    {
      "content": "See the <bpt id=\"p1\">[</bpt>getting started page<ept id=\"p1\">](sql-database-get-started.md)</ept> to learn how to create a sample database and get your connection string.",
      "pos": [
        1781,
        1913
      ]
    },
    {
      "content": "It is important you follow the guide to create an <bpt id=\"p1\">**</bpt>AdventureWorks database template<ept id=\"p1\">**</ept>.",
      "pos": [
        1914,
        2001
      ]
    },
    {
      "content": "The samples shown below only work with the <bpt id=\"p1\">**</bpt>AdventureWorks schema<ept id=\"p1\">**</ept>.",
      "pos": [
        2002,
        2071
      ]
    },
    {
      "content": "Connect to your SQL Database",
      "pos": [
        2078,
        2106
      ]
    },
    {
      "pos": [
        2109,
        2222
      ],
      "content": "The <bpt id=\"p1\">[</bpt>pymssql.connect<ept id=\"p1\">](http://pymssql.org/en/latest/ref/pymssql.html)</ept> function is used to connect to SQL Database."
    },
    {
      "content": "Execute an SQL SELECT statement",
      "pos": [
        2401,
        2432
      ]
    },
    {
      "content": "The <bpt id=\"p1\">[</bpt>cursor.execute<ept id=\"p1\">](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.execute)</ept> function can be used to retrieve a result set from a query against SQL Database.",
      "pos": [
        2434,
        2605
      ]
    },
    {
      "content": "This function essentially accepts any query and returns a result set which can be iterated over with the use of <bpt id=\"p1\">[</bpt>cursor.fetchone()<ept id=\"p1\">](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.fetchone)</ept>.",
      "pos": [
        2606,
        2809
      ]
    },
    {
      "content": "Insert a row, pass parameters, and retrieve the generated primary key",
      "pos": [
        3426,
        3495
      ]
    },
    {
      "pos": [
        3497,
        3763
      ],
      "content": "In SQL Database the <bpt id=\"p1\">[</bpt>IDENTITY<ept id=\"p1\">](https://msdn.microsoft.com/library/ms186775.aspx)</ept> property and the <bpt id=\"p2\">[</bpt>SEQUENCE<ept id=\"p2\">](https://msdn.microsoft.com/library/ff878058.aspx)</ept> object can be used to auto-generate <bpt id=\"p3\">[</bpt>primary key<ept id=\"p3\">](https://msdn.microsoft.com/library/ms179610.aspx)</ept> values."
    },
    {
      "content": "Transactions",
      "pos": [
        4300,
        4312
      ]
    },
    {
      "content": "This code example demonstrates the use of transactions in which you:",
      "pos": [
        4315,
        4383
      ]
    },
    {
      "content": "-Begin a transaction",
      "pos": [
        4386,
        4406
      ]
    },
    {
      "content": "-Insert a row of data",
      "pos": [
        4408,
        4429
      ]
    },
    {
      "content": "-Rollback your transaction to undo the insert",
      "pos": [
        4431,
        4476
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Connect to SQL Database by using Python on Mac OS\" \n    description=\"Presents a Python code sample you can use to connect to Azure SQL Database from a Mac. The sample uses the pymssql driver.\"\n    services=\"sql-database\" \n    documentationCenter=\"\" \n    authors=\"meet-bhagdev\" \n    manager=\"jeffreyg\" \n    editor=\"\"/>\n\n\n<tags \n    ms.service=\"sql-database\" \n    ms.workload=\"data-management\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"python\" \n    ms.topic=\"article\" \n    ms.date=\"07/16/2015\" \n    ms.author=\"mebha\"/>\n\n\n# Connect to SQL Database by using Python on Mac OS\n\n\n[AZURE.INCLUDE [sql-database-develop-includes-selector-language-platform-depth](../../includes/sql-database-develop-includes-selector-language-platform-depth.md)]\n\n\nThis topic presents a code sample written in Python. The sample runs on a Mac computer. The sample and connects to Azure SQL Database by using the **pymssql** driver.\n\n\n## Requirements\n\n\n- [Python 2.7.6](https://www.python.org/download/releases/2.7.6/).\n- [FreeTDS](https://github.com/brianb/FreeTDS)\n- [Pymssql](https://github.com/pymssql/pymssql)\n\n### Install the required modules\n\n\nOpen your terminal and install\n\n**1) Homebrew**: Run the following command from your terminal. This will download the Homebrew package manager on your machine.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n**2) FreeTDS**: Run the following command from your terminal. This will download FreeTDS on your machine. FreeTDS is required for pymmsql to work.\n\n    brew install FreeTDS\n  \n**3) Pymmsql**: Run the following command from your terminal. This will install pymmsql on your machine.\n\n    sudo -H pip install pymssql\n\n### Create a database and retrieve your connection string\n\n\nSee the [getting started page](sql-database-get-started.md) to learn how to create a sample database and get your connection string. It is important you follow the guide to create an **AdventureWorks database template**. The samples shown below only work with the **AdventureWorks schema**. \n\n\n## Connect to your SQL Database\n\n\nThe [pymssql.connect](http://pymssql.org/en/latest/ref/pymssql.html) function is used to connect to SQL Database.\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.windows.net', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n\n\n## Execute an SQL SELECT statement\n\nThe [cursor.execute](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.execute) function can be used to retrieve a result set from a query against SQL Database. This function essentially accepts any query and returns a result set which can be iterated over with the use of [cursor.fetchone()](http://pymssql.org/en/latest/ref/pymssql.html#pymssql.Cursor.fetchone).\n\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.windows.net', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n    cursor = conn.cursor()\n    cursor.execute('SELECT c.CustomerID, c.CompanyName,COUNT(soh.SalesOrderID) AS OrderCount FROM SalesLT.Customer AS c LEFT OUTER JOIN SalesLT.SalesOrderHeader AS soh ON c.CustomerID = soh.CustomerID GROUP BY c.CustomerID, c.CompanyName ORDER BY OrderCount DESC;')\n    row = cursor.fetchone()\n    while row:\n        print str(row[0]) + \" \" + str(row[1]) + \" \" + str(row[2])   \n        row = cursor.fetchone()\n\n\n## Insert a row, pass parameters, and retrieve the generated primary key\n\nIn SQL Database the [IDENTITY](https://msdn.microsoft.com/library/ms186775.aspx) property and the [SEQUENCE](https://msdn.microsoft.com/library/ff878058.aspx) object can be used to auto-generate [primary key](https://msdn.microsoft.com/library/ms179610.aspx) values. \n\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.windows.net', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n    cursor = conn.cursor()\n    cursor.execute(\"INSERT SalesLT.Product (Name, ProductNumber, StandardCost, ListPrice, SellStartDate) OUTPUT INSERTED.ProductID VALUES ('SQL Server Express', 'SQLEXPRESS', 0, 0, CURRENT_TIMESTAMP)\")\n    row = cursor.fetchone()\n    while row:\n        print \"Inserted Product ID : \" +str(row[0])\n        row = cursor.fetchone()\n\n\n## Transactions\n\n\nThis code example demonstrates the use of transactions in which you:\n\n\n-Begin a transaction\n\n-Insert a row of data\n\n-Rollback your transaction to undo the insert\n\n\n    import pymssql\n    conn = pymssql.connect(server='yourserver.database.windows.net', user='yourusername@yourserver', password='yourpassword', database='AdventureWorks')\n    cursor = conn.cursor()\n    cursor.execute(\"BEGIN TRANSACTION\")\n    cursor.execute(\"INSERT SalesLT.Product (Name, ProductNumber, StandardCost, ListPrice, SellStartDate) OUTPUT INSERTED.ProductID VALUES ('SQL Server Express New', 'SQLEXPRESS New', 0, 0, CURRENT_TIMESTAMP)\")\n    cnxn.rollback()\n\n \n"
}