{
  "nodes": [
    {
      "content": "How to protect a Web API backend with Azure Active Directory and API Management",
      "pos": [
        27,
        106
      ]
    },
    {
      "content": "Learn how to protect a Web API backend with Azure Active Directory and API Management.",
      "pos": [
        125,
        211
      ]
    },
    {
      "content": "How to protect a Web API backend with Azure Active Directory and API Management",
      "pos": [
        514,
        593
      ]
    },
    {
      "content": "The following video shows how to build a Web API backend and protect it using OAuth 2.0 protocol with Azure Active Directory and API Management.",
      "pos": [
        595,
        739
      ]
    },
    {
      "content": "This article provides an overview and additional information for the steps in the video.",
      "pos": [
        741,
        829
      ]
    },
    {
      "content": "This 24 minute video shows you how to:",
      "pos": [
        830,
        868
      ]
    },
    {
      "content": "Build a Web API backend and secure it with AAD - starting at 1:30",
      "pos": [
        874,
        939
      ]
    },
    {
      "content": "Import the API into API Management - starting at 7:10",
      "pos": [
        944,
        997
      ]
    },
    {
      "content": "Configure the Developer portal to call the API - starting at 9:09",
      "pos": [
        1002,
        1067
      ]
    },
    {
      "content": "Configure a desktop application to call the API - starting at 18:08",
      "pos": [
        1072,
        1139
      ]
    },
    {
      "content": "Configure a JWT validation policy to pre-authorize requests - starting at 20:47",
      "pos": [
        1144,
        1223
      ]
    },
    {
      "content": "Create an Azure AD directory",
      "pos": [
        1318,
        1346
      ]
    },
    {
      "content": "To secure your Web API backed using Azure Active Directory you must first have a an AAD tenant.",
      "pos": [
        1348,
        1443
      ]
    },
    {
      "content": "In this video a tenant named <bpt id=\"p1\">**</bpt>APIMDemo<ept id=\"p1\">**</ept> is used.",
      "pos": [
        1444,
        1494
      ]
    },
    {
      "content": "To create an AAD tenant, sign-in to the <bpt id=\"p1\">[</bpt>Azure portal<ept id=\"p1\">](https://manage.windowsazure.com)</ept> and click <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>-&gt;<bpt id=\"p3\">**</bpt>App Services<ept id=\"p3\">**</ept>-&gt;<bpt id=\"p4\">**</bpt>Active Directory<ept id=\"p4\">**</ept>-&gt;<bpt id=\"p5\">**</bpt>Directory<ept id=\"p5\">**</ept>-&gt;<bpt id=\"p6\">**</bpt>Custom Create<ept id=\"p6\">**</ept>.",
      "pos": [
        1495,
        1675
      ]
    },
    {
      "content": "Azure Active Directory",
      "pos": [
        1680,
        1702
      ]
    },
    {
      "content": "In this example a directory named <bpt id=\"p1\">**</bpt>APIMDemo<ept id=\"p1\">**</ept> is created with a default domain named <bpt id=\"p2\">**</bpt>DemoAPIM.onmicrosoft.com<ept id=\"p2\">**</ept>.",
      "pos": [
        1737,
        1852
      ]
    },
    {
      "content": "This directory is used throughout the video.",
      "pos": [
        1853,
        1897
      ]
    },
    {
      "content": "Azure Active Directory",
      "pos": [
        1901,
        1923
      ]
    },
    {
      "content": "Create a Web API service secured by Azure Active Directory",
      "pos": [
        1956,
        2014
      ]
    },
    {
      "content": "In this step, a Web API backend is created using Visual Studio 2013.",
      "pos": [
        2016,
        2084
      ]
    },
    {
      "content": "This step of the video starts at 1:30.",
      "pos": [
        2085,
        2123
      ]
    },
    {
      "content": "To create Web API backend project in Visual Studio click <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept>-&gt;<bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>-&gt;<bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>, and choose <bpt id=\"p4\">**</bpt>ASP.NET Web Application<ept id=\"p4\">**</ept> from the <bpt id=\"p5\">**</bpt>Web<ept id=\"p5\">**</ept> templates list.",
      "pos": [
        2124,
        2284
      ]
    },
    {
      "content": "In this video the project is named <bpt id=\"p1\">**</bpt>APIMAADDemo<ept id=\"p1\">**</ept>.",
      "pos": [
        2285,
        2336
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to create the project.",
      "pos": [
        2337,
        2372
      ]
    },
    {
      "content": "Visual Studio",
      "pos": [
        2377,
        2390
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Web API<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Select a template list<ept id=\"p2\">**</ept> to create a Web API project.",
      "pos": [
        2421,
        2503
      ]
    },
    {
      "content": "To configure Azure Directory Authentication click <bpt id=\"p1\">**</bpt>Change Authentication<ept id=\"p1\">**</ept>.",
      "pos": [
        2504,
        2580
      ]
    },
    {
      "content": "New project",
      "pos": [
        2584,
        2595
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Organizational Accounts<ept id=\"p1\">**</ept>, and specify the <bpt id=\"p2\">**</bpt>Domain<ept id=\"p2\">**</ept> of your AAD tenant.",
      "pos": [
        2626,
        2707
      ]
    },
    {
      "content": "In this example the domain is <bpt id=\"p1\">**</bpt>DemoAPIM.onmicrosoft.com<ept id=\"p1\">**</ept>.",
      "pos": [
        2708,
        2767
      ]
    },
    {
      "content": "The domain of your directory can be obtained from the <bpt id=\"p1\">**</bpt>Domains<ept id=\"p1\">**</ept> tab of your directory.",
      "pos": [
        2768,
        2856
      ]
    },
    {
      "content": "Domains",
      "pos": [
        2860,
        2867
      ]
    },
    {
      "pos": [
        2898,
        2990
      ],
      "content": "Configure the desired settings in the <bpt id=\"p1\">**</bpt>Change Authentication<ept id=\"p1\">**</ept> dialog box and click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Change authentication",
      "pos": [
        2994,
        3015
      ]
    },
    {
      "content": "When you click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> Visual Studio will attempt to register your application with your Azure AD directory and you may be prompted to sign in by Visual Studio.",
      "pos": [
        3056,
        3215
      ]
    },
    {
      "content": "Sign in using an administrative account for your directory.",
      "pos": [
        3216,
        3275
      ]
    },
    {
      "content": "Sign in to Visual Studio",
      "pos": [
        3279,
        3303
      ]
    },
    {
      "pos": [
        3344,
        3452
      ],
      "content": "To configure this project as an Azure Web API check the box for <bpt id=\"p1\">**</bpt>Host in the cloud<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>."
    },
    {
      "content": "New project",
      "pos": [
        3456,
        3467
      ]
    },
    {
      "content": "You may be prompted to sign in to Azure, and then you can configure the Web App.",
      "pos": [
        3504,
        3584
      ]
    },
    {
      "content": "Configure",
      "pos": [
        3588,
        3597
      ]
    },
    {
      "pos": [
        3634,
        3712
      ],
      "content": "In this example a new <bpt id=\"p1\">**</bpt>App Service plan<ept id=\"p1\">**</ept> named <bpt id=\"p2\">**</bpt>APIMAADDemo<ept id=\"p2\">**</ept> is specified."
    },
    {
      "pos": [
        3714,
        3775
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to configure the Web App and create the project."
    },
    {
      "content": "Add the code to the Web API project",
      "pos": [
        3780,
        3815
      ]
    },
    {
      "content": "The next step in the video adds the code to the Web API project.",
      "pos": [
        3817,
        3881
      ]
    },
    {
      "content": "This step starts at 4:35.",
      "pos": [
        3882,
        3907
      ]
    },
    {
      "content": "The Web API in this example implements a basic calculator service using a model and a controller.",
      "pos": [
        3909,
        4006
      ]
    },
    {
      "content": "To add the model for the service, right-click <bpt id=\"p1\">**</bpt>Models<ept id=\"p1\">**</ept> in <bpt id=\"p2\">**</bpt>Solution Explorer<ept id=\"p2\">**</ept> and choose <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>Class<ept id=\"p4\">**</ept>.",
      "pos": [
        4007,
        4119
      ]
    },
    {
      "content": "Name the class <ph id=\"ph1\">`CalcInput`</ph> and click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.",
      "pos": [
        4120,
        4165
      ]
    },
    {
      "pos": [
        4167,
        4241
      ],
      "content": "Add the following <ph id=\"ph1\">`using`</ph> statement to the top of the <ph id=\"ph2\">`CalcInput.cs`</ph> file."
    },
    {
      "content": "Replace the generated class with the following code.",
      "pos": [
        4272,
        4324
      ]
    },
    {
      "content": "Right-click <bpt id=\"p1\">**</bpt>Controllers<ept id=\"p1\">**</ept> in <bpt id=\"p2\">**</bpt>Solution Explorer<ept id=\"p2\">**</ept> and choose <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>-&gt;<bpt id=\"p4\">**</bpt>Controller<ept id=\"p4\">**</ept>.",
      "pos": [
        4497,
        4585
      ]
    },
    {
      "content": "Choose <bpt id=\"p1\">**</bpt>Web API 2 Controller - Empty<ept id=\"p1\">**</ept> and click <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>.",
      "pos": [
        4586,
        4644
      ]
    },
    {
      "content": "Type <bpt id=\"p1\">**</bpt>CalcController<ept id=\"p1\">**</ept> for the Controller name and click <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>.",
      "pos": [
        4645,
        4711
      ]
    },
    {
      "content": "Add Controller",
      "pos": [
        4715,
        4729
      ]
    },
    {
      "pos": [
        4763,
        4842
      ],
      "content": "Add the following <ph id=\"ph1\">`using`</ph> statement to the top of the <ph id=\"ph2\">`CalcController.cs`</ph> file."
    },
    {
      "content": "Replace the generated controller class with the following code.",
      "pos": [
        4918,
        4981
      ]
    },
    {
      "content": "This code implements the <ph id=\"ph1\">`Add`</ph>, <ph id=\"ph2\">`Subtract`</ph>, <ph id=\"ph3\">`Multiply`</ph>, and <ph id=\"ph4\">`Divide`</ph> operations of the Basic Calculator API.",
      "pos": [
        4982,
        5090
      ]
    },
    {
      "pos": [
        7230,
        7276
      ],
      "content": "Press <bpt id=\"p1\">**</bpt>F6<ept id=\"p1\">**</ept> to build and verify the solution."
    },
    {
      "content": "Publish the project to Azure",
      "pos": [
        7281,
        7309
      ]
    },
    {
      "content": "In this step the Visual Studio project is published to Azure.",
      "pos": [
        7311,
        7372
      ]
    },
    {
      "content": "This step of the video starts at 5:45.",
      "pos": [
        7373,
        7411
      ]
    },
    {
      "content": "To publish the project to Azure, right-click the <bpt id=\"p1\">**</bpt>APIMAADDemo<ept id=\"p1\">**</ept> project in Visual Studio and choose <bpt id=\"p2\">**</bpt>Publish<ept id=\"p2\">**</ept>.",
      "pos": [
        7413,
        7526
      ]
    },
    {
      "content": "Keep the default settings in the <bpt id=\"p1\">**</bpt>Publish Web<ept id=\"p1\">**</ept> dialog box and click <bpt id=\"p2\">**</bpt>Publish<ept id=\"p2\">**</ept>.",
      "pos": [
        7527,
        7609
      ]
    },
    {
      "content": "Web Publish",
      "pos": [
        7613,
        7624
      ]
    },
    {
      "content": "Grant permissions to the Azure AD backend service application",
      "pos": [
        7658,
        7719
      ]
    },
    {
      "content": "A new application for the backend service is created in your Azure AD directory as part of the configuring and publishing process of your Web API project.",
      "pos": [
        7721,
        7875
      ]
    },
    {
      "content": "In this step of the video, starting at 6:13, permissions are granted to the Web API backend.",
      "pos": [
        7876,
        7968
      ]
    },
    {
      "content": "Application",
      "pos": [
        7972,
        7983
      ]
    },
    {
      "content": "Click the name of the application to configure the required permissions.",
      "pos": [
        8018,
        8090
      ]
    },
    {
      "content": "Navigate to the <bpt id=\"p1\">**</bpt>Configure<ept id=\"p1\">**</ept> tab and scroll down to the <bpt id=\"p2\">**</bpt>permissions to other applications<ept id=\"p2\">**</ept> section.",
      "pos": [
        8091,
        8194
      ]
    },
    {
      "content": "Click the <bpt id=\"p1\">**</bpt>Application Permissions<ept id=\"p1\">**</ept> drop-down beside <bpt id=\"p2\">**</bpt>Windows<ept id=\"p2\">**</ept> <bpt id=\"p3\">**</bpt>Azure Active Directory<ept id=\"p3\">**</ept>, check the box for <bpt id=\"p4\">**</bpt>Read directory data<ept id=\"p4\">**</ept>, and click <bpt id=\"p5\">**</bpt>Save<ept id=\"p5\">**</ept>.",
      "pos": [
        8195,
        8352
      ]
    },
    {
      "content": "Add permissions",
      "pos": [
        8356,
        8371
      ]
    },
    {
      "pos": [
        8411,
        8572
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If <bpt id=\"p1\">**</bpt>Windows<ept id=\"p1\">**</ept> <bpt id=\"p2\">**</bpt>Azure Active Directory<ept id=\"p2\">**</ept> is not listed under permissions to other applications, click <bpt id=\"p3\">**</bpt>Add application<ept id=\"p3\">**</ept> and add it from the list."
    },
    {
      "pos": [
        8574,
        8720
      ],
      "content": "Make a note of the <bpt id=\"p1\">**</bpt>App Id URI<ept id=\"p1\">**</ept> for use in a subsequent step when an Azure AD application is configured for the API Management developer portal."
    },
    {
      "content": "App Id URI",
      "pos": [
        8724,
        8734
      ]
    },
    {
      "content": "Import the Web API into API Management",
      "pos": [
        8768,
        8806
      ]
    },
    {
      "content": "APIs are configured from the API publisher portal, which is accessed through the Azure management portal.",
      "pos": [
        8808,
        8913
      ]
    },
    {
      "content": "To reach the publisher portal, click <bpt id=\"p1\">**</bpt>Manage<ept id=\"p1\">**</ept> in the Azure Portal for your API Management service.",
      "pos": [
        8914,
        9014
      ]
    },
    {
      "content": "If you have not yet created an API Management service instance, see <bpt id=\"p1\">[</bpt>Create an API Management service instance<ept id=\"p1\">][]</ept> in the <bpt id=\"p2\">[</bpt>Manage your first API<ept id=\"p2\">][]</ept> tutorial.",
      "pos": [
        9015,
        9171
      ]
    },
    {
      "content": "Publisher portal",
      "pos": [
        9175,
        9191
      ]
    },
    {
      "content": "Operations can be <bpt id=\"p1\">[</bpt>added to APIs manually<ept id=\"p1\">](api-management-howto-add-operations.md)</ept>, or they can be imported.",
      "pos": [
        9229,
        9337
      ]
    },
    {
      "content": "In this video, operations are imported in Swagger format starting at 6:40.",
      "pos": [
        9338,
        9412
      ]
    },
    {
      "content": "Create a file named <ph id=\"ph1\">`calcapi.json`</ph> with following contents and save it to your computer.",
      "pos": [
        9414,
        9502
      ]
    },
    {
      "content": "Ensure that the <ph id=\"ph1\">`host`</ph> attribute points to your Web API backend.",
      "pos": [
        9503,
        9567
      ]
    },
    {
      "content": "In this example <ph id=\"ph1\">`\"host\": \"apimaaddemo.azurewebsites.net\"`</ph> is used.",
      "pos": [
        9568,
        9634
      ]
    },
    {
      "pos": [
        13484,
        13605
      ],
      "content": "To import the calculator API, click <bpt id=\"p1\">**</bpt>APIs<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>API Management<ept id=\"p2\">**</ept> menu on the left, and then click <bpt id=\"p3\">**</bpt>Import API<ept id=\"p3\">**</ept>."
    },
    {
      "content": "Import API button",
      "pos": [
        13609,
        13626
      ]
    },
    {
      "content": "Perform the following steps to configure the calculator API.",
      "pos": [
        13656,
        13716
      ]
    },
    {
      "pos": [
        13721,
        13829
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>From file<ept id=\"p1\">**</ept>, browse to the <ph id=\"ph1\">`calculator.json`</ph> file you saved, and click the <bpt id=\"p2\">**</bpt>Swagger<ept id=\"p2\">**</ept> radio button."
    },
    {
      "pos": [
        13833,
        13887
      ],
      "content": "Type <bpt id=\"p1\">**</bpt>calc<ept id=\"p1\">**</ept> into the <bpt id=\"p2\">**</bpt>Web API URL suffix<ept id=\"p2\">**</ept> textbox."
    },
    {
      "pos": [
        13891,
        13955
      ],
      "content": "Click in the <bpt id=\"p1\">**</bpt>Products (optional)<ept id=\"p1\">**</ept> box and choose <bpt id=\"p2\">**</bpt>Starter<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        13959,
        13992
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> to import the API."
    },
    {
      "content": "Add new API",
      "pos": [
        13996,
        14007
      ]
    },
    {
      "content": "Once the API is imported, the summary page for the API is displayed in the publisher portal.",
      "pos": [
        14041,
        14133
      ]
    },
    {
      "content": "Call the API unsuccessfully from the developer portal",
      "pos": [
        14138,
        14191
      ]
    },
    {
      "content": "At this point, the API has been imported into API Management, but cannot yet be called successfully from the developer portal because the backend service is protected with Azure AD authentication.",
      "pos": [
        14193,
        14389
      ]
    },
    {
      "content": "This is demonstrated in the video starting at 7:40 using the following steps.",
      "pos": [
        14390,
        14467
      ]
    },
    {
      "pos": [
        14469,
        14544
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Developer portal<ept id=\"p1\">**</ept> from the top-right side of the publisher portal."
    },
    {
      "content": "Developer portal",
      "pos": [
        14548,
        14564
      ]
    },
    {
      "pos": [
        14605,
        14653
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>APIs<ept id=\"p1\">**</ept> and click the <bpt id=\"p2\">**</bpt>Calculator<ept id=\"p2\">**</ept> API."
    },
    {
      "content": "Developer portal",
      "pos": [
        14657,
        14673
      ]
    },
    {
      "pos": [
        14708,
        14725
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Try it<ept id=\"p1\">**</ept>."
    },
    {
      "content": "Try it",
      "pos": [
        14729,
        14735
      ]
    },
    {
      "pos": [
        14772,
        14840
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Send<ept id=\"p1\">**</ept> and note the response status of <bpt id=\"p2\">**</bpt>401 Unauthorized<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Send",
      "pos": [
        14844,
        14848
      ]
    },
    {
      "content": "The request is unauthorized because the backend API is protected by Azure Active Directory.",
      "pos": [
        14887,
        14978
      ]
    },
    {
      "content": "Before successfully calling the API the developer portal must be configured to authorize developers using OAuth 2.0.",
      "pos": [
        14979,
        15095
      ]
    },
    {
      "content": "This process is described in the following sections.",
      "pos": [
        15096,
        15148
      ]
    },
    {
      "content": "Register the developer portal as an AAD application",
      "pos": [
        15153,
        15204
      ]
    },
    {
      "content": "The first step in configuring the developer portal to authorize developers using OAuth 2.0 is to register the developer portal as an AAD application.",
      "pos": [
        15206,
        15355
      ]
    },
    {
      "content": "This is demonstrated starting at 8:27 in the video.",
      "pos": [
        15356,
        15407
      ]
    },
    {
      "pos": [
        15409,
        15546
      ],
      "content": "Navigate to the Azure AD tenant from the first step of this video, in this example <bpt id=\"p1\">**</bpt>APIMDemo<ept id=\"p1\">**</ept> and navigate to the <bpt id=\"p2\">**</bpt>Applications<ept id=\"p2\">**</ept> tab."
    },
    {
      "content": "New application",
      "pos": [
        15550,
        15565
      ]
    },
    {
      "pos": [
        15614,
        15755
      ],
      "content": "Click the <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> button to create a new Azure Active Directory application, and choose <bpt id=\"p2\">**</bpt>Add an application my organization is developing<ept id=\"p2\">**</ept>."
    },
    {
      "content": "New application",
      "pos": [
        15759,
        15774
      ]
    },
    {
      "content": "Choose <bpt id=\"p1\">**</bpt>Web application and/or Web API<ept id=\"p1\">**</ept>, enter a name, and click the next arrow.",
      "pos": [
        15818,
        15900
      ]
    },
    {
      "content": "In this example <bpt id=\"p1\">**</bpt>APIMDeveloperPortal<ept id=\"p1\">**</ept> is used.",
      "pos": [
        15901,
        15949
      ]
    },
    {
      "content": "New application",
      "pos": [
        15953,
        15968
      ]
    },
    {
      "content": "For <bpt id=\"p1\">**</bpt>Sign-on URL<ept id=\"p1\">**</ept> enter the URL of your API Management service and append <ph id=\"ph1\">`/signin`</ph>.",
      "pos": [
        16019,
        16105
      ]
    },
    {
      "content": "In this example **https://contoso5.portal.azure-api.net/signin **is used.",
      "pos": [
        16106,
        16179
      ]
    },
    {
      "content": "For <bpt id=\"p1\">**</bpt>App Id URL<ept id=\"p1\">**</ept> enter the URL of your API Management service and append some unique characters.",
      "pos": [
        16181,
        16279
      ]
    },
    {
      "content": "These can be any desired characters and in this example <bpt id=\"p1\">**</bpt>https://contoso5.portal.azure-api.net/dp<ept id=\"p1\">**</ept> is used.",
      "pos": [
        16280,
        16389
      ]
    },
    {
      "content": "When the  desired <bpt id=\"p1\">**</bpt>App properties<ept id=\"p1\">**</ept> are configured, click the check mark to create the application.",
      "pos": [
        16390,
        16490
      ]
    },
    {
      "content": "New application",
      "pos": [
        16494,
        16509
      ]
    },
    {
      "content": "Configure an API Management OAuth 2.0 authorization server",
      "pos": [
        16563,
        16621
      ]
    },
    {
      "content": "The next step is to configure an OAuth 2.0 authorization server in API Management.",
      "pos": [
        16623,
        16705
      ]
    },
    {
      "content": "This step is demonstrated in the video starting at 9:43.",
      "pos": [
        16706,
        16762
      ]
    },
    {
      "pos": [
        16764,
        16890
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Security<ept id=\"p1\">**</ept> from the API Management menu on the left, click <bpt id=\"p2\">**</bpt>OAuth 2.0<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>Add authorization<ept id=\"p3\">**</ept> server."
    },
    {
      "content": "Add authorization server",
      "pos": [
        16894,
        16918
      ]
    },
    {
      "content": "Enter a name and an optional description in the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Description<ept id=\"p2\">**</ept> fields.",
      "pos": [
        16962,
        17046
      ]
    },
    {
      "content": "These fields are used to identify the OAuth 2.0 authorization server within the API Management service instance.",
      "pos": [
        17047,
        17159
      ]
    },
    {
      "content": "In this example <bpt id=\"p1\">**</bpt>Authorization server demo<ept id=\"p1\">**</ept> is used.",
      "pos": [
        17160,
        17214
      ]
    },
    {
      "content": "Later when you specify an OAuth 2.0 server to be used for authentication for an API, you will select this name.",
      "pos": [
        17215,
        17326
      ]
    },
    {
      "content": "For the <bpt id=\"p1\">**</bpt>Client registration page URL<ept id=\"p1\">**</ept> enter a placeholder value such as <ph id=\"ph1\">`http://localhost`</ph>.",
      "pos": [
        17328,
        17422
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Client registration page URL<ept id=\"p1\">**</ept> points to the page that users can use to create and configure their own accounts for OAuth 2.0 providers that support user management of accounts.",
      "pos": [
        17424,
        17607
      ]
    },
    {
      "content": "In this example users do not create and configure their own accounts so a placeholder is used.",
      "pos": [
        17608,
        17702
      ]
    },
    {
      "content": "Add authorization server",
      "pos": [
        17706,
        17730
      ]
    },
    {
      "pos": [
        17776,
        17848
      ],
      "content": "Next, specify <bpt id=\"p1\">**</bpt>Authorization endpoint URL<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Token endpoint URL<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Authorization server",
      "pos": [
        17852,
        17872
      ]
    },
    {
      "content": "These values can be retrieved from the <bpt id=\"p1\">**</bpt>App Endpoints<ept id=\"p1\">**</ept> page of the AAD application you created for the developer portal.",
      "pos": [
        17919,
        18041
      ]
    },
    {
      "content": "To access the endpoints navigate to the <bpt id=\"p1\">**</bpt>Configure<ept id=\"p1\">**</ept> tab for the AAD application and click <bpt id=\"p2\">**</bpt>View endpoints<ept id=\"p2\">**</ept>.",
      "pos": [
        18042,
        18153
      ]
    },
    {
      "content": "Application",
      "pos": [
        18157,
        18168
      ]
    },
    {
      "content": "View endpoints",
      "pos": [
        18215,
        18229
      ]
    },
    {
      "pos": [
        18267,
        18374
      ],
      "content": "Copy the <bpt id=\"p1\">**</bpt>OAuth 2.0 authorization endpoint<ept id=\"p1\">**</ept> and paste it into the <bpt id=\"p2\">**</bpt>Authorization endpoint URL<ept id=\"p2\">**</ept> textbox."
    },
    {
      "content": "Add authorization server",
      "pos": [
        18378,
        18402
      ]
    },
    {
      "pos": [
        18448,
        18539
      ],
      "content": "Copy the <bpt id=\"p1\">**</bpt>OAuth 2.0 token endpoint<ept id=\"p1\">**</ept> and paste it into the <bpt id=\"p2\">**</bpt>Token endpoint URL<ept id=\"p2\">**</ept> textbox."
    },
    {
      "content": "Add authorization server",
      "pos": [
        18543,
        18567
      ]
    },
    {
      "pos": [
        18614,
        18864
      ],
      "content": "In addition to pasting in the token endpoint, add an additional body parameter named <bpt id=\"p1\">**</bpt>resource<ept id=\"p1\">**</ept> and for the value use the <bpt id=\"p2\">**</bpt>App Id URI<ept id=\"p2\">**</ept> from the AAD application for the backend service that was created when the Visual Studio project was published."
    },
    {
      "content": "App Id URI",
      "pos": [
        18868,
        18878
      ]
    },
    {
      "content": "Next, specify the client credentials.",
      "pos": [
        18909,
        18946
      ]
    },
    {
      "content": "These are the credentials for the resource you want to access, in this case the backend service.",
      "pos": [
        18947,
        19043
      ]
    },
    {
      "content": "Client credentials",
      "pos": [
        19047,
        19065
      ]
    },
    {
      "pos": [
        19103,
        19237
      ],
      "content": "To get the <bpt id=\"p1\">**</bpt>Client Id<ept id=\"p1\">**</ept>, navigate to the <bpt id=\"p2\">**</bpt>Configure<ept id=\"p2\">**</ept> tab of the AAD application for the backend service and copy the <bpt id=\"p3\">**</bpt>Client Id<ept id=\"p3\">**</ept>."
    },
    {
      "content": "To get the <bpt id=\"p1\">**</bpt>Client Secret<ept id=\"p1\">**</ept> click the <bpt id=\"p2\">**</bpt>Select duration<ept id=\"p2\">**</ept> drop-down in the <bpt id=\"p3\">**</bpt>Keys<ept id=\"p3\">**</ept> section and specify an interval.",
      "pos": [
        19239,
        19356
      ]
    },
    {
      "content": "In this example 1 year is used.",
      "pos": [
        19357,
        19388
      ]
    },
    {
      "content": "Client ID",
      "pos": [
        19392,
        19401
      ]
    },
    {
      "pos": [
        19434,
        19495
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> to save the configuration and display the key."
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> Make a note of this key.",
      "pos": [
        19499,
        19541
      ]
    },
    {
      "content": "Once you close the Azure Active Directory configuration window, the key cannot be displayed again.",
      "pos": [
        19542,
        19640
      ]
    },
    {
      "pos": [
        19642,
        19779
      ],
      "content": "Copy the key to the clipboard, switch back to the publisher portal, paste the key into the <bpt id=\"p1\">**</bpt>Client Secret<ept id=\"p1\">**</ept> textbox, and click <bpt id=\"p2\">**</bpt>Save<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Add authorization server",
      "pos": [
        19783,
        19807
      ]
    },
    {
      "content": "Immediately following the client credentials is an authorization code grant.",
      "pos": [
        19853,
        19929
      ]
    },
    {
      "content": "Copy this authorization code and switch back to your Azure AD developer portal application configure page, and paste the authorization grant into the <bpt id=\"p1\">**</bpt>Reply URL<ept id=\"p1\">**</ept> field, and click <bpt id=\"p2\">**</bpt>Save<ept id=\"p2\">**</ept> again.",
      "pos": [
        19930,
        20126
      ]
    },
    {
      "content": "Reply URL",
      "pos": [
        20130,
        20139
      ]
    },
    {
      "content": "The next step is to configure the permissions for the developer portal AAD application.",
      "pos": [
        20172,
        20259
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Application Permissions<ept id=\"p1\">**</ept> and check the box for <bpt id=\"p2\">**</bpt>Read directory data<ept id=\"p2\">**</ept>.",
      "pos": [
        20260,
        20340
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> to save this change, and then click <bpt id=\"p2\">**</bpt>Add application<ept id=\"p2\">**</ept>.",
      "pos": [
        20341,
        20412
      ]
    },
    {
      "content": "Add permissions",
      "pos": [
        20416,
        20431
      ]
    },
    {
      "pos": [
        20476,
        20598
      ],
      "content": "Click the search icon, type <bpt id=\"p1\">**</bpt>APIM<ept id=\"p1\">**</ept> into the Starting with box, select <bpt id=\"p2\">**</bpt>APIMAADDemo<ept id=\"p2\">**</ept>, and click the check mark to save."
    },
    {
      "content": "Add permissions",
      "pos": [
        20602,
        20617
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Delegated Permissions<ept id=\"p1\">**</ept> for <bpt id=\"p2\">**</bpt>APIMAADDemo<ept id=\"p2\">**</ept> and check the box for <bpt id=\"p3\">**</bpt>Access APIMAADDemo<ept id=\"p3\">**</ept>, and click <bpt id=\"p4\">**</bpt>Save<ept id=\"p4\">**</ept>.",
      "pos": [
        20660,
        20777
      ]
    },
    {
      "content": "This allows the developer portal application to access the backend service.",
      "pos": [
        20778,
        20853
      ]
    },
    {
      "content": "Add permissions",
      "pos": [
        20857,
        20872
      ]
    },
    {
      "content": "Enable OAuth 2.0 user authorization for the Calculator API",
      "pos": [
        20924,
        20982
      ]
    },
    {
      "content": "Now that the OAuth 2.0 server is configured, you can specify it in the security settings for your API.",
      "pos": [
        20984,
        21086
      ]
    },
    {
      "content": "This step is demonstrated in the video starting at 14:30.",
      "pos": [
        21087,
        21144
      ]
    },
    {
      "pos": [
        21146,
        21240
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>APIs<ept id=\"p1\">**</ept> in the left menu, and click  <bpt id=\"p2\">**</bpt>Calculator<ept id=\"p2\">**</ept> to view and configure its settings."
    },
    {
      "content": "Calculator API",
      "pos": [
        21244,
        21258
      ]
    },
    {
      "pos": [
        21286,
        21458
      ],
      "content": "Navigate to the <bpt id=\"p1\">**</bpt>Security<ept id=\"p1\">**</ept> tab, check the <bpt id=\"p2\">**</bpt>OAuth 2.0<ept id=\"p2\">**</ept> checkbox, select the desired authorization server from the <bpt id=\"p3\">**</bpt>Authorization server<ept id=\"p3\">**</ept> drop-down, and click <bpt id=\"p4\">**</bpt>Save<ept id=\"p4\">**</ept>."
    },
    {
      "content": "Calculator API",
      "pos": [
        21462,
        21476
      ]
    },
    {
      "content": "Successfully call the Calculator API from the developer portal",
      "pos": [
        21520,
        21582
      ]
    },
    {
      "content": "Now that the OAuth 2.0 authorization is configured on the API, its operations can be successfully called from the developer center.",
      "pos": [
        21584,
        21715
      ]
    },
    {
      "content": "THis step is demonstrated in the video starting at 15:00.",
      "pos": [
        21716,
        21773
      ]
    },
    {
      "content": "Navigate back to the <bpt id=\"p1\">**</bpt>Add two integers<ept id=\"p1\">**</ept> operation of the calculator service in the developer portal and click <bpt id=\"p2\">**</bpt>Try it<ept id=\"p2\">**</ept>.",
      "pos": [
        21775,
        21898
      ]
    },
    {
      "content": "Note the new item in the <bpt id=\"p1\">**</bpt>Authorization<ept id=\"p1\">**</ept> section corresponding to the authorization server you just added.",
      "pos": [
        21899,
        22007
      ]
    },
    {
      "content": "Calculator API",
      "pos": [
        22011,
        22025
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>Authorization code<ept id=\"p1\">**</ept> from the authorization drop-down list and enter the credentials of the account to use.",
      "pos": [
        22070,
        22186
      ]
    },
    {
      "content": "If you are already signed in with the account you may not be prompted.",
      "pos": [
        22187,
        22257
      ]
    },
    {
      "content": "Calculator API",
      "pos": [
        22261,
        22275
      ]
    },
    {
      "pos": [
        22323,
        22442
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Send<ept id=\"p1\">**</ept> and note the <bpt id=\"p2\">**</bpt>Response status<ept id=\"p2\">**</ept> of <bpt id=\"p3\">**</bpt>200 OK<ept id=\"p3\">**</ept> and the results of the operation in the response content."
    },
    {
      "content": "Calculator API",
      "pos": [
        22446,
        22460
      ]
    },
    {
      "content": "Configure a desktop application to call the API",
      "pos": [
        22501,
        22548
      ]
    },
    {
      "content": "The next procedure in the video starts at 16:30 and configures a simple desktop application to call the API.",
      "pos": [
        22550,
        22658
      ]
    },
    {
      "content": "The first step is to register the desktop application in Azure AD and give it access to the directory and to the backend service.",
      "pos": [
        22659,
        22788
      ]
    },
    {
      "content": "At 18:25 there is a demonstration of the desktop application calling an operation on the calculator API.",
      "pos": [
        22789,
        22893
      ]
    },
    {
      "content": "Configure a JWT validation policy to pre-authorize requests",
      "pos": [
        22898,
        22957
      ]
    },
    {
      "content": "The final procedure in the video starts at 20:48 and shows you how to use the <bpt id=\"p1\">[</bpt>Validate JWT<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/034febe3-465f-4840-9fc6-c448ef520b0f#ValidateJWT)</ept> policy to pre-authorize requests by validating the access tokens of each incoming request.",
      "pos": [
        22959,
        23233
      ]
    },
    {
      "content": "If the request is not validated by the Validate JWT policy, the request is blocked by API Management and is not passed along to the backend.",
      "pos": [
        23234,
        23374
      ]
    },
    {
      "content": "For another demonstration of configuring and using this policy, see <bpt id=\"p1\">[</bpt>Cloud Cover Episode 177: More API Management Features<ept id=\"p1\">](https://azure.microsoft.com/documentation/videos/episode-177-more-api-management-features-with-vlad-vinogradsky/)</ept> and fast-forward to 13:50.",
      "pos": [
        23861,
        24125
      ]
    },
    {
      "content": "Fast forward to 15:00 to see the policies configured in the policy editor and then to 18:50 for a demonstration of calling an operation from the developer portal both with and without the required authorization token.",
      "pos": [
        24126,
        24343
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        24348,
        24358
      ]
    },
    {
      "pos": [
        24363,
        24489
      ],
      "content": "Check out more <bpt id=\"p1\">[</bpt>videos<ept id=\"p1\">](https://azure.microsoft.com/documentation/videos/index/?services=api-management)</ept> about API Management."
    },
    {
      "pos": [
        24494,
        24696
      ],
      "content": "For other ways to secure your backend service, see <bpt id=\"p1\">[</bpt>Mutual Certificate authentication<ept id=\"p1\">](api-management-howto-mutual-certificates.md)</ept> and <bpt id=\"p2\">[</bpt>Connect via VPN or ExpressRoute<ept id=\"p2\">](api-management-howto-setup-vpn)</ept>."
    },
    {
      "content": "test",
      "pos": [
        30653,
        30657
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"How to protect a Web API backend with Azure Active Directory and API Management\"\n    description=\"Learn how to protect a Web API backend with Azure Active Directory and API Management.\" \n    services=\"api-management\"\n    documentationCenter=\"\"\n    authors=\"steved0x\"\n    manager=\"dwrede\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"api-management\"\n    ms.workload=\"mobile\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"na\"\n    ms.topic=\"article\"\n    ms.date=\"08/06/2015\"\n    ms.author=\"sdanie\"/>\n\n# How to protect a Web API backend with Azure Active Directory and API Management\n\nThe following video shows how to build a Web API backend and protect it using OAuth 2.0 protocol with Azure Active Directory and API Management.  This article provides an overview and additional information for the steps in the video. This 24 minute video shows you how to:\n\n-   Build a Web API backend and secure it with AAD - starting at 1:30\n-   Import the API into API Management - starting at 7:10\n-   Configure the Developer portal to call the API - starting at 9:09\n-   Configure a desktop application to call the API - starting at 18:08\n-   Configure a JWT validation policy to pre-authorize requests - starting at 20:47\n\n>[AZURE.VIDEO protecting-web-api-backend-with-azure-active-directory-and-api-management]\n\n## Create an Azure AD directory\n\nTo secure your Web API backed using Azure Active Directory you must first have a an AAD tenant. In this video a tenant named **APIMDemo** is used. To create an AAD tenant, sign-in to the [Azure portal](https://manage.windowsazure.com) and click **New**->**App Services**->**Active Directory**->**Directory**->**Custom Create**. \n\n![Azure Active Directory][api-management-create-aad-menu]\n\nIn this example a directory named **APIMDemo** is created with a default domain named **DemoAPIM.onmicrosoft.com**. This directory is used throughout the video.\n\n![Azure Active Directory][api-management-create-aad]\n\n## Create a Web API service secured by Azure Active Directory\n\nIn this step, a Web API backend is created using Visual Studio 2013. This step of the video starts at 1:30. To create Web API backend project in Visual Studio click **File**->**New**->**Project**, and choose **ASP.NET Web Application** from the **Web** templates list. In this video the project is named **APIMAADDemo**. Click **OK** to create the project. \n\n![Visual Studio][api-management-new-web-app]\n\nClick **Web API** from the **Select a template list** to create a Web API project. To configure Azure Directory Authentication click **Change Authentication**.\n\n![New project][api-management-new-project]\n\nClick **Organizational Accounts**, and specify the **Domain** of your AAD tenant. In this example the domain is **DemoAPIM.onmicrosoft.com**. The domain of your directory can be obtained from the **Domains** tab of your directory.\n\n![Domains][api-management-aad-domains]\n\nConfigure the desired settings in the **Change Authentication** dialog box and click **OK**.\n\n![Change authentication][api-management-change-authentication]\n\nWhen you click **OK** Visual Studio will attempt to register your application with your Azure AD directory and you may be prompted to sign in by Visual Studio. Sign in using an administrative account for your directory.\n\n![Sign in to Visual Studio][api-management-sign-in-vidual-studio]\n\nTo configure this project as an Azure Web API check the box for **Host in the cloud** and then click **OK**.\n\n![New project][api-management-new-project-cloud]\n\nYou may be prompted to sign in to Azure, and then you can configure the Web App.\n\n![Configure][api-management-configure-web-app]\n\nIn this example a new **App Service plan** named **APIMAADDemo** is specified.\n\nClick **OK** to configure the Web App and create the project.\n\n## Add the code to the Web API project\n\nThe next step in the video adds the code to the Web API project. This step starts at 4:35.\n\nThe Web API in this example implements a basic calculator service using a model and a controller. To add the model for the service, right-click **Models** in **Solution Explorer** and choose **Add**, **Class**. Name the class `CalcInput` and click **Add**.\n\nAdd the following `using` statement to the top of the `CalcInput.cs` file.\n\n    using Newtonsoft.Json;\n\n Replace the generated class with the following code.\n\n    public class CalcInput\n    {\n        [JsonProperty(PropertyName = \"a\")]\n        public int a;\n\n        [JsonProperty(PropertyName = \"b\")]\n        public int b;\n    }\n\nRight-click **Controllers** in **Solution Explorer** and choose **Add**->**Controller**. Choose **Web API 2 Controller - Empty** and click **Add**. Type **CalcController** for the Controller name and click **Add**.\n\n![Add Controller][api-management-add-controller]\n\nAdd the following `using` statement to the top of the `CalcController.cs` file.\n\n    using System.IO;\n    using System.Web;\n    using APIMAADDemo.Models;\n\nReplace the generated controller class with the following code. This code implements the `Add`, `Subtract`, `Multiply`, and `Divide` operations of the Basic Calculator API.\n\n    [Authorize]\n    public class CalcController : ApiController\n    {\n        [Route(\"api/add\")]\n        [HttpGet]\n        public HttpResponseMessage GetSum([FromUri]int a, [FromUri]int b)\n        {\n            string xml = string.Format(\"<result><value>{0}</value><broughtToYouBy>Azure API Management - http://azure.microsoft.com/apim/ </broughtToYouBy></result>\", a + b);\n            HttpResponseMessage response = Request.CreateResponse();\n            response.Content = new StringContent(xml, System.Text.Encoding.UTF8, \"application/xml\");\n            return response;\n        }\n\n        [Route(\"api/sub\")]\n        [HttpGet]\n        public HttpResponseMessage GetDiff([FromUri]int a, [FromUri]int b)\n        {\n            string xml = string.Format(\"<result><value>{0}</value><broughtToYouBy>Azure API Management - http://azure.microsoft.com/apim/ </broughtToYouBy></result>\", a - b);\n            HttpResponseMessage response = Request.CreateResponse();\n            response.Content = new StringContent(xml, System.Text.Encoding.UTF8, \"application/xml\");\n            return response;\n        }\n\n        [Route(\"api/mul\")]\n        [HttpGet]\n        public HttpResponseMessage GetProduct([FromUri]int a, [FromUri]int b)\n        {\n            string xml = string.Format(\"<result><value>{0}</value><broughtToYouBy>Azure API Management - http://azure.microsoft.com/apim/ </broughtToYouBy></result>\", a * b);\n            HttpResponseMessage response = Request.CreateResponse();\n            response.Content = new StringContent(xml, System.Text.Encoding.UTF8, \"application/xml\");\n            return response;\n        }\n\n        [Route(\"api/div\")]\n        [HttpGet]\n        public HttpResponseMessage GetDiv([FromUri]int a, [FromUri]int b)\n        {\n            string xml = string.Format(\"<result><value>{0}</value><broughtToYouBy>Azure API Management - http://azure.microsoft.com/apim/ </broughtToYouBy></result>\", a / b);\n            HttpResponseMessage response = Request.CreateResponse();\n            response.Content = new StringContent(xml, System.Text.Encoding.UTF8, \"application/xml\");\n            return response;\n        }\n    }\n\n\nPress **F6** to build and verify the solution.\n\n## Publish the project to Azure\n\nIn this step the Visual Studio project is published to Azure. This step of the video starts at 5:45.\n\nTo publish the project to Azure, right-click the **APIMAADDemo** project in Visual Studio and choose **Publish**. Keep the default settings in the **Publish Web** dialog box and click **Publish**.\n\n![Web Publish][api-management-web-publish]\n\n## Grant permissions to the Azure AD backend service application\n\nA new application for the backend service is created in your Azure AD directory as part of the configuring and publishing process of your Web API project. In this step of the video, starting at 6:13, permissions are granted to the Web API backend.\n\n![Application][api-management-aad-backend-app]\n\nClick the name of the application to configure the required permissions. Navigate to the **Configure** tab and scroll down to the **permissions to other applications** section. Click the **Application Permissions** drop-down beside **Windows** **Azure Active Directory**, check the box for **Read directory data**, and click **Save**.\n\n![Add permissions][api-management-aad-add-permissions]\n\n>[AZURE.NOTE] If **Windows** **Azure Active Directory** is not listed under permissions to other applications, click **Add application** and add it from the list.\n\nMake a note of the **App Id URI** for use in a subsequent step when an Azure AD application is configured for the API Management developer portal.\n\n![App Id URI][api-management-aad-sso-uri]\n\n## Import the Web API into API Management\n\nAPIs are configured from the API publisher portal, which is accessed through the Azure management portal. To reach the publisher portal, click **Manage** in the Azure Portal for your API Management service. If you have not yet created an API Management service instance, see [Create an API Management service instance][] in the [Manage your first API][] tutorial.\n\n![Publisher portal][api-management-management-console]\n\nOperations can be [added to APIs manually](api-management-howto-add-operations.md), or they can be imported. In this video, operations are imported in Swagger format starting at 6:40.\n\nCreate a file named `calcapi.json` with following contents and save it to your computer. Ensure that the `host` attribute points to your Web API backend. In this example `\"host\": \"apimaaddemo.azurewebsites.net\"` is used.\n\n    {\n      \"swagger\": \"2.0\",\n      \"info\": {\n        \"title\": \"Calculator\",\n        \"description\": \"Arithmetics over HTTP!\",\n        \"version\": \"1.0\"\n      },\n      \"host\": \"apimaaddemo.azurewebsites.net\",\n      \"basePath\": \"/api\",\n      \"schemes\": [\n        \"http\"\n      ],\n      \"paths\": {\n        \"/add?a={a}&b={b}\": {\n          \"get\": {\n            \"description\": \"Responds with a sum of two numbers.\",\n            \"operationId\": \"Add two integers\",\n            \"parameters\": [\n              {\n                \"name\": \"a\",\n                \"in\": \"query\",\n                \"description\": \"First operand. Default value is <code>51</code>.\",\n                \"required\": true,\n                \"default\": \"51\",\n                \"enum\": [\n                  \"51\"\n                ]\n              },\n              {\n                \"name\": \"b\",\n                \"in\": \"query\",\n                \"description\": \"Second operand. Default value is <code>49</code>.\",\n                \"required\": true,\n                \"default\": \"49\",\n                \"enum\": [\n                  \"49\"\n                ]\n              }\n            ],\n            \"responses\": {}\n          }\n        },\n        \"/sub?a={a}&b={b}\": {\n          \"get\": {\n            \"description\": \"Responds with a difference between two numbers.\",\n            \"operationId\": \"Subtract two integers\",\n            \"parameters\": [\n              {\n                \"name\": \"a\",\n                \"in\": \"query\",\n                \"description\": \"First operand. Default value is <code>100</code>.\",\n                \"required\": true,\n                \"default\": \"100\",\n                \"enum\": [\n                  \"100\"\n                ]\n              },\n              {\n                \"name\": \"b\",\n                \"in\": \"query\",\n                \"description\": \"Second operand. Default value is <code>50</code>.\",\n                \"required\": true,\n                \"default\": \"50\",\n                \"enum\": [\n                  \"50\"\n                ]\n              }\n            ],\n            \"responses\": {}\n          }\n        },\n        \"/div?a={a}&b={b}\": {\n          \"get\": {\n            \"description\": \"Responds with a quotient of two numbers.\",\n            \"operationId\": \"Divide two integers\",\n            \"parameters\": [\n              {\n                \"name\": \"a\",\n                \"in\": \"query\",\n                \"description\": \"First operand. Default value is <code>100</code>.\",\n                \"required\": true,\n                \"default\": \"100\",\n                \"enum\": [\n                  \"100\"\n                ]\n              },\n              {\n                \"name\": \"b\",\n                \"in\": \"query\",\n                \"description\": \"Second operand. Default value is <code>20</code>.\",\n                \"required\": true,\n                \"default\": \"20\",\n                \"enum\": [\n                  \"20\"\n                ]\n              }\n            ],\n            \"responses\": {}\n          }\n        },\n        \"/mul?a={a}&b={b}\": {\n          \"get\": {\n            \"description\": \"Responds with a product of two numbers.\",\n            \"operationId\": \"Multiply two integers\",\n            \"parameters\": [\n              {\n                \"name\": \"a\",\n                \"in\": \"query\",\n                \"description\": \"First operand. Default value is <code>20</code>.\",\n                \"required\": true,\n                \"default\": \"20\",\n                \"enum\": [\n                  \"20\"\n                ]\n              },\n              {\n                \"name\": \"b\",\n                \"in\": \"query\",\n                \"description\": \"Second operand. Default value is <code>5</code>.\",\n                \"required\": true,\n                \"default\": \"5\",\n                \"enum\": [\n                  \"5\"\n                ]\n              }\n            ],\n            \"responses\": {}\n          }\n        }\n      }\n    }\n\nTo import the calculator API, click **APIs** from the **API Management** menu on the left, and then click **Import API**.\n\n![Import API button][api-management-import-api]\n\nPerform the following steps to configure the calculator API.\n\n1. Click **From file**, browse to the `calculator.json` file you saved, and click the **Swagger** radio button.\n2. Type **calc** into the **Web API URL suffix** textbox.\n3. Click in the **Products (optional)** box and choose **Starter**.\n4. Click **Save** to import the API.\n\n![Add new API][api-management-import-new-api]\n\nOnce the API is imported, the summary page for the API is displayed in the publisher portal.\n\n## Call the API unsuccessfully from the developer portal\n\nAt this point, the API has been imported into API Management, but cannot yet be called successfully from the developer portal because the backend service is protected with Azure AD authentication. This is demonstrated in the video starting at 7:40 using the following steps.\n\nClick **Developer portal** from the top-right side of the publisher portal.\n\n![Developer portal][api-management-developer-portal-menu]\n\nClick **APIs** and click the **Calculator** API.\n\n![Developer portal][api-management-dev-portal-apis]\n\nClick **Try it**.\n\n![Try it][api-management-dev-portal-try-it]\n\nClick **Send** and note the response status of **401 Unauthorized**.\n\n![Send][api-management-dev-portal-send-401]\n\nThe request is unauthorized because the backend API is protected by Azure Active Directory. Before successfully calling the API the developer portal must be configured to authorize developers using OAuth 2.0. This process is described in the following sections.\n\n## Register the developer portal as an AAD application\n\nThe first step in configuring the developer portal to authorize developers using OAuth 2.0 is to register the developer portal as an AAD application. This is demonstrated starting at 8:27 in the video.\n\nNavigate to the Azure AD tenant from the first step of this video, in this example **APIMDemo** and navigate to the **Applications** tab.\n\n![New application][api-management-aad-new-application-devportal]\n\nClick the **Add** button to create a new Azure Active Directory application, and choose **Add an application my organization is developing**.\n\n![New application][api-management-new-aad-application-menu]\n\nChoose **Web application and/or Web API**, enter a name, and click the next arrow. In this example **APIMDeveloperPortal** is used.\n\n![New application][api-management-aad-new-application-devportal-1]\n\nFor **Sign-on URL** enter the URL of your API Management service and append `/signin`. In this example **https://contoso5.portal.azure-api.net/signin **is used.\n\nFor **App Id URL** enter the URL of your API Management service and append some unique characters. These can be any desired characters and in this example **https://contoso5.portal.azure-api.net/dp** is used. When the  desired **App properties** are configured, click the check mark to create the application.\n\n![New application][api-management-aad-new-application-devportal-2]\n\n## Configure an API Management OAuth 2.0 authorization server\n\nThe next step is to configure an OAuth 2.0 authorization server in API Management. This step is demonstrated in the video starting at 9:43.\n\nClick **Security** from the API Management menu on the left, click **OAuth 2.0**, and then click **Add authorization** server.\n\n![Add authorization server][api-management-add-authorization-server]\n\nEnter a name and an optional description in the **Name** and **Description** fields. These fields are used to identify the OAuth 2.0 authorization server within the API Management service instance. In this example **Authorization server demo** is used. Later when you specify an OAuth 2.0 server to be used for authentication for an API, you will select this name.\n\nFor the **Client registration page URL** enter a placeholder value such as `http://localhost`.  The **Client registration page URL** points to the page that users can use to create and configure their own accounts for OAuth 2.0 providers that support user management of accounts. In this example users do not create and configure their own accounts so a placeholder is used.\n\n![Add authorization server][api-management-add-authorization-server-1]\n\nNext, specify **Authorization endpoint URL** and **Token endpoint URL**.\n\n![Authorization server][api-management-add-authorization-server-1a]\n\nThese values can be retrieved from the **App Endpoints** page of the AAD application you created for the developer portal. To access the endpoints navigate to the **Configure** tab for the AAD application and click **View endpoints**.\n\n![Application][api-management-aad-devportal-application]\n\n![View endpoints][api-management-aad-view-endpoints]\n\nCopy the **OAuth 2.0 authorization endpoint** and paste it into the **Authorization endpoint URL** textbox.\n\n![Add authorization server][api-management-add-authorization-server-2]\n\nCopy the **OAuth 2.0 token endpoint** and paste it into the **Token endpoint URL** textbox.\n\n![Add authorization server][api-management-add-authorization-server-2a]\n\nIn addition to pasting in the token endpoint, add an additional body parameter named **resource** and for the value use the **App Id URI** from the AAD application for the backend service that was created when the Visual Studio project was published.\n\n![App Id URI][api-management-aad-sso-uri]\n\nNext, specify the client credentials. These are the credentials for the resource you want to access, in this case the backend service.\n\n![Client credentials][api-management-client-credentials]\n\nTo get the **Client Id**, navigate to the **Configure** tab of the AAD application for the backend service and copy the **Client Id**.\n\nTo get the **Client Secret** click the **Select duration** drop-down in the **Keys** section and specify an interval. In this example 1 year is used.\n\n![Client ID][api-management-aad-client-id]\n\nClick **Save** to save the configuration and display the key. \n\n>[AZURE.IMPORTANT] Make a note of this key. Once you close the Azure Active Directory configuration window, the key cannot be displayed again.\n\nCopy the key to the clipboard, switch back to the publisher portal, paste the key into the **Client Secret** textbox, and click **Save**.\n\n![Add authorization server][api-management-add-authorization-server-3]\n\nImmediately following the client credentials is an authorization code grant. Copy this authorization code and switch back to your Azure AD developer portal application configure page, and paste the authorization grant into the **Reply URL** field, and click **Save** again.\n\n![Reply URL][api-management-aad-reply-url]\n\nThe next step is to configure the permissions for the developer portal AAD application. Click **Application Permissions** and check the box for **Read directory data**. Click **Save** to save this change, and then click **Add application**.\n\n![Add permissions][api-management-add-devportal-permissions]\n\nClick the search icon, type **APIM** into the Starting with box, select **APIMAADDemo**, and click the check mark to save.\n\n![Add permissions][api-management-aad-add-app-permissions]\n\nClick **Delegated Permissions** for **APIMAADDemo** and check the box for **Access APIMAADDemo**, and click **Save**. This allows the developer portal application to access the backend service.\n\n![Add permissions][api-management-aad-add-delegated-permissions]\n\n## Enable OAuth 2.0 user authorization for the Calculator API\n\nNow that the OAuth 2.0 server is configured, you can specify it in the security settings for your API. This step is demonstrated in the video starting at 14:30.\n\nClick **APIs** in the left menu, and click  **Calculator** to view and configure its settings.\n\n![Calculator API][api-management-calc-api]\n\nNavigate to the **Security** tab, check the **OAuth 2.0** checkbox, select the desired authorization server from the **Authorization server** drop-down, and click **Save**.\n\n![Calculator API][api-management-enable-aad-calculator]\n\n## Successfully call the Calculator API from the developer portal\n\nNow that the OAuth 2.0 authorization is configured on the API, its operations can be successfully called from the developer center. THis step is demonstrated in the video starting at 15:00.\n\nNavigate back to the **Add two integers** operation of the calculator service in the developer portal and click **Try it**. Note the new item in the **Authorization** section corresponding to the authorization server you just added.\n\n![Calculator API][api-management-calc-authorization-server]\n\nSelect **Authorization code** from the authorization drop-down list and enter the credentials of the account to use. If you are already signed in with the account you may not be prompted.\n\n![Calculator API][api-management-devportal-authorization-code]\n\nClick **Send** and note the **Response status** of **200 OK** and the results of the operation in the response content.\n\n![Calculator API][api-management-devportal-response]\n\n## Configure a desktop application to call the API\n\nThe next procedure in the video starts at 16:30 and configures a simple desktop application to call the API. The first step is to register the desktop application in Azure AD and give it access to the directory and to the backend service. At 18:25 there is a demonstration of the desktop application calling an operation on the calculator API.\n\n## Configure a JWT validation policy to pre-authorize requests\n\nThe final procedure in the video starts at 20:48 and shows you how to use the [Validate JWT](https://msdn.microsoft.com/library/azure/034febe3-465f-4840-9fc6-c448ef520b0f#ValidateJWT) policy to pre-authorize requests by validating the access tokens of each incoming request. If the request is not validated by the Validate JWT policy, the request is blocked by API Management and is not passed along to the backend.\n\n    <validate-jwt header-name=\"Authorization\" failed-validation-httpcode=\"401\" failed-validation-error-message=\"Unauthorized. Access token is missing or invalid.\">\n        <openid-config url=\"https://login.windows.net/DemoAPIM.onmicrosoft.com/.well-known/openid-configuration\" />\n        <required-claims>\n            <claim name=\"aud\">\n                <value>https://DemoAPIM.NOTonmicrosoft.com/APIMAADDemo</value>\n            </claim>\n        </required-claims>\n    </validate-jwt>\n\nFor another demonstration of configuring and using this policy, see [Cloud Cover Episode 177: More API Management Features](https://azure.microsoft.com/documentation/videos/episode-177-more-api-management-features-with-vlad-vinogradsky/) and fast-forward to 13:50. Fast forward to 15:00 to see the policies configured in the policy editor and then to 18:50 for a demonstration of calling an operation from the developer portal both with and without the required authorization token.\n\n## Next steps\n-   Check out more [videos](https://azure.microsoft.com/documentation/videos/index/?services=api-management) about API Management.\n-   For other ways to secure your backend service, see [Mutual Certificate authentication](api-management-howto-mutual-certificates.md) and [Connect via VPN or ExpressRoute](api-management-howto-setup-vpn).\n\n[api-management-management-console]: ./media/api-management-howto-protect-backend-with-aad/api-management-management-console.png\n\n[api-management-import-api]: ./media/api-management-howto-protect-backend-with-aad/api-management-import-api.png\n[api-management-import-new-api]: ./media/api-management-howto-protect-backend-with-aad/api-management-import-new-api.png\n[api-management-create-aad-menu]: ./media/api-management-howto-protect-backend-with-aad/api-management-create-aad-menu.png\n[api-management-create-aad]: ./media/api-management-howto-protect-backend-with-aad/api-management-create-aad.png\n[api-management-new-web-app]: ./media/api-management-howto-protect-backend-with-aad/api-management-new-web-app.png\n[api-management-new-project]: ./media/api-management-howto-protect-backend-with-aad/api-management-new-project.png\n[api-management-new-project-cloud]: ./media/api-management-howto-protect-backend-with-aad/api-management-new-project-cloud.png\n[api-management-change-authentication]: ./media/api-management-howto-protect-backend-with-aad/api-management-change-authentication.png\n[api-management-sign-in-vidual-studio]: ./media/api-management-howto-protect-backend-with-aad/api-management-sign-in-vidual-studio.png\n[api-management-configure-web-app]: ./media/api-management-howto-protect-backend-with-aad/api-management-configure-web-app.png\n[api-management-aad-domains]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-domains.png\n[api-management-add-controller]: ./media/api-management-howto-protect-backend-with-aad/api-management-add-controller.png\n[api-management-web-publish]: ./media/api-management-howto-protect-backend-with-aad/api-management-web-publish.png\n[api-management-aad-backend-app]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-backend-app.png\n[api-management-aad-add-permissions]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-add-permissions.png\n[api-management-developer-portal-menu]: ./media/api-management-howto-protect-backend-with-aad/api-management-developer-portal-menu.png\n[api-management-dev-portal-apis]: ./media/api-management-howto-protect-backend-with-aad/api-management-dev-portal-apis.png\n[api-management-dev-portal-try-it]: ./media/api-management-howto-protect-backend-with-aad/api-management-dev-portal-try-it.png\n[api-management-dev-portal-send-401]: ./media/api-management-howto-protect-backend-with-aad/api-management-dev-portal-send-401.png\n[api-management-aad-new-application-devportal]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-new-application-devportal.png\n[api-management-aad-new-application-devportal-1]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-new-application-devportal-1.png\n[api-management-aad-new-application-devportal-2]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-new-application-devportal-2.png\n[api-management-aad-devportal-application]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-devportal-application.png\n[api-management-add-authorization-server]: ./media/api-management-howto-protect-backend-with-aad/api-management-add-authorization-server.png\n[api-management-aad-sso-uri]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-sso-uri.png\n[api-management-aad-view-endpoints]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-view-endpoints.png\n[api-management-aad-client-id]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-client-id.png\n[api-management-add-authorization-server-1]: ./media/api-management-howto-protect-backend-with-aad/api-management-add-authorization-server-1.png\n[api-management-add-authorization-server-2]: ./media/api-management-howto-protect-backend-with-aad/api-management-add-authorization-server-2.png\n[api-management-add-authorization-server-2a]: ./media/api-management-howto-protect-backend-with-aad/api-management-add-authorization-server-2a.png\n[api-management-add-authorization-server-3]: ./media/api-management-howto-protect-backend-with-aad/api-management-add-authorization-server-3.png\n[api-management-aad-reply-url]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-reply-url.png\n[api-management-add-devportal-permissions]: ./media/api-management-howto-protect-backend-with-aad/api-management-add-devportal-permissions.png\n[api-management-aad-add-app-permissions]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-add-app-permissions.png\n[api-management-aad-add-delegated-permissions]: ./media/api-management-howto-protect-backend-with-aad/api-management-aad-add-delegated-permissions.png\n[api-management-calc-api]: ./media/api-management-howto-protect-backend-with-aad/api-management-calc-api.png\n[api-management-enable-aad-calculator]: ./media/api-management-howto-protect-backend-with-aad/api-management-enable-aad-calculator.png\n[api-management-devportal-authorization-code]: ./media/api-management-howto-protect-backend-with-aad/api-management-devportal-authorization-code.png\n[api-management-devportal-response]: ./media/api-management-howto-protect-backend-with-aad/api-management-devportal-response.png\n[api-management-calc-authorization-server]: ./media/api-management-howto-protect-backend-with-aad/api-management-calc-authorization-server.png\n[api-management-add-authorization-server-1a]: ./media/api-management-howto-protect-backend-with-aad/api-management-add-authorization-server-1a.png\n[api-management-client-credentials]: ./media/api-management-howto-protect-backend-with-aad/api-management-client-credentials.png\n[api-management-new-aad-application-menu]: ./media/api-management-howto-protect-backend-with-aad/api-management-new-aad-application-menu.png\n\n[Create an API Management service instance]: api-management-get-started.md#create-service-instance\n[Manage your first API]: api-management-get-started.md\n\ntest\n"
}