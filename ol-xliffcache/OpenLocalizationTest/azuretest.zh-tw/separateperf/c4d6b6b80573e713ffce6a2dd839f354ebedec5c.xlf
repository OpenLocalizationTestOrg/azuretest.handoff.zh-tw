<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a Node.js chat application with Socket.IO in Azure App Service</source>
          <target state="new">Create a Node.js chat application with Socket.IO in Azure App Service</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A tutorial that demonstrates using socket.io in a node.js web app hosted on Azure.</source>
          <target state="new">A tutorial that demonstrates using socket.io in a node.js web app hosted on Azure.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create a Node.js chat application with Socket.IO in Azure App Service</source>
          <target state="new">Create a Node.js chat application with Socket.IO in Azure App Service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Socket.IO provides real-time communication between your node.js server and clients using WebSockets.</source>
          <target state="new">Socket.IO provides real-time communication between your node.js server and clients using WebSockets.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It also supports fallback to other transports (such as long polling) that work with older browsers.</source>
          <target state="new">It also supports fallback to other transports (such as long polling) that work with older browsers.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This tutorial will walk you through hosting a Socket.IO based chat application as an Azure web app, and show you how to <bpt id="p1">[</bpt>scale<ept id="p1">](#scale-out)</ept> the application using <bpt id="p2">[</bpt>Azure Redis Cache<ept id="p2">](http://azure.microsoft.com/documentation/services/cache)</ept>.</source>
          <target state="new">This tutorial will walk you through hosting a Socket.IO based chat application as an Azure web app, and show you how to <bpt id="p1">[</bpt>scale<ept id="p1">](#scale-out)</ept> the application using <bpt id="p2">[</bpt>Azure Redis Cache<ept id="p2">](http://azure.microsoft.com/documentation/services/cache)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information on Socket.IO, see <bpt id="p1">[</bpt>http://socket.io/<ept id="p1">][socketio]</ept>.</source>
          <target state="new">For more information on Socket.IO, see <bpt id="p1">[</bpt>http://socket.io/<ept id="p1">][socketio]</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The procedures in this task apply to <bpt id="p1">[</bpt>App Service Web Apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept>; for Cloud Services, see <ph id="ph2">&lt;a href="http://www.windowsazure.com/develop/nodejs/tutorials/app-using-socketio/"&gt;</ph>Build a Node.js Chat Application with Socket.IO on an Azure Cloud Service<ph id="ph3">&lt;/a&gt;</ph>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The procedures in this task apply to <bpt id="p1">[</bpt>App Service Web Apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept>; for Cloud Services, see <ph id="ph2">&lt;a href="http://www.windowsazure.com/develop/nodejs/tutorials/app-using-socketio/"&gt;</ph>Build a Node.js Chat Application with Socket.IO on an Azure Cloud Service<ph id="ph3">&lt;/a&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Download the chat example</source>
          <target state="new">Download the chat example</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For this project, we will use the chat example from the <bpt id="p1">[</bpt><ph id="ph1">Socket.IO</ph>
GitHub repository<ept id="p1">]</ept>.</source>
          <target state="new">For this project, we will use the chat example from the <bpt id="p1">[</bpt><ph id="ph1">Socket.IO</ph>
GitHub repository<ept id="p1">]</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Perform the following steps to download the example</source>
          <target state="new">Perform the following steps to download the example</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>and add it to the project you previously created.</source>
          <target state="new">and add it to the project you previously created.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Download a <bpt id="p1">[</bpt>ZIP or GZ archived release<ept id="p1">][release]</ept> of the Socket.IO project (version 1.3.5 was used for this document)</source>
          <target state="new">Download a <bpt id="p1">[</bpt>ZIP or GZ archived release<ept id="p1">][release]</ept> of the Socket.IO project (version 1.3.5 was used for this document)</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Extract the archive and copy the <bpt id="p1">**</bpt>examples\\chat<ept id="p1">**</ept></source>
          <target state="new">Extract the archive and copy the <bpt id="p1">**</bpt>examples\\chat<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>directory to a new location.</source>
          <target state="new">directory to a new location.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="new">For example,</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\\node\\chat<ept id="p1">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>\\node\\chat<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Modify app.js and install modules</source>
          <target state="new">Modify app.js and install modules</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Rename the <bpt id="p1">**</bpt>index.js<ept id="p1">**</ept> file to <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept>.</source>
          <target state="new">Rename the <bpt id="p1">**</bpt>index.js<ept id="p1">**</ept> file to <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This allows Azure to detect that this is a Node.js application.</source>
          <target state="new">This allows Azure to detect that this is a Node.js application.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file in a text editor.</source>
          <target state="new">Open the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file in a text editor.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Change the line containing <ph id="ph1">`var io = require('../..')(server);`</ph> as shown below:</source>
          <target state="new">Change the line containing <ph id="ph1">`var io = require('../..')(server);`</ph> as shown below:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> file and add a reference to socket.io under <ph id="ph1">`dependencies`</ph>, as shown below:</source>
          <target state="new">Open the <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> file and add a reference to socket.io under <ph id="ph1">`dependencies`</ph>, as shown below:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>From the command-line, change to the <bpt id="p1">**</bpt>\\node\\chat<ept id="p1">**</ept> directory and use npm to install the modules required by this application:</source>
          <target state="new">From the command-line, change to the <bpt id="p1">**</bpt>\\node\\chat<ept id="p1">**</ept> directory and use npm to install the modules required by this application:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This will install the modules into a subfolder named <bpt id="p1">**</bpt>node_modules<ept id="p1">**</ept>.</source>
          <target state="new">This will install the modules into a subfolder named <bpt id="p1">**</bpt>node_modules<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create an Azure Web App</source>
          <target state="new">Create an Azure Web App</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Follow these steps to create an Azure web app, enable Git publishing, and then enable WebSocket support for the web app.</source>
          <target state="new">Follow these steps to create an Azure web app, enable Git publishing, and then enable WebSocket support for the web app.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> To complete this tutorial, you need an Azure account.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> To complete this tutorial, you need an Azure account.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you don't have an account, you can create a free trial account in just a couple of minutes.</source>
          <target state="new">If you don't have an account, you can create a free trial account in just a couple of minutes.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For details, see <ph id="ph1">&lt;a href="http://www.windowsazure.com/pricing/free-trial/?WT.mc_id=A7171371E" target="_blank"&gt;</ph>Azure Free Trial<ph id="ph2">&lt;/a&gt;</ph>.</source>
          <target state="new">For details, see <ph id="ph1">&lt;a href="http://www.windowsazure.com/pricing/free-trial/?WT.mc_id=A7171371E" target="_blank"&gt;</ph>Azure Free Trial<ph id="ph2">&lt;/a&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Install the Azure Command-Line Interface (Azure CLI) and connect to your Azure subscription.</source>
          <target state="new">Install the Azure Command-Line Interface (Azure CLI) and connect to your Azure subscription.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Install and Configure the Azure CLI<ept id="p1">](xplat-cli)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Install and Configure the Azure CLI<ept id="p1">](xplat-cli)</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If this is your first time setting up a repository in Azure, you need to create login credentials.</source>
          <target state="new">If this is your first time setting up a repository in Azure, you need to create login credentials.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>From the Azure CLI, enter the following command:</source>
          <target state="new">From the Azure CLI, enter the following command:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Change to the <bpt id="p1">**</bpt>\\node\chat<ept id="p1">**</ept> directory and use the following command to create a new Azure web app and a local Git repository.</source>
          <target state="new">Change to the <bpt id="p1">**</bpt>\\node\chat<ept id="p1">**</ept> directory and use the following command to create a new Azure web app and a local Git repository.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command also creates a Git remote named 'azure'.</source>
          <target state="new">This command also creates a Git remote named 'azure'.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You must replace 'mysitename' with a unique name for your web app.</source>
          <target state="new">You must replace 'mysitename' with a unique name for your web app.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Commit the existing files to the local repository by using the following commands:</source>
          <target state="new">Commit the existing files to the local repository by using the following commands:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Push the files to the Azure Web Apps repository with the following command:</source>
          <target state="new">Push the files to the Azure Web Apps repository with the following command:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When prompted, enter your credentials from step 2.</source>
          <target state="new">When prompted, enter your credentials from step 2.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You will receive status messages as modules are imported on the server.</source>
          <target state="new">You will receive status messages as modules are imported on the server.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Once this process has completed, the application will be hosted on your Azure web app.</source>
          <target state="new">Once this process has completed, the application will be hosted on your Azure web app.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> During module installation, you may notice errors that 'The imported project ... was not found'.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> During module installation, you may notice errors that 'The imported project ... was not found'.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>These can safely be ignored.</source>
          <target state="new">These can safely be ignored.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Socket.IO uses WebSockets, which are not enabled by default on Azure.</source>
          <target state="new">Socket.IO uses WebSockets, which are not enabled by default on Azure.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To enable web sockets, use the following command:</source>
          <target state="new">To enable web sockets, use the following command:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If prompted, enter the name of the web app.</source>
          <target state="new">If prompted, enter the name of the web app.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The 'azure site set -w' command will work only with version 0.7.4 or higher of the Azure Command-Line Interface.</source>
          <target state="new">The 'azure site set -w' command will work only with version 0.7.4 or higher of the Azure Command-Line Interface.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can also enable WebSocket support using the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">](https://portal.azure.com)</ept>.</source>
          <target state="new">You can also enable WebSocket support using the <bpt id="p1">[</bpt>Azure Portal<ept id="p1">](https://portal.azure.com)</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To enable WebSockets using the Azure Portal, click the web app from the Web Apps blade, click <bpt id="p1">**</bpt>All settings<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Application settings<ept id="p2">**</ept>.</source>
          <target state="new">To enable WebSockets using the Azure Portal, click the web app from the Web Apps blade, click <bpt id="p1">**</bpt>All settings<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Application settings<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Web Sockets<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>On<ept id="p2">**</ept>.</source>
          <target state="new">Under <bpt id="p1">**</bpt>Web Sockets<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>On<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Then click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</source>
          <target state="new">Then click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To view the web app on Azure, use the following command to launch your web browser and navigate to the hosted web app:</source>
          <target state="new">To view the web app on Azure, use the following command to launch your web browser and navigate to the hosted web app:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Your app is now running on Azure, and can relay chat messages between different clients using Socket.IO.</source>
          <target state="new">Your app is now running on Azure, and can relay chat messages between different clients using Socket.IO.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Scale out</source>
          <target state="new">Scale out</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Socket.IO applications can be scaled out by using an <bpt id="p1">__</bpt>adapter<ept id="p1">__</ept> to distribute messages and events between multiple application instances.</source>
          <target state="new">Socket.IO applications can be scaled out by using an <bpt id="p1">__</bpt>adapter<ept id="p1">__</ept> to distribute messages and events between multiple application instances.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>While there are several adapters available, the <bpt id="p1">[</bpt>socket.io-redis<ept id="p1">](https://github.com/automattic/socket.io-redis)</ept> adapter can be easily used with the Azure Redis Cache feature.</source>
          <target state="new">While there are several adapters available, the <bpt id="p1">[</bpt>socket.io-redis<ept id="p1">](https://github.com/automattic/socket.io-redis)</ept> adapter can be easily used with the Azure Redis Cache feature.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> An additional requirement for scaling out a Socket.IO solution is support for sticky sessions.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> An additional requirement for scaling out a Socket.IO solution is support for sticky sessions.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Sticky sessions are enabled by default for Azure Web Apps through Azure Request Routing.</source>
          <target state="new">Sticky sessions are enabled by default for Azure Web Apps through Azure Request Routing.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Instance Affinity in Azure Web Sites<ept id="p1">](http://azure.microsoft.com/blog/2013/11/18/disabling-arrs-instance-affinity-in-windows-azure-web-sites/)</ept></source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Instance Affinity in Azure Web Sites<ept id="p1">](http://azure.microsoft.com/blog/2013/11/18/disabling-arrs-instance-affinity-in-windows-azure-web-sites/)</ept></target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Create a Redis cache</source>
          <target state="new">Create a Redis cache</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Perform the steps in <bpt id="p1">[</bpt>Create a cache in Azure Redis Cache<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=398592&amp;clcid=0x409)</ept> to create a new cache.</source>
          <target state="new">Perform the steps in <bpt id="p1">[</bpt>Create a cache in Azure Redis Cache<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=398592&amp;clcid=0x409)</ept> to create a new cache.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Save the <bpt id="p1">__</bpt>Host name<ept id="p1">__</ept> and <bpt id="p2">__</bpt>Primary key<ept id="p2">__</ept> for your cache, as these will be needed in the next steps.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Save the <bpt id="p1">__</bpt>Host name<ept id="p1">__</ept> and <bpt id="p2">__</bpt>Primary key<ept id="p2">__</ept> for your cache, as these will be needed in the next steps.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Add the redis and socket.io-redis modules</source>
          <target state="new">Add the redis and socket.io-redis modules</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>From a command-line, change to the <bpt id="p1">__</bpt>\\node\\chat<ept id="p1">__</ept> directory and use the following command.</source>
          <target state="new">From a command-line, change to the <bpt id="p1">__</bpt>\\node\\chat<ept id="p1">__</ept> directory and use the following command.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The versions specified in this command are the versions used when testing this article.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The versions specified in this command are the versions used when testing this article.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Modify the <bpt id="p1">__</bpt>app.js<ept id="p1">__</ept> file to add the following lines immediately after <ph id="ph1">`var io = require('socket.io')(server);`</ph></source>
          <target state="new">Modify the <bpt id="p1">__</bpt>app.js<ept id="p1">__</ept> file to add the following lines immediately after <ph id="ph1">`var io = require('socket.io')(server);`</ph></target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">__</bpt>redishostname<ept id="p1">__</ept> and <bpt id="p2">__</bpt>rediskey<ept id="p2">__</ept> with the host name and key for your Redis cache.</source>
          <target state="new">Replace <bpt id="p1">__</bpt>redishostname<ept id="p1">__</ept> and <bpt id="p2">__</bpt>rediskey<ept id="p2">__</ept> with the host name and key for your Redis cache.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This will create a publish and subscribe client to the Redis cache created previously.</source>
          <target state="new">This will create a publish and subscribe client to the Redis cache created previously.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The clients are then used with the adapter to configure Socket.IO to use the Redis cache for passing messages and events between instances of your application</source>
          <target state="new">The clients are then used with the adapter to configure Socket.IO to use the Redis cache for passing messages and events between instances of your application</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> While the <bpt id="p1">__</bpt>socket.io-redis<ept id="p1">__</ept> adapter can communicate directly to Redis, the current version does not support the authentication required by Azure Redis cache.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> While the <bpt id="p1">__</bpt>socket.io-redis<ept id="p1">__</ept> adapter can communicate directly to Redis, the current version does not support the authentication required by Azure Redis cache.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>So the initial connection is created using the <bpt id="p1">__</bpt>redis<ept id="p1">__</ept> module, then the client is passed to the <bpt id="p2">__</bpt>socket.io-redis<ept id="p2">__</ept> adapter.</source>
          <target state="new">So the initial connection is created using the <bpt id="p1">__</bpt>redis<ept id="p1">__</ept> module, then the client is passed to the <bpt id="p2">__</bpt>socket.io-redis<ept id="p2">__</ept> adapter.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>While Azure Redis Cache supports secure connections using port 6380, the modules used in this example do not support secure connections as of 7/14/2014.</source>
          <target state="new">While Azure Redis Cache supports secure connections using port 6380, the modules used in this example do not support secure connections as of 7/14/2014.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The above code uses the default, unsecure port of 6380.</source>
          <target state="new">The above code uses the default, unsecure port of 6380.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Save the modified <bpt id="p1">__</bpt>app.js<ept id="p1">__</ept></source>
          <target state="new">Save the modified <bpt id="p1">__</bpt>app.js<ept id="p1">__</ept></target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Commit changes and redeploy</source>
          <target state="new">Commit changes and redeploy</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>From the command-line in the <bpt id="p1">__</bpt>\\node\\chat<ept id="p1">__</ept> directory, use the following commands to commit changes and redeploy the application.</source>
          <target state="new">From the command-line in the <bpt id="p1">__</bpt>\\node\\chat<ept id="p1">__</ept> directory, use the following commands to commit changes and redeploy the application.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Once the changes have been pushed to the server, you can scale your site across multiple instances by using the following command.</source>
          <target state="new">Once the changes have been pushed to the server, you can scale your site across multiple instances by using the following command.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Where <bpt id="p1">__</bpt>#<ept id="p1">__</ept> is the number of instances to create.</source>
          <target state="new">Where <bpt id="p1">__</bpt>#<ept id="p1">__</ept> is the number of instances to create.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can connect to your web app from multiple browsers or computers to verify that messages are correctly sent to all clients.</source>
          <target state="new">You can connect to your web app from multiple browsers or computers to verify that messages are correctly sent to all clients.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="new">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Connection limits</source>
          <target state="new">Connection limits</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Azure Web Apps is available in multiple SKUs, which determine the resources available to your site.</source>
          <target state="new">Azure Web Apps is available in multiple SKUs, which determine the resources available to your site.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This includes the number of allowed WebSocket connections.</source>
          <target state="new">This includes the number of allowed WebSocket connections.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Web Apps Pricing page<ept id="p1">][pricing]</ept>.</source>
          <target state="new">For more information, see the <bpt id="p1">[</bpt>Web Apps Pricing page<ept id="p1">][pricing]</ept>.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Messages aren't being sent using WebSockets</source>
          <target state="new">Messages aren't being sent using WebSockets</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If client browsers keep falling back to long polling instead of using WebSockets, it may be because of one of the following.</source>
          <target state="new">If client browsers keep falling back to long polling instead of using WebSockets, it may be because of one of the following.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Try limiting the transport to just WebSockets</source>
          <target state="new">Try limiting the transport to just WebSockets</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>In order for Socket.IO to use WebSockets as the messaging transport, both the server and client must support WebSockets.</source>
          <target state="new">In order for Socket.IO to use WebSockets as the messaging transport, both the server and client must support WebSockets.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If one or the other does not, Socket.IO will negotiate another transport, such as long polling.</source>
          <target state="new">If one or the other does not, Socket.IO will negotiate another transport, such as long polling.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The default list of transports used by Socket.IO is <ph id="ph1">` websocket, htmlfile, xhr-polling, jsonp-polling`</ph>.</source>
          <target state="new">The default list of transports used by Socket.IO is <ph id="ph1">` websocket, htmlfile, xhr-polling, jsonp-polling`</ph>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can force it to only use WebSockets by adding the following code to the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file, after the line containing <ph id="ph1">`, nicknames = {};`</ph>.</source>
          <target state="new">You can force it to only use WebSockets by adding the following code to the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file, after the line containing <ph id="ph1">`, nicknames = {};`</ph>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Note that older browsers that do not support WebSockets will not be able to connect to the site while the above code is active, as it restricts communication to WebSockets only.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Note that older browsers that do not support WebSockets will not be able to connect to the site while the above code is active, as it restricts communication to WebSockets only.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Use SSL</source>
          <target state="new">Use SSL</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>WebSockets relies on some lesser used HTTP headers, such as the <bpt id="p1">**</bpt>Upgrade<ept id="p1">**</ept> header.</source>
          <target state="new">WebSockets relies on some lesser used HTTP headers, such as the <bpt id="p1">**</bpt>Upgrade<ept id="p1">**</ept> header.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Some intermediate network devices, such as web proxies, may remove these headers.</source>
          <target state="new">Some intermediate network devices, such as web proxies, may remove these headers.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To avoid this problem, you can establish the WebSocket connection over SSL.</source>
          <target state="new">To avoid this problem, you can establish the WebSocket connection over SSL.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An easy way to accomplish this is to configure Socket.IO to <ph id="ph1">`match origin protocol`</ph>.</source>
          <target state="new">An easy way to accomplish this is to configure Socket.IO to <ph id="ph1">`match origin protocol`</ph>.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This instructs Socket.IO to secure WebSockets communication the same as the originating HTTP/HTTPS request for the web page.</source>
          <target state="new">This instructs Socket.IO to secure WebSockets communication the same as the originating HTTP/HTTPS request for the web page.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If a browser uses an HTTPS URL to visit your website, subsequent WebSocket communications through Socket.IO will be secured over SSL.</source>
          <target state="new">If a browser uses an HTTPS URL to visit your website, subsequent WebSocket communications through Socket.IO will be secured over SSL.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To modify this example to enable this configuration, add the following code to the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file after the line containing <ph id="ph1">`, nicknames = {};`</ph>.</source>
          <target state="new">To modify this example to enable this configuration, add the following code to the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file after the line containing <ph id="ph1">`, nicknames = {};`</ph>.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Verify web.config settings</source>
          <target state="new">Verify web.config settings</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Azure web apps that host Node.js applications use the <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file to route incoming requests to the Node.js application.</source>
          <target state="new">Azure web apps that host Node.js applications use the <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file to route incoming requests to the Node.js application.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For WebSockets to function correctly with Node.js applications, the <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> must contain the following entry.</source>
          <target state="new">For WebSockets to function correctly with Node.js applications, the <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> must contain the following entry.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This disables the IIS WebSockets module, which includes its own implementation of WebSockets and conflicts with Node.js specific WebSocket modules such as Socket.IO.</source>
          <target state="new">This disables the IIS WebSockets module, which includes its own implementation of WebSockets and conflicts with Node.js specific WebSocket modules such as Socket.IO.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If this line is not present, or is set to <ph id="ph1">`true`</ph>, this may be the reason that the WebSocket transport is not working for your application.</source>
          <target state="new">If this line is not present, or is set to <ph id="ph1">`true`</ph>, this may be the reason that the WebSocket transport is not working for your application.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Normally, Node.js applications do not include a <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file, so Azure Websites will automatically generate one for Node.js applications when they are deployed.</source>
          <target state="new">Normally, Node.js applications do not include a <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file, so Azure Websites will automatically generate one for Node.js applications when they are deployed.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Since this file is automatically generated on the server, you must use the FTP or FTPS URL for your website to view this file.</source>
          <target state="new">Since this file is automatically generated on the server, you must use the FTP or FTPS URL for your website to view this file.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can find the FTP and FTPS URLs for your site in the Azure Management portal by selecting your website, and then the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> link.</source>
          <target state="new">You can find the FTP and FTPS URLs for your site in the Azure Management portal by selecting your website, and then the <bpt id="p1">**</bpt>Dashboard<ept id="p1">**</ept> link.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The URLs are displayed in the <bpt id="p1">**</bpt>quick glance<ept id="p1">**</ept> section.</source>
          <target state="new">The URLs are displayed in the <bpt id="p1">**</bpt>quick glance<ept id="p1">**</ept> section.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file is only generated by Azure Websites if your application does not provide one.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file is only generated by Azure Websites if your application does not provide one.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If you provide a <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file in the root of your application project, it will be used by Azure Web Apps.</source>
          <target state="new">If you provide a <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file in the root of your application project, it will be used by Azure Web Apps.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If the entry is not present, or is set to a value of <ph id="ph1">`true`</ph>, then you should create a <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> in the root of your Node.js application and specify a value of <ph id="ph2">`false`</ph>.</source>
          <target state="new">If the entry is not present, or is set to a value of <ph id="ph1">`true`</ph>, then you should create a <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> in the root of your Node.js application and specify a value of <ph id="ph2">`false`</ph>.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For reference, the below is a default <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> for an application that uses <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept> as the entry point.</source>
          <target state="new">For reference, the below is a default <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> for an application that uses <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept> as the entry point.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If your application uses an entry point other than <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept>, you must replace all occurrences of <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept> with the correct entry point.</source>
          <target state="new">If your application uses an entry point other than <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept>, you must replace all occurrences of <bpt id="p2">**</bpt>app.js<ept id="p2">**</ept> with the correct entry point.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For example, replacing <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> with <bpt id="p2">**</bpt>server.js<ept id="p2">**</ept>.</source>
          <target state="new">For example, replacing <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> with <bpt id="p2">**</bpt>server.js<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id="p1">[</bpt>Try App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before signing up for an Azure account, go to <bpt id="p1">[</bpt>Try App Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=523751)</ept>, where you can immediately create a short-lived starter web app in App Service.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>No credit cards required; no commitments.</source>
          <target state="new">No credit cards required; no commitments.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>In this tutorial you learned how to create a chat application hosted in an Azure web app.</source>
          <target state="new">In this tutorial you learned how to create a chat application hosted in an Azure web app.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can also host this application as an Azure Cloud Service.</source>
          <target state="new">You can also host this application as an Azure Cloud Service.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For steps on how to accomplish this, see <bpt id="p1">[</bpt>Build a Node.js Chat Application with Socket.IO on an Azure Cloud Service<ept id="p1">][cloudservice]</ept>.</source>
          <target state="new">For steps on how to accomplish this, see <bpt id="p1">[</bpt>Build a Node.js Chat Application with Socket.IO on an Azure Cloud Service<ept id="p1">][cloudservice]</ept>.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>What's changed</source>
          <target state="new">What's changed</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For a guide to the change from Websites to App Service see: <bpt id="p1">[</bpt>Azure App Service and Its Impact on Existing Azure Services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept></source>
          <target state="new">For a guide to the change from Websites to App Service see: <bpt id="p1">[</bpt>Azure App Service and Its Impact on Existing Azure Services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529714)</ept></target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For a guide to the change of the old portal to the new portal see: <bpt id="p1">[</bpt>Reference for navigating the preview portal<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept></source>
          <target state="new">For a guide to the change of the old portal to the new portal see: <bpt id="p1">[</bpt>Reference for navigating the preview portal<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=529715)</ept></target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4d6b6b80573e713ffce6a2dd839f354ebedec5c</xliffext:olfilehash>
  </header>
</xliff>