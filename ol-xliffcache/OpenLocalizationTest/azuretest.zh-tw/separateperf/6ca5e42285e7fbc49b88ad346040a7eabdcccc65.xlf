<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Connecting DocumentDB with Azure Search using indexers | Microsoft Azure</source>
          <target state="new">Connecting DocumentDB with Azure Search using indexers | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This article shows you how to use to Azure Search indexer with DocumentDB as a data source.</source>
          <target state="new">This article shows you how to use to Azure Search indexer with DocumentDB as a data source.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Connecting DocumentDB with Azure Search using indexers</source>
          <target state="new">Connecting DocumentDB with Azure Search using indexers</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you're looking to implement great search experiences over your DocumentDB data, use Azure Search indexer for DocumentDB!</source>
          <target state="new">If you're looking to implement great search experiences over your DocumentDB data, use Azure Search indexer for DocumentDB!</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this article, we will show you how to integrate Azure DocumentDB with Azure Search without having to write any code to maintain indexing infrastructure!</source>
          <target state="new">In this article, we will show you how to integrate Azure DocumentDB with Azure Search without having to write any code to maintain indexing infrastructure!</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To set this up, you have to <bpt id="p1">[</bpt>setup an Azure Search account<ept id="p1">](../search-get-started.md#start-with-the-free-service)</ept> (you don't need to upgrade to standard search), and then call the <bpt id="p2">[</bpt>Azure Search REST API<ept id="p2">](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to create a DocumentDB <bpt id="p3">**</bpt>data source<ept id="p3">**</ept> and an <bpt id="p4">**</bpt>indexer<ept id="p4">**</ept> for that data source.</source>
          <target state="new">To set this up, you have to <bpt id="p1">[</bpt>setup an Azure Search account<ept id="p1">](../search-get-started.md#start-with-the-free-service)</ept> (you don't need to upgrade to standard search), and then call the <bpt id="p2">[</bpt>Azure Search REST API<ept id="p2">](https://msdn.microsoft.com/library/azure/dn798935.aspx)</ept> to create a DocumentDB <bpt id="p3">**</bpt>data source<ept id="p3">**</ept> and an <bpt id="p4">**</bpt>indexer<ept id="p4">**</ept> for that data source.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="Concepts"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Azure Search indexer concepts</source>
          <target state="new"><ph id="ph1">&lt;a id="Concepts"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Azure Search indexer concepts</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Azure Search supports the creation and management of data sources (including DocumentDB) and indexers that operate against those data sources.</source>
          <target state="new">Azure Search supports the creation and management of data sources (including DocumentDB) and indexers that operate against those data sources.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>data source<ept id="p1">**</ept> specifies what data needs to be indexed, credentials to access the data, and policies to enable Azure Search to efficiently identify changes in the data (such as modified or deleted documents inside your collection).</source>
          <target state="new">A <bpt id="p1">**</bpt>data source<ept id="p1">**</ept> specifies what data needs to be indexed, credentials to access the data, and policies to enable Azure Search to efficiently identify changes in the data (such as modified or deleted documents inside your collection).</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The data source is defined as an independent resource so that it can be used by multiple indexers.</source>
          <target state="new">The data source is defined as an independent resource so that it can be used by multiple indexers.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>indexer<ept id="p1">**</ept> describes how the data flows from your data source into a target search index.</source>
          <target state="new">An <bpt id="p1">**</bpt>indexer<ept id="p1">**</ept> describes how the data flows from your data source into a target search index.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You should plan on creating one indexer for every target index and data source combination.</source>
          <target state="new">You should plan on creating one indexer for every target index and data source combination.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>While you can have multiple indexers writing into the same index, an indexer can only write into a single index.</source>
          <target state="new">While you can have multiple indexers writing into the same index, an indexer can only write into a single index.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An indexer is used to:</source>
          <target state="new">An indexer is used to:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Perform a one-time copy of the data to populate an index.</source>
          <target state="new">Perform a one-time copy of the data to populate an index.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Sync an index with changes in the data source on a schedule.</source>
          <target state="new">Sync an index with changes in the data source on a schedule.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The schedule is part of the indexer definition.</source>
          <target state="new">The schedule is part of the indexer definition.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Invoke on-demand updates to an index as needed.</source>
          <target state="new">Invoke on-demand updates to an index as needed.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="CreateDataSource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 1: Create a data source</source>
          <target state="new"><ph id="ph1">&lt;a id="CreateDataSource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 1: Create a data source</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Issue a HTTP POST request to create a new data source in your Azure Search service, including the following request headers.</source>
          <target state="new">Issue a HTTP POST request to create a new data source in your Azure Search service, including the following request headers.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`api-version`</ph> is required.</source>
          <target state="new">The <ph id="ph1">`api-version`</ph> is required.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Valid values include <ph id="ph1">`2015-02-28`</ph> or a later version.</source>
          <target state="new">Valid values include <ph id="ph1">`2015-02-28`</ph> or a later version.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The body of the request contains the data source definition, which should include the following fields:</source>
          <target state="new">The body of the request contains the data source definition, which should include the following fields:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>name<ept id="p1">**</ept>: The name of the data source.</source>
          <target state="new"><bpt id="p1">**</bpt>name<ept id="p1">**</ept>: The name of the data source.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>type<ept id="p1">**</ept>: Use <ph id="ph1">`documentdb`</ph>.</source>
          <target state="new"><bpt id="p1">**</bpt>type<ept id="p1">**</ept>: Use <ph id="ph1">`documentdb`</ph>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>credentials<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>credentials<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>connectionString<ept id="p1">**</ept>: Required.</source>
          <target state="new"><bpt id="p1">**</bpt>connectionString<ept id="p1">**</ept>: Required.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specify the connection info to your Azure DocumentDB database in the following format: <ph id="ph1">`AccountEndpoint=&lt;DocumentDB endpoint url&gt;;AccountKey=&lt;DocumentDB auth key&gt;;Database=&lt;DocumentDB database id&gt;`</ph></source>
          <target state="new">Specify the connection info to your Azure DocumentDB database in the following format: <ph id="ph1">`AccountEndpoint=&lt;DocumentDB endpoint url&gt;;AccountKey=&lt;DocumentDB auth key&gt;;Database=&lt;DocumentDB database id&gt;`</ph></target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>container<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>container<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>name<ept id="p1">**</ept>: Required.</source>
          <target state="new"><bpt id="p1">**</bpt>name<ept id="p1">**</ept>: Required.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Specify the DocumentDB collection to be indexed.</source>
          <target state="new">Specify the DocumentDB collection to be indexed.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>query<ept id="p1">**</ept>: Optional.</source>
          <target state="new"><bpt id="p1">**</bpt>query<ept id="p1">**</ept>: Optional.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can specify a query to flatten an arbitrary JSON document into a flat schema that Azure Search can index.</source>
          <target state="new">You can specify a query to flatten an arbitrary JSON document into a flat schema that Azure Search can index.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dataChangeDetectionPolicy<ept id="p1">**</ept>: Optional.</source>
          <target state="new"><bpt id="p1">**</bpt>dataChangeDetectionPolicy<ept id="p1">**</ept>: Optional.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Data Change Detection Policy<ept id="p1">](#DataChangeDetectionPolicy)</ept> below.</source>
          <target state="new">See <bpt id="p1">[</bpt>Data Change Detection Policy<ept id="p1">](#DataChangeDetectionPolicy)</ept> below.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dataDeletionDetectionPolicy<ept id="p1">**</ept>: Optional.</source>
          <target state="new"><bpt id="p1">**</bpt>dataDeletionDetectionPolicy<ept id="p1">**</ept>: Optional.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Data Deletion Detection Policy<ept id="p1">](#DataDeletionDetectionPolicy)</ept> below.</source>
          <target state="new">See <bpt id="p1">[</bpt>Data Deletion Detection Policy<ept id="p1">](#DataDeletionDetectionPolicy)</ept> below.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="DataChangeDetectionPolicy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Capturing changed documents</source>
          <target state="new"><ph id="ph1">&lt;a id="DataChangeDetectionPolicy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Capturing changed documents</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The purpose of a data change detection policy is to efficiently identify changed data items.</source>
          <target state="new">The purpose of a data change detection policy is to efficiently identify changed data items.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Currently, the only supported policy is the <ph id="ph1">`High Water Mark`</ph> policy using the <ph id="ph2">`_ts`</ph> last-modified timestamp property provided by DocumentDB - which is specified as follows:</source>
          <target state="new">Currently, the only supported policy is the <ph id="ph1">`High Water Mark`</ph> policy using the <ph id="ph2">`_ts`</ph> last-modified timestamp property provided by DocumentDB - which is specified as follows:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You will also need to add <ph id="ph1">`_ts`</ph> in the projection and <ph id="ph2">`WHERE`</ph> clause for your query.</source>
          <target state="new">You will also need to add <ph id="ph1">`_ts`</ph> in the projection and <ph id="ph2">`WHERE`</ph> clause for your query.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="DataDeletionDetectionPolicy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Capturing deleted documents</source>
          <target state="new"><ph id="ph1">&lt;a id="DataDeletionDetectionPolicy"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Capturing deleted documents</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When rows are deleted from the source table, you should delete those rows from the search index as well.</source>
          <target state="new">When rows are deleted from the source table, you should delete those rows from the search index as well.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The purpose of a data deletion detection policy is to efficiently identify deleted data items.</source>
          <target state="new">The purpose of a data deletion detection policy is to efficiently identify deleted data items.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Currently, the only supported policy is the <ph id="ph1">`Soft Delete`</ph> policy (deletion is marked with a flag of some sort), which is specified as follows:</source>
          <target state="new">Currently, the only supported policy is the <ph id="ph1">`Soft Delete`</ph> policy (deletion is marked with a flag of some sort), which is specified as follows:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> You will need to include the property in your SELECT clause if you are using a custom projection.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> You will need to include the property in your SELECT clause if you are using a custom projection.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="CreateDataSourceExample"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Request body example</source>
          <target state="new"><ph id="ph1">&lt;a id="CreateDataSourceExample"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Request body example</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following example creates a data source with a custom query and policy hints:</source>
          <target state="new">The following example creates a data source with a custom query and policy hints:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You will receive an HTTP 201 Created response if the data source was successfully created.</source>
          <target state="new">You will receive an HTTP 201 Created response if the data source was successfully created.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="CreateIndex"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 2: Create an index</source>
          <target state="new"><ph id="ph1">&lt;a id="CreateIndex"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 2: Create an index</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Create a target Azure Search index if you don’t have one already.</source>
          <target state="new">Create a target Azure Search index if you don’t have one already.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can do this from the <bpt id="p1">[</bpt>Azure Portal UI<ept id="p1">](../search-get-started.md#test-service-operations)</ept> or by using the <bpt id="p2">[</bpt>Create Index API<ept id="p2">](https://msdn.microsoft.com/library/azure/dn798941.aspx)</ept>.</source>
          <target state="new">You can do this from the <bpt id="p1">[</bpt>Azure Portal UI<ept id="p1">](../search-get-started.md#test-service-operations)</ept> or by using the <bpt id="p2">[</bpt>Create Index API<ept id="p2">](https://msdn.microsoft.com/library/azure/dn798941.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Ensure that the schema of your target index is compatible with the schema of the source JSON documents or the output of your custom query projection.</source>
          <target state="new">Ensure that the schema of your target index is compatible with the schema of the source JSON documents or the output of your custom query projection.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Figure A: Mapping between JSON Data Types and Azure Search Data Types</source>
          <target state="new">Figure A: Mapping between JSON Data Types and Azure Search Data Types</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>JSON DATA TYPE</source>
          <target state="new">JSON DATA TYPE</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>COMPATIBLE TARGET INDEX FIELD TYPES</source>
          <target state="new">COMPATIBLE TARGET INDEX FIELD TYPES</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Bool</source>
          <target state="new">Bool</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Edm.Boolean, Edm.String</source>
          <target state="new">Edm.Boolean, Edm.String</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Numbers that look like integers</source>
          <target state="new">Numbers that look like integers</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Edm.Int32, Edm.Int64, Edm.String</source>
          <target state="new">Edm.Int32, Edm.Int64, Edm.String</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Numbers that look like floating-points</source>
          <target state="new">Numbers that look like floating-points</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Edm.Double, Edm.String</source>
          <target state="new">Edm.Double, Edm.String</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Edm.String</source>
          <target state="new">Edm.String</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Arrays of primitive types e.g. "a", "b", "c"</source>
          <target state="new">Arrays of primitive types e.g. "a", "b", "c"</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Collection(Edm.String)</source>
          <target state="new">Collection(Edm.String)</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Strings that look like dates</source>
          <target state="new">Strings that look like dates</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Edm.DateTimeOffset, Edm.String</source>
          <target state="new">Edm.DateTimeOffset, Edm.String</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>GeoJSON objects e.g. { "type": "Point", "coordinates": [ long, lat ] }</source>
          <target state="new">GeoJSON objects e.g. { "type": "Point", "coordinates": [ long, lat ] }</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Edm.GeographyPoint</source>
          <target state="new">Edm.GeographyPoint</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Other JSON objects</source>
          <target state="new">Other JSON objects</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="new">N/A</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="CreateIndexExample"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Request body example</source>
          <target state="new"><ph id="ph1">&lt;a id="CreateIndexExample"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Request body example</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The following example creates an index with an id and description field:</source>
          <target state="new">The following example creates an index with an id and description field:</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You will receive an HTTP 201 Created response if the index was successfully created.</source>
          <target state="new">You will receive an HTTP 201 Created response if the index was successfully created.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="CreateIndexer"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 3: Create an indexer</source>
          <target state="new"><ph id="ph1">&lt;a id="CreateIndexer"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 3: Create an indexer</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can create a new indexer within an Azure Search service by using an HTTP POST request with the following headers.</source>
          <target state="new">You can create a new indexer within an Azure Search service by using an HTTP POST request with the following headers.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The body of the request contains the indexer definition, which should include the following fields:</source>
          <target state="new">The body of the request contains the indexer definition, which should include the following fields:</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>name<ept id="p1">**</ept>: Required.</source>
          <target state="new"><bpt id="p1">**</bpt>name<ept id="p1">**</ept>: Required.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The name of the indexer.</source>
          <target state="new">The name of the indexer.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dataSourceName<ept id="p1">**</ept>: Required.</source>
          <target state="new"><bpt id="p1">**</bpt>dataSourceName<ept id="p1">**</ept>: Required.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The name of an existing data source.</source>
          <target state="new">The name of an existing data source.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>targetIndexName<ept id="p1">**</ept>: Required.</source>
          <target state="new"><bpt id="p1">**</bpt>targetIndexName<ept id="p1">**</ept>: Required.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The name of an existing index.</source>
          <target state="new">The name of an existing index.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>schedule<ept id="p1">**</ept>: Optional.</source>
          <target state="new"><bpt id="p1">**</bpt>schedule<ept id="p1">**</ept>: Optional.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Indexing Schedule<ept id="p1">](#IndexingSchedule)</ept> below.</source>
          <target state="new">See <bpt id="p1">[</bpt>Indexing Schedule<ept id="p1">](#IndexingSchedule)</ept> below.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="IndexingSchedule"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Running indexers on a schedule</source>
          <target state="new"><ph id="ph1">&lt;a id="IndexingSchedule"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Running indexers on a schedule</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An indexer can optionally specify a schedule.</source>
          <target state="new">An indexer can optionally specify a schedule.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If a schedule is present, the indexer will run periodically as per schedule.</source>
          <target state="new">If a schedule is present, the indexer will run periodically as per schedule.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Schedule has the following attributes:</source>
          <target state="new">Schedule has the following attributes:</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>interval<ept id="p1">**</ept>: Required.</source>
          <target state="new"><bpt id="p1">**</bpt>interval<ept id="p1">**</ept>: Required.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A duration value that specifies an interval or period for indexer runs.</source>
          <target state="new">A duration value that specifies an interval or period for indexer runs.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The smallest allowed interval is 5 minutes; the longest is one day.</source>
          <target state="new">The smallest allowed interval is 5 minutes; the longest is one day.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>It must be formatted as an XSD "dayTimeDuration" value (a restricted subset of an <bpt id="p1">[</bpt>ISO 8601 duration<ept id="p1">](http://www.w3.org/TR/xmlschema11-2/#dayTimeDuration)</ept> value).</source>
          <target state="new">It must be formatted as an XSD "dayTimeDuration" value (a restricted subset of an <bpt id="p1">[</bpt>ISO 8601 duration<ept id="p1">](http://www.w3.org/TR/xmlschema11-2/#dayTimeDuration)</ept> value).</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The pattern for this is: <ph id="ph1">`P(nD)(T(nH)(nM))`</ph>.</source>
          <target state="new">The pattern for this is: <ph id="ph1">`P(nD)(T(nH)(nM))`</ph>.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Examples: <ph id="ph1">`PT15M`</ph> for every 15 minutes, <ph id="ph2">`PT2H`</ph> for every 2 hours.</source>
          <target state="new">Examples: <ph id="ph1">`PT15M`</ph> for every 15 minutes, <ph id="ph2">`PT2H`</ph> for every 2 hours.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>startTime<ept id="p1">**</ept>: Required.</source>
          <target state="new"><bpt id="p1">**</bpt>startTime<ept id="p1">**</ept>: Required.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An UTC datetime that specifies when the indexer should start running.</source>
          <target state="new">An UTC datetime that specifies when the indexer should start running.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="CreateIndexerExample"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Request body example</source>
          <target state="new"><ph id="ph1">&lt;a id="CreateIndexerExample"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Request body example</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The following example creates an indexer that copies data from the collection referenced by the <ph id="ph1">`myDocDbDataSource`</ph> data source to the <ph id="ph2">`mySearchIndex`</ph> index on a schedule that starts on Jan 1, 2015 UTC and runs hourly.</source>
          <target state="new">The following example creates an indexer that copies data from the collection referenced by the <ph id="ph1">`myDocDbDataSource`</ph> data source to the <ph id="ph2">`mySearchIndex`</ph> index on a schedule that starts on Jan 1, 2015 UTC and runs hourly.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You will receive an HTTP 201 Created response if the indexer was successfully created.</source>
          <target state="new">You will receive an HTTP 201 Created response if the indexer was successfully created.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="RunIndexer"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 4: Run an indexer</source>
          <target state="new"><ph id="ph1">&lt;a id="RunIndexer"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 4: Run an indexer</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In addition to running periodically on a schedule, an indexer can also be invoked on demand by issuing the following HTTP POST request:</source>
          <target state="new">In addition to running periodically on a schedule, an indexer can also be invoked on demand by issuing the following HTTP POST request:</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You will receive an HTTP 202 Accepted response if the indexer was successfully invoked.</source>
          <target state="new">You will receive an HTTP 202 Accepted response if the indexer was successfully invoked.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="GetIndexerStatus"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 5: Get indexer status</source>
          <target state="new"><ph id="ph1">&lt;a name="GetIndexerStatus"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 5: Get indexer status</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You can issue a HTTP GET request to retrieve the current status and execution history of an indexer:</source>
          <target state="new">You can issue a HTTP GET request to retrieve the current status and execution history of an indexer:</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new">Response</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You will see a HTTP 200 OK response returned along with a response body that contains information about overall indexer health status, the last indexer invocation, as well as the history of recent indexer invocations (if present).</source>
          <target state="new">You will see a HTTP 200 OK response returned along with a response body that contains information about overall indexer health status, the last indexer invocation, as well as the history of recent indexer invocations (if present).</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The response should look similar to the following:</source>
          <target state="new">The response should look similar to the following:</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Execution history contains up to the 50 most recent completed executions, which are sorted in reverse chronological order (so the latest execution comes first in the response).</source>
          <target state="new">Execution history contains up to the 50 most recent completed executions, which are sorted in reverse chronological order (so the latest execution comes first in the response).</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="NextSteps"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Next steps</source>
          <target state="new"><ph id="ph1">&lt;a name="NextSteps"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Next steps</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Congratulations!</source>
          <target state="new">Congratulations!</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>You have just learned how to integrate Azure DocumentDB with Azure Search using the indexer for DocumentDB.</source>
          <target state="new">You have just learned how to integrate Azure DocumentDB with Azure Search using the indexer for DocumentDB.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>To learn how more about Azure DocumentDB, click <bpt id="p1">[</bpt>here<ept id="p1">](/services/documentdb/)</ept>.</source>
          <target state="new">To learn how more about Azure DocumentDB, click <bpt id="p1">[</bpt>here<ept id="p1">](/services/documentdb/)</ept>.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To learn how more about Azure Search, click <bpt id="p1">[</bpt>here<ept id="p1">](/services/search/)</ept>.</source>
          <target state="new">To learn how more about Azure Search, click <bpt id="p1">[</bpt>here<ept id="p1">](/services/search/)</ept>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ca5e42285e7fbc49b88ad346040a7eabdcccc65</xliffext:olfilehash>
  </header>
</xliff>