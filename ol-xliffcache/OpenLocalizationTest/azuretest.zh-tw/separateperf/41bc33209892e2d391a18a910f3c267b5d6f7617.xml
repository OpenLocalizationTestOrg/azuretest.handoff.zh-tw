{
  "nodes": [
    {
      "content": "Set and retrieve Properties and Metadata for Storage Resources | Microsoft Azure",
      "pos": [
        27,
        107
      ]
    },
    {
      "content": "Learn how to set and retrieve properties and metadata for Azure Storage resources.",
      "pos": [
        125,
        207
      ]
    },
    {
      "content": "Set and Retrieve Properties and Metadata",
      "pos": [
        483,
        523
      ]
    },
    {
      "content": "Overview",
      "pos": [
        530,
        538
      ]
    },
    {
      "content": "Objects in Azure Storage support system properties and user-defined metadata, in addition to the data they contain:",
      "pos": [
        540,
        655
      ]
    },
    {
      "content": "System properties.",
      "pos": [
        663,
        681
      ]
    },
    {
      "content": "System properties exist on each storage resource.",
      "pos": [
        684,
        733
      ]
    },
    {
      "content": "Some of them can be read or set, while others are read-only.",
      "pos": [
        734,
        794
      ]
    },
    {
      "content": "Under the covers, some system properties correspond to certain standard HTTP headers.",
      "pos": [
        795,
        880
      ]
    },
    {
      "content": "The Azure storage client library maintains these for you.",
      "pos": [
        881,
        938
      ]
    },
    {
      "content": "User-defined metadata.",
      "pos": [
        948,
        970
      ]
    },
    {
      "content": "User-defined metadata is metadata that you specify on a given resource, in the form of a name-value pair.",
      "pos": [
        973,
        1078
      ]
    },
    {
      "content": "You can use metadata to store additional values with a storage resource; these values are for your own purposes only and do not affect how the resource behaves.",
      "pos": [
        1079,
        1239
      ]
    },
    {
      "content": "Setting and Retrieving Properties",
      "pos": [
        1246,
        1279
      ]
    },
    {
      "content": "Retrieving property and metadata values for a storage resource is a two-step process.",
      "pos": [
        1281,
        1366
      ]
    },
    {
      "content": "Before you can read these values, you must explicitly fetch them by calling either the <bpt id=\"p1\">**</bpt>FetchAttributes<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>FetchAttributesAsync<ept id=\"p2\">**</ept> method.",
      "pos": [
        1367,
        1509
      ]
    },
    {
      "pos": [
        1513,
        1656
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> Property and metadata values for a storage resource are not populated unless you call one of the <bpt id=\"p1\">**</bpt>FetchAttributes<ept id=\"p1\">**</ept> methods."
    },
    {
      "pos": [
        1659,
        1781
      ],
      "content": "To set properties on a blob, specify the property value, then call the <bpt id=\"p1\">**</bpt>SetProperties<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>SetPropertiesAsync<ept id=\"p2\">**</ept> method."
    },
    {
      "content": "The following code example creates a container and writes property values to a console window:",
      "pos": [
        1783,
        1877
      ]
    },
    {
      "content": "Setting and Retrieving Metadata",
      "pos": [
        2862,
        2893
      ]
    },
    {
      "content": "You can specify metadata as one or more name-value pairs on a blob or container resource.",
      "pos": [
        2895,
        2984
      ]
    },
    {
      "content": "To set metadata, add name-value pairs to the <bpt id=\"p1\">**</bpt>Metadata<ept id=\"p1\">**</ept> collection on the resource, then call the <bpt id=\"p2\">**</bpt>SetMetadata<ept id=\"p2\">**</ept> method to save the values to the service.",
      "pos": [
        2985,
        3142
      ]
    },
    {
      "pos": [
        3146,
        3244
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>: The name of your metadata must conform to the naming conventions for C# identifiers."
    },
    {
      "pos": [
        3247,
        3393
      ],
      "content": "To retrieve metadata, call the <bpt id=\"p1\">**</bpt>FetchAttributes<ept id=\"p1\">**</ept> method on your blob or container to populate the <bpt id=\"p2\">**</bpt>Metadata<ept id=\"p2\">**</ept> collection, then read the values."
    },
    {
      "content": "The following code example creates a new container and sets metadata for it, then reads the metadata values back out:",
      "pos": [
        3395,
        3512
      ]
    },
    {
      "content": "See Also",
      "pos": [
        5216,
        5224
      ]
    },
    {
      "content": "Azure Storage Client Library Reference",
      "pos": [
        5231,
        5269
      ]
    },
    {
      "content": "Get Started with the Blob Storage for .NET",
      "pos": [
        5349,
        5391
      ]
    }
  ],
  "content": "\n<properties \n  pageTitle=\"Set and retrieve Properties and Metadata for Storage Resources | Microsoft Azure\" \n  description=\"Learn how to set and retrieve properties and metadata for Azure Storage resources.\" \n  services=\"storage\" \n  documentationCenter=\"\" \n  authors=\"tamram\" \n  manager=\"adinah\" \n  editor=\"\"/>\n\n<tags \n  ms.service=\"storage\" \n  ms.workload=\"storage\" \n  ms.tgt_pltfrm=\"na\" \n  ms.devlang=\"na\" \n  ms.topic=\"article\" \n  ms.date=\"08/04/2015\" \n  ms.author=\"tamram\"/>\n\n\n# Set and Retrieve Properties and Metadata #\n\n## Overview\n\nObjects in Azure Storage support system properties and user-defined metadata, in addition to the data they contain:\n\n*   **System properties.** System properties exist on each storage resource. Some of them can be read or set, while others are read-only. Under the covers, some system properties correspond to certain standard HTTP headers. The Azure storage client library maintains these for you.  \n\n*   **User-defined metadata.** User-defined metadata is metadata that you specify on a given resource, in the form of a name-value pair. You can use metadata to store additional values with a storage resource; these values are for your own purposes only and do not affect how the resource behaves.  \n\n## Setting and Retrieving Properties\n\nRetrieving property and metadata values for a storage resource is a two-step process. Before you can read these values, you must explicitly fetch them by calling either the **FetchAttributes** or **FetchAttributesAsync** method.\n\n> [AZURE.IMPORTANT] Property and metadata values for a storage resource are not populated unless you call one of the **FetchAttributes** methods. \n\nTo set properties on a blob, specify the property value, then call the **SetProperties** or **SetPropertiesAsync** method.\n\nThe following code example creates a container and writes property values to a console window:\n\n    //Parse the connection string for the storage account.\n    CloudStorageAccount storageAccount = CloudStorageAccount.Parse(\n        Microsoft.Azure.CloudConfigurationManager.GetSetting(\"StorageConnectionString\"));\n    \n    //Create the service client object for credentialed access to the Blob service.\n    CloudBlobClient blobClient = storageAccount.CreateCloudBlobClient();\n\n    // Retrieve a reference to a container. \n    CloudBlobContainer container = blobClient.GetContainerReference(\"mycontainer\");\n\n    // Create the container if it does not already exist.\n    container.CreateIfNotExists();\n\n    // Fetch container properties and write out their values.\n    container.FetchAttributes();\n    Console.WriteLine(\"Properties for container {0}\", container.StorageUri.PrimaryUri.ToString());\n    Console.WriteLine(\"LastModifiedUTC: {0}\", container.Properties.LastModified.ToString());\n    Console.WriteLine(\"ETag: {0}\", container.Properties.ETag);\n    Console.WriteLine();\n\n## Setting and Retrieving Metadata\n\nYou can specify metadata as one or more name-value pairs on a blob or container resource. To set metadata, add name-value pairs to the **Metadata** collection on the resource, then call the **SetMetadata** method to save the values to the service.\n\n> [AZURE.NOTE]: The name of your metadata must conform to the naming conventions for C# identifiers.\n \nTo retrieve metadata, call the **FetchAttributes** method on your blob or container to populate the **Metadata** collection, then read the values.\n\nThe following code example creates a new container and sets metadata for it, then reads the metadata values back out:\n\n         \n    // Account name and key.  Modify for your account.\n    <span style=\"color:Blue;\">string accountName = <span style=\"color:#A31515;\">\"myaccount\";\n    <span style=\"color:Blue;\">string accountKey = <span style=\"color:#A31515;\">\"SzlFqgzqhfkj594cFoveYqCuvo8v9EESAnOLcTBeBIo31p16rJJRZx/5vU/oY3ZsK/VdFNaVpm6G8YSD2K48Nw==\";\n\n    // Get a reference to the storage account and client with authentication credentials.\n    StorageCredentials credentials = <span style=\"color:Blue;\">new StorageCredentials(accountName, accountKey);\n    CloudStorageAccount storageAccount = <span style=\"color:Blue;\">new CloudStorageAccount(credentials, <span style=\"color:Blue;\">true);\n    CloudBlobClient blobClient = storageAccount.CreateCloudBlobClient();\n\n    // Retrieve a reference to a container. \n    CloudBlobContainer container = blobClient.GetContainerReference(<span style=\"color:#A31515;\">\"mycontainer\");\n\n    // Create the container if it does not already exist.\n    container.CreateIfNotExists();\n\n    // Set metadata for the container.\n    container.Metadata[<span style=\"color:#A31515;\">\"category\"] = <span style=\"color:#A31515;\">\"images\";\n    container.Metadata[<span style=\"color:#A31515;\">\"owner\"] = <span style=\"color:#A31515;\">\"azure\";\n    container.SetMetadata();\n\n    // Get container metadata.\n    container.FetchAttributes();\n    <span style=\"color:Blue;\">foreach (<span style=\"color:Blue;\">string key <span style=\"color:Blue;\">in container.Metadata.Keys)\n    {\n       Console.WriteLine(<span style=\"color:#A31515;\">\"Metadata key: \" + key);\n       Console.WriteLine(<span style=\"color:#A31515;\">\"Metadata value: \" + container.Metadata[key]);\n    }\n\n    //Clean up.\n    container.Delete();\n\n## See Also  \n\n- [Azure Storage Client Library Reference](http://msdn.microsoft.com/library/azure/wa_storage_30_reference_home.aspx)\n- [Get Started with the Blob Storage for .NET](storage-dotnet-how-to-use-blobs.md)  \n "
}