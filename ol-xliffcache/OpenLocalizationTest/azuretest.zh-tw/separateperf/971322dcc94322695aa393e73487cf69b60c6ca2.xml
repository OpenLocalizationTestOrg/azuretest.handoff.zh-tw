{
  "nodes": [
    {
      "content": "Network Resource Provider",
      "pos": [
        27,
        52
      ]
    },
    {
      "content": "Network Resource Provider",
      "pos": [
        70,
        95
      ]
    },
    {
      "content": "Network Resource Provider",
      "pos": [
        418,
        443
      ]
    },
    {
      "content": "An underpinning need in today’s business success, is the ability to build and manage large scale network aware applications in an agile, flexible, secure and repeatable way.",
      "pos": [
        444,
        617
      ]
    },
    {
      "content": "Azure Resource Manager (ARM) enables you to create such applications, as a single collection of resources in resource groups.",
      "pos": [
        618,
        743
      ]
    },
    {
      "content": "Such resources are managed through various resource providers under ARM.",
      "pos": [
        744,
        816
      ]
    },
    {
      "content": "Azure Resource Manager (ARM) enables you to create such applications and the associated collection of network resources as a single collection of resources in a resource group.",
      "pos": [
        819,
        995
      ]
    },
    {
      "content": "The application and the network resources run as a single unit in an ARM resource group.",
      "pos": [
        996,
        1084
      ]
    },
    {
      "content": "You can manage networking resources by using any of the following management interfaces:",
      "pos": [
        1087,
        1175
      ]
    },
    {
      "content": "REST based API",
      "pos": [
        1179,
        1193
      ]
    },
    {
      "content": "PowerShell",
      "pos": [
        1196,
        1206
      ]
    },
    {
      "content": ".NET SDK",
      "pos": [
        1209,
        1217
      ]
    },
    {
      "content": "Node.JS SDK",
      "pos": [
        1220,
        1231
      ]
    },
    {
      "content": "Java SDK",
      "pos": [
        1234,
        1242
      ]
    },
    {
      "content": "Azure CLI",
      "pos": [
        1245,
        1254
      ]
    },
    {
      "content": "Azure Portal",
      "pos": [
        1257,
        1269
      ]
    },
    {
      "content": "ARM template language",
      "pos": [
        1272,
        1293
      ]
    },
    {
      "content": "With the introduction of Network Resource Providers, you can take advantage of the following benefits:",
      "pos": [
        1295,
        1397
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Metadata<ept id=\"p1\">**</ept> – you can add information to resources using tags.",
      "pos": [
        1401,
        1464
      ]
    },
    {
      "content": "These tags can be used to track resource utilization across resource groups and subscriptions.",
      "pos": [
        1465,
        1559
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Greater control of your network<ept id=\"p1\">**</ept> - network resources are loosely coupled and you can control them in a more granular fashion.",
      "pos": [
        1562,
        1690
      ]
    },
    {
      "content": "This means you have more flexibility in managing the networking resources.",
      "pos": [
        1691,
        1765
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Faster configuration<ept id=\"p1\">**</ept> - because network resources are loosely coupled, you can create and orchestrate network resources in parallel.",
      "pos": [
        1768,
        1903
      ]
    },
    {
      "content": "This has drastically reduced configuration time.",
      "pos": [
        1904,
        1952
      ]
    },
    {
      "pos": [
        1955,
        2121
      ],
      "content": "<bpt id=\"p1\">**</bpt>Role Based Access Control<ept id=\"p1\">**</ept> - RBAC provides default roles, with specific security scope, in addition to allowing the creation of custom roles for secure management."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Easier management and deployment<ept id=\"p1\">**</ept> - it’s easier to deploy and manage applications since you can can create an entire application stack as a single collection of resources in a resource group.",
      "pos": [
        2125,
        2319
      ]
    },
    {
      "content": "And faster to deploy, since you can deploy by simply providing a template JSON payload.",
      "pos": [
        2320,
        2407
      ]
    },
    {
      "pos": [
        2410,
        2536
      ],
      "content": "<bpt id=\"p1\">**</bpt>Rapid customization<ept id=\"p1\">**</ept> - you can use declarative-style templates to enable repeatable and rapid customization of deployments."
    },
    {
      "pos": [
        2540,
        2671
      ],
      "content": "<bpt id=\"p1\">**</bpt>Repeatable customization<ept id=\"p1\">**</ept> - you can use declarative-style templates to enable repeatable and rapid customization of deployments."
    },
    {
      "content": "Network resources",
      "pos": [
        2676,
        2693
      ]
    },
    {
      "content": "You can now manage network resources independently, instead of having them all managed through a single compute resource (a virtual machine).",
      "pos": [
        2695,
        2836
      ]
    },
    {
      "content": "This ensures a higher degree of flexibility and agility in composing a complex and large scale infrastructure in a resource group.",
      "pos": [
        2837,
        2967
      ]
    },
    {
      "content": "The diagram below illustrates a high-level view of the network resource model and its associations.",
      "pos": [
        2970,
        3069
      ]
    },
    {
      "content": "Top level resources are colored with a blue outline.",
      "pos": [
        3070,
        3122
      ]
    },
    {
      "content": "In addition to top level resources, you can see child resources colored with a gray outline.",
      "pos": [
        3123,
        3215
      ]
    },
    {
      "content": "You can manage each resource individually.",
      "pos": [
        3216,
        3258
      ]
    },
    {
      "content": "Network resource model",
      "pos": [
        3263,
        3285
      ]
    },
    {
      "content": "A conceptual view of a sample deployment involving a multi-tiered application is presented below.",
      "pos": [
        3336,
        3433
      ]
    },
    {
      "content": "All network resources are colored with a blue outline.",
      "pos": [
        3434,
        3488
      ]
    },
    {
      "content": "Network resource model",
      "pos": [
        3493,
        3515
      ]
    },
    {
      "content": "REST API",
      "pos": [
        3569,
        3577
      ]
    },
    {
      "content": "As mentioned earlier, network resources can be managed via a variety of interfaces, including REST API,.NET SDK, Node.JS SDK, Java SDK, PowerShell, CLI, Azure Portal and templates.",
      "pos": [
        3579,
        3759
      ]
    },
    {
      "content": "The Rest API’s conform to the HTTP 1.1 protocol specification.",
      "pos": [
        3762,
        3824
      ]
    },
    {
      "content": "The general URI structure of the API is presented below:",
      "pos": [
        3825,
        3881
      ]
    },
    {
      "content": "And the parameters in braces represent the following elements:",
      "pos": [
        4053,
        4115
      ]
    },
    {
      "pos": [
        4119,
        4168
      ],
      "content": "<bpt id=\"p1\">**</bpt>subscription-id<ept id=\"p1\">**</ept> - your Azure subscription id."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>resource-provider-namespace<ept id=\"p1\">**</ept> - namespace for the provider being used.",
      "pos": [
        4171,
        4243
      ]
    },
    {
      "content": "THe value for the network resource provider is <bpt id=\"p1\">*</bpt>Microsoft.Network<ept id=\"p1\">*</ept>.",
      "pos": [
        4244,
        4311
      ]
    },
    {
      "pos": [
        4314,
        4353
      ],
      "content": "<bpt id=\"p1\">**</bpt>region-name<ept id=\"p1\">**</ept> - the Azure region name"
    },
    {
      "content": "The following HTTP methods are supported when making calls to the REST API:",
      "pos": [
        4355,
        4430
      ]
    },
    {
      "pos": [
        4434,
        4557
      ],
      "content": "<bpt id=\"p1\">**</bpt>PUT<ept id=\"p1\">**</ept> - used to create a resource of a given type, modify a resource property or change an association between resources."
    },
    {
      "pos": [
        4561,
        4627
      ],
      "content": "<bpt id=\"p1\">**</bpt>GET<ept id=\"p1\">**</ept> - used to retrieve information for a provisioned resource."
    },
    {
      "pos": [
        4630,
        4679
      ],
      "content": "<bpt id=\"p1\">**</bpt>DELETE<ept id=\"p1\">**</ept> - used to delete an existing resource."
    },
    {
      "content": "Both the request and response conform to a JSON payload format.",
      "pos": [
        4681,
        4744
      ]
    },
    {
      "content": "For more details, see <bpt id=\"p1\">[</bpt>Azure Resource Management APIs<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn948464.aspx)</ept>.",
      "pos": [
        4745,
        4856
      ]
    },
    {
      "content": "ARM template language",
      "pos": [
        4861,
        4882
      ]
    },
    {
      "content": "In addition to managing resources imperatively (via APIs or SDK), you can also use a declarative programming style to build and manage network resources by using the ARM Template Language.",
      "pos": [
        4883,
        5071
      ]
    },
    {
      "content": "A sample representation of a template is provided below –",
      "pos": [
        5074,
        5131
      ]
    },
    {
      "content": "The template is primarily a JSON description of the resources and the instance values injected via parameters.",
      "pos": [
        5538,
        5648
      ]
    },
    {
      "content": "The example below can be used to create a virtual network with 2 subnets.",
      "pos": [
        5649,
        5722
      ]
    },
    {
      "content": "You have the option of providing the parameter values manually when using a template, or you can use a parameter file.",
      "pos": [
        8273,
        8391
      ]
    },
    {
      "content": "The example below shows a possible set of parameter values to be used with the template above:",
      "pos": [
        8392,
        8486
      ]
    },
    {
      "content": "The main advantages of using templates are:",
      "pos": [
        8957,
        9000
      ]
    },
    {
      "content": "You can build a complex infrastructure in a resource group in a declarative style.",
      "pos": [
        9004,
        9086
      ]
    },
    {
      "content": "The orchestration of creating the resources, including dependency management, is handled by ARM.",
      "pos": [
        9087,
        9183
      ]
    },
    {
      "content": "The infrastructure can be created in a repeatable way across various regions and within a region by simply changing parameters.",
      "pos": [
        9187,
        9314
      ]
    },
    {
      "content": "The declarative style leads to shorter lead time in building the templates and rolling out the infrastructure.",
      "pos": [
        9318,
        9428
      ]
    },
    {
      "pos": [
        9431,
        9539
      ],
      "content": "For sample templates, see <bpt id=\"p1\">[</bpt>Azure quickstart templates<ept id=\"p1\">](https://github.com/Azure/azure-quickstart-templates)</ept>."
    },
    {
      "pos": [
        9541,
        9681
      ],
      "content": "For more information on the ARM Template Language, see <bpt id=\"p1\">[</bpt>Azure Resource Manager Template Language<ept id=\"p1\">](../resource-group-authoring-templates.md)</ept>."
    },
    {
      "content": "The sample template above uses the virtual network and subnet resources.",
      "pos": [
        9683,
        9755
      ]
    },
    {
      "content": "There are other network resources you can use as listed below:",
      "pos": [
        9756,
        9818
      ]
    },
    {
      "content": "NIC",
      "pos": [
        9823,
        9826
      ]
    },
    {
      "content": "Network Interface Card, or NIC, represents a network interface that can be associated to a virtual machine (VM).",
      "pos": [
        9827,
        9939
      ]
    },
    {
      "content": "A VM can have one or more NICs.",
      "pos": [
        9940,
        9971
      ]
    },
    {
      "content": "NIC's on a single VM",
      "pos": [
        9975,
        9995
      ]
    },
    {
      "content": "Key properties of a NIC resource include:",
      "pos": [
        10046,
        10087
      ]
    },
    {
      "content": "IP settings",
      "pos": [
        10091,
        10102
      ]
    },
    {
      "content": "Internal DNS name",
      "pos": [
        10105,
        10122
      ]
    },
    {
      "content": "DNS servers",
      "pos": [
        10125,
        10136
      ]
    },
    {
      "content": "A NIC can also be associated with the following network resources:",
      "pos": [
        10138,
        10204
      ]
    },
    {
      "content": "Network Security Group (NSG)",
      "pos": [
        10208,
        10236
      ]
    },
    {
      "content": "Load balancer",
      "pos": [
        10240,
        10253
      ]
    },
    {
      "content": "Virtual Network and Subnet",
      "pos": [
        10258,
        10284
      ]
    },
    {
      "content": "Virtual Networks (VNET) and subnets help define a security boundary for workloads running in Azure.",
      "pos": [
        10285,
        10384
      ]
    },
    {
      "content": "A VNET is characterized by an address space, also referred to as CIDR block.",
      "pos": [
        10385,
        10461
      ]
    },
    {
      "content": "A subnet is a child resource of a VNET, and helps define segments of address spaces within a CIDR block, using IP address prefixes.",
      "pos": [
        10464,
        10595
      ]
    },
    {
      "content": "VMs that execute various workloads essentially operate in a subnet boundary.",
      "pos": [
        10596,
        10672
      ]
    },
    {
      "content": "NIC's on a single VM",
      "pos": [
        10677,
        10697
      ]
    },
    {
      "content": "Key properties of a VNET resource include:",
      "pos": [
        10748,
        10790
      ]
    },
    {
      "content": "IP address space (CIDR block)",
      "pos": [
        10794,
        10823
      ]
    },
    {
      "content": "VNET name",
      "pos": [
        10827,
        10836
      ]
    },
    {
      "content": "subnets",
      "pos": [
        10839,
        10846
      ]
    },
    {
      "content": "DNS servers",
      "pos": [
        10849,
        10860
      ]
    },
    {
      "content": "A VNET can also be associated with the following network resources:",
      "pos": [
        10862,
        10929
      ]
    },
    {
      "content": "VPN Gateway",
      "pos": [
        10933,
        10944
      ]
    },
    {
      "content": "Key properties of a subnet include:",
      "pos": [
        10946,
        10981
      ]
    },
    {
      "content": "IP address prefix",
      "pos": [
        10985,
        11002
      ]
    },
    {
      "content": "Subnet name",
      "pos": [
        11005,
        11016
      ]
    },
    {
      "content": "A subnet can also be associated with the following network resources:",
      "pos": [
        11018,
        11087
      ]
    },
    {
      "content": "NSG",
      "pos": [
        11091,
        11094
      ]
    },
    {
      "content": "Load Balancer",
      "pos": [
        11099,
        11112
      ]
    },
    {
      "content": "A load balancer is used when you want to scale your applications.",
      "pos": [
        11113,
        11178
      ]
    },
    {
      "content": "Typical deployment scenarios involve applications running on multiple VM instances.",
      "pos": [
        11179,
        11262
      ]
    },
    {
      "content": "The VM instances are fronted by a load balancer that helps to distribute network traffic to the various instances.",
      "pos": [
        11263,
        11377
      ]
    },
    {
      "content": "NIC's on a single VM",
      "pos": [
        11382,
        11402
      ]
    },
    {
      "content": "Load balancers contain the following child resources:",
      "pos": [
        11453,
        11506
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Front end IP configuration<ept id=\"p1\">**</ept> – a Load balancer can include one or more front end IP addresses, otherwise known as a virtual IPs (VIPs).",
      "pos": [
        11510,
        11647
      ]
    },
    {
      "content": "These IP addresses serve as ingress for the traffic.",
      "pos": [
        11648,
        11700
      ]
    },
    {
      "pos": [
        11704,
        11816
      ],
      "content": "<bpt id=\"p1\">**</bpt>Backend address pool<ept id=\"p1\">**</ept> – these are IP addresses associated with the VM NICs to which load will be distributed."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Load balancing rules<ept id=\"p1\">**</ept> – a rule property maps a given front end IP and port combination to a set of back end IP addresses and port combination.",
      "pos": [
        11819,
        11964
      ]
    },
    {
      "content": "With a single definition of a load balancer resource, you can define multiple load balancing rules, each rule reflecting a combination of a front end IP and port and back end IP and port associated with VMs.",
      "pos": [
        11965,
        12172
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Probes<ept id=\"p1\">**</ept> – probes enable you to keep track of the health of VM instances.",
      "pos": [
        12176,
        12251
      ]
    },
    {
      "content": "If a health probe fails, the VM instance will be taken out of rotation automatically.",
      "pos": [
        12252,
        12337
      ]
    },
    {
      "pos": [
        12340,
        12471
      ],
      "content": "<bpt id=\"p1\">**</bpt>Inbound NAT rules<ept id=\"p1\">**</ept> – NAT rules defining the inbound traffic flowing through the front end IP and distributed to the back end IP."
    },
    {
      "content": "Application Gateway",
      "pos": [
        12476,
        12495
      ]
    },
    {
      "content": "Application Gateway provides an Azure-managed HTTP load balancing solution based on layer 7 load balancing.",
      "pos": [
        12497,
        12604
      ]
    },
    {
      "content": "Application load balancing allows the use of routing rules for network traffic based on HTTP.",
      "pos": [
        12605,
        12698
      ]
    },
    {
      "content": "Application Gateways contain the following child resources:",
      "pos": [
        12701,
        12760
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Back end server pool<ept id=\"p1\">**</ept> - The list of IP addresses of the back end servers.",
      "pos": [
        12764,
        12840
      ]
    },
    {
      "content": "The IP addresses listed should either belong to the virtual network subnet, or should be a public IP/VIP.",
      "pos": [
        12841,
        12946
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Back end server pool settings<ept id=\"p1\">**</ept> - Every pool has settings like port, protocol, and cookie based affinity.",
      "pos": [
        12950,
        13057
      ]
    },
    {
      "content": "These settings are tied to a pool and are applied to all servers within the pool.",
      "pos": [
        13058,
        13139
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Front end Port<ept id=\"p1\">**</ept> - This port is the public port opened on the application gateway.",
      "pos": [
        13142,
        13226
      ]
    },
    {
      "content": "Traffic hits this port, and then gets redirected to one of the back end servers.",
      "pos": [
        13227,
        13307
      ]
    },
    {
      "pos": [
        13310,
        13467
      ],
      "content": "<bpt id=\"p1\">**</bpt>Listener<ept id=\"p1\">**</ept> - listener has a frontend port, a protocol (Http or Https, these are case-sensitive), and the SSL certificate name (if configuring SSL offload)."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Rule<ept id=\"p1\">**</ept> - The rule binds the listener and the back end server pool and defines which back end server pool the traffic should be directed to when it hits a particular listener.",
      "pos": [
        13471,
        13647
      ]
    },
    {
      "content": "Currently, only the basic rule is supported.",
      "pos": [
        13648,
        13692
      ]
    },
    {
      "content": "The basic rule is round-robin load distribution.",
      "pos": [
        13693,
        13741
      ]
    },
    {
      "content": "Public IP",
      "pos": [
        13747,
        13756
      ]
    },
    {
      "content": "A public IP address resource provides either a reserved or dynamic public IP address.",
      "pos": [
        13757,
        13842
      ]
    },
    {
      "content": "A Public IP address can be assigned to a load balancer, NAT, or associated with a private IP address on a NIC of a VM.",
      "pos": [
        13845,
        13963
      ]
    },
    {
      "content": "Key properties of a public IP resource include:",
      "pos": [
        13967,
        14014
      ]
    },
    {
      "pos": [
        14018,
        14065
      ],
      "content": "<bpt id=\"p1\">**</bpt>IP allocation method<ept id=\"p1\">**</ept> – reserved or dynamic."
    },
    {
      "content": "Network Security Group (NSG)",
      "pos": [
        14071,
        14099
      ]
    },
    {
      "content": "An NSG resource enables the creation of security boundary for workloads, by implementing allow and deny rules.",
      "pos": [
        14100,
        14210
      ]
    },
    {
      "content": "Such rules can be applied at the NIC level (VM instance level) or at the subnet level (group of VMs).",
      "pos": [
        14211,
        14312
      ]
    },
    {
      "content": "Key properties of NSG resource include:",
      "pos": [
        14314,
        14353
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Security rule<ept id=\"p1\">**</ept> - An NSG can have multiple security rules defined.",
      "pos": [
        14357,
        14425
      ]
    },
    {
      "content": "Each rule can allow or deny different types of traffic.",
      "pos": [
        14426,
        14481
      ]
    },
    {
      "content": "Security Rule",
      "pos": [
        14486,
        14499
      ]
    },
    {
      "content": "A security rule is a child resource of an NSG.",
      "pos": [
        14500,
        14546
      ]
    },
    {
      "content": "Key properties of a Security rule include:",
      "pos": [
        14549,
        14591
      ]
    },
    {
      "pos": [
        14596,
        14649
      ],
      "content": "<bpt id=\"p1\">**</bpt>Protocol<ept id=\"p1\">**</ept> – network protocol this rule applies to."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Source Port Range<ept id=\"p1\">**</ept> - source port, or range from, 0 to 65535.",
      "pos": [
        14652,
        14715
      ]
    },
    {
      "content": "A wildcard can be used to match all ports.",
      "pos": [
        14717,
        14759
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Destination Port Range<ept id=\"p1\">**</ept> - Destination port, or range, from 0 to 65535.",
      "pos": [
        14763,
        14836
      ]
    },
    {
      "content": "A wildcard can be used to match all ports.",
      "pos": [
        14838,
        14880
      ]
    },
    {
      "pos": [
        14883,
        14935
      ],
      "content": "<bpt id=\"p1\">**</bpt>Source Address Prefix<ept id=\"p1\">**</ept> – source IP address range."
    },
    {
      "pos": [
        14939,
        15001
      ],
      "content": "<bpt id=\"p1\">**</bpt>Destination Address Prefix<ept id=\"p1\">**</ept> – destination IP address range."
    },
    {
      "pos": [
        15004,
        15043
      ],
      "content": "<bpt id=\"p1\">**</bpt>Access<ept id=\"p1\">**</ept> – <bpt id=\"p2\">*</bpt>Allow<ept id=\"p2\">*</ept> or <bpt id=\"p3\">*</bpt>Deny<ept id=\"p3\">*</ept> traffic."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Priority<ept id=\"p1\">**</ept> – a value between 100 and 4096.",
      "pos": [
        15046,
        15090
      ]
    },
    {
      "content": "The priority number must be unique for each rule in collection of security rules.",
      "pos": [
        15091,
        15172
      ]
    },
    {
      "content": "The lower the priority number, the higher the priority of the rule.",
      "pos": [
        15173,
        15240
      ]
    },
    {
      "pos": [
        15243,
        15349
      ],
      "content": "<bpt id=\"p1\">**</bpt>Direction<ept id=\"p1\">**</ept> – specifies if the rule will be applied to traffic in the <bpt id=\"p2\">*</bpt>Inbound<ept id=\"p2\">*</ept> or <bpt id=\"p3\">*</bpt>Outbound<ept id=\"p3\">*</ept> direction."
    },
    {
      "content": "VPN Gateway",
      "pos": [
        15355,
        15366
      ]
    },
    {
      "content": "A VPN gateway resource enables you to create a secure connection between their on-premises data center and Azure.",
      "pos": [
        15368,
        15481
      ]
    },
    {
      "content": "A VPN gateway resource can be configured in three different ways:",
      "pos": [
        15482,
        15547
      ]
    },
    {
      "pos": [
        15552,
        15674
      ],
      "content": "<bpt id=\"p1\">**</bpt>Point to Site<ept id=\"p1\">**</ept> – you can securely access your Azure resources hosted in a VNET by using a VPN client from any computer."
    },
    {
      "pos": [
        15678,
        15797
      ],
      "content": "<bpt id=\"p1\">**</bpt>Multi-site connection<ept id=\"p1\">**</ept> – you can securely connect from your on-premises data centers to resources running in a VNET."
    },
    {
      "pos": [
        15801,
        15945
      ],
      "content": "<bpt id=\"p1\">**</bpt>VNET to VNET<ept id=\"p1\">**</ept> – you can securely connect across Azure VNETS within the same region, or across regions to build workloads with geo-redundancy."
    },
    {
      "content": "Key properties of a VPN gateway include:",
      "pos": [
        15947,
        15987
      ]
    },
    {
      "pos": [
        15992,
        16057
      ],
      "content": "<bpt id=\"p1\">**</bpt>Gateway type<ept id=\"p1\">**</ept> - dynamically routed or a static routed gateway."
    },
    {
      "pos": [
        16061,
        16181
      ],
      "content": "<bpt id=\"p1\">**</bpt>VPN Client Address Pool Prefix<ept id=\"p1\">**</ept> – IP addresses to be assigned to clients connecting in a point to site configuration."
    },
    {
      "content": "Traffic Manager Profile",
      "pos": [
        16188,
        16211
      ]
    },
    {
      "content": "Traffic manager and its child endpoint resource enable distribution of your traffic to endpoints in Azure and outside of Azure.",
      "pos": [
        16212,
        16339
      ]
    },
    {
      "content": "Such traffic distribution is governed by policies.",
      "pos": [
        16340,
        16390
      ]
    },
    {
      "content": "Traffic manager also allows endpoint health to be monitored, and traffic diverted appropriately based on the health of an endpoint.",
      "pos": [
        16391,
        16522
      ]
    },
    {
      "content": "Key properties of a traffic manager profile include:",
      "pos": [
        16525,
        16577
      ]
    },
    {
      "pos": [
        16581,
        16672
      ],
      "content": "<bpt id=\"p1\">**</bpt>Traffic routing method<ept id=\"p1\">**</ept> - possible values are <bpt id=\"p2\">*</bpt>Performance<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>Weighted<ept id=\"p3\">*</ept>, and <bpt id=\"p4\">*</bpt>Priority<ept id=\"p4\">*</ept>."
    },
    {
      "pos": [
        16675,
        16720
      ],
      "content": "<bpt id=\"p1\">**</bpt>DNS configuration<ept id=\"p1\">**</ept> - FQDN for the profile."
    },
    {
      "pos": [
        16723,
        16798
      ],
      "content": "<bpt id=\"p1\">**</bpt>Protocol<ept id=\"p1\">**</ept> - monitoring protocol, possible values are <bpt id=\"p2\">*</bpt>HTTP<ept id=\"p2\">*</ept> and <bpt id=\"p3\">*</bpt>HTTPS<ept id=\"p3\">*</ept>."
    },
    {
      "pos": [
        16801,
        16828
      ],
      "content": "<bpt id=\"p1\">**</bpt>Port<ept id=\"p1\">**</ept> - monitoring port."
    },
    {
      "pos": [
        16832,
        16859
      ],
      "content": "<bpt id=\"p1\">**</bpt>Path<ept id=\"p1\">**</ept> - monitoring path."
    },
    {
      "pos": [
        16862,
        16911
      ],
      "content": "<bpt id=\"p1\">**</bpt>Endpoints<ept id=\"p1\">**</ept> - container for endpoint resources."
    },
    {
      "content": "Endpoint",
      "pos": [
        16916,
        16924
      ]
    },
    {
      "content": "An endpoint is a child resource of a Traffic Manager Profile.",
      "pos": [
        16926,
        16987
      ]
    },
    {
      "content": "It represents a service or web endpoint to which user traffic is distributed based on the configured policy in the Traffic Manager Profile resource.",
      "pos": [
        16988,
        17136
      ]
    },
    {
      "content": "Key properties of an endpoint include:",
      "pos": [
        17139,
        17177
      ]
    },
    {
      "pos": [
        17182,
        17302
      ],
      "content": "<bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept> - the type of the endpoint, possible values are <bpt id=\"p2\">*</bpt>Azure End point<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>External Endpoint<ept id=\"p3\">*</ept>, and  <bpt id=\"p4\">*</bpt>Nested Endpoint<ept id=\"p4\">*</ept>."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Target Resource ID<ept id=\"p1\">**</ept> – public IP address of a service or web endpoint.",
      "pos": [
        17306,
        17378
      ]
    },
    {
      "content": "This can be an Azure or external endpoint.",
      "pos": [
        17379,
        17421
      ]
    },
    {
      "pos": [
        17424,
        17480
      ],
      "content": "<bpt id=\"p1\">**</bpt>Weight<ept id=\"p1\">**</ept> - endpoint weight used in traffic management."
    },
    {
      "pos": [
        17484,
        17558
      ],
      "content": "<bpt id=\"p1\">**</bpt>Priority<ept id=\"p1\">**</ept> - priority of the endpoint, used to define a failover action."
    },
    {
      "content": "Azure DNS",
      "pos": [
        17564,
        17573
      ]
    },
    {
      "content": "Azure DNS is a hosting service for DNS domains, providing name resolution using Microsoft Azure infrastructure.",
      "pos": [
        17575,
        17686
      ]
    },
    {
      "content": "Key properties of Azure DNS include:",
      "pos": [
        17688,
        17724
      ]
    },
    {
      "content": "** DNS zones** - Domain zone information to host DNS records of a particular domain.",
      "pos": [
        17728,
        17812
      ]
    },
    {
      "content": "** DNS record sets** - a collection of records of a specific type.",
      "pos": [
        17815,
        17881
      ]
    },
    {
      "content": "Supported types are A, AAAA, CNAME, MX, NS, SOA,SRV and TXT.",
      "pos": [
        17882,
        17942
      ]
    },
    {
      "content": "Using a template",
      "pos": [
        17948,
        17964
      ]
    },
    {
      "content": "You can deploy services to Azure from a template by using PowerShell, AzureCLI, or by performing a click to deploy from GitHub.",
      "pos": [
        17966,
        18093
      ]
    },
    {
      "content": "To deploy services from a template in GitHub, execute the following steps:",
      "pos": [
        18094,
        18168
      ]
    },
    {
      "content": "Open the template3 file from GitHub.",
      "pos": [
        18173,
        18209
      ]
    },
    {
      "content": "As an example, open <bpt id=\"p1\">[</bpt>Virtual network with two subnets<ept id=\"p1\">](https://github.com/Azure/azure-quickstart-templates/tree/master/101-virtual-network)</ept>.",
      "pos": [
        18210,
        18350
      ]
    },
    {
      "pos": [
        18354,
        18446
      ],
      "content": "Click on <bpt id=\"p1\">**</bpt>Deploy to Azure<ept id=\"p1\">**</ept>, and then sign in on to the Azure portal with your credentials."
    },
    {
      "pos": [
        18450,
        18495
      ],
      "content": "Verify the template, and then click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        18499,
        18592
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Edit parameters<ept id=\"p1\">**</ept> and select a location, such as <bpt id=\"p2\">*</bpt>West US<ept id=\"p2\">*</ept>, for the vnet and subnets."
    },
    {
      "pos": [
        18596,
        18694
      ],
      "content": "If necessary, change the <bpt id=\"p1\">**</bpt>ADDRESSPREFIX<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>SUBNETPREFIX<ept id=\"p2\">**</ept> parameters, and then click <bpt id=\"p3\">**</bpt>OK<ept id=\"p3\">**</ept>."
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Select a resource group<ept id=\"p1\">**</ept> and then click on the resource group you want to add the vnet and subnets to.",
      "pos": [
        18698,
        18809
      ]
    },
    {
      "content": "Alternatively, you can create a new resource group by clicking <bpt id=\"p1\">**</bpt>Or create new<ept id=\"p1\">**</ept>.",
      "pos": [
        18810,
        18891
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept>.",
      "pos": [
        18895,
        18912
      ]
    },
    {
      "content": "Notice the tile displaying <bpt id=\"p1\">**</bpt>Provisioning Template deployment<ept id=\"p1\">**</ept>.",
      "pos": [
        18913,
        18977
      ]
    },
    {
      "content": "Once the deployment is done, you will see a screen similar to one below.",
      "pos": [
        18978,
        19050
      ]
    },
    {
      "content": "Sample template deployment",
      "pos": [
        19054,
        19080
      ]
    },
    {
      "content": "See Also",
      "pos": [
        19135,
        19143
      ]
    },
    {
      "content": "Azure Networking API reference",
      "pos": [
        19146,
        19176
      ]
    },
    {
      "content": "Azure PowerShell reference for networking",
      "pos": [
        19236,
        19277
      ]
    },
    {
      "content": "Azure Resource Manager Template Language",
      "pos": [
        19337,
        19377
      ]
    },
    {
      "content": "Azure Networking – commonly used templates",
      "pos": [
        19423,
        19465
      ]
    },
    {
      "content": "Compute Resource Provider",
      "pos": [
        19522,
        19547
      ]
    },
    {
      "content": "Azure Resource Manager Overview",
      "pos": [
        19595,
        19626
      ]
    },
    {
      "content": "Role based access control in Azure Resource Manager",
      "pos": [
        19658,
        19709
      ]
    },
    {
      "content": "Using Tags in Azure Resource Manager",
      "pos": [
        19770,
        19806
      ]
    },
    {
      "content": "Template deployments",
      "pos": [
        19866,
        19886
      ]
    }
  ],
  "content": "<properties \n   pageTitle=\"Network Resource Provider\"\n   description=\"Network Resource Provider\"\n   services=\"virtual-network\"\n   documentationCenter=\"na\"\n   authors=\"telmosampaio\"\n   manager=\"adinah\"\n   editor=\"tysonn\" />\n<tags \n   ms.service=\"virtual-network\"\n   ms.devlang=\"na\"\n   ms.topic=\"article\"\n   ms.tgt_pltfrm=\"na\"\n   ms.workload=\"infrastructure-services\"\n   ms.date=\"08/23/2015\"\n   ms.author=\"telmos\" />\n\n# Network Resource Provider\nAn underpinning need in today’s business success, is the ability to build and manage large scale network aware applications in an agile, flexible, secure and repeatable way. Azure Resource Manager (ARM) enables you to create such applications, as a single collection of resources in resource groups. Such resources are managed through various resource providers under ARM. \n\nAzure Resource Manager (ARM) enables you to create such applications and the associated collection of network resources as a single collection of resources in a resource group. The application and the network resources run as a single unit in an ARM resource group. \n\nYou can manage networking resources by using any of the following management interfaces:\n\n- REST based API\n- PowerShell\n- .NET SDK\n- Node.JS SDK\n- Java SDK\n- Azure CLI\n- Azure Portal\n- ARM template language\n\nWith the introduction of Network Resource Providers, you can take advantage of the following benefits:\n\n- **Metadata** – you can add information to resources using tags. These tags can be used to track resource utilization across resource groups and subscriptions.\n- **Greater control of your network** - network resources are loosely coupled and you can control them in a more granular fashion. This means you have more flexibility in managing the networking resources.\n- **Faster configuration** - because network resources are loosely coupled, you can create and orchestrate network resources in parallel. This has drastically reduced configuration time.\n- **Role Based Access Control** - RBAC provides default roles, with specific security scope, in addition to allowing the creation of custom roles for secure management. \n- **Easier management and deployment** - it’s easier to deploy and manage applications since you can can create an entire application stack as a single collection of resources in a resource group. And faster to deploy, since you can deploy by simply providing a template JSON payload.\n- **Rapid customization** - you can use declarative-style templates to enable repeatable and rapid customization of deployments. \n- **Repeatable customization** - you can use declarative-style templates to enable repeatable and rapid customization of deployments.\n\n## Network resources \nYou can now manage network resources independently, instead of having them all managed through a single compute resource (a virtual machine). This ensures a higher degree of flexibility and agility in composing a complex and large scale infrastructure in a resource group.\n \nThe diagram below illustrates a high-level view of the network resource model and its associations. Top level resources are colored with a blue outline. In addition to top level resources, you can see child resources colored with a gray outline. You can manage each resource individually. \n\n![Network resource model](./media/resource-groups-networking/Figure1.png)\n\nA conceptual view of a sample deployment involving a multi-tiered application is presented below. All network resources are colored with a blue outline. \n\n![Network resource model](./media/resource-groups-networking/Figure2.png)\n\n## REST API \nAs mentioned earlier, network resources can be managed via a variety of interfaces, including REST API,.NET SDK, Node.JS SDK, Java SDK, PowerShell, CLI, Azure Portal and templates. \n\nThe Rest API’s conform to the HTTP 1.1 protocol specification. The general URI structure of the API is presented below: \n\n    https://management.azure.com/subscriptions/{subscription-id}/providers/{resource-provider-namespace}/locations/{region-location}/register?api-version={api-version}\n\nAnd the parameters in braces represent the following elements:\n\n- **subscription-id** - your Azure subscription id.\n- **resource-provider-namespace** - namespace for the provider being used. THe value for the network resource provider is *Microsoft.Network*.\n- **region-name** - the Azure region name\n\nThe following HTTP methods are supported when making calls to the REST API:\n\n- **PUT** - used to create a resource of a given type, modify a resource property or change an association between resources. \n- **GET** - used to retrieve information for a provisioned resource.\n- **DELETE** - used to delete an existing resource.\n\nBoth the request and response conform to a JSON payload format. For more details, see [Azure Resource Management APIs](https://msdn.microsoft.com/library/azure/dn948464.aspx).\n\n## ARM template language\nIn addition to managing resources imperatively (via APIs or SDK), you can also use a declarative programming style to build and manage network resources by using the ARM Template Language. \n\nA sample representation of a template is provided below – \n\n    {\n      \"$schema\": \"http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json\",\n      \"contentVersion\": \"<version-number-of-template>\",\n      \"parameters\": { <parameter-definitions-of-template> },\n      \"variables\": { <variable-definitions-of-template> },\n      \"resources\": [ { <definition-of-resource-to-deploy> } ],\n      \"outputs\": { <output-of-template> }    \n    }\n\nThe template is primarily a JSON description of the resources and the instance values injected via parameters. The example below can be used to create a virtual network with 2 subnets.\n\n    {\n        \"$schema\": \"http://schema.management.azure.com/schemas/2014-04-01-preview/VNET.json\",\n        \"contentVersion\": \"1.0.0.0\",\n        \"parameters\" : {\n          \"location\": {\n            \"type\": \"String\",\n            \"allowedValues\": [\"East US\", \"West US\", \"West Europe\", \"East Asia\", \"South East Asia\"],\n            \"metadata\" : {\n              \"Description\" : \"Deployment location\"\n            }\n          },\n          \"virtualNetworkName\":{\n            \"type\" : \"string\",\n            \"defaultValue\":\"myVNET\",\n            \"metadata\" : {\n              \"Description\" : \"VNET name\"\n            }\n          },\n          \"addressPrefix\":{\n            \"type\" : \"string\",\n            \"defaultValue\" : \"10.0.0.0/16\",\n            \"metadata\" : {\n              \"Description\" : \"Address prefix\"\n            }\n    \n          },\n          \"subnet1Name\": {\n            \"type\" : \"string\",\n            \"defaultValue\" : \"Subnet-1\",\n            \"metadata\" : {\n              \"Description\" : \"Subnet 1 Name\"\n            }\n          },\n          \"subnet2Name\": {\n            \"type\" : \"string\",\n            \"defaultValue\" : \"Subnet-2\",\n            \"metadata\" : {\n              \"Description\" : \"Subnet 2 name\"\n            }\n          },\n          \"subnet1Prefix\" : {\n            \"type\" : \"string\",\n            \"defaultValue\" : \"10.0.0.0/24\",\n            \"metadata\" : {\n              \"Description\" : \"Subnet 1 Prefix\"\n            }\n          },\n          \"subnet2Prefix\" : {\n            \"type\" : \"string\",\n            \"defaultValue\" : \"10.0.1.0/24\",\n            \"metadata\" : {\n              \"Description\" : \"Subnet 2 Prefix\"\n            }\n          }\n        },\n        \"resources\": [\n        {\n          \"apiVersion\": \"2015-05-01-preview\",\n          \"type\": \"Microsoft.Network/virtualNetworks\",\n          \"name\": \"[parameters('virtualNetworkName')]\",\n          \"location\": \"[parameters('location')]\",\n          \"properties\": {\n            \"addressSpace\": {\n              \"addressPrefixes\": [\n                \"[parameters('addressPrefix')]\"\n              ]\n            },\n            \"subnets\": [\n              {\n                \"name\": \"[parameters('subnet1Name')]\",\n                \"properties\" : {\n                  \"addressPrefix\": \"[parameters('subnet1Prefix')]\"\n                }\n              },\n              {\n                \"name\": \"[parameters('subnet2Name')]\",\n                \"properties\" : {\n                  \"addressPrefix\": \"[parameters('subnet2Prefix')]\"\n                }\n              }\n            ]\n          }\n        }\n        ]\n    }\n\nYou have the option of providing the parameter values manually when using a template, or you can use a parameter file. The example below shows a possible set of parameter values to be used with the template above:\n\n    {\n      \"location\": {\n          \"value\": \"East US\"\n      },\n      \"virtualNetworkName\": {\n          \"value\": \"VNET1\"\n      },\n      \"subnet1Name\": {\n          \"value\": \"Subnet1\"\n      },\n      \"subnet2Name\": {\n          \"value\": \"Subnet2\"\n      },\n      \"addressPrefix\": {\n          \"value\": \"192.168.0.0/16\"\n      },\n      \"subnet1Prefix\": {\n          \"value\": \"192.168.1.0/24\"\n      },\n      \"subnet2Prefix\": {\n          \"value\": \"192.168.2.0/24\"\n      }\n    }\n\n\nThe main advantages of using templates are:\n\n- You can build a complex infrastructure in a resource group in a declarative style. The orchestration of creating the resources, including dependency management, is handled by ARM. \n- The infrastructure can be created in a repeatable way across various regions and within a region by simply changing parameters. \n- The declarative style leads to shorter lead time in building the templates and rolling out the infrastructure. \n\nFor sample templates, see [Azure quickstart templates](https://github.com/Azure/azure-quickstart-templates).\n\nFor more information on the ARM Template Language, see [Azure Resource Manager Template Language](../resource-group-authoring-templates.md).\n\nThe sample template above uses the virtual network and subnet resources. There are other network resources you can use as listed below:\n\n## NIC\nNetwork Interface Card, or NIC, represents a network interface that can be associated to a virtual machine (VM). A VM can have one or more NICs.\n\n![NIC's on a single VM](./media/resource-groups-networking/Figure3.png)\n\nKey properties of a NIC resource include:\n\n- IP settings\n- Internal DNS name\n- DNS servers\n\nA NIC can also be associated with the following network resources:\n\n- Network Security Group (NSG) \n- Load balancer\n\n## Virtual Network and Subnet\nVirtual Networks (VNET) and subnets help define a security boundary for workloads running in Azure. A VNET is characterized by an address space, also referred to as CIDR block. \n\nA subnet is a child resource of a VNET, and helps define segments of address spaces within a CIDR block, using IP address prefixes. VMs that execute various workloads essentially operate in a subnet boundary. \n\n![NIC's on a single VM](./media/resource-groups-networking/Figure4.png)\n\nKey properties of a VNET resource include:\n\n- IP address space (CIDR block) \n- VNET name\n- subnets\n- DNS servers\n\nA VNET can also be associated with the following network resources:\n\n- VPN Gateway\n\nKey properties of a subnet include:\n\n- IP address prefix\n- Subnet name\n\nA subnet can also be associated with the following network resources:\n\n- NSG\n\n## Load Balancer\nA load balancer is used when you want to scale your applications. Typical deployment scenarios involve applications running on multiple VM instances. The VM instances are fronted by a load balancer that helps to distribute network traffic to the various instances. \n\n![NIC's on a single VM](./media/resource-groups-networking/Figure5.png)\n\nLoad balancers contain the following child resources:\n\n- **Front end IP configuration** – a Load balancer can include one or more front end IP addresses, otherwise known as a virtual IPs (VIPs). These IP addresses serve as ingress for the traffic. \n- **Backend address pool** – these are IP addresses associated with the VM NICs to which load will be distributed.\n- **Load balancing rules** – a rule property maps a given front end IP and port combination to a set of back end IP addresses and port combination. With a single definition of a load balancer resource, you can define multiple load balancing rules, each rule reflecting a combination of a front end IP and port and back end IP and port associated with VMs. \n- **Probes** – probes enable you to keep track of the health of VM instances. If a health probe fails, the VM instance will be taken out of rotation automatically.\n- **Inbound NAT rules** – NAT rules defining the inbound traffic flowing through the front end IP and distributed to the back end IP.\n\n## Application Gateway\n\nApplication Gateway provides an Azure-managed HTTP load balancing solution based on layer 7 load balancing. Application load balancing allows the use of routing rules for network traffic based on HTTP. \n\nApplication Gateways contain the following child resources:\n\n- **Back end server pool** - The list of IP addresses of the back end servers. The IP addresses listed should either belong to the virtual network subnet, or should be a public IP/VIP. \n- **Back end server pool settings** - Every pool has settings like port, protocol, and cookie based affinity. These settings are tied to a pool and are applied to all servers within the pool.\n- **Front end Port** - This port is the public port opened on the application gateway. Traffic hits this port, and then gets redirected to one of the back end servers.\n- **Listener** - listener has a frontend port, a protocol (Http or Https, these are case-sensitive), and the SSL certificate name (if configuring SSL offload). \n- **Rule** - The rule binds the listener and the back end server pool and defines which back end server pool the traffic should be directed to when it hits a particular listener. Currently, only the basic rule is supported. The basic rule is round-robin load distribution.\n\n\n## Public IP\nA public IP address resource provides either a reserved or dynamic public IP address.  \nA Public IP address can be assigned to a load balancer, NAT, or associated with a private IP address on a NIC of a VM.  \n\nKey properties of a public IP resource include:\n\n- **IP allocation method** – reserved or dynamic. \n\n## Network Security Group (NSG)\nAn NSG resource enables the creation of security boundary for workloads, by implementing allow and deny rules. Such rules can be applied at the NIC level (VM instance level) or at the subnet level (group of VMs).\n\nKey properties of NSG resource include:\n\n- **Security rule** - An NSG can have multiple security rules defined. Each rule can allow or deny different types of traffic.\n\n## Security Rule\nA security rule is a child resource of an NSG. \n\nKey properties of a Security rule include: \n\n- **Protocol** – network protocol this rule applies to.\n- **Source Port Range** - source port, or range from, 0 to 65535.  A wildcard can be used to match all ports. \n- **Destination Port Range** - Destination port, or range, from 0 to 65535.  A wildcard can be used to match all ports.\n- **Source Address Prefix** – source IP address range. \n- **Destination Address Prefix** – destination IP address range.\n- **Access** – *Allow* or *Deny* traffic.\n- **Priority** – a value between 100 and 4096. The priority number must be unique for each rule in collection of security rules. The lower the priority number, the higher the priority of the rule.\n- **Direction** – specifies if the rule will be applied to traffic in the *Inbound* or *Outbound* direction. \n\n## VPN Gateway \nA VPN gateway resource enables you to create a secure connection between their on-premises data center and Azure. A VPN gateway resource can be configured in three different ways:\n \n- **Point to Site** – you can securely access your Azure resources hosted in a VNET by using a VPN client from any computer. \n- **Multi-site connection** – you can securely connect from your on-premises data centers to resources running in a VNET. \n- **VNET to VNET** – you can securely connect across Azure VNETS within the same region, or across regions to build workloads with geo-redundancy.\n\nKey properties of a VPN gateway include:\n \n- **Gateway type** - dynamically routed or a static routed gateway. \n- **VPN Client Address Pool Prefix** – IP addresses to be assigned to clients connecting in a point to site configuration.\n\n\n\n## Traffic Manager Profile\nTraffic manager and its child endpoint resource enable distribution of your traffic to endpoints in Azure and outside of Azure. Such traffic distribution is governed by policies. Traffic manager also allows endpoint health to be monitored, and traffic diverted appropriately based on the health of an endpoint. \n\nKey properties of a traffic manager profile include:\n\n- **Traffic routing method** - possible values are *Performance*, *Weighted*, and *Priority*.\n- **DNS configuration** - FQDN for the profile.\n- **Protocol** - monitoring protocol, possible values are *HTTP* and *HTTPS*.\n- **Port** - monitoring port. \n- **Path** - monitoring path.\n- **Endpoints** - container for endpoint resources.\n\n## Endpoint \nAn endpoint is a child resource of a Traffic Manager Profile. It represents a service or web endpoint to which user traffic is distributed based on the configured policy in the Traffic Manager Profile resource. \n\nKey properties of an endpoint include:\n \n- **Type** - the type of the endpoint, possible values are *Azure End point*, *External Endpoint*, and  *Nested Endpoint*. \n- **Target Resource ID** – public IP address of a service or web endpoint. This can be an Azure or external endpoint.\n- **Weight** - endpoint weight used in traffic management. \n- **Priority** - priority of the endpoint, used to define a failover action. \n\n## Azure DNS\n\nAzure DNS is a hosting service for DNS domains, providing name resolution using Microsoft Azure infrastructure.\n\nKey properties of Azure DNS include:\n\n- ** DNS zones** - Domain zone information to host DNS records of a particular domain.\n- ** DNS record sets** - a collection of records of a specific type. Supported types are A, AAAA, CNAME, MX, NS, SOA,SRV and TXT.\n\n\n## Using a template\n\nYou can deploy services to Azure from a template by using PowerShell, AzureCLI, or by performing a click to deploy from GitHub. To deploy services from a template in GitHub, execute the following steps:\n\n1. Open the template3 file from GitHub. As an example, open [Virtual network with two subnets](https://github.com/Azure/azure-quickstart-templates/tree/master/101-virtual-network).\n2. Click on **Deploy to Azure**, and then sign in on to the Azure portal with your credentials.\n3. Verify the template, and then click **Save**.\n4. Click **Edit parameters** and select a location, such as *West US*, for the vnet and subnets.\n5. If necessary, change the **ADDRESSPREFIX** and **SUBNETPREFIX** parameters, and then click **OK**.\n6. Click **Select a resource group** and then click on the resource group you want to add the vnet and subnets to. Alternatively, you can create a new resource group by clicking **Or create new**.\n3. Click **Create**. Notice the tile displaying **Provisioning Template deployment**. Once the deployment is done, you will see a screen similar to one below.\n\n![Sample template deployment](./media/resource-groups-networking/Figure6.png)\n\n\n## See Also\n\n[Azure Networking API reference](https://msdn.microsoft.com/library/azure/dn948464.aspx)\n\n[Azure PowerShell reference for networking](https://msdn.microsoft.com/library/azure/mt163510.aspx)\n\n[Azure Resource Manager Template Language](../resource-group-authoring-templates.md)\n\n[Azure Networking – commonly used templates](https://github.com/Azure/azure-quickstart-templates)\n\n[Compute Resource Provider](../virtual-machines-azurerm-versus-azuresm)\n\n[Azure Resource Manager Overview](../resource-group-overview)\n\n[Role based access control in Azure Resource Manager](https://msdn.microsoft.com/library/azure/dn906885.aspx) \n\n[Using Tags in Azure Resource Manager](https://msdn.microsoft.com/library/azure/dn848368.aspx)\n\n[Template deployments](https://msdn.microsoft.com/library/azure/dn790549.aspx) \n"
}