<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>PolyBase in SQL Data Warehouse Tutorial | Microsoft Azure</source>
          <target state="new">PolyBase in SQL Data Warehouse Tutorial | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn what PolyBase is and how to use it for data warehousing scenarios.</source>
          <target state="new">Learn what PolyBase is and how to use it for data warehousing scenarios.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Load data with PolyBase</source>
          <target state="new">Load data with PolyBase</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>PolyBase technology allows you to query and join data from multiple sources, all by using Transact-SQL commands.</source>
          <target state="new">PolyBase technology allows you to query and join data from multiple sources, all by using Transact-SQL commands.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Using PolyBase, you can query data stored in Azure blob storage and load it into SQL Data</source>
          <target state="new">Using PolyBase, you can query data stored in Azure blob storage and load it into SQL Data</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Warehouse database with the following steps:</source>
          <target state="new">Warehouse database with the following steps:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create database master key and credential.</source>
          <target state="new">Create database master key and credential.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Create PolyBase objects: external data source, external file format, and external table.</source>
          <target state="new">Create PolyBase objects: external data source, external file format, and external table.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Query data stored in Azure blob storage.</source>
          <target state="new">Query data stored in Azure blob storage.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Load data from Azure blob storage into SQL Data Warehouse.</source>
          <target state="new">Load data from Azure blob storage into SQL Data Warehouse.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To step through this tutorial, you need:</source>
          <target state="new">To step through this tutorial, you need:</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Azure storage account</source>
          <target state="new">Azure storage account</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Your data stored in Azure blob storage as delimited text files</source>
          <target state="new">Your data stored in Azure blob storage as delimited text files</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>First, you will create the objects that PolyBase requires for connecting to and querying data in Azure blob storage.</source>
          <target state="new">First, you will create the objects that PolyBase requires for connecting to and querying data in Azure blob storage.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Create database master key</source>
          <target state="new">Create database master key</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Connect to user database on your server to create a database master key.</source>
          <target state="new">Connect to user database on your server to create a database master key.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This key is used to encrypt your credential secret in the next step.</source>
          <target state="new">This key is used to encrypt your credential secret in the next step.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Reference topic: <bpt id="p1">[</bpt>CREATE MASTER KEY (Transact-SQL)<ept id="p1">][]</ept>.</source>
          <target state="new">Reference topic: <bpt id="p1">[</bpt>CREATE MASTER KEY (Transact-SQL)<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create a database scoped credential</source>
          <target state="new">Create a database scoped credential</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To access Azure blob storage, you need to create a database scoped credential that stores authentication information for your Azure storage account.</source>
          <target state="new">To access Azure blob storage, you need to create a database scoped credential that stores authentication information for your Azure storage account.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Connect to your data warehouse database and create a database scoped credential for each Azure storage account you want to access.</source>
          <target state="new">Connect to your data warehouse database and create a database scoped credential for each Azure storage account you want to access.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Specify an identity name and your Azure storage account key as the Secret.</source>
          <target state="new">Specify an identity name and your Azure storage account key as the Secret.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The identity name does not affect authentication to Azure Storage.</source>
          <target state="new">The identity name does not affect authentication to Azure Storage.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To see if a database-scoped credential already exists, use   sys.database_credentials, not sys.credentials which only shows the server credentials.</source>
          <target state="new">To see if a database-scoped credential already exists, use   sys.database_credentials, not sys.credentials which only shows the server credentials.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Reference topic: <bpt id="p1">[</bpt>CREATE CREDENTIAL (Transact-SQL)<ept id="p1">][]</ept>.</source>
          <target state="new">Reference topic: <bpt id="p1">[</bpt>CREATE CREDENTIAL (Transact-SQL)<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To drop a database scoped credential you simply use the following syntax:</source>
          <target state="new">To drop a database scoped credential you simply use the following syntax:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Reference topic: <bpt id="p1">[</bpt>DROP CREDENTIAL (Transact-SQL)<ept id="p1">][]</ept>.</source>
          <target state="new">Reference topic: <bpt id="p1">[</bpt>DROP CREDENTIAL (Transact-SQL)<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Create an external data source</source>
          <target state="new">Create an external data source</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The external data source is a database object that stores the location of the Azure blob storage data and your access information.</source>
          <target state="new">The external data source is a database object that stores the location of the Azure blob storage data and your access information.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You need to define an external data source for each Azure Storage container you want to access.</source>
          <target state="new">You need to define an external data source for each Azure Storage container you want to access.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Reference topic: <bpt id="p1">[</bpt>CREATE EXTERNAL DATA SOURCE (Transact-SQL)<ept id="p1">][]</ept>.</source>
          <target state="new">Reference topic: <bpt id="p1">[</bpt>CREATE EXTERNAL DATA SOURCE (Transact-SQL)<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To drop the external data source the syntax is as follows:</source>
          <target state="new">To drop the external data source the syntax is as follows:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Reference topic: <bpt id="p1">[</bpt>DROP EXTERNAL DATA SOURCE (Transact-SQL)<ept id="p1">][]</ept>.</source>
          <target state="new">Reference topic: <bpt id="p1">[</bpt>DROP EXTERNAL DATA SOURCE (Transact-SQL)<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Create an external file format</source>
          <target state="new">Create an external file format</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The external file format is a database object that specifies the format of the external data.</source>
          <target state="new">The external file format is a database object that specifies the format of the external data.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In this example, we have uncompressed data in a text file and the fields are separated with the pipe character ('|').</source>
          <target state="new">In this example, we have uncompressed data in a text file and the fields are separated with the pipe character ('|').</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>PolyBase can work with compressed and uncompressed data in delimited text, Hive RCFILE and HIVE ORC formats.</source>
          <target state="new">PolyBase can work with compressed and uncompressed data in delimited text, Hive RCFILE and HIVE ORC formats.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Reference topic: <bpt id="p1">[</bpt>CREATE EXTERNAL FILE FORMAT (Transact-SQL)<ept id="p1">][]</ept>.</source>
          <target state="new">Reference topic: <bpt id="p1">[</bpt>CREATE EXTERNAL FILE FORMAT (Transact-SQL)<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To drop an external file format the syntax is as follows:</source>
          <target state="new">To drop an external file format the syntax is as follows:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Reference topic: <bpt id="p1">[</bpt>DROP EXTERNAL FILE FORMAT (Transact-SQL)<ept id="p1">][]</ept>.</source>
          <target state="new">Reference topic: <bpt id="p1">[</bpt>DROP EXTERNAL FILE FORMAT (Transact-SQL)<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Create an external table</source>
          <target state="new">Create an external table</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The external table definition is similar to a relational table definition.</source>
          <target state="new">The external table definition is similar to a relational table definition.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The key difference is the location and the format of the data.</source>
          <target state="new">The key difference is the location and the format of the data.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The external table definition is stored in the SQL Data Warehouse database.</source>
          <target state="new">The external table definition is stored in the SQL Data Warehouse database.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The data is stored in the location specified by the data source.</source>
          <target state="new">The data is stored in the location specified by the data source.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The LOCATION option specifies the path to the data from the root of the data source.</source>
          <target state="new">The LOCATION option specifies the path to the data from the root of the data source.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In this example, the data is located at 'wasbs://mycontainer@ test.blob.core.windows.net/path/Demo/'.</source>
          <target state="new">In this example, the data is located at 'wasbs://mycontainer@ test.blob.core.windows.net/path/Demo/'.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>All the files for the same table need to be under the same logical folder in Azure BLOB.</source>
          <target state="new">All the files for the same table need to be under the same logical folder in Azure BLOB.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Please note that you cannot create statistics on an external table at this time.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Please note that you cannot create statistics on an external table at this time.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Reference topic: <bpt id="p1">[</bpt>CREATE EXTERNAL TABLE (Transact-SQL)<ept id="p1">][]</ept>.</source>
          <target state="new">Reference topic: <bpt id="p1">[</bpt>CREATE EXTERNAL TABLE (Transact-SQL)<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The objects you just created are stored in SQL Data Warehouse database.</source>
          <target state="new">The objects you just created are stored in SQL Data Warehouse database.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can view them in the SQL Server Data Tools (SSDT) Object Explorer.</source>
          <target state="new">You can view them in the SQL Server Data Tools (SSDT) Object Explorer.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To drop an external table you need to use the following syntax:</source>
          <target state="new">To drop an external table you need to use the following syntax:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> When dropping an external table you must use <ph id="ph2">`DROP EXTERNAL TABLE`</ph> you <bpt id="p1">**</bpt>cannot<ept id="p1">**</ept> use <ph id="ph3">`DROP TABLE`</ph>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> When dropping an external table you must use <ph id="ph2">`DROP EXTERNAL TABLE`</ph> you <bpt id="p1">**</bpt>cannot<ept id="p1">**</ept> use <ph id="ph3">`DROP TABLE`</ph>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Reference topic: <bpt id="p1">[</bpt>DROP EXTERNAL TABLE (Transact-SQL)<ept id="p1">][]</ept>.</source>
          <target state="new">Reference topic: <bpt id="p1">[</bpt>DROP EXTERNAL TABLE (Transact-SQL)<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It is also worth noting that external tables are visible in both <ph id="ph1">`sys.tables`</ph> and more specifically in <ph id="ph2">`sys.external_tables`</ph> catalog views.</source>
          <target state="new">It is also worth noting that external tables are visible in both <ph id="ph1">`sys.tables`</ph> and more specifically in <ph id="ph2">`sys.external_tables`</ph> catalog views.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Rotating storage keys</source>
          <target state="new">Rotating storage keys</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>From time to time you will want to change the access key to your blob storage for security reasons.</source>
          <target state="new">From time to time you will want to change the access key to your blob storage for security reasons.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The most elegant way to perform this task is to follow a process known as "rotating the keys".</source>
          <target state="new">The most elegant way to perform this task is to follow a process known as "rotating the keys".</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You may have noticed that you have two storage keys for your blob storage account.</source>
          <target state="new">You may have noticed that you have two storage keys for your blob storage account.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is so that you can transition</source>
          <target state="new">This is so that you can transition</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Rotating your Azure storage account keys is a simple three step process</source>
          <target state="new">Rotating your Azure storage account keys is a simple three step process</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Create second database scoped credential based on the secondary storage access key</source>
          <target state="new">Create second database scoped credential based on the secondary storage access key</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Create second external data source based off this new credential</source>
          <target state="new">Create second external data source based off this new credential</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Drop and create the external table(s) pointing to the new external data source</source>
          <target state="new">Drop and create the external table(s) pointing to the new external data source</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When you have migrated all your external tables to the new external data source then you can perform the clean up tasks:</source>
          <target state="new">When you have migrated all your external tables to the new external data source then you can perform the clean up tasks:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Drop first external data source</source>
          <target state="new">Drop first external data source</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Drop first database scoped credential based on the primary storage access key</source>
          <target state="new">Drop first database scoped credential based on the primary storage access key</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Log into Azure and regenerate the primary access key ready for the next time</source>
          <target state="new">Log into Azure and regenerate the primary access key ready for the next time</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Query Azure blob storage data</source>
          <target state="new">Query Azure blob storage data</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Queries against external tables simply use the table name as though it was a relational table.</source>
          <target state="new">Queries against external tables simply use the table name as though it was a relational table.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This is an ad-hoc query that joins insurance customer data stored in SQL Data Warehouse, with automobile sensor data stored in Azure storage blob.</source>
          <target state="new">This is an ad-hoc query that joins insurance customer data stored in SQL Data Warehouse, with automobile sensor data stored in Azure storage blob.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The result shows the drivers that drive faster than others.</source>
          <target state="new">The result shows the drivers that drive faster than others.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Load data from Azure blob storage</source>
          <target state="new">Load data from Azure blob storage</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This example loads data from Azure blob storage to SQL Data Warehouse database.</source>
          <target state="new">This example loads data from Azure blob storage to SQL Data Warehouse database.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Storing data directly removes the data transfer time for queries.</source>
          <target state="new">Storing data directly removes the data transfer time for queries.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Storing data with a columnstore index improves query performance for analysis queries by up to 10x.</source>
          <target state="new">Storing data with a columnstore index improves query performance for analysis queries by up to 10x.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This example uses the CREATE TABLE AS SELECT statement to load data.</source>
          <target state="new">This example uses the CREATE TABLE AS SELECT statement to load data.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The new table inherits the columns named in the query.</source>
          <target state="new">The new table inherits the columns named in the query.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>It inherits the data types of those columns from the external table definition.</source>
          <target state="new">It inherits the data types of those columns from the external table definition.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CREATE TABLE AS SELECT is a highly performant Transact-SQL statement  that replaces INSERT...SELECT.</source>
          <target state="new">CREATE TABLE AS SELECT is a highly performant Transact-SQL statement  that replaces INSERT...SELECT.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>It was originally developed for  the massively parallel processing (MPP) engine in Analytics Platform System and is now in SQL Data Warehouse.</source>
          <target state="new">It was originally developed for  the massively parallel processing (MPP) engine in Analytics Platform System and is now in SQL Data Warehouse.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CREATE TABLE AS SELECT (Transact-SQL)<ept id="p1">][]</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>CREATE TABLE AS SELECT (Transact-SQL)<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Working around the PolyBase UTF-8 requirement</source>
          <target state="new">Working around the PolyBase UTF-8 requirement</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>At present PolyBase supports loading data files that have been UTF-8 encoded.</source>
          <target state="new">At present PolyBase supports loading data files that have been UTF-8 encoded.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>As UTF-8 uses the same character encoding as ASCII PolyBase will also support loading data that is ASCII encoded.</source>
          <target state="new">As UTF-8 uses the same character encoding as ASCII PolyBase will also support loading data that is ASCII encoded.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>However, PolyBase does not support other character encoding such as UTF-16 / Unicode or extended ASCII characters.</source>
          <target state="new">However, PolyBase does not support other character encoding such as UTF-16 / Unicode or extended ASCII characters.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Extended ASCII includes characters with accents such as the umlaut which is common in German.</source>
          <target state="new">Extended ASCII includes characters with accents such as the umlaut which is common in German.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To work around this requirement the best answer is to re-write to UTF-8 encoding.</source>
          <target state="new">To work around this requirement the best answer is to re-write to UTF-8 encoding.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>There are several ways to do this.</source>
          <target state="new">There are several ways to do this.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Below are two approaches using Powershell:</source>
          <target state="new">Below are two approaches using Powershell:</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Simple example for small files</source>
          <target state="new">Simple example for small files</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Below is a simple one line Powershell script that creates the file.</source>
          <target state="new">Below is a simple one line Powershell script that creates the file.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>However, whilst this is a simple way to re-encode the data it is by no means the most efficient.</source>
          <target state="new">However, whilst this is a simple way to re-encode the data it is by no means the most efficient.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The io streaming example below is much, much faster and achieves the same result.</source>
          <target state="new">The io streaming example below is much, much faster and achieves the same result.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>IO Streaming example for larger files</source>
          <target state="new">IO Streaming example for larger files</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The code sample below is more complex but as it streams the rows of data from source to target it is much more efficient.</source>
          <target state="new">The code sample below is more complex but as it streams the rows of data from source to target it is much more efficient.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Use this approach for larger files.</source>
          <target state="new">Use this approach for larger files.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For more development tips, see <bpt id="p1">[</bpt>development overview<ept id="p1">][]</ept>.</source>
          <target state="new">For more development tips, see <bpt id="p1">[</bpt>development overview<ept id="p1">][]</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5470c6c7d804d347faae856598731b64ac04538d</xliffext:olfilehash>
  </header>
</xliff>