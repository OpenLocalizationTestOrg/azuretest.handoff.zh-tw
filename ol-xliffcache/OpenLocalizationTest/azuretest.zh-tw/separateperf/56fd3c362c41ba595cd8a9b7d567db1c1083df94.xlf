<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Securely Connecting to BackEnd Resources from an App Service Environment</source>
          <target state="new">Securely Connecting to BackEnd Resources from an App Service Environment</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn about how to securely connect to backend resources from an App Service Environment.</source>
          <target state="new">Learn about how to securely connect to backend resources from an App Service Environment.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Securely Connecting to Backend Resources from an App Service Environment</source>
          <target state="new">Securely Connecting to Backend Resources from an App Service Environment</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Since an App Service Environment is always created in a subnet of a regional [virtual network][virtualnetwork], outbound connections from an App Service Environment to other backend resources can flow exclusively over the virtual network.</source>
          <target state="new">Since an App Service Environment is always created in a subnet of a regional [virtual network][virtualnetwork], outbound connections from an App Service Environment to other backend resources can flow exclusively over the virtual network.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, there may be a SQL Server running on a cluster of virtual machines with port 1433 locked down.</source>
          <target state="new">For example, there may be a SQL Server running on a cluster of virtual machines with port 1433 locked down.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The endpoint may be ACLd to only allow access from other resources on the same virtual network.</source>
          <target state="new">The endpoint may be ACLd to only allow access from other resources on the same virtual network.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>As another example, sensitive endpoints may run on-premises and be connected to Azure via either [Site-to-Site][SiteToSite] or [Azure ExpressRoute][ExpressRoute] connections.</source>
          <target state="new">As another example, sensitive endpoints may run on-premises and be connected to Azure via either [Site-to-Site][SiteToSite] or [Azure ExpressRoute][ExpressRoute] connections.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>As a result, only resources in virtual networks connected to the Site-to-Site or ExpressRoute tunnels will be able to access on-premises endpoints.</source>
          <target state="new">As a result, only resources in virtual networks connected to the Site-to-Site or ExpressRoute tunnels will be able to access on-premises endpoints.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For all of these scenarios, apps running on an App Service Environment will be able to securely connect to the various servers and resources.</source>
          <target state="new">For all of these scenarios, apps running on an App Service Environment will be able to securely connect to the various servers and resources.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Outbound traffic from apps running in an App Service Environment to private endpoints in the same virtual network (or connected to the same virtual network), will only flow over the virtual network.</source>
          <target state="new">Outbound traffic from apps running in an App Service Environment to private endpoints in the same virtual network (or connected to the same virtual network), will only flow over the virtual network.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Outbound traffic to private endpoints will not flow over the public Internet.</source>
          <target state="new">Outbound traffic to private endpoints will not flow over the public Internet.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Outbound Connectivity and DNS Requirements</source>
          <target state="new">Outbound Connectivity and DNS Requirements</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Note that for an App Service Environment to function properly, it requires outbound access to Azure Storage as well as Sql Database in the same Azure region.</source>
          <target state="new">Note that for an App Service Environment to function properly, it requires outbound access to Azure Storage as well as Sql Database in the same Azure region.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If outbound Internet access is blocked in the virtual network, App Service Environments will not be able to access these Azure endpoints.</source>
          <target state="new">If outbound Internet access is blocked in the virtual network, App Service Environments will not be able to access these Azure endpoints.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Customer may also have custom DNS servers configured in the virtual network.</source>
          <target state="new">Customer may also have custom DNS servers configured in the virtual network.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>App Service Environments need to be able to resolve Azure endpoints under *.database.windows.net, *.file.core.windows.net and *.blob.core.windows.net.</source>
          <target state="new">App Service Environments need to be able to resolve Azure endpoints under *.database.windows.net, *.file.core.windows.net and *.blob.core.windows.net.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is also recommended that any custom DNS servers on the virtual network be setup ahead of time prior to creating an App Service Environment.</source>
          <target state="new">It is also recommended that any custom DNS servers on the virtual network be setup ahead of time prior to creating an App Service Environment.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If a virtual network's DNS configuration is changed while an App Service Environment is being created, that will result in the App Service Environment creation process failing.</source>
          <target state="new">If a virtual network's DNS configuration is changed while an App Service Environment is being created, that will result in the App Service Environment creation process failing.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Connecting to a SQL Server</source>
          <target state="new">Connecting to a SQL Server</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A common SQL Server configuration has an endpoint listening on port 1433:</source>
          <target state="new">A common SQL Server configuration has an endpoint listening on port 1433:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>SQL Server Endpoint</source>
          <target state="new">SQL Server Endpoint</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>There are two approaches for restricting traffic to this endpoint:</source>
          <target state="new">There are two approaches for restricting traffic to this endpoint:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>[Network Access Control Lists][NetworkAccessControlLists] (Network ACLs)</source>
          <target state="new">[Network Access Control Lists][NetworkAccessControlLists] (Network ACLs)</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>[Network Security Groups][NetworkSecurityGroups]</source>
          <target state="new">[Network Security Groups][NetworkSecurityGroups]</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Restricting Access With a Network ACL</source>
          <target state="new">Restricting Access With a Network ACL</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Port 1433 can be secured using a network access control list.</source>
          <target state="new">Port 1433 can be secured using a network access control list.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The example below whitelists client addresses originating from inside of a virtual network, and blocks access to all other clients.</source>
          <target state="new">The example below whitelists client addresses originating from inside of a virtual network, and blocks access to all other clients.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Network Access Control List Example</source>
          <target state="new">Network Access Control List Example</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Any applications running in App Service Environment in the same virtual network as the SQL Server will be able to connect to the SQL Server instance using the <bpt id="p1">**</bpt>VNet internal<ept id="p1">**</ept> IP address for the SQL Server virtual machine.</source>
          <target state="new">Any applications running in App Service Environment in the same virtual network as the SQL Server will be able to connect to the SQL Server instance using the <bpt id="p1">**</bpt>VNet internal<ept id="p1">**</ept> IP address for the SQL Server virtual machine.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The example connection string below references the SQL Server using its private IP address.</source>
          <target state="new">The example connection string below references the SQL Server using its private IP address.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Although the virtual machine has a public endpoint as well, connection attempts using the public IP address will be rejected because of the network ACL.</source>
          <target state="new">Although the virtual machine has a public endpoint as well, connection attempts using the public IP address will be rejected because of the network ACL.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Restricting Access With a Network Security Group</source>
          <target state="new">Restricting Access With a Network Security Group</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An alternative approach for securing access is with a network security group.</source>
          <target state="new">An alternative approach for securing access is with a network security group.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Network security groups can be applied to individual virtual machines, or to a subnet containing virtual machines.</source>
          <target state="new">Network security groups can be applied to individual virtual machines, or to a subnet containing virtual machines.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>First a network security group needs to be created:</source>
          <target state="new">First a network security group needs to be created:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Restricting access to only VNet internal traffic is very simple with a network security group.</source>
          <target state="new">Restricting access to only VNet internal traffic is very simple with a network security group.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default rules in a network security group only allow access from other network clients in the same virtual network.</source>
          <target state="new">The default rules in a network security group only allow access from other network clients in the same virtual network.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>As a result locking down access to SQL Server is as simple as applying a network security group with its default rules to either the virtual machines running SQL Server, or the subnet containing the virtual machines.</source>
          <target state="new">As a result locking down access to SQL Server is as simple as applying a network security group with its default rules to either the virtual machines running SQL Server, or the subnet containing the virtual machines.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The sample below applies a network security group to the containing subnet:</source>
          <target state="new">The sample below applies a network security group to the containing subnet:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The end result is a set of security rules that block external access, while allowing VNet internal access:</source>
          <target state="new">The end result is a set of security rules that block external access, while allowing VNet internal access:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Default Network Security Rules</source>
          <target state="new">Default Network Security Rules</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="new">Getting started</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To get started with App Service Environments, see [Introduction to App Service Environment][IntroToAppServiceEnvironment]</source>
          <target state="new">To get started with App Service Environments, see [Introduction to App Service Environment][IntroToAppServiceEnvironment]</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For details around controlling inbound traffic to your App Service Environment, see [Controlling inbound traffic to an App Service Environment][ControlInboundASE]</source>
          <target state="new">For details around controlling inbound traffic to your App Service Environment, see [Controlling inbound traffic to an App Service Environment][ControlInboundASE]</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about the Azure App Service platform, see [Azure App Service][AzureAppService].</source>
          <target state="new">For more information about the Azure App Service platform, see [Azure App Service][AzureAppService].</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56fd3c362c41ba595cd8a9b7d567db1c1083df94</xliffext:olfilehash>
  </header>
</xliff>