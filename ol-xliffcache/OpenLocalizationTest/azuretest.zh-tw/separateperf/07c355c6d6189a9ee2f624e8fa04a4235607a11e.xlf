<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Get Started with authentication for Mobile Apps in Xamarin iOS</source>
          <target state="new">Get Started with authentication for Mobile Apps in Xamarin iOS</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Mobile Apps to authenticate users of your Xamarin iOS app through a variety of identity providers, including AAD, Google, Facebook, Twitter, and Microsoft.</source>
          <target state="new">Learn how to use Mobile Apps to authenticate users of your Xamarin iOS app through a variety of identity providers, including AAD, Google, Facebook, Twitter, and Microsoft.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Add authentication to your Xamarin.iOS app</source>
          <target state="new">Add authentication to your Xamarin.iOS app</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic shows you how to authenticate users of an App Service Mobile App from your client application.</source>
          <target state="new">This topic shows you how to authenticate users of an App Service Mobile App from your client application.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this tutorial, you add authentication to the quickstart project using an identity provider that is supported by App Service.</source>
          <target state="new">In this tutorial, you add authentication to the quickstart project using an identity provider that is supported by App Service.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>After being successfully authenticated and authorized by your Mobile App, the user ID value is displayed.</source>
          <target state="new">After being successfully authenticated and authorized by your Mobile App, the user ID value is displayed.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This tutorial is based on the Mobile App quickstart.</source>
          <target state="new">This tutorial is based on the Mobile App quickstart.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You must also first complete the tutorial [Create a Xamarin.iOS app].</source>
          <target state="new">You must also first complete the tutorial [Create a Xamarin.iOS app].</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you do not use the downloaded quick start server project, you must add the authentication extension package to your project.</source>
          <target state="new">If you do not use the downloaded quick start server project, you must add the authentication extension package to your project.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about server extension packages, see <bpt id="p1">[</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept>.</source>
          <target state="new">For more information about server extension packages, see <bpt id="p1">[</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="create-gateway"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create an App Service Gateway</source>
          <target state="new"><ph id="ph1">&lt;a name="create-gateway"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create an App Service Gateway</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="register"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Register your app for authentication and configure App Services</source>
          <target state="new"><ph id="ph1">&lt;a name="register"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Register your app for authentication and configure App Services</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="permissions"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Restrict permissions to authenticated users</source>
          <target state="new"><ph id="ph1">&lt;a name="permissions"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Restrict permissions to authenticated users</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;4.</source>
          <target state="new">&amp;nbsp;&amp;nbsp;4.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In Visual Studio or Xamarin Studio, run the client project on a device or emulator.</source>
          <target state="new">In Visual Studio or Xamarin Studio, run the client project on a device or emulator.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</source>
          <target state="new">Verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The failure is logged to the console of the debugger.</source>
          <target state="new">The failure is logged to the console of the debugger.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>So in Visual Studio, you should see the failure in the output window.</source>
          <target state="new">So in Visual Studio, you should see the failure in the output window.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;This unauthorized failure happens because the app attempts to access your Mobile App backend as an unauthenticated user.</source>
          <target state="new">&amp;nbsp;&amp;nbsp;This unauthorized failure happens because the app attempts to access your Mobile App backend as an unauthenticated user.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>TodoItem<ept id="p1">*</ept> table now requires authentication.</source>
          <target state="new">The <bpt id="p1">*</bpt>TodoItem<ept id="p1">*</ept> table now requires authentication.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Next, you will update the client app to request resources from the Mobile App backend with an authenticated user.</source>
          <target state="new">Next, you will update the client app to request resources from the Mobile App backend with an authenticated user.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="add-authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Add authentication to the app</source>
          <target state="new"><ph id="ph1">&lt;a name="add-authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Add authentication to the app</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this section, you will modify the app to display a login screen before displaying data.</source>
          <target state="new">In this section, you will modify the app to display a login screen before displaying data.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the app starts, it will not not connect to your App Service and will not display any data.</source>
          <target state="new">When the app starts, it will not not connect to your App Service and will not display any data.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>After the first time that the user performs the refresh gesture, the login screen will appear; after successful login the list of todo items will be displayed.</source>
          <target state="new">After the first time that the user performs the refresh gesture, the login screen will appear; after successful login the list of todo items will be displayed.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the client project, open the file <bpt id="p1">**</bpt>QSTodoService.cs<ept id="p1">**</ept> and add the following using statement and member declarations to QSTodoService:</source>
          <target state="new">In the client project, open the file <bpt id="p1">**</bpt>QSTodoService.cs<ept id="p1">**</ept> and add the following using statement and member declarations to QSTodoService:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`using`</ph> statment for UIKit and add a new method named <bpt id="p1">**</bpt>Authenticate<ept id="p1">**</ept> to <bpt id="p2">**</bpt>QSTodoService<ept id="p2">**</ept> with the following definition:</source>
          <target state="new">Add a <ph id="ph1">`using`</ph> statment for UIKit and add a new method named <bpt id="p1">**</bpt>Authenticate<ept id="p1">**</ept> to <bpt id="p2">**</bpt>QSTodoService<ept id="p2">**</ept> with the following definition:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you are using an identity provider other than a Facebook, change the value passed to <bpt id="p1">**</bpt>LoginAsync<ept id="p1">**</ept> above to one of the following: <bpt id="p2">_</bpt>MicrosoftAccount<ept id="p2">_</ept>, <bpt id="p3">_</bpt>Twitter<ept id="p3">_</ept>, <bpt id="p4">_</bpt>Google<ept id="p4">_</ept>, or <bpt id="p5">_</bpt>WindowsAzureActiveDirectory<ept id="p5">_</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you are using an identity provider other than a Facebook, change the value passed to <bpt id="p1">**</bpt>LoginAsync<ept id="p1">**</ept> above to one of the following: <bpt id="p2">_</bpt>MicrosoftAccount<ept id="p2">_</ept>, <bpt id="p3">_</bpt>Twitter<ept id="p3">_</ept>, <bpt id="p4">_</bpt>Google<ept id="p4">_</ept>, or <bpt id="p5">_</bpt>WindowsAzureActiveDirectory<ept id="p5">_</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt>QSTodoListViewController.cs<ept id="p1">**</ept>.</source>
          <target state="new">Open <bpt id="p1">**</bpt>QSTodoListViewController.cs<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Modify the method definition of <bpt id="p1">**</bpt>ViewDidLoad<ept id="p1">**</ept> to remove the call to <bpt id="p2">**</bpt>RefreshAsync()<ept id="p2">**</ept> near the end:</source>
          <target state="new">Modify the method definition of <bpt id="p1">**</bpt>ViewDidLoad<ept id="p1">**</ept> to remove the call to <bpt id="p2">**</bpt>RefreshAsync()<ept id="p2">**</ept> near the end:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Modify the method <bpt id="p1">**</bpt>RefreshAsync<ept id="p1">**</ept> to authenticate and display a login screen if the <bpt id="p2">**</bpt>User<ept id="p2">**</ept> property is null.</source>
          <target state="new">Modify the method <bpt id="p1">**</bpt>RefreshAsync<ept id="p1">**</ept> to authenticate and display a login screen if the <bpt id="p2">**</bpt>User<ept id="p2">**</ept> property is null.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>At the following code at the top of the method definition:</source>
          <target state="new">At the following code at the top of the method definition:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In Visual Studio or Xamarin Studio connected to your Xamarin Build Host on your Mac, run the client project targeting a device or emulator.</source>
          <target state="new">In Visual Studio or Xamarin Studio connected to your Xamarin Build Host on your Mac, run the client project targeting a device or emulator.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Verify that the app displays no data.</source>
          <target state="new">Verify that the app displays no data.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Perform the refresh gesture by pulling down the list of items, which will cause the login screen to appear.</source>
          <target state="new">Perform the refresh gesture by pulling down the list of items, which will cause the login screen to appear.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Once you have successfully entered valid credentials, the app will display the list of todo items, and you can make updates to the data.</source>
          <target state="new">Once you have successfully entered valid credentials, the app will display the list of todo items, and you can make updates to the data.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07c355c6d6189a9ee2f624e8fa04a4235607a11e</xliffext:olfilehash>
  </header>
</xliff>