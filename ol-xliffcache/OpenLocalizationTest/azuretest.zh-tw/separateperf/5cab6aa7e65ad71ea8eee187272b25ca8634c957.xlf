<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC Overview</source>
          <target state="new">Azure Automation DSC Overview</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>An Overview of Azure Automation Desired State Configuration (DSC), its terms, and known issues</source>
          <target state="new">An Overview of Azure Automation Desired State Configuration (DSC), its terms, and known issues</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC Overview</source>
          <target state="new">Azure Automation DSC Overview</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Azure Automation DSC is currently in limited preview<ept id="p1">**</ept>, and is not supported for production workloads.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Azure Automation DSC is currently in limited preview<ept id="p1">**</ept>, and is not supported for production workloads.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It is mostly cmdlet-based for now, and has a minimal graphical user interface.</source>
          <target state="new">It is mostly cmdlet-based for now, and has a minimal graphical user interface.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>By signing up for Azure Automation DSC’s preview, you acknowledge that this feature is in Preview and subject to reduced or different service terms, as set forth in the <bpt id="p1">[</bpt>service agreement<ept id="p1">](https://go.microsoft.com/fwLink/p/?LinkID=389530&amp;clcid=0x409)</ept>, and that you agree to the <bpt id="p2">[</bpt>preview supplemental terms<ept id="p2">](https://go.microsoft.com/fwLink/p/?LinkID=247638&amp;clcid=0x409)</ept>.</source>
          <target state="new">By signing up for Azure Automation DSC’s preview, you acknowledge that this feature is in Preview and subject to reduced or different service terms, as set forth in the <bpt id="p1">[</bpt>service agreement<ept id="p1">](https://go.microsoft.com/fwLink/p/?LinkID=389530&amp;clcid=0x409)</ept>, and that you agree to the <bpt id="p2">[</bpt>preview supplemental terms<ept id="p2">](https://go.microsoft.com/fwLink/p/?LinkID=247638&amp;clcid=0x409)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>While the service is currently free to use, pricing will be introduced in the future.</source>
          <target state="new">While the service is currently free to use, pricing will be introduced in the future.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>What is PowerShell DSC?</source>
          <target state="new">What is PowerShell DSC?</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Desired State Configuration (DSC) is a new management platform in Windows PowerShell that enables management of configuration for physical hosts and virtual machines using a declarative PowerShell syntax.</source>
          <target state="new">Desired State Configuration (DSC) is a new management platform in Windows PowerShell that enables management of configuration for physical hosts and virtual machines using a declarative PowerShell syntax.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DSC provides a set of Windows PowerShell language extensions, new Windows PowerShell cmdlets, and resources that you can use to declaratively specify how you want your software environment to be configured.</source>
          <target state="new">DSC provides a set of Windows PowerShell language extensions, new Windows PowerShell cmdlets, and resources that you can use to declaratively specify how you want your software environment to be configured.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It also provides a means to maintain and manage existing configurations.</source>
          <target state="new">It also provides a means to maintain and manage existing configurations.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Practical applications</source>
          <target state="new">Practical applications</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Following are some example scenarios where you can use built-in DSC resources to configure and manage a set of computers (also known as target nodes) in an automated way:</source>
          <target state="new">Following are some example scenarios where you can use built-in DSC resources to configure and manage a set of computers (also known as target nodes) in an automated way:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Enabling or disabling server roles and features</source>
          <target state="new">Enabling or disabling server roles and features</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Managing registry settings</source>
          <target state="new">Managing registry settings</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Managing files and directories</source>
          <target state="new">Managing files and directories</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Starting, stopping, and managing processes and services</source>
          <target state="new">Starting, stopping, and managing processes and services</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Managing groups and user accounts</source>
          <target state="new">Managing groups and user accounts</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Deploying new software</source>
          <target state="new">Deploying new software</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Managing environment variables</source>
          <target state="new">Managing environment variables</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Running Windows PowerShell scripts</source>
          <target state="new">Running Windows PowerShell scripts</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Fixing a configuration that has drifted away from the desired state</source>
          <target state="new">Fixing a configuration that has drifted away from the desired state</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Discovering the actual configuration state on a given node</source>
          <target state="new">Discovering the actual configuration state on a given node</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In addition, you can create custom resources to configure the state of any application or system setting.</source>
          <target state="new">In addition, you can create custom resources to configure the state of any application or system setting.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more details on PowerShell DSC, see: <bpt id="p1">[</bpt>Configuration in a DevOps world - Windows PowerShell Desired State Configuration<ept id="p1">](http://blogs.msdn.com/b/powershell/archive/2013/11/01/configuration-in-a-devops-world-windows-powershell-desired-state-configuration.aspx)</ept></source>
          <target state="new">For more details on PowerShell DSC, see: <bpt id="p1">[</bpt>Configuration in a DevOps world - Windows PowerShell Desired State Configuration<ept id="p1">](http://blogs.msdn.com/b/powershell/archive/2013/11/01/configuration-in-a-devops-world-windows-powershell-desired-state-configuration.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>What is Azure Automation DSC?</source>
          <target state="new">What is Azure Automation DSC?</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC builds on top of the fundamentals introduced in PowerShell DSC to provide an even easier configuration management experience.</source>
          <target state="new">Azure Automation DSC builds on top of the fundamentals introduced in PowerShell DSC to provide an even easier configuration management experience.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC brings the same management layer to <bpt id="p1">[</bpt>PowerShell Desired State Configuration<ept id="p1">](https://technet.microsoft.com/library/dn249912.aspx)</ept></source>
          <target state="new">Azure Automation DSC brings the same management layer to <bpt id="p1">[</bpt>PowerShell Desired State Configuration<ept id="p1">](https://technet.microsoft.com/library/dn249912.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>as Azure Automation offers for PowerShell scripting today.</source>
          <target state="new">as Azure Automation offers for PowerShell scripting today.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC allows you to <bpt id="p1">[</bpt>author and manage PowerShell Desired State Configurations<ept id="p1">](https://technet.microsoft.com/library/dn249918.aspx)</ept>, import <bpt id="p2">[</bpt>DSC Resources<ept id="p2">](https://technet.microsoft.com/library/dn282125.aspx)</ept>, and generate DSC Node Configurations (MOF documents), all in the cloud.</source>
          <target state="new">Azure Automation DSC allows you to <bpt id="p1">[</bpt>author and manage PowerShell Desired State Configurations<ept id="p1">](https://technet.microsoft.com/library/dn249918.aspx)</ept>, import <bpt id="p2">[</bpt>DSC Resources<ept id="p2">](https://technet.microsoft.com/library/dn282125.aspx)</ept>, and generate DSC Node Configurations (MOF documents), all in the cloud.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These DSC items will be placed on the Azure Automation <bpt id="p1">[</bpt>DSC pull server<ept id="p1">](https://technet.microsoft.com/library/dn249913.aspx)</ept> so that target nodes (such as physical and virtual machines) in the cloud or on-premises can pick them up, automatically conform to the desired state they specify, and report back on their compliance with the desired state to Azure Automation.</source>
          <target state="new">These DSC items will be placed on the Azure Automation <bpt id="p1">[</bpt>DSC pull server<ept id="p1">](https://technet.microsoft.com/library/dn249913.aspx)</ept> so that target nodes (such as physical and virtual machines) in the cloud or on-premises can pick them up, automatically conform to the desired state they specify, and report back on their compliance with the desired state to Azure Automation.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC Terms</source>
          <target state="new">Azure Automation DSC Terms</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="new">Configuration</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>PowerShell DSC introduced a new concept called configurations.</source>
          <target state="new">PowerShell DSC introduced a new concept called configurations.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Configurations allow you to define, via PowerShell syntax, the desired state of your environment.</source>
          <target state="new">Configurations allow you to define, via PowerShell syntax, the desired state of your environment.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To use DSC to configure your environment, first define a Windows PowerShell script block using the configuration keyword, then follow it with an identifier, then with braces ({}) to delimit the block.</source>
          <target state="new">To use DSC to configure your environment, first define a Windows PowerShell script block using the configuration keyword, then follow it with an identifier, then with braces ({}) to delimit the block.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>alt text</source>
          <target state="new">alt text</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Inside the configuration block you can define node configuration blocks that specify the desired configuration for a set of nodes (computers) in your environment that should be configured exactly the same.</source>
          <target state="new">Inside the configuration block you can define node configuration blocks that specify the desired configuration for a set of nodes (computers) in your environment that should be configured exactly the same.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In this way, a node configuration represents a “role” for one or more nodes to assume.</source>
          <target state="new">In this way, a node configuration represents a “role” for one or more nodes to assume.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A node configuration block starts with the node keyword.</source>
          <target state="new">A node configuration block starts with the node keyword.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Follow this keyword with the name of the role, which can be a variable or expression.</source>
          <target state="new">Follow this keyword with the name of the role, which can be a variable or expression.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>After the role name, use braces {} to delimit the node configuration block.</source>
          <target state="new">After the role name, use braces {} to delimit the node configuration block.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>alt text</source>
          <target state="new">alt text</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Inside the node configuration block, you can define resource blocks to configure specific DSC resources.</source>
          <target state="new">Inside the node configuration block, you can define resource blocks to configure specific DSC resources.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A resource block starts with the name of the resource, followed by the identifier you want to specify for that block, then braces {} to delimit the block.</source>
          <target state="new">A resource block starts with the name of the resource, followed by the identifier you want to specify for that block, then braces {} to delimit the block.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>alt text</source>
          <target state="new">alt text</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more detailed information about the configuration keyword, see: <bpt id="p1">[</bpt>Understanding Configuration Keyword in Desired State Configuration<ept id="p1">]</ept><bpt id="p2">(http://blogs.msdn.com/b/powershell/archive/2013/11/05/understanding-configuration-keyword-in-desired-state-configuration.aspx "</bpt>Understanding Configuration Keyword in Desired State Configuration<ept id="p2">")</ept></source>
          <target state="new">For more detailed information about the configuration keyword, see: <bpt id="p1">[</bpt>Understanding Configuration Keyword in Desired State Configuration<ept id="p1">]</ept><bpt id="p2">(http://blogs.msdn.com/b/powershell/archive/2013/11/05/understanding-configuration-keyword-in-desired-state-configuration.aspx "</bpt>Understanding Configuration Keyword in Desired State Configuration<ept id="p2">")</ept></target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Running (compiling) a DSC configuration will produce one or more DSC node configurations (MOF documents), which are what DSC nodes apply to comply with desired state.</source>
          <target state="new">Running (compiling) a DSC configuration will produce one or more DSC node configurations (MOF documents), which are what DSC nodes apply to comply with desired state.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC allows you to import, author, and compile DSC configurations in Azure Automation, similar to how runbooks can be imported, authored, and started in Azure Automation.</source>
          <target state="new">Azure Automation DSC allows you to import, author, and compile DSC configurations in Azure Automation, similar to how runbooks can be imported, authored, and started in Azure Automation.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC currently provides the following cmdlets in the <bpt id="p1">[</bpt>Azure Resource Manager PowerShell module<ept id="p1">](https://msdn.microsoft.com/library/mt244122.aspx)</ept> for management of DSC configurations:</source>
          <target state="new">Azure Automation DSC currently provides the following cmdlets in the <bpt id="p1">[</bpt>Azure Resource Manager PowerShell module<ept id="p1">](https://msdn.microsoft.com/library/mt244122.aspx)</ept> for management of DSC configurations:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> A configuration should contain only one configuration block, with the same name as the configuration, in Azure Automation DSC.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> A configuration should contain only one configuration block, with the same name as the configuration, in Azure Automation DSC.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Node Configuration</source>
          <target state="new">Node Configuration</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When a DSC Configuration is compiled, one or more node configurations are produced depending on the Node blocks in the configuration.</source>
          <target state="new">When a DSC Configuration is compiled, one or more node configurations are produced depending on the Node blocks in the configuration.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A node configuration is the same as a “MOF,” or “configuration document” (if you are familiar with those PS DSC terms) and represents a “role,” such as webserver or worker, which desired state one or more nodes should assume.</source>
          <target state="new">A node configuration is the same as a “MOF,” or “configuration document” (if you are familiar with those PS DSC terms) and represents a “role,” such as webserver or worker, which desired state one or more nodes should assume.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>PS DSC nodes become aware of node configurations they should enact via either DSC push, or pull methods.</source>
          <target state="new">PS DSC nodes become aware of node configurations they should enact via either DSC push, or pull methods.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC relies on the DSC pull method, where nodes request node configurations they should apply from Azure Automation DSC pull server.</source>
          <target state="new">Azure Automation DSC relies on the DSC pull method, where nodes request node configurations they should apply from Azure Automation DSC pull server.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Because the nodes make the request to Azure Automation DSC, nodes can be behind firewalls, have all inbound ports closed, etc. They only need outbound access to the Internet.</source>
          <target state="new">Because the nodes make the request to Azure Automation DSC, nodes can be behind firewalls, have all inbound ports closed, etc. They only need outbound access to the Internet.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC currently provides the following cmdlets in the <bpt id="p1">[</bpt>Azure Resource Manager PowerShell module<ept id="p1">](https://msdn.microsoft.com/library/mt244122.aspx)</ept> for management of DSC node configurations: <ph id="ph1">`Get-AzureAutomationDscNodeConfiguration`</ph></source>
          <target state="new">Azure Automation DSC currently provides the following cmdlets in the <bpt id="p1">[</bpt>Azure Resource Manager PowerShell module<ept id="p1">](https://msdn.microsoft.com/library/mt244122.aspx)</ept> for management of DSC node configurations: <ph id="ph1">`Get-AzureAutomationDscNodeConfiguration`</ph></target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Node</source>
          <target state="new">Node</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A DSC node is any machine that has its configuration managed by DSC.</source>
          <target state="new">A DSC node is any machine that has its configuration managed by DSC.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This could be an Azure VM or an on-premises VM / physical host.</source>
          <target state="new">This could be an Azure VM or an on-premises VM / physical host.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Nodes enact node configurations to become and maintain compliance with the desired state they define, and also can report back to a reporting server on their configuration status and compliance.</source>
          <target state="new">Nodes enact node configurations to become and maintain compliance with the desired state they define, and also can report back to a reporting server on their configuration status and compliance.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC makes onboarding of nodes for management by Azure Automation DSC easy, and allows changing of the node configuration assigned to each node server-side, so next time a node checks the server for instructions it will assume a different role and change how it is configured to match.</source>
          <target state="new">Azure Automation DSC makes onboarding of nodes for management by Azure Automation DSC easy, and allows changing of the node configuration assigned to each node server-side, so next time a node checks the server for instructions it will assume a different role and change how it is configured to match.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Nodes also report their status and configuration compliance to Azure Automation DSC.</source>
          <target state="new">Nodes also report their status and configuration compliance to Azure Automation DSC.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC currently provides the following cmdlets in the <bpt id="p1">[</bpt>Azure Resource Manager PowerShell module<ept id="p1">](https://msdn.microsoft.com/library/mt244122.aspx)</ept> for management of DSC nodes:</source>
          <target state="new">Azure Automation DSC currently provides the following cmdlets in the <bpt id="p1">[</bpt>Azure Resource Manager PowerShell module<ept id="p1">](https://msdn.microsoft.com/library/mt244122.aspx)</ept> for management of DSC nodes:</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Register-AzureAutomationDscNode`</ph> (used to onboard Azure v2 VMs as nodes)</source>
          <target state="new"><ph id="ph1">`Register-AzureAutomationDscNode`</ph> (used to onboard Azure v2 VMs as nodes)</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Get-AzureAutomationDscOnboardingMetaconfig`</ph> (used to onboard Nodes)</source>
          <target state="new"><ph id="ph1">`Get-AzureAutomationDscOnboardingMetaconfig`</ph> (used to onboard Nodes)</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Set-AzureAutomationDscNode`</ph>  (used to set/update Node to Node Configuration mappings)</source>
          <target state="new"><ph id="ph1">`Set-AzureAutomationDscNode`</ph>  (used to set/update Node to Node Configuration mappings)</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Get-AzureAutomationRegistrationInfo`</ph> cmdlet can be used to get the registration URL and key needed to onboard Azure classic VMs to an Azure Automation account, either via the Azure Automation DSC VM extension in the Azure portal, or via PowerShell.</source>
          <target state="new">The <ph id="ph1">`Get-AzureAutomationRegistrationInfo`</ph> cmdlet can be used to get the registration URL and key needed to onboard Azure classic VMs to an Azure Automation account, either via the Azure Automation DSC VM extension in the Azure portal, or via PowerShell.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC VM extension:</source>
          <target state="new">Azure Automation DSC VM extension:</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>alt text</source>
          <target state="new">alt text</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PowerShell:</source>
          <target state="new">PowerShell:</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Resource</source>
          <target state="new">Resource</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>DSC resources are building blocks that you can use to define a Windows PowerShell Desired State Configuration (DSC) configuration.</source>
          <target state="new">DSC resources are building blocks that you can use to define a Windows PowerShell Desired State Configuration (DSC) configuration.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>DSC comes with a set of built-in functionality for configuring resources such as files and folders, server features and roles, registry settings, environment variables, and services and processes.</source>
          <target state="new">DSC comes with a set of built-in functionality for configuring resources such as files and folders, server features and roles, registry settings, environment variables, and services and processes.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To learn about the full list of built-in DSC resources and how to use them, see <bpt id="p1">[</bpt>Built-In Windows PowerShell Desired State Configuration Resources<ept id="p1">](https://technet.microsoft.com/library/dn249921.aspx)</ept>.</source>
          <target state="new">To learn about the full list of built-in DSC resources and how to use them, see <bpt id="p1">[</bpt>Built-In Windows PowerShell Desired State Configuration Resources<ept id="p1">](https://technet.microsoft.com/library/dn249921.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>DSC resources can also be imported as part of PowerShell Modules to extend the set of built-in DSC resources.</source>
          <target state="new">DSC resources can also be imported as part of PowerShell Modules to extend the set of built-in DSC resources.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Non-default resources will be pulled down by DSC nodes from the DSC pull server, if a node configuration the node is meant to enact contains references to those resources.</source>
          <target state="new">Non-default resources will be pulled down by DSC nodes from the DSC pull server, if a node configuration the node is meant to enact contains references to those resources.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To learn how to create custom resources, see <bpt id="p1">[</bpt>Build Custom Windows PowerShell Desired State Configuration Resources<ept id="p1">](https://technet.microsoft.com/library/dn249927.aspx)</ept>.</source>
          <target state="new">To learn how to create custom resources, see <bpt id="p1">[</bpt>Build Custom Windows PowerShell Desired State Configuration Resources<ept id="p1">](https://technet.microsoft.com/library/dn249927.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC ships with all the same built-in DSC resources as does PS DSC.</source>
          <target state="new">Azure Automation DSC ships with all the same built-in DSC resources as does PS DSC.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Additional resources can be added to Azure Automation DSC by importing PowerShell modules containing the resources into Azure Automation.</source>
          <target state="new">Additional resources can be added to Azure Automation DSC by importing PowerShell modules containing the resources into Azure Automation.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC currently provides the following cmdlets in the <bpt id="p1">[</bpt>Azure Resource Manager PowerShell module<ept id="p1">](https://msdn.microsoft.com/library/mt244122.aspx)</ept> for management of PowerShell modules:</source>
          <target state="new">Azure Automation DSC currently provides the following cmdlets in the <bpt id="p1">[</bpt>Azure Resource Manager PowerShell module<ept id="p1">](https://msdn.microsoft.com/library/mt244122.aspx)</ept> for management of PowerShell modules:</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Compilation Job</source>
          <target state="new">Compilation Job</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A compilation job in Azure Automation DSC is an instance of compilation of a configuration, to create one or more node configurations.</source>
          <target state="new">A compilation job in Azure Automation DSC is an instance of compilation of a configuration, to create one or more node configurations.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>They are similar to Azure Automation runbook jobs, except that they do not actually perform any task except to create node configurations.</source>
          <target state="new">They are similar to Azure Automation runbook jobs, except that they do not actually perform any task except to create node configurations.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Any node configurations created by a compilation job are automatically placed on the Azure Automation DSC pull server, and overwrite previous versions of node Configurations, if they existed for this Configuration.</source>
          <target state="new">Any node configurations created by a compilation job are automatically placed on the Azure Automation DSC pull server, and overwrite previous versions of node Configurations, if they existed for this Configuration.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The name of a node configuration produced by a compilation job takes the form of “&lt;Configuration-name&gt;.</source>
          <target state="new">The name of a node configuration produced by a compilation job takes the form of “&lt;Configuration-name&gt;.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>”.</source>
          <target state="new">”.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For example, compiling the below configuration would produce a single node configuration called “MyConfiguration.webserver”</source>
          <target state="new">For example, compiling the below configuration would produce a single node configuration called “MyConfiguration.webserver”</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>alt text</source>
          <target state="new">alt text</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Just like runbooks, configurations can be published.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Just like runbooks, configurations can be published.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This is not related to putting DSC items onto the Azure Automation DSC pull server.</source>
          <target state="new">This is not related to putting DSC items onto the Azure Automation DSC pull server.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Compilation jobs cause DSC items to be placed on the Azure Automation DSC pull server.</source>
          <target state="new">Compilation jobs cause DSC items to be placed on the Azure Automation DSC pull server.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For more information on “publishing” in Azure Automation, see <bpt id="p1">[</bpt>Publishing a Runbook<ept id="p1">](https://msdn.microsoft.com/library/dn903765.aspx)</ept>.</source>
          <target state="new">For more information on “publishing” in Azure Automation, see <bpt id="p1">[</bpt>Publishing a Runbook<ept id="p1">](https://msdn.microsoft.com/library/dn903765.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC currently provides the following cmdlets in the <bpt id="p1">[</bpt>Azure Resource Manager PowerShell module<ept id="p1">](https://msdn.microsoft.com/library/mt244122.aspx)</ept> for management of compilation jobs:</source>
          <target state="new">Azure Automation DSC currently provides the following cmdlets in the <bpt id="p1">[</bpt>Azure Resource Manager PowerShell module<ept id="p1">](https://msdn.microsoft.com/library/mt244122.aspx)</ept> for management of compilation jobs:</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gotchas / Known Issues:</source>
          <target state="new">Gotchas / Known Issues:</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Since Azure Automation DSC is in preview, the first time you use this feature you will need to sign up for it using the Azure PowerShell cmdlets or Azure preview portal.</source>
          <target state="new">Since Azure Automation DSC is in preview, the first time you use this feature you will need to sign up for it using the Azure PowerShell cmdlets or Azure preview portal.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can sign up by calling the following two cmdlets:</source>
          <target state="new">You can sign up by calling the following two cmdlets:</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Azure Automation DSC registration may take up to one hour to complete before the feature will become available for use.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Azure Automation DSC registration may take up to one hour to complete before the feature will become available for use.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Azure Automation DSC does not support partial or composite DSC configurations at this time.</source>
          <target state="new">Azure Automation DSC does not support partial or composite DSC configurations at this time.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The latest version of WMF 5 must be installed for the PowerShell DSC agent for Windows to be able to communicate with Azure Automation.</source>
          <target state="new">The latest version of WMF 5 must be installed for the PowerShell DSC agent for Windows to be able to communicate with Azure Automation.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The PowerShell DSC agent for Linux does not support communicating with Azure Automation at this time.</source>
          <target state="new">The PowerShell DSC agent for Linux does not support communicating with Azure Automation at this time.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This should be updated soon.</source>
          <target state="new">This should be updated soon.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Azure Automation does not support side by side use of PowerShell modules.</source>
          <target state="new">Azure Automation does not support side by side use of PowerShell modules.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This means all configurations within an Automation account must work with the last version of a PowerShell module imported into that Automation account, and with any PowerShell DSC resources that module contains that the configuration uses.</source>
          <target state="new">This means all configurations within an Automation account must work with the last version of a PowerShell module imported into that Automation account, and with any PowerShell DSC resources that module contains that the configuration uses.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The traditional PowerShell DSC pull server expects module zips to be placed on the pull server in the format <bpt id="p1">**</bpt>ModuleName_Version.zip”<ept id="p1">**</ept>.</source>
          <target state="new">The traditional PowerShell DSC pull server expects module zips to be placed on the pull server in the format <bpt id="p1">**</bpt>ModuleName_Version.zip”<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Azure Automation expects PowerShell modules to be imported with names in the form of <bpt id="p1">**</bpt>ModuleName.zip<ept id="p1">**</ept>.</source>
          <target state="new">Azure Automation expects PowerShell modules to be imported with names in the form of <bpt id="p1">**</bpt>ModuleName.zip<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this blog post<ept id="p1">](http://azure.microsoft.com/blog/2014/12/15/authoring-integration-modules-for-azure-automation/)</ept> for more info on the Integration Module format needed to import the module into Azure Automation.</source>
          <target state="new">See <bpt id="p1">[</bpt>this blog post<ept id="p1">](http://azure.microsoft.com/blog/2014/12/15/authoring-integration-modules-for-azure-automation/)</ept> for more info on the Integration Module format needed to import the module into Azure Automation.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>PowerShell modules that specify DSC resources side by side within the module, using the “version per folder” format, will not work in Azure Automation right now.</source>
          <target state="new">PowerShell modules that specify DSC resources side by side within the module, using the “version per folder” format, will not work in Azure Automation right now.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When importing a PowerShell modules into Azure Automation using the <ph id="ph1">`New-AzureAutomationModule`</ph> or <ph id="ph2">`Set-AzureAutomationModule`</ph> cmdlets, the module import is asynchronous.</source>
          <target state="new">When importing a PowerShell modules into Azure Automation using the <ph id="ph1">`New-AzureAutomationModule`</ph> or <ph id="ph2">`Set-AzureAutomationModule`</ph> cmdlets, the module import is asynchronous.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Even if the cmdlet returns successfully, that does not mean module import has succeeded.</source>
          <target state="new">Even if the cmdlet returns successfully, that does not mean module import has succeeded.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To check if import has succeeded, use <ph id="ph1">`Get-AzureAutomationModule –Name &lt;ModuleName&gt;`</ph> (make sure to get just this module, not all modules) and check that the <bpt id="p1">**</bpt>ProvisioningState<ept id="p1">**</ept> field of the module says succeeded.</source>
          <target state="new">To check if import has succeeded, use <ph id="ph1">`Get-AzureAutomationModule –Name &lt;ModuleName&gt;`</ph> (make sure to get just this module, not all modules) and check that the <bpt id="p1">**</bpt>ProvisioningState<ept id="p1">**</ept> field of the module says succeeded.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>PowerShell modules imported into Azure Automation cannot contain .doc or .docx files.</source>
          <target state="new">PowerShell modules imported into Azure Automation cannot contain .doc or .docx files.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Some PowerShell modules containing DSC resources contain these files, for help purposes.</source>
          <target state="new">Some PowerShell modules containing DSC resources contain these files, for help purposes.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>These files should be removed from modules, prior to import into Azure Automation.</source>
          <target state="new">These files should be removed from modules, prior to import into Azure Automation.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Configurations in Azure Automation currently only support strings for parameter values.</source>
          <target state="new">Configurations in Azure Automation currently only support strings for parameter values.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If you want to pass something other than a string for the value of a parameter, pass the parameter value as a JSON string, and within the configuration use ConvertFrom-Json to convert the JSON string back to a non-string value.</source>
          <target state="new">If you want to pass something other than a string for the value of a parameter, pass the parameter value as a JSON string, and within the configuration use ConvertFrom-Json to convert the JSON string back to a non-string value.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When a node is first registered with an Azure Automation account, or the node is changed to be mapped to a different node configuration server-side, it’s status will be compliant, even if the node’s status is not actually compliant with the node configuration it is now mapped to.</source>
          <target state="new">When a node is first registered with an Azure Automation account, or the node is changed to be mapped to a different node configuration server-side, it’s status will be compliant, even if the node’s status is not actually compliant with the node configuration it is now mapped to.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>After the node sends its first report after registration or a node configuration mapping change, the node status can be trusted.</source>
          <target state="new">After the node sends its first report after registration or a node configuration mapping change, the node status can be trusted.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>When onboarding an Azure VM for management with Azure Automation DSC using <ph id="ph1">`Register-AzureAutomationDscNode`</ph>, <ph id="ph2">`Set-AzureVMExtension`</ph>, or the Azure Automation DSC VM extension in the Azure preview portal, if registration fails with <bpt id="p1">**</bpt>The computer name was not specified and the configuration directory does not have any configuration files<ept id="p1">**</ept>, this is a false alarm and the VM registration actually succeeded.</source>
          <target state="new">When onboarding an Azure VM for management with Azure Automation DSC using <ph id="ph1">`Register-AzureAutomationDscNode`</ph>, <ph id="ph2">`Set-AzureVMExtension`</ph>, or the Azure Automation DSC VM extension in the Azure preview portal, if registration fails with <bpt id="p1">**</bpt>The computer name was not specified and the configuration directory does not have any configuration files<ept id="p1">**</ept>, this is a false alarm and the VM registration actually succeeded.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Successful registration can be verified using the <ph id="ph1">`Get-AzureAutomationDscNode`</ph> cmdlet.</source>
          <target state="new">Successful registration can be verified using the <ph id="ph1">`Get-AzureAutomationDscNode`</ph> cmdlet.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>When onboarding an Azure VM for management with Azure Automation DSC using <ph id="ph1">`Register-AzureAutomationDscNode`</ph>, <ph id="ph2">`Set-AzureVMExtension`</ph>, or the Azure Automation DSC VM extension in the Azure preview portal, it could take up to an hour for the VM to show up as a DSC node in Azure Automation.</source>
          <target state="new">When onboarding an Azure VM for management with Azure Automation DSC using <ph id="ph1">`Register-AzureAutomationDscNode`</ph>, <ph id="ph2">`Set-AzureVMExtension`</ph>, or the Azure Automation DSC VM extension in the Azure preview portal, it could take up to an hour for the VM to show up as a DSC node in Azure Automation.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This is due to the installation of Windows Management Framework 5.0 on the VM by the Azure VM DSC extension, which is required to onboard the VM to Azure Automation DSC.</source>
          <target state="new">This is due to the installation of Windows Management Framework 5.0 on the VM by the Azure VM DSC extension, which is required to onboard the VM to Azure Automation DSC.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>DSC nodes onboarded to Azure Automation DSC will initially show a 'Compliant' status, even if they are not actually compliant with the DSC node configuration they are mapped to.</source>
          <target state="new">DSC nodes onboarded to Azure Automation DSC will initially show a 'Compliant' status, even if they are not actually compliant with the DSC node configuration they are mapped to.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>After a node performs its first pull and sends its first DSC report to Azure Automation DSC, the status of the node should be correct.</source>
          <target state="new">After a node performs its first pull and sends its first DSC report to Azure Automation DSC, the status of the node should be correct.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cab6aa7e65ad71ea8eee187272b25ca8634c957</xliffext:olfilehash>
  </header>
</xliff>