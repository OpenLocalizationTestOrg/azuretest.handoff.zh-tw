<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Monitor your Logic Apps</source>
          <target state="new">Monitor your Logic Apps</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to see what your Logic Apps have done.</source>
          <target state="new">How to see what your Logic Apps have done.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Monitor your Logic Apps</source>
          <target state="new">Monitor your Logic Apps</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>After you created a Logic App by following the steps described in  <bpt id="p1">[</bpt>Created a Logic App<ept id="p1">](app-service-logic-create-a-logic-app.md)</ept>, you can see the full history of its execution in the Azure portal.</source>
          <target state="new">After you created a Logic App by following the steps described in  <bpt id="p1">[</bpt>Created a Logic App<ept id="p1">](app-service-logic-create-a-logic-app.md)</ept>, you can see the full history of its execution in the Azure portal.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To view the history, click on <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> at the left side of the portal screen and select <bpt id="p2">**</bpt>Logic Apps<ept id="p2">**</ept>.</source>
          <target state="new">To view the history, click on <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> at the left side of the portal screen and select <bpt id="p2">**</bpt>Logic Apps<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A list of Logic Apps in your subscription will appear.</source>
          <target state="new">A list of Logic Apps in your subscription will appear.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A Logic App can be <bpt id="p1">**</bpt>Enabled<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Disabled<ept id="p2">**</ept>.</source>
          <target state="new">A Logic App can be <bpt id="p1">**</bpt>Enabled<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Disabled<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Enabled<ept id="p1">**</ept> Logic Apps means that triggers will run your Logic App in response to trigger events, <bpt id="p2">**</bpt>Disabled<ept id="p2">**</ept> Logic App will not run in response to events.</source>
          <target state="new"><bpt id="p1">**</bpt>Enabled<ept id="p1">**</ept> Logic Apps means that triggers will run your Logic App in response to trigger events, <bpt id="p2">**</bpt>Disabled<ept id="p2">**</ept> Logic App will not run in response to events.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When the blade for your Logic App appears, there are 2 sections that are useful:</source>
          <target state="new">When the blade for your Logic App appears, there are 2 sections that are useful:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Summary<ept id="p1">**</ept>, which tells you the latest status and is an entry point to editing your Logic App.</source>
          <target state="new"><bpt id="p1">**</bpt>Summary<ept id="p1">**</ept>, which tells you the latest status and is an entry point to editing your Logic App.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>All runs<ept id="p1">**</ept>, which shows you a list of the runs this Logic App has had.</source>
          <target state="new"><bpt id="p1">**</bpt>All runs<ept id="p1">**</ept>, which shows you a list of the runs this Logic App has had.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Runs</source>
          <target state="new">Runs</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>All Runs</source>
          <target state="new">All Runs</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This list of runs shows the <bpt id="p1">**</bpt>Start time<ept id="p1">**</ept>, the <bpt id="p2">**</bpt>Run identifier<ept id="p2">**</ept> (you can use this when calling the REST API), and the <bpt id="p3">**</bpt>Duration<ept id="p3">**</ept> of the particular runs.</source>
          <target state="new">This list of runs shows the <bpt id="p1">**</bpt>Start time<ept id="p1">**</ept>, the <bpt id="p2">**</bpt>Run identifier<ept id="p2">**</ept> (you can use this when calling the REST API), and the <bpt id="p3">**</bpt>Duration<ept id="p3">**</ept> of the particular runs.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Click any row to see details on that run.</source>
          <target state="new">Click any row to see details on that run.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The details blade shows a graph with the execution time and sequence of all of the actions in the run.</source>
          <target state="new">The details blade shows a graph with the execution time and sequence of all of the actions in the run.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Below that, is the full list of all of the actions that were executed.</source>
          <target state="new">Below that, is the full list of all of the actions that were executed.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Run and Actions</source>
          <target state="new">Run and Actions</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Finally, on a particular action, you can get all of the data that was passed to the action, and that was received from the action in the <bpt id="p1">**</bpt>Inputs<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Outputs<ept id="p2">**</ept> sections.</source>
          <target state="new">Finally, on a particular action, you can get all of the data that was passed to the action, and that was received from the action in the <bpt id="p1">**</bpt>Inputs<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Outputs<ept id="p2">**</ept> sections.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Click on the links to see the full content (you can also copy the links to download the content).</source>
          <target state="new">Click on the links to see the full content (you can also copy the links to download the content).</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Another important piece of information is the <bpt id="p1">**</bpt>Tracking ID<ept id="p1">**</ept>.</source>
          <target state="new">Another important piece of information is the <bpt id="p1">**</bpt>Tracking ID<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This identifier is passed in the headers of all action calls.</source>
          <target state="new">This identifier is passed in the headers of all action calls.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you have logging inside of your own service, we recommend logging the Tracking ID, and then you can cross-reference your own logs with this identifier.</source>
          <target state="new">If you have logging inside of your own service, we recommend logging the Tracking ID, and then you can cross-reference your own logs with this identifier.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Trigger history</source>
          <target state="new">Trigger history</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Polling triggers check an API on some interval but don't necessarily start a run, depending on the response (for example a <ph id="ph1">`200`</ph> means to run and a <ph id="ph2">`202`</ph> means to not run).</source>
          <target state="new">Polling triggers check an API on some interval but don't necessarily start a run, depending on the response (for example a <ph id="ph1">`200`</ph> means to run and a <ph id="ph2">`202`</ph> means to not run).</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The trigger history gives you a way to see all of the calls that happen but that don't run the Logic App (the <ph id="ph1">`202`</ph> responses).</source>
          <target state="new">The trigger history gives you a way to see all of the calls that happen but that don't run the Logic App (the <ph id="ph1">`202`</ph> responses).</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Trigger History</source>
          <target state="new">Trigger History</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For each trigger you can see if it <bpt id="p1">**</bpt>Fired<ept id="p1">**</ept>, if it didn't fire, or, if it had some sort of error (it <bpt id="p2">**</bpt>Failed<ept id="p2">**</ept>).</source>
          <target state="new">For each trigger you can see if it <bpt id="p1">**</bpt>Fired<ept id="p1">**</ept>, if it didn't fire, or, if it had some sort of error (it <bpt id="p2">**</bpt>Failed<ept id="p2">**</ept>).</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To inspect why your trigger failed you can click on the <bpt id="p1">**</bpt>Outputs<ept id="p1">**</ept> link.</source>
          <target state="new">To inspect why your trigger failed you can click on the <bpt id="p1">**</bpt>Outputs<ept id="p1">**</ept> link.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If it did fire, click the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> link to see what happened after it fired.</source>
          <target state="new">If it did fire, click the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> link to see what happened after it fired.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Note that for <bpt id="p1">*</bpt>Push<ept id="p1">*</ept> triggers, you will <bpt id="p2">*</bpt>not<ept id="p2">*</ept> see the times that the runs started here, instead you will see the <bpt id="p3">*</bpt>callback registration<ept id="p3">*</ept> calls - these are when the Logic app registers to get called back.</source>
          <target state="new">Note that for <bpt id="p1">*</bpt>Push<ept id="p1">*</ept> triggers, you will <bpt id="p2">*</bpt>not<ept id="p2">*</ept> see the times that the runs started here, instead you will see the <bpt id="p3">*</bpt>callback registration<ept id="p3">*</ept> calls - these are when the Logic app registers to get called back.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If your push trigger is not working, it may be a problem with the registration (which you can see on the Outputs), but otherwise you many need to investigate that API specifically.</source>
          <target state="new">If your push trigger is not working, it may be a problem with the registration (which you can see on the Outputs), but otherwise you many need to investigate that API specifically.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="new">Versioning</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>There is an additional capability that is not currently possible in the UI (coming soon) but is available via <bpt id="p1">[</bpt>the REST api<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=525617&amp;clcid=0x409)</ept>.</source>
          <target state="new">There is an additional capability that is not currently possible in the UI (coming soon) but is available via <bpt id="p1">[</bpt>the REST api<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=525617&amp;clcid=0x409)</ept>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you update the definition of a Logic App, the previous version of the definition is stored.</source>
          <target state="new">When you update the definition of a Logic App, the previous version of the definition is stored.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This is because if you already have a run in progress, that run will reference the version of the Logic App that existed when the run started.</source>
          <target state="new">This is because if you already have a run in progress, that run will reference the version of the Logic App that existed when the run started.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Definitions of runs cannot change while they are in progress.</source>
          <target state="new">Definitions of runs cannot change while they are in progress.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Version history REST api gives you access to this information.</source>
          <target state="new">The Version history REST api gives you access to this information.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9bd77405888fc6d38ac34ef2e0f7bb5391c4217</xliffext:olfilehash>
  </header>
</xliff>