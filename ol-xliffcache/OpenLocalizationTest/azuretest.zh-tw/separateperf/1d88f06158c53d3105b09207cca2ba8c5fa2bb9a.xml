{
  "nodes": [
    {
      "content": "Creating Filters with Media Services REST API",
      "pos": [
        28,
        73
      ]
    },
    {
      "content": "This topic describes how to create filters so your client can use them to stream specific sections of a stream.",
      "pos": [
        93,
        204
      ]
    },
    {
      "content": "Media Services creates dynamic manifests to achieve this selective streaming.",
      "pos": [
        205,
        282
      ]
    },
    {
      "content": "Creating Filters with Media Services REST API",
      "pos": [
        594,
        639
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        643,
        659
      ]
    },
    {
      "content": ".NET",
      "pos": [
        663,
        667
      ]
    },
    {
      "content": "REST",
      "pos": [
        715,
        719
      ]
    },
    {
      "content": "Starting with 2.11 release, Media Services enables you to define filters for your assets.",
      "pos": [
        764,
        853
      ]
    },
    {
      "content": "These filters are server side rules that will allow your customers to choose to do things like: playback only a section of a video (instead of playing the whole video), or specify only a subset of audio and video renditions that your customer's device can handle (instead of all the renditions that are associated with the asset).",
      "pos": [
        854,
        1184
      ]
    },
    {
      "content": "This filtering of your assets is achieved through <bpt id=\"p1\">**</bpt>Dynamic Manifest<ept id=\"p1\">**</ept>s that are created upon your customer's request to stream a video based on specified filter(s).",
      "pos": [
        1185,
        1350
      ]
    },
    {
      "pos": [
        1352,
        1501
      ],
      "content": "For more detailed information related to filters and Dynamic Manifest, see <bpt id=\"p1\">[</bpt>Dynamic manifests overview<ept id=\"p1\">](media-services-dynamic-manifest-overview.md)</ept>."
    },
    {
      "content": "This topic shows how to use REST APIs to create, update, and delete filters.",
      "pos": [
        1503,
        1579
      ]
    },
    {
      "content": "Types used to create filters",
      "pos": [
        1584,
        1612
      ]
    },
    {
      "content": "The following types are used when creating filters:",
      "pos": [
        1614,
        1665
      ]
    },
    {
      "content": "Filter",
      "pos": [
        1672,
        1678
      ]
    },
    {
      "content": "AssetFilter",
      "pos": [
        1738,
        1749
      ]
    },
    {
      "content": "PresentationTimeRange",
      "pos": [
        1809,
        1830
      ]
    },
    {
      "content": "FilterTrackSelect and FilterTrackPropertyCondition",
      "pos": [
        1890,
        1940
      ]
    },
    {
      "pos": [
        2001,
        2096
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> When working with the Media Services REST API, the following considerations apply:"
    },
    {
      "content": "When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests.",
      "pos": [
        2100,
        2212
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>Setup for Media Services REST API Development<ept id=\"p1\">](media-services-rest-how-to-use.md)</ept>.",
      "pos": [
        2213,
        2322
      ]
    },
    {
      "content": "After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI.",
      "pos": [
        2325,
        2455
      ]
    },
    {
      "content": "You must make subsequent calls to the new URI as described in <bpt id=\"p1\">[</bpt>Connecting to Media Services using REST API<ept id=\"p1\">](media-services-rest-connect_programmatically.md)</ept>.",
      "pos": [
        2456,
        2613
      ]
    },
    {
      "content": "Create filters",
      "pos": [
        2619,
        2633
      ]
    },
    {
      "content": "Create global Filters",
      "pos": [
        2638,
        2659
      ]
    },
    {
      "content": "To create a global Filter, use the following HTTP requests:",
      "pos": [
        2661,
        2720
      ]
    },
    {
      "content": "HTTP Request",
      "pos": [
        2728,
        2740
      ]
    },
    {
      "content": "Request Headers",
      "pos": [
        2742,
        2757
      ]
    },
    {
      "content": "Request body",
      "pos": [
        3129,
        3141
      ]
    },
    {
      "content": "HTTP Response",
      "pos": [
        3883,
        3896
      ]
    },
    {
      "content": "Create local AssetFilters",
      "pos": [
        3932,
        3957
      ]
    },
    {
      "content": "To create a local AssetFilter, use the following HTTP requests:",
      "pos": [
        3959,
        4022
      ]
    },
    {
      "content": "HTTP Request",
      "pos": [
        4030,
        4042
      ]
    },
    {
      "content": "Request Headers",
      "pos": [
        4044,
        4059
      ]
    },
    {
      "content": "Request body",
      "pos": [
        4439,
        4451
      ]
    },
    {
      "content": "HTTP Response",
      "pos": [
        5292,
        5305
      ]
    },
    {
      "content": "List filters",
      "pos": [
        5348,
        5360
      ]
    },
    {
      "pos": [
        5365,
        5410
      ],
      "content": "Get all global <bpt id=\"p1\">**</bpt>Filter<ept id=\"p1\">**</ept>s in the AMS account"
    },
    {
      "content": "To list filters, use the following HTTP requests:",
      "pos": [
        5412,
        5461
      ]
    },
    {
      "content": "HTTP Request",
      "pos": [
        5468,
        5480
      ]
    },
    {
      "pos": [
        5763,
        5808
      ],
      "content": "Get <bpt id=\"p1\">**</bpt>AssetFilter<ept id=\"p1\">**</ept>s associated with an asset"
    },
    {
      "content": "HTTP Request",
      "pos": [
        5814,
        5826
      ]
    },
    {
      "pos": [
        6236,
        6274
      ],
      "content": "Get an <bpt id=\"p1\">**</bpt>AssetFilter<ept id=\"p1\">**</ept> based on its Id"
    },
    {
      "content": "HTTP Request",
      "pos": [
        6280,
        6292
      ]
    },
    {
      "content": "Update filters",
      "pos": [
        6660,
        6674
      ]
    },
    {
      "content": "Use PATCH, PUT or MERGE to update a filter with new property values.",
      "pos": [
        6677,
        6745
      ]
    },
    {
      "content": "For more information about these operations, see <bpt id=\"p1\">[</bpt>PATCH, PUT, MERGE<ept id=\"p1\">](http://msdn.microsoft.com/library/dd541276.aspx)</ept>.",
      "pos": [
        6747,
        6865
      ]
    },
    {
      "content": "If you update a filter, it can take up to 2 minutes for streaming endpoint to refresh the rules.",
      "pos": [
        6868,
        6964
      ]
    },
    {
      "content": "If the content was served using this filter (and cached in proxies and CDN caches), updating this filter can result in player failures.",
      "pos": [
        6965,
        7100
      ]
    },
    {
      "content": "It is recommend to clear the cache after updating the filter.",
      "pos": [
        7101,
        7162
      ]
    },
    {
      "content": "If this option is not possible, consider using a different filter.",
      "pos": [
        7163,
        7229
      ]
    },
    {
      "content": "Update global Filters",
      "pos": [
        7237,
        7258
      ]
    },
    {
      "content": "To update a global filter, use the following HTTP requests:",
      "pos": [
        7260,
        7319
      ]
    },
    {
      "content": "HTTP Request",
      "pos": [
        7326,
        7338
      ]
    },
    {
      "content": "Request headers:",
      "pos": [
        7341,
        7357
      ]
    },
    {
      "content": "Request body:",
      "pos": [
        7774,
        7787
      ]
    },
    {
      "content": "Update local AssetFilters",
      "pos": [
        8262,
        8287
      ]
    },
    {
      "content": "To update a local filter, use the following HTTP requests:",
      "pos": [
        8289,
        8347
      ]
    },
    {
      "content": "HTTP Request",
      "pos": [
        8354,
        8366
      ]
    },
    {
      "content": "Request headers:",
      "pos": [
        8368,
        8384
      ]
    },
    {
      "content": "Request body:",
      "pos": [
        8851,
        8864
      ]
    },
    {
      "content": "Delete filters",
      "pos": [
        9339,
        9353
      ]
    },
    {
      "content": "Delete global Filters",
      "pos": [
        9359,
        9380
      ]
    },
    {
      "content": "To delete a global Filter, use the following HTTP requests:",
      "pos": [
        9382,
        9441
      ]
    },
    {
      "content": "HTTP Request",
      "pos": [
        9451,
        9463
      ]
    },
    {
      "content": "Delete local AssetFilters",
      "pos": [
        9756,
        9781
      ]
    },
    {
      "content": "To delete a local AssetFilter, use the following HTTP requests:",
      "pos": [
        9783,
        9846
      ]
    },
    {
      "content": "HTTP Request",
      "pos": [
        9852,
        9864
      ]
    },
    {
      "content": "Build streaming URLs that use filters",
      "pos": [
        10227,
        10264
      ]
    },
    {
      "pos": [
        10266,
        10416
      ],
      "content": "For information on how to publish and deliver your assets, see <bpt id=\"p1\">[</bpt>Delivering Content to Customers Overview<ept id=\"p1\">](media-services-deliver-content-overview.md)</ept>."
    },
    {
      "content": "The following examples show how to add filters to your streaming URLs.",
      "pos": [
        10419,
        10489
      ]
    },
    {
      "content": "MPEG DASH",
      "pos": [
        10493,
        10502
      ]
    },
    {
      "content": "Apple HTTP Live Streaming (HLS) V4",
      "pos": [
        10683,
        10717
      ]
    },
    {
      "content": "Apple HTTP Live Streaming (HLS) V3",
      "pos": [
        10894,
        10928
      ]
    },
    {
      "content": "Smooth Streaming",
      "pos": [
        11108,
        11124
      ]
    },
    {
      "content": "HDS",
      "pos": [
        11284,
        11287
      ]
    },
    {
      "content": "See Also",
      "pos": [
        11464,
        11472
      ]
    },
    {
      "content": "Dynamic manifests overview",
      "pos": [
        11476,
        11502
      ]
    },
    {
      "content": "test",
      "pos": [
        11555,
        11559
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Creating Filters with Media Services REST API\" \n    description=\"This topic describes how to create filters so your client can use them to stream specific sections of a stream. Media Services creates dynamic manifests to achieve this selective streaming.\" \n    services=\"media-services\" \n    documentationCenter=\"\" \n    authors=\"Juliako\" \n    manager=\"dwrede\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"media-services\" \n    ms.workload=\"media\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"ne\" \n    ms.topic=\"article\" \n    ms.date=\"08/24/2015\" \n    ms.author=\"juliako\"/>\n\n#Creating Filters with Media Services REST API\n\n> [AZURE.SELECTOR]\n- [.NET](media-services-dotnet-dynamic-manifest.md)\n- [REST](media-services-rest-dynamic-manifest.md)\n\n\nStarting with 2.11 release, Media Services enables you to define filters for your assets. These filters are server side rules that will allow your customers to choose to do things like: playback only a section of a video (instead of playing the whole video), or specify only a subset of audio and video renditions that your customer's device can handle (instead of all the renditions that are associated with the asset). This filtering of your assets is achieved through **Dynamic Manifest**s that are created upon your customer's request to stream a video based on specified filter(s).\n\nFor more detailed information related to filters and Dynamic Manifest, see [Dynamic manifests overview](media-services-dynamic-manifest-overview.md).\n\nThis topic shows how to use REST APIs to create, update, and delete filters. \n\n##Types used to create filters\n\nThe following types are used when creating filters:  \n\n- [Filter](http://msdn.microsoft.com/library/azure/mt149056.aspx)\n- [AssetFilter](http://msdn.microsoft.com/library/azure/mt149053.aspx)\n- [PresentationTimeRange](http://msdn.microsoft.com/library/azure/mt149052.aspx)\n- [FilterTrackSelect and FilterTrackPropertyCondition](http://msdn.microsoft.com/library/azure/mt149055.aspx)\n\n\n\n>[AZURE.NOTE] When working with the Media Services REST API, the following considerations apply:\n>\n>When accessing entities in Media Services, you must set specific header fields and values in your HTTP requests. For more information, see [Setup for Media Services REST API Development](media-services-rest-how-to-use.md).\n\n>After successfully connecting to https://media.windows.net, you will receive a 301 redirect specifying another Media Services URI. You must make subsequent calls to the new URI as described in [Connecting to Media Services using REST API](media-services-rest-connect_programmatically.md). \n\n\n##Create filters\n\n###Create global Filters\n\nTo create a global Filter, use the following HTTP requests:  \n\n####HTTP Request\n\nRequest Headers\n\n    POST https://media.windows.net/API/Filters HTTP/1.1 \n    DataServiceVersion:3.0 \n    MaxDataServiceVersion: 3.0 \n    Content-Type: application/json \n    Accept: application/json \n    Accept-Charset: UTF-8 \n    Authorization: Bearer <token value> \n    x-ms-version: 2.11 \n    x-ms-client-request-id: 00000000-0000-0000-0000-000000000000 \n    Host:media.windows.net \n\nRequest body \n\n    {  \n       \"Name\":\"GlobalFilter\",\n       \"PresentationTimeRange\":{  \n          \"StartTimestamp\":\"0\",\n          \"EndTimestamp\":\"9223372036854775807\",\n          \"PresentationWindowDuration\":\"12000000000\",\n          \"LiveBackoffDuration\":\"0\",\n          \"Timescale\":\"10000000\"\n       },\n       \"Tracks\":[  \n          {  \n             \"PropertyConditions\":\n                  [  \n                {  \n                   \"Property\":\"Type\",\n                   \"Value\":\"audio\",\n                   \"Operator\":\"Equal\"\n                },\n                {  \n                   \"Property\":\"Bitrate\",\n                   \"Value\":\"0-2147483647\",\n                   \"Operator\":\"Equal\"\n                }\n             ]\n          }\n       ]\n    }\n\n\n\n\n####HTTP Response\n    \n    HTTP/1.1 201 Created \n\n###Create local AssetFilters\n\nTo create a local AssetFilter, use the following HTTP requests:  \n\n####HTTP Request\n\nRequest Headers\n\n    POST https://media.windows.net/API/AssetFilters HTTP/1.1 \n    DataServiceVersion: 3.0 \n    MaxDataServiceVersion: 3.0 \n    Content-Type: application/json \n    Accept: application/json \n    Accept-Charset: UTF-8 \n    Authorization: Bearer <token value> \n    x-ms-version: 2.11 \n    x-ms-client-request-id: 00000000-0000-0000-0000-000000000000 \n    Host: media.windows.net  \n\nRequest body \n\n    {   \n       \"Name\":\"AssetFilter\", \n       \"ParentAssetId\":\"nb:cid:UUID:536e555d-1500-80c3-92dc-f1e4fdc6c592\", \n       \"PresentationTimeRange\":{   \n          \"StartTimestamp\":\"0\", \n          \"EndTimestamp\":\"9223372036854775807\", \n          \"PresentationWindowDuration\":\"12000000000\", \n          \"LiveBackoffDuration\":\"0\", \n          \"Timescale\":\"10000000\" \n       }, \n       \"Tracks\":[   \n          {   \n             \"PropertyConditions\": \n                  [   \n                {   \n                   \"Property\":\"Type\", \n                   \"Value\":\"audio\", \n                   \"Operator\":\"Equal\" \n                }, \n                {   \n                   \"Property\":\"Bitrate\", \n                   \"Value\":\"0-2147483647\", \n                   \"Operator\":\"Equal\" \n                } \n             ] \n          } \n       ] \n    } \n\n####HTTP Response \n\n    HTTP/1.1 201 Created \n    . . . \n\n##List filters\n\n###Get all global **Filter**s in the AMS account\n\nTo list filters, use the following HTTP requests: \n\n####HTTP Request\n     \n    GET https://media.windows.net/API/Filters HTTP/1.1 \n    DataServiceVersion:3.0 \n    MaxDataServiceVersion: 3.0 \n    Accept: application/json \n    Accept-Charset: UTF-8 \n    Authorization: Bearer <token value> \n    x-ms-version: 2.11 \n    Host: media.windows.net \n    \n### Get **AssetFilter**s associated with an asset\n\n####HTTP Request\n\n    GET https://media.windows.net/API/Assets('nb%3Acid%3AUUID%3A536e555d-1500-80c3-92dc-f1e4fdc6c592')/AssetFilters HTTP/1.1 \n    DataServiceVersion: 3.0 \n    MaxDataServiceVersion: 3.0 \n    Accept: application/json \n    Accept-Charset: UTF-8 \n    Authorization: Bearer <token value> \n    x-ms-version: 2.11 \n    x-ms-client-request-id: 00000000-0000-0000-0000-000000000000 \n    Host: media.windows.net \n\n###Get an **AssetFilter** based on its Id\n\n####HTTP Request\n\n    GET https://media.windows.net/API/AssetFilters('nb%3Acid%3AUUID%3A536e555d-1500-80c3-92dc-f1e4fdc6c592__%23%23%23__TestFilter') HTTP/1.1 \n    DataServiceVersion: 3.0 \n    MaxDataServiceVersion: 3.0 \n    Accept: application/json \n    Accept-Charset: UTF-8 \n    Authorization: Bearer <token value> \n    x-ms-version: 2.11 \n    x-ms-client-request-id: 00000000\n\n\n##Update filters\n \nUse PATCH, PUT or MERGE to update a filter with new property values.  For more information about these operations, see [PATCH, PUT, MERGE](http://msdn.microsoft.com/library/dd541276.aspx).\n \nIf you update a filter, it can take up to 2 minutes for streaming endpoint to refresh the rules. If the content was served using this filter (and cached in proxies and CDN caches), updating this filter can result in player failures. It is recommend to clear the cache after updating the filter. If this option is not possible, consider using a different filter.  \n \n###Update global Filters\n\nTo update a global filter, use the following HTTP requests: \n\n####HTTP Request\n \nRequest headers: \n\n    MERGE https://media.windows.net/API/Filters('filterName') HTTP/1.1 \n    DataServiceVersion:3.0 \n    MaxDataServiceVersion: 3.0 \n    Content-Type: application/json \n    Accept: application/json \n    Accept-Charset: UTF-8 \n    Authorization: Bearer <token value> \n    x-ms-version: 2.11 \n    x-ms-client-request-id: 00000000-0000-0000-0000-000000000000 \n    Host: media.windows.net \n    Content-Length: 384\n    \nRequest body: \n    \n    { \n       \"Tracks\":[   \n          {   \n             \"PropertyConditions\": \n             [   \n                {   \n                   \"Property\":\"Type\", \n                   \"Value\":\"audio\", \n                   \"Operator\":\"Equal\" \n                }, \n                {   \n                   \"Property\":\"Bitrate\", \n                   \"Value\":\"0-2147483647\", \n                   \"Operator\":\"Equal\" \n                } \n             ] \n          } \n       ] \n    } \n\n###Update local AssetFilters\n\nTo update a local filter, use the following HTTP requests: \n\n####HTTP Request\n\nRequest headers: \n\n    MERGE https://media.windows.net/API/AssetFilters('nb%3Acid%3AUUID%3A536e555d-1500-80c3-92dc-f1e4fdc6c592__%23%23%23__TestFilter')  HTTP/1.1 \n    DataServiceVersion: 3.0 \n    MaxDataServiceVersion: 3.0 \n    Content-Type: application/json \n    Accept: application/json \n    Accept-Charset: UTF-8 \n    Authorization: Bearer <token value> \n    x-ms-version: 2.11 \n    x-ms-client-request-id: 00000000-0000-0000-0000-000000000000 \n    Host: media.windows.net \n    \nRequest body: \n    \n    { \n       \"Tracks\":[   \n          {   \n             \"PropertyConditions\": \n             [   \n                {   \n                   \"Property\":\"Type\", \n                   \"Value\":\"audio\", \n                   \"Operator\":\"Equal\" \n                }, \n                {   \n                   \"Property\":\"Bitrate\", \n                   \"Value\":\"0-2147483647\", \n                   \"Operator\":\"Equal\" \n                } \n             ] \n          } \n       ] \n    } \n\n\n##Delete filters\n\n\n###Delete global Filters\n\nTo delete a global Filter, use the following HTTP requests:\n    \n####HTTP Request\n\n    DELETE https://media.windows.net/api/Filters('GlobalFilter') HTTP/1.1 \n    DataServiceVersion:3.0 \n    MaxDataServiceVersion: 3.0 \n    Accept: application/json \n    Accept-Charset: UTF-8 \n    Authorization: Bearer <token value> \n    x-ms-version: 2.11 \n    Host: media.windows.net \n\n\n###Delete local AssetFilters\n\nTo delete a local AssetFilter, use the following HTTP requests:\n\n####HTTP Request\n\n    DELETE https://media.windows.net/API/AssetFilters('nb%3Acid%3AUUID%3A536e555d-1500-80c3-92dc-f1e4fdc6c592__%23%23%23__LocalFilter') HTTP/1.1 \n    DataServiceVersion: 3.0 \n    MaxDataServiceVersion: 3.0 \n    Accept: application/json \n    Accept-Charset: UTF-8 \n    Authorization: Bearer <token value> \n    x-ms-version: 2.11 \n    Host: media.windows.net \n\n##Build streaming URLs that use filters\n\nFor information on how to publish and deliver your assets, see [Delivering Content to Customers Overview](media-services-deliver-content-overview.md).\n\n\nThe following examples show how to add filters to your streaming URLs.\n\n**MPEG DASH** \n\n    http://testendpoint-testaccount.streaming.mediaservices.windows.net/fecebb23-46f6-490d-8b70-203e86b0df58/BigBuckBunny.ism/Manifest(format=mpd-time-csf, filter=MyFilter)\n\n**Apple HTTP Live Streaming (HLS) V4**\n\n    http://testendpoint-testaccount.streaming.mediaservices.windows.net/fecebb23-46f6-490d-8b70-203e86b0df58/BigBuckBunny.ism/Manifest(format=m3u8-aapl, filter=MyFilter)\n\n**Apple HTTP Live Streaming (HLS) V3**\n\n    http://testendpoint-testaccount.streaming.mediaservices.windows.net/fecebb23-46f6-490d-8b70-203e86b0df58/BigBuckBunny.ism/Manifest(format=m3u8-aapl-v3, filter=MyFilter)\n\n**Smooth Streaming**\n\n    http://testendpoint-testaccount.streaming.mediaservices.windows.net/fecebb23-46f6-490d-8b70-203e86b0df58/BigBuckBunny.ism/Manifest(filter=MyFilter)\n\n\n**HDS**\n\n    http://testendpoint-testaccount.streaming.mediaservices.windows.net/fecebb23-46f6-490d-8b70-203e86b0df58/BigBuckBunny.ism/Manifest(format=f4m-f4f, filter=MyFilter)\n\n\n\n##See Also \n\n[Dynamic manifests overview](media-services-dynamic-manifest-overview.md)\n \n\n \n\ntest\n"
}