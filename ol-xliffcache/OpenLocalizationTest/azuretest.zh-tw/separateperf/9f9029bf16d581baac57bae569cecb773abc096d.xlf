<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use SSH to connect to Linux virtual machines in Azure</source>
          <target state="new">Use SSH to connect to Linux virtual machines in Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to generate and use SSH keys with a Linux virtual machine on Azure.</source>
          <target state="new">Learn how to generate and use SSH keys with a Linux virtual machine on Azure.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to Use SSH with Linux on Azure</source>
          <target state="new">How to Use SSH with Linux on Azure</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The current version of the Azure Management Portal only accepts SSH public keys that are encapsulated in an X509 certificate.</source>
          <target state="new">The current version of the Azure Management Portal only accepts SSH public keys that are encapsulated in an X509 certificate.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Follow the steps below to generate and use SSH keys with Azure.</source>
          <target state="new">Follow the steps below to generate and use SSH keys with Azure.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Generate Azure Compatible Keys in Linux</source>
          <target state="new">Generate Azure Compatible Keys in Linux</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Install the <ph id="ph1">`openssl`</ph> utility if needed:</source>
          <target state="new">Install the <ph id="ph1">`openssl`</ph> utility if needed:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>CentOS / Oracle Linux</source>
          <target state="new">CentOS / Oracle Linux</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Ubuntu</source>
          <target state="new">Ubuntu</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>SLES &amp; openSUSE</source>
          <target state="new">SLES &amp; openSUSE</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`openssl`</ph> to generate an X509 certificate with a 2048-bit RSA keypair.</source>
          <target state="new">Use <ph id="ph1">`openssl`</ph> to generate an X509 certificate with a 2048-bit RSA keypair.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Please answer the few questions that the <ph id="ph1">`openssl`</ph> prompts for (or you may leave them blank).</source>
          <target state="new">Please answer the few questions that the <ph id="ph1">`openssl`</ph> prompts for (or you may leave them blank).</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The content in these fields is not used by the platform:</source>
          <target state="new">The content in these fields is not used by the platform:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Change the permissions on the private key to secure it.</source>
          <target state="new">Change the permissions on the private key to secure it.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Upload the <ph id="ph1">`myCert.pem`</ph> while creating the Linux virtual machine.</source>
          <target state="new">Upload the <ph id="ph1">`myCert.pem`</ph> while creating the Linux virtual machine.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The provisioning process will automatically install the public key in this certificate into the <ph id="ph1">`authorized_keys`</ph> file for the specified user in the virtual machine.</source>
          <target state="new">The provisioning process will automatically install the public key in this certificate into the <ph id="ph1">`authorized_keys`</ph> file for the specified user in the virtual machine.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you are going to use the API directly, and not use the Management Portal, convert the <ph id="ph1">`myCert.pem`</ph> to <ph id="ph2">`myCert.cer`</ph> (DER encoded X509 certificate) using the following command:</source>
          <target state="new">If you are going to use the API directly, and not use the Management Portal, convert the <ph id="ph1">`myCert.pem`</ph> to <ph id="ph2">`myCert.cer`</ph> (DER encoded X509 certificate) using the following command:</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Generate a Key from an Existing OpenSSH Compatible Key</source>
          <target state="new">Generate a Key from an Existing OpenSSH Compatible Key</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The previous example describes how to create a new key for use with Azure.</source>
          <target state="new">The previous example describes how to create a new key for use with Azure.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In some cases you may already have an existing OpenSSH compatible public &amp; private key pair and wish to use the same keys with Azure.</source>
          <target state="new">In some cases you may already have an existing OpenSSH compatible public &amp; private key pair and wish to use the same keys with Azure.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>OpenSSH private keys are directly readable by the <ph id="ph1">`openssl`</ph> utility.</source>
          <target state="new">OpenSSH private keys are directly readable by the <ph id="ph1">`openssl`</ph> utility.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command will take an existing SSH private key (id_rsa in the example below) and create the <ph id="ph1">`.pem`</ph> public key that is needed for Azure:</source>
          <target state="new">The following command will take an existing SSH private key (id_rsa in the example below) and create the <ph id="ph1">`.pem`</ph> public key that is needed for Azure:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>myCert.pem<ept id="p1">**</ept> file is the public key that may then be used to provision a Linux virtual machine on Azure.</source>
          <target state="new">The <bpt id="p1">**</bpt>myCert.pem<ept id="p1">**</ept> file is the public key that may then be used to provision a Linux virtual machine on Azure.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>During provisioning the <ph id="ph1">`.pem`</ph> file will be translated into an <ph id="ph2">`openssh`</ph> compatible public key and placed in <ph id="ph3">`~/.ssh/authorized_keys`</ph>.</source>
          <target state="new">During provisioning the <ph id="ph1">`.pem`</ph> file will be translated into an <ph id="ph2">`openssh`</ph> compatible public key and placed in <ph id="ph3">`~/.ssh/authorized_keys`</ph>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Connect to an Azure Virtual Machine from Linux</source>
          <target state="new">Connect to an Azure Virtual Machine from Linux</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In some cases the SSH endpoint for a Linux virtual machine may be configured for a port other then the default port 22.</source>
          <target state="new">In some cases the SSH endpoint for a Linux virtual machine may be configured for a port other then the default port 22.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can find the correct port number on the Dashboard for the VM in the Management Portal (under "SSH Details").</source>
          <target state="new">You can find the correct port number on the Dashboard for the VM in the Management Portal (under "SSH Details").</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Connect to the Linux virtual machine using <ph id="ph1">`ssh`</ph>.</source>
          <target state="new">Connect to the Linux virtual machine using <ph id="ph1">`ssh`</ph>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You will be prompted to accept the fingerprint of the host's public key the first time you log in.</source>
          <target state="new">You will be prompted to accept the fingerprint of the host's public key the first time you log in.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>(Optional) You may copy <ph id="ph1">`myPrivateKey.key`</ph> to <ph id="ph2">`~/.ssh/id_rsa`</ph> so that your OpenSSH client can automatically pick this up without the use of the <ph id="ph3">`-i`</ph> option.</source>
          <target state="new">(Optional) You may copy <ph id="ph1">`myPrivateKey.key`</ph> to <ph id="ph2">`~/.ssh/id_rsa`</ph> so that your OpenSSH client can automatically pick this up without the use of the <ph id="ph3">`-i`</ph> option.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Get OpenSSL on Windows</source>
          <target state="new">Get OpenSSL on Windows</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>There are a number of utilities that include a <ph id="ph1">`openssl`</ph> for Windows.</source>
          <target state="new">There are a number of utilities that include a <ph id="ph1">`openssl`</ph> for Windows.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A few examples are listed below -</source>
          <target state="new">A few examples are listed below -</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Use Msysgit</source>
          <target state="new">Use Msysgit</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Download and install msysgit from the following location: <bpt id="p1">[</bpt>http://msysgit.github.com/<ept id="p1">](http://msysgit.github.com/)</ept></source>
          <target state="new">Download and install msysgit from the following location: <bpt id="p1">[</bpt>http://msysgit.github.com/<ept id="p1">](http://msysgit.github.com/)</ept></target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Run <ph id="ph1">`msys`</ph> from the installed directory (example: c:\msysgit\msys.exe)</source>
          <target state="new">Run <ph id="ph1">`msys`</ph> from the installed directory (example: c:\msysgit\msys.exe)</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Change to the <ph id="ph1">`bin`</ph> directory by typing in <ph id="ph2">`cd bin`</ph></source>
          <target state="new">Change to the <ph id="ph1">`bin`</ph> directory by typing in <ph id="ph2">`cd bin`</ph></target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Use GitHub for Windows</source>
          <target state="new">Use GitHub for Windows</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Download and install GitHub for Windows from the following location: <bpt id="p1">[</bpt>http://windows.github.com/<ept id="p1">](http://windows.github.com/)</ept></source>
          <target state="new">Download and install GitHub for Windows from the following location: <bpt id="p1">[</bpt>http://windows.github.com/<ept id="p1">](http://windows.github.com/)</ept></target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Run Git Shell from the Start Menu &gt; All Programs &gt; GitHub, Inc</source>
          <target state="new">Run Git Shell from the Start Menu &gt; All Programs &gt; GitHub, Inc</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> You may encounter the following error when running the <ph id="ph1">`openssl`</ph> commands above:</source>
          <target state="new"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> You may encounter the following error when running the <ph id="ph1">`openssl`</ph> commands above:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The easiest way to resolve this is to set the <ph id="ph1">`OPENSSL_CONF`</ph> environment variable.</source>
          <target state="new">The easiest way to resolve this is to set the <ph id="ph1">`OPENSSL_CONF`</ph> environment variable.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The process for setting this variable will vary depending on the shell that you have configured in Github:</source>
          <target state="new">The process for setting this variable will vary depending on the shell that you have configured in Github:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Powershell:</source>
          <target state="new">Powershell:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CMD:</source>
          <target state="new">CMD:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Git Bash:</source>
          <target state="new">Git Bash:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Use Cygwin</source>
          <target state="new">Use Cygwin</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Download and install Cygwin from the following location: <bpt id="p1">[</bpt>http://cygwin.com/<ept id="p1">](http://cygwin.com/)</ept></source>
          <target state="new">Download and install Cygwin from the following location: <bpt id="p1">[</bpt>http://cygwin.com/<ept id="p1">](http://cygwin.com/)</ept></target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Ensure that the OpenSSL package and all of its dependencies are installed.</source>
          <target state="new">Ensure that the OpenSSL package and all of its dependencies are installed.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Run <ph id="ph1">`cygwin`</ph></source>
          <target state="new">Run <ph id="ph1">`cygwin`</ph></target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Create a Private Key on Windows</source>
          <target state="new">Create a Private Key on Windows</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Follow one of the set of instructions above to be able to run <ph id="ph1">`openssl.exe`</ph></source>
          <target state="new">Follow one of the set of instructions above to be able to run <ph id="ph1">`openssl.exe`</ph></target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Type in the following command:</source>
          <target state="new">Type in the following command:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Your screen should look like the following:</source>
          <target state="new">Your screen should look like the following:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>linuxwelcomegit</source>
          <target state="new">linuxwelcomegit</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Answer the questions that are asked.</source>
          <target state="new">Answer the questions that are asked.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It would have created two files: <ph id="ph1">`myPrivateKey.key`</ph> and <ph id="ph2">`myCert.pem`</ph>.</source>
          <target state="new">It would have created two files: <ph id="ph1">`myPrivateKey.key`</ph> and <ph id="ph2">`myCert.pem`</ph>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If you are going to use the API directly, and not use the Management Portal, convert the <ph id="ph1">`myCert.pem`</ph> to <ph id="ph2">`myCert.cer`</ph> (DER encoded X509 certificate) using the following command:</source>
          <target state="new">If you are going to use the API directly, and not use the Management Portal, convert the <ph id="ph1">`myCert.pem`</ph> to <ph id="ph2">`myCert.cer`</ph> (DER encoded X509 certificate) using the following command:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Create a PPK for Putty</source>
          <target state="new">Create a PPK for Putty</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Download and install Puttygen from the following location: <bpt id="p1">[</bpt>http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html<ept id="p1">](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)</ept></source>
          <target state="new">Download and install Puttygen from the following location: <bpt id="p1">[</bpt>http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html<ept id="p1">](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)</ept></target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Puttygen may not be able to read the private key that was created earlier (<ph id="ph1">`myPrivateKey.key`</ph>).</source>
          <target state="new">Puttygen may not be able to read the private key that was created earlier (<ph id="ph1">`myPrivateKey.key`</ph>).</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Run the following command to translate it into an RSA private key that Puttygen can understand:</source>
          <target state="new">Run the following command to translate it into an RSA private key that Puttygen can understand:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The command above should produce a new private key called myPrivateKey_rsa.</source>
          <target state="new">The command above should produce a new private key called myPrivateKey_rsa.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Run <ph id="ph1">`puttygen.exe`</ph></source>
          <target state="new">Run <ph id="ph1">`puttygen.exe`</ph></target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Click the menu: File &gt; Load a Private Key</source>
          <target state="new">Click the menu: File &gt; Load a Private Key</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Find your private key, which we named <ph id="ph1">`myPrivateKey_rsa`</ph> above.</source>
          <target state="new">Find your private key, which we named <ph id="ph1">`myPrivateKey_rsa`</ph> above.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You will need to change the file filter to show <bpt id="p1">**</bpt>All Files (\*.\*)<ept id="p1">**</ept></source>
          <target state="new">You will need to change the file filter to show <bpt id="p1">**</bpt>All Files (\*.\*)<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You will receive a prompt which should look like this:</source>
          <target state="new">You will receive a prompt which should look like this:</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>linuxgoodforeignkey</source>
          <target state="new">linuxgoodforeignkey</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept></source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Save Private Key<ept id="p1">**</ept>, which is highlighted in the screenshot below:</source>
          <target state="new">Click <bpt id="p1">**</bpt>Save Private Key<ept id="p1">**</ept>, which is highlighted in the screenshot below:</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>linuxputtyprivatekey</source>
          <target state="new">linuxputtyprivatekey</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Save the file as a PPK</source>
          <target state="new">Save the file as a PPK</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use Putty to Connect to a Linux Machine</source>
          <target state="new">Use Putty to Connect to a Linux Machine</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Download and install putty from the following location: <bpt id="p1">[</bpt>http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html<ept id="p1">](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)</ept></source>
          <target state="new">Download and install putty from the following location: <bpt id="p1">[</bpt>http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html<ept id="p1">](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)</ept></target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Run putty.exe</source>
          <target state="new">Run putty.exe</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Fill in the host name using the IP from the Management Portal:</source>
          <target state="new">Fill in the host name using the IP from the Management Portal:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>linuxputtyconfig</source>
          <target state="new">linuxputtyconfig</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Before selecting <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>, click the Connection &gt; SSH &gt; Auth tab to choose your key.</source>
          <target state="new">Before selecting <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>, click the Connection &gt; SSH &gt; Auth tab to choose your key.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>See the screenshot below for the field to fill in:</source>
          <target state="new">See the screenshot below for the field to fill in:</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>linuxputtyprivatekey</source>
          <target state="new">linuxputtyprivatekey</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> to connect to your virtual machine</source>
          <target state="new">Click <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> to connect to your virtual machine</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f9029bf16d581baac57bae569cecb773abc096d</xliffext:olfilehash>
  </header>
</xliff>