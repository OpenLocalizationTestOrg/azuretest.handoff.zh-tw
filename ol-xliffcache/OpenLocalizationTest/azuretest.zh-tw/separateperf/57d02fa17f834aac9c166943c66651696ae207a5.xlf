<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs Notify Users</source>
          <target state="new">Azure Notification Hubs Notify Users</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to send push notifications to users in Azure.</source>
          <target state="new">Learn how to send push notifications to users in Azure.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Code samples written in Java for Android</source>
          <target state="new">Code samples written in Java for Android</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs Notify Users</source>
          <target state="new">Azure Notification Hubs Notify Users</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Push notification support in Azure enables you to access an easy-to-use, multiplatform, and scaled-out push infrastructure, which greatly simplifies the implementation of push notifications for both consumer and enterprise applications for mobile platforms.</source>
          <target state="new">Push notification support in Azure enables you to access an easy-to-use, multiplatform, and scaled-out push infrastructure, which greatly simplifies the implementation of push notifications for both consumer and enterprise applications for mobile platforms.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to use Azure Notification Hubs to send push notifications to a specific app user on a specific device.</source>
          <target state="new">This tutorial shows you how to use Azure Notification Hubs to send push notifications to a specific app user on a specific device.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An ASP.NET WebAPI backend is used to authenticate clients and to generate notifications, as shown in the guidance topic <bpt id="p1">[</bpt>Registering from your app backend<ept id="p1">](http://msdn.microsoft.com/library/dn743807.aspx)</ept>.</source>
          <target state="new">An ASP.NET WebAPI backend is used to authenticate clients and to generate notifications, as shown in the guidance topic <bpt id="p1">[</bpt>Registering from your app backend<ept id="p1">](http://msdn.microsoft.com/library/dn743807.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This tutorial builds on the notification hub that you created in the <bpt id="p1">[</bpt>Getting Started with Notification Hubs (Android)<ept id="p1">](notification-hubs-android-get-started.md)</ept> tutorial.</source>
          <target state="new">This tutorial builds on the notification hub that you created in the <bpt id="p1">[</bpt>Getting Started with Notification Hubs (Android)<ept id="p1">](notification-hubs-android-get-started.md)</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This tutorial assumes that you have created and configured your notification hub as described in <bpt id="p1">[</bpt>Getting Started with Notification Hubs (Android)<ept id="p1">](notification-hubs-android-get-started.md)</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This tutorial assumes that you have created and configured your notification hub as described in <bpt id="p1">[</bpt>Getting Started with Notification Hubs (Android)<ept id="p1">](notification-hubs-android-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you are using Mobile Services as your backend service, see the <bpt id="p1">[</bpt>Mobile Services version<ept id="p1">](../mobile-services-javascript-backend-android-push-notifications-app-users.md)</ept> of this tutorial.</source>
          <target state="new">If you are using Mobile Services as your backend service, see the <bpt id="p1">[</bpt>Mobile Services version<ept id="p1">](../mobile-services-javascript-backend-android-push-notifications-app-users.md)</ept> of this tutorial.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create the Android Project</source>
          <target state="new">Create the Android Project</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The next step is to create the Android application.</source>
          <target state="new">The next step is to create the Android application.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Follow the <bpt id="p1">[</bpt>Getting Started with Notification Hubs (Android)<ept id="p1">](notification-hubs-android-get-started.md)</ept> tutorial to create and configure your app to receive push notifications from GCM.</source>
          <target state="new">Follow the <bpt id="p1">[</bpt>Getting Started with Notification Hubs (Android)<ept id="p1">](notification-hubs-android-get-started.md)</ept> tutorial to create and configure your app to receive push notifications from GCM.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Open your <bpt id="p1">**</bpt>res/layout/activity_main.xml<ept id="p1">**</ept> file, replace the with the following content definitions.</source>
          <target state="new">Open your <bpt id="p1">**</bpt>res/layout/activity_main.xml<ept id="p1">**</ept> file, replace the with the following content definitions.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This adds new EditText controls for logging in as a user.</source>
          <target state="new">This adds new EditText controls for logging in as a user.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Also a field is added for a username tag that will be part of notifications you send:</source>
          <target state="new">Also a field is added for a username tag that will be part of notifications you send:</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Open your <bpt id="p1">**</bpt>res/values/strings.xml<ept id="p1">**</ept> file and replace the <ph id="ph1">`send_button`</ph> definition with the following lines that redefine the string for the <ph id="ph2">`send_button`</ph> and add strings for the other controls:</source>
          <target state="new">Open your <bpt id="p1">**</bpt>res/values/strings.xml<ept id="p1">**</ept> file and replace the <ph id="ph1">`send_button`</ph> definition with the following lines that redefine the string for the <ph id="ph2">`send_button`</ph> and add strings for the other controls:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Your main_activity.xml graphical layout should now look like this:</source>
          <target state="new">Your main_activity.xml graphical layout should now look like this:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create a new class named <bpt id="p1">**</bpt>RegisterClient<ept id="p1">**</ept> in the same package as your <ph id="ph1">`MainActivity`</ph> class.</source>
          <target state="new">Create a new class named <bpt id="p1">**</bpt>RegisterClient<ept id="p1">**</ept> in the same package as your <ph id="ph1">`MainActivity`</ph> class.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use the code below for the new class file.</source>
          <target state="new">Use the code below for the new class file.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This component implements the REST calls required to contact the app backend, in order to register for push notifications.</source>
          <target state="new">This component implements the REST calls required to contact the app backend, in order to register for push notifications.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It also locally stores the <bpt id="p1">*</bpt>registrationIds<ept id="p1">*</ept> created by the Notification Hub as detailed in <bpt id="p2">[</bpt>Registering from your app backend<ept id="p2">](http://msdn.microsoft.com/library/dn743807.aspx)</ept>.</source>
          <target state="new">It also locally stores the <bpt id="p1">*</bpt>registrationIds<ept id="p1">*</ept> created by the Notification Hub as detailed in <bpt id="p2">[</bpt>Registering from your app backend<ept id="p2">](http://msdn.microsoft.com/library/dn743807.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Note that it uses an authorization token stored in local storage when you click the <bpt id="p1">**</bpt>Log in<ept id="p1">**</ept> button.</source>
          <target state="new">Note that it uses an authorization token stored in local storage when you click the <bpt id="p1">**</bpt>Log in<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In your <ph id="ph1">`MainActivity`</ph> class remove or comment out your private field for <ph id="ph2">`NotificationHub`</ph>, and add a field for the <ph id="ph3">`RegisterClient`</ph> class and a string for your ASP.NET backend's endpoint.</source>
          <target state="new">In your <ph id="ph1">`MainActivity`</ph> class remove or comment out your private field for <ph id="ph2">`NotificationHub`</ph>, and add a field for the <ph id="ph3">`RegisterClient`</ph> class and a string for your ASP.NET backend's endpoint.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Be sure to replace <ph id="ph1">`&lt;Enter Your Backend Endpoint&gt;`</ph> with the your actual backend endpoint obtained previously.</source>
          <target state="new">Be sure to replace <ph id="ph1">`&lt;Enter Your Backend Endpoint&gt;`</ph> with the your actual backend endpoint obtained previously.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`http://mybackend.azurewebsites.net`</ph>.</source>
          <target state="new">For example, <ph id="ph1">`http://mybackend.azurewebsites.net`</ph>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In your <ph id="ph1">`MainActivity`</ph> class, in the <ph id="ph2">`onCreate`</ph> method, remove or comment out the initialization of the <ph id="ph3">`hub`</ph> field and the call to the <ph id="ph4">`registerWithNotificationHubs`</ph> method.</source>
          <target state="new">In your <ph id="ph1">`MainActivity`</ph> class, in the <ph id="ph2">`onCreate`</ph> method, remove or comment out the initialization of the <ph id="ph3">`hub`</ph> field and the call to the <ph id="ph4">`registerWithNotificationHubs`</ph> method.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Then add code to initialize an instance of the <ph id="ph1">`RegisterClient`</ph> class.</source>
          <target state="new">Then add code to initialize an instance of the <ph id="ph1">`RegisterClient`</ph> class.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The method should contain the following lines:</source>
          <target state="new">The method should contain the following lines:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In your <ph id="ph1">`MainActivity`</ph> class, delete or comment out the entire <ph id="ph2">`registerWithNotificationHubs`</ph> method.</source>
          <target state="new">In your <ph id="ph1">`MainActivity`</ph> class, delete or comment out the entire <ph id="ph2">`registerWithNotificationHubs`</ph> method.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It will not be used in this tutorial.</source>
          <target state="new">It will not be used in this tutorial.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`import`</ph> statements to your <bpt id="p1">**</bpt>MainActivity.java<ept id="p1">**</ept> file.</source>
          <target state="new">Add the following <ph id="ph1">`import`</ph> statements to your <bpt id="p1">**</bpt>MainActivity.java<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Then, add the following methods to handle the <bpt id="p1">**</bpt>Log in<ept id="p1">**</ept> button click event and sending push notifications.</source>
          <target state="new">Then, add the following methods to handle the <bpt id="p1">**</bpt>Log in<ept id="p1">**</ept> button click event and sending push notifications.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`login`</ph> handler for the <bpt id="p1">**</bpt>Log in<ept id="p1">**</ept> button generates a basic authentication token using on the input username and password (note that this represents any token your authentication scheme uses), then it uses <ph id="ph2">`RegisterClient`</ph> to call the backend for registration.</source>
          <target state="new">The <ph id="ph1">`login`</ph> handler for the <bpt id="p1">**</bpt>Log in<ept id="p1">**</ept> button generates a basic authentication token using on the input username and password (note that this represents any token your authentication scheme uses), then it uses <ph id="ph2">`RegisterClient`</ph> to call the backend for registration.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`sendPush`</ph> method calls the backend to trigger a secure notification to the user based on the user tag.</source>
          <target state="new">The <ph id="ph1">`sendPush`</ph> method calls the backend to trigger a secure notification to the user based on the user tag.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The platform notification service that <ph id="ph1">`sendPush`</ph> targets depends on the <ph id="ph2">`pns`</ph> string passed in.</source>
          <target state="new">The platform notification service that <ph id="ph1">`sendPush`</ph> targets depends on the <ph id="ph2">`pns`</ph> string passed in.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In your <ph id="ph1">`MainActivity`</ph> class, update the <ph id="ph2">`sendNotificationButtonOnClick`</ph> method to call the <ph id="ph3">`sendPush`</ph> method with the user's selected platform notification services as follows.</source>
          <target state="new">In your <ph id="ph1">`MainActivity`</ph> class, update the <ph id="ph2">`sendNotificationButtonOnClick`</ph> method to call the <ph id="ph3">`sendPush`</ph> method with the user's selected platform notification services as follows.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Run the Application</source>
          <target state="new">Run the Application</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Run the application on a device or an emulator using Android Studio.</source>
          <target state="new">Run the application on a device or an emulator using Android Studio.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In the Android app, enter a username and password.</source>
          <target state="new">In the Android app, enter a username and password.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>They must both be the same string value and they must not contain spaces or special characters.</source>
          <target state="new">They must both be the same string value and they must not contain spaces or special characters.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the Android app, click <bpt id="p1">**</bpt>Log in<ept id="p1">**</ept>.</source>
          <target state="new">In the Android app, click <bpt id="p1">**</bpt>Log in<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Wait for a toast message that states <bpt id="p1">**</bpt>Logged in and registered<ept id="p1">**</ept>.</source>
          <target state="new">Wait for a toast message that states <bpt id="p1">**</bpt>Logged in and registered<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This will enable the <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> button.</source>
          <target state="new">This will enable the <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Click the toggle buttons to enable all platforms where you have ran the app and registered a user.</source>
          <target state="new">Click the toggle buttons to enable all platforms where you have ran the app and registered a user.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Enter the user's name that will receive the notification message.</source>
          <target state="new">Enter the user's name that will receive the notification message.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>That user must be registered for notifications on the target devices.</source>
          <target state="new">That user must be registered for notifications on the target devices.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Enter a message for the user to receive as a push notification message.</source>
          <target state="new">Enter a message for the user to receive as a push notification message.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Send Notification<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Each device that has a registration with the matching username tag will receive the push notification.</source>
          <target state="new">Each device that has a registration with the matching username tag will receive the push notification.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57d02fa17f834aac9c166943c66651696ae207a5</xliffext:olfilehash>
  </header>
</xliff>