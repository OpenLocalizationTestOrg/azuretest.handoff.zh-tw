<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Build a Node.js web application using DocumentDB | Microsoft Azure</source>
          <target state="new">Build a Node.js web application using DocumentDB | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Microsoft Azure DocumentDB to store and access data from a Node.js Express web application hosted on Azure Websites.</source>
          <target state="new">Learn how to use Microsoft Azure DocumentDB to store and access data from a Node.js Express web application hosted on Azure Websites.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="_Toc395783175"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Build a Node.js web application using DocumentDB</source>
          <target state="new"><ph id="ph1">&lt;a name="_Toc395783175"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Build a Node.js web application using DocumentDB</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to use the Azure DocumentDB service to store and access data from a Node.js Express application hosted on Azure Websites.</source>
          <target state="new">This tutorial shows you how to use the Azure DocumentDB service to store and access data from a Node.js Express application hosted on Azure Websites.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>We recommend getting started by watching the following video, where we show you how to provision an Azure DocumentDB database account and store JSON documents in your Node.js application.</source>
          <target state="new">We recommend getting started by watching the following video, where we show you how to provision an Azure DocumentDB database account and store JSON documents in your Node.js application.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Then, return to this article, where you'll learn the answers to the following questions:</source>
          <target state="new">Then, return to this article, where you'll learn the answers to the following questions:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>How do I work with DocumentDB using the documentdb npm module?</source>
          <target state="new">How do I work with DocumentDB using the documentdb npm module?</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>How do I deploy the web application to Azure Websites?</source>
          <target state="new">How do I deploy the web application to Azure Websites?</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By following this tutorial, you will build a simple web-based</source>
          <target state="new">By following this tutorial, you will build a simple web-based</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>task-management application that allows creating, retrieving and</source>
          <target state="new">task-management application that allows creating, retrieving and</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>completing of tasks.</source>
          <target state="new">completing of tasks.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The tasks will be stored as JSON documents in Azure</source>
          <target state="new">The tasks will be stored as JSON documents in Azure</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>DocumentDB.</source>
          <target state="new">DocumentDB.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Screen shot of the My Todo List application created in this tutorial</source>
          <target state="new">Screen shot of the My Todo List application created in this tutorial</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Don't have time to complete the tutorial and just want to get the complete solution from GitHub?</source>
          <target state="new">Don't have time to complete the tutorial and just want to get the complete solution from GitHub?</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Not a problem, get it <bpt id="p1">[</bpt>here<ept id="p1">](https://github.com/Azure/azure-documentdb-node/tree/master/tutorial/todo)</ept>.</source>
          <target state="new">Not a problem, get it <bpt id="p1">[</bpt>here<ept id="p1">](https://github.com/Azure/azure-documentdb-node/tree/master/tutorial/todo)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="_Toc395783176"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Prerequisites</source>
          <target state="new"><ph id="ph1">&lt;a name="_Toc395783176"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Prerequisites</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> This tutorial assumes that you have some prior experience using Node.js and Azure Websites.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> This tutorial assumes that you have some prior experience using Node.js and Azure Websites.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Before following the instructions in this article, you should ensure</source>
          <target state="new">Before following the instructions in this article, you should ensure</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>that you have the following:</source>
          <target state="new">that you have the following:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An active Azure account.</source>
          <target state="new">An active Azure account.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you don't have an account, you can create a free trial account in just a couple of minutes.</source>
          <target state="new">If you don't have an account, you can create a free trial account in just a couple of minutes.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](../../pricing/free-trial/)</ept>.</source>
          <target state="new">For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](../../pricing/free-trial/)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Node.js<ept id="p1">][]</ept> version v0.10.29 or higher.</source>
          <target state="new"><bpt id="p1">[</bpt>Node.js<ept id="p1">][]</ept> version v0.10.29 or higher.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Express generator<ept id="p1">](http://www.expressjs.com/starter/generator.html)</ept> (you can install this via <ph id="ph1">`npm install express-generator -g`</ph>)</source>
          <target state="new"><bpt id="p1">[</bpt>Express generator<ept id="p1">](http://www.expressjs.com/starter/generator.html)</ept> (you can install this via <ph id="ph1">`npm install express-generator -g`</ph>)</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Git<ept id="p1">][]</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Git<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="_Toc395637761"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 1: Create a DocumentDB database account</source>
          <target state="new"><ph id="ph1">&lt;a name="_Toc395637761"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 1: Create a DocumentDB database account</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Let's start by creating a DocumentDB account.</source>
          <target state="new">Let's start by creating a DocumentDB account.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you already have an account, you can skip to <bpt id="p1">[</bpt>Step 2: Create a new Node.js application<ept id="p1">](#_Toc395783178)</ept>.</source>
          <target state="new">If you already have an account, you can skip to <bpt id="p1">[</bpt>Step 2: Create a new Node.js application<ept id="p1">](#_Toc395783178)</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="_Toc395783178"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 2: Create a new Node.js application</source>
          <target state="new"><ph id="ph1">&lt;a name="_Toc395783178"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 2: Create a new Node.js application</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Now let's create a basic Hello World Node.js project using the <bpt id="p1">[</bpt>Express<ept id="p1">](http://expressjs.com/)</ept> framework.</source>
          <target state="new">Now let's create a basic Hello World Node.js project using the <bpt id="p1">[</bpt>Express<ept id="p1">](http://expressjs.com/)</ept> framework.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Open your favorite terminal.</source>
          <target state="new">Open your favorite terminal.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use the express generator to generate a new application called <bpt id="p1">**</bpt>todo<ept id="p1">**</ept>.</source>
          <target state="new">Use the express generator to generate a new application called <bpt id="p1">**</bpt>todo<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Open your new <bpt id="p1">**</bpt>todo<ept id="p1">**</ept> directory and install dependencies.</source>
          <target state="new">Open your new <bpt id="p1">**</bpt>todo<ept id="p1">**</ept> directory and install dependencies.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Run your new application.</source>
          <target state="new">Run your new application.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can you view your new application by navigating your browser to <bpt id="p1">[</bpt>http://localhost:3000<ept id="p1">](http://localhost:3000)</ept>.</source>
          <target state="new">You can you view your new application by navigating your browser to <bpt id="p1">[</bpt>http://localhost:3000<ept id="p1">](http://localhost:3000)</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Screenshot of the Hello World application in a browser window</source>
          <target state="new">Screenshot of the Hello World application in a browser window</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="_Toc395783179"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 3: Install additional modules</source>
          <target state="new"><ph id="ph1">&lt;a name="_Toc395783179"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 3: Install additional modules</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> file is one of the files created in the root of the</source>
          <target state="new">The <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> file is one of the files created in the root of the</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>project.</source>
          <target state="new">project.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This file contains a list of additional modules that are</source>
          <target state="new">This file contains a list of additional modules that are</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>required for your Node.js application.</source>
          <target state="new">required for your Node.js application.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Later, when you deploy this</source>
          <target state="new">Later, when you deploy this</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>application to an Azure Websites, this file is used to determine</source>
          <target state="new">application to an Azure Websites, this file is used to determine</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>which modules need to be installed on Azure to support your application.</source>
          <target state="new">which modules need to be installed on Azure to support your application.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>We still need to install two more packages for this tutorial.</source>
          <target state="new">We still need to install two more packages for this tutorial.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Back in the terminal, install the <bpt id="p1">**</bpt>async<ept id="p1">**</ept> module via npm.</source>
          <target state="new">Back in the terminal, install the <bpt id="p1">**</bpt>async<ept id="p1">**</ept> module via npm.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Install the <bpt id="p1">**</bpt>documentdb<ept id="p1">**</ept> module via npm.</source>
          <target state="new">Install the <bpt id="p1">**</bpt>documentdb<ept id="p1">**</ept> module via npm.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This is the module where all the DocumentDB magic happens.</source>
          <target state="new">This is the module where all the DocumentDB magic happens.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A quick check of the <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> file of the application should show the additional modules.</source>
          <target state="new">A quick check of the <bpt id="p1">**</bpt>package.json<ept id="p1">**</ept> file of the application should show the additional modules.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This file will tell Azure which packages to download and install when running your application.</source>
          <target state="new">This file will tell Azure which packages to download and install when running your application.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It should resemble the example below.</source>
          <target state="new">It should resemble the example below.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Screenshot of the package.json tab</source>
          <target state="new">Screenshot of the package.json tab</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="_Toc395783180"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 4: Using the DocumentDB service in a node application</source>
          <target state="new"><ph id="ph1">&lt;a name="_Toc395783180"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 4: Using the DocumentDB service in a node application</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>That takes care of all the initial setup and configuration, now let’s get down to why we’re here, and that’s to write some code using Azure DocumentDB.</source>
          <target state="new">That takes care of all the initial setup and configuration, now let’s get down to why we’re here, and that’s to write some code using Azure DocumentDB.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Create the model</source>
          <target state="new">Create the model</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the project directory, create a new directory named <bpt id="p1">**</bpt>models<ept id="p1">**</ept>.</source>
          <target state="new">In the project directory, create a new directory named <bpt id="p1">**</bpt>models<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>models<ept id="p1">**</ept> directory, create a new file named <bpt id="p2">**</bpt>taskDao.js<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>models<ept id="p1">**</ept> directory, create a new file named <bpt id="p2">**</bpt>taskDao.js<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This file will contain the model for the tasks created by our application.</source>
          <target state="new">This file will contain the model for the tasks created by our application.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In the same <bpt id="p1">**</bpt>models<ept id="p1">**</ept> directory, create another new file named <bpt id="p2">**</bpt>docdbUtils.js<ept id="p2">**</ept>.</source>
          <target state="new">In the same <bpt id="p1">**</bpt>models<ept id="p1">**</ept> directory, create another new file named <bpt id="p2">**</bpt>docdbUtils.js<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This file will contain some useful, reusable, code that we will use throughout our application.</source>
          <target state="new">This file will contain some useful, reusable, code that we will use throughout our application.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Copy the following code in to <bpt id="p1">**</bpt>docdbUtils.js<ept id="p1">**</ept></source>
          <target state="new">Copy the following code in to <bpt id="p1">**</bpt>docdbUtils.js<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> createCollection takes an optional requestOptions parameter that can be used to specify the Offer Type for the Collection.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> createCollection takes an optional requestOptions parameter that can be used to specify the Offer Type for the Collection.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If no requestOptions.offerType value is supplied then the Collection will be created using the default Offer Type.</source>
          <target state="new">If no requestOptions.offerType value is supplied then the Collection will be created using the default Offer Type.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For more information on DocumentDB Offer Types please refer to <bpt id="p1">[</bpt>Performance levels in DocumentDB<ept id="p1">](documentdb-performance-levels.md)</ept></source>
          <target state="new">For more information on DocumentDB Offer Types please refer to <bpt id="p1">[</bpt>Performance levels in DocumentDB<ept id="p1">](documentdb-performance-levels.md)</ept></target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Save and close the <bpt id="p1">**</bpt>docdbUtils.js<ept id="p1">**</ept> file.</source>
          <target state="new">Save and close the <bpt id="p1">**</bpt>docdbUtils.js<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>At the beginning of the <bpt id="p1">**</bpt>taskDao.js<ept id="p1">**</ept> file, add the following code to reference the <bpt id="p2">**</bpt>DocumentDBClient<ept id="p2">**</ept> and the <bpt id="p3">**</bpt>docdbUtils.js<ept id="p3">**</ept> we created above:</source>
          <target state="new">At the beginning of the <bpt id="p1">**</bpt>taskDao.js<ept id="p1">**</ept> file, add the following code to reference the <bpt id="p2">**</bpt>DocumentDBClient<ept id="p2">**</ept> and the <bpt id="p3">**</bpt>docdbUtils.js<ept id="p3">**</ept> we created above:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Next, you will add code to define and export the Task object.</source>
          <target state="new">Next, you will add code to define and export the Task object.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This is responsible for initializing our Task object and setting up the Database and Document Collection we will use.</source>
          <target state="new">This is responsible for initializing our Task object and setting up the Database and Document Collection we will use.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Next, add the following code to define additional methods on the Task object, which allow interactions with data stored in DocumentDB.</source>
          <target state="new">Next, add the following code to define additional methods on the Task object, which allow interactions with data stored in DocumentDB.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Save and close the <bpt id="p1">**</bpt>taskDao.js<ept id="p1">**</ept> file.</source>
          <target state="new">Save and close the <bpt id="p1">**</bpt>taskDao.js<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Create the controller</source>
          <target state="new">Create the controller</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>routes<ept id="p1">**</ept> directory of your project, create a new file named <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>routes<ept id="p1">**</ept> directory of your project, create a new file named <bpt id="p2">**</bpt>tasklist.js<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Add the following code to <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>.</source>
          <target state="new">Add the following code to <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This loads the DocumentDBClient and async modules, which are used by <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>.</source>
          <target state="new">This loads the DocumentDBClient and async modules, which are used by <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This also defined the <bpt id="p1">**</bpt>TaskList<ept id="p1">**</ept> function, which is passed an instance of the <bpt id="p2">**</bpt>Task<ept id="p2">**</ept> object we defined earlier:</source>
          <target state="new">This also defined the <bpt id="p1">**</bpt>TaskList<ept id="p1">**</ept> function, which is passed an instance of the <bpt id="p2">**</bpt>Task<ept id="p2">**</ept> object we defined earlier:</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Continue adding to the <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> file by adding the methods used to <bpt id="p2">**</bpt>showTasks, addTask<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>completeTasks<ept id="p3">**</ept>:</source>
          <target state="new">Continue adding to the <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> file by adding the methods used to <bpt id="p2">**</bpt>showTasks, addTask<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>completeTasks<ept id="p3">**</ept>:</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Save and close the <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> file.</source>
          <target state="new">Save and close the <bpt id="p1">**</bpt>tasklist.js<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Add config.js</source>
          <target state="new">Add config.js</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In your project directory create a new file named <bpt id="p1">**</bpt>config.js<ept id="p1">**</ept>.</source>
          <target state="new">In your project directory create a new file named <bpt id="p1">**</bpt>config.js<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Add the following to <bpt id="p1">**</bpt>config.js<ept id="p1">**</ept>.</source>
          <target state="new">Add the following to <bpt id="p1">**</bpt>config.js<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This defines configuration settings and values needed for our application.</source>
          <target state="new">This defines configuration settings and values needed for our application.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>config.js<ept id="p1">**</ept> file, update the values of HOST and AUTH_KEY using the values found in the Keys blade of your DocumentDB account on the <bpt id="p2">[</bpt>Microsoft Azure Preview portal<ept id="p2">](http://portal.azure.com)</ept>:</source>
          <target state="new">In the <bpt id="p1">**</bpt>config.js<ept id="p1">**</ept> file, update the values of HOST and AUTH_KEY using the values found in the Keys blade of your DocumentDB account on the <bpt id="p2">[</bpt>Microsoft Azure Preview portal<ept id="p2">](http://portal.azure.com)</ept>:</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Save and close the <bpt id="p1">**</bpt>config.js<ept id="p1">**</ept> file.</source>
          <target state="new">Save and close the <bpt id="p1">**</bpt>config.js<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Modify app.js</source>
          <target state="new">Modify app.js</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In the project directory, open the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file.</source>
          <target state="new">In the project directory, open the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This file was created earlier when the Express web application was created.</source>
          <target state="new">This file was created earlier when the Express web application was created.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Add the following code to the top of <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept></source>
          <target state="new">Add the following code to the top of <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This code defines the config file to be used, and proceeds to read values out of this file in to some variables we will use soon.</source>
          <target state="new">This code defines the config file to be used, and proceeds to read values out of this file in to some variables we will use soon.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Replace the following two lines in <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file:</source>
          <target state="new">Replace the following two lines in <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>with the following snippet:</source>
          <target state="new">with the following snippet:</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>These lines define a new instance of our <bpt id="p1">**</bpt>TaskDao<ept id="p1">**</ept> object, with a new connection to DocumentDB (using the values read from the <bpt id="p2">**</bpt>config.js<ept id="p2">**</ept>), initialize the task object and then bind form actions to methods on our <bpt id="p3">**</bpt>TaskList<ept id="p3">**</ept> controller.</source>
          <target state="new">These lines define a new instance of our <bpt id="p1">**</bpt>TaskDao<ept id="p1">**</ept> object, with a new connection to DocumentDB (using the values read from the <bpt id="p2">**</bpt>config.js<ept id="p2">**</ept>), initialize the task object and then bind form actions to methods on our <bpt id="p3">**</bpt>TaskList<ept id="p3">**</ept> controller.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Finally, save and close the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file, we're just about done.</source>
          <target state="new">Finally, save and close the <bpt id="p1">**</bpt>app.js<ept id="p1">**</ept> file, we're just about done.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="_Toc395783181"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 5: Build a user interface</source>
          <target state="new"><ph id="ph1">&lt;a name="_Toc395783181"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 5: Build a user interface</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Now let’s turn our attention to building the user interface so a user can actually interact with our application.</source>
          <target state="new">Now let’s turn our attention to building the user interface so a user can actually interact with our application.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The Express application we created uses <bpt id="p1">**</bpt>Jade<ept id="p1">**</ept> as the view engine.</source>
          <target state="new">The Express application we created uses <bpt id="p1">**</bpt>Jade<ept id="p1">**</ept> as the view engine.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For more information on Jade please refer to <bpt id="p1">[</bpt>http://jade-lang.com/<ept id="p1">](http://jade-lang.com/)</ept>.</source>
          <target state="new">For more information on Jade please refer to <bpt id="p1">[</bpt>http://jade-lang.com/<ept id="p1">](http://jade-lang.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> file in the <bpt id="p2">**</bpt>views<ept id="p2">**</ept> directory is used as a global template for other <bpt id="p3">**</bpt>.jade<ept id="p3">**</ept> files.</source>
          <target state="new">The <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> file in the <bpt id="p2">**</bpt>views<ept id="p2">**</ept> directory is used as a global template for other <bpt id="p3">**</bpt>.jade<ept id="p3">**</ept> files.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In this step you will modify it to use <bpt id="p1">[</bpt>Twitter Bootstrap<ept id="p1">](https://github.com/twbs/bootstrap)</ept>, which is a toolkit that makes it easy to design a nice looking website.</source>
          <target state="new">In this step you will modify it to use <bpt id="p1">[</bpt>Twitter Bootstrap<ept id="p1">](https://github.com/twbs/bootstrap)</ept>, which is a toolkit that makes it easy to design a nice looking website.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> file found in the <bpt id="p2">**</bpt>views<ept id="p2">**</ept> folder and replace the contents with the following;</source>
          <target state="new">Open the <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> file found in the <bpt id="p2">**</bpt>views<ept id="p2">**</ept> folder and replace the contents with the following;</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This effectively tells the <bpt id="p1">**</bpt>Jade<ept id="p1">**</ept> engine to render some HTML for our application and creates a <bpt id="p2">**</bpt>block<ept id="p2">**</ept> called <bpt id="p3">**</bpt>content<ept id="p3">**</ept> where we can supply the layout for our content pages.</source>
          <target state="new">This effectively tells the <bpt id="p1">**</bpt>Jade<ept id="p1">**</ept> engine to render some HTML for our application and creates a <bpt id="p2">**</bpt>block<ept id="p2">**</ept> called <bpt id="p3">**</bpt>content<ept id="p3">**</ept> where we can supply the layout for our content pages.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Save and close this <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> file.</source>
          <target state="new">Save and close this <bpt id="p1">**</bpt>layout.jade<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Now open the <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> file, the view that will be used by our application, and replace the content of the file with the following:</source>
          <target state="new">Now open the <bpt id="p1">**</bpt>index.jade<ept id="p1">**</ept> file, the view that will be used by our application, and replace the content of the file with the following:</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This extends layout, and provides content for the <bpt id="p1">**</bpt>content<ept id="p1">**</ept> placeholder we saw in the <bpt id="p2">**</bpt>layout.jade<ept id="p2">**</ept> file earlier.</source>
          <target state="new">This extends layout, and provides content for the <bpt id="p1">**</bpt>content<ept id="p1">**</ept> placeholder we saw in the <bpt id="p2">**</bpt>layout.jade<ept id="p2">**</ept> file earlier.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>In this layout we created two HTML forms.</source>
          <target state="new">In this layout we created two HTML forms.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The first form contains a table for our data and a button that allows us to update items by posting to <bpt id="p1">**</bpt>/completetask<ept id="p1">**</ept> method of our controller.</source>
          <target state="new">The first form contains a table for our data and a button that allows us to update items by posting to <bpt id="p1">**</bpt>/completetask<ept id="p1">**</ept> method of our controller.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The second form contains two input fields and a button that allows us to create a new item by posting to <bpt id="p1">**</bpt>/addtask<ept id="p1">**</ept> method of our controller.</source>
          <target state="new">The second form contains two input fields and a button that allows us to create a new item by posting to <bpt id="p1">**</bpt>/addtask<ept id="p1">**</ept> method of our controller.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This should be all that we need for our application to work.</source>
          <target state="new">This should be all that we need for our application to work.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>style.css<ept id="p1">**</ept> file in <bpt id="p2">**</bpt>public\stylesheets<ept id="p2">**</ept> directory and replace the code with the following:</source>
          <target state="new">Open the <bpt id="p1">**</bpt>style.css<ept id="p1">**</ept> file in <bpt id="p2">**</bpt>public\stylesheets<ept id="p2">**</ept> directory and replace the code with the following:</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Save and close this <bpt id="p1">**</bpt>style.css<ept id="p1">**</ept> file.</source>
          <target state="new">Save and close this <bpt id="p1">**</bpt>style.css<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="_Toc395783181"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 6: Run your application locally</source>
          <target state="new"><ph id="ph1">&lt;a name="_Toc395783181"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 6: Run your application locally</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To test the application on your local machine, run <ph id="ph1">`npm start`</ph> in a terminal to start your application, and launch a browser with a page that looks like the image below:</source>
          <target state="new">To test the application on your local machine, run <ph id="ph1">`npm start`</ph> in a terminal to start your application, and launch a browser with a page that looks like the image below:</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Screenshot of the MyTodo List application in a browser window</source>
          <target state="new">Screenshot of the MyTodo List application in a browser window</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Use the provided fields for Item, Item Name and Category to enter</source>
          <target state="new">Use the provided fields for Item, Item Name and Category to enter</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>information, and then click <bpt id="p1">**</bpt>Add Item<ept id="p1">**</ept>.</source>
          <target state="new">information, and then click <bpt id="p1">**</bpt>Add Item<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The page should update to display the newly created item in the ToDo</source>
          <target state="new">The page should update to display the newly created item in the ToDo</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>list.</source>
          <target state="new">list.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Screenshot of the application with a new item in the ToDo list</source>
          <target state="new">Screenshot of the application with a new item in the ToDo list</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>To complete a task, simply check the checkbox in the Complete column,</source>
          <target state="new">To complete a task, simply check the checkbox in the Complete column,</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>and then click <bpt id="p1">**</bpt>Update tasks<ept id="p1">**</ept>.</source>
          <target state="new">and then click <bpt id="p1">**</bpt>Update tasks<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="_Toc395783182"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 7: Deploy your application to Azure Websites</source>
          <target state="new"><ph id="ph1">&lt;a name="_Toc395783182"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Step 7: Deploy your application to Azure Websites</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If you haven't already, enable a git repository for your Azure Website.</source>
          <target state="new">If you haven't already, enable a git repository for your Azure Website.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>You can find instructions on how to do this <bpt id="p1">[</bpt>here<ept id="p1">](../web-sites-publish-source-control-git.md#step4)</ept>.</source>
          <target state="new">You can find instructions on how to do this <bpt id="p1">[</bpt>here<ept id="p1">](../web-sites-publish-source-control-git.md#step4)</ept>.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Add your Azure Website as a git remote.</source>
          <target state="new">Add your Azure Website as a git remote.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Deploy by pushing to the remote.</source>
          <target state="new">Deploy by pushing to the remote.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>In a few seconds, git will finish publishing your web</source>
          <target state="new">In a few seconds, git will finish publishing your web</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>application and launch a browser where you can see your handy work</source>
          <target state="new">application and launch a browser where you can see your handy work</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>running in Azure!</source>
          <target state="new">running in Azure!</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="_Toc395637775"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Next steps</source>
          <target state="new"><ph id="ph1">&lt;a name="_Toc395637775"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Next steps</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Congratulations!</source>
          <target state="new">Congratulations!</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>You have just built your first Node.js Express Web</source>
          <target state="new">You have just built your first Node.js Express Web</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Application using Azure DocumentDB and published it to Azure Websites.</source>
          <target state="new">Application using Azure DocumentDB and published it to Azure Websites.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The source code for the complete reference application can be downloaded <bpt id="p1">[</bpt>here<ept id="p1">](https://github.com/Azure/azure-documentdb-node/tree/master/tutorial/todo)</ept>.</source>
          <target state="new">The source code for the complete reference application can be downloaded <bpt id="p1">[</bpt>here<ept id="p1">](https://github.com/Azure/azure-documentdb-node/tree/master/tutorial/todo)</ept>.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5815dec0ebc98f3b533659391a9b8088c6b5da34</xliffext:olfilehash>
  </header>
</xliff>