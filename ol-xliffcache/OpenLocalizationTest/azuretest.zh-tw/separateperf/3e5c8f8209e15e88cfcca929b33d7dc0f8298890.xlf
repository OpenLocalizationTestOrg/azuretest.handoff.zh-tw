<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The previous example contacts both the identity provider and the mobile service every time the app starts.</source>
          <target state="new">The previous example contacts both the identity provider and the mobile service every time the app starts.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Instead, you can cache the authorization token and try to use it first.</source>
          <target state="new">Instead, you can cache the authorization token and try to use it first.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The recommended way to encrypt and store authentication tokens on an iOS client is use the iOS Keychain.</source>
          <target state="new">The recommended way to encrypt and store authentication tokens on an iOS client is use the iOS Keychain.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>We'll use <bpt id="p1">[</bpt>SSKeychain<ept id="p1">](https://github.com/soffes/sskeychain)</ept> -- a simple wrapper around the iOS Keychain.</source>
          <target state="new">We'll use <bpt id="p1">[</bpt>SSKeychain<ept id="p1">](https://github.com/soffes/sskeychain)</ept> -- a simple wrapper around the iOS Keychain.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Follow the instructions on the SSKeychain page and add it to your project.</source>
          <target state="new">Follow the instructions on the SSKeychain page and add it to your project.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Verify that the <bpt id="p1">**</bpt>Enable Modules<ept id="p1">**</ept> setting is enabled in the project's <bpt id="p2">**</bpt>Build Settings<ept id="p2">**</ept> (section <bpt id="p3">**</bpt>Apple LLVM - Languages - Modules<ept id="p3">**</ept>.)</source>
          <target state="new">Verify that the <bpt id="p1">**</bpt>Enable Modules<ept id="p1">**</ept> setting is enabled in the project's <bpt id="p2">**</bpt>Build Settings<ept id="p2">**</ept> (section <bpt id="p3">**</bpt>Apple LLVM - Languages - Modules<ept id="p3">**</ept>.)</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt>QSTodoListViewController.m<ept id="p1">**</ept> and add the following code:</source>
          <target state="new">Open <bpt id="p1">**</bpt>QSTodoListViewController.m<ept id="p1">**</ept> and add the following code:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`loginAndGetData`</ph>, modify  <ph id="ph2">`loginWithProvider:controller:animated:completion:`</ph>'s completion block.</source>
          <target state="new">In <ph id="ph1">`loginAndGetData`</ph>, modify  <ph id="ph2">`loginWithProvider:controller:animated:completion:`</ph>'s completion block.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add the following line right before <ph id="ph1">`[self refresh]`</ph> to store the user ID and token properties:</source>
          <target state="new">Add the following line right before <ph id="ph1">`[self refresh]`</ph> to store the user ID and token properties:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Let's load the user ID and token when the app starts.</source>
          <target state="new">Let's load the user ID and token when the app starts.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`viewDidLoad`</ph> in <bpt id="p1">**</bpt>QSTodoListViewController.m<ept id="p1">**</ept>, add this right after<ph id="ph2">`self.todoService`</ph> is initialized.</source>
          <target state="new">In the <ph id="ph1">`viewDidLoad`</ph> in <bpt id="p1">**</bpt>QSTodoListViewController.m<ept id="p1">**</ept>, add this right after<ph id="ph2">`self.todoService`</ph> is initialized.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e5c8f8209e15e88cfcca929b33d7dc0f8298890</xliffext:olfilehash>
  </header>
</xliff>