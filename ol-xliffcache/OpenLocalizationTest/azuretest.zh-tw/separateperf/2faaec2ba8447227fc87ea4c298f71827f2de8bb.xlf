<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using the Azure AD Connect Synchronization Rules Editor</source>
          <target state="new">Using the Azure AD Connect Synchronization Rules Editor</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use the Azure AD Connect Synchronization Rules Editor.</source>
          <target state="new">Learn how to use the Azure AD Connect Synchronization Rules Editor.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure AD Connect Synchronization rules editor</source>
          <target state="new">Azure AD Connect Synchronization rules editor</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using the synchronization rules editor</source>
          <target state="new">Using the synchronization rules editor</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In Azure AD Connect, you can configure and fine-tune the object and attribute flow between Azure AD and your on-premises directories by configuring synchronization rules.</source>
          <target state="new">In Azure AD Connect, you can configure and fine-tune the object and attribute flow between Azure AD and your on-premises directories by configuring synchronization rules.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A Synchronization Rule is a configuration object with a set of attributes flowing when a condition is satisfied.</source>
          <target state="new">A Synchronization Rule is a configuration object with a set of attributes flowing when a condition is satisfied.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It is also used to describe how an object in a connector space is related to an object in the metaverse, known as join or match.</source>
          <target state="new">It is also used to describe how an object in a connector space is related to an object in the metaverse, known as join or match.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Synchronization Rules have a precedence indicating how they relate to each other.</source>
          <target state="new">The Synchronization Rules have a precedence indicating how they relate to each other.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A Synchronization Rule with a lower numeric value in precedence has a higher precedence and in case of an attribute flow conflict, higher precedence will win the conflict resolution.Synchronization rules can be configured using the Synchronization Rules Editor.</source>
          <target state="new">A Synchronization Rule with a lower numeric value in precedence has a higher precedence and in case of an attribute flow conflict, higher precedence will win the conflict resolution.Synchronization rules can be configured using the Synchronization Rules Editor.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As an example we will look at the Synchronization Rule “In from AD – User AccountEnabled”.</source>
          <target state="new">As an example we will look at the Synchronization Rule “In from AD – User AccountEnabled”.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>We will mark this line in the SRE and select Edit.A Synchronization Rule has four configuration sections: Description, Scoping filter, Join rules, and Transformations.</source>
          <target state="new">We will mark this line in the SRE and select Edit.A Synchronization Rule has four configuration sections: Description, Scoping filter, Join rules, and Transformations.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The first section provides basic information such as a name and description.</source>
          <target state="new">The first section provides basic information such as a name and description.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Join Rule</source>
          <target state="new">Join Rule</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>We also find information about which connected system this rule is related to, which object type in the connected system it applies to, and the metaverse object type.</source>
          <target state="new">We also find information about which connected system this rule is related to, which object type in the connected system it applies to, and the metaverse object type.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The metaverse object type is always person regardless if the source object type is a user, iNetOrgPerson, or contact.</source>
          <target state="new">The metaverse object type is always person regardless if the source object type is a user, iNetOrgPerson, or contact.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The metaverse object type should never change so it is created as a generic type.</source>
          <target state="new">The metaverse object type should never change so it is created as a generic type.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Link Type can be set to Join, StickyJoin, or Provision.</source>
          <target state="new">The Link Type can be set to Join, StickyJoin, or Provision.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This setting works together with the Join Rules section and we will cover this later.</source>
          <target state="new">This setting works together with the Join Rules section and we will cover this later.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Scoping Filter</source>
          <target state="new">Scoping Filter</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The Scoping Filter section is used to configure when a Synchronization Rule should apply.</source>
          <target state="new">The Scoping Filter section is used to configure when a Synchronization Rule should apply.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Since the name of the Synchronization Rule we are looking at indicates it should only be applied for enabled users, the scope is configured so the AD attribute userAccountControl must not have the bit 2 set.</source>
          <target state="new">Since the name of the Synchronization Rule we are looking at indicates it should only be applied for enabled users, the scope is configured so the AD attribute userAccountControl must not have the bit 2 set.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When we find a user in AD we will apply this rule if userAccountControl is set to the decimal value 512 (enabled normal user) but it will not apply if the user we find has userAccountControl set to 514 (disabled normal user).</source>
          <target state="new">When we find a user in AD we will apply this rule if userAccountControl is set to the decimal value 512 (enabled normal user) but it will not apply if the user we find has userAccountControl set to 514 (disabled normal user).</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Join Rule</source>
          <target state="new">Join Rule</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The scoping filter has Groups and Clauses which can be nested.</source>
          <target state="new">The scoping filter has Groups and Clauses which can be nested.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>All clauses inside a group must be satisfied for a Synchronization Rule to apply.</source>
          <target state="new">All clauses inside a group must be satisfied for a Synchronization Rule to apply.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When multiple groups are defined then at least one group must be satisfied for the rule to apply.</source>
          <target state="new">When multiple groups are defined then at least one group must be satisfied for the rule to apply.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>I.e.</source>
          <target state="new">I.e.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>a logical OR is evaluated between groups and a logical AND is evaluated inside a group.</source>
          <target state="new">a logical OR is evaluated between groups and a logical AND is evaluated inside a group.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An example of this can be found in the outbound Synchronization Rule Out to AAD – Group Join, shown below.</source>
          <target state="new">An example of this can be found in the outbound Synchronization Rule Out to AAD – Group Join, shown below.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>There are two synchronization filter groups, one for security groups (securityEnabled EQUAL True) and one for distribution groups (securityEnabled EQUAL False).</source>
          <target state="new">There are two synchronization filter groups, one for security groups (securityEnabled EQUAL True) and one for distribution groups (securityEnabled EQUAL False).</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Join Rule</source>
          <target state="new">Join Rule</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This rule is used to define which Groups should be provisioned to AAD.</source>
          <target state="new">This rule is used to define which Groups should be provisioned to AAD.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Distribution Groups must be mail enabled to be synchronized with AAD, but for security groups this is not required.</source>
          <target state="new">Distribution Groups must be mail enabled to be synchronized with AAD, but for security groups this is not required.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>As you can also see, a lot of additional attributes are evaluated as well.</source>
          <target state="new">As you can also see, a lot of additional attributes are evaluated as well.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Join Rules</source>
          <target state="new">Join Rules</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The third section is used to configure how objects in the connector space relate to objects in the metaverse.</source>
          <target state="new">The third section is used to configure how objects in the connector space relate to objects in the metaverse.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The rule we have looked at earlier does not have any configuration for Join Rules, so instead we are going to look at In from AD – User Join.</source>
          <target state="new">The rule we have looked at earlier does not have any configuration for Join Rules, so instead we are going to look at In from AD – User Join.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Join Rule</source>
          <target state="new">Join Rule</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The content of the join rules will depend on the matching option selected in the installation wizard.</source>
          <target state="new">The content of the join rules will depend on the matching option selected in the installation wizard.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For an inbound rule the evaluation starts with an object in the source connector space and each group in join rules is evaluated in sequence.</source>
          <target state="new">For an inbound rule the evaluation starts with an object in the source connector space and each group in join rules is evaluated in sequence.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If a source object is evaluated to match exactly one object in the metaverse using one of the join rules, the objects are joined together.</source>
          <target state="new">If a source object is evaluated to match exactly one object in the metaverse using one of the join rules, the objects are joined together.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If all rules have been evaluated and there is no match, then the Link Type on the description page is used.</source>
          <target state="new">If all rules have been evaluated and there is no match, then the Link Type on the description page is used.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If this setting is set to Provision then a new object is created in the target, the metaverse.</source>
          <target state="new">If this setting is set to Provision then a new object is created in the target, the metaverse.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To provision a new object to the metaverse is also known as to project an object to the metaverse.</source>
          <target state="new">To provision a new object to the metaverse is also known as to project an object to the metaverse.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The join rules are only evaluated once.</source>
          <target state="new">The join rules are only evaluated once.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When a connector space object and a metaverse object are joined together, they will remain joined as long as the scope of the Synchronization Rule is still satisfied.</source>
          <target state="new">When a connector space object and a metaverse object are joined together, they will remain joined as long as the scope of the Synchronization Rule is still satisfied.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When evaluating Synchronization Rules only one Synchronization Rule with join rules defined must be in scope.</source>
          <target state="new">When evaluating Synchronization Rules only one Synchronization Rule with join rules defined must be in scope.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If multiple Synchronization Rules with join rules are found for one object, an error is thrown.</source>
          <target state="new">If multiple Synchronization Rules with join rules are found for one object, an error is thrown.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For this reason the best practice is to have only one Synchronization Rule with join defined when multiple Synchronization Rules are in scope for an object.</source>
          <target state="new">For this reason the best practice is to have only one Synchronization Rule with join defined when multiple Synchronization Rules are in scope for an object.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In the out-of-box configuration for Azure AD Connect these rules can be found by looking at the name and find those with the word Join at the end of the name.</source>
          <target state="new">In the out-of-box configuration for Azure AD Connect these rules can be found by looking at the name and find those with the word Join at the end of the name.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A Synchronization Rule without any join rules defined will apply the attribute flows if another Synchronization Rule joined the objects together or provisioned a new object in the target.</source>
          <target state="new">A Synchronization Rule without any join rules defined will apply the attribute flows if another Synchronization Rule joined the objects together or provisioned a new object in the target.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Transformations</source>
          <target state="new">Transformations</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The transformation section defines all attribute flows which will apply to the target object when the objects are joined and the scope filter is satisfied.</source>
          <target state="new">The transformation section defines all attribute flows which will apply to the target object when the objects are joined and the scope filter is satisfied.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Going back to our In from AD – User AccountEnabled Synchronization Rule we will find the following transformations:</source>
          <target state="new">Going back to our In from AD – User AccountEnabled Synchronization Rule we will find the following transformations:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Join Rule</source>
          <target state="new">Join Rule</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To put this in context, in an Account-Resource forest deployment we expect to find an enabled account in the account forest and a disabled account in the resource forest with Exchange and Lync settings.</source>
          <target state="new">To put this in context, in an Account-Resource forest deployment we expect to find an enabled account in the account forest and a disabled account in the resource forest with Exchange and Lync settings.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The Synchronization Rule we are looking at contains the attributes required for login and we want these to flow from the forest where we found an enabled account.</source>
          <target state="new">The Synchronization Rule we are looking at contains the attributes required for login and we want these to flow from the forest where we found an enabled account.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>All these attribute flows are put together in one Synchronization Rule.A transformation can have different types: Constant, Direct, and Expression.</source>
          <target state="new">All these attribute flows are put together in one Synchronization Rule.A transformation can have different types: Constant, Direct, and Expression.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A constant flow will always flow a particular value, in the case above we will always set the value True in the metaverse attribute named accountEnabled.</source>
          <target state="new">A constant flow will always flow a particular value, in the case above we will always set the value True in the metaverse attribute named accountEnabled.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A Direct flow will flow the value of the attribute in the source to the target attribute.</source>
          <target state="new">A Direct flow will flow the value of the attribute in the source to the target attribute.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The third flow type is Expression and it allows for more advanced configurations.</source>
          <target state="new">The third flow type is Expression and it allows for more advanced configurations.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The expression language is VBA (Visual Basic for Applications) so user with experience of Microsoft Office or VBScript will recognize the format.</source>
          <target state="new">The expression language is VBA (Visual Basic for Applications) so user with experience of Microsoft Office or VBScript will recognize the format.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Attributes are enclosed in square brackets, [attributeName].</source>
          <target state="new">Attributes are enclosed in square brackets, [attributeName].</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Attribute names and function names are case sensitive, but the Synchronization Rules Editor will evaluate the expressions and provide a warning if the expression is not valid.All expressions are expressed on a single line with nested functions.</source>
          <target state="new">Attribute names and function names are case sensitive, but the Synchronization Rules Editor will evaluate the expressions and provide a warning if the expression is not valid.All expressions are expressed on a single line with nested functions.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To show the power of the configuration language, here is the flow for pwdLastSet, but with additional comments inserted:</source>
          <target state="new">To show the power of the configuration language, here is the flow for pwdLastSet, but with additional comments inserted:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The topic of transformation is large and it provides a large portion of the custom configuration possible with Azure AD Connect.</source>
          <target state="new">The topic of transformation is large and it provides a large portion of the custom configuration possible with Azure AD Connect.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Custom configuration will not be covered in this overview document but we will look at some additional attribute flows later in this document.</source>
          <target state="new">Custom configuration will not be covered in this overview document but we will look at some additional attribute flows later in this document.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2faaec2ba8447227fc87ea4c298f71827f2de8bb</xliffext:olfilehash>
  </header>
</xliff>