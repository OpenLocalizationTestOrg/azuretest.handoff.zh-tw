<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Efficient list queries in Azure Batch | Microsoft Azure</source>
          <target state="new">Efficient list queries in Azure Batch | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn to reduce the amount of data returned and increase performance when querying Azure Batch pools, jobs, tasks, compute nodes, and more.</source>
          <target state="new">Learn to reduce the amount of data returned and increase performance when querying Azure Batch pools, jobs, tasks, compute nodes, and more.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Efficient Batch list queries</source>
          <target state="new">Efficient Batch list queries</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure Batch is big compute, and in a production environment, entities like jobs, tasks, and compute nodes can number in the thousands.</source>
          <target state="new">Azure Batch is big compute, and in a production environment, entities like jobs, tasks, and compute nodes can number in the thousands.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Obtaining information on these items can therefore generate a large amount of data that must be transferred on each query.</source>
          <target state="new">Obtaining information on these items can therefore generate a large amount of data that must be transferred on each query.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Limiting the number of items and type of information returned for each will increase the speed of your queries and therefore the performance of your application.</source>
          <target state="new">Limiting the number of items and type of information returned for each will increase the speed of your queries and therefore the performance of your application.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following <bpt id="p1">[</bpt>Batch .NET<ept id="p1">](https://msdn.microsoft.com/library/azure/mt348682.aspx)</ept> API methods are examples of operations that virtually every application using Azure Batch must perform, often frequently:</source>
          <target state="new">The following <bpt id="p1">[</bpt>Batch .NET<ept id="p1">](https://msdn.microsoft.com/library/azure/mt348682.aspx)</ept> API methods are examples of operations that virtually every application using Azure Batch must perform, often frequently:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ListTasks</source>
          <target state="new">ListTasks</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>ListJobs</source>
          <target state="new">ListJobs</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>ListPools</source>
          <target state="new">ListPools</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>ListComputeNodes</source>
          <target state="new">ListComputeNodes</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Monitoring is a common use case--determining the capacity and status of a pool requires that all compute nodes (VMs) in a pool be queried, for example.</source>
          <target state="new">Monitoring is a common use case--determining the capacity and status of a pool requires that all compute nodes (VMs) in a pool be queried, for example.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Another example is to query a job's tasks to determine if any of those tasks are still queued.</source>
          <target state="new">Another example is to query a job's tasks to determine if any of those tasks are still queued.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In some cases, a rich set of data is required, but in others, only a count of the total number of items or a collection of items that are in a certain state is required.</source>
          <target state="new">In some cases, a rich set of data is required, but in others, only a count of the total number of items or a collection of items that are in a certain state is required.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It is important to note that both the number of items returned and the amount of data required to represent those items can be very large.</source>
          <target state="new">It is important to note that both the number of items returned and the amount of data required to represent those items can be very large.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Simply querying for lots of items resulting in large responses can lead to a number of problems:</source>
          <target state="new">Simply querying for lots of items resulting in large responses can lead to a number of problems:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Batch API response times can become too slow.</source>
          <target state="new">Batch API response times can become too slow.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The larger the number of items, the longer the query time required by the Batch service.</source>
          <target state="new">The larger the number of items, the longer the query time required by the Batch service.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Large numbers of items have to be broken into chunks, and therefore the client library may need to make multiple API calls to the service to obtain all of the items for a single list.</source>
          <target state="new">Large numbers of items have to be broken into chunks, and therefore the client library may need to make multiple API calls to the service to obtain all of the items for a single list.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>API processing by the application calling Batch will take longer when there are more items to process.</source>
          <target state="new">API processing by the application calling Batch will take longer when there are more items to process.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>More memory will be consumed by the application calling Batch when there are more and/or larger items.</source>
          <target state="new">More memory will be consumed by the application calling Batch when there are more and/or larger items.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>More and/or larger items will lead to increased network traffic.</source>
          <target state="new">More and/or larger items will lead to increased network traffic.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This will take longer to transfer and, depending on application architecture, may result in increased network charges for data transferred outside of the region of the Batch account.</source>
          <target state="new">This will take longer to transfer and, depending on application architecture, may result in increased network charges for data transferred outside of the region of the Batch account.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For all Batch APIs the following apply:</source>
          <target state="new">For all Batch APIs the following apply:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Each property name is a string that maps to the property of the object</source>
          <target state="new">Each property name is a string that maps to the property of the object</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>All property names are case sensitive, but property values are case insensitive</source>
          <target state="new">All property names are case sensitive, but property values are case insensitive</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Property names and casing are as the elements appear in the Batch REST API</source>
          <target state="new">Property names and casing are as the elements appear in the Batch REST API</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Date/time strings may be specified in one of two formats, and must be preceded with DateTime</source>
          <target state="new">Date/time strings may be specified in one of two formats, and must be preceded with DateTime</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>W3CDTF (e.g. <bpt id="p1">*</bpt>creationTime gt DateTime'2011-05-08T08:49:37Z'<ept id="p1">*</ept>)</source>
          <target state="new">W3CDTF (e.g. <bpt id="p1">*</bpt>creationTime gt DateTime'2011-05-08T08:49:37Z'<ept id="p1">*</ept>)</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>RFC1123 (e.g. <bpt id="p1">*</bpt>creationTime gt DateTime'Sun, 08 May 2011 08:49:37 GMT'<ept id="p1">*</ept>)</source>
          <target state="new">RFC1123 (e.g. <bpt id="p1">*</bpt>creationTime gt DateTime'Sun, 08 May 2011 08:49:37 GMT'<ept id="p1">*</ept>)</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Boolean strings are either "true" or "false"</source>
          <target state="new">Boolean strings are either "true" or "false"</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Specifying an invalid property or operator will result in a "400 (Bad Request)" error</source>
          <target state="new">Specifying an invalid property or operator will result in a "400 (Bad Request)" error</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Efficient querying in Batch .NET</source>
          <target state="new">Efficient querying in Batch .NET</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Batch .NET API provides the ability to reduce both the number of items returned in a list and the amount of information returned for each item by specifying the <bpt id="p1">[</bpt>DetailLevel<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.detaillevel.aspx)</ept> of a query.</source>
          <target state="new">The Batch .NET API provides the ability to reduce both the number of items returned in a list and the amount of information returned for each item by specifying the <bpt id="p1">[</bpt>DetailLevel<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.detaillevel.aspx)</ept> of a query.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>DetailLevel is an abstract base class, and an <bpt id="p1">[</bpt>ODATADetailLevel<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.aspx)</ept> object actually needs to be created and passed as the parameter to appropriate methods.</source>
          <target state="new">DetailLevel is an abstract base class, and an <bpt id="p1">[</bpt>ODATADetailLevel<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.aspx)</ept> object actually needs to be created and passed as the parameter to appropriate methods.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An ODataDetailLevel object has three public string properties that can be specified either in the constructor or set directly:</source>
          <target state="new">An ODataDetailLevel object has three public string properties that can be specified either in the constructor or set directly:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>FilterClause<ept id="p1">](#filter)</ept> – filter and potentially reduce the number of returned items</source>
          <target state="new"><bpt id="p1">[</bpt>FilterClause<ept id="p1">](#filter)</ept> – filter and potentially reduce the number of returned items</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SelectClause<ept id="p1">](#select)</ept> – specify a subset of property values to be returned for each item, reducing the item and response size</source>
          <target state="new"><bpt id="p1">[</bpt>SelectClause<ept id="p1">](#select)</ept> – specify a subset of property values to be returned for each item, reducing the item and response size</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ExpandClause<ept id="p1">](#expand)</ept> – return all required data in one call as opposed to multiple calls</source>
          <target state="new"><bpt id="p1">[</bpt>ExpandClause<ept id="p1">](#expand)</ept> – return all required data in one call as opposed to multiple calls</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> An instance of DetailLevel configured with Select and Expand clauses can also be passed to appropriate Get methods such as <bpt id="p1">[</bpt>PoolOperations.GetPool<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.getpool.aspx)</ept> to limit the amount of data returned.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> An instance of DetailLevel configured with Select and Expand clauses can also be passed to appropriate Get methods such as <bpt id="p1">[</bpt>PoolOperations.GetPool<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.getpool.aspx)</ept> to limit the amount of data returned.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="filter"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> FilterClause</source>
          <target state="new"><ph id="ph1">&lt;a id="filter"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> FilterClause</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The number of items returned can be reduced by a filter string.</source>
          <target state="new">The number of items returned can be reduced by a filter string.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>One or more property values with qualifiers can be specified to ensure only the items relevant to your query are returned.</source>
          <target state="new">One or more property values with qualifiers can be specified to ensure only the items relevant to your query are returned.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, perhaps you wish to list only the running tasks for a job, or list only the compute nodes that are ready to run tasks.</source>
          <target state="new">For example, perhaps you wish to list only the running tasks for a job, or list only the compute nodes that are ready to run tasks.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>FilterClause<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.filterclause.aspx)</ept> is a string consisting of one or more expressions, with an expression consisting of a <bpt id="p2">*</bpt>property name<ept id="p2">*</ept>, <bpt id="p3">*</bpt>operator<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>value<ept id="p4">*</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>FilterClause<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.filterclause.aspx)</ept> is a string consisting of one or more expressions, with an expression consisting of a <bpt id="p2">*</bpt>property name<ept id="p2">*</ept>, <bpt id="p3">*</bpt>operator<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>value<ept id="p4">*</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The properties that can be specified are specific to each API call, as are the operators supported for each property.</source>
          <target state="new">The properties that can be specified are specific to each API call, as are the operators supported for each property.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Multiple expressions can be combined using the logical operators <bpt id="p1">**</bpt>and<ept id="p1">**</ept> and <bpt id="p2">**</bpt>or<ept id="p2">**</ept>.</source>
          <target state="new">Multiple expressions can be combined using the logical operators <bpt id="p1">**</bpt>and<ept id="p1">**</ept> and <bpt id="p2">**</bpt>or<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, this filter string returns only running tasks whose <bpt id="p1">*</bpt>displayName<ept id="p1">*</ept> starts with "MyTask":</source>
          <target state="new">For example, this filter string returns only running tasks whose <bpt id="p1">*</bpt>displayName<ept id="p1">*</ept> starts with "MyTask":</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Each Batch REST API article below contains a table specifying the supported properties and operations on those properties for the different list operations.</source>
          <target state="new">Each Batch REST API article below contains a table specifying the supported properties and operations on those properties for the different list operations.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>List the pools in an account</source>
          <target state="new">List the pools in an account</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>List the compute nodes in a pool</source>
          <target state="new">List the compute nodes in a pool</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>List the jobs in an account</source>
          <target state="new">List the jobs in an account</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>List the status of the job preparation and job release tasks for a job</source>
          <target state="new">List the status of the job preparation and job release tasks for a job</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>List the job schedules in an account</source>
          <target state="new">List the job schedules in an account</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>List the jobs associated with a job schedule</source>
          <target state="new">List the jobs associated with a job schedule</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>List the tasks associated with a job</source>
          <target state="new">List the tasks associated with a job</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>List the files associated with a task</source>
          <target state="new">List the files associated with a task</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>List the certificates in an account</source>
          <target state="new">List the certificates in an account</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>List the files on a node</source>
          <target state="new">List the files on a node</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> When specifying properties in any of the three clause types, ensure that the property name and case matches that of their Batch REST API element counterparts.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> When specifying properties in any of the three clause types, ensure that the property name and case matches that of their Batch REST API element counterparts.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, when working with the .NET <bpt id="p1">[</bpt>CloudTask<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask)</ept>, you must specify <bpt id="p2">**</bpt>state<ept id="p2">**</ept> instead of <bpt id="p3">**</bpt>State<ept id="p3">**</ept> even though the .NET property is <bpt id="p4">[</bpt>CloudTask.State<ept id="p4">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.state)</ept>.</source>
          <target state="new">For example, when working with the .NET <bpt id="p1">[</bpt>CloudTask<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask)</ept>, you must specify <bpt id="p2">**</bpt>state<ept id="p2">**</ept> instead of <bpt id="p3">**</bpt>State<ept id="p3">**</ept> even though the .NET property is <bpt id="p4">[</bpt>CloudTask.State<ept id="p4">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.state)</ept>.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To verify proper name and case for the <bpt id="p1">**</bpt>state<ept id="p1">**</ept> property, for example, you'd check the element name in <bpt id="p2">[</bpt>Get information about a task<ept id="p2">](https://msdn.microsoft.com/library/azure/dn820133.aspx)</ept> in the Batch REST API documentation.</source>
          <target state="new">To verify proper name and case for the <bpt id="p1">**</bpt>state<ept id="p1">**</ept> property, for example, you'd check the element name in <bpt id="p2">[</bpt>Get information about a task<ept id="p2">](https://msdn.microsoft.com/library/azure/dn820133.aspx)</ept> in the Batch REST API documentation.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="select"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> SelectClause</source>
          <target state="new"><ph id="ph1">&lt;a id="select"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> SelectClause</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The property values that are returned for each item can be limited by using a select string.</source>
          <target state="new">The property values that are returned for each item can be limited by using a select string.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A list of properties for an item can be specified, and then only those property values are returned.</source>
          <target state="new">A list of properties for an item can be specified, and then only those property values are returned.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>SelectClause<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.selectclause.aspx)</ept> is a string consisting of a comma-separated list of property names.</source>
          <target state="new">A <bpt id="p1">[</bpt>SelectClause<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.selectclause.aspx)</ept> is a string consisting of a comma-separated list of property names.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Any combination of properties available for an item returned by a list operation may be specified.</source>
          <target state="new">Any combination of properties available for an item returned by a list operation may be specified.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="expand"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> ExpandClause</source>
          <target state="new"><ph id="ph1">&lt;a id="expand"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> ExpandClause</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The number of API calls can be reduced with an expand clause.</source>
          <target state="new">The number of API calls can be reduced with an expand clause.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>More detailed information for each list item can be obtained with a single API call as opposed to first obtaining the list and then iterating over the list, making a call for each item in the list.</source>
          <target state="new">More detailed information for each list item can be obtained with a single API call as opposed to first obtaining the list and then iterating over the list, making a call for each item in the list.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">[</bpt>ExpandClause<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.expandclause.aspx)</ept> is similar to the select clause in that it controls whether certain data is returned in the results.</source>
          <target state="new">An <bpt id="p1">[</bpt>ExpandClause<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.expandclause.aspx)</ept> is similar to the select clause in that it controls whether certain data is returned in the results.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The expand clause is supported only for job list, task list, and pool list, and currently only supports statistics information.</source>
          <target state="new">The expand clause is supported only for job list, task list, and pool list, and currently only supports statistics information.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When all properties are required and no select clause has been specified, then the expand clause must be used to get statistics information.</source>
          <target state="new">When all properties are required and no select clause has been specified, then the expand clause must be used to get statistics information.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If a select clause is used to obtain a subset of properties, then "stats" can also be specified in the select clause and the expand clause may be left null.</source>
          <target state="new">If a select clause is used to obtain a subset of properties, then "stats" can also be specified in the select clause and the expand clause may be left null.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Efficient query example</source>
          <target state="new">Efficient query example</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Below you'll find a code snippet that uses the Batch .NET API to efficiently query the Batch service for the statistics of a specific set of pools.</source>
          <target state="new">Below you'll find a code snippet that uses the Batch .NET API to efficiently query the Batch service for the statistics of a specific set of pools.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In this scenario, the Batch user has both test and production pools, with their test pool IDs prefixed with "test" and production pool IDs prefixed with "prod".</source>
          <target state="new">In this scenario, the Batch user has both test and production pools, with their test pool IDs prefixed with "test" and production pool IDs prefixed with "prod".</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In the snippet, <bpt id="p1">*</bpt>myBatchClient<ept id="p1">*</ept> is a properly initialized instance of <bpt id="p2">[</bpt>BatchClient<ept id="p2">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient)</ept>.</source>
          <target state="new">In the snippet, <bpt id="p1">*</bpt>myBatchClient<ept id="p1">*</ept> is a properly initialized instance of <bpt id="p2">[</bpt>BatchClient<ept id="p2">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient)</ept>.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>It is recommended that you <bpt id="p1">*</bpt>always<ept id="p1">*</ept> use filter and select clauses for your list API calls to ensure maximum efficiency and the best performance for your application.</source>
          <target state="new">It is recommended that you <bpt id="p1">*</bpt>always<ept id="p1">*</ept> use filter and select clauses for your list API calls to ensure maximum efficiency and the best performance for your application.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If you haven't already, be sure to check out the Batch API documentation relevant to your development scenario</source>
          <target state="new">If you haven't already, be sure to check out the Batch API documentation relevant to your development scenario</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Batch REST</source>
          <target state="new">Batch REST</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Batch .NET</source>
          <target state="new">Batch .NET</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Grab the <bpt id="p1">[</bpt>Azure Batch samples<ept id="p1">](https://github.com/Azure/azure-batch-samples)</ept> on GitHub and dig into the code</source>
          <target state="new">Grab the <bpt id="p1">[</bpt>Azure Batch samples<ept id="p1">](https://github.com/Azure/azure-batch-samples)</ept> on GitHub and dig into the code</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">433815756dca6969b4f13f37882258285437e0fd</xliffext:olfilehash>
  </header>
</xliff>