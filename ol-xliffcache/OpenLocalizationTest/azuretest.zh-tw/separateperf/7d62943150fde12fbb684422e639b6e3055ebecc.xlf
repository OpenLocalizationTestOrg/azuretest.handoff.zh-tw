<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adding a shard using elastic database tools</source>
          <target state="new">Adding a shard using elastic database tools</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to use Elastic Scale APIs to add new shards to a shard set.</source>
          <target state="new">How to use Elastic Scale APIs to add new shards to a shard set.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Adding a shard using Elastic Database tools</source>
          <target state="new">Adding a shard using Elastic Database tools</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To add a shard for a new range or key</source>
          <target state="new">To add a shard for a new range or key</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Applications often need to simply add new shards to handle data that is expected from new keys or key ranges, for a shard map that already exists.</source>
          <target state="new">Applications often need to simply add new shards to handle data that is expected from new keys or key ranges, for a shard map that already exists.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, an application sharded by Tenant ID may need to provision a new shard for a new tenant, or data sharded monthly may need a new shard provisioned before the start of each new month.</source>
          <target state="new">For example, an application sharded by Tenant ID may need to provision a new shard for a new tenant, or data sharded monthly may need a new shard provisioned before the start of each new month.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If the new range of key values is not already part of an existing mapping, it is very simple to add the new shard and associate the new key or range to that shard.</source>
          <target state="new">If the new range of key values is not already part of an existing mapping, it is very simple to add the new shard and associate the new key or range to that shard.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Example:  adding a shard and its range to an existing shard map</source>
          <target state="new">Example:  adding a shard and its range to an existing shard map</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the sample below, a database named <bpt id="p1">**</bpt>sample_shard_2<ept id="p1">**</ept> and all necessary schema objects inside of it have been created to hold range [300, 400).</source>
          <target state="new">In the sample below, a database named <bpt id="p1">**</bpt>sample_shard_2<ept id="p1">**</ept> and all necessary schema objects inside of it have been created to hold range [300, 400).</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To add a shard for an empty part of an existing range</source>
          <target state="new">To add a shard for an empty part of an existing range</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In some circumstances, you may have already mapped a range to a shard and partially filled it with data, but you now want upcoming data to be directed to a different shard.</source>
          <target state="new">In some circumstances, you may have already mapped a range to a shard and partially filled it with data, but you now want upcoming data to be directed to a different shard.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, you shard by day range and have already allocated 50 days to a shard, but on day 24, you want future data to land in a different shard.</source>
          <target state="new">For example, you shard by day range and have already allocated 50 days to a shard, but on day 24, you want future data to land in a different shard.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The elastic database <bpt id="p1">[</bpt>split-merge tool<ept id="p1">](sql-database-elastic-scale-overview-split-and-merge.md)</ept> can perform this operation, but if data movement is not necessary (for example, data for the range of days [25, 50), i.e., day 25 inclusive to 50 exclusive, does not yet exist) you can perform this entirely using the Shard Map Management APIs directly.</source>
          <target state="new">The elastic database <bpt id="p1">[</bpt>split-merge tool<ept id="p1">](sql-database-elastic-scale-overview-split-and-merge.md)</ept> can perform this operation, but if data movement is not necessary (for example, data for the range of days [25, 50), i.e., day 25 inclusive to 50 exclusive, does not yet exist) you can perform this entirely using the Shard Map Management APIs directly.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example: splitting a range and assigning the empty portion to a newly-added shard</source>
          <target state="new">Example: splitting a range and assigning the empty portion to a newly-added shard</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A database named “sample_shard_2” and all necessary schema objects inside of it have been created.</source>
          <target state="new">A database named “sample_shard_2” and all necessary schema objects inside of it have been created.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>:  Use this technique only if you are certain that the range for the updated mapping is empty.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>:  Use this technique only if you are certain that the range for the updated mapping is empty.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The methods above do not check data for the range being moved, so it is best to include checks in your code.</source>
          <target state="new">The methods above do not check data for the range being moved, so it is best to include checks in your code.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If rows exist in the range being moved, the actual data distribution will not match the updated shard map.</source>
          <target state="new">If rows exist in the range being moved, the actual data distribution will not match the updated shard map.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>split-merge tool<ept id="p1">](sql-database-elastic-scale-overview-split-and-merge.md)</ept> to perform the operation instead in these cases.</source>
          <target state="new">Use the <bpt id="p1">[</bpt>split-merge tool<ept id="p1">](sql-database-elastic-scale-overview-split-and-merge.md)</ept> to perform the operation instead in these cases.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d62943150fde12fbb684422e639b6e3055ebecc</xliffext:olfilehash>
  </header>
</xliff>