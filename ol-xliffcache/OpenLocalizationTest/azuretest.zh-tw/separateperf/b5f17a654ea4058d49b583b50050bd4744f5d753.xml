{
  "nodes": [
    {
      "content": "Use the Azure Storage Emulator for Development and Testing | Microsoft Azure",
      "pos": [
        28,
        104
      ]
    },
    {
      "content": "The Azure storage emulator provides a free local development environment for developing and testing against Azure Storage.",
      "pos": [
        124,
        246
      ]
    },
    {
      "content": "Learn about the storage emulator, including how requests are authenticated, how to connect to the emulator from your application, and how to use the command-line tool.",
      "pos": [
        247,
        414
      ]
    },
    {
      "content": "Use the Azure Storage Emulator for Development and Testing",
      "pos": [
        712,
        770
      ]
    },
    {
      "content": "Overview",
      "pos": [
        775,
        783
      ]
    },
    {
      "content": "The Microsoft Azure storage emulator provides a local environment that emulates the Azure Blob, Queue, and Table services for development purposes.",
      "pos": [
        785,
        932
      ]
    },
    {
      "content": "Using the storage emulator, you can test your application against the storage services locally, without creating an Azure subscription or incurring any costs.",
      "pos": [
        933,
        1091
      ]
    },
    {
      "content": "When you're satisfied with how your application is working in the emulator, you can switch to using an Azure storage account in the cloud.",
      "pos": [
        1092,
        1230
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The storage emulator is available as part of the <bpt id=\"p1\">[</bpt>Microsoft Azure SDK<ept id=\"p1\">](https://azure.microsoft.com/downloads/)</ept>.",
      "pos": [
        1234,
        1358
      ]
    },
    {
      "content": "You can also install the storage emulator as a standalone package.",
      "pos": [
        1359,
        1425
      ]
    },
    {
      "content": "To configure the storage emulator, you must have administrative privileges on the computer.",
      "pos": [
        1426,
        1517
      ]
    },
    {
      "content": "Note that data created in one version of the storage emulator is not guaranteed to be accessible when using a different version.",
      "pos": [
        1524,
        1652
      ]
    },
    {
      "content": "If you need to persist your data for the long term, it's recommended that you store that data in an Azure storage account, rather than in the storage emulator.",
      "pos": [
        1653,
        1812
      ]
    },
    {
      "content": "How the storage emulator works",
      "pos": [
        1817,
        1847
      ]
    },
    {
      "content": "The storage emulator uses a local Microsoft SQL Server instance and the local file system to emulate the Azure storage services.",
      "pos": [
        1850,
        1978
      ]
    },
    {
      "content": "By default, the storage emulator uses a database in Microsoft SQL Server 2012 Express LocalDB.",
      "pos": [
        1979,
        2073
      ]
    },
    {
      "content": "You can choose to configure the storage emulator to access a local instance of SQL Server instead of the LocalDB instance.",
      "pos": [
        2075,
        2197
      ]
    },
    {
      "content": "See <bpt id=\"p1\">[</bpt>Start and initialize the storage emulator<ept id=\"p1\">](#start-and-initialize-the-storage-emulator)</ept> below for more information.",
      "pos": [
        2198,
        2317
      ]
    },
    {
      "content": "You can install SQL Server Management Studio Express to manage your LocalDB installation.",
      "pos": [
        2319,
        2408
      ]
    },
    {
      "content": "The storage emulator connects to SQL Server or LocalDB using Windows authentication.",
      "pos": [
        2409,
        2493
      ]
    },
    {
      "content": "Some differences in functionality exist between the storage emulator and Azure storage services.",
      "pos": [
        2496,
        2592
      ]
    },
    {
      "content": "For more information about these differences, see <bpt id=\"p1\">[</bpt>Differences between the storage emulator and Azure Storage<ept id=\"p1\">](#differences-between-the-storage-emulator-and-azure-storage)</ept>.",
      "pos": [
        2593,
        2765
      ]
    },
    {
      "content": "Authenticating requests against the storage emulator",
      "pos": [
        2770,
        2822
      ]
    },
    {
      "content": "Just as with Azure Storage in the cloud, every request that you make against the storage emulator must be authenticated, unless it is an anonymous request.",
      "pos": [
        2824,
        2979
      ]
    },
    {
      "content": "You can authenticate requests against the storage emulator using Shared Key authentication or with a shared access signature (SAS).",
      "pos": [
        2980,
        3111
      ]
    },
    {
      "content": "Authentication with Shared Key credentials",
      "pos": [
        3117,
        3159
      ]
    },
    {
      "pos": [
        3285,
        3418
      ],
      "content": "For more details on connection strings, see <bpt id=\"p1\">[</bpt>Configure a Connection String to Azure Storage<ept id=\"p1\">](storage-configure-connection-string.md)</ept>."
    },
    {
      "content": "Authentication with a shared access signature",
      "pos": [
        3425,
        3470
      ]
    },
    {
      "content": "Some Azure storage client libraries, such as the Xamarin library, only support authentication with a shared access signature (SAS) token.",
      "pos": [
        3473,
        3610
      ]
    },
    {
      "content": "You will need to create this SAS token using a tool or application that supports Shared Key authentication.",
      "pos": [
        3611,
        3718
      ]
    },
    {
      "content": "An easy way to generate the SAS token is via Azure PowerShell:",
      "pos": [
        3719,
        3781
      ]
    },
    {
      "content": "Install Azure PowerShell if you haven't already.",
      "pos": [
        3786,
        3834
      ]
    },
    {
      "content": "Using the latest version of the Azure PowerShell cmdlets is recommended.",
      "pos": [
        3835,
        3907
      ]
    },
    {
      "content": "See <bpt id=\"p1\">[</bpt>How to install and configure Azure PowerShell<ept id=\"p1\">](../articles/powershell-install-configure.md#Install)</ept> for installation instructions.",
      "pos": [
        3908,
        4043
      ]
    },
    {
      "content": "Open Azure PowerShell and run the following commands.",
      "pos": [
        4048,
        4101
      ]
    },
    {
      "content": "Remember to replace <bpt id=\"p1\">*</bpt>ACCOUNT_NAME<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>ACCOUNT_KEY==<ept id=\"p2\">*</ept> with your own credentials.",
      "pos": [
        4102,
        4183
      ]
    },
    {
      "content": "Replace <bpt id=\"p1\">*</bpt>CONTAINER_NAME<ept id=\"p1\">*</ept> with a name of your choosing.",
      "pos": [
        4184,
        4238
      ]
    },
    {
      "content": "The resulting shared access signature URI for the new container should be similar to the following:",
      "pos": [
        4626,
        4725
      ]
    },
    {
      "content": "The shared access signature created with this example is valid for one day.",
      "pos": [
        4903,
        4978
      ]
    },
    {
      "content": "The signature grants full access (i.e. read, write, delete, list) to blobs within the container.",
      "pos": [
        4979,
        5075
      ]
    },
    {
      "pos": [
        5077,
        5237
      ],
      "content": "For more information on shared access signatures, see <bpt id=\"p1\">[</bpt>Shared Access Signatures: Understanding the SAS Model<ept id=\"p1\">](storage-dotnet-shared-access-signature-part-1.md)</ept>."
    },
    {
      "content": "Start and initialize the storage emulator",
      "pos": [
        5243,
        5284
      ]
    },
    {
      "content": "To start the Azure storage emulator, select the Start button or press the Windows key.",
      "pos": [
        5286,
        5372
      ]
    },
    {
      "content": "Begin typing <bpt id=\"p1\">**</bpt>Azure Storage Emulator<ept id=\"p1\">**</ept>, and select the emulator from the list of applications.",
      "pos": [
        5373,
        5468
      ]
    },
    {
      "content": "When the emulator is running, you'll see an icon in the Windows taskbar notification area.",
      "pos": [
        5471,
        5561
      ]
    },
    {
      "content": "When the storage emulator starts, a command-line window will appear.",
      "pos": [
        5563,
        5631
      ]
    },
    {
      "content": "You can use this command-line window to start and stop the storage emulator as well as clear data, get current status, and initialize the emulator.",
      "pos": [
        5632,
        5779
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>Storage Emulator Command-Line Tool Reference<ept id=\"p1\">](#storage-emulator-command-line-tool-reference)</ept>.",
      "pos": [
        5780,
        5900
      ]
    },
    {
      "content": "When the command line window is closed, the storage emulator continues to run.",
      "pos": [
        5902,
        5980
      ]
    },
    {
      "content": "To bring up the command line again, follow the steps above as if starting the storage emulator.",
      "pos": [
        5981,
        6076
      ]
    },
    {
      "content": "The first time you run the storage emulator, the local storage environment is initialized for you.",
      "pos": [
        6078,
        6176
      ]
    },
    {
      "content": "The initialization process creates a database in LocalDB and reserves HTTP ports for each local storage service.",
      "pos": [
        6177,
        6289
      ]
    },
    {
      "content": "The storage emulator is installed by default to the C:\\Program Files (x86)\\Microsoft SDKs\\Azure\\Storage Emulator directory.",
      "pos": [
        6292,
        6415
      ]
    },
    {
      "content": "Initialize the storage emulator to use a different SQL database",
      "pos": [
        6422,
        6485
      ]
    },
    {
      "content": "You can use the storage emulator command-line tool to initialize the storage emulator to point to a SQL database instance other than the default LocalDB instance.",
      "pos": [
        6487,
        6649
      ]
    },
    {
      "content": "Note that you must be running the command-line tool with administrative privileges to initialize the back-end database for the storage emulator:",
      "pos": [
        6650,
        6794
      ]
    },
    {
      "content": "Click the <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> button or press the <bpt id=\"p2\">**</bpt>Windows<ept id=\"p2\">**</ept> key.",
      "pos": [
        6799,
        6855
      ]
    },
    {
      "content": "Begin typing <ph id=\"ph1\">`Azure Storage Emulator`</ph> and select it when it appears to bring up the storage emulator command-line tool.",
      "pos": [
        6856,
        6975
      ]
    },
    {
      "content": "In the command prompt window, type the following command, where <ph id=\"ph1\">`&lt;SQLServerInstance&gt;`</ph> is the name of the SQL Server instance.",
      "pos": [
        6979,
        7104
      ]
    },
    {
      "content": "To use LocalDb, specify <ph id=\"ph1\">`(localdb)\\v11.0`</ph> as the SQL Server instance.",
      "pos": [
        7105,
        7174
      ]
    },
    {
      "content": "You can also use the following command, which directs the emulator to use the default SQL Server instance:",
      "pos": [
        7248,
        7354
      ]
    },
    {
      "content": "Or, you can use the following command, which re-initializes the database to the default LocalDB instance:",
      "pos": [
        7408,
        7513
      ]
    },
    {
      "pos": [
        7564,
        7705
      ],
      "content": "For more information about these commands, see <bpt id=\"p1\">[</bpt>Storage Emulator Command-Line Tool Reference<ept id=\"p1\">](#storage-emulator-command-line-tool-reference)</ept>."
    },
    {
      "content": "Addressing resources in the storage emulator",
      "pos": [
        7710,
        7754
      ]
    },
    {
      "content": "The service endpoints for the storage emulator are different from those of an Azure storage account.",
      "pos": [
        7756,
        7856
      ]
    },
    {
      "content": "The difference is due to the fact that the local computer does not perform domain name resolution, so the storage emulator endpoints require a local address rather than a domain name.",
      "pos": [
        7857,
        8040
      ]
    },
    {
      "content": "When you address a resource in an Azure storage account, you use the following scheme, where the account name is part of the URI host name, and the resource being addressed is part of the URI path:",
      "pos": [
        8042,
        8239
      ]
    },
    {
      "content": "For example, the following URI is a valid address for a blob in an Azure storage account:",
      "pos": [
        8324,
        8413
      ]
    },
    {
      "content": "In the storage emulator, because the local computer does not perform domain name resolution, the account name is part of the URI path instead of the host name.",
      "pos": [
        8483,
        8642
      ]
    },
    {
      "content": "You use the following scheme for a resource running in the storage emulator:",
      "pos": [
        8643,
        8719
      ]
    },
    {
      "content": "For example, the following address might be used for accessing a blob in the storage emulator:",
      "pos": [
        8795,
        8889
      ]
    },
    {
      "content": "The service endpoints for the storage emulator are:",
      "pos": [
        8952,
        9003
      ]
    },
    {
      "content": "Addressing the account secondary with RA-GRS",
      "pos": [
        9228,
        9272
      ]
    },
    {
      "content": "Beginning with version 3.1, the storage emulator account supports read-access geo-redundant replication (RA-GRS).",
      "pos": [
        9274,
        9387
      ]
    },
    {
      "content": "For storage resources both in the cloud and in the local emulator, you can access the secondary location by appending -secondary to the account name.",
      "pos": [
        9388,
        9537
      ]
    },
    {
      "content": "For example, the following address might be used for accessing a blob using the read-only secondary in the storage emulator:",
      "pos": [
        9538,
        9662
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> For programmatic access to the secondary with the storage emulator, use the Storage Client Library for .NET version 3.2 or later.",
      "pos": [
        9738,
        9880
      ]
    },
    {
      "content": "See the <bpt id=\"p1\">[</bpt>Storage Client Library Reference<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn261237.aspx)</ept> for details.",
      "pos": [
        9881,
        9992
      ]
    },
    {
      "content": "Storage emulator command-line tool reference",
      "pos": [
        9997,
        10041
      ]
    },
    {
      "content": "Starting in version 3.0, when you launch the Storage Emulator, you will see a command-line window pop up.",
      "pos": [
        10043,
        10148
      ]
    },
    {
      "content": "Use the command-line window to start and stop the emulator as well as to query for status and perform other operations.",
      "pos": [
        10149,
        10268
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you have the Microsoft Azure compute emulator installed, a system tray icon will appear when you launch the Storage Emulator.",
      "pos": [
        10272,
        10413
      ]
    },
    {
      "content": "Right-click on the icon to reveal a menu, which provides a graphical way to start and stop the Storage Emulator.",
      "pos": [
        10414,
        10526
      ]
    },
    {
      "content": "Command Line Syntax",
      "pos": [
        10532,
        10551
      ]
    },
    {
      "content": "Options",
      "pos": [
        10629,
        10636
      ]
    },
    {
      "pos": [
        10638,
        10702
      ],
      "content": "To view the list of options, type <ph id=\"ph1\">`/help`</ph> at the command prompt."
    },
    {
      "content": "Option",
      "pos": [
        10706,
        10712
      ]
    },
    {
      "content": "Description",
      "pos": [
        10715,
        10726
      ]
    },
    {
      "content": "Command",
      "pos": [
        10780,
        10787
      ]
    },
    {
      "content": "Arguments",
      "pos": [
        10886,
        10895
      ]
    },
    {
      "content": "Start",
      "pos": [
        11304,
        11309
      ]
    },
    {
      "content": "Starts up the storage emulator.",
      "pos": [
        11315,
        11346
      ]
    },
    {
      "pos": [
        11491,
        11581
      ],
      "content": "<bpt id=\"p1\">*</bpt>-inprocess<ept id=\"p1\">*</ept>: Start the emulator in the current process instead of creating a new process."
    },
    {
      "content": "Stop",
      "pos": [
        11613,
        11617
      ]
    },
    {
      "content": "Stops the storage emulator.",
      "pos": [
        11624,
        11651
      ]
    },
    {
      "content": "Status",
      "pos": [
        11920,
        11926
      ]
    },
    {
      "content": "Prints the status of the storage emulator.",
      "pos": [
        11931,
        11973
      ]
    },
    {
      "content": "Clear",
      "pos": [
        12227,
        12232
      ]
    },
    {
      "content": "Clears the data in all services specified on the command line.",
      "pos": [
        12238,
        12300
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>blob<ept id=\"p1\">*</ept>: Clears blob data.",
      "pos": [
        12414,
        12439
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>queue<ept id=\"p1\">*</ept>: Clears queue data.",
      "pos": [
        12445,
        12472
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>table<ept id=\"p1\">*</ept>: Clears table data.",
      "pos": [
        12478,
        12505
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>all<ept id=\"p1\">*</ept>: Clears all data in all services.",
      "pos": [
        12511,
        12550
      ]
    },
    {
      "content": "Init",
      "pos": [
        12557,
        12561
      ]
    },
    {
      "content": "Performs one-time initialization to set up the emulator.",
      "pos": [
        12568,
        12624
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>-server serverName\\instanceName<ept id=\"p1\">*</ept>: Specifies the server hosting the SQL instance.",
      "pos": [
        12744,
        12825
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>-sqlinstance instanceName<ept id=\"p1\">*</ept>: Specifies the name of the SQL instance to be used in the default server instance.",
      "pos": [
        12831,
        12941
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>-forcecreate<ept id=\"p1\">*</ept>: Forces creation of the SQL database, even if it already exists.",
      "pos": [
        12947,
        13026
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>-inprocess<ept id=\"p1\">*</ept>: Performs initialization in the current process instead of spawning a new process.",
      "pos": [
        13032,
        13127
      ]
    },
    {
      "content": "You must launch the current process with elevated permissions in order to perform initialization.",
      "pos": [
        13128,
        13225
      ]
    },
    {
      "content": "Differences between the storage emulator and Azure Storage",
      "pos": [
        13355,
        13413
      ]
    },
    {
      "content": "Because the storage emulator is an emulated enviroment running in a local SQL instance, there are some differences in functionality between the emulator and an Azure storage account in the cloud:",
      "pos": [
        13415,
        13610
      ]
    },
    {
      "content": "The storage emulator supports only a single fixed account and a well-known authentication key.",
      "pos": [
        13614,
        13708
      ]
    },
    {
      "content": "The storage emulator is not a scalable storage service and will not support a large number of concurrent clients.",
      "pos": [
        13712,
        13825
      ]
    },
    {
      "content": "As described in <bpt id=\"p1\">[</bpt>Addressing resources in the storage emulator<ept id=\"p1\">](#addressing-resources-in-the-storage-emulator)</ept>, resources are addressed differently in the storage emulator versus an Azure storage account.",
      "pos": [
        13829,
        14032
      ]
    },
    {
      "content": "This difference is due to the fact that domain name resolution is available in the cloud but not on the local computer.",
      "pos": [
        14033,
        14152
      ]
    },
    {
      "content": "Beginning with version 3.1, the storage emulator account supports read-access geo-redundant replication (RA-GRS).",
      "pos": [
        14156,
        14269
      ]
    },
    {
      "content": "In the emulator, all accounts have RA-GRS enabled, and there is never any lag between the primary and secondary replicas.",
      "pos": [
        14270,
        14391
      ]
    },
    {
      "content": "The Get Blob Service Stats, Get Queue Service Stats, and Get Table Service Stats operations are supported on the account secondary and will always return the value of the <ph id=\"ph1\">`LastSyncTime`</ph> response element as the current time according to the underlying SQL database.",
      "pos": [
        14392,
        14656
      ]
    },
    {
      "content": "For programmatic access to the secondary with the storage emulator, use the Storage Client Library for .NET version 3.2 or later.",
      "pos": [
        14662,
        14791
      ]
    },
    {
      "content": "See the <bpt id=\"p1\">[</bpt>Storage Client Library Reference<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn261237.aspx)</ept> for details.",
      "pos": [
        14792,
        14903
      ]
    },
    {
      "content": "The File service and SMB protocol service endpoints are not currently supported in the storage emulator.",
      "pos": [
        14907,
        15011
      ]
    },
    {
      "content": "The storage emulator returns a VersionNotSupportedByEmulator error (HTTP status code 400 - Bad Request) if you use a version of the storage services that is not yet supported by the version of the emulator you are using.",
      "pos": [
        15015,
        15235
      ]
    },
    {
      "content": "Differences for Blob storage",
      "pos": [
        15241,
        15269
      ]
    },
    {
      "content": "The following differences apply to Blob storage in the emulator:",
      "pos": [
        15272,
        15336
      ]
    },
    {
      "content": "The storage emulator only supports blob sizes up to 2 GB.",
      "pos": [
        15340,
        15397
      ]
    },
    {
      "content": "A Put Blob operation may succeed against a blob that exists in the storage emulator and has an active lease, even if the lease ID has not been specified as part of the request.",
      "pos": [
        15401,
        15577
      ]
    },
    {
      "content": "Append Blob operations are not supported by the emulator.",
      "pos": [
        15582,
        15639
      ]
    },
    {
      "content": "Attempting an operation on an append blob returns a FeatureNotSupportedByEmulator error (HTTP status code 400 - Bad Request).",
      "pos": [
        15640,
        15765
      ]
    },
    {
      "content": "Differences for Table storage",
      "pos": [
        15771,
        15800
      ]
    },
    {
      "content": "The following differences apply to Table storage in the emulator:",
      "pos": [
        15803,
        15868
      ]
    },
    {
      "content": "Date properties in the Table service in the storage emulator support only the range supported by SQL Server 2005 (<bpt id=\"p1\">*</bpt>i.e.<ept id=\"p1\">*</ept>, they are required to be later than January 1, 1753).",
      "pos": [
        15872,
        16046
      ]
    },
    {
      "content": "All dates before January 1, 1753 are changed to this value.",
      "pos": [
        16047,
        16106
      ]
    },
    {
      "content": "The precision of dates is limited to the precision of SQL Server 2005, meaning that dates are precise to 1/300th of a second.",
      "pos": [
        16107,
        16232
      ]
    },
    {
      "content": "The storage emulator supports partition key and row key property values of less than 512 bytes each.",
      "pos": [
        16236,
        16336
      ]
    },
    {
      "content": "Additionally, the total size of the account name, table name, and key property names together cannot exceed 900 bytes.",
      "pos": [
        16337,
        16455
      ]
    },
    {
      "content": "The total size of a row in a table in the storage emulator is limited to less than 1 MB.",
      "pos": [
        16459,
        16547
      ]
    },
    {
      "pos": [
        16551,
        16722
      ],
      "content": "In the storage emulator, properties of data type <ph id=\"ph1\">`Edm.Guid`</ph> or <ph id=\"ph2\">`Edm.Binary`</ph> support only the <ph id=\"ph3\">`Equal (eq)`</ph> and <ph id=\"ph4\">`NotEqual (ne)`</ph> comparison operators in query filter strings."
    },
    {
      "content": "Differences for Queue storage",
      "pos": [
        16728,
        16757
      ]
    },
    {
      "content": "There are no differences specific to Queue storage in the emulator.",
      "pos": [
        16759,
        16826
      ]
    },
    {
      "content": "Storage emulator release notes",
      "pos": [
        16831,
        16861
      ]
    },
    {
      "content": "Version 4.1",
      "pos": [
        16867,
        16878
      ]
    },
    {
      "content": "The storage emulator now supports version 2015-02-21 of the storage services on Blob, Queue, and Table service endpoints, with the exception of the new Append Blob features.",
      "pos": [
        16882,
        17055
      ]
    },
    {
      "content": "The storage emulator now returns a meaningful error message if you use a version of the storage services that is not yet supported by that version of the emulator.",
      "pos": [
        17060,
        17223
      ]
    },
    {
      "content": "We recommend using the latest version of the emulator.",
      "pos": [
        17224,
        17278
      ]
    },
    {
      "content": "If you encounter a VersionNotSupportedByEmulator error (HTTP status code 400 - Bad Request), please download the latest version of the storage emulator.",
      "pos": [
        17279,
        17431
      ]
    },
    {
      "content": "Fixed a bug wherein a race condition caused table entity data to be incorrect during concurrent merge operations.",
      "pos": [
        17435,
        17548
      ]
    },
    {
      "content": "Version 4.0",
      "pos": [
        17554,
        17565
      ]
    },
    {
      "pos": [
        17569,
        17648
      ],
      "content": "The storage emulator executable has been renamed to <bpt id=\"p1\">*</bpt>AzureStorageEmulator.exe<ept id=\"p1\">*</ept>."
    },
    {
      "content": "Version 3.2",
      "pos": [
        17654,
        17665
      ]
    },
    {
      "content": "The storage emulator now supports version 2014-02-14 of the storage services on Blob, Queue, and Table service endpoints.",
      "pos": [
        17668,
        17789
      ]
    },
    {
      "content": "Note that File service endpoints are not currently supported in the storage emulator.",
      "pos": [
        17790,
        17875
      ]
    },
    {
      "content": "See <bpt id=\"p1\">[</bpt>Versioning for the Azure Storage Services<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dd894041.aspx)</ept> for details about version 2014-02-14.",
      "pos": [
        17876,
        18017
      ]
    },
    {
      "content": "Version 3.1",
      "pos": [
        18023,
        18034
      ]
    },
    {
      "content": "Read-access geo-redundant storage (RA-GRS) is now supported in the storage emulator.",
      "pos": [
        18037,
        18121
      ]
    },
    {
      "content": "The Get Blob Service Stats, Get Queue Service Stats, and Get Table Service Stats APIs are supported for the account secondary and will always return the value of the LastSyncTime response element as the current time according to the underlying SQL database.",
      "pos": [
        18122,
        18379
      ]
    },
    {
      "content": "For programmatic access to the secondary with the storage emulator, use the Storage Client Library for .NET version 3.2 or later.",
      "pos": [
        18380,
        18509
      ]
    },
    {
      "content": "See the Storage Client Library Reference for details.",
      "pos": [
        18510,
        18563
      ]
    },
    {
      "content": "Version 3.0",
      "pos": [
        18569,
        18580
      ]
    },
    {
      "content": "The Azure storage emulator is no longer shipped in the same package as the compute emulator.",
      "pos": [
        18583,
        18675
      ]
    },
    {
      "content": "The storage emulator graphical user interface is deprecated in favor of a scriptable command line interface.",
      "pos": [
        18679,
        18787
      ]
    },
    {
      "content": "For details on the command line interface, see Storage Emulator Command-Line Tool Reference.",
      "pos": [
        18788,
        18880
      ]
    },
    {
      "content": "The graphical interface will continue to be present in version 3.0, but it can only be accessed when the Compute Emulator is installed by right-clicking on the system tray icon and selecting Show Storage Emulator UI.",
      "pos": [
        18881,
        19097
      ]
    },
    {
      "content": "Version 2013-08-15 of the Azure storage services is now fully supported.",
      "pos": [
        19101,
        19173
      ]
    },
    {
      "content": "(Previously this version was only supported by Storage Emulator version 2.2.1 Preview.)",
      "pos": [
        19174,
        19261
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Use the Azure Storage Emulator for Development and Testing | Microsoft Azure\" \n    description=\"The Azure storage emulator provides a free local development environment for developing and testing against Azure Storage. Learn about the storage emulator, including how requests are authenticated, how to connect to the emulator from your application, and how to use the command-line tool.\" \n    services=\"storage\" \n    documentationCenter=\"\" \n    authors=\"tamram\" \n    manager=\"adinah\" \n    editor=\"\"/>\n<tags \n    ms.service=\"storage\" \n    ms.workload=\"storage\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"07/08/2015\" \n    ms.author=\"tamram\"/>\n\n# Use the Azure Storage Emulator for Development and Testing\n\n## Overview\n\nThe Microsoft Azure storage emulator provides a local environment that emulates the Azure Blob, Queue, and Table services for development purposes. Using the storage emulator, you can test your application against the storage services locally, without creating an Azure subscription or incurring any costs. When you're satisfied with how your application is working in the emulator, you can switch to using an Azure storage account in the cloud.\n\n> [AZURE.NOTE] The storage emulator is available as part of the [Microsoft Azure SDK](https://azure.microsoft.com/downloads/). You can also install the storage emulator as a standalone package. To configure the storage emulator, you must have administrative privileges on the computer.\n>  \n> Note that data created in one version of the storage emulator is not guaranteed to be accessible when using a different version. If you need to persist your data for the long term, it's recommended that you store that data in an Azure storage account, rather than in the storage emulator.\n\n## How the storage emulator works\n \nThe storage emulator uses a local Microsoft SQL Server instance and the local file system to emulate the Azure storage services. By default, the storage emulator uses a database in Microsoft SQL Server 2012 Express LocalDB.  You can choose to configure the storage emulator to access a local instance of SQL Server instead of the LocalDB instance. See [Start and initialize the storage emulator](#start-and-initialize-the-storage-emulator) below for more information.\n\nYou can install SQL Server Management Studio Express to manage your LocalDB installation. The storage emulator connects to SQL Server or LocalDB using Windows authentication. \n\nSome differences in functionality exist between the storage emulator and Azure storage services. For more information about these differences, see [Differences between the storage emulator and Azure Storage](#differences-between-the-storage-emulator-and-azure-storage).\n\n## Authenticating requests against the storage emulator\n\nJust as with Azure Storage in the cloud, every request that you make against the storage emulator must be authenticated, unless it is an anonymous request. You can authenticate requests against the storage emulator using Shared Key authentication or with a shared access signature (SAS).\n\n### Authentication with Shared Key credentials\n\n[AZURE.INCLUDE [storage-emulator-connection-string-include](../../includes/storage-emulator-connection-string-include.md)]\n\nFor more details on connection strings, see [Configure a Connection String to Azure Storage](storage-configure-connection-string.md). \n\n### Authentication with a shared access signature \n\nSome Azure storage client libraries, such as the Xamarin library, only support authentication with a shared access signature (SAS) token. You will need to create this SAS token using a tool or application that supports Shared Key authentication. An easy way to generate the SAS token is via Azure PowerShell:\n\n1. Install Azure PowerShell if you haven't already. Using the latest version of the Azure PowerShell cmdlets is recommended. See [How to install and configure Azure PowerShell](../articles/powershell-install-configure.md#Install) for installation instructions.\n\n2. Open Azure PowerShell and run the following commands. Remember to replace *ACCOUNT_NAME* and *ACCOUNT_KEY==* with your own credentials. Replace *CONTAINER_NAME* with a name of your choosing.\n\n        $context = New-AzureStorageContext -StorageAccountName \"ACCOUNT_NAME\" -StorageAccountKey \"ACCOUNT_KEY==\"\n        \n        New-AzureStorageContainer CONTAINER_NAME -Permission Off -Context $context\n        \n        $now = Get-Date \n        \n        New-AzureStorageContainerSASToken -Name CONTAINER_NAME -Permission rwdl -ExpiryTime $now.AddDays(1.0) -Context $context -FullUri\n\nThe resulting shared access signature URI for the new container should be similar to the following:\n\n    https://storageaccount.blob.core.windows.net/sascontainer?sv=2012-02-12&se=2015-07-08T00%3A12%3A08Z&sr=c&sp=wl&sig=t%2BbzU9%2B7ry4okULN9S0wst%2F8MCUhTjrHyV9rDNLSe8g%3Dsss\n\nThe shared access signature created with this example is valid for one day. The signature grants full access (i.e. read, write, delete, list) to blobs within the container.\n\nFor more information on shared access signatures, see [Shared Access Signatures: Understanding the SAS Model](storage-dotnet-shared-access-signature-part-1.md).\n\n\n## Start and initialize the storage emulator\n\nTo start the Azure storage emulator, select the Start button or press the Windows key. Begin typing **Azure Storage Emulator**, and select the emulator from the list of applications. \n\nWhen the emulator is running, you'll see an icon in the Windows taskbar notification area.\n\nWhen the storage emulator starts, a command-line window will appear. You can use this command-line window to start and stop the storage emulator as well as clear data, get current status, and initialize the emulator. For more information, see [Storage Emulator Command-Line Tool Reference](#storage-emulator-command-line-tool-reference).\n\nWhen the command line window is closed, the storage emulator continues to run. To bring up the command line again, follow the steps above as if starting the storage emulator.\n\nThe first time you run the storage emulator, the local storage environment is initialized for you. The initialization process creates a database in LocalDB and reserves HTTP ports for each local storage service. \n\nThe storage emulator is installed by default to the C:\\Program Files (x86)\\Microsoft SDKs\\Azure\\Storage Emulator directory. \n\n### Initialize the storage emulator to use a different SQL database\n\nYou can use the storage emulator command-line tool to initialize the storage emulator to point to a SQL database instance other than the default LocalDB instance. Note that you must be running the command-line tool with administrative privileges to initialize the back-end database for the storage emulator:\n\n1. Click the **Start** button or press the **Windows** key. Begin typing `Azure Storage Emulator` and select it when it appears to bring up the storage emulator command-line tool.\n2. In the command prompt window, type the following command, where `<SQLServerInstance>` is the name of the SQL Server instance. To use LocalDb, specify `(localdb)\\v11.0` as the SQL Server instance.\n\n        AzureStorageEmulator init /server <SQLServerInstance> \n    \n    You can also use the following command, which directs the emulator to use the default SQL Server instance:\n\n        AzureStorageEmulator init /server .\\\\ \n\n    Or, you can use the following command, which re-initializes the database to the default LocalDB instance:\n\n        AzureStorageEmulator init /forceCreate \n\nFor more information about these commands, see [Storage Emulator Command-Line Tool Reference](#storage-emulator-command-line-tool-reference).\n\n## Addressing resources in the storage emulator\n\nThe service endpoints for the storage emulator are different from those of an Azure storage account. The difference is due to the fact that the local computer does not perform domain name resolution, so the storage emulator endpoints require a local address rather than a domain name.\n\nWhen you address a resource in an Azure storage account, you use the following scheme, where the account name is part of the URI host name, and the resource being addressed is part of the URI path:\n\n    <http|https>://<account-name>.<service-name>.core.windows.net/<resource-path>\n\nFor example, the following URI is a valid address for a blob in an Azure storage account:\n\n    https://myaccount.blob.core.windows.net/mycontainer/myblob.txt\n\nIn the storage emulator, because the local computer does not perform domain name resolution, the account name is part of the URI path instead of the host name. You use the following scheme for a resource running in the storage emulator:\n\n    http://<local-machine-address>:<port>/<account-name>/<resource-path>\n\nFor example, the following address might be used for accessing a blob in the storage emulator:\n\n    http://127.0.0.1:10000/myaccount/mycontainer/myblob.txt\n\nThe service endpoints for the storage emulator are:\n\n    Blob Service: http://127.0.0.1:10000/<account-name>/<resource-path>\n    Queue Service: http://127.0.0.1:10001/<account-name>/<resource-path>\n    Table Service: http://127.0.0.1:10002/<account-name>/<resource-path>\n\n### Addressing the account secondary with RA-GRS\n\nBeginning with version 3.1, the storage emulator account supports read-access geo-redundant replication (RA-GRS). For storage resources both in the cloud and in the local emulator, you can access the secondary location by appending -secondary to the account name. For example, the following address might be used for accessing a blob using the read-only secondary in the storage emulator:\n\n    http://127.0.0.1:10000/myaccount-secondary/mycontainer/myblob.txt \n\n> [AZURE.NOTE] For programmatic access to the secondary with the storage emulator, use the Storage Client Library for .NET version 3.2 or later. See the [Storage Client Library Reference](https://msdn.microsoft.com/library/azure/dn261237.aspx) for details.\n\n## Storage emulator command-line tool reference\n\nStarting in version 3.0, when you launch the Storage Emulator, you will see a command-line window pop up. Use the command-line window to start and stop the emulator as well as to query for status and perform other operations.\n\n> [AZURE.NOTE] If you have the Microsoft Azure compute emulator installed, a system tray icon will appear when you launch the Storage Emulator. Right-click on the icon to reveal a menu, which provides a graphical way to start and stop the Storage Emulator.\n\n### Command Line Syntax\n\n    AzureStorageEmulator [start] [stop] [status] [clear] [init] [help]\n\n### Options\n\nTo view the list of options, type `/help` at the command prompt.\n\n| Option | Description                                                    | Command                                                                                                 | Arguments                                                                                                         |\n|--------|----------------------------------------------------------------|---------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------|\n| **Start**  | Starts up the storage emulator.                                | `AzureStorageEmulator start [-inprocess]`                                                                    | *-inprocess*: Start the emulator in the current process instead of creating a new process.                          |\n| **Stop**   | Stops the storage emulator.                                    | `AzureStorageEmulator stop`                                                                                  |                                                                                                                   |\n| **Status** | Prints the status of the storage emulator.                     | `AzureStorageEmulator status`                                                                                |                                                                                                                   |\n| **Clear**  | Clears the data in all services specified on the command line. | `AzureStorageEmulator clear [blob] [table] [queue] [all]                                                    `| *blob*: Clears blob data. <br/>*queue*: Clears queue data. <br/>*table*: Clears table data. <br/>*all*: Clears all data in all services. |\n| **Init**   | Performs one-time initialization to set up the emulator.       | `AzureStorageEmulator.exe init [-server serverName] [-sqlinstance instanceName] [-forcecreate] [-inprocess]` | *-server serverName\\instanceName*: Specifies the server hosting the SQL instance. <br/>*-sqlinstance instanceName*: Specifies the name of the SQL instance to be used in the default server instance. <br/>*-forcecreate*: Forces creation of the SQL database, even if it already exists. <br/>*-inprocess*: Performs initialization in the current process instead of spawning a new process. You must launch the current process with elevated permissions in order to perform initialization.          |\n                                                                                                                  \n## Differences between the storage emulator and Azure Storage\n\nBecause the storage emulator is an emulated enviroment running in a local SQL instance, there are some differences in functionality between the emulator and an Azure storage account in the cloud:\n\n- The storage emulator supports only a single fixed account and a well-known authentication key.\n\n- The storage emulator is not a scalable storage service and will not support a large number of concurrent clients.\n\n- As described in [Addressing resources in the storage emulator](#addressing-resources-in-the-storage-emulator), resources are addressed differently in the storage emulator versus an Azure storage account. This difference is due to the fact that domain name resolution is available in the cloud but not on the local computer.\n\n- Beginning with version 3.1, the storage emulator account supports read-access geo-redundant replication (RA-GRS). In the emulator, all accounts have RA-GRS enabled, and there is never any lag between the primary and secondary replicas. The Get Blob Service Stats, Get Queue Service Stats, and Get Table Service Stats operations are supported on the account secondary and will always return the value of the `LastSyncTime` response element as the current time according to the underlying SQL database.\n\n    For programmatic access to the secondary with the storage emulator, use the Storage Client Library for .NET version 3.2 or later. See the [Storage Client Library Reference](https://msdn.microsoft.com/library/azure/dn261237.aspx) for details.\n\n- The File service and SMB protocol service endpoints are not currently supported in the storage emulator.\n\n- The storage emulator returns a VersionNotSupportedByEmulator error (HTTP status code 400 - Bad Request) if you use a version of the storage services that is not yet supported by the version of the emulator you are using.\n\n### Differences for Blob storage \n\nThe following differences apply to Blob storage in the emulator:\n\n- The storage emulator only supports blob sizes up to 2 GB.\n\n- A Put Blob operation may succeed against a blob that exists in the storage emulator and has an active lease, even if the lease ID has not been specified as part of the request. \n\n- Append Blob operations are not supported by the emulator. Attempting an operation on an append blob returns a FeatureNotSupportedByEmulator error (HTTP status code 400 - Bad Request).\n\n### Differences for Table storage \n\nThe following differences apply to Table storage in the emulator:\n\n- Date properties in the Table service in the storage emulator support only the range supported by SQL Server 2005 (*i.e.*, they are required to be later than January 1, 1753). All dates before January 1, 1753 are changed to this value. The precision of dates is limited to the precision of SQL Server 2005, meaning that dates are precise to 1/300th of a second.\n\n- The storage emulator supports partition key and row key property values of less than 512 bytes each. Additionally, the total size of the account name, table name, and key property names together cannot exceed 900 bytes.\n\n- The total size of a row in a table in the storage emulator is limited to less than 1 MB.\n\n- In the storage emulator, properties of data type `Edm.Guid` or `Edm.Binary` support only the `Equal (eq)` and `NotEqual (ne)` comparison operators in query filter strings.\n\n### Differences for Queue storage\n\nThere are no differences specific to Queue storage in the emulator.\n\n## Storage emulator release notes\n\n### Version 4.1\n\n- The storage emulator now supports version 2015-02-21 of the storage services on Blob, Queue, and Table service endpoints, with the exception of the new Append Blob features. \n\n- The storage emulator now returns a meaningful error message if you use a version of the storage services that is not yet supported by that version of the emulator. We recommend using the latest version of the emulator. If you encounter a VersionNotSupportedByEmulator error (HTTP status code 400 - Bad Request), please download the latest version of the storage emulator.\n\n- Fixed a bug wherein a race condition caused table entity data to be incorrect during concurrent merge operations.\n\n### Version 4.0\n\n- The storage emulator executable has been renamed to *AzureStorageEmulator.exe*.\n\n### Version 3.2\n- The storage emulator now supports version 2014-02-14 of the storage services on Blob, Queue, and Table service endpoints. Note that File service endpoints are not currently supported in the storage emulator. See [Versioning for the Azure Storage Services](https://msdn.microsoft.com/library/azure/dd894041.aspx) for details about version 2014-02-14.\n\n### Version 3.1\n- Read-access geo-redundant storage (RA-GRS) is now supported in the storage emulator. The Get Blob Service Stats, Get Queue Service Stats, and Get Table Service Stats APIs are supported for the account secondary and will always return the value of the LastSyncTime response element as the current time according to the underlying SQL database. For programmatic access to the secondary with the storage emulator, use the Storage Client Library for .NET version 3.2 or later. See the Storage Client Library Reference for details.\n\n### Version 3.0\n- The Azure storage emulator is no longer shipped in the same package as the compute emulator.\n\n- The storage emulator graphical user interface is deprecated in favor of a scriptable command line interface. For details on the command line interface, see Storage Emulator Command-Line Tool Reference. The graphical interface will continue to be present in version 3.0, but it can only be accessed when the Compute Emulator is installed by right-clicking on the system tray icon and selecting Show Storage Emulator UI.\n\n- Version 2013-08-15 of the Azure storage services is now fully supported. (Previously this version was only supported by Storage Emulator version 2.2.1 Preview.)\n"
}