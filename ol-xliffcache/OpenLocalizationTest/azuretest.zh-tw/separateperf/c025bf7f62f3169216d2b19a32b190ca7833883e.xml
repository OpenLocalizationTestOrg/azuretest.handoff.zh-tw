{
  "nodes": [
    {
      "content": "How to choose machine learning algorithms | Microsoft Azure",
      "pos": [
        27,
        86
      ]
    },
    {
      "content": "How to choose Azure Machine Learning algorithms for supervised and unsupervised learning in clustering, classification, or regression experiments.",
      "pos": [
        105,
        251
      ]
    },
    {
      "content": "How to choose algorithms for Microsoft Azure Machine Learning",
      "pos": [
        593,
        654
      ]
    },
    {
      "content": "The answer to the question \"What machine learning algorithm should I use?\"",
      "pos": [
        656,
        730
      ]
    },
    {
      "content": "is always \"It depends.\"",
      "pos": [
        731,
        754
      ]
    },
    {
      "content": "It depends on the size, quality, and nature of the data.",
      "pos": [
        755,
        811
      ]
    },
    {
      "content": "It depends what you want to do with the answer.",
      "pos": [
        812,
        859
      ]
    },
    {
      "content": "It depends on how the math of the algorithm was translated into instructions for the computer you are using.",
      "pos": [
        860,
        968
      ]
    },
    {
      "content": "And it depends on how much time you have.",
      "pos": [
        969,
        1010
      ]
    },
    {
      "content": "Even the most experienced data scientists can't tell which algorithm will perform best before trying them.",
      "pos": [
        1011,
        1117
      ]
    },
    {
      "content": "The Machine Learning Algorithm Cheat Sheet",
      "pos": [
        1122,
        1164
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Microsoft Azure Machine Learning Algorithm Cheat Sheet<ept id=\"p1\">**</ept> helps you choose the right machine learning algorithm for your predictive analytics solutions from the Microsoft Azure Machine Learning library of algorithms.",
      "pos": [
        1166,
        1387
      ]
    },
    {
      "content": "This article walks you through how to use it.",
      "pos": [
        1388,
        1433
      ]
    },
    {
      "pos": [
        1437,
        1648
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> To download the cheat sheet and follow along with this article, go to <bpt id=\"p1\">[</bpt>Machine learning algorithm cheat sheet for Microsoft Azure Machine Learning Studio<ept id=\"p1\">](machine-learning-algorithm-cheat-sheet.md)</ept>."
    },
    {
      "content": "This cheat sheet has a very specific audience in mind: a beginning data scientist with undergraduate-level machine learning, trying to choose an algorithm to start with in Azure Machine Learning Studio.",
      "pos": [
        1650,
        1852
      ]
    },
    {
      "content": "That means that it makes some generalizations and oversimplifications, but it will point you in a safe direction.",
      "pos": [
        1853,
        1966
      ]
    },
    {
      "content": "It also means that there are lots of algorithms not listed here.",
      "pos": [
        1967,
        2031
      ]
    },
    {
      "content": "As Azure Machine Learning grows to encompass a more complete set of available methods, we'll add them.",
      "pos": [
        2032,
        2134
      ]
    },
    {
      "content": "These recommendations are compiled feedback and tips from a lot of data scientists and machine learning experts.",
      "pos": [
        2136,
        2248
      ]
    },
    {
      "content": "We didn't agree on everything, but I've tried to harmonize our opinions into a rough consensus.",
      "pos": [
        2249,
        2344
      ]
    },
    {
      "content": "Most of the statements of disagreement begin with \"It depends…\"",
      "pos": [
        2345,
        2408
      ]
    },
    {
      "content": "How to use the cheat sheet",
      "pos": [
        2414,
        2440
      ]
    },
    {
      "content": "Read the path and algorithm labels on the chart as \"For <bpt id=\"p1\">*</bpt>&amp;lt;path\nlabel&amp;gt;<ept id=\"p1\">*</ept> use <bpt id=\"p2\">*</bpt>&amp;lt;algorithm&amp;gt;<ept id=\"p2\">*</ept>.\"",
      "pos": [
        2442,
        2544
      ]
    },
    {
      "content": "For example, \"For <bpt id=\"p1\">*</bpt>speed<ept id=\"p1\">*</ept> use <bpt id=\"p2\">*</bpt>two\nclass logistic regression<ept id=\"p2\">*</ept>.\"",
      "pos": [
        2545,
        2608
      ]
    },
    {
      "content": "Sometimes more than one branch will apply.",
      "pos": [
        2609,
        2651
      ]
    },
    {
      "content": "Sometimes none of them will be a perfect fit.",
      "pos": [
        2652,
        2697
      ]
    },
    {
      "content": "They're intended to be",
      "pos": [
        2698,
        2720
      ]
    },
    {
      "content": "rule-of-thumb recommendations, so don't worry about it being exact.",
      "pos": [
        2721,
        2788
      ]
    },
    {
      "content": "Several data scientists I talked with said that the only sure way to",
      "pos": [
        2789,
        2857
      ]
    },
    {
      "content": "find the very best algorithm is to try all of them.",
      "pos": [
        2858,
        2909
      ]
    },
    {
      "content": "Here's an example from the <bpt id=\"p1\">[</bpt>Azure Machine Learning\nGallery<ept id=\"p1\">](http://gallery.azureml.net/)</ept> of an experiment that tries",
      "pos": [
        2911,
        3027
      ]
    },
    {
      "content": "several algorithms against the same data and compares the results:",
      "pos": [
        3028,
        3094
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Compare Multi-class Classifiers: Letter\nrecognition<ept id=\"p1\">](http://gallery.azureml.net/Details/a635502fc98b402a890efe21cec65b92)</ept>.",
      "pos": [
        3095,
        3218
      ]
    },
    {
      "content": "Flavors of machine learning",
      "pos": [
        3223,
        3250
      ]
    },
    {
      "content": "Supervised",
      "pos": [
        3256,
        3266
      ]
    },
    {
      "content": "Supervised learning algorithms make predictions based on a set of",
      "pos": [
        3268,
        3333
      ]
    },
    {
      "content": "examples.",
      "pos": [
        3334,
        3343
      ]
    },
    {
      "content": "For instance, historical stock prices can be used to hazard",
      "pos": [
        3344,
        3403
      ]
    },
    {
      "content": "guesses at future prices.",
      "pos": [
        3404,
        3429
      ]
    },
    {
      "content": "Each example used for training is labeled with",
      "pos": [
        3430,
        3476
      ]
    },
    {
      "content": "the value of interest—in this case the stock price.",
      "pos": [
        3477,
        3528
      ]
    },
    {
      "content": "A supervised",
      "pos": [
        3529,
        3541
      ]
    },
    {
      "content": "learning algorithm looks for patterns in those value labels.",
      "pos": [
        3542,
        3602
      ]
    },
    {
      "content": "It can use",
      "pos": [
        3603,
        3613
      ]
    },
    {
      "content": "any information that might be relevant—the day of the week, the season,",
      "pos": [
        3614,
        3685
      ]
    },
    {
      "content": "the company's financial data, the type of industry, the presence of",
      "pos": [
        3686,
        3753
      ]
    },
    {
      "content": "disruptive geopolicitical events—and each algorithm looks for different",
      "pos": [
        3754,
        3825
      ]
    },
    {
      "content": "types of patterns.",
      "pos": [
        3826,
        3844
      ]
    },
    {
      "content": "After the algorithm has found the best pattern it",
      "pos": [
        3845,
        3894
      ]
    },
    {
      "content": "can, it uses that pattern to make predictions for unlabeled testing",
      "pos": [
        3895,
        3962
      ]
    },
    {
      "content": "data—tomorrow's prices.",
      "pos": [
        3963,
        3986
      ]
    },
    {
      "content": "This is a popular and useful type of machine learning.",
      "pos": [
        3988,
        4042
      ]
    },
    {
      "content": "With one",
      "pos": [
        4043,
        4051
      ]
    },
    {
      "content": "exception, all of the modules in Azure Machine Learning are supervised learning",
      "pos": [
        4052,
        4131
      ]
    },
    {
      "content": "algorithms.",
      "pos": [
        4132,
        4143
      ]
    },
    {
      "content": "There are several specific types of supervised learning that",
      "pos": [
        4144,
        4204
      ]
    },
    {
      "content": "are represented within Azure Machine Learning: classification, regression, and anomaly",
      "pos": [
        4205,
        4291
      ]
    },
    {
      "content": "detection.",
      "pos": [
        4292,
        4302
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Classification<ept id=\"p1\">**</ept>.",
      "pos": [
        4306,
        4325
      ]
    },
    {
      "content": "When the data are being used to predict a",
      "pos": [
        4326,
        4367
      ]
    },
    {
      "content": "category, supervised learning is also called classification.",
      "pos": [
        4368,
        4428
      ]
    },
    {
      "content": "This is",
      "pos": [
        4429,
        4436
      ]
    },
    {
      "content": "the case when assigning an image as a picture of either a 'cat' or a",
      "pos": [
        4437,
        4505
      ]
    },
    {
      "content": "'dog'.",
      "pos": [
        4506,
        4512
      ]
    },
    {
      "content": "When there are only two choices, this is called <bpt id=\"p1\">**</bpt>two-class<ept id=\"p1\">**</ept>",
      "pos": [
        4513,
        4574
      ]
    },
    {
      "content": "or <bpt id=\"p1\">**</bpt>binomial classification<ept id=\"p1\">**</ept>.",
      "pos": [
        4575,
        4606
      ]
    },
    {
      "content": "When there are more categories, as",
      "pos": [
        4607,
        4641
      ]
    },
    {
      "content": "when predicting the winner of the NCAA March Madness tournament, this",
      "pos": [
        4642,
        4711
      ]
    },
    {
      "content": "problem is known as <bpt id=\"p1\">**</bpt>multi-class classification<ept id=\"p1\">**</ept>.",
      "pos": [
        4712,
        4763
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Regression<ept id=\"p1\">**</ept>.",
      "pos": [
        4767,
        4782
      ]
    },
    {
      "content": "When a value is being predicted, as with stock prices,",
      "pos": [
        4783,
        4837
      ]
    },
    {
      "content": "supervised learning is called regression.",
      "pos": [
        4838,
        4879
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Anomaly detection<ept id=\"p1\">**</ept>.",
      "pos": [
        4883,
        4905
      ]
    },
    {
      "content": "Sometimes the goal is to identify data points",
      "pos": [
        4906,
        4951
      ]
    },
    {
      "content": "that are simply unusual.",
      "pos": [
        4952,
        4976
      ]
    },
    {
      "content": "In fraud detection, for example, any highly",
      "pos": [
        4977,
        5020
      ]
    },
    {
      "content": "unusual credit card spending patterns are suspect.",
      "pos": [
        5021,
        5071
      ]
    },
    {
      "content": "The possible",
      "pos": [
        5072,
        5084
      ]
    },
    {
      "content": "variations are so numerous and the training examples so few, that it's",
      "pos": [
        5085,
        5155
      ]
    },
    {
      "content": "not feasible to learn what fraudulent activity looks like.",
      "pos": [
        5156,
        5214
      ]
    },
    {
      "content": "The",
      "pos": [
        5215,
        5218
      ]
    },
    {
      "content": "approach that anomaly detection takes is to simply learn what normal",
      "pos": [
        5219,
        5287
      ]
    },
    {
      "content": "activity looks like (using a history non-fraudulent transactions) and",
      "pos": [
        5288,
        5357
      ]
    },
    {
      "content": "identify anything that is significantly different.",
      "pos": [
        5358,
        5408
      ]
    },
    {
      "content": "Unsupervised",
      "pos": [
        5414,
        5426
      ]
    },
    {
      "content": "In unsupervised learning, data points have no labels associated with",
      "pos": [
        5428,
        5496
      ]
    },
    {
      "content": "them.",
      "pos": [
        5497,
        5502
      ]
    },
    {
      "content": "Instead, the goal of an unsupervised learning algorithm is to",
      "pos": [
        5503,
        5564
      ]
    },
    {
      "content": "organize the data in some way or to describe its structure.",
      "pos": [
        5565,
        5624
      ]
    },
    {
      "content": "This can",
      "pos": [
        5625,
        5633
      ]
    },
    {
      "content": "mean grouping it into clusters or finding different ways of looking at",
      "pos": [
        5634,
        5704
      ]
    },
    {
      "content": "complex data so that it appears simpler or more organized.",
      "pos": [
        5705,
        5763
      ]
    },
    {
      "content": "Reinforcement learning",
      "pos": [
        5769,
        5791
      ]
    },
    {
      "content": "In reinforcement learning, the algorithm gets to choose an action in",
      "pos": [
        5793,
        5861
      ]
    },
    {
      "content": "response to each data point.",
      "pos": [
        5862,
        5890
      ]
    },
    {
      "content": "The learning algorithm also receives a",
      "pos": [
        5891,
        5929
      ]
    },
    {
      "content": "reward signal a short time later, indicating how good the decision was.",
      "pos": [
        5930,
        6001
      ]
    },
    {
      "content": "Based on this, the algorithm modifies its strategy in order to achieve",
      "pos": [
        6002,
        6072
      ]
    },
    {
      "content": "the highest reward.",
      "pos": [
        6073,
        6092
      ]
    },
    {
      "content": "Currently there are no reinforcement learning",
      "pos": [
        6093,
        6138
      ]
    },
    {
      "content": "algorithm modules in Azure Machine Learning.",
      "pos": [
        6139,
        6183
      ]
    },
    {
      "content": "Reinforcement learning is common in",
      "pos": [
        6184,
        6219
      ]
    },
    {
      "content": "robotics, where the set of sensor readings at one point in time is a",
      "pos": [
        6220,
        6288
      ]
    },
    {
      "content": "data point, and the algorithm must choose the robot's next action.",
      "pos": [
        6289,
        6355
      ]
    },
    {
      "content": "It is",
      "pos": [
        6356,
        6361
      ]
    },
    {
      "content": "also a natural fit for Internet of Things applications.",
      "pos": [
        6362,
        6417
      ]
    },
    {
      "content": "Considerations when choosing an algorithm",
      "pos": [
        6422,
        6463
      ]
    },
    {
      "content": "Accuracy",
      "pos": [
        6469,
        6477
      ]
    },
    {
      "content": "Getting the most accurate answer possible isn't always necessary.",
      "pos": [
        6479,
        6544
      ]
    },
    {
      "content": "Sometimes an approximation is adequate, depending on what you want to",
      "pos": [
        6545,
        6614
      ]
    },
    {
      "content": "use it for.",
      "pos": [
        6615,
        6626
      ]
    },
    {
      "content": "If that's the case, you may be able to cut your processing",
      "pos": [
        6627,
        6685
      ]
    },
    {
      "content": "time dramatically by sticking with more approximate methods.",
      "pos": [
        6686,
        6746
      ]
    },
    {
      "content": "Another",
      "pos": [
        6747,
        6754
      ]
    },
    {
      "content": "advantage of more approximate methods is that they naturally tend to",
      "pos": [
        6755,
        6823
      ]
    },
    {
      "content": "avoid <bpt id=\"p1\">[</bpt>overfitting<ept id=\"p1\">](https://youtu.be/DQWI1kvmwRg)</ept>.",
      "pos": [
        6824,
        6874
      ]
    },
    {
      "content": "Training time",
      "pos": [
        6880,
        6893
      ]
    },
    {
      "content": "The number of minutes or hours necessary to train a model varies a great",
      "pos": [
        6895,
        6967
      ]
    },
    {
      "content": "deal between algorithms.",
      "pos": [
        6968,
        6992
      ]
    },
    {
      "content": "Training time is often closely tied to",
      "pos": [
        6993,
        7031
      ]
    },
    {
      "content": "accuracy—one typically accompanies the other.",
      "pos": [
        7032,
        7077
      ]
    },
    {
      "content": "In addition, some",
      "pos": [
        7078,
        7095
      ]
    },
    {
      "content": "algorithms are more sensitive to the number of data points than others.",
      "pos": [
        7096,
        7167
      ]
    },
    {
      "content": "When time is limited it can drive the choice of algorithm, especially",
      "pos": [
        7168,
        7237
      ]
    },
    {
      "content": "when the data set is large.",
      "pos": [
        7238,
        7265
      ]
    },
    {
      "content": "Linearity",
      "pos": [
        7271,
        7280
      ]
    },
    {
      "content": "Lots of machine learning algorithms make use of linearity.",
      "pos": [
        7282,
        7340
      ]
    },
    {
      "content": "Linear",
      "pos": [
        7341,
        7347
      ]
    },
    {
      "content": "classification algorithms assume that classes can be separated by a",
      "pos": [
        7348,
        7415
      ]
    },
    {
      "content": "straight line (or its higher-dimensional analog).",
      "pos": [
        7416,
        7465
      ]
    },
    {
      "content": "These include logistic",
      "pos": [
        7466,
        7488
      ]
    },
    {
      "content": "regression and support vector machines (as implemented in Azure Machine Learning).",
      "pos": [
        7489,
        7571
      ]
    },
    {
      "content": "Linear regression algorithms assume that data trends follow a straight",
      "pos": [
        7572,
        7642
      ]
    },
    {
      "content": "line.",
      "pos": [
        7643,
        7648
      ]
    },
    {
      "content": "These assumptions aren't bad for some problems, but on others they",
      "pos": [
        7649,
        7715
      ]
    },
    {
      "content": "bring accuracy down.",
      "pos": [
        7716,
        7736
      ]
    },
    {
      "content": "![Non-linear class bounday][1]",
      "pos": [
        7738,
        7768
      ]
    },
    {
      "pos": [
        7770,
        7879
      ],
      "content": "<bpt id=\"p1\">***</bpt>Non-linear class boundary<ept id=\"p1\">***</ept> <bpt id=\"p2\">*</bpt>- relying on a linear classification\nalgorithm would result in low accuracy<ept id=\"p2\">*</ept>"
    },
    {
      "content": "![Data with a nonlinear trend][2]",
      "pos": [
        7881,
        7914
      ]
    },
    {
      "pos": [
        7916,
        8035
      ],
      "content": "<bpt id=\"p1\">***</bpt>Data with a nonlinear trend<ept id=\"p1\">***</ept> <bpt id=\"p2\">*</bpt>- using a linear regression method would\ngenerate much larger errors than necessary<ept id=\"p2\">*</ept>"
    },
    {
      "content": "Despite their dangers, linear algorithms are very popular as a first",
      "pos": [
        8037,
        8105
      ]
    },
    {
      "content": "line of attack.",
      "pos": [
        8106,
        8121
      ]
    },
    {
      "content": "They tend to be algorithmically simple and fast to",
      "pos": [
        8122,
        8172
      ]
    },
    {
      "content": "train.",
      "pos": [
        8173,
        8179
      ]
    },
    {
      "content": "Number of parameters",
      "pos": [
        8185,
        8205
      ]
    },
    {
      "content": "Parameters are the knobs a data scientist gets to turn when setting up",
      "pos": [
        8207,
        8277
      ]
    },
    {
      "content": "an algorithm.",
      "pos": [
        8278,
        8291
      ]
    },
    {
      "content": "They are numbers that affect the algorithm's behavior,",
      "pos": [
        8292,
        8346
      ]
    },
    {
      "content": "such as error tolerance or number of iterations, or options between",
      "pos": [
        8347,
        8414
      ]
    },
    {
      "content": "variants of how the algorithm behaves.",
      "pos": [
        8415,
        8453
      ]
    },
    {
      "content": "The training time and accuracy of",
      "pos": [
        8454,
        8487
      ]
    },
    {
      "content": "the algorithm can sometimes be quite sensitive to getting just the right",
      "pos": [
        8488,
        8560
      ]
    },
    {
      "content": "settings.",
      "pos": [
        8561,
        8570
      ]
    },
    {
      "content": "Typically, algorithms with large numbers parameters require",
      "pos": [
        8571,
        8630
      ]
    },
    {
      "content": "the most trial and error to find a good combination.",
      "pos": [
        8631,
        8683
      ]
    },
    {
      "content": "Alternatively, there is a <bpt id=\"p1\">[</bpt>parameter\nsweeping<ept id=\"p1\">](machine-learning-algorithm-parameters-optimize.md)</ept>",
      "pos": [
        8685,
        8782
      ]
    },
    {
      "content": "module block in Azure Machine Learning that automatically tries all parameter",
      "pos": [
        8783,
        8860
      ]
    },
    {
      "content": "combinations at whatever granularity you choose.",
      "pos": [
        8861,
        8909
      ]
    },
    {
      "content": "While this is a great",
      "pos": [
        8910,
        8931
      ]
    },
    {
      "content": "way to make sure you've spanned the parameter space, the time required",
      "pos": [
        8932,
        9002
      ]
    },
    {
      "content": "to train a model increases exponentially with the number of parameters.",
      "pos": [
        9003,
        9074
      ]
    },
    {
      "content": "The upside is that having many parameters typically indicates that an",
      "pos": [
        9076,
        9145
      ]
    },
    {
      "content": "algorithm has greater flexibility.",
      "pos": [
        9146,
        9180
      ]
    },
    {
      "content": "It can often achieve very good",
      "pos": [
        9181,
        9211
      ]
    },
    {
      "content": "accuracy.",
      "pos": [
        9212,
        9221
      ]
    },
    {
      "content": "Provided you can find the right combination of parameter",
      "pos": [
        9222,
        9278
      ]
    },
    {
      "content": "settings.",
      "pos": [
        9279,
        9288
      ]
    },
    {
      "content": "Number of features",
      "pos": [
        9294,
        9312
      ]
    },
    {
      "content": "For certain types of data, the number of features can be very large",
      "pos": [
        9314,
        9381
      ]
    },
    {
      "content": "compared to the number of data points.",
      "pos": [
        9382,
        9420
      ]
    },
    {
      "content": "This is often the case with",
      "pos": [
        9421,
        9448
      ]
    },
    {
      "content": "genetics or textual data.",
      "pos": [
        9449,
        9474
      ]
    },
    {
      "content": "The large number of features can bog down some",
      "pos": [
        9475,
        9521
      ]
    },
    {
      "content": "learning algorithms, making training time unfeasibly long.",
      "pos": [
        9522,
        9580
      ]
    },
    {
      "content": "Support",
      "pos": [
        9581,
        9588
      ]
    },
    {
      "content": "Vector Machines are particularly well suited to this case (see below).",
      "pos": [
        9589,
        9659
      ]
    },
    {
      "content": "Special cases",
      "pos": [
        9665,
        9678
      ]
    },
    {
      "content": "Some learning algorithms make particular assumptions about the structure",
      "pos": [
        9680,
        9752
      ]
    },
    {
      "content": "of the data or the desired results.",
      "pos": [
        9753,
        9788
      ]
    },
    {
      "content": "If you can find one that fits your",
      "pos": [
        9789,
        9823
      ]
    },
    {
      "content": "needs, it can give you more useful results, more accurate predictions,",
      "pos": [
        9824,
        9894
      ]
    },
    {
      "content": "or faster training times.",
      "pos": [
        9895,
        9920
      ]
    },
    {
      "content": "Algorithm",
      "pos": [
        9925,
        9934
      ]
    },
    {
      "content": "Accuracy",
      "pos": [
        9939,
        9947
      ]
    },
    {
      "content": "Training time",
      "pos": [
        9952,
        9965
      ]
    },
    {
      "content": "Linearity",
      "pos": [
        9970,
        9979
      ]
    },
    {
      "content": "Parameters",
      "pos": [
        9984,
        9994
      ]
    },
    {
      "content": "Notes",
      "pos": [
        9999,
        10004
      ]
    },
    {
      "content": "Two-class classification",
      "pos": [
        10045,
        10069
      ]
    },
    {
      "content": "logistic regression",
      "pos": [
        10085,
        10104
      ]
    },
    {
      "content": "●",
      "pos": [
        10184,
        10185
      ]
    },
    {
      "content": "●",
      "pos": [
        10186,
        10187
      ]
    },
    {
      "content": "5",
      "pos": [
        10188,
        10189
      ]
    },
    {
      "content": "decision forest",
      "pos": [
        10195,
        10210
      ]
    },
    {
      "content": "●",
      "pos": [
        10268,
        10269
      ]
    },
    {
      "content": "○",
      "pos": [
        10270,
        10271
      ]
    },
    {
      "content": "6",
      "pos": [
        10274,
        10275
      ]
    },
    {
      "content": "decision jungle",
      "pos": [
        10281,
        10296
      ]
    },
    {
      "content": "●",
      "pos": [
        10354,
        10355
      ]
    },
    {
      "content": "○",
      "pos": [
        10356,
        10357
      ]
    },
    {
      "content": "6",
      "pos": [
        10360,
        10361
      ]
    },
    {
      "content": "Low memory footprint",
      "pos": [
        10362,
        10382
      ]
    },
    {
      "content": "boosted decision tree",
      "pos": [
        10386,
        10407
      ]
    },
    {
      "content": "●",
      "pos": [
        10465,
        10466
      ]
    },
    {
      "content": "○",
      "pos": [
        10467,
        10468
      ]
    },
    {
      "content": "6",
      "pos": [
        10471,
        10472
      ]
    },
    {
      "content": "Large memory footprint",
      "pos": [
        10473,
        10495
      ]
    },
    {
      "content": "neural network",
      "pos": [
        10499,
        10513
      ]
    },
    {
      "content": "●",
      "pos": [
        10571,
        10572
      ]
    },
    {
      "content": "9",
      "pos": [
        10577,
        10578
      ]
    },
    {
      "content": "Additional customization is possible",
      "pos": [
        10580,
        10616
      ]
    },
    {
      "content": "averaged perceptron",
      "pos": [
        10668,
        10687
      ]
    },
    {
      "content": "○",
      "pos": [
        10745,
        10746
      ]
    },
    {
      "content": "○",
      "pos": [
        10747,
        10748
      ]
    },
    {
      "content": "●",
      "pos": [
        10749,
        10750
      ]
    },
    {
      "content": "4",
      "pos": [
        10751,
        10752
      ]
    },
    {
      "content": "support vector machine",
      "pos": [
        10758,
        10780
      ]
    },
    {
      "content": "○",
      "pos": [
        10840,
        10841
      ]
    },
    {
      "content": "●",
      "pos": [
        10842,
        10843
      ]
    },
    {
      "content": "5",
      "pos": [
        10844,
        10845
      ]
    },
    {
      "content": "Good for large feature sets",
      "pos": [
        10846,
        10873
      ]
    },
    {
      "content": "locally deep support vector machine",
      "pos": [
        10877,
        10912
      ]
    },
    {
      "content": "○",
      "pos": [
        10970,
        10971
      ]
    },
    {
      "content": "8",
      "pos": [
        10976,
        10977
      ]
    },
    {
      "content": "Good for large feature sets",
      "pos": [
        10978,
        11005
      ]
    },
    {
      "content": "Bayes’ point machine",
      "pos": [
        11009,
        11029
      ]
    },
    {
      "content": "○",
      "pos": [
        11089,
        11090
      ]
    },
    {
      "content": "●",
      "pos": [
        11091,
        11092
      ]
    },
    {
      "content": "3",
      "pos": [
        11093,
        11094
      ]
    },
    {
      "content": "Multi-class classification",
      "pos": [
        11101,
        11127
      ]
    },
    {
      "content": "logistic regression",
      "pos": [
        11143,
        11162
      ]
    },
    {
      "content": "●",
      "pos": [
        11228,
        11229
      ]
    },
    {
      "content": "●",
      "pos": [
        11230,
        11231
      ]
    },
    {
      "content": "5",
      "pos": [
        11232,
        11233
      ]
    },
    {
      "content": "decision forest",
      "pos": [
        11239,
        11254
      ]
    },
    {
      "content": "●",
      "pos": [
        11312,
        11313
      ]
    },
    {
      "content": "○",
      "pos": [
        11314,
        11315
      ]
    },
    {
      "content": "6",
      "pos": [
        11318,
        11319
      ]
    },
    {
      "content": "decision jungle",
      "pos": [
        11325,
        11340
      ]
    },
    {
      "content": "●",
      "pos": [
        11399,
        11400
      ]
    },
    {
      "content": "○",
      "pos": [
        11401,
        11402
      ]
    },
    {
      "content": "6",
      "pos": [
        11405,
        11406
      ]
    },
    {
      "content": "Low memory footprint",
      "pos": [
        11407,
        11427
      ]
    },
    {
      "content": "neural network",
      "pos": [
        11431,
        11445
      ]
    },
    {
      "content": "●",
      "pos": [
        11503,
        11504
      ]
    },
    {
      "content": "9",
      "pos": [
        11509,
        11510
      ]
    },
    {
      "content": "Additional customization is possible",
      "pos": [
        11512,
        11548
      ]
    },
    {
      "content": "one-v-all",
      "pos": [
        11600,
        11609
      ]
    },
    {
      "content": "-",
      "pos": [
        11667,
        11668
      ]
    },
    {
      "content": "-",
      "pos": [
        11669,
        11670
      ]
    },
    {
      "content": "-",
      "pos": [
        11671,
        11672
      ]
    },
    {
      "content": "-",
      "pos": [
        11673,
        11674
      ]
    },
    {
      "content": "See properties of the two-class method selected",
      "pos": [
        11675,
        11722
      ]
    },
    {
      "content": "Regression",
      "pos": [
        11727,
        11737
      ]
    },
    {
      "content": "linear",
      "pos": [
        11753,
        11759
      ]
    },
    {
      "content": "●",
      "pos": [
        11820,
        11821
      ]
    },
    {
      "content": "●",
      "pos": [
        11822,
        11823
      ]
    },
    {
      "content": "4",
      "pos": [
        11824,
        11825
      ]
    },
    {
      "content": "Bayesian linear",
      "pos": [
        11831,
        11846
      ]
    },
    {
      "content": "○",
      "pos": [
        11906,
        11907
      ]
    },
    {
      "content": "●",
      "pos": [
        11908,
        11909
      ]
    },
    {
      "content": "2",
      "pos": [
        11910,
        11911
      ]
    },
    {
      "content": "decision forest",
      "pos": [
        11917,
        11932
      ]
    },
    {
      "content": "●",
      "pos": [
        11990,
        11991
      ]
    },
    {
      "content": "○",
      "pos": [
        11992,
        11993
      ]
    },
    {
      "content": "6",
      "pos": [
        11996,
        11997
      ]
    },
    {
      "content": "boosted decision tree",
      "pos": [
        12003,
        12024
      ]
    },
    {
      "content": "●",
      "pos": [
        12082,
        12083
      ]
    },
    {
      "content": "○",
      "pos": [
        12084,
        12085
      ]
    },
    {
      "content": "5",
      "pos": [
        12088,
        12089
      ]
    },
    {
      "content": "Large memory footprint",
      "pos": [
        12090,
        12112
      ]
    },
    {
      "content": "fast forest quantile",
      "pos": [
        12116,
        12136
      ]
    },
    {
      "content": "●",
      "pos": [
        12194,
        12195
      ]
    },
    {
      "content": "○",
      "pos": [
        12196,
        12197
      ]
    },
    {
      "content": "9",
      "pos": [
        12200,
        12201
      ]
    },
    {
      "content": "Distributions rather than point predictions",
      "pos": [
        12202,
        12245
      ]
    },
    {
      "content": "neural network",
      "pos": [
        12249,
        12263
      ]
    },
    {
      "content": "●",
      "pos": [
        12321,
        12322
      ]
    },
    {
      "content": "9",
      "pos": [
        12327,
        12328
      ]
    },
    {
      "content": "Additional customization is possible",
      "pos": [
        12330,
        12366
      ]
    },
    {
      "content": "Poisson",
      "pos": [
        12418,
        12425
      ]
    },
    {
      "content": "●",
      "pos": [
        12488,
        12489
      ]
    },
    {
      "content": "5",
      "pos": [
        12490,
        12491
      ]
    },
    {
      "content": "Technically log-linear.",
      "pos": [
        12492,
        12515
      ]
    },
    {
      "content": "For predicting counts",
      "pos": [
        12516,
        12537
      ]
    },
    {
      "content": "ordinal",
      "pos": [
        12541,
        12548
      ]
    },
    {
      "content": "0",
      "pos": [
        12612,
        12613
      ]
    },
    {
      "content": "For predicting rank-ordering",
      "pos": [
        12614,
        12642
      ]
    },
    {
      "content": "Anomaly detection",
      "pos": [
        12647,
        12664
      ]
    },
    {
      "content": "support vector machine",
      "pos": [
        12680,
        12702
      ]
    },
    {
      "content": "○",
      "pos": [
        12760,
        12761
      ]
    },
    {
      "content": "○",
      "pos": [
        12762,
        12763
      ]
    },
    {
      "content": "2",
      "pos": [
        12766,
        12767
      ]
    },
    {
      "content": "Especially good for large feature sets",
      "pos": [
        12768,
        12806
      ]
    },
    {
      "content": "PCA-based anomaly detection",
      "pos": [
        12810,
        12837
      ]
    },
    {
      "content": "○",
      "pos": [
        12898,
        12899
      ]
    },
    {
      "content": "●",
      "pos": [
        12900,
        12901
      ]
    },
    {
      "content": "3",
      "pos": [
        12902,
        12903
      ]
    },
    {
      "content": "K-means",
      "pos": [
        12909,
        12916
      ]
    },
    {
      "content": "○",
      "pos": [
        13000,
        13001
      ]
    },
    {
      "content": "●",
      "pos": [
        13002,
        13003
      ]
    },
    {
      "content": "4",
      "pos": [
        13004,
        13005
      ]
    },
    {
      "content": "A clustering algorithm",
      "pos": [
        13006,
        13028
      ]
    },
    {
      "content": "Algorithm properties:",
      "pos": [
        13034,
        13055
      ]
    },
    {
      "pos": [
        13059,
        13138
      ],
      "content": "<bpt id=\"p1\">**</bpt>●<ept id=\"p1\">**</ept> - shows excellent accuracy, fast training times, and the use of linearity"
    },
    {
      "pos": [
        13140,
        13195
      ],
      "content": "<bpt id=\"p1\">**</bpt>○<ept id=\"p1\">**</ept> - shows good accuracy and moderate training times"
    },
    {
      "content": "Algorithm notes",
      "pos": [
        13200,
        13215
      ]
    },
    {
      "content": "Linear regression",
      "pos": [
        13221,
        13238
      ]
    },
    {
      "content": "As mentioned previously, <bpt id=\"p1\">[</bpt>linear regression<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905978.aspx)</ept>",
      "pos": [
        13240,
        13340
      ]
    },
    {
      "content": "fits a line (or plane, or hyperplane) to the data set.",
      "pos": [
        13341,
        13395
      ]
    },
    {
      "content": "It's a workhorse,",
      "pos": [
        13396,
        13413
      ]
    },
    {
      "content": "simple and fast, but it may be overly simplistic for some problems.",
      "pos": [
        13414,
        13481
      ]
    },
    {
      "content": "Check here for a <bpt id=\"p1\">[</bpt>linear regression\ntutorial<ept id=\"p1\">](machine-learning-linear-regression-in-azure.md)</ept>.",
      "pos": [
        13482,
        13576
      ]
    },
    {
      "content": "![Data with a linear trend][3]",
      "pos": [
        13578,
        13608
      ]
    },
    {
      "content": "Data with a linear trend",
      "pos": [
        13613,
        13637
      ]
    },
    {
      "content": "Logistic regression",
      "pos": [
        13646,
        13665
      ]
    },
    {
      "content": "Although it confusingly includes 'regression' in the name, logistic",
      "pos": [
        13667,
        13734
      ]
    },
    {
      "content": "regression is actually a powerful tool for",
      "pos": [
        13735,
        13777
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>two-class<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905994.aspx)</ept>",
      "pos": [
        13778,
        13845
      ]
    },
    {
      "content": "and",
      "pos": [
        13846,
        13849
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>multiclass<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905853.aspx)</ept>",
      "pos": [
        13850,
        13918
      ]
    },
    {
      "content": "classification.",
      "pos": [
        13919,
        13934
      ]
    },
    {
      "content": "It's fast and simple.",
      "pos": [
        13935,
        13956
      ]
    },
    {
      "content": "The fact that it uses an",
      "pos": [
        13957,
        13981
      ]
    },
    {
      "content": "'S'-shaped curve instead of a straight line makes it a natural fit for",
      "pos": [
        13982,
        14052
      ]
    },
    {
      "content": "dividing data into groups.",
      "pos": [
        14053,
        14079
      ]
    },
    {
      "content": "Logistic regression gives linear class",
      "pos": [
        14080,
        14118
      ]
    },
    {
      "content": "boundaries, so when you use it, make sure a linear approximation is",
      "pos": [
        14119,
        14186
      ]
    },
    {
      "content": "something you can live with.",
      "pos": [
        14187,
        14215
      ]
    },
    {
      "content": "![Logistic regression to two-class data with just one feature][4]",
      "pos": [
        14217,
        14282
      ]
    },
    {
      "pos": [
        14284,
        14448
      ],
      "content": "<bpt id=\"p1\">***</bpt>A logistic regression to two-class data with just one feature<ept id=\"p1\">***</ept> <bpt id=\"p2\">*</bpt>- the\nclass boundary is the point at which the logistic curve is just as close to both classes<ept id=\"p2\">*</ept>"
    },
    {
      "content": "Trees, forests, and jungles",
      "pos": [
        14454,
        14481
      ]
    },
    {
      "content": "Decision forests",
      "pos": [
        14483,
        14499
      ]
    },
    {
      "content": "(<bpt id=\"p1\">[</bpt>regression<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905862.aspx)</ept>,",
      "pos": [
        14500,
        14570
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>two-class<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn906008.aspx)</ept>,",
      "pos": [
        14571,
        14639
      ]
    },
    {
      "content": "and",
      "pos": [
        14640,
        14643
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>multiclass<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn906015.aspx)</ept>),",
      "pos": [
        14644,
        14714
      ]
    },
    {
      "content": "decision jungles",
      "pos": [
        14715,
        14731
      ]
    },
    {
      "content": "(<bpt id=\"p1\">[</bpt>two-class<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905976.aspx)</ept>",
      "pos": [
        14732,
        14800
      ]
    },
    {
      "content": "and",
      "pos": [
        14801,
        14804
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>multiclass<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905963.aspx)</ept>),",
      "pos": [
        14805,
        14875
      ]
    },
    {
      "content": "and boosted decision trees",
      "pos": [
        14876,
        14902
      ]
    },
    {
      "content": "(<bpt id=\"p1\">[</bpt>regression<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905801.aspx)</ept>",
      "pos": [
        14903,
        14972
      ]
    },
    {
      "content": "and",
      "pos": [
        14973,
        14976
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>two-class<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn906025.aspx)</ept>)",
      "pos": [
        14977,
        15045
      ]
    },
    {
      "content": "are all based on decision trees, a foundational machine learning",
      "pos": [
        15046,
        15110
      ]
    },
    {
      "content": "concept.",
      "pos": [
        15111,
        15119
      ]
    },
    {
      "content": "There are many variants of decision trees, but they all do the",
      "pos": [
        15120,
        15182
      ]
    },
    {
      "content": "same thing—subdivide the feature space into regions with mostly the same",
      "pos": [
        15183,
        15255
      ]
    },
    {
      "content": "label.",
      "pos": [
        15256,
        15262
      ]
    },
    {
      "content": "These can be regions of consistent category or of constant value,",
      "pos": [
        15263,
        15328
      ]
    },
    {
      "content": "depending on whether you are doing classification or regression.",
      "pos": [
        15329,
        15393
      ]
    },
    {
      "content": "![Decision tree subdivides a feature space][5]",
      "pos": [
        15395,
        15441
      ]
    },
    {
      "content": "A decision tree subdivides a feature space into regions of roughly",
      "pos": [
        15446,
        15512
      ]
    },
    {
      "content": "uniform values",
      "pos": [
        15513,
        15527
      ]
    },
    {
      "content": "Because a feature space can be subdivided into arbitrarily small",
      "pos": [
        15532,
        15596
      ]
    },
    {
      "content": "regions, it's easy to imagine dividing it finely enough to have one data",
      "pos": [
        15597,
        15669
      ]
    },
    {
      "content": "point per region—an extreme example of overfitting.",
      "pos": [
        15670,
        15721
      ]
    },
    {
      "content": "In order to avoid",
      "pos": [
        15722,
        15739
      ]
    },
    {
      "content": "this, a large set of trees are constructed with special mathematical",
      "pos": [
        15740,
        15808
      ]
    },
    {
      "content": "care taken that the trees are not correlated.",
      "pos": [
        15809,
        15854
      ]
    },
    {
      "content": "The average of this",
      "pos": [
        15855,
        15874
      ]
    },
    {
      "content": "\"decision forest\" is a tree that avoids overfitting.",
      "pos": [
        15875,
        15927
      ]
    },
    {
      "content": "Decision forests",
      "pos": [
        15928,
        15944
      ]
    },
    {
      "content": "can use a lot of memory.",
      "pos": [
        15945,
        15969
      ]
    },
    {
      "content": "Decision jungles are a variant that consumes",
      "pos": [
        15970,
        16014
      ]
    },
    {
      "content": "less memory at the expense of a slightly longer training time.",
      "pos": [
        16015,
        16077
      ]
    },
    {
      "content": "Boosted decision trees avoid overfitting by limiting how many times they",
      "pos": [
        16079,
        16151
      ]
    },
    {
      "content": "can subdivide and how few data points are allowed in each region.",
      "pos": [
        16152,
        16217
      ]
    },
    {
      "content": "The",
      "pos": [
        16218,
        16221
      ]
    },
    {
      "content": "algorithm constructs a sequence of trees, each of which learns to",
      "pos": [
        16222,
        16287
      ]
    },
    {
      "content": "compensate for the error left by the tree before.",
      "pos": [
        16288,
        16337
      ]
    },
    {
      "content": "The result is a very",
      "pos": [
        16338,
        16358
      ]
    },
    {
      "content": "accurate learner that tends to use a lot of memory.",
      "pos": [
        16359,
        16410
      ]
    },
    {
      "content": "For the full",
      "pos": [
        16411,
        16423
      ]
    },
    {
      "content": "technical description, check out <bpt id=\"p1\">[</bpt>Friedman's original\npaper<ept id=\"p1\">](http://www-stat.stanford.edu/~jhf/ftp/trebst.pdf)</ept>.",
      "pos": [
        16424,
        16535
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Fast forest quantile\nregression<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn913093.aspx)</ept>",
      "pos": [
        16537,
        16626
      ]
    },
    {
      "content": "is a variation of decision trees for the special case where you want to",
      "pos": [
        16627,
        16698
      ]
    },
    {
      "content": "know not only the typical (median) value of the data within a region,",
      "pos": [
        16699,
        16768
      ]
    },
    {
      "content": "but also its distribution in the form of quantiles.",
      "pos": [
        16769,
        16820
      ]
    },
    {
      "content": "Neural networks and perceptrons",
      "pos": [
        16826,
        16857
      ]
    },
    {
      "content": "Neural networks are brain-inspired learning algorithms covering",
      "pos": [
        16859,
        16922
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>multiclass<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn906030.aspx)</ept>,",
      "pos": [
        16923,
        16992
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>two-class<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905947.aspx)</ept>,",
      "pos": [
        16993,
        17061
      ]
    },
    {
      "content": "and",
      "pos": [
        17062,
        17065
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>regression<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905924.aspx)</ept>",
      "pos": [
        17066,
        17134
      ]
    },
    {
      "content": "problems.",
      "pos": [
        17135,
        17144
      ]
    },
    {
      "content": "They come in an infinite variety, but the neural networks",
      "pos": [
        17145,
        17202
      ]
    },
    {
      "content": "within Azure Machine Learning are all of the form of directed acyclic graphs.",
      "pos": [
        17203,
        17280
      ]
    },
    {
      "content": "That",
      "pos": [
        17281,
        17285
      ]
    },
    {
      "content": "means that input features are passed forward (never backward) through a",
      "pos": [
        17286,
        17357
      ]
    },
    {
      "content": "sequence of layers before being turned into outputs.",
      "pos": [
        17358,
        17410
      ]
    },
    {
      "content": "In each layer,",
      "pos": [
        17411,
        17425
      ]
    },
    {
      "content": "inputs are weighted in various combinations, summed, and passed on to",
      "pos": [
        17426,
        17495
      ]
    },
    {
      "content": "the next layer.",
      "pos": [
        17496,
        17511
      ]
    },
    {
      "content": "This combination of simple calculations results in the",
      "pos": [
        17512,
        17566
      ]
    },
    {
      "content": "ability to learn sophisticated class boundaries and data trends,",
      "pos": [
        17567,
        17631
      ]
    },
    {
      "content": "seemingly by magic.",
      "pos": [
        17632,
        17651
      ]
    },
    {
      "content": "Many-layered networks of this sort perform the \"deep",
      "pos": [
        17652,
        17704
      ]
    },
    {
      "content": "learning\" that fuels so much tech reporting and science fiction.",
      "pos": [
        17705,
        17769
      ]
    },
    {
      "content": "This high performance doesn't come for free, though.",
      "pos": [
        17771,
        17823
      ]
    },
    {
      "content": "Neural networks can",
      "pos": [
        17824,
        17843
      ]
    },
    {
      "content": "take a long time to train, particularly for large data sets with lots of",
      "pos": [
        17844,
        17916
      ]
    },
    {
      "content": "features.",
      "pos": [
        17917,
        17926
      ]
    },
    {
      "content": "They also have more parameters than most algorithms, which",
      "pos": [
        17927,
        17985
      ]
    },
    {
      "content": "means that parameter sweeping expands the training time a great deal.",
      "pos": [
        17986,
        18055
      ]
    },
    {
      "content": "And for those overachievers who wish to <bpt id=\"p1\">[</bpt>specify their own network\nstructure<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=402867)</ept>, the",
      "pos": [
        18056,
        18185
      ]
    },
    {
      "content": "possibilities are inexhaustible.",
      "pos": [
        18186,
        18218
      ]
    },
    {
      "content": "![Boundaries learned by neural networks][6]",
      "pos": [
        18220,
        18263
      ]
    },
    {
      "content": "The boundaries learned by neural networks can be complex and",
      "pos": [
        18296,
        18356
      ]
    },
    {
      "content": "irregular",
      "pos": [
        18357,
        18366
      ]
    },
    {
      "content": "The <bpt id=\"p1\">[</bpt>two-class averaged\nperceptron<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn906036.aspx)</ept>",
      "pos": [
        18371,
        18462
      ]
    },
    {
      "content": "is neural networks' answer to skyrocketing training times.",
      "pos": [
        18463,
        18521
      ]
    },
    {
      "content": "It uses a",
      "pos": [
        18522,
        18531
      ]
    },
    {
      "content": "network structure that gives linear class boundaries.",
      "pos": [
        18532,
        18585
      ]
    },
    {
      "content": "It is almost",
      "pos": [
        18586,
        18598
      ]
    },
    {
      "content": "primitive by today's standards, but it has a long history of working",
      "pos": [
        18599,
        18667
      ]
    },
    {
      "content": "robustly and is small enough to learn quickly.",
      "pos": [
        18668,
        18714
      ]
    },
    {
      "content": "SVMs",
      "pos": [
        18720,
        18724
      ]
    },
    {
      "content": "Support vector machines (SVMs) find the boundary that separates classes",
      "pos": [
        18726,
        18797
      ]
    },
    {
      "content": "by as wide a margin as possible.",
      "pos": [
        18798,
        18830
      ]
    },
    {
      "content": "When the two classes can't be clearly",
      "pos": [
        18831,
        18868
      ]
    },
    {
      "content": "separated, the algorithms find the best boundary they can.",
      "pos": [
        18869,
        18927
      ]
    },
    {
      "content": "As written in",
      "pos": [
        18928,
        18941
      ]
    },
    {
      "content": "Azure Machine Learning, the <bpt id=\"p1\">[</bpt>two-class\nSVM<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905835.aspx)</ept> does",
      "pos": [
        18942,
        19046
      ]
    },
    {
      "content": "this with a straight line only.",
      "pos": [
        19047,
        19078
      ]
    },
    {
      "content": "(In SVM-speak, it uses a linear kernel.)",
      "pos": [
        19079,
        19119
      ]
    },
    {
      "content": "Because it makes this linear approximation, it is able to run fairly",
      "pos": [
        19120,
        19188
      ]
    },
    {
      "content": "quickly.",
      "pos": [
        19189,
        19197
      ]
    },
    {
      "content": "Where it really shines is with feature-intense data, like text",
      "pos": [
        19198,
        19260
      ]
    },
    {
      "content": "or genomic.",
      "pos": [
        19261,
        19272
      ]
    },
    {
      "content": "In these cases SVMs are able to separate classes more",
      "pos": [
        19273,
        19326
      ]
    },
    {
      "content": "quickly and with less overfitting than most other algorithms, in",
      "pos": [
        19327,
        19391
      ]
    },
    {
      "content": "addition to requiring only a modest amount of memory.",
      "pos": [
        19392,
        19445
      ]
    },
    {
      "content": "![Support vector machine class boundary][7]",
      "pos": [
        19447,
        19490
      ]
    },
    {
      "content": "A typical support vector machine class boundary maximizes the margin",
      "pos": [
        19495,
        19563
      ]
    },
    {
      "content": "separating two classes",
      "pos": [
        19564,
        19586
      ]
    },
    {
      "content": "Another product of Microsoft Research, the <bpt id=\"p1\">[</bpt>two-class locally deep\nSVM<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn913070.aspx)</ept> is a",
      "pos": [
        19591,
        19723
      ]
    },
    {
      "content": "non-linear variant of SVM that retains most of the speed and memory",
      "pos": [
        19724,
        19791
      ]
    },
    {
      "content": "efficiency of the linear version.",
      "pos": [
        19792,
        19825
      ]
    },
    {
      "content": "It is ideal for cases where the linear",
      "pos": [
        19826,
        19864
      ]
    },
    {
      "content": "approach doesn't give accurate enough answers.",
      "pos": [
        19865,
        19911
      ]
    },
    {
      "content": "The developers kept it",
      "pos": [
        19912,
        19934
      ]
    },
    {
      "content": "fast by breaking the problem down into a bunch of small linear SVM",
      "pos": [
        19935,
        20001
      ]
    },
    {
      "content": "problems.",
      "pos": [
        20002,
        20011
      ]
    },
    {
      "content": "Read the <bpt id=\"p1\">[</bpt>full\ndescription<ept id=\"p1\">](http://research.microsoft.com/um/people/manik/pubs/Jose13.pdf)</ept>",
      "pos": [
        20012,
        20102
      ]
    },
    {
      "content": "for the details on how they pulled off this trick.",
      "pos": [
        20103,
        20153
      ]
    },
    {
      "content": "Using a clever extension of nonlinear SVMs, the <bpt id=\"p1\">[</bpt>one-class\nSVM<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn913103.aspx)</ept> draws",
      "pos": [
        20155,
        20280
      ]
    },
    {
      "content": "a boundary that tightly outlines the entire data set.",
      "pos": [
        20281,
        20334
      ]
    },
    {
      "content": "It is useful for",
      "pos": [
        20335,
        20351
      ]
    },
    {
      "content": "anomaly detection.",
      "pos": [
        20352,
        20370
      ]
    },
    {
      "content": "Any new data points that fall far outside that",
      "pos": [
        20371,
        20417
      ]
    },
    {
      "content": "boundary are unusual enough to be noteworthy.",
      "pos": [
        20418,
        20463
      ]
    },
    {
      "content": "Bayesian methods",
      "pos": [
        20469,
        20485
      ]
    },
    {
      "content": "Bayesian methods have a highly desirable quality: they avoid",
      "pos": [
        20487,
        20547
      ]
    },
    {
      "content": "overfitting.",
      "pos": [
        20548,
        20560
      ]
    },
    {
      "content": "They do this by making some assumptions beforehand about",
      "pos": [
        20561,
        20617
      ]
    },
    {
      "content": "the likely distribution of the answer.",
      "pos": [
        20618,
        20656
      ]
    },
    {
      "content": "Another byproduct of this",
      "pos": [
        20657,
        20682
      ]
    },
    {
      "content": "approach is that they have very few parameters.",
      "pos": [
        20683,
        20730
      ]
    },
    {
      "content": "Azure Machine Learning has both",
      "pos": [
        20731,
        20762
      ]
    },
    {
      "content": "Bayesian algorithms for both classification (<bpt id=\"p1\">[</bpt>Two-class Bayes' point\nmachine<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905930.aspx)</ept>)",
      "pos": [
        20763,
        20897
      ]
    },
    {
      "content": "and regression (<bpt id=\"p1\">[</bpt>Bayesian linear\nregression<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn906022.aspx)</ept>).",
      "pos": [
        20898,
        21000
      ]
    },
    {
      "content": "Note that these assume that the data can be split or fit with a straight",
      "pos": [
        21001,
        21073
      ]
    },
    {
      "content": "line.",
      "pos": [
        21074,
        21079
      ]
    },
    {
      "content": "On an historical note, Bayes' point machines were developed at Microsoft",
      "pos": [
        21081,
        21153
      ]
    },
    {
      "content": "Research.",
      "pos": [
        21154,
        21163
      ]
    },
    {
      "content": "They have some exceptionally beautiful theoretical work behind",
      "pos": [
        21164,
        21226
      ]
    },
    {
      "content": "them.",
      "pos": [
        21227,
        21232
      ]
    },
    {
      "content": "The interested student is directed to the <bpt id=\"p1\">[</bpt>original article in\nJMLR<ept id=\"p1\">](http://jmlr.org/papers/volume1/herbrich01a/herbrich01a.pdf)</ept> and an",
      "pos": [
        21233,
        21368
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>insightful blog by Chris\nBishop<ept id=\"p1\">](http://blogs.technet.com/b/machinelearning/archive/2014/10/30/embracing-uncertainty-probabilistic-inference.aspx)</ept>.",
      "pos": [
        21369,
        21517
      ]
    },
    {
      "content": "Specialized algorithms",
      "pos": [
        21523,
        21545
      ]
    },
    {
      "content": "If you have a very specific goal you may be in luck.",
      "pos": [
        21547,
        21599
      ]
    },
    {
      "content": "Within the Azure Machine Learning",
      "pos": [
        21600,
        21633
      ]
    },
    {
      "content": "collection there are algorithms that specialize in rank prediction",
      "pos": [
        21634,
        21700
      ]
    },
    {
      "content": "(<bpt id=\"p1\">[</bpt>ordinal\nregression<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn906029.aspx)</ept>),",
      "pos": [
        21701,
        21780
      ]
    },
    {
      "content": "count prediction (<bpt id=\"p1\">[</bpt>Poisson\nregression<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905988.aspx)</ept>),",
      "pos": [
        21781,
        21877
      ]
    },
    {
      "content": "and anomaly detection (one based on <bpt id=\"p1\">[</bpt>principal components\nanalysis<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn913102.aspx)</ept>",
      "pos": [
        21878,
        22001
      ]
    },
    {
      "content": "and one based on <bpt id=\"p1\">[</bpt>support vector\nmachine<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn913103.aspx)</ept>s).",
      "pos": [
        22002,
        22102
      ]
    },
    {
      "content": "And there is a lone clustering algorithm as well",
      "pos": [
        22103,
        22151
      ]
    },
    {
      "content": "(<bpt id=\"p1\">[</bpt>K-means<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/5049a09b-bd90-4c4e-9b46-7c87e3a36810/)</ept>).",
      "pos": [
        22152,
        22244
      ]
    },
    {
      "content": "![PCA-based anomaly detection][8]",
      "pos": [
        22246,
        22279
      ]
    },
    {
      "pos": [
        22281,
        22454
      ],
      "content": "<bpt id=\"p1\">***</bpt>PCA-based anomaly detection<ept id=\"p1\">***</ept> <bpt id=\"p2\">*</bpt>- the vast majority of the data falls\ninto a stereotypical distribution; points deviating dramatically from\nthat distribution are suspect<ept id=\"p2\">*</ept>"
    },
    {
      "content": "![Data set grouped using K-means][9]",
      "pos": [
        22456,
        22492
      ]
    },
    {
      "content": "A data set is grouped into 5 clusters using K-means",
      "pos": [
        22497,
        22548
      ]
    },
    {
      "content": "There is also an ensemble <bpt id=\"p1\">[</bpt>one-v-all multiclass\nclassifier<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn905887.aspx)</ept>,",
      "pos": [
        22553,
        22669
      ]
    },
    {
      "content": "which breaks the N-class classification problem into N-1 two-class",
      "pos": [
        22670,
        22736
      ]
    },
    {
      "content": "classification problems.",
      "pos": [
        22737,
        22761
      ]
    },
    {
      "content": "The accuracy, training time, and linearity",
      "pos": [
        22762,
        22804
      ]
    },
    {
      "content": "properties are determined by the two-class classifiers used.",
      "pos": [
        22805,
        22865
      ]
    },
    {
      "content": "![Two-class classifiers combined to form a three-class classifier][10]",
      "pos": [
        22867,
        22937
      ]
    },
    {
      "content": "A pair of two-class classifiers combine to form a three-class",
      "pos": [
        22942,
        23003
      ]
    },
    {
      "content": "classifier",
      "pos": [
        23004,
        23014
      ]
    },
    {
      "content": "Azure Machine Learning also includes access to a powerful machine learning framework",
      "pos": [
        23019,
        23103
      ]
    },
    {
      "content": "under the title of <bpt id=\"p1\">[</bpt>Vowpal\nWabbit<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/8383eb49-c0a3-45db-95c8-eb56a1fef5bf)</ept>.",
      "pos": [
        23104,
        23218
      ]
    },
    {
      "content": "VW defies categorization here, since it can learn both classification",
      "pos": [
        23219,
        23288
      ]
    },
    {
      "content": "and regression problems and can even learn from partially unlabeled",
      "pos": [
        23289,
        23356
      ]
    },
    {
      "content": "data.",
      "pos": [
        23357,
        23362
      ]
    },
    {
      "content": "You can configure it to use any one of a number of learning",
      "pos": [
        23363,
        23422
      ]
    },
    {
      "content": "algorithms, loss functions, and optimization algorithms.",
      "pos": [
        23423,
        23479
      ]
    },
    {
      "content": "It was designed",
      "pos": [
        23480,
        23495
      ]
    },
    {
      "content": "from the ground up to be efficient, parallel, and extremely fast.",
      "pos": [
        23496,
        23561
      ]
    },
    {
      "content": "It",
      "pos": [
        23562,
        23564
      ]
    },
    {
      "content": "handles ridiculously large feature sets with little apparent effort.",
      "pos": [
        23565,
        23633
      ]
    },
    {
      "content": "Started and led by Microsoft Research's own John Langford, VW is a",
      "pos": [
        23634,
        23700
      ]
    },
    {
      "content": "Formula One entry in a field of stock car algorithms.",
      "pos": [
        23701,
        23754
      ]
    },
    {
      "content": "Not every problem",
      "pos": [
        23755,
        23772
      ]
    },
    {
      "content": "fits VW, but if yours does, it may be worth your while to climb the",
      "pos": [
        23773,
        23840
      ]
    },
    {
      "content": "learning curve on its interface.",
      "pos": [
        23841,
        23873
      ]
    },
    {
      "content": "It's also available as <bpt id=\"p1\">[</bpt>stand-alone\nopen source code<ept id=\"p1\">](https://github.com/JohnLangford/vowpal_wabbit)</ept> in",
      "pos": [
        23874,
        23977
      ]
    },
    {
      "content": "several languages.",
      "pos": [
        23978,
        23996
      ]
    },
    {
      "content": "test",
      "pos": [
        24598,
        24602
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"How to choose machine learning algorithms | Microsoft Azure\"\n    description=\"How to choose Azure Machine Learning algorithms for supervised and unsupervised learning in clustering, classification, or regression experiments.\"\n    services=\"machine-learning\"\n    documentationCenter=\"\"\n    authors=\"brohrer\"\n    manager=\"paulettm\"\n    editor=\"cgronlun\"\n    tags=\"\"/>\n\n<tags\n    ms.service=\"machine-learning\"\n    ms.devlang=\"na\"\n    ms.topic=\"article\"\n    ms.tgt_pltfrm=\"na\"\n    ms.workload=\"data-services\"\n    ms.date=\"08/10/2015\"\n    ms.author=\"brohrer;garye\" />\n\n# How to choose algorithms for Microsoft Azure Machine Learning\n\nThe answer to the question \"What machine learning algorithm should I use?\" is always \"It depends.\" It depends on the size, quality, and nature of the data. It depends what you want to do with the answer. It depends on how the math of the algorithm was translated into instructions for the computer you are using. And it depends on how much time you have. Even the most experienced data scientists can't tell which algorithm will perform best before trying them.\n\n## The Machine Learning Algorithm Cheat Sheet\n\nThe **Microsoft Azure Machine Learning Algorithm Cheat Sheet** helps you choose the right machine learning algorithm for your predictive analytics solutions from the Microsoft Azure Machine Learning library of algorithms.\nThis article walks you through how to use it.\n\n> [AZURE.NOTE] To download the cheat sheet and follow along with this article, go to [Machine learning algorithm cheat sheet for Microsoft Azure Machine Learning Studio](machine-learning-algorithm-cheat-sheet.md).\n\nThis cheat sheet has a very specific audience in mind: a beginning data scientist with undergraduate-level machine learning, trying to choose an algorithm to start with in Azure Machine Learning Studio. That means that it makes some generalizations and oversimplifications, but it will point you in a safe direction. It also means that there are lots of algorithms not listed here. As Azure Machine Learning grows to encompass a more complete set of available methods, we'll add them.\n\nThese recommendations are compiled feedback and tips from a lot of data scientists and machine learning experts. We didn't agree on everything, but I've tried to harmonize our opinions into a rough consensus. Most of the statements of disagreement begin with \"It depends…\"\n\n### How to use the cheat sheet\n\nRead the path and algorithm labels on the chart as \"For *&lt;path\nlabel&gt;* use *&lt;algorithm&gt;*.\" For example, \"For *speed* use *two\nclass logistic regression*.\" Sometimes more than one branch will apply.\nSometimes none of them will be a perfect fit. They're intended to be\nrule-of-thumb recommendations, so don't worry about it being exact.\nSeveral data scientists I talked with said that the only sure way to\nfind the very best algorithm is to try all of them.\n\nHere's an example from the [Azure Machine Learning\nGallery](http://gallery.azureml.net/) of an experiment that tries\nseveral algorithms against the same data and compares the results:\n[Compare Multi-class Classifiers: Letter\nrecognition](http://gallery.azureml.net/Details/a635502fc98b402a890efe21cec65b92).\n\n## Flavors of machine learning\n\n### Supervised\n\nSupervised learning algorithms make predictions based on a set of\nexamples. For instance, historical stock prices can be used to hazard\nguesses at future prices. Each example used for training is labeled with\nthe value of interest—in this case the stock price. A supervised\nlearning algorithm looks for patterns in those value labels. It can use\nany information that might be relevant—the day of the week, the season,\nthe company's financial data, the type of industry, the presence of\ndisruptive geopolicitical events—and each algorithm looks for different\ntypes of patterns. After the algorithm has found the best pattern it\ncan, it uses that pattern to make predictions for unlabeled testing\ndata—tomorrow's prices.\n\nThis is a popular and useful type of machine learning. With one\nexception, all of the modules in Azure Machine Learning are supervised learning\nalgorithms. There are several specific types of supervised learning that\nare represented within Azure Machine Learning: classification, regression, and anomaly\ndetection.\n\n* **Classification**. When the data are being used to predict a\ncategory, supervised learning is also called classification. This is\nthe case when assigning an image as a picture of either a 'cat' or a\n'dog'. When there are only two choices, this is called **two-class**\nor **binomial classification**. When there are more categories, as\nwhen predicting the winner of the NCAA March Madness tournament, this\nproblem is known as **multi-class classification**.\n\n* **Regression**. When a value is being predicted, as with stock prices,\nsupervised learning is called regression.\n\n* **Anomaly detection**. Sometimes the goal is to identify data points\nthat are simply unusual. In fraud detection, for example, any highly\nunusual credit card spending patterns are suspect. The possible\nvariations are so numerous and the training examples so few, that it's\nnot feasible to learn what fraudulent activity looks like. The\napproach that anomaly detection takes is to simply learn what normal\nactivity looks like (using a history non-fraudulent transactions) and\nidentify anything that is significantly different.\n\n### Unsupervised\n\nIn unsupervised learning, data points have no labels associated with\nthem. Instead, the goal of an unsupervised learning algorithm is to\norganize the data in some way or to describe its structure. This can\nmean grouping it into clusters or finding different ways of looking at\ncomplex data so that it appears simpler or more organized.\n\n### Reinforcement learning\n\nIn reinforcement learning, the algorithm gets to choose an action in\nresponse to each data point. The learning algorithm also receives a\nreward signal a short time later, indicating how good the decision was.\nBased on this, the algorithm modifies its strategy in order to achieve\nthe highest reward. Currently there are no reinforcement learning\nalgorithm modules in Azure Machine Learning. Reinforcement learning is common in\nrobotics, where the set of sensor readings at one point in time is a\ndata point, and the algorithm must choose the robot's next action. It is\nalso a natural fit for Internet of Things applications.\n\n## Considerations when choosing an algorithm\n\n### Accuracy\n\nGetting the most accurate answer possible isn't always necessary.\nSometimes an approximation is adequate, depending on what you want to\nuse it for. If that's the case, you may be able to cut your processing\ntime dramatically by sticking with more approximate methods. Another\nadvantage of more approximate methods is that they naturally tend to\navoid [overfitting](https://youtu.be/DQWI1kvmwRg).\n\n### Training time\n\nThe number of minutes or hours necessary to train a model varies a great\ndeal between algorithms. Training time is often closely tied to\naccuracy—one typically accompanies the other. In addition, some\nalgorithms are more sensitive to the number of data points than others.\nWhen time is limited it can drive the choice of algorithm, especially\nwhen the data set is large.\n\n### Linearity\n\nLots of machine learning algorithms make use of linearity. Linear\nclassification algorithms assume that classes can be separated by a\nstraight line (or its higher-dimensional analog). These include logistic\nregression and support vector machines (as implemented in Azure Machine Learning).\nLinear regression algorithms assume that data trends follow a straight\nline. These assumptions aren't bad for some problems, but on others they\nbring accuracy down.\n\n![Non-linear class bounday][1]\n\n***Non-linear class boundary*** *- relying on a linear classification\nalgorithm would result in low accuracy*\n\n![Data with a nonlinear trend][2]\n\n***Data with a nonlinear trend*** *- using a linear regression method would\ngenerate much larger errors than necessary*\n\nDespite their dangers, linear algorithms are very popular as a first\nline of attack. They tend to be algorithmically simple and fast to\ntrain.\n\n### Number of parameters\n\nParameters are the knobs a data scientist gets to turn when setting up\nan algorithm. They are numbers that affect the algorithm's behavior,\nsuch as error tolerance or number of iterations, or options between\nvariants of how the algorithm behaves. The training time and accuracy of\nthe algorithm can sometimes be quite sensitive to getting just the right\nsettings. Typically, algorithms with large numbers parameters require\nthe most trial and error to find a good combination.\n\nAlternatively, there is a [parameter\nsweeping](machine-learning-algorithm-parameters-optimize.md)\nmodule block in Azure Machine Learning that automatically tries all parameter\ncombinations at whatever granularity you choose. While this is a great\nway to make sure you've spanned the parameter space, the time required\nto train a model increases exponentially with the number of parameters.\n\nThe upside is that having many parameters typically indicates that an\nalgorithm has greater flexibility. It can often achieve very good\naccuracy. Provided you can find the right combination of parameter\nsettings.\n\n### Number of features\n\nFor certain types of data, the number of features can be very large\ncompared to the number of data points. This is often the case with\ngenetics or textual data. The large number of features can bog down some\nlearning algorithms, making training time unfeasibly long. Support\nVector Machines are particularly well suited to this case (see below).\n\n### Special cases\n\nSome learning algorithms make particular assumptions about the structure\nof the data or the desired results. If you can find one that fits your\nneeds, it can give you more useful results, more accurate predictions,\nor faster training times.\n\n|**Algorithm**|**Accuracy**|**Training time**|**Linearity**|**Parameters**|**Notes**|\n|---|:---:|:---:|:---:|:---:|---|\n|**Two-class classification**| | | | | |\n|[logistic regression](https://msdn.microsoft.com/library/azure/dn905994.aspx)                    | |●|●|5| |\n|[decision forest](https://msdn.microsoft.com/library/azure/dn906008.aspx)|●|○| |6| |\n|[decision jungle](https://msdn.microsoft.com/library/azure/dn905976.aspx)|●|○| |6|Low memory footprint|\n|[boosted decision tree](https://msdn.microsoft.com/library/azure/dn906025.aspx)|●|○| |6|Large memory footprint|\n|[neural network](https://msdn.microsoft.com/library/azure/dn905947.aspx)|●| | |9|[Additional customization is possible](http://go.microsoft.com/fwlink/?LinkId=402867)|\n|[averaged perceptron](https://msdn.microsoft.com/library/azure/dn906036.aspx)|○|○|●|4| |\n|[support vector machine](https://msdn.microsoft.com/library/azure/dn905835.aspx)| |○|●|5|Good for large feature sets|\n|[locally deep support vector machine](https://msdn.microsoft.com/library/azure/dn913070.aspx)|○| | |8|Good for large feature sets|\n|[Bayes’ point machine](https://msdn.microsoft.com/library/azure/dn905930.aspx)| |○|●|3| |\n|**Multi-class classification**| | | | | |\n|[logistic regression](https://msdn.microsoft.com/en-us/library/azure/dn905853.aspx)| |●|●|5| |\n|[decision forest](https://msdn.microsoft.com/library/azure/dn906015.aspx)|●|○| |6| |\n|[decision jungle ](https://msdn.microsoft.com/library/azure/dn905963.aspx)|●|○| |6|Low memory footprint|\n|[neural network](https://msdn.microsoft.com/library/azure/dn906030.aspx)|●| | |9|[Additional customization is possible](http://go.microsoft.com/fwlink/?LinkId=402867)|\n|[one-v-all](https://msdn.microsoft.com/library/azure/dn905887.aspx)|-|-|-|-|See properties of the two-class method selected|\n|**Regression**| | | | | |\n|[linear ](https://msdn.microsoft.com/library/azure/dn905978.aspx)| |●|●|4| |\n|[Bayesian linear](https://msdn.microsoft.com/library/azure/dn906022.aspx)| |○|●|2| |\n|[decision forest](https://msdn.microsoft.com/library/azure/dn905862.aspx)|●|○| |6| |\n|[boosted decision tree](https://msdn.microsoft.com/library/azure/dn905801.aspx)|●|○| |5|Large memory footprint|\n|[fast forest quantile](https://msdn.microsoft.com/library/azure/dn913093.aspx)|●|○| |9|Distributions rather than point predictions|\n|[neural network](https://msdn.microsoft.com/library/azure/dn905924.aspx)|●| | |9|[Additional customization is possible](http://go.microsoft.com/fwlink/?LinkId=402867)|\n|[Poisson ](https://msdn.microsoft.com/library/azure/dn905988.aspx)| | |●|5|Technically log-linear. For predicting counts|\n|[ordinal](https://msdn.microsoft.com/library/azure/dn906029.aspx)| | | |0|For predicting rank-ordering|\n|**Anomaly detection**| | | | | |\n|[support vector machine](https://msdn.microsoft.com/library/azure/dn913103.aspx)|○|○| |2|Especially good for large feature sets|\n|[PCA-based anomaly detection ](https://msdn.microsoft.com/library/azure/dn913102.aspx)| |○|●|3| |\n|[K-means](https://msdn.microsoft.com/library/azure/5049a09b-bd90-4c4e-9b46-7c87e3a36810/)| |○|●|4|A clustering algorithm|\n\n\n**Algorithm properties:**\n\n**●** - shows excellent accuracy, fast training times, and the use of linearity\n\n**○** - shows good accuracy and moderate training times\n\n## Algorithm notes\n\n### Linear regression\n\nAs mentioned previously, [linear regression](https://msdn.microsoft.com/library/azure/dn905978.aspx)\nfits a line (or plane, or hyperplane) to the data set. It's a workhorse,\nsimple and fast, but it may be overly simplistic for some problems.\nCheck here for a [linear regression\ntutorial](machine-learning-linear-regression-in-azure.md).\n\n![Data with a linear trend][3]\n\n***Data with a linear trend***\n\n### Logistic regression\n\nAlthough it confusingly includes 'regression' in the name, logistic\nregression is actually a powerful tool for\n[two-class](https://msdn.microsoft.com/library/azure/dn905994.aspx)\nand\n[multiclass](https://msdn.microsoft.com/library/azure/dn905853.aspx)\nclassification. It's fast and simple. The fact that it uses an\n'S'-shaped curve instead of a straight line makes it a natural fit for\ndividing data into groups. Logistic regression gives linear class\nboundaries, so when you use it, make sure a linear approximation is\nsomething you can live with.\n\n![Logistic regression to two-class data with just one feature][4]\n\n***A logistic regression to two-class data with just one feature*** *- the\nclass boundary is the point at which the logistic curve is just as close to both classes*\n\n### Trees, forests, and jungles\n\nDecision forests\n([regression](https://msdn.microsoft.com/library/azure/dn905862.aspx),\n[two-class](https://msdn.microsoft.com/library/azure/dn906008.aspx),\nand\n[multiclass](https://msdn.microsoft.com/library/azure/dn906015.aspx)),\ndecision jungles\n([two-class](https://msdn.microsoft.com/library/azure/dn905976.aspx)\nand\n[multiclass](https://msdn.microsoft.com/library/azure/dn905963.aspx)),\nand boosted decision trees\n([regression](https://msdn.microsoft.com/library/azure/dn905801.aspx)\nand\n[two-class](https://msdn.microsoft.com/library/azure/dn906025.aspx))\nare all based on decision trees, a foundational machine learning\nconcept. There are many variants of decision trees, but they all do the\nsame thing—subdivide the feature space into regions with mostly the same\nlabel. These can be regions of consistent category or of constant value,\ndepending on whether you are doing classification or regression.\n\n![Decision tree subdivides a feature space][5]\n\n***A decision tree subdivides a feature space into regions of roughly\nuniform values***\n\nBecause a feature space can be subdivided into arbitrarily small\nregions, it's easy to imagine dividing it finely enough to have one data\npoint per region—an extreme example of overfitting. In order to avoid\nthis, a large set of trees are constructed with special mathematical\ncare taken that the trees are not correlated. The average of this\n\"decision forest\" is a tree that avoids overfitting. Decision forests\ncan use a lot of memory. Decision jungles are a variant that consumes\nless memory at the expense of a slightly longer training time.\n\nBoosted decision trees avoid overfitting by limiting how many times they\ncan subdivide and how few data points are allowed in each region. The\nalgorithm constructs a sequence of trees, each of which learns to\ncompensate for the error left by the tree before. The result is a very\naccurate learner that tends to use a lot of memory. For the full\ntechnical description, check out [Friedman's original\npaper](http://www-stat.stanford.edu/~jhf/ftp/trebst.pdf).\n\n[Fast forest quantile\nregression](https://msdn.microsoft.com/library/azure/dn913093.aspx)\nis a variation of decision trees for the special case where you want to\nknow not only the typical (median) value of the data within a region,\nbut also its distribution in the form of quantiles.\n\n### Neural networks and perceptrons\n\nNeural networks are brain-inspired learning algorithms covering\n[multiclass](https://msdn.microsoft.com/library/azure/dn906030.aspx),\n[two-class](https://msdn.microsoft.com/library/azure/dn905947.aspx),\nand\n[regression](https://msdn.microsoft.com/library/azure/dn905924.aspx)\nproblems. They come in an infinite variety, but the neural networks\nwithin Azure Machine Learning are all of the form of directed acyclic graphs. That\nmeans that input features are passed forward (never backward) through a\nsequence of layers before being turned into outputs. In each layer,\ninputs are weighted in various combinations, summed, and passed on to\nthe next layer. This combination of simple calculations results in the\nability to learn sophisticated class boundaries and data trends,\nseemingly by magic. Many-layered networks of this sort perform the \"deep\nlearning\" that fuels so much tech reporting and science fiction.\n\nThis high performance doesn't come for free, though. Neural networks can\ntake a long time to train, particularly for large data sets with lots of\nfeatures. They also have more parameters than most algorithms, which\nmeans that parameter sweeping expands the training time a great deal.\nAnd for those overachievers who wish to [specify their own network\nstructure](http://go.microsoft.com/fwlink/?LinkId=402867), the\npossibilities are inexhaustible.\n\n![Boundaries learned by neural networks][6]\n---------------------------\n\n***The boundaries learned by neural networks can be complex and\nirregular***\n\nThe [two-class averaged\nperceptron](https://msdn.microsoft.com/library/azure/dn906036.aspx)\nis neural networks' answer to skyrocketing training times. It uses a\nnetwork structure that gives linear class boundaries. It is almost\nprimitive by today's standards, but it has a long history of working\nrobustly and is small enough to learn quickly.\n\n### SVMs\n\nSupport vector machines (SVMs) find the boundary that separates classes\nby as wide a margin as possible. When the two classes can't be clearly\nseparated, the algorithms find the best boundary they can. As written in\nAzure Machine Learning, the [two-class\nSVM](https://msdn.microsoft.com/library/azure/dn905835.aspx) does\nthis with a straight line only. (In SVM-speak, it uses a linear kernel.)\nBecause it makes this linear approximation, it is able to run fairly\nquickly. Where it really shines is with feature-intense data, like text\nor genomic. In these cases SVMs are able to separate classes more\nquickly and with less overfitting than most other algorithms, in\naddition to requiring only a modest amount of memory.\n\n![Support vector machine class boundary][7]\n\n***A typical support vector machine class boundary maximizes the margin\nseparating two classes***\n\nAnother product of Microsoft Research, the [two-class locally deep\nSVM](https://msdn.microsoft.com/library/azure/dn913070.aspx) is a\nnon-linear variant of SVM that retains most of the speed and memory\nefficiency of the linear version. It is ideal for cases where the linear\napproach doesn't give accurate enough answers. The developers kept it\nfast by breaking the problem down into a bunch of small linear SVM\nproblems. Read the [full\ndescription](http://research.microsoft.com/um/people/manik/pubs/Jose13.pdf)\nfor the details on how they pulled off this trick.\n\nUsing a clever extension of nonlinear SVMs, the [one-class\nSVM](https://msdn.microsoft.com/library/azure/dn913103.aspx) draws\na boundary that tightly outlines the entire data set. It is useful for\nanomaly detection. Any new data points that fall far outside that\nboundary are unusual enough to be noteworthy.\n\n### Bayesian methods\n\nBayesian methods have a highly desirable quality: they avoid\noverfitting. They do this by making some assumptions beforehand about\nthe likely distribution of the answer. Another byproduct of this\napproach is that they have very few parameters. Azure Machine Learning has both\nBayesian algorithms for both classification ([Two-class Bayes' point\nmachine](https://msdn.microsoft.com/library/azure/dn905930.aspx))\nand regression ([Bayesian linear\nregression](https://msdn.microsoft.com/library/azure/dn906022.aspx)).\nNote that these assume that the data can be split or fit with a straight\nline.\n\nOn an historical note, Bayes' point machines were developed at Microsoft\nResearch. They have some exceptionally beautiful theoretical work behind\nthem. The interested student is directed to the [original article in\nJMLR](http://jmlr.org/papers/volume1/herbrich01a/herbrich01a.pdf) and an\n[insightful blog by Chris\nBishop](http://blogs.technet.com/b/machinelearning/archive/2014/10/30/embracing-uncertainty-probabilistic-inference.aspx).\n\n### Specialized algorithms\n\nIf you have a very specific goal you may be in luck. Within the Azure Machine Learning\ncollection there are algorithms that specialize in rank prediction\n([ordinal\nregression](https://msdn.microsoft.com/library/azure/dn906029.aspx)),\ncount prediction ([Poisson\nregression](https://msdn.microsoft.com/library/azure/dn905988.aspx)),\nand anomaly detection (one based on [principal components\nanalysis](https://msdn.microsoft.com/library/azure/dn913102.aspx)\nand one based on [support vector\nmachine](https://msdn.microsoft.com/library/azure/dn913103.aspx)s).\nAnd there is a lone clustering algorithm as well\n([K-means](https://msdn.microsoft.com/library/azure/5049a09b-bd90-4c4e-9b46-7c87e3a36810/)).\n\n![PCA-based anomaly detection][8]\n\n***PCA-based anomaly detection*** *- the vast majority of the data falls\ninto a stereotypical distribution; points deviating dramatically from\nthat distribution are suspect*\n\n![Data set grouped using K-means][9]\n\n***A data set is grouped into 5 clusters using K-means***\n\nThere is also an ensemble [one-v-all multiclass\nclassifier](https://msdn.microsoft.com/library/azure/dn905887.aspx),\nwhich breaks the N-class classification problem into N-1 two-class\nclassification problems. The accuracy, training time, and linearity\nproperties are determined by the two-class classifiers used.\n\n![Two-class classifiers combined to form a three-class classifier][10]\n\n***A pair of two-class classifiers combine to form a three-class\nclassifier***\n\nAzure Machine Learning also includes access to a powerful machine learning framework\nunder the title of [Vowpal\nWabbit](https://msdn.microsoft.com/library/azure/8383eb49-c0a3-45db-95c8-eb56a1fef5bf).\nVW defies categorization here, since it can learn both classification\nand regression problems and can even learn from partially unlabeled\ndata. You can configure it to use any one of a number of learning\nalgorithms, loss functions, and optimization algorithms. It was designed\nfrom the ground up to be efficient, parallel, and extremely fast. It\nhandles ridiculously large feature sets with little apparent effort.\nStarted and led by Microsoft Research's own John Langford, VW is a\nFormula One entry in a field of stock car algorithms. Not every problem\nfits VW, but if yours does, it may be worth your while to climb the\nlearning curve on its interface. It's also available as [stand-alone\nopen source code](https://github.com/JohnLangford/vowpal_wabbit) in\nseveral languages.\n\n\n<!-- Media -->\n\n[1]: ./media/machine-learning-algorithm-choice/image1.png\n[2]: ./media/machine-learning-algorithm-choice/image2.png\n[3]: ./media/machine-learning-algorithm-choice/image3.png\n[4]: ./media/machine-learning-algorithm-choice/image4.png\n[5]: ./media/machine-learning-algorithm-choice/image5.png\n[6]: ./media/machine-learning-algorithm-choice/image6.png\n[7]: ./media/machine-learning-algorithm-choice/image7.png\n[8]: ./media/machine-learning-algorithm-choice/image8.png\n[9]: ./media/machine-learning-algorithm-choice/image9.png\n[10]: ./media/machine-learning-algorithm-choice/image10.png\n\ntest\n"
}