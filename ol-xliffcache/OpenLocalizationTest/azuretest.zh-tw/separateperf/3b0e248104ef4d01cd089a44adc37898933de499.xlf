<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>App Model v2.0 | Microsoft Azure</source>
          <target state="new">App Model v2.0 | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The protocols supported by the Azure AD v2.0 app model public preview.</source>
          <target state="new">The protocols supported by the Azure AD v2.0 app model public preview.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>App model v2.0 preview: Protocols - OAuth 2.0 &amp; OpenID Connect</source>
          <target state="new">App model v2.0 preview: Protocols - OAuth 2.0 &amp; OpenID Connect</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The v2.0 app model provides identity-as-a-service for your apps by supporting industry standard protocols, OpenID Connect and OAuth 2.0.</source>
          <target state="new">The v2.0 app model provides identity-as-a-service for your apps by supporting industry standard protocols, OpenID Connect and OAuth 2.0.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>While the service is standard compliant, there can be subtle differences between any two implementations of these protocols.</source>
          <target state="new">While the service is standard compliant, there can be subtle differences between any two implementations of these protocols.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The information here will be useful if you choose to write your code by directly sending &amp; handling HTTP requests, rather than using one of our open source libraries.</source>
          <target state="new">The information here will be useful if you choose to write your code by directly sending &amp; handling HTTP requests, rather than using one of our open source libraries.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This information applies to the v2.0 app model public preview.</source>
          <target state="new">This information applies to the v2.0 app model public preview.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="p1">[</bpt><ept id="p1">Azure Active Directory Developer Guide](active-directory-developers-guide.md)</ept>.</source>
          <target state="new">For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="p1">[</bpt><ept id="p1">Azure Active Directory Developer Guide](active-directory-developers-guide.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Tokens
The v2.0 app model's implementation of OAuth 2.0 and OpenID Connect make extensive use of bearer tokens, including bearer tokens represented as JWTs.</source>
          <target state="new">Tokens
The v2.0 app model's implementation of OAuth 2.0 and OpenID Connect make extensive use of bearer tokens, including bearer tokens represented as JWTs.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A bearer token is a lightweight security token that grants the “bearer” access to a protected resource.</source>
          <target state="new">A bearer token is a lightweight security token that grants the “bearer” access to a protected resource.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this sense, the “bearer” is any party that can present the token.</source>
          <target state="new">In this sense, the “bearer” is any party that can present the token.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Though a party must first authenticate with Azure AD to receive the bearer token, if the required steps are not taken to secure the token in transmission and storage, it can be intercepted and used by an unintended party.</source>
          <target state="new">Though a party must first authenticate with Azure AD to receive the bearer token, if the required steps are not taken to secure the token in transmission and storage, it can be intercepted and used by an unintended party.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>While some security tokens have a built-in mechanism for preventing unauthorized parties from using them, bearer tokens do not have this mechanism and must be transported in a secure channel such as transport layer security (HTTPS).</source>
          <target state="new">While some security tokens have a built-in mechanism for preventing unauthorized parties from using them, bearer tokens do not have this mechanism and must be transported in a secure channel such as transport layer security (HTTPS).</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If a bearer token is transmitted in the clear, a man-in the middle attack can be used by a malicious party to acquire the token and use it for an unauthorized access to a protected resource.</source>
          <target state="new">If a bearer token is transmitted in the clear, a man-in the middle attack can be used by a malicious party to acquire the token and use it for an unauthorized access to a protected resource.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The same security principles apply when storing or caching bearer tokens for later use.</source>
          <target state="new">The same security principles apply when storing or caching bearer tokens for later use.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Always ensure that your  app transmits and stores bearer tokens in a secure manner.</source>
          <target state="new">Always ensure that your  app transmits and stores bearer tokens in a secure manner.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more security considerations on bearer tokens, see <bpt id="p1">[</bpt><ept id="p1">RFC 6750 Section 5](http://tools.ietf.org/html/rfc6750)</ept>.</source>
          <target state="new">For more security considerations on bearer tokens, see <bpt id="p1">[</bpt><ept id="p1">RFC 6750 Section 5](http://tools.ietf.org/html/rfc6750)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Further details of different types of tokens used in the v2.0 app model is available in <bpt id="p1">[</bpt><ept id="p1">the v2.0 app model token reference](active-directory-v2-tokens.md)</ept>.</source>
          <target state="new">Further details of different types of tokens used in the v2.0 app model is available in <bpt id="p1">[</bpt><ept id="p1">the v2.0 app model token reference](active-directory-v2-tokens.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Basics
Every app that uses the v2.0 app model will need to be registered at <bpt id="p1">[</bpt><ept id="p1">apps.dev.microsoft.com](https://apps.dev.microsoft.com)</ept>.</source>
          <target state="new">The Basics
Every app that uses the v2.0 app model will need to be registered at <bpt id="p1">[</bpt><ept id="p1">apps.dev.microsoft.com](https://apps.dev.microsoft.com)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The app registration process will collect &amp; assign a few values to your app:

- An <bpt id="p1">**</bpt>Application Id<ept id="p1">**</ept> that uniquely identifies your app
- A <bpt id="p2">**</bpt>Redirect URI<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Package Identifier<ept id="p3">**</ept> that can be used to direct responses back to your app
- A few other scenario-specific values.</source>
          <target state="new">The app registration process will collect &amp; assign a few values to your app:

- An <bpt id="p1">**</bpt>Application Id<ept id="p1">**</ept> that uniquely identifies your app
- A <bpt id="p2">**</bpt>Redirect URI<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Package Identifier<ept id="p3">**</ept> that can be used to direct responses back to your app
- A few other scenario-specific values.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more detail, learn how to <bpt id="p1">[</bpt><ept id="p1">register an app](active-directory-v2-app-registration.md)</ept>.</source>
          <target state="new">For more detail, learn how to <bpt id="p1">[</bpt><ept id="p1">register an app](active-directory-v2-app-registration.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Once registered, the  app communicates with Azure AD my sending requests to the v2.0 endpoint:

```
https://login.microsoftonline.com/common/oauth2/v2.0/authorize
https://login.microsoftonline.com/common/oauth2/v2.0/token
```

In nearly all OAuth &amp; OpenID Connect flows, there are four parties involved in the exchange:

<ph id="ph1">![OAuth 2.0 Roles](../media/active-directory-v2-flows/protocols_roles.png)</ph><ph id="ph2">

-</ph> The <bpt id="p1">**</bpt>Authorization Server<ept id="p1">**</ept> is the v2.0 Endpoint.</source>
          <target state="new">Once registered, the  app communicates with Azure AD my sending requests to the v2.0 endpoint:

```
https://login.microsoftonline.com/common/oauth2/v2.0/authorize
https://login.microsoftonline.com/common/oauth2/v2.0/token
```

In nearly all OAuth &amp; OpenID Connect flows, there are four parties involved in the exchange:

<ph id="ph1">![OAuth 2.0 Roles](../media/active-directory-v2-flows/protocols_roles.png)</ph><ph id="ph2">

-</ph> The <bpt id="p1">**</bpt>Authorization Server<ept id="p1">**</ept> is the v2.0 Endpoint.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It is responsible for ensuring the user's identity, granting and revoking access to resources, and issuing tokens.</source>
          <target state="new">It is responsible for ensuring the user's identity, granting and revoking access to resources, and issuing tokens.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It is also known as the identity provider - it securely handles anything to do with the user's information, their access, and the trust relationships between parties in an flow.</source>
          <target state="new">It is also known as the identity provider - it securely handles anything to do with the user's information, their access, and the trust relationships between parties in an flow.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>- The <bpt id="p1">**</bpt>Resource Owner<ept id="p1">**</ept> is typically the end-user.</source>
          <target state="new">- The <bpt id="p1">**</bpt>Resource Owner<ept id="p1">**</ept> is typically the end-user.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It is the party that owns the data, and has the power to allow third parties to access that data, or resource.</source>
          <target state="new">It is the party that owns the data, and has the power to allow third parties to access that data, or resource.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>- The <bpt id="p1">**</bpt>OAuth Client<ept id="p1">**</ept> is your app, identified by its Application Id.</source>
          <target state="new">- The <bpt id="p1">**</bpt>OAuth Client<ept id="p1">**</ept> is your app, identified by its Application Id.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It is usually the party that the end-user interacts with, and it requests tokens from the authorization server.</source>
          <target state="new">It is usually the party that the end-user interacts with, and it requests tokens from the authorization server.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The client must be granted permission to access the resource by the resource owner.</source>
          <target state="new">The client must be granted permission to access the resource by the resource owner.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>- The <bpt id="p1">**</bpt>Resource Server<ept id="p1">**</ept> is where the resource or data resides.</source>
          <target state="new">- The <bpt id="p1">**</bpt>Resource Server<ept id="p1">**</ept> is where the resource or data resides.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It trusts the Authorization Server to securely authenticate and authorize the OAuth Client, and uses Bearer access_tokens to ensure that access to a resource can be granted.</source>
          <target state="new">It trusts the Authorization Server to securely authenticate and authorize the OAuth Client, and uses Bearer access_tokens to ensure that access to a resource can be granted.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>OAuth2 Authorization Code Flow
The OAuth 2.0 authorization code flow is described in in <bpt id="p1">[</bpt><ept id="p1">section 4.1 of the OAuth 2.0 specification](http://tools.ietf.org/html/rfc6749)</ept>.</source>
          <target state="new">OAuth2 Authorization Code Flow
The OAuth 2.0 authorization code flow is described in in <bpt id="p1">[</bpt><ept id="p1">section 4.1 of the OAuth 2.0 specification](http://tools.ietf.org/html/rfc6749)</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>It is used to perform authentication and authorization in the majority of  app types, including <bpt id="p1">[</bpt><ept id="p1">web apps](active-directory-v2-flows.md#web-apps)</ept> and <bpt id="p2">[</bpt><ept id="p2">natively installed  apps](active-directory-v2-flows.md#mobile-and-native-apps)</ept>.</source>
          <target state="new">It is used to perform authentication and authorization in the majority of  app types, including <bpt id="p1">[</bpt><ept id="p1">web apps](active-directory-v2-flows.md#web-apps)</ept> and <bpt id="p2">[</bpt><ept id="p2">natively installed  apps](active-directory-v2-flows.md#mobile-and-native-apps)</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It enables apps to securely acquire access_tokens which can be used to access resources that are secured using the v2.0 app model.</source>
          <target state="new">It enables apps to securely acquire access_tokens which can be used to access resources that are secured using the v2.0 app model.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Here is the entire flow for a native  app; each request is detailed in the sections below:</source>
          <target state="new">Here is the entire flow for a native  app; each request is detailed in the sections below:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![OAuth Auth Code Flow](../media/active-directory-v2-flows/convergence_scenarios_native.png)</ph><ph id="ph2">

####</ph> Request an Authorization Code
The authorization code flow begins with the client directing the user to the <ph id="ph3">`/authorize`</ph> endpoint.</source>
          <target state="new"><ph id="ph1">![OAuth Auth Code Flow](../media/active-directory-v2-flows/convergence_scenarios_native.png)</ph><ph id="ph2">

####</ph> Request an Authorization Code
The authorization code flow begins with the client directing the user to the <ph id="ph3">`/authorize`</ph> endpoint.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In this request, the client indicates the permissions it needs to acquire from the user:

```
GET https://login.microsoftonline.com/common/oauth2/v2.0/authorize?</source>
          <target state="new">In this request, the client indicates the permissions it needs to acquire from the user:

```
GET https://login.microsoftonline.com/common/oauth2/v2.0/authorize?</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>client_id=2d4d11a2-f814-46a7-890a-274a72a7309e      // Your registered Application Id
&amp;response_type=code
&amp;redirect_uri=http%3A%2F%2Flocalhost%2Fmyapp%2F       // Your registered Redirect Uri, url encoded
&amp;response_mode=query                                  // 'query', 'form_post', or 'fragment'
&amp;scope=                                            // See table below for scope parameter details.</source>
          <target state="new">client_id=2d4d11a2-f814-46a7-890a-274a72a7309e      // Your registered Application Id
&amp;response_type=code
&amp;redirect_uri=http%3A%2F%2Flocalhost%2Fmyapp%2F       // Your registered Redirect Uri, url encoded
&amp;response_mode=query                                  // 'query', 'form_post', or 'fragment'
&amp;scope=                                            // See table below for scope parameter details.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>https%3A%2F%2Fgraph.windows.net%2Fdirectory.read%20
https%3A%2F%2Fgraph.windows.net%2Fdirectory.write
&amp;state=12345                                         // Any value provided by your app
```

| Parameter | | Description |
| ----------------------- | ------------------------------- | ----------------------- |
| client_id | required | The Application Id that the registration portal (<bpt id="p1">[</bpt><ept id="p1">apps.dev.microsoft.com](https://apps.dev.microsoft.com)</ept>) assigned your app.</source>
          <target state="new">https%3A%2F%2Fgraph.windows.net%2Fdirectory.read%20
https%3A%2F%2Fgraph.windows.net%2Fdirectory.write
&amp;state=12345                                         // Any value provided by your app
```

| Parameter | | Description |
| ----------------------- | ------------------------------- | ----------------------- |
| client_id | required | The Application Id that the registration portal (<bpt id="p1">[</bpt><ept id="p1">apps.dev.microsoft.com](https://apps.dev.microsoft.com)</ept>) assigned your app.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>|
| response_type | required | Must include <ph id="ph1">`code`</ph> for the authorization code flow.</source>
          <target state="new">|
| response_type | required | Must include <ph id="ph1">`code`</ph> for the authorization code flow.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>|
| redirect_uri | required | The redirect_uri of your app, where authentication responses can be sent and receieved by your app.</source>
          <target state="new">|
| redirect_uri | required | The redirect_uri of your app, where authentication responses can be sent and receieved by your app.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It must exactly match one of the redirect_uris you registered in the portal, except it must be url encoded.</source>
          <target state="new">It must exactly match one of the redirect_uris you registered in the portal, except it must be url encoded.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>|
| scope | required | A space-separated list of scopes.</source>
          <target state="new">|
| scope | required | A space-separated list of scopes.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A single scope value indicates to the v2.0 endpoint both the resource and the permissions to that resource being requested.</source>
          <target state="new">A single scope value indicates to the v2.0 endpoint both the resource and the permissions to that resource being requested.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Scopes take the form `</source>
          <target state="new">Scopes take the form `</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`.  In the example above, the app identifier for the Azure AD Graph API is used, `</ph>https://graph.windows.net<ph id="ph2">`, and two permissions are requested: `</ph>directory.read<ph id="ph3">` and `</ph>directory.write`.</source>
          <target state="new"><ph id="ph1">`.  In the example above, the app identifier for the Azure AD Graph API is used, `</ph>https://graph.windows.net<ph id="ph2">`, and two permissions are requested: `</ph>directory.read<ph id="ph3">` and `</ph>directory.write`.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For a more detailed explanation of scopes, refer to c.</source>
          <target state="new">For a more detailed explanation of scopes, refer to c.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>| response_mode | recommended | Specifies the method that should be used to send the resulting authorization_code back to your app.</source>
          <target state="new">| response_mode | recommended | Specifies the method that should be used to send the resulting authorization_code back to your app.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Can be one of 'query', 'form_post', or 'fragment'.</source>
          <target state="new">Can be one of 'query', 'form_post', or 'fragment'.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>| state | recommended | A value included in the request that will also be returned in the token response.</source>
          <target state="new">| state | recommended | A value included in the request that will also be returned in the token response.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It can be a string of any content that you wish.</source>
          <target state="new">It can be a string of any content that you wish.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A randomly generated unique value is typically used for preventing cross-site request forgery attacks.</source>
          <target state="new">A randomly generated unique value is typically used for preventing cross-site request forgery attacks.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The state is also used to encode information about the user's state in the app before the authentication request occurred, such as the page or view they were on.</source>
          <target state="new">The state is also used to encode information about the user's state in the app before the authentication request occurred, such as the page or view they were on.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>| prompt | optional | Indicates the type of user interaction that is required.</source>
          <target state="new">| prompt | optional | Indicates the type of user interaction that is required.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The only valid value at this time is 'login', which forces the user to enter their credentials on that request.</source>
          <target state="new">The only valid value at this time is 'login', which forces the user to enter their credentials on that request.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Single-sign on will not take effect.</source>
          <target state="new">Single-sign on will not take effect.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>|

At this point, the user will be asked to enter their credentials and complete the authentication.</source>
          <target state="new">|

At this point, the user will be asked to enter their credentials and complete the authentication.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The v2.0 endpoint will also ensure that the user has consented to the permissions indicated in the <ph id="ph1">`scope`</ph> query parameter.</source>
          <target state="new">The v2.0 endpoint will also ensure that the user has consented to the permissions indicated in the <ph id="ph1">`scope`</ph> query parameter.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the user has not consented to any of those permissions, it will ask the user to consent to the required permissions.</source>
          <target state="new">If the user has not consented to any of those permissions, it will ask the user to consent to the required permissions.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Details of <bpt id="p1">[</bpt><ept id="p1">permissions, consent, and multi-tenant apps are provided here](active-directory-v2-scopes.md)</ept>.</source>
          <target state="new">Details of <bpt id="p1">[</bpt><ept id="p1">permissions, consent, and multi-tenant apps are provided here](active-directory-v2-scopes.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Once the user authenticates and grants consent, the v2.0 endpoint will return a response to your app at the indicated <ph id="ph1">`redirect_uri`</ph>, using the method specified in the <ph id="ph2">`response_mode`</ph> parameter.</source>
          <target state="new">Once the user authenticates and grants consent, the v2.0 endpoint will return a response to your app at the indicated <ph id="ph1">`redirect_uri`</ph>, using the method specified in the <ph id="ph2">`response_mode`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A successful response using <ph id="ph1">`response_mode=query`</ph> looks like:

```
GET https://localhost/myapp/?</source>
          <target state="new">A successful response using <ph id="ph1">`response_mode=query`</ph> looks like:

```
GET https://localhost/myapp/?</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>code=AwABAAAAvPM1KaPlrEqdFSBzjqfTGBCmLdgfSTLEMPGYuNHSUYBrq...   // the authorization_code, truncated
&amp;session_state=7B29111D-C220-4263-99AB-6F6E135D75EF            // a value generated by the v2.0 endpoint
&amp;state=12345                                                                            // the value provided in the request
```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| code | The authorization_code that the  app requested.</source>
          <target state="new">code=AwABAAAAvPM1KaPlrEqdFSBzjqfTGBCmLdgfSTLEMPGYuNHSUYBrq...   // the authorization_code, truncated
&amp;session_state=7B29111D-C220-4263-99AB-6F6E135D75EF            // a value generated by the v2.0 endpoint
&amp;state=12345                                                                            // the value provided in the request
```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| code | The authorization_code that the  app requested.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The  app can use the authorization code to request an access token for the target resource.</source>
          <target state="new">The  app can use the authorization code to request an access token for the target resource.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Authorization_codes are very short lived, typically they expire after about 10 minutes.</source>
          <target state="new">Authorization_codes are very short lived, typically they expire after about 10 minutes.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>|
| session_state | A unique value that identifies the current user session.</source>
          <target state="new">|
| session_state | A unique value that identifies the current user session.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This value is a GUID, but should be treated as an opaque value that is passed without examination.</source>
          <target state="new">This value is a GUID, but should be treated as an opaque value that is passed without examination.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>|
| state | If a state parameter is included in the request, the same value should appear in the response.</source>
          <target state="new">|
| state | If a state parameter is included in the request, the same value should appear in the response.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The  app should verify that the state values in the request and response are identical.</source>
          <target state="new">The  app should verify that the state values in the request and response are identical.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>|

Error responses may also be sent to the <ph id="ph1">`redirect_uri`</ph> so the app can handle them appropriately:

```
GET https://localhost/myapp/?</source>
          <target state="new">|

Error responses may also be sent to the <ph id="ph1">`redirect_uri`</ph> so the app can handle them appropriately:

```
GET https://localhost/myapp/?</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>error=access_denied
&amp;error_description=the+user+canceled+the+authentication
```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| error | An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</source>
          <target state="new">error=access_denied
&amp;error_description=the+user+canceled+the+authentication
```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| error | An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>|
| error_description | A specific error message that can help a developer identify the root cause of an authentication error.</source>
          <target state="new">|
| error_description | A specific error message that can help a developer identify the root cause of an authentication error.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>|

#### Request an Access Token
Now that you've acquired an authorization_code and have been granted permission by the user, you can redeem the <ph id="ph1">`code`</ph> for an <ph id="ph2">`access_token`</ph> to the desired resource, by sending a <ph id="ph3">`POST`</ph> request to the <ph id="ph4">`/token`</ph> endpoint:

```
POST common/v2.0/oauth2/token HTTP/1.1
Host: https://login.microsoftonline.com
Content-Type: application/json

{
    "grant_type": "authorization_code",
    "client_id": "2d4d11a2-f814-46a7-890a-274a72a7309e",
    "scope": "https://graph.windows.net/directory.read https://graph.windows.net/directory.write",
    "code": "AwABAAAAvPM1KaPlrEqdFSBzjqfTGBCmLdgfSTLEMPGYuNHSUYBrq..."</source>
          <target state="new">|

#### Request an Access Token
Now that you've acquired an authorization_code and have been granted permission by the user, you can redeem the <ph id="ph1">`code`</ph> for an <ph id="ph2">`access_token`</ph> to the desired resource, by sending a <ph id="ph3">`POST`</ph> request to the <ph id="ph4">`/token`</ph> endpoint:

```
POST common/v2.0/oauth2/token HTTP/1.1
Host: https://login.microsoftonline.com
Content-Type: application/json

{
    "grant_type": "authorization_code",
    "client_id": "2d4d11a2-f814-46a7-890a-274a72a7309e",
    "scope": "https://graph.windows.net/directory.read https://graph.windows.net/directory.write",
    "code": "AwABAAAAvPM1KaPlrEqdFSBzjqfTGBCmLdgfSTLEMPGYuNHSUYBrq..."</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>"client_secret": "zc53fwe80980293klaj9823"  // NOTE: Only required for web apps
}
```

| Parameter | | Description |
| ----------------------- | ------------------------------- | --------------------- |
| client_id | required | The Application Id that the registration portal (<bpt id="p1">[</bpt><ept id="p1">apps.dev.microsoft.com](https://apps.dev.microsoft.com)</ept>) assigned your app.</source>
          <target state="new">"client_secret": "zc53fwe80980293klaj9823"  // NOTE: Only required for web apps
}
```

| Parameter | | Description |
| ----------------------- | ------------------------------- | --------------------- |
| client_id | required | The Application Id that the registration portal (<bpt id="p1">[</bpt><ept id="p1">apps.dev.microsoft.com](https://apps.dev.microsoft.com)</ept>) assigned your app.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>|
| grant_type | required | Must be <ph id="ph1">`authorization_code`</ph> for the authorization code flow.</source>
          <target state="new">|
| grant_type | required | Must be <ph id="ph1">`authorization_code`</ph> for the authorization code flow.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>|
| scope | required | A space-separated list of scopes.</source>
          <target state="new">|
| scope | required | A space-separated list of scopes.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The scopes requested in this leg must be equivalent to or a subset of the scopes requested in the first leg.</source>
          <target state="new">The scopes requested in this leg must be equivalent to or a subset of the scopes requested in the first leg.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If the scopes specified in this request span multiple resource servers, then the v2.0 endpoint will return a token for the resource specified in the first scope.</source>
          <target state="new">If the scopes specified in this request span multiple resource servers, then the v2.0 endpoint will return a token for the resource specified in the first scope.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For a more detailed explanation of scopes, refer to <bpt id="p1">[</bpt><ept id="p1">permissions, consent, and scopes](active-directory-v2-scopes.md)</ept>.</source>
          <target state="new">For a more detailed explanation of scopes, refer to <bpt id="p1">[</bpt><ept id="p1">permissions, consent, and scopes](active-directory-v2-scopes.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>|
| code | required | The authorization_code that you acquired in the first leg of the flow.</source>
          <target state="new">|
| code | required | The authorization_code that you acquired in the first leg of the flow.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>|
| client_secret | required for web apps | The application secret that you created in the app registration portal for your app.</source>
          <target state="new">|
| client_secret | required for web apps | The application secret that you created in the app registration portal for your app.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>It should not be used in a native  app, because client_secrets cannot be reliably stored on devices.</source>
          <target state="new">It should not be used in a native  app, because client_secrets cannot be reliably stored on devices.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>It is required for web apps and web APIs, which have the ability to store the client_secret securely on the server side.</source>
          <target state="new">It is required for web apps and web APIs, which have the ability to store the client_secret securely on the server side.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>|

A successful token response will look like:

```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik5HVEZ2ZEstZnl0aEV1Q...",
    "token_type": "Bearer",
    "expires_in": "3600",
    "expires_on": "1388444763",
    "scope": "https://graph.windows.net/directory.read https://graph.windows.net/directory.write",
    "refresh_token": "AwABAAAAvPM1KaPlrEqdFSBzjqfTGAMxZGUTdM0t4B4...",
    "id_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJhdWQiOiIyZDRkMTFhMi1mODE0LTQ2YTctOD..."</source>
          <target state="new">|

A successful token response will look like:

```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik5HVEZ2ZEstZnl0aEV1Q...",
    "token_type": "Bearer",
    "expires_in": "3600",
    "expires_on": "1388444763",
    "scope": "https://graph.windows.net/directory.read https://graph.windows.net/directory.write",
    "refresh_token": "AwABAAAAvPM1KaPlrEqdFSBzjqfTGAMxZGUTdM0t4B4...",
    "id_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJhdWQiOiIyZDRkMTFhMi1mODE0LTQ2YTctOD..."</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>}
```
| Parameter | Description |
| ----------------------- | ------------------------------- |
| access_token | The requested access token.</source>
          <target state="new">}
```
| Parameter | Description |
| ----------------------- | ------------------------------- |
| access_token | The requested access token.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The  app can use this token to authenticate to the secured resource, such as a web API.</source>
          <target state="new">The  app can use this token to authenticate to the secured resource, such as a web API.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>|
| token_type | Indicates the token type value.</source>
          <target state="new">|
| token_type | Indicates the token type value.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The only type that Azure AD supports is Bearer  |
| expires_in | How long the access token is valid (in seconds).</source>
          <target state="new">The only type that Azure AD supports is Bearer  |
| expires_in | How long the access token is valid (in seconds).</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>|
| expires_on | The time when the access token expires.</source>
          <target state="new">|
| expires_on | The time when the access token expires.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The date is represented as the number of seconds from the epoch time.</source>
          <target state="new">The date is represented as the number of seconds from the epoch time.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>|
| scope | The scopes that the access_token is valid for.</source>
          <target state="new">|
| scope | The scopes that the access_token is valid for.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>|
| refresh_token |  An OAuth 2.0 refresh token.</source>
          <target state="new">|
| refresh_token |  An OAuth 2.0 refresh token.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The  app can use this token acquire additional access tokens after the current access token expires.</source>
          <target state="new">The  app can use this token acquire additional access tokens after the current access token expires.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Refresh_tokens are long-lived, and can be used to retain access to resources for extended periods of time.</source>
          <target state="new">Refresh_tokens are long-lived, and can be used to retain access to resources for extended periods of time.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For more detail, refer to the <bpt id="p1">[</bpt><ept id="p1">v2.0 token reference](active-directory-v2-tokens.md)</ept>.</source>
          <target state="new">For more detail, refer to the <bpt id="p1">[</bpt><ept id="p1">v2.0 token reference](active-directory-v2-tokens.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>|
| id_token | An unsigned JSON Web Token (JWT).</source>
          <target state="new">|
| id_token | An unsigned JSON Web Token (JWT).</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The  app can base64Url decode the segments of this token to request information about the user who signed in.</source>
          <target state="new">The  app can base64Url decode the segments of this token to request information about the user who signed in.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The  app can cache the values and display them, but it should not rely on them for any authorization or security boundaries.</source>
          <target state="new">The  app can cache the values and display them, but it should not rely on them for any authorization or security boundaries.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about id_tokens see the <bpt id="p1">[</bpt><ept id="p1">v2.0 app model token reference](active-directory-v2-tokens.md)</ept>.</source>
          <target state="new">For more information about id_tokens see the <bpt id="p1">[</bpt><ept id="p1">v2.0 app model token reference](active-directory-v2-tokens.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>|

Error responses will look like:

```
{
    "error": "access_denied",
    "error_description": "The user revoked access to the app.",
}
```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| error | An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</source>
          <target state="new">|

Error responses will look like:

```
{
    "error": "access_denied",
    "error_description": "The user revoked access to the app.",
}
```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| error | An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>|
| error_description | A specific error message that can help a developer identify the root cause of an authentication error.</source>
          <target state="new">|
| error_description | A specific error message that can help a developer identify the root cause of an authentication error.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>|

#### Use the Access Token
Now that you've successfully acquired an <ph id="ph1">`access_token`</ph>, you can use the token in reqeusts to Web APIs by including it in the <ph id="ph2">`Authorization`</ph> header:

```
GET /contoso.onmicrosoft.com/users
Host: https://graph.windows.net
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik5HVEZ2ZEstZnl0aEV1Q...
```

#### Refresh the Access Token
Access_tokens are short lived, and you must refresh them after they expire to continue accessing resources.</source>
          <target state="new">|

#### Use the Access Token
Now that you've successfully acquired an <ph id="ph1">`access_token`</ph>, you can use the token in reqeusts to Web APIs by including it in the <ph id="ph2">`Authorization`</ph> header:

```
GET /contoso.onmicrosoft.com/users
Host: https://graph.windows.net
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik5HVEZ2ZEstZnl0aEV1Q...
```

#### Refresh the Access Token
Access_tokens are short lived, and you must refresh them after they expire to continue accessing resources.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can do so by submitting another <ph id="ph1">`POST`</ph> request to the <ph id="ph2">`/authorize`</ph> endpoint, this time providing the <ph id="ph3">`refresh_token`</ph> instead of the <ph id="ph4">`code`</ph>:

```
POST common/v2.0/oauth2/token HTTP/1.1
Host: https://login.microsoftonline.com
Content-Type: application/json

{
    "grant_type": "refresh_token",
    "client_id": "2d4d11a2-f814-46a7-890a-274a72a7309e",
    "scope": "https://graph.windows.net/directory.read https://graph.windows.net/directory.write",
    "refresh_token": "AwABAAAAvPM1KaPlrEqdFSBzjqfTGBCmLdgfSTLEMPGYuNHSUYBrq...",
    "client_secret": "zc53fwe80980293klaj9823"  // NOTE: Only required for web apps
}
```

| Parameter | | Description |
| ----------------------- | ------------------------------- | -------- |
| client_id | required | The Application Id that the registration portal (<bpt id="p1">[</bpt><ept id="p1">apps.dev.microsoft.com](https://apps.dev.microsoft.com)</ept>) assigned your app.</source>
          <target state="new">You can do so by submitting another <ph id="ph1">`POST`</ph> request to the <ph id="ph2">`/authorize`</ph> endpoint, this time providing the <ph id="ph3">`refresh_token`</ph> instead of the <ph id="ph4">`code`</ph>:

```
POST common/v2.0/oauth2/token HTTP/1.1
Host: https://login.microsoftonline.com
Content-Type: application/json

{
    "grant_type": "refresh_token",
    "client_id": "2d4d11a2-f814-46a7-890a-274a72a7309e",
    "scope": "https://graph.windows.net/directory.read https://graph.windows.net/directory.write",
    "refresh_token": "AwABAAAAvPM1KaPlrEqdFSBzjqfTGBCmLdgfSTLEMPGYuNHSUYBrq...",
    "client_secret": "zc53fwe80980293klaj9823"  // NOTE: Only required for web apps
}
```

| Parameter | | Description |
| ----------------------- | ------------------------------- | -------- |
| client_id | required | The Application Id that the registration portal (<bpt id="p1">[</bpt><ept id="p1">apps.dev.microsoft.com](https://apps.dev.microsoft.com)</ept>) assigned your app.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>|
| grant_type | required | Must be <ph id="ph1">`refresh_token`</ph> for this leg of the authorization code flow.</source>
          <target state="new">|
| grant_type | required | Must be <ph id="ph1">`refresh_token`</ph> for this leg of the authorization code flow.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>|
| scope | required | A space-separated list of scopes.</source>
          <target state="new">|
| scope | required | A space-separated list of scopes.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The scopes requested in this leg must be equivalent to or a subset of the scopes requested in the original authorization_code request leg.</source>
          <target state="new">The scopes requested in this leg must be equivalent to or a subset of the scopes requested in the original authorization_code request leg.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the scopes specified in this request span multiple resource servers, then the v2.0 endpoint will return a token for the resource specified in the first scope.</source>
          <target state="new">If the scopes specified in this request span multiple resource servers, then the v2.0 endpoint will return a token for the resource specified in the first scope.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For a more detailed explanation of scopes, refer to <bpt id="p1">[</bpt><ept id="p1">permissions, consent, and scopes](active-directory-v2-scopes.md)</ept>.</source>
          <target state="new">For a more detailed explanation of scopes, refer to <bpt id="p1">[</bpt><ept id="p1">permissions, consent, and scopes](active-directory-v2-scopes.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>|
| refresh_token | required | The refresh_token that you acquired in the second leg of the flow.</source>
          <target state="new">|
| refresh_token | required | The refresh_token that you acquired in the second leg of the flow.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>|
| client_secret | required for web apps | The application secret that you created in the app registration portal for your app.</source>
          <target state="new">|
| client_secret | required for web apps | The application secret that you created in the app registration portal for your app.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>It should not be used in a native  app, because client_secrets cannot be reliably stored on devices.</source>
          <target state="new">It should not be used in a native  app, because client_secrets cannot be reliably stored on devices.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>It is required for web apps and web APIs, which have the ability to store the client_secret securely on the server side.</source>
          <target state="new">It is required for web apps and web APIs, which have the ability to store the client_secret securely on the server side.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>|

A successful token response will look like:

```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik5HVEZ2ZEstZnl0aEV1Q...",
    "token_type": "Bearer",
    "expires_in": "3600",
    "expires_on": "1388444763",
    "scope": "https://graph.windows.net/directory.read https://graph.windows.net/directory.write",
    "refresh_token": "AwABAAAAvPM1KaPlrEqdFSBzjqfTGAMxZGUTdM0t4B4...",
    "id_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJhdWQiOiIyZDRkMTFhMi1mODE0LTQ2YTctOD..."</source>
          <target state="new">|

A successful token response will look like:

```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik5HVEZ2ZEstZnl0aEV1Q...",
    "token_type": "Bearer",
    "expires_in": "3600",
    "expires_on": "1388444763",
    "scope": "https://graph.windows.net/directory.read https://graph.windows.net/directory.write",
    "refresh_token": "AwABAAAAvPM1KaPlrEqdFSBzjqfTGAMxZGUTdM0t4B4...",
    "id_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJhdWQiOiIyZDRkMTFhMi1mODE0LTQ2YTctOD..."</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>}
```
| Parameter | Description |
| ----------------------- | ------------------------------- |
| access_token | The requested access token.</source>
          <target state="new">}
```
| Parameter | Description |
| ----------------------- | ------------------------------- |
| access_token | The requested access token.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The  app can use this token to authenticate to the secured resource, such as a web API.</source>
          <target state="new">The  app can use this token to authenticate to the secured resource, such as a web API.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>|
| token_type | Indicates the token type value.</source>
          <target state="new">|
| token_type | Indicates the token type value.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The only type that Azure AD supports is Bearer  |
| expires_in | How long the access token is valid (in seconds).</source>
          <target state="new">The only type that Azure AD supports is Bearer  |
| expires_in | How long the access token is valid (in seconds).</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>|
| expires_on | The time when the access token expires.</source>
          <target state="new">|
| expires_on | The time when the access token expires.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The date is represented as the number of seconds from the epoch time.</source>
          <target state="new">The date is represented as the number of seconds from the epoch time.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>|
| scope | The scopes that the access_token is valid for.</source>
          <target state="new">|
| scope | The scopes that the access_token is valid for.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>|
| refresh_token |  A new OAuth 2.0 refresh token.</source>
          <target state="new">|
| refresh_token |  A new OAuth 2.0 refresh token.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You should replace the old refresh token with this newly acquired refresh token to ensure your refresh tokens remain valid for as long as possible.</source>
          <target state="new">You should replace the old refresh token with this newly acquired refresh token to ensure your refresh tokens remain valid for as long as possible.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>|
| id_token | An unsigned JSON Web Token (JWT).</source>
          <target state="new">|
| id_token | An unsigned JSON Web Token (JWT).</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The  app can base64Url decode the segements of this token to request information about the user who signed in.</source>
          <target state="new">The  app can base64Url decode the segements of this token to request information about the user who signed in.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The  app can cache the values and display them, but it should not rely on them for any authorization or security boundaries.</source>
          <target state="new">The  app can cache the values and display them, but it should not rely on them for any authorization or security boundaries.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For more information about id_tokens see the <bpt id="p1">[</bpt><ept id="p1">v2.0 app model token reference](active-directory-v2-tokens.md)</ept>.</source>
          <target state="new">For more information about id_tokens see the <bpt id="p1">[</bpt><ept id="p1">v2.0 app model token reference](active-directory-v2-tokens.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>|

Error responses will look like:

```
{
    "error": "access_denied",
    "error_description": "The user revoked access to the app.",
}
```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| error | An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</source>
          <target state="new">|

Error responses will look like:

```
{
    "error": "access_denied",
    "error_description": "The user revoked access to the app.",
}
```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| error | An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>|
| error_description | A specific error message that can help a developer identify the root cause of an authentication error.</source>
          <target state="new">|
| error_description | A specific error message that can help a developer identify the root cause of an authentication error.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>|






## OpenID Connect Sign-In Flow
<bpt id="p1">[</bpt><ept id="p1">OpenID Connect](http://openid.net/specs/openid-connect-core-1_0.html)</ept> extends the OAuth 2.0 <bpt id="p2">*</bpt>authorization<ept id="p2">*</ept> protocol for use as an <bpt id="p3">*</bpt>authentication<ept id="p3">*</ept> protocol, which allows you to perform single sign-on using OAuth.</source>
          <target state="new">|






## OpenID Connect Sign-In Flow
<bpt id="p1">[</bpt><ept id="p1">OpenID Connect](http://openid.net/specs/openid-connect-core-1_0.html)</ept> extends the OAuth 2.0 <bpt id="p2">*</bpt>authorization<ept id="p2">*</ept> protocol for use as an <bpt id="p3">*</bpt>authentication<ept id="p3">*</ept> protocol, which allows you to perform single sign-on using OAuth.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>It introduces the concept of an <ph id="ph1">`id_token`</ph>, which is a security token that allows the client to verify the identity of the user and obtain basic profile information about the user.</source>
          <target state="new">It introduces the concept of an <ph id="ph1">`id_token`</ph>, which is a security token that allows the client to verify the identity of the user and obtain basic profile information about the user.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>OpenID Connect for the v2.0 app model is the recommended way to implement sign-in for a <bpt id="p1">[</bpt><ept id="p1">web  app](active-directory-v2-flows.md#web-apps)</ept>.</source>
          <target state="new">OpenID Connect for the v2.0 app model is the recommended way to implement sign-in for a <bpt id="p1">[</bpt><ept id="p1">web  app](active-directory-v2-flows.md#web-apps)</ept>.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The most basic sign-in flow contains the following steps:

<ph id="ph1">![OpenId Connect Swimlanes](../media/active-directory-v2-flows/convergence_scenarios_webapp.png)</ph><ph id="ph2">

####</ph> Send the Sign-In Request
When your web  app needs to authenticate the user, it can direct the user to the <ph id="ph3">`/authorize`</ph> endpoint.</source>
          <target state="new">The most basic sign-in flow contains the following steps:

<ph id="ph1">![OpenId Connect Swimlanes](../media/active-directory-v2-flows/convergence_scenarios_webapp.png)</ph><ph id="ph2">

####</ph> Send the Sign-In Request
When your web  app needs to authenticate the user, it can direct the user to the <ph id="ph3">`/authorize`</ph> endpoint.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This request is similar to the first leg of the <bpt id="p1">[</bpt><ept id="p1">OAuth 2.0 Authorization Code Flow](#oauth2-authorization-code-flow)</ept>, with a few important distinctions:
- The request must include the scope <ph id="ph1">`openid`</ph> in the <ph id="ph2">`scope`</ph> parameter.</source>
          <target state="new">This request is similar to the first leg of the <bpt id="p1">[</bpt><ept id="p1">OAuth 2.0 Authorization Code Flow](#oauth2-authorization-code-flow)</ept>, with a few important distinctions:
- The request must include the scope <ph id="ph1">`openid`</ph> in the <ph id="ph2">`scope`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>- The <ph id="ph1">`response_type`</ph> parameter must include <ph id="ph2">`id_token`</ph><ph id="ph3">
-</ph> The request must include the <ph id="ph4">`nonce`</ph> parameter

```
GET https://login.microsoftonline.com/common/oauth2/v2.0/authorize?</source>
          <target state="new">- The <ph id="ph1">`response_type`</ph> parameter must include <ph id="ph2">`id_token`</ph><ph id="ph3">
-</ph> The request must include the <ph id="ph4">`nonce`</ph> parameter

```
GET https://login.microsoftonline.com/common/oauth2/v2.0/authorize?</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>client_id=2d4d11a2-f814-46a7-890a-274a72a7309e      // Your registered Application Id
&amp;response_type=id_token
&amp;redirect_uri=http%3A%2F%2Flocalhost%2Fmyapp%2F       // Your registered Redirect Uri, url encoded
&amp;response_mode=query                                  // 'query', 'form_post', or 'fragment'
&amp;scope=openid                                        // Translates to the 'Read your profile' permission
&amp;state=12345                                         // Any value, provided by your app
&amp;nonce=678910                                        // Any value, provided by your app
```

| Parameter | | Description |
| ----------------------- | ------------------------------- | --------------- |
| client_id | required | The Application Id that the registration portal (<bpt id="p1">[</bpt><ept id="p1">apps.dev.microsoft.com](https://apps.dev.microsoft.com)</ept>) assigned your app.</source>
          <target state="new">client_id=2d4d11a2-f814-46a7-890a-274a72a7309e      // Your registered Application Id
&amp;response_type=id_token
&amp;redirect_uri=http%3A%2F%2Flocalhost%2Fmyapp%2F       // Your registered Redirect Uri, url encoded
&amp;response_mode=query                                  // 'query', 'form_post', or 'fragment'
&amp;scope=openid                                        // Translates to the 'Read your profile' permission
&amp;state=12345                                         // Any value, provided by your app
&amp;nonce=678910                                        // Any value, provided by your app
```

| Parameter | | Description |
| ----------------------- | ------------------------------- | --------------- |
| client_id | required | The Application Id that the registration portal (<bpt id="p1">[</bpt><ept id="p1">apps.dev.microsoft.com](https://apps.dev.microsoft.com)</ept>) assigned your app.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>|
| response_type | required | Must include <ph id="ph1">`id_token`</ph> for OpenID Connect sign-in.</source>
          <target state="new">|
| response_type | required | Must include <ph id="ph1">`id_token`</ph> for OpenID Connect sign-in.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>It may also include other response_types, as described in the <bpt id="p1">[</bpt><ept id="p1">OpenID Connect with OAuth Code Flow ](#OpenID-Connect-with-OAuth-Code-Flow)</ept> section.</source>
          <target state="new">It may also include other response_types, as described in the <bpt id="p1">[</bpt><ept id="p1">OpenID Connect with OAuth Code Flow ](#OpenID-Connect-with-OAuth-Code-Flow)</ept> section.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>|
| redirect_uri | required | The redirect_uri of your app, where authentication responses can be sent and received by your app.</source>
          <target state="new">|
| redirect_uri | required | The redirect_uri of your app, where authentication responses can be sent and received by your app.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>It must exactly match one of the redirect_uris you registered in the portal, except it must be url encoded.</source>
          <target state="new">It must exactly match one of the redirect_uris you registered in the portal, except it must be url encoded.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>|
| scope | required | A space-separated list of scopes.</source>
          <target state="new">|
| scope | required | A space-separated list of scopes.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>For OpenID Connect, it must include the scope <ph id="ph1">`openid`</ph>, which translates to the "Sign in &amp; Read Your Profile" permission in the consent UI.</source>
          <target state="new">For OpenID Connect, it must include the scope <ph id="ph1">`openid`</ph>, which translates to the "Sign in &amp; Read Your Profile" permission in the consent UI.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>You may also include other scopes in this request for requesting consent, as described in the <bpt id="p1">[</bpt><ept id="p1">OpenID Connect with OAuth Code Flow ](#OpenID-Connect-with-OAuth-Code-Flow)</ept> section.</source>
          <target state="new">You may also include other scopes in this request for requesting consent, as described in the <bpt id="p1">[</bpt><ept id="p1">OpenID Connect with OAuth Code Flow ](#OpenID-Connect-with-OAuth-Code-Flow)</ept> section.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>|
| nonce | required | A value included in the request, generated by the app, that will included in the resulting id_token as a claim.</source>
          <target state="new">|
| nonce | required | A value included in the request, generated by the app, that will included in the resulting id_token as a claim.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The app can then verify this value to mitigate token replay attacks.</source>
          <target state="new">The app can then verify this value to mitigate token replay attacks.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The value is typically a randomized, unique string that can be used to identify the origin of the request.</source>
          <target state="new">The value is typically a randomized, unique string that can be used to identify the origin of the request.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>|
| response_mode | recommended | Specifies the method that should be used to send the resulting authorization_code back to your app.</source>
          <target state="new">|
| response_mode | recommended | Specifies the method that should be used to send the resulting authorization_code back to your app.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Can be one of 'query', 'form_post', or 'fragment'.</source>
          <target state="new">Can be one of 'query', 'form_post', or 'fragment'.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>| state | recommended | A value included in the request that will also be returned in the token response.</source>
          <target state="new">| state | recommended | A value included in the request that will also be returned in the token response.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>It can be a string of any content that you wish.</source>
          <target state="new">It can be a string of any content that you wish.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A randomly generated unique value is typically used for preventing cross-site request forgery attacks.</source>
          <target state="new">A randomly generated unique value is typically used for preventing cross-site request forgery attacks.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The state is also used to encode information about the user's state in the app before the authentication request occurred, such as the page or view they were on.</source>
          <target state="new">The state is also used to encode information about the user's state in the app before the authentication request occurred, such as the page or view they were on.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>|
| prompt | optional | Indicates the type of user interaction that is required.</source>
          <target state="new">|
| prompt | optional | Indicates the type of user interaction that is required.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The only valid value at this time is 'login', which forces the user to enter their credentials on that request.</source>
          <target state="new">The only valid value at this time is 'login', which forces the user to enter their credentials on that request.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Single-sign on will not take effect.</source>
          <target state="new">Single-sign on will not take effect.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>|

At this point, the user will be asked to enter their credentials and complete the authentication.</source>
          <target state="new">|

At this point, the user will be asked to enter their credentials and complete the authentication.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The v2.0 endpoint will also ensure that the user has consented to the permissions indicated in the <ph id="ph1">`scope`</ph> query parameter.</source>
          <target state="new">The v2.0 endpoint will also ensure that the user has consented to the permissions indicated in the <ph id="ph1">`scope`</ph> query parameter.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If the user has not consented to any of those permissions, it will ask the user to consent to the required permissions.</source>
          <target state="new">If the user has not consented to any of those permissions, it will ask the user to consent to the required permissions.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Details of <bpt id="p1">[</bpt><ept id="p1">permissions, consent, and multi-tenant apps are provided here](active-directory-v2-scopes.md)</ept>.</source>
          <target state="new">Details of <bpt id="p1">[</bpt><ept id="p1">permissions, consent, and multi-tenant apps are provided here](active-directory-v2-scopes.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Once the user authenticates and grants consent, the v2.0 endpoint will return a response to your app at the indicated <ph id="ph1">`redirect_uri`</ph>, using the method specified in the <ph id="ph2">`response_mode`</ph> parameter.</source>
          <target state="new">Once the user authenticates and grants consent, the v2.0 endpoint will return a response to your app at the indicated <ph id="ph1">`redirect_uri`</ph>, using the method specified in the <ph id="ph2">`response_mode`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A successful response using <ph id="ph1">`response_mode=query`</ph> looks like:

```
GET https://localhost/myapp/?</source>
          <target state="new">A successful response using <ph id="ph1">`response_mode=query`</ph> looks like:

```
GET https://localhost/myapp/?</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>id_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik5HVEZ2ZEstZnl0aEV1Q...   // the id_token, truncated
&amp;session_state=7B29111D-C220-4263-99AB-6F6E135D75EF            // a value generated by the v2.0 endpoint
&amp;state=12345                                                    // the value provided in the request

```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| id_token | The id_token that the  app requested.</source>
          <target state="new">id_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik5HVEZ2ZEstZnl0aEV1Q...   // the id_token, truncated
&amp;session_state=7B29111D-C220-4263-99AB-6F6E135D75EF            // a value generated by the v2.0 endpoint
&amp;state=12345                                                    // the value provided in the request

```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| id_token | The id_token that the  app requested.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can use the id_token to verify the user's identity and begin a session with the user.</source>
          <target state="new">You can use the id_token to verify the user's identity and begin a session with the user.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>More details on id_tokens and their contents is included in the <bpt id="p1">[</bpt><ept id="p1">v2.0 endpoint token reference](active-directory-v2-tokens.md)</ept>.</source>
          <target state="new">More details on id_tokens and their contents is included in the <bpt id="p1">[</bpt><ept id="p1">v2.0 endpoint token reference](active-directory-v2-tokens.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>|
| session_state | A unique value that identifies the current user session.</source>
          <target state="new">|
| session_state | A unique value that identifies the current user session.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This value is a GUID, but should be treated as an opaque value that is passed without examination.</source>
          <target state="new">This value is a GUID, but should be treated as an opaque value that is passed without examination.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>|
| state | If a state parameter is included in the request, the same value should appear in the response.</source>
          <target state="new">|
| state | If a state parameter is included in the request, the same value should appear in the response.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The  app should verify that the state values in the request and response are identical.</source>
          <target state="new">The  app should verify that the state values in the request and response are identical.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>|

Error responses may also be sent to the <ph id="ph1">`redirect_uri`</ph> so the app can handle them appropriately:

```
GET https://localhost/myapp/?</source>
          <target state="new">|

Error responses may also be sent to the <ph id="ph1">`redirect_uri`</ph> so the app can handle them appropriately:

```
GET https://localhost/myapp/?</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>error=access_denied
&amp;error_description=the+user+canceled+the+authentication
```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| error | An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</source>
          <target state="new">error=access_denied
&amp;error_description=the+user+canceled+the+authentication
```

| Parameter | Description |
| ----------------------- | ------------------------------- |
| error | An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>|
| error_description | A specific error message that can help a developer identify the root cause of an authentication error.</source>
          <target state="new">|
| error_description | A specific error message that can help a developer identify the root cause of an authentication error.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>|

#### Validate the id_token
Just receiving an id_token is not sufficient to authenticate the user; you must validate the id_token's signature and verify the claims in the token per your  app's requirements.</source>
          <target state="new">|

#### Validate the id_token
Just receiving an id_token is not sufficient to authenticate the user; you must validate the id_token's signature and verify the claims in the token per your  app's requirements.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The v2.0 endpoint uses <bpt id="p1">[</bpt><ept id="p1">JSON Web Tokens (JWTs)](http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html)</ept> and public key cryptography to sign tokens and verify that they are valid.</source>
          <target state="new">The v2.0 endpoint uses <bpt id="p1">[</bpt><ept id="p1">JSON Web Tokens (JWTs)](http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html)</ept> and public key cryptography to sign tokens and verify that they are valid.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The v2.0 app model has an OpenID Connect metadata endpoint, which allows an app to fetch information about the v2.0 app model at runtime.</source>
          <target state="new">The v2.0 app model has an OpenID Connect metadata endpoint, which allows an app to fetch information about the v2.0 app model at runtime.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This information includes endpoints, token contents, and token signing keys.</source>
          <target state="new">This information includes endpoints, token contents, and token signing keys.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The metadata endpoint contains a JSON document located at:

<ph id="ph1">`https://login.microsoftonline.com/common/v2.0/.well-known/configuration`</ph>

One of the properties of this configuration document is the <ph id="ph2">`jwks_uri`</ph>, whose value for the v2.0 app model will be:

<ph id="ph3">`https://login.microsoftonline.com/common/discovery/v2.0/keys`</ph>.</source>
          <target state="new">The metadata endpoint contains a JSON document located at:

<ph id="ph1">`https://login.microsoftonline.com/common/v2.0/.well-known/configuration`</ph>

One of the properties of this configuration document is the <ph id="ph2">`jwks_uri`</ph>, whose value for the v2.0 app model will be:

<ph id="ph3">`https://login.microsoftonline.com/common/discovery/v2.0/keys`</ph>.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>You can use the RSA256 public keys located at this endpoint to validate the signature of the id_token.</source>
          <target state="new">You can use the RSA256 public keys located at this endpoint to validate the signature of the id_token.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>There are multiple keys listed at this endpoint at any given point in time, each identified by a <ph id="ph1">`kid`</ph>.</source>
          <target state="new">There are multiple keys listed at this endpoint at any given point in time, each identified by a <ph id="ph1">`kid`</ph>.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The header of the id_token also contains a <ph id="ph1">`kid`</ph> claim, which indicates which of these keys was used to sign the id_token.</source>
          <target state="new">The header of the id_token also contains a <ph id="ph1">`kid`</ph> claim, which indicates which of these keys was used to sign the id_token.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt><ept id="p1">v2.0 app model token reference](active-directory-v2-tokens.md)</ept> for more information, including <bpt id="p2">[</bpt><ept id="p2">Validating Tokens](active-directory-v2-tokens.md#validating-tokens)</ept> and <bpt id="p3">[</bpt><ept id="p3">Important Information About Signing Key Rollover](active-directory-v2-tokens.md#validating-tokens)</ept>.</source>
          <target state="new">See the <bpt id="p1">[</bpt><ept id="p1">v2.0 app model token reference](active-directory-v2-tokens.md)</ept> for more information, including <bpt id="p2">[</bpt><ept id="p2">Validating Tokens](active-directory-v2-tokens.md#validating-tokens)</ept> and <bpt id="p3">[</bpt><ept id="p3">Important Information About Signing Key Rollover](active-directory-v2-tokens.md#validating-tokens)</ept>.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Once you've validated the signature of the id_token, there are a few claims you will need to verify:</source>
          <target state="new">Once you've validated the signature of the id_token, there are a few claims you will need to verify:</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>You should validate the <ph id="ph1">`nonce`</ph> claim to prevent token replay attacks.</source>
          <target state="new">You should validate the <ph id="ph1">`nonce`</ph> claim to prevent token replay attacks.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Its value should be what you specified in the sign-in request.</source>
          <target state="new">Its value should be what you specified in the sign-in request.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>You should validate the <ph id="ph1">`aud`</ph> claim to ensure the id_token was issued for your app.</source>
          <target state="new">You should validate the <ph id="ph1">`aud`</ph> claim to ensure the id_token was issued for your app.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Its value should be the <ph id="ph1">`client_id`</ph> of your app.</source>
          <target state="new">Its value should be the <ph id="ph1">`client_id`</ph> of your app.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>You should validate the <ph id="ph1">`iat`</ph> and <ph id="ph2">`exp`</ph> claims to ensure the id_token has not expired.</source>
          <target state="new">You should validate the <ph id="ph1">`iat`</ph> and <ph id="ph2">`exp`</ph> claims to ensure the id_token has not expired.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>You may also wish to validate additional claims depending on your scenario.</source>
          <target state="new">You may also wish to validate additional claims depending on your scenario.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Some common validations include:</source>
          <target state="new">Some common validations include:</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Ensuring the user/organization has signed up for the  app.</source>
          <target state="new">Ensuring the user/organization has signed up for the  app.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Ensuring the user has proper authorization/privileges</source>
          <target state="new">Ensuring the user has proper authorization/privileges</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Ensuring a certain strength of authentication has occurred, such as multi-factor authentication.</source>
          <target state="new">Ensuring a certain strength of authentication has occurred, such as multi-factor authentication.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>For more information on the claims in an id_token, see the <bpt id="p1">[</bpt>v2.0 app model token reference<ept id="p1">](active-directory-v2-tokens.md)</ept>.</source>
          <target state="new">For more information on the claims in an id_token, see the <bpt id="p1">[</bpt>v2.0 app model token reference<ept id="p1">](active-directory-v2-tokens.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Once you have completely validated the id_token, you can begin a session with the user and use the claims in the id_token to obtain information about the user in your app.</source>
          <target state="new">Once you have completely validated the id_token, you can begin a session with the user and use the claims in the id_token to obtain information about the user in your app.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>This information can be used for display, records, authorizations, etc.</source>
          <target state="new">This information can be used for display, records, authorizations, etc.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Send a Sign Out Request</source>
          <target state="new">Send a Sign Out Request</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The OpenIdConnect <ph id="ph1">`end_session_endpoint`</ph> is not currently supported by the v2.0 app model preview.</source>
          <target state="new">The OpenIdConnect <ph id="ph1">`end_session_endpoint`</ph> is not currently supported by the v2.0 app model preview.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This means your app cannot send a request to the v2.0 endpoint to end a user's session and clear cookies set by the v2.0 endpoint.</source>
          <target state="new">This means your app cannot send a request to the v2.0 endpoint to end a user's session and clear cookies set by the v2.0 endpoint.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>To sign a user out, your app can simply end its own session with the user, and leave the user's session with the v2.0 endpoint in-tact.</source>
          <target state="new">To sign a user out, your app can simply end its own session with the user, and leave the user's session with the v2.0 endpoint in-tact.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The next time the user tries to sign in, they will see a "choose account" page, with their actively signed-in accounts listed.</source>
          <target state="new">The next time the user tries to sign in, they will see a "choose account" page, with their actively signed-in accounts listed.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>On that page, the user can choose to sign out of any account, ending the session with the v2.0 endpoint.</source>
          <target state="new">On that page, the user can choose to sign out of any account, ending the session with the v2.0 endpoint.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>OpenID Connect with OAuth Code Flow</source>
          <target state="new">OpenID Connect with OAuth Code Flow</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Many web  apps need to sign the user in and then access a web service on behalf of that user using OAuth.</source>
          <target state="new">Many web  apps need to sign the user in and then access a web service on behalf of that user using OAuth.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>This scenario combines the two above sections - it uses OpenID Connect for user authentication while simultaneously acquiring an authorization_code that can be used to get access_tokens using the OAuth Authorization Code Flow:</source>
          <target state="new">This scenario combines the two above sections - it uses OpenID Connect for user authentication while simultaneously acquiring an authorization_code that can be used to get access_tokens using the OAuth Authorization Code Flow:</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>OpenId Connect Swimlanes</source>
          <target state="new">OpenId Connect Swimlanes</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This flow only slightly differs from the above sections, in how you send the sign-in request.</source>
          <target state="new">This flow only slightly differs from the above sections, in how you send the sign-in request.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Send the Sign-In Request</source>
          <target state="new">Send the Sign-In Request</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>When your web  app needs to authenticate the user &amp; get the permissions it needs to access resources, it can direct the user to the <ph id="ph1">`/authorize`</ph> endpoint.</source>
          <target state="new">When your web  app needs to authenticate the user &amp; get the permissions it needs to access resources, it can direct the user to the <ph id="ph1">`/authorize`</ph> endpoint.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>In this case, your app must ask for both an <ph id="ph1">`id_token`</ph> and a <ph id="ph2">`code`</ph> in the response:</source>
          <target state="new">In this case, your app must ask for both an <ph id="ph1">`id_token`</ph> and a <ph id="ph2">`code`</ph> in the response:</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>client_id</source>
          <target state="new">client_id</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The Application Id that the registration portal (<bpt id="p1">[</bpt>apps.dev.microsoft.com<ept id="p1">](https://apps.dev.microsoft.com)</ept>) assigned your app.</source>
          <target state="new">The Application Id that the registration portal (<bpt id="p1">[</bpt>apps.dev.microsoft.com<ept id="p1">](https://apps.dev.microsoft.com)</ept>) assigned your app.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>response_type</source>
          <target state="new">response_type</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Must include <ph id="ph1">`id_token`</ph> and <ph id="ph2">`code`</ph> for this scenario.</source>
          <target state="new">Must include <ph id="ph1">`id_token`</ph> and <ph id="ph2">`code`</ph> for this scenario.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>redirect_uri</source>
          <target state="new">redirect_uri</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The redirect_uri of your app, where authentication responses can be sent and received by your app.</source>
          <target state="new">The redirect_uri of your app, where authentication responses can be sent and received by your app.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>It must exactly match one of the redirect_uris you registered in the portal, except it must be url encoded.</source>
          <target state="new">It must exactly match one of the redirect_uris you registered in the portal, except it must be url encoded.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>scope</source>
          <target state="new">scope</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>A space-separated list of scopes.</source>
          <target state="new">A space-separated list of scopes.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>For OpenID Connect, it must include the scope <ph id="ph1">`openid`</ph>, which translates to the "Sign in &amp; Read Your Profile" permission in the consent UI.</source>
          <target state="new">For OpenID Connect, it must include the scope <ph id="ph1">`openid`</ph>, which translates to the "Sign in &amp; Read Your Profile" permission in the consent UI.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>You must also include scopes for resources that your app requires access to.</source>
          <target state="new">You must also include scopes for resources that your app requires access to.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>For a more detailed explanation of scopes, refer to <bpt id="p1">[</bpt>permissions, consent, and scopes<ept id="p1">](active-directory-v2-scopes.md)</ept>.</source>
          <target state="new">For a more detailed explanation of scopes, refer to <bpt id="p1">[</bpt>permissions, consent, and scopes<ept id="p1">](active-directory-v2-scopes.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>nonce</source>
          <target state="new">nonce</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A value included in the request, generated by the app, that will included in the resulting id_token as a claim.</source>
          <target state="new">A value included in the request, generated by the app, that will included in the resulting id_token as a claim.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The app can then verify this value to mitigate token replay attacks.</source>
          <target state="new">The app can then verify this value to mitigate token replay attacks.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The value is typically a randomized, unique string that can be used to identify the origin of the request.</source>
          <target state="new">The value is typically a randomized, unique string that can be used to identify the origin of the request.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>response_mode</source>
          <target state="new">response_mode</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>recommended</source>
          <target state="new">recommended</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Specifies the method that should be used to send the resulting authorization_code back to your app.</source>
          <target state="new">Specifies the method that should be used to send the resulting authorization_code back to your app.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Can be one of 'query', 'form_post', or 'fragment'.</source>
          <target state="new">Can be one of 'query', 'form_post', or 'fragment'.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>state</source>
          <target state="new">state</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>recommended</source>
          <target state="new">recommended</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A value included in the request that will also be returned in the token response.</source>
          <target state="new">A value included in the request that will also be returned in the token response.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>It can be a string of any content that you wish.</source>
          <target state="new">It can be a string of any content that you wish.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>A randomly generated unique value is typically used for preventing cross-site request forgery attacks.</source>
          <target state="new">A randomly generated unique value is typically used for preventing cross-site request forgery attacks.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The state is also used to encode information about the user's state in the app before the authentication request occurred, such as the page or view they were on.</source>
          <target state="new">The state is also used to encode information about the user's state in the app before the authentication request occurred, such as the page or view they were on.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>prompt</source>
          <target state="new">prompt</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>optional</source>
          <target state="new">optional</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Indicates the type of user interaction that is required.</source>
          <target state="new">Indicates the type of user interaction that is required.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The only valid value at this time is 'login', which forces the user to enter their credentials on that request.</source>
          <target state="new">The only valid value at this time is 'login', which forces the user to enter their credentials on that request.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Single-sign on will not take effect.</source>
          <target state="new">Single-sign on will not take effect.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>At this point, the user will be asked to enter their credentials and complete the authentication.</source>
          <target state="new">At this point, the user will be asked to enter their credentials and complete the authentication.</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The v2.0 endpoint will also ensure that the user has consented to the permissions indicated in the <ph id="ph1">`scope`</ph> query parameter.</source>
          <target state="new">The v2.0 endpoint will also ensure that the user has consented to the permissions indicated in the <ph id="ph1">`scope`</ph> query parameter.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>If the user has not consented to any of those permissions, it will ask the user to consent to the required permissions.</source>
          <target state="new">If the user has not consented to any of those permissions, it will ask the user to consent to the required permissions.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Details of <bpt id="p1">[</bpt>permissions, consent, and multi-tenant apps are provided here<ept id="p1">](active-directory-v2-scopes.md)</ept>.</source>
          <target state="new">Details of <bpt id="p1">[</bpt>permissions, consent, and multi-tenant apps are provided here<ept id="p1">](active-directory-v2-scopes.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Once the user authenticates and grants consent, the v2.0 endpoint will return a response to your app at the indicated <ph id="ph1">`redirect_uri`</ph>, using the method specified in the <ph id="ph2">`response_mode`</ph> parameter.</source>
          <target state="new">Once the user authenticates and grants consent, the v2.0 endpoint will return a response to your app at the indicated <ph id="ph1">`redirect_uri`</ph>, using the method specified in the <ph id="ph2">`response_mode`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A successful response using <ph id="ph1">`response_mode=query`</ph> looks like:</source>
          <target state="new">A successful response using <ph id="ph1">`response_mode=query`</ph> looks like:</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>id_token</source>
          <target state="new">id_token</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The id_token that the  app requested.</source>
          <target state="new">The id_token that the  app requested.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>You can use the id_token to verify the user's identity and begin a session with the user.</source>
          <target state="new">You can use the id_token to verify the user's identity and begin a session with the user.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>More details on id_tokens and their contents is included in the <bpt id="p1">[</bpt>v2.0 app model token reference<ept id="p1">](active-directory-v2-tokens.md)</ept>.</source>
          <target state="new">More details on id_tokens and their contents is included in the <bpt id="p1">[</bpt>v2.0 app model token reference<ept id="p1">](active-directory-v2-tokens.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>code</source>
          <target state="new">code</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The authorization_code that the  app requested.</source>
          <target state="new">The authorization_code that the  app requested.</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The  app can use the authorization code to request an access token for the target resource.</source>
          <target state="new">The  app can use the authorization code to request an access token for the target resource.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Authorization_codes are very short lived, typically they expire after about 10 minutes.</source>
          <target state="new">Authorization_codes are very short lived, typically they expire after about 10 minutes.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>session_state</source>
          <target state="new">session_state</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>A unique value that identifies the current user session.</source>
          <target state="new">A unique value that identifies the current user session.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>This value is a GUID, but should be treated as an opaque value that is passed without examination.</source>
          <target state="new">This value is a GUID, but should be treated as an opaque value that is passed without examination.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>state</source>
          <target state="new">state</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>If a state parameter is included in the request, the same value should appear in the response.</source>
          <target state="new">If a state parameter is included in the request, the same value should appear in the response.</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The  app should verify that the state values in the request and response are identical.</source>
          <target state="new">The  app should verify that the state values in the request and response are identical.</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Error responses may also be sent to the <ph id="ph1">`redirect_uri`</ph> so the app can handle them appropriately:</source>
          <target state="new">Error responses may also be sent to the <ph id="ph1">`redirect_uri`</ph> so the app can handle them appropriately:</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>error</source>
          <target state="new">error</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</source>
          <target state="new">An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>error_description</source>
          <target state="new">error_description</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>A specific error message that can help a developer identify the root cause of an authentication error.</source>
          <target state="new">A specific error message that can help a developer identify the root cause of an authentication error.</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Validate the id_token</source>
          <target state="new">Validate the id_token</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>This process is exactly the same as described above in the <bpt id="p1">[</bpt>OpenID Connect Sign-In Flow<ept id="p1">](#OpenID-Connect-Sign-In-Flow)</ept>.</source>
          <target state="new">This process is exactly the same as described above in the <bpt id="p1">[</bpt>OpenID Connect Sign-In Flow<ept id="p1">](#OpenID-Connect-Sign-In-Flow)</ept>.</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Send a Sign Out Request</source>
          <target state="new">Send a Sign Out Request</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>This process is exactly the same as described above in the <bpt id="p1">[</bpt>OpenID Connect Sign-In Flow<ept id="p1">](#OpenID-Connect-Sign-In-Flow)</ept>.</source>
          <target state="new">This process is exactly the same as described above in the <bpt id="p1">[</bpt>OpenID Connect Sign-In Flow<ept id="p1">](#OpenID-Connect-Sign-In-Flow)</ept>.</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Request an Access Token</source>
          <target state="new">Request an Access Token</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>This process is exactly the same as described above in the <bpt id="p1">[</bpt>OAuth 2.0 Authorization Code Flow<ept id="p1">](#oauth2-authorization-code-flow)</ept>.</source>
          <target state="new">This process is exactly the same as described above in the <bpt id="p1">[</bpt>OAuth 2.0 Authorization Code Flow<ept id="p1">](#oauth2-authorization-code-flow)</ept>.</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Use the Access Token</source>
          <target state="new">Use the Access Token</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>This process is exactly the same as described above in the <bpt id="p1">[</bpt>OAuth 2.0 Authorization Code Flow<ept id="p1">](#oauth2-authorization-code-flow)</ept>.</source>
          <target state="new">This process is exactly the same as described above in the <bpt id="p1">[</bpt>OAuth 2.0 Authorization Code Flow<ept id="p1">](#oauth2-authorization-code-flow)</ept>.</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Refresh the Access Token</source>
          <target state="new">Refresh the Access Token</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>This process is exactly the same as described above in the <bpt id="p1">[</bpt>OAuth 2.0 Authorization Code Flow<ept id="p1">](#oauth2-authorization-code-flow)</ept>.</source>
          <target state="new">This process is exactly the same as described above in the <bpt id="p1">[</bpt>OAuth 2.0 Authorization Code Flow<ept id="p1">](#oauth2-authorization-code-flow)</ept>.</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>OAuth2 Client Credentials Grant Flow</source>
          <target state="new">OAuth2 Client Credentials Grant Flow</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The OAuth 2.0 Client Credentials Grant is described in the <bpt id="p1">[</bpt>OAuth 2.0 Specification<ept id="p1">](http://tools.ietf.org/html/rfc6749#section-4.4)</ept>.</source>
          <target state="new">The OAuth 2.0 Client Credentials Grant is described in the <bpt id="p1">[</bpt>OAuth 2.0 Specification<ept id="p1">](http://tools.ietf.org/html/rfc6749#section-4.4)</ept>.</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>It is useful for long running processes and other server to server scenarios, where the  app can authenticate to a resource using its own "Application Identity", rather than a user's delegated identity.</source>
          <target state="new">It is useful for long running processes and other server to server scenarios, where the  app can authenticate to a resource using its own "Application Identity", rather than a user's delegated identity.</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>This flow is not currently supported by the v2.0 app model preview.</source>
          <target state="new">This flow is not currently supported by the v2.0 app model preview.</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>To see how it works in the generally available Azure AD service, see <bpt id="p1">[</bpt>this Azure AD code sample<ept id="p1">](https://github/com/AzureADSamples/Daemon-DotNet)</ept>.</source>
          <target state="new">To see how it works in the generally available Azure AD service, see <bpt id="p1">[</bpt>this Azure AD code sample<ept id="p1">](https://github/com/AzureADSamples/Daemon-DotNet)</ept>.</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>OAuth2 Implicit Flow</source>
          <target state="new">OAuth2 Implicit Flow</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The OAuth 2.0 Implicit Flow is described in the <bpt id="p1">[</bpt>OAuth 2.0 Specification<ept id="p1">](http://tools.ietf.org/html/rfc6749#section-4.2)</ept>.</source>
          <target state="new">The OAuth 2.0 Implicit Flow is described in the <bpt id="p1">[</bpt>OAuth 2.0 Specification<ept id="p1">](http://tools.ietf.org/html/rfc6749#section-4.2)</ept>.</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>It is often used for single-page/javascript apps that run in a browser.</source>
          <target state="new">It is often used for single-page/javascript apps that run in a browser.</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>This flow is not currently supported by the v2.0 app model preview.</source>
          <target state="new">This flow is not currently supported by the v2.0 app model preview.</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>To see how it works in the generally available Azure AD service, see <bpt id="p1">[</bpt>this Azure AD code sample<ept id="p1">](active-directory-devquickstarts-angular.md)</ept>.</source>
          <target state="new">To see how it works in the generally available Azure AD service, see <bpt id="p1">[</bpt>this Azure AD code sample<ept id="p1">](active-directory-devquickstarts-angular.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>OAuth2 Resource Owner Password Credentials Grant</source>
          <target state="new">OAuth2 Resource Owner Password Credentials Grant</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The OAuth 2.0 Resource Owner Password Credentials Grant is described in the <bpt id="p1">[</bpt>OAuth 2.0 Specification<ept id="p1">](http://tools.ietf.org/html/rfc6749#section-4.3)</ept>.</source>
          <target state="new">The OAuth 2.0 Resource Owner Password Credentials Grant is described in the <bpt id="p1">[</bpt>OAuth 2.0 Specification<ept id="p1">](http://tools.ietf.org/html/rfc6749#section-4.3)</ept>.</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>It allows an app to acquire access_tokens by providing a user's username &amp; password in a token request.</source>
          <target state="new">It allows an app to acquire access_tokens by providing a user's username &amp; password in a token request.</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>This flow is not currently supported by the v2.0 app model preview.</source>
          <target state="new">This flow is not currently supported by the v2.0 app model preview.</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>To see how it works in the generally available Azure AD service, see <bpt id="p1">[</bpt>this Azure AD code sample<ept id="p1">](https://github.com/AzureADSamples/NativeClient-Headless-DotNet)</ept>.</source>
          <target state="new">To see how it works in the generally available Azure AD service, see <bpt id="p1">[</bpt>this Azure AD code sample<ept id="p1">](https://github.com/AzureADSamples/NativeClient-Headless-DotNet)</ept>.</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>OAuth2 On Behalf Of Flow</source>
          <target state="new">OAuth2 On Behalf Of Flow</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The On Behalf Of Flow, or JWT Bearer Credentials Grant is described in this <bpt id="p1">[</bpt>OAuth 2.0 Extension Grant Draft<ept id="p1">](https://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer-12)</ept>.</source>
          <target state="new">The On Behalf Of Flow, or JWT Bearer Credentials Grant is described in this <bpt id="p1">[</bpt>OAuth 2.0 Extension Grant Draft<ept id="p1">](https://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer-12)</ept>.</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>It allows a Web API that receives an access_token to use that access_token as a credential for acquiring access_tokens to other resources.</source>
          <target state="new">It allows a Web API that receives an access_token to use that access_token as a credential for acquiring access_tokens to other resources.</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>This allows a Web API to securely call another downstream Web API.</source>
          <target state="new">This allows a Web API to securely call another downstream Web API.</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>This flow is not currently supported by the v2.0 app model preview.</source>
          <target state="new">This flow is not currently supported by the v2.0 app model preview.</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>To see how it works in the generally available Azure AD service, see <bpt id="p1">[</bpt>this Azure AD code sample<ept id="p1">](https://github.com/AzureADSamples/WebAPI-OnBehalfOf-DotNet)</ept>.</source>
          <target state="new">To see how it works in the generally available Azure AD service, see <bpt id="p1">[</bpt>this Azure AD code sample<ept id="p1">](https://github.com/AzureADSamples/WebAPI-OnBehalfOf-DotNet)</ept>.</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b0e248104ef4d01cd089a44adc37898933de499</xliffext:olfilehash>
  </header>
</xliff>