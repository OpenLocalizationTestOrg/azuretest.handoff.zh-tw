{
  "nodes": [
    {
      "content": "Deploy and Manage Notification Hubs using PowerShell",
      "pos": [
        28,
        80
      ]
    },
    {
      "content": "How to Create and Manage Notification Hubs Using PowerShell for Automation",
      "pos": [
        100,
        174
      ]
    },
    {
      "content": "Deploy and Manage Notification Hubs using PowerShell",
      "pos": [
        503,
        555
      ]
    },
    {
      "content": "Overview",
      "pos": [
        559,
        567
      ]
    },
    {
      "content": "This article shows you how to use Create and Manage Azure Notification Hubs using PowerShell.",
      "pos": [
        569,
        662
      ]
    },
    {
      "content": "The following common automation tasks are shown in this topic.",
      "pos": [
        663,
        725
      ]
    },
    {
      "content": "Create a Notification Hub",
      "pos": [
        729,
        754
      ]
    },
    {
      "content": "Set Credentials",
      "pos": [
        757,
        772
      ]
    },
    {
      "pos": [
        774,
        957
      ],
      "content": "If you also need to create a new service bus namespace for your notification hubs, see <bpt id=\"p1\">[</bpt>Manage Service Bus with PowerShell<ept id=\"p1\">](../service-bus/service-bus-powershell-how-to-provision.md)</ept>."
    },
    {
      "content": "Managing Notifications Hubs is not supported directly by the cmdlets included with Azure PowerShell.",
      "pos": [
        959,
        1059
      ]
    },
    {
      "content": "The best approach from PowerShell is to reference the Microsoft.ServiceBus.dll assembly.",
      "pos": [
        1060,
        1148
      ]
    },
    {
      "content": "The assembly is distributed with the <bpt id=\"p1\">[</bpt>Service Bus NuGet package<ept id=\"p1\">](http://www.nuget.org/packages/WindowsAzure.ServiceBus/)</ept>.",
      "pos": [
        1149,
        1270
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        1276,
        1289
      ]
    },
    {
      "content": "Before you begin this article, you must have the following:",
      "pos": [
        1291,
        1350
      ]
    },
    {
      "content": "An Azure subscription.",
      "pos": [
        1354,
        1376
      ]
    },
    {
      "content": "Azure is a subscription-based platform.",
      "pos": [
        1377,
        1416
      ]
    },
    {
      "content": "For more",
      "pos": [
        1417,
        1425
      ]
    },
    {
      "content": "information about obtaining a subscription, see <bpt id=\"p1\">[</bpt><ept id=\"p1\">Purchase Options]</ept>,",
      "pos": [
        1426,
        1493
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt><ept id=\"p1\">Member Offers]</ept>, or <bpt id=\"p2\">[</bpt><ept id=\"p2\">Free Trial]</ept>.",
      "pos": [
        1494,
        1527
      ]
    },
    {
      "content": "A computer with Azure PowerShell.",
      "pos": [
        1531,
        1564
      ]
    },
    {
      "content": "For instructions, see <bpt id=\"p1\">[</bpt><ept id=\"p1\">Install and configure Azure PowerShell]</ept>.",
      "pos": [
        1565,
        1628
      ]
    },
    {
      "content": "A general understanding of PowerShell scripts, NuGet packages, and the .NET Framework.",
      "pos": [
        1632,
        1718
      ]
    },
    {
      "content": "Including a reference to the .NET assembly for Service Bus",
      "pos": [
        1724,
        1782
      ]
    },
    {
      "content": "Managing Azure Notification Hubs is not yet included with the PowerShell cmdlets in Azure PowerShell.",
      "pos": [
        1784,
        1885
      ]
    },
    {
      "content": "To provision notification hubs and other service bus entities that are not exposed through the existing cmdlets, you can use the .NET client for",
      "pos": [
        1886,
        2030
      ]
    },
    {
      "content": "Service Bus in the <bpt id=\"p1\">[</bpt>Service Bus NuGet package<ept id=\"p1\">](http://www.nuget.org/packages/WindowsAzure.ServiceBus/)</ept>.",
      "pos": [
        2031,
        2134
      ]
    },
    {
      "content": "First, make sure your script can locate the <bpt id=\"p1\">**</bpt>Microsoft.ServiceBus.dll<ept id=\"p1\">**</ept> assembly, which is installed as a NuGet package in a Visual Studio project.",
      "pos": [
        2136,
        2284
      ]
    },
    {
      "content": "In order to be flexible, the script performs these steps:",
      "pos": [
        2285,
        2342
      ]
    },
    {
      "content": "Determines the path at which it was invoked.",
      "pos": [
        2347,
        2391
      ]
    },
    {
      "content": "Traverses the path until it finds a folder named <ph id=\"ph1\">`packages`</ph>.",
      "pos": [
        2395,
        2455
      ]
    },
    {
      "content": "This folder is created when you install NuGet packages for Visual Studio projects.",
      "pos": [
        2456,
        2538
      ]
    },
    {
      "pos": [
        2542,
        2636
      ],
      "content": "Recursively searches the <ph id=\"ph1\">`packages`</ph> folder for an assembly named <bpt id=\"p1\">**</bpt>Microsoft.ServiceBus.dll<ept id=\"p1\">**</ept>."
    },
    {
      "content": "References the assembly so that the types are available for later use.",
      "pos": [
        2640,
        2710
      ]
    },
    {
      "content": "Here's how these steps are implemented in a PowerShell script:",
      "pos": [
        2712,
        2774
      ]
    },
    {
      "content": "Create the NamespaceManager class",
      "pos": [
        3553,
        3586
      ]
    },
    {
      "pos": [
        3588,
        3793
      ],
      "content": "To provision Notification Hubs and other Service Bus entities, create an instance of the <bpt id=\"p1\">[</bpt>NamespaceManager<ept id=\"p1\">](http://msdn.microsoft.com/library/microsoft.servicebus.namespacemanager.aspx)</ept> class from the SDK."
    },
    {
      "content": "You can use the <bpt id=\"p1\">[</bpt><ept id=\"p1\">Get-AzureSBAuthorizationRule]</ept> cmdlet included with Azure PowerShell to retrieve an authorization rule that's used to provide a connection string.",
      "pos": [
        3796,
        3958
      ]
    },
    {
      "content": "We'll store a reference to the <ph id=\"ph1\">`NamespaceManager`</ph> instance in the <ph id=\"ph2\">`$NamespaceManager`</ph> variable.",
      "pos": [
        3959,
        4054
      ]
    },
    {
      "content": "We will use <ph id=\"ph1\">`$NamespaceManager`</ph> to provision a notification hub.",
      "pos": [
        4055,
        4119
      ]
    },
    {
      "content": "Provisioning a new Notification Hub",
      "pos": [
        4559,
        4594
      ]
    },
    {
      "content": "To provision a new notification hub, use the <bpt id=\"p1\">[</bpt><ept id=\"p1\">.NET API for Service Bus]</ept>.",
      "pos": [
        4597,
        4669
      ]
    },
    {
      "content": "This article focuses only on notification hubs.",
      "pos": [
        4670,
        4717
      ]
    },
    {
      "content": "To work with other service bus entities, see <bpt id=\"p1\">[</bpt>Manage Service Bus with PowerShell<ept id=\"p1\">](../service-bus/service-bus-powershell-how-to-provision.md)</ept>.",
      "pos": [
        4718,
        4859
      ]
    },
    {
      "content": "In this part of the script you set up four local variables.",
      "pos": [
        4861,
        4920
      ]
    },
    {
      "pos": [
        4926,
        5023
      ],
      "content": "<ph id=\"ph1\">`$Namespace`</ph> : Set this to the name of the namespace where you want to create a notification hub."
    },
    {
      "content": "<ph id=\"ph1\">`$Path`</ph> : Set this path to the name of the new notification hub.",
      "pos": [
        5027,
        5091
      ]
    },
    {
      "content": "For example, \"MyHub\".",
      "pos": [
        5093,
        5114
      ]
    },
    {
      "pos": [
        5122,
        5280
      ],
      "content": "<ph id=\"ph1\">`$WnsPackageSid`</ph> : Set this to the package SID for you Windows App from the <bpt id=\"p1\">[</bpt>Windows Dev Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=266582&amp;clcid=0x409)</ept>."
    },
    {
      "pos": [
        5284,
        5439
      ],
      "content": "<ph id=\"ph1\">`$WnsSecretkey`</ph>: Set this to the secret key for you Windows App from the <bpt id=\"p1\">[</bpt>Windows Dev Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=266582&amp;clcid=0x409)</ept>."
    },
    {
      "content": "These variables are used to connect to your Service Bus namespace and create a new Notification Hub configured to handle Windows Notification Services (WNS) notifications with WNS credentials for a Windows App.",
      "pos": [
        5441,
        5651
      ]
    },
    {
      "content": "For information on obtaining the package SID and secret key see, the <bpt id=\"p1\">[</bpt>Getting Started with Notification Hubs<ept id=\"p1\">](notification-hubs-windows-store-dotnet-get-started.md)</ept> tutorial.",
      "pos": [
        5652,
        5826
      ]
    },
    {
      "pos": [
        5831,
        5954
      ],
      "content": "The script snippet uses the <ph id=\"ph1\">`NamespaceManager`</ph> object to check to see if the Notification Hub identified by <ph id=\"ph2\">`$Path`</ph> exists."
    },
    {
      "pos": [
        5958,
        6133
      ],
      "content": "If it does not exist, the script will create an <ph id=\"ph1\">`NotificationHubDescription`</ph> with WNS credentials and pass that to the <ph id=\"ph2\">`NamespaceManager`</ph> class <ph id=\"ph3\">`CreateNotificationHub`</ph> method."
    },
    {
      "content": "Additional Resources",
      "pos": [
        7916,
        7936
      ]
    },
    {
      "content": "Manage Service Bus with PowerShell",
      "pos": [
        7941,
        7975
      ]
    },
    {
      "content": "How to create Service Bus queues, topics and subscriptions using a PowerShell script",
      "pos": [
        8039,
        8123
      ]
    },
    {
      "content": "How to create a Service Bus Namespace and an Event Hub using a PowerShell script",
      "pos": [
        8270,
        8350
      ]
    },
    {
      "content": "Some ready-made scripts are also available for download:",
      "pos": [
        8490,
        8546
      ]
    },
    {
      "content": "Service Bus PowerShell Scripts",
      "pos": [
        8550,
        8580
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Deploy and Manage Notification Hubs using PowerShell\" \n    description=\"How to Create and Manage Notification Hubs Using PowerShell for Automation\" \n    services=\"notification-hubs\" \n    documentationCenter=\"\" \n    authors=\"wesmc7777\" \n    manager=\"dwrede\" \n    editor=\"\" />\n\n<tags \n    ms.service=\"notification-hubs\" \n    ms.workload=\"mobile\" \n    ms.tgt_pltfrm=\"powershell\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"06/18/2015\" \n    ms.author=\"wesmc\"/>\n\n# Deploy and Manage Notification Hubs using PowerShell\n\n##Overview\n\nThis article shows you how to use Create and Manage Azure Notification Hubs using PowerShell. The following common automation tasks are shown in this topic.\n\n+ Create a Notification Hub\n+ Set Credentials\n\nIf you also need to create a new service bus namespace for your notification hubs, see [Manage Service Bus with PowerShell](../service-bus/service-bus-powershell-how-to-provision.md).\n\nManaging Notifications Hubs is not supported directly by the cmdlets included with Azure PowerShell. The best approach from PowerShell is to reference the Microsoft.ServiceBus.dll assembly. The assembly is distributed with the [Service Bus NuGet package](http://www.nuget.org/packages/WindowsAzure.ServiceBus/).\n\n\n## Prerequisites\n\nBefore you begin this article, you must have the following:\n\n- An Azure subscription. Azure is a subscription-based platform. For more\ninformation about obtaining a subscription, see [Purchase Options],\n[Member Offers], or [Free Trial].\n\n- A computer with Azure PowerShell. For instructions, see [Install and configure Azure PowerShell].\n\n- A general understanding of PowerShell scripts, NuGet packages, and the .NET Framework.\n\n\n## Including a reference to the .NET assembly for Service Bus\n\nManaging Azure Notification Hubs is not yet included with the PowerShell cmdlets in Azure PowerShell. To provision notification hubs and other service bus entities that are not exposed through the existing cmdlets, you can use the .NET client for\nService Bus in the [Service Bus NuGet package](http://www.nuget.org/packages/WindowsAzure.ServiceBus/).\n\nFirst, make sure your script can locate the **Microsoft.ServiceBus.dll** assembly, which is installed as a NuGet package in a Visual Studio project. In order to be flexible, the script performs these steps:\n\n1. Determines the path at which it was invoked.\n2. Traverses the path until it finds a folder named `packages`. This folder is created when you install NuGet packages for Visual Studio projects.\n3. Recursively searches the `packages` folder for an assembly named **Microsoft.ServiceBus.dll**.\n4. References the assembly so that the types are available for later use.\n\nHere's how these steps are implemented in a PowerShell script:\n\n``` powershell\n\ntry\n{\n    # WARNING: Make sure to reference the latest version of Microsoft.ServiceBus.dll\n    Write-Output \"Adding the [Microsoft.ServiceBus.dll] assembly to the script...\"\n    $scriptPath = Split-Path (Get-Variable MyInvocation -Scope 0).Value.MyCommand.Path\n    $packagesFolder = (Split-Path $scriptPath -Parent) + \"\\packages\"\n    $assembly = Get-ChildItem $packagesFolder -Include \"Microsoft.ServiceBus.dll\" -Recurse\n    Add-Type -Path $assembly.FullName\n\n    Write-Output \"The [Microsoft.ServiceBus.dll] assembly has been successfully added to the script.\"\n}\n\ncatch [System.Exception]\n{\n    Write-Error(\"Could not add the Microsoft.ServiceBus.dll assembly to the script. Make sure you build the solution before running the provisioning script.\")\n}\n```\n\n## Create the NamespaceManager class\n\nTo provision Notification Hubs and other Service Bus entities, create an instance of the [NamespaceManager](http://msdn.microsoft.com/library/microsoft.servicebus.namespacemanager.aspx) class from the SDK. \n\nYou can use the [Get-AzureSBAuthorizationRule] cmdlet included with Azure PowerShell to retrieve an authorization rule that's used to provide a connection string. We'll store a reference to the `NamespaceManager` instance in the `$NamespaceManager` variable. We will use `$NamespaceManager` to provision a notification hub.\n\n``` powershell\n$sbr = Get-AzureSBAuthorizationRule -Namespace $Namespace\n# Create the NamespaceManager object to create the event hub\nWrite-Output \"Creating a NamespaceManager object for the [$Namespace] namespace...\"\n$NamespaceManager=[Microsoft.ServiceBus.NamespaceManager]::CreateFromConnectionString($sbr.ConnectionString);\nWrite-Output \"NamespaceManager object for the [$Namespace] namespace has been successfully created.\"\n```\n\n\n## Provisioning a new Notification Hub \n\nTo provision a new notification hub, use the [.NET API for Service Bus]. This article focuses only on notification hubs. To work with other service bus entities, see [Manage Service Bus with PowerShell](../service-bus/service-bus-powershell-how-to-provision.md).\n\nIn this part of the script you set up four local variables. \n\n1. `$Namespace` : Set this to the name of the namespace where you want to create a notification hub.\n2. `$Path` : Set this path to the name of the new notification hub.  For example, \"MyHub\".    \n3. `$WnsPackageSid` : Set this to the package SID for you Windows App from the [Windows Dev Center](http://go.microsoft.com/fwlink/p/?linkid=266582&clcid=0x409).\n4. `$WnsSecretkey`: Set this to the secret key for you Windows App from the [Windows Dev Center](http://go.microsoft.com/fwlink/p/?linkid=266582&clcid=0x409).\n\nThese variables are used to connect to your Service Bus namespace and create a new Notification Hub configured to handle Windows Notification Services (WNS) notifications with WNS credentials for a Windows App. For information on obtaining the package SID and secret key see, the [Getting Started with Notification Hubs](notification-hubs-windows-store-dotnet-get-started.md) tutorial. \n\n+ The script snippet uses the `NamespaceManager` object to check to see if the Notification Hub identified by `$Path` exists.\n\n+ If it does not exist, the script will create an `NotificationHubDescription` with WNS credentials and pass that to the `NamespaceManager` class `CreateNotificationHub` method.\n\n``` powershell\n\n$Namespace = \"<Enter your namespace>\n$Path  = \"<Enter a name for your notification hub>\"\n$WnsPackageSid = \"<your package sid>\"\n$WnsSecretkey = \"<enter your secret key>\"\n\n$WnsCredential = New-Object -TypeName Microsoft.ServiceBus.Notifications.WnsCredential -ArgumentList $WnsPackageSid,$WnsSecretkey\n\n# Query the namespace\n$CurrentNamespace = Get-AzureSBNamespace -Name $Namespace\n\n# Check if the namespace already exists\nif ($CurrentNamespace)\n{\n    Write-Output \"The namespace [$Namespace] in the [$($CurrentNamespace.Region)] region was found.\"\n\n    # Create the NamespaceManager object used to create a new notification hub\n    $sbr = Get-AzureSBAuthorizationRule -Namespace $Namespace\n    Write-Output \"Creating a NamespaceManager object for the [$Namespace] namespace...\"\n    $NamespaceManager = [Microsoft.ServiceBus.NamespaceManager]::CreateFromConnectionString($sbr.ConnectionString);\n    Write-Output \"NamespaceManager object for the [$Namespace] namespace has been successfully created.\"\n\n    # Check to see if the Notification Hub already exists\n    if ($NamespaceManager.NotificationHubExists($Path))\n    {\n        Write-Output \"The [$Path] notification hub already exists in the [$Namespace] namespace.\"  \n    }\n    else\n    {\n        Write-Output \"Creating the [$Path] notification hub in the [$Namespace] namespace.\"\n        $NHDescription = New-Object -TypeName Microsoft.ServiceBus.Notifications.NotificationHubDescription -ArgumentList $Path;\n        $NHDescription.WnsCredential = $WnsCredential;\n        $NamespaceManager.CreateNotificationHub($NHDescription);\n        Write-Output \"The [$Path] notification hub was created in the [$Namespace] namespace.\"\n    }\n}\nelse\n{\n    Write-Host \"The [$Namespace] namespace does not exist.\"\n}\n```\n\n\n\n\n## Additional Resources\n\n- [Manage Service Bus with PowerShell](../service-bus/service-bus-powershell-how-to-provision.md)\n- [How to create Service Bus queues, topics and subscriptions using a PowerShell script](http://blogs.msdn.com/b/paolos/archive/2014/12/02/how-to-create-a-service-bus-queues-topics-and-subscriptions-using-a-powershell-script.aspx)\n- [How to create a Service Bus Namespace and an Event Hub using a PowerShell script](http://blogs.msdn.com/b/paolos/archive/2014/12/01/how-to-create-a-service-bus-namespace-and-an-event-hub-using-a-powershell-script.aspx)\n\nSome ready-made scripts are also available for download:\n- [Service Bus PowerShell Scripts](https://code.msdn.microsoft.com/windowsazure/Service-Bus-PowerShell-a46b7059)\n \n\n[Purchase Options]: http://azure.microsoft.com/pricing/purchase-options/\n[Member Offers]: http://azure.microsoft.com/pricing/member-offers/\n[Free Trial]: http://azure.microsoft.com/pricing/free-trial/\n[Install and configure Azure PowerShell]: ../install-configure-powershell.md\n[.NET API for Service Bus]: https://msdn.microsoft.com/library/microsoft.servicebus.aspx\n[Get-AzureSBNamespace]: https://msdn.microsoft.com/library/azure/dn495122.aspx\n[New-AzureSBNamespace]: https://msdn.microsoft.com/library/azure/dn495165.aspx\n[Get-AzureSBAuthorizationRule]: https://msdn.microsoft.com/library/azure/dn495113.aspx\n "
}