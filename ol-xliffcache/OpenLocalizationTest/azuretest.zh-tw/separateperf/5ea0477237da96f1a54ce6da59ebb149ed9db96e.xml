{
  "nodes": [
    {
      "content": "Node.js application using Socket.io | Microsoft Azure",
      "pos": [
        28,
        81
      ]
    },
    {
      "content": "Learn how to use socket.io in a node.js application hosted on Azure.",
      "pos": [
        101,
        169
      ]
    },
    {
      "content": "Build a Node.js Chat Application with Socket.IO on an Azure Cloud Service",
      "pos": [
        498,
        571
      ]
    },
    {
      "content": "Socket.IO provides realtime communication between between your node.js",
      "pos": [
        573,
        643
      ]
    },
    {
      "content": "server and clients.",
      "pos": [
        644,
        663
      ]
    },
    {
      "content": "This tutorial will walk you through hosting a",
      "pos": [
        664,
        709
      ]
    },
    {
      "content": "socket.IO based chat application on Azure.",
      "pos": [
        710,
        752
      ]
    },
    {
      "content": "For more information",
      "pos": [
        753,
        773
      ]
    },
    {
      "content": "on Socket.IO, see <ph id=\"ph1\">&lt;a href=\"http://socket.io/\"&gt;</ph>http://socket.io/<ph id=\"ph2\">&lt;/a&gt;</ph>.",
      "pos": [
        774,
        842
      ]
    },
    {
      "content": "A screenshot of the completed application is below:",
      "pos": [
        844,
        895
      ]
    },
    {
      "content": "A browser window displaying the service hosted on Azure",
      "pos": [
        899,
        954
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        977,
        990
      ]
    },
    {
      "content": "Ensure that the following products and versions are installed to successfully complete the example in this article:",
      "pos": [
        992,
        1107
      ]
    },
    {
      "pos": [
        1111,
        1216
      ],
      "content": "Install <bpt id=\"p1\">[</bpt>Visual Studio 2013<ept id=\"p1\">](https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx)</ept>"
    },
    {
      "pos": [
        1219,
        1266
      ],
      "content": "Install <bpt id=\"p1\">[</bpt>Node.js<ept id=\"p1\">](https://nodejs.org/download/)</ept>"
    },
    {
      "pos": [
        1269,
        1325
      ],
      "content": "Install <bpt id=\"p1\">[</bpt>Python version 2.7.10<ept id=\"p1\">](https://www.python.org/)</ept>"
    },
    {
      "content": "Create a Cloud Service Project",
      "pos": [
        1330,
        1360
      ]
    },
    {
      "content": "The following steps create the cloud service project that will host the Socket.IO application.",
      "pos": [
        1362,
        1456
      ]
    },
    {
      "content": "From the <bpt id=\"p1\">**</bpt>Start Menu<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Start Screen<ept id=\"p2\">**</ept>, search for <bpt id=\"p3\">**</bpt>Azure PowerShell<ept id=\"p3\">**</ept>.",
      "pos": [
        1461,
        1538
      ]
    },
    {
      "content": "Finally, right-click <bpt id=\"p1\">**</bpt>Azure PowerShell<ept id=\"p1\">**</ept> and select <bpt id=\"p2\">**</bpt>Run As Administrator<ept id=\"p2\">**</ept>.",
      "pos": [
        1539,
        1617
      ]
    },
    {
      "content": "Azure PowerShell icon",
      "pos": [
        1625,
        1646
      ]
    },
    {
      "pos": [
        1669,
        1708
      ],
      "content": "Create a directory called <bpt id=\"p1\">**</bpt>c:\\\\node<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        1740,
        1788
      ],
      "content": "Change directories to the <bpt id=\"p1\">**</bpt>c:\\\\node<ept id=\"p1\">**</ept> directory"
    },
    {
      "pos": [
        1819,
        1931
      ],
      "content": "Enter the following commands to create a new solution named <bpt id=\"p1\">**</bpt>chatapp<ept id=\"p1\">**</ept> and a worker role named <bpt id=\"p2\">**</bpt>WorkerRole1<ept id=\"p2\">**</ept>:"
    },
    {
      "content": "You will see the following response:",
      "pos": [
        2034,
        2070
      ]
    },
    {
      "content": "The output of the new-azureservice and add-azurenodeworkerrolecmdlets",
      "pos": [
        2078,
        2147
      ]
    },
    {
      "content": "Download the Chat Example",
      "pos": [
        2217,
        2242
      ]
    },
    {
      "content": "For this project, we will use the chat example from the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">Socket.IO</ph>\nGitHub repository<ept id=\"p1\">]</ept>.",
      "pos": [
        2244,
        2330
      ]
    },
    {
      "content": "Perform the following steps to download the example",
      "pos": [
        2331,
        2382
      ]
    },
    {
      "content": "and add it to the project you previously created.",
      "pos": [
        2383,
        2432
      ]
    },
    {
      "content": "Create a local copy of the repository by using the <bpt id=\"p1\">**</bpt>Clone<ept id=\"p1\">**</ept> button.",
      "pos": [
        2438,
        2506
      ]
    },
    {
      "content": "You may also use the <bpt id=\"p1\">**</bpt>ZIP<ept id=\"p1\">**</ept> button to download the project.",
      "pos": [
        2507,
        2567
      ]
    },
    {
      "content": "A browser window viewing https://github.com/LearnBoost/socket.io/tree/master/examples/chat, with the ZIP download icon highlighted",
      "pos": [
        2575,
        2705
      ]
    },
    {
      "pos": [
        2731,
        2954
      ],
      "content": "Navigate the directory structure of the local repository until you arrive at the **examples\\\\chat**\ndirectory. Copy the contents of this directory to the\n**C:\\\\node\\\\chatapp\\\\WorkerRole1** directory created earlier.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Navigate the directory structure of the local repository until you arrive at the <bpt id=\"p1\">**</bpt>examples\\\\chat<ept id=\"p1\">**</ept>",
          "pos": [
            0,
            99
          ]
        },
        {
          "content": "directory. Copy the contents of this directory to the",
          "pos": [
            100,
            153
          ],
          "nodes": [
            {
              "content": "directory.",
              "pos": [
                0,
                10
              ]
            },
            {
              "content": "Copy the contents of this directory to the",
              "pos": [
                11,
                53
              ]
            }
          ]
        },
        {
          "content": "<bpt id=\"p1\">**</bpt>C:\\\\node\\\\chatapp\\\\WorkerRole1<ept id=\"p1\">**</ept> directory created earlier.",
          "pos": [
            154,
            215
          ]
        }
      ]
    },
    {
      "content": "Explorer, displaying the contents of the examples\\\\chat directory extracted from the archive",
      "pos": [
        2962,
        3054
      ]
    },
    {
      "pos": [
        3076,
        3180
      ],
      "content": "The highlighted items in the screenshot above are the files copied from the <bpt id=\"p1\">**</bpt>examples\\\\chat<ept id=\"p1\">**</ept> directory"
    },
    {
      "content": "In the <bpt id=\"p1\">**</bpt>C:\\\\node\\\\chatapp\\\\WorkerRole1<ept id=\"p1\">**</ept> directory, delete the <bpt id=\"p2\">**</bpt>server.js<ept id=\"p2\">**</ept> file, and then rename the <bpt id=\"p3\">**</bpt>app.js<ept id=\"p3\">**</ept> file to <bpt id=\"p4\">**</bpt>server.js<ept id=\"p4\">**</ept>.",
      "pos": [
        3186,
        3323
      ]
    },
    {
      "content": "This removes the default <bpt id=\"p1\">**</bpt>server.js<ept id=\"p1\">**</ept> file created previously by the <bpt id=\"p2\">**</bpt>Add-AzureNodeWorkerRole<ept id=\"p2\">**</ept> cmdlet and replaces it with the application file from the chat example.",
      "pos": [
        3324,
        3493
      ]
    },
    {
      "content": "Modify Server.js and Install Modules",
      "pos": [
        3499,
        3535
      ]
    },
    {
      "content": "Before testing the application in the Azure emulator, we must",
      "pos": [
        3537,
        3598
      ]
    },
    {
      "content": "make some minor modifications.",
      "pos": [
        3599,
        3629
      ]
    },
    {
      "content": "Perform the following steps to the",
      "pos": [
        3630,
        3664
      ]
    },
    {
      "content": "server.js file:",
      "pos": [
        3665,
        3680
      ]
    },
    {
      "pos": [
        3686,
        3750
      ],
      "content": "Open the <bpt id=\"p1\">**</bpt>server.js<ept id=\"p1\">**</ept> file in Visual Studio or any text editor."
    },
    {
      "pos": [
        3756,
        3951
      ],
      "content": "Find the <bpt id=\"p1\">**</bpt>Module dependencies<ept id=\"p1\">**</ept> section at the beginning of server.js and change the line containing <bpt id=\"p2\">**</bpt>sio = require('..//..//lib//socket.io')<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>sio = require('socket.io')<ept id=\"p3\">**</ept> as shown below:"
    },
    {
      "pos": [
        4194,
        4406
      ],
      "content": "To ensure the application listens on the correct port, open\nserver.js in Notepad or your favorite editor, and then change the\nfollowing line by replacing **3000** with **process.env.port** as shown below:",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "To ensure the application listens on the correct port, open",
          "pos": [
            0,
            59
          ]
        },
        {
          "content": "server.js in Notepad or your favorite editor, and then change the",
          "pos": [
            60,
            125
          ]
        },
        {
          "content": "following line by replacing <bpt id=\"p1\">**</bpt>3000<ept id=\"p1\">**</ept> with <bpt id=\"p2\">**</bpt>process.env.port<ept id=\"p2\">**</ept> as shown below:",
          "pos": [
            126,
            204
          ]
        }
      ]
    },
    {
      "content": "After saving the changes to <bpt id=\"p1\">**</bpt>server.js<ept id=\"p1\">**</ept>, use the following steps to",
      "pos": [
        4669,
        4738
      ]
    },
    {
      "content": "install required modules, and then test the application in the",
      "pos": [
        4739,
        4801
      ]
    },
    {
      "content": "Azure emulator:",
      "pos": [
        4802,
        4817
      ]
    },
    {
      "pos": [
        4823,
        5004
      ],
      "content": "Using <bpt id=\"p1\">**</bpt>Azure PowerShell<ept id=\"p1\">**</ept>, change directories to the <bpt id=\"p2\">**</bpt>C:\\\\node\\\\chatapp\\\\WorkerRole1<ept id=\"p2\">**</ept> directory and use the following command to install the modules required by this application:"
    },
    {
      "pos": [
        5063,
        5210
      ],
      "content": "This will install the modules listed in the package.json file. After\nthe command completes, you should see output similar to the\nfollowing:",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "This will install the modules listed in the package.json file. After",
          "pos": [
            0,
            68
          ],
          "nodes": [
            {
              "content": "This will install the modules listed in the package.json file.",
              "pos": [
                0,
                62
              ]
            },
            {
              "content": "After",
              "pos": [
                63,
                68
              ]
            }
          ]
        },
        {
          "content": "the command completes, you should see output similar to the",
          "pos": [
            69,
            128
          ]
        },
        {
          "content": "following:",
          "pos": [
            129,
            139
          ]
        }
      ]
    },
    {
      "content": "The output of the npm install command",
      "pos": [
        5218,
        5255
      ]
    },
    {
      "pos": [
        5301,
        5564
      ],
      "content": "Since this example was originally a part of the Socket.IO GitHub\nrepository, and directly referenced the Socket.IO library by\nrelative path, Socket.IO was not referenced in the package.json\nfile, so we must install it by issuing the following command:",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Since this example was originally a part of the Socket.IO GitHub",
          "pos": [
            0,
            64
          ]
        },
        {
          "content": "repository, and directly referenced the Socket.IO library by",
          "pos": [
            65,
            125
          ]
        },
        {
          "content": "relative path, Socket.IO was not referenced in the package.json",
          "pos": [
            126,
            189
          ]
        },
        {
          "content": "file, so we must install it by issuing the following command:",
          "pos": [
            190,
            251
          ]
        }
      ]
    },
    {
      "content": "Test and Deploy",
      "pos": [
        5640,
        5655
      ]
    },
    {
      "content": "Launch the emulator by issuing the following command:",
      "pos": [
        5661,
        5714
      ]
    },
    {
      "pos": [
        5789,
        5841
      ],
      "content": "Open a browser and navigate to <bpt id=\"p1\">**</bpt>http://127.0.0.1<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        5847,
        6101
      ],
      "content": "When the browser window opens, enter a nickname and then hit enter.\nThis will all you to post messages as a specific nickname. To test\nmulti-user functionality, open additional browser windows using the\nsame URL and enter different nicknames.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "When the browser window opens, enter a nickname and then hit enter.",
          "pos": [
            0,
            67
          ]
        },
        {
          "content": "This will all you to post messages as a specific nickname. To test",
          "pos": [
            68,
            134
          ],
          "nodes": [
            {
              "content": "This will all you to post messages as a specific nickname.",
              "pos": [
                0,
                58
              ]
            },
            {
              "content": "To test",
              "pos": [
                59,
                66
              ]
            }
          ]
        },
        {
          "content": "multi-user functionality, open additional browser windows using the",
          "pos": [
            135,
            202
          ]
        },
        {
          "content": "same URL and enter different nicknames.",
          "pos": [
            203,
            242
          ]
        }
      ]
    },
    {
      "content": "Two browser windows displaying chat messages from User1 and User2",
      "pos": [
        6109,
        6174
      ]
    },
    {
      "pos": [
        6245,
        6331
      ],
      "content": "After testing the application, stop the emulator by issuing the\nfollowing command:",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "After testing the application, stop the emulator by issuing the",
          "pos": [
            0,
            63
          ]
        },
        {
          "content": "following command:",
          "pos": [
            64,
            82
          ]
        }
      ]
    },
    {
      "pos": [
        6397,
        6497
      ],
      "content": "To deploy the application to Azure, use the\n**Publish-AzureServiceProject** cmdlet. For example:",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "To deploy the application to Azure, use the",
          "pos": [
            0,
            43
          ]
        },
        {
          "content": "**Publish-AzureServiceProject** cmdlet. For example:",
          "pos": [
            44,
            96
          ],
          "nodes": [
            {
              "content": "<bpt id=\"p1\">**</bpt>Publish-AzureServiceProject<ept id=\"p1\">**</ept> cmdlet.",
              "pos": [
                0,
                39
              ]
            },
            {
              "content": "For example:",
              "pos": [
                40,
                52
              ]
            }
          ]
        }
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> Be sure to use a unique name, otherwise the publish process will fail.",
      "pos": [
        6625,
        6713
      ]
    },
    {
      "content": "After the deployment has completed, the browser will open and navigate to the deployed service.",
      "pos": [
        6714,
        6809
      ]
    },
    {
      "content": "If you receive an error stating that the provided subscription name doesn't exist in the imported publish profile, you must download and import the publishing profile for your subscription before deploying to Azure.",
      "pos": [
        6823,
        7038
      ]
    },
    {
      "content": "See the <bpt id=\"p1\">**</bpt>Deploying the Application to Azure<ept id=\"p1\">**</ept> section of <bpt id=\"p2\">[</bpt>Build and deploy a Node.js application to an Azure Cloud Service<ept id=\"p2\">](https://www.windowsazure.com/develop/nodejs/tutorials/getting-started/)</ept>",
      "pos": [
        7039,
        7235
      ]
    },
    {
      "content": "A browser window displaying the service hosted on Azure",
      "pos": [
        7243,
        7298
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you receive an error stating that the provided subscription name doesn't exist in the imported publish profile, you must download and import the publishing profile for your subscription before deploying to Azure.",
      "pos": [
        7322,
        7550
      ]
    },
    {
      "content": "See the <bpt id=\"p1\">**</bpt>Deploying the Application to Azure<ept id=\"p1\">**</ept> section of <bpt id=\"p2\">[</bpt>Build and deploy a Node.js application to an Azure Cloud Service<ept id=\"p2\">](https://www.windowsazure.com/develop/nodejs/tutorials/getting-started/)</ept>",
      "pos": [
        7551,
        7747
      ]
    },
    {
      "content": "Your application is now running on Azure, and can relay chat",
      "pos": [
        7749,
        7809
      ]
    },
    {
      "content": "messages between different clients using Socket.IO.",
      "pos": [
        7810,
        7861
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> For simplicity, this sample is limited to chatting between users connected to the same instance.",
      "pos": [
        7865,
        7974
      ]
    },
    {
      "content": "This means that if the cloud service creates two worker role instances, users will only be able to chat with others connected to the same worker role instance.",
      "pos": [
        7975,
        8134
      ]
    },
    {
      "content": "To scale the application to work with multiple role instances, you could use a technology like Service Bus to share the Socket.IO store state across instances.",
      "pos": [
        8135,
        8294
      ]
    },
    {
      "content": "For examples, see the Service Bus Queues and Topics usage samples in the <bpt id=\"p1\">[</bpt>Azure SDK for Node.js GitHub repository<ept id=\"p1\">](https://github.com/WindowsAzure/azure-sdk-for-node)</ept>.",
      "pos": [
        8295,
        8462
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        8466,
        8476
      ]
    },
    {
      "content": "In this tutorial you learned how to create a basic chat application hosted in an Azure Cloud Service.",
      "pos": [
        8478,
        8579
      ]
    },
    {
      "content": "To learn how to host this application in an Azure Website, see <bpt id=\"p1\">[</bpt>Build a Node.js Chat Application with Socket.IO on an Azure Web Site<ept id=\"p1\">][chatwebsite]</ept>.",
      "pos": [
        8580,
        8727
      ]
    },
    {
      "content": "test",
      "pos": [
        10043,
        10047
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Node.js application using Socket.io | Microsoft Azure\" \n    description=\"Learn how to use socket.io in a node.js application hosted on Azure.\" \n    services=\"cloud-services\" \n    documentationCenter=\"nodejs\" \n    authors=\"TomArcher\" \n    manager=\"wpickett\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"cloud-services\" \n    ms.workload=\"tbd\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"nodejs\" \n    ms.topic=\"article\" \n    ms.date=\"09/01/2015\" \n    ms.author=\"tarcher\"/>\n\n\n\n\n\n# Build a Node.js Chat Application with Socket.IO on an Azure Cloud Service\n\nSocket.IO provides realtime communication between between your node.js\nserver and clients. This tutorial will walk you through hosting a\nsocket.IO based chat application on Azure. For more information\non Socket.IO, see <a href=\"http://socket.io/\">http://socket.io/</a>.\n\nA screenshot of the completed application is below:\n\n![A browser window displaying the service hosted on Azure][completed-app]  \n\n## Prerequisites\n\nEnsure that the following products and versions are installed to successfully complete the example in this article:\n\n* Install [Visual Studio 2013](https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx)\n* Install [Node.js](https://nodejs.org/download/)\n* Install [Python version 2.7.10](https://www.python.org/)\n\n## Create a Cloud Service Project\n\nThe following steps create the cloud service project that will host the Socket.IO application.\n\n1. From the **Start Menu** or **Start Screen**, search for **Azure PowerShell**. Finally, right-click **Azure PowerShell** and select **Run As Administrator**.\n\n    ![Azure PowerShell icon][powershell-menu]\n\n2. Create a directory called **c:\\\\node**. \n \n        PS C:\\> md node\n\n3. Change directories to the **c:\\\\node** directory\n \n        PS C:\\> cd node\n\n4. Enter the following commands to create a new solution named **chatapp** and a worker role named **WorkerRole1**:\n\n        PS C:\\node> New-AzureServiceProject chatapp\n        PS C:\\Node> Add-AzureNodeWorkerRole\n\n    You will see the following response:\n\n    ![The output of the new-azureservice and add-azurenodeworkerrolecmdlets](./media/cloud-services-nodejs-chat-app-socketio/socketio-1.png)\n\n## Download the Chat Example\n\nFor this project, we will use the chat example from the [Socket.IO\nGitHub repository]. Perform the following steps to download the example\nand add it to the project you previously created.\n\n1.  Create a local copy of the repository by using the **Clone** button. You may also use the **ZIP** button to download the project.\n\n    ![A browser window viewing https://github.com/LearnBoost/socket.io/tree/master/examples/chat, with the ZIP download icon highlighted][chat-example-view]\n\n3.  Navigate the directory structure of the local repository until you arrive at the **examples\\\\chat**\n    directory. Copy the contents of this directory to the\n    **C:\\\\node\\\\chatapp\\\\WorkerRole1** directory created earlier.\n\n    ![Explorer, displaying the contents of the examples\\\\chat directory extracted from the archive][chat-contents]\n\n    The highlighted items in the screenshot above are the files copied from the **examples\\\\chat** directory\n\n4.  In the **C:\\\\node\\\\chatapp\\\\WorkerRole1** directory, delete the **server.js** file, and then rename the **app.js** file to **server.js**. This removes the default **server.js** file created previously by the **Add-AzureNodeWorkerRole** cmdlet and replaces it with the application file from the chat example.\n\n### Modify Server.js and Install Modules\n\nBefore testing the application in the Azure emulator, we must\nmake some minor modifications. Perform the following steps to the\nserver.js file:\n\n1.  Open the **server.js** file in Visual Studio or any text editor.\n\n2.  Find the **Module dependencies** section at the beginning of server.js and change the line containing **sio = require('..//..//lib//socket.io')** to **sio = require('socket.io')** as shown below:\n\n        var express = require('express')\n        , stylus = require('stylus')\n        , nib = require('nib')\n        //, sio = require('..//..//lib//socket.io'); //Original\n        , sio = require('socket.io');                //Updated\n\n3.  To ensure the application listens on the correct port, open\n    server.js in Notepad or your favorite editor, and then change the\n    following line by replacing **3000** with **process.env.port** as shown below:\n\n        //app.listen(3000, function () {            //Original\n        app.listen(process.env.port, function () {  //Updated\n          var addr = app.address();\n          console.log('   app listening on http://' + addr.address + ':' + addr.port);\n        });\n\nAfter saving the changes to **server.js**, use the following steps to\ninstall required modules, and then test the application in the\nAzure emulator:\n\n1.  Using **Azure PowerShell**, change directories to the **C:\\\\node\\\\chatapp\\\\WorkerRole1** directory and use the following command to install the modules required by this application:\n\n        PS C:\\node\\chatapp\\WorkerRole1> npm install\n\n    This will install the modules listed in the package.json file. After\n    the command completes, you should see output similar to the\n    following:\n\n    ![The output of the npm install command][The-output-of-the-npm-install-command]\n\n4.  Since this example was originally a part of the Socket.IO GitHub\n    repository, and directly referenced the Socket.IO library by\n    relative path, Socket.IO was not referenced in the package.json\n    file, so we must install it by issuing the following command:\n\n        PS C:\\node\\chatapp\\WorkerRole1> npm install socket.io --save\n\n### Test and Deploy\n\n1.  Launch the emulator by issuing the following command:\n\n        PS C:\\node\\chatapp\\WorkerRole1> Start-AzureEmulator -Launch\n\n2.  Open a browser and navigate to **http://127.0.0.1**.\n\n3.  When the browser window opens, enter a nickname and then hit enter.\n    This will all you to post messages as a specific nickname. To test\n    multi-user functionality, open additional browser windows using the\n    same URL and enter different nicknames.\n\n    ![Two browser windows displaying chat messages from User1 and User2](./media/cloud-services-nodejs-chat-app-socketio/socketio-8.png)\n\n3.  After testing the application, stop the emulator by issuing the\n    following command:\n\n        PS C:\\node\\chatapp\\WorkerRole1> Stop-AzureEmulator\n\n4.  To deploy the application to Azure, use the\n    **Publish-AzureServiceProject** cmdlet. For example:\n\n        PS C:\\node\\chatapp\\WorkerRole1> Publish-AzureServiceProject -ServiceName mychatapp -Location \"East US\" -Launch\n\n    > [AZURE.IMPORTANT] Be sure to use a unique name, otherwise the publish process will fail. After the deployment has completed, the browser will open and navigate to the deployed service.\n    > \n    > If you receive an error stating that the provided subscription name doesn't exist in the imported publish profile, you must download and import the publishing profile for your subscription before deploying to Azure. See the **Deploying the Application to Azure** section of [Build and deploy a Node.js application to an Azure Cloud Service](https://www.windowsazure.com/develop/nodejs/tutorials/getting-started/)\n\n    ![A browser window displaying the service hosted on Azure][completed-app]\n\n    > [AZURE.NOTE] If you receive an error stating that the provided subscription name doesn't exist in the imported publish profile, you must download and import the publishing profile for your subscription before deploying to Azure. See the **Deploying the Application to Azure** section of [Build and deploy a Node.js application to an Azure Cloud Service](https://www.windowsazure.com/develop/nodejs/tutorials/getting-started/)\n\nYour application is now running on Azure, and can relay chat\nmessages between different clients using Socket.IO.\n\n> [AZURE.NOTE] For simplicity, this sample is limited to chatting between users connected to the same instance. This means that if the cloud service creates two worker role instances, users will only be able to chat with others connected to the same worker role instance. To scale the application to work with multiple role instances, you could use a technology like Service Bus to share the Socket.IO store state across instances. For examples, see the Service Bus Queues and Topics usage samples in the [Azure SDK for Node.js GitHub repository](https://github.com/WindowsAzure/azure-sdk-for-node).\n\n##Next steps\n\nIn this tutorial you learned how to create a basic chat application hosted in an Azure Cloud Service. To learn how to host this application in an Azure Website, see [Build a Node.js Chat Application with Socket.IO on an Azure Web Site][chatwebsite].\n\n  [chatwebsite]: /develop/nodejs/tutorials/website-using-socketio/\n\n  [Azure SLA]: http://www.windowsazure.com/support/sla/\n  [Azure SDK for Node.js GitHub repository]: https://github.com/WindowsAzure/azure-sdk-for-node\n  [completed-app]: ./media/cloud-services-nodejs-chat-app-socketio/socketio-10.png\n  [Azure SDK for Node.js]: https://www.windowsazure.com/develop/nodejs/\n  [Node.js Web Application]: https://www.windowsazure.com/develop/nodejs/tutorials/getting-started/\n  [Socket.IO GitHub repository]: https://github.com/LearnBoost/socket.io/tree/0.9.14\n  [Azure Considerations]: #windowsazureconsiderations\n  [Hosting the Chat Example in a Worker Role]: #hostingthechatexampleinawebrole\n  [Summary and Next Steps]: #summary\n  [powershell-menu]: ./media/cloud-services-nodejs-chat-app-socketio/azure-powershell-start.png\n\n  [chat example]: https://github.com/LearnBoost/socket.io/tree/master/examples/chat\n  [chat-example-view]: ./media/cloud-services-nodejs-chat-app-socketio/socketio-22.png\n  \n  \n  [chat-contents]: ./media/cloud-services-nodejs-chat-app-socketio/socketio-5.png\n  [The-output-of-the-npm-install-command]: ./media/cloud-services-nodejs-chat-app-socketio/socketio-7.png\n  [The output of the Publish-AzureService command]: ./media/cloud-services-nodejs-chat-app-socketio/socketio-9.png\n  \n \n\ntest\n"
}