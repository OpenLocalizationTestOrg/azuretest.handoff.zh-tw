{
  "nodes": [
    {
      "content": "In Visual Studio <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, expand the <bpt id=\"p2\">**</bpt>Controllers<ept id=\"p2\">**</ept> folder in the mobile backend project.",
      "pos": [
        3,
        107
      ]
    },
    {
      "content": "Open <bpt id=\"p1\">**</bpt>TodoItemController.cs<ept id=\"p1\">**</ept>.",
      "pos": [
        108,
        139
      ]
    },
    {
      "content": "At the top of the file, add the following <ph id=\"ph1\">`using`</ph> statements:",
      "pos": [
        140,
        201
      ]
    },
    {
      "pos": [
        317,
        375
      ],
      "content": "Replace the <ph id=\"ph1\">`PostTodoItem`</ph> method with the following code:"
    }
  ],
  "content": "1. In Visual Studio **Solution Explorer**, expand the **Controllers** folder in the mobile backend project. Open **TodoItemController.cs**. At the top of the file, add the following `using` statements:\n\n        using System.Collections.Generic;        \n        using Microsoft.Azure.Mobile.Server.Notifications;\n\n\n2. Replace the `PostTodoItem` method with the following code:  \n        \n        public async Task<IHttpActionResult> PostTodoItem(TodoItem item)\n        {\n            TodoItem current = await InsertAsync(item);\n\n            Dictionary<string, string> data = new Dictionary<string, string>()\n            {\n                { \"message\", item.Text}\n            };\n\n            HttpConfiguration config = this.Configuration;\n\n            GooglePushMessage message = new GooglePushMessage(data, System.TimeSpan.FromHours(1));\n\n            try\n            {\n                var client = new PushClient(config);\n                var result = await client.SendAsync(message);\n\n                ServiceSettingsDictionary settings = config.GetServiceSettingsProvider().GetServiceSettings();\n                config.Services.GetTraceWriter().Info(result.State.ToString());\n            }\n            catch (System.Exception ex)\n            {\n                config.Services.GetTraceWriter().Error(ex.Message, null, \"Push.SendAsync Error\");\n            }\n\n            return CreatedAtRoute(\"Tables\", new { id = current.Id }, current);\n        }\n\n"
}