{
  "nodes": [
    {
      "content": "Using the Docker VM Extension for Linux on Azure",
      "pos": [
        27,
        75
      ]
    },
    {
      "content": "Describes Docker and the Azure Virtual Machines extensions, and shows how to programmatically create Virtual Machines on Azure that are docker hosts from the command line using the Azure CLI.",
      "pos": [
        94,
        285
      ]
    },
    {
      "content": "Using the Docker VM Extension with the Azure Portal",
      "pos": [
        629,
        680
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Docker<ept id=\"p1\">](https://www.docker.com/)</ept> is one of the most popular virtualization approaches that uses <bpt id=\"p2\">[</bpt>Linux containers<ept id=\"p2\">](http://en.wikipedia.org/wiki/LXC)</ept> rather than virtual machines as a way of isolating data and computing on shared resources.",
      "pos": [
        682,
        922
      ]
    },
    {
      "content": "You can use the Docker VM extension managed by <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure Linux Agent]</ept> to create a Docker VM that hosts any number of containers for your applications on Azure.",
      "pos": [
        923,
        1079
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> This topic describes how to create a Docker VM from the Azure Portal.",
      "pos": [
        1083,
        1165
      ]
    },
    {
      "content": "To see how to create a Docker VM at the command line, see <bpt id=\"p1\">[</bpt><ept id=\"p1\">How to use the Docker VM Extension from the Azure Command-line Interface (Azure CLI)]</ept>.",
      "pos": [
        1166,
        1311
      ]
    },
    {
      "content": "To see a high-level discussion of containers and their advantages, see the <bpt id=\"p1\">[</bpt>Docker High Level Whiteboard<ept id=\"p1\">](http://channel9.msdn.com/Blogs/Regular-IT-Guy/Docker-High-Level-Whiteboard)</ept>.",
      "pos": [
        1312,
        1494
      ]
    },
    {
      "content": "Create a new VM from the Image Gallery",
      "pos": [
        1499,
        1537
      ]
    },
    {
      "content": "The first step requires an Azure VM from a Linux image that supports the Docker VM Extension, using an Ubuntu 14.04 LTS image from the Image Gallery as an example server image and Ubuntu 14.04 Desktop as a client.",
      "pos": [
        1538,
        1751
      ]
    },
    {
      "content": "In the portal, click <bpt id=\"p1\">**</bpt>+ New<ept id=\"p1\">**</ept> in the bottom left corner to create a new VM instance and select an Ubuntu 14.04 LTS image from the selections available or from the complete Image Gallery, as shown below.",
      "pos": [
        1752,
        1955
      ]
    },
    {
      "pos": [
        1959,
        2071
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Currently, only Ubuntu 14.04 LTS images more recent than July 2014 support the Docker VM Extension."
    },
    {
      "content": "Create a new Ubuntu Image",
      "pos": [
        2075,
        2100
      ]
    },
    {
      "content": "Create Docker Certificates",
      "pos": [
        2168,
        2194
      ]
    },
    {
      "content": "After the VM has been created, ensure that Docker is installed on your client computer.",
      "pos": [
        2196,
        2283
      ]
    },
    {
      "content": "(For details, see <bpt id=\"p1\">[</bpt>Docker installation instructions<ept id=\"p1\">](https://docs.docker.com/installation/#installation)</ept>.)",
      "pos": [
        2284,
        2390
      ]
    },
    {
      "pos": [
        2392,
        2567
      ],
      "content": "Create the certificate and key files for Docker communication according to <bpt id=\"p1\">[</bpt><ept id=\"p1\">Running Docker with https]</ept> and place them in the <bpt id=\"p2\">**</bpt><ph id=\"ph1\">`~/.docker`</ph><ept id=\"p2\">**</ept> directory on your client computer."
    },
    {
      "pos": [
        2571,
        2677
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The Docker VM Extension in the portal currently requires credentials that are base64 encoded."
    },
    {
      "content": "At the command line, use <bpt id=\"p1\">**</bpt><ph id=\"ph1\">`base64`</ph><ept id=\"p1\">**</ept> or another favorite encoding tool to create base64-encoded topics.",
      "pos": [
        2679,
        2783
      ]
    },
    {
      "content": "Doing this with a simple set of certificate and key files might look similar to this:",
      "pos": [
        2784,
        2869
      ]
    },
    {
      "content": "Add the Docker VM Extension",
      "pos": [
        3262,
        3289
      ]
    },
    {
      "pos": [
        3290,
        3446
      ],
      "content": "To add the Docker VM Extension, locate the VM instance you created and scroll down to <bpt id=\"p1\">**</bpt>Extensions<ept id=\"p1\">**</ept> and click it to bring up VM Extensions, as shown below."
    },
    {
      "pos": [
        3449,
        3547
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> This functionality is supported in the preview portal only: https://portal.azure.com/"
    },
    {
      "content": "Add an Extension",
      "pos": [
        3622,
        3638
      ]
    },
    {
      "pos": [
        3639,
        3720
      ],
      "content": "Click the <bpt id=\"p1\">**</bpt>+ Add<ept id=\"p1\">**</ept> to display the possible VM Extensions you can add to this VM."
    },
    {
      "content": "Select the Docker VM Extension",
      "pos": [
        3788,
        3818
      ]
    },
    {
      "pos": [
        3819,
        3987
      ],
      "content": "Choose the Docker VM Extension, which brings up the Docker description and important links, and then click <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept> at the bottom to begin the installation procedure."
    },
    {
      "content": "Add your Certificate and Key Files:",
      "pos": [
        4140,
        4175
      ]
    },
    {
      "content": "In the form fields, enter the base64-encoded versions of your CA Certificate, your Server Certificate, and your Server Key, as shown in the following graphic.",
      "pos": [
        4177,
        4335
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Note that (as in the preceding image) the 2376 is filled in by default.",
      "pos": [
        4416,
        4500
      ]
    },
    {
      "content": "You can enter any endpoint here, but the next step will be to open up the matching endpoint.",
      "pos": [
        4501,
        4593
      ]
    },
    {
      "content": "If you change the default, make sure to open up the matching endpoint in the next step.",
      "pos": [
        4594,
        4681
      ]
    },
    {
      "content": "Add the Docker Communication Endpoint",
      "pos": [
        4686,
        4723
      ]
    },
    {
      "pos": [
        4724,
        4864
      ],
      "content": "When viewing your VM in the resource group you've created, scroll down to click <bpt id=\"p1\">**</bpt>Endpoints<ept id=\"p1\">**</ept> to view the endpoints on the VM as shown here."
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>+ Add<ept id=\"p1\">**</ept> to add another endpoint, and in the default case, enter a name for the endpoint (in this example, <bpt id=\"p2\">**</bpt>docker<ept id=\"p2\">**</ept>), and 2376 for both private and public ports.",
      "pos": [
        4935,
        5105
      ]
    },
    {
      "content": "Leave the protocol value showing <bpt id=\"p1\">**</bpt>TCP<ept id=\"p1\">**</ept>, and Click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept> to create the endpoint.",
      "pos": [
        5106,
        5188
      ]
    },
    {
      "content": "Test your Docker Client and Azure Docker Host",
      "pos": [
        5273,
        5318
      ]
    },
    {
      "pos": [
        5319,
        5553
      ],
      "content": "Locate and copy the name of your VM's domain, and at the command line of your client computer, type <ph id=\"ph1\">`docker --tls -H tcp://`</ph><bpt id=\"p1\">*</bpt>dockerextension<ept id=\"p1\">*</ept><ph id=\"ph2\">`.cloudapp.net:2376 info`</ph> (where <bpt id=\"p2\">*</bpt>dockerextension<ept id=\"p2\">*</ept> is replaced by the subdomain for your VM)."
    },
    {
      "content": "The result should appear similar to this:",
      "pos": [
        5555,
        5596
      ]
    },
    {
      "content": "Once you complete the above steps, you now have a fully functional Docker host running on an Azure VM, configured to be connected to remotely from other clients.",
      "pos": [
        6165,
        6326
      ]
    },
    {
      "content": "Next steps\n\nYou are ready to go to the [Docker User Guide] and use your Docker VM.",
      "pos": [
        6447,
        6529
      ]
    },
    {
      "content": "If you want to automate creating Docker hosts on Azure VMs through command line interface, see [How to use the Docker VM Extension from the Azure Command-line Interface (Azure CLI)]",
      "pos": [
        6530,
        6711
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Using the Docker VM Extension for Linux on Azure\"\n    description=\"Describes Docker and the Azure Virtual Machines extensions, and shows how to programmatically create Virtual Machines on Azure that are docker hosts from the command line using the Azure CLI.\"\n    services=\"virtual-machines\"\n    documentationCenter=\"\"\n    authors=\"squillace\"\n    manager=\"timlt\"\n    editor=\"tysonn\"/>\n\n<tags\n    ms.service=\"virtual-machines\"\n    ms.devlang=\"multiple\"\n    ms.topic=\"article\"\n    ms.tgt_pltfrm=\"vm-linux\"\n    ms.workload=\"infrastructure-services\"\n    ms.date=\"05/25/2015\"\n    ms.author=\"rasquill\"/>\n\n\n# Using the Docker VM Extension with the Azure Portal\n\n[Docker](https://www.docker.com/) is one of the most popular virtualization approaches that uses [Linux containers](http://en.wikipedia.org/wiki/LXC) rather than virtual machines as a way of isolating data and computing on shared resources. You can use the Docker VM extension managed by [Azure Linux Agent] to create a Docker VM that hosts any number of containers for your applications on Azure.\n\n> [AZURE.NOTE] This topic describes how to create a Docker VM from the Azure Portal. To see how to create a Docker VM at the command line, see [How to use the Docker VM Extension from the Azure Command-line Interface (Azure CLI)]. To see a high-level discussion of containers and their advantages, see the [Docker High Level Whiteboard](http://channel9.msdn.com/Blogs/Regular-IT-Guy/Docker-High-Level-Whiteboard).\n\n## Create a new VM from the Image Gallery\nThe first step requires an Azure VM from a Linux image that supports the Docker VM Extension, using an Ubuntu 14.04 LTS image from the Image Gallery as an example server image and Ubuntu 14.04 Desktop as a client. In the portal, click **+ New** in the bottom left corner to create a new VM instance and select an Ubuntu 14.04 LTS image from the selections available or from the complete Image Gallery, as shown below.\n\n> [AZURE.NOTE] Currently, only Ubuntu 14.04 LTS images more recent than July 2014 support the Docker VM Extension.\n\n![Create a new Ubuntu Image](./media/virtual-machines-docker-with-portal/ChooseUbuntu.png)\n\n## Create Docker Certificates\n\nAfter the VM has been created, ensure that Docker is installed on your client computer. (For details, see [Docker installation instructions](https://docs.docker.com/installation/#installation).)\n\nCreate the certificate and key files for Docker communication according to [Running Docker with https] and place them in the **`~/.docker`** directory on your client computer.\n\n> [AZURE.NOTE] The Docker VM Extension in the portal currently requires credentials that are base64 encoded.\n\nAt the command line, use **`base64`** or another favorite encoding tool to create base64-encoded topics. Doing this with a simple set of certificate and key files might look similar to this:\n\n```\n ~/.docker$ l\n ca-key.pem  ca.pem  cert.pem  key.pem  server-cert.pem  server-key.pem\n ~/.docker$ base64 ca.pem > ca64.pem\n ~/.docker$ base64 server-cert.pem > server-cert64.pem\n ~/.docker$ base64 server-key.pem > server-key64.pem\n ~/.docker$ l\n ca64.pem    ca.pem    key.pem            server-cert.pem   server-key.pem\n ca-key.pem  cert.pem  server-cert64.pem  server-key64.pem\n```\n\n## Add the Docker VM Extension\nTo add the Docker VM Extension, locate the VM instance you created and scroll down to **Extensions** and click it to bring up VM Extensions, as shown below.\n> [AZURE.NOTE] This functionality is supported in the preview portal only: https://portal.azure.com/\n\n![](./media/virtual-machines-docker-with-portal/ClickExtensions.png)\n### Add an Extension\nClick the **+ Add** to display the possible VM Extensions you can add to this VM.\n\n![](./media/virtual-machines-docker-with-portal/ClickAdd.png)\n### Select the Docker VM Extension\nChoose the Docker VM Extension, which brings up the Docker description and important links, and then click **Create** at the bottom to begin the installation procedure.\n\n![](./media/virtual-machines-docker-with-portal/ChooseDockerExtension.png)\n\n![](./media/virtual-machines-docker-with-portal/CreateButtonFocus.png)\n### Add your Certificate and Key Files:\n\nIn the form fields, enter the base64-encoded versions of your CA Certificate, your Server Certificate, and your Server Key, as shown in the following graphic.\n\n![](./media/virtual-machines-docker-with-portal/AddExtensionFormFilled.png)\n\n> [AZURE.NOTE] Note that (as in the preceding image) the 2376 is filled in by default. You can enter any endpoint here, but the next step will be to open up the matching endpoint. If you change the default, make sure to open up the matching endpoint in the next step.\n\n## Add the Docker Communication Endpoint\nWhen viewing your VM in the resource group you've created, scroll down to click **Endpoints** to view the endpoints on the VM as shown here.\n\n![](./media/virtual-machines-docker-with-portal/AddingEndpoint.png)\n\nClick **+ Add** to add another endpoint, and in the default case, enter a name for the endpoint (in this example, **docker**), and 2376 for both private and public ports. Leave the protocol value showing **TCP**, and Click **OK** to create the endpoint.\n\n![](./media/virtual-machines-docker-with-portal/AddEndpointFormFilledOut.png)\n\n\n## Test your Docker Client and Azure Docker Host\nLocate and copy the name of your VM's domain, and at the command line of your client computer, type `docker --tls -H tcp://`*dockerextension*`.cloudapp.net:2376 info` (where *dockerextension* is replaced by the subdomain for your VM).\n\nThe result should appear similar to this:\n\n```\n$ docker --tls -H tcp://dockerextension.cloudapp.net:2376 info\nContainers: 0\nImages: 0\nStorage Driver: devicemapper\n Pool Name: docker-8:1-131214-pool\n Pool Blocksize: 65.54 kB\n Data file: /var/lib/docker/devicemapper/devicemapper/data\n Metadata file: /var/lib/docker/devicemapper/devicemapper/metadata\n Data Space Used: 305.7 MB\n Data Space Total: 107.4 GB\n Metadata Space Used: 729.1 kB\n Metadata Space Total: 2.147 GB\n Library Version: 1.02.82-git (2013-10-04)\nExecution Driver: native-0.2\nKernel Version: 3.13.0-36-generic\nWARNING: No swap limit support\n```\n\nOnce you complete the above steps, you now have a fully functional Docker host running on an Azure VM, configured to be connected to remotely from other clients.\n\n<!--Every topic should have next steps and links to the next logical set of content to keep the customer engaged-->\n## Next steps\n\nYou are ready to go to the [Docker User Guide] and use your Docker VM. If you want to automate creating Docker hosts on Azure VMs through command line interface, see [How to use the Docker VM Extension from the Azure Command-line Interface (Azure CLI)]\n\n<!--Anchors-->\n[Create a new VM from the Image Gallery]: #createvm\n[Create Docker Certificates]: #dockercerts\n[Add the Docker VM Extension]: #adddockerextension\n[Test Docker Client and Azure Docker Host]: #testclientandserver\n[Next steps]: #next-steps\n\n<!--Image references-->\n[StartingPoint]: ./media/StartingPoint.png\n[StartingPoint]: ./media/StartingPoint.png\n[StartingPoint]: ./media/StartingPoint.png\n[StartingPoint]: ./media/StartingPoint.png\n[StartingPoint]: ./media/StartingPoint.png\n[StartingPoint]: ./media/StartingPoint.png\n[StartingPoint]: ./media/StartingPoint.png\n[StartingPoint]: ./media/StartingPoint.png\n[6]: ./media/markdown-template-for-new-articles/pretty49.png\n[7]: ./media/markdown-template-for-new-articles/channel-9.png\n\n\n<!--Link references-->\n[How to use the Docker VM Extension from the Azure Command-line Interface (Azure CLI)]: http://azure.microsoft.com/documentation/articles/virtual-machines-docker-with-xplat-cli/\n[Azure Linux Agent]: virtual-machines-linux-agent-user-guide.md\n[Link 3 to another azure.microsoft.com documentation topic]: ../storage-whatis-account.md\n\n[Running Docker with https]: http://docs.docker.com/articles/https/\n[Docker User Guide]: https://docs.docker.com/userguide/\n "
}