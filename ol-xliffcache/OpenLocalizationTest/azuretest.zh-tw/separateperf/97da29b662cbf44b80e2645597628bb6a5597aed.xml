{
  "nodes": [
    {
      "content": "Hybrid on-premises/cloud application (.NET) | Microsoft Azure",
      "pos": [
        27,
        88
      ]
    },
    {
      "content": "Learn how to create a .NET on-premises/cloud hybrid application using the Azure Service Bus relay.",
      "pos": [
        107,
        205
      ]
    },
    {
      "content": ".NET on-premises/cloud hybrid application using Azure Service Bus relay",
      "pos": [
        519,
        590
      ]
    },
    {
      "content": "Introduction",
      "pos": [
        595,
        607
      ]
    },
    {
      "content": "Developing hybrid cloud applications with Microsoft Azure is easy using",
      "pos": [
        609,
        680
      ]
    },
    {
      "content": "Visual Studio 2013 and the free Azure SDK for .NET.",
      "pos": [
        681,
        732
      ]
    },
    {
      "content": "This article",
      "pos": [
        733,
        745
      ]
    },
    {
      "content": "assumes you have no prior experience using Azure.",
      "pos": [
        746,
        795
      ]
    },
    {
      "content": "In less than",
      "pos": [
        796,
        808
      ]
    },
    {
      "content": "30 minutes, you will have an application that uses multiple Azure resources up and running in the cloud.",
      "pos": [
        809,
        913
      ]
    },
    {
      "content": "You will learn:",
      "pos": [
        915,
        930
      ]
    },
    {
      "pos": [
        936,
        1021
      ],
      "content": "How to create or adapt an existing web service for consumption by a\nweb solution.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "How to create or adapt an existing web service for consumption by a",
          "pos": [
            0,
            67
          ]
        },
        {
          "content": "web solution.",
          "pos": [
            68,
            81
          ]
        }
      ]
    },
    {
      "pos": [
        1026,
        1147
      ],
      "content": "How to use the Azure Service Bus relay to share data between\nan Azure application and a web service hosted elsewhere.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "How to use the Azure Service Bus relay to share data between",
          "pos": [
            0,
            60
          ]
        },
        {
          "content": "an Azure application and a web service hosted elsewhere.",
          "pos": [
            61,
            117
          ]
        }
      ]
    },
    {
      "content": "How the Service Bus relay helps with hybrid solutions",
      "pos": [
        1230,
        1283
      ]
    },
    {
      "content": "Business solutions are typically composed of a combination of custom",
      "pos": [
        1285,
        1353
      ]
    },
    {
      "content": "code written to tackle new and unique business requirements and existing",
      "pos": [
        1354,
        1426
      ]
    },
    {
      "content": "functionality provided by solutions and systems that are already in",
      "pos": [
        1427,
        1494
      ]
    },
    {
      "content": "place.",
      "pos": [
        1495,
        1501
      ]
    },
    {
      "content": "Solution architects are starting to use the cloud for easier handling of",
      "pos": [
        1503,
        1575
      ]
    },
    {
      "content": "scale requirements and lower operational costs.",
      "pos": [
        1576,
        1623
      ]
    },
    {
      "content": "In doing so, they find",
      "pos": [
        1624,
        1646
      ]
    },
    {
      "content": "that existing service assets they'd like to leverage as building blocks",
      "pos": [
        1647,
        1718
      ]
    },
    {
      "content": "for their solutions are inside the corporate firewall and out of easy",
      "pos": [
        1719,
        1788
      ]
    },
    {
      "content": "reach for access by the cloud solution.",
      "pos": [
        1789,
        1828
      ]
    },
    {
      "content": "Many internal services are not",
      "pos": [
        1829,
        1859
      ]
    },
    {
      "content": "built or hosted in a way that they can be easily exposed at the",
      "pos": [
        1860,
        1923
      ]
    },
    {
      "content": "corporate network edge.",
      "pos": [
        1924,
        1947
      ]
    },
    {
      "content": "The Service Bus relay is designed for the use-case of taking existing",
      "pos": [
        1949,
        2018
      ]
    },
    {
      "content": "Windows Communication Foundation (WCF) web services and making those",
      "pos": [
        2019,
        2087
      ]
    },
    {
      "content": "services securely accessible to solutions that reside outside the",
      "pos": [
        2088,
        2153
      ]
    },
    {
      "content": "corporate perimeter without requiring intrusive changes to the corporate",
      "pos": [
        2154,
        2226
      ]
    },
    {
      "content": "network infrastructure.",
      "pos": [
        2227,
        2250
      ]
    },
    {
      "content": "Such Service Bus relay services are still hosted",
      "pos": [
        2251,
        2299
      ]
    },
    {
      "content": "inside their existing environment, but they delegate listening for",
      "pos": [
        2300,
        2366
      ]
    },
    {
      "content": "incoming sessions and requests to the cloud-hosted Service Bus.",
      "pos": [
        2367,
        2430
      ]
    },
    {
      "content": "Service Bus also protects those services from unauthorized access by using <bpt id=\"p1\">[</bpt>Shared Access Signature<ept id=\"p1\">](https://msdn.microsoft.com/library/dn170478.aspx)</ept> (SAS) authentication.",
      "pos": [
        2431,
        2603
      ]
    },
    {
      "content": "Solution scenario",
      "pos": [
        2608,
        2625
      ]
    },
    {
      "content": "In this tutorial, you will create an ASP.NET MVC website that enables you to see a list of products on the product inventory page.",
      "pos": [
        2627,
        2757
      ]
    },
    {
      "content": "The tutorial assumes that you have product information in an existing",
      "pos": [
        2767,
        2836
      ]
    },
    {
      "content": "on-premises system, and uses the Service Bus relay to reach into that",
      "pos": [
        2837,
        2906
      ]
    },
    {
      "content": "system.",
      "pos": [
        2907,
        2914
      ]
    },
    {
      "content": "This is simulated by a web service that runs in a simple",
      "pos": [
        2915,
        2971
      ]
    },
    {
      "content": "console application and is backed by an in-memory set of products.",
      "pos": [
        2972,
        3038
      ]
    },
    {
      "content": "You",
      "pos": [
        3039,
        3042
      ]
    },
    {
      "content": "will be able to run this console application on your own computer and",
      "pos": [
        3043,
        3112
      ]
    },
    {
      "content": "deploy the web role into Azure.",
      "pos": [
        3113,
        3144
      ]
    },
    {
      "content": "By doing so, you will see how",
      "pos": [
        3145,
        3174
      ]
    },
    {
      "content": "the web role running in the Azure datacenter will indeed call",
      "pos": [
        3175,
        3236
      ]
    },
    {
      "content": "into your computer, even though your computer will almost certainly",
      "pos": [
        3237,
        3304
      ]
    },
    {
      "content": "reside behind at least one firewall and a network address translation",
      "pos": [
        3305,
        3374
      ]
    },
    {
      "content": "(NAT) layer.",
      "pos": [
        3375,
        3387
      ]
    },
    {
      "content": "The following is a screen shot of the start page of the completed web application.",
      "pos": [
        3389,
        3471
      ]
    },
    {
      "content": "Set up the development environment",
      "pos": [
        3484,
        3518
      ]
    },
    {
      "content": "Before you can begin developing your Azure application, get the tools and set up your development environment.",
      "pos": [
        3520,
        3630
      ]
    },
    {
      "pos": [
        3636,
        3692
      ],
      "content": "Install the Azure SDK for .NET at <bpt id=\"p1\">[</bpt>Get Tools and SDK<ept id=\"p1\">][]</ept>."
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Install the SDK<ept id=\"p1\">**</ept> for the version of Visual Studio you are using.",
      "pos": [
        3698,
        3771
      ]
    },
    {
      "content": "The steps in this tutorial use Visual Studio 2013.",
      "pos": [
        3772,
        3822
      ]
    },
    {
      "pos": [
        3841,
        3899
      ],
      "content": "When prompted to run or save the installer, click <bpt id=\"p1\">**</bpt>Run<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        3917,
        4004
      ],
      "content": "In the <bpt id=\"p1\">**</bpt>Web Platform Installer<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Install<ept id=\"p2\">**</ept> and proceed with the installation."
    },
    {
      "pos": [
        4022,
        4322
      ],
      "content": "Once the installation is complete, you will have everything\nnecessary to start to develop the app. The SDK includes tools that let you\neasily develop Azure applications in Visual Studio. If you\ndo not have Visual Studio installed, the SDK also installs the free\nVisual Studio Express.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Once the installation is complete, you will have everything",
          "pos": [
            0,
            59
          ]
        },
        {
          "content": "necessary to start to develop the app. The SDK includes tools that let you",
          "pos": [
            60,
            134
          ],
          "nodes": [
            {
              "content": "necessary to start to develop the app.",
              "pos": [
                0,
                38
              ]
            },
            {
              "content": "The SDK includes tools that let you",
              "pos": [
                39,
                74
              ]
            }
          ]
        },
        {
          "content": "easily develop Azure applications in Visual Studio. If you",
          "pos": [
            135,
            193
          ],
          "nodes": [
            {
              "content": "easily develop Azure applications in Visual Studio.",
              "pos": [
                0,
                51
              ]
            },
            {
              "content": "If you",
              "pos": [
                52,
                58
              ]
            }
          ]
        },
        {
          "content": "do not have Visual Studio installed, the SDK also installs the free",
          "pos": [
            194,
            261
          ]
        },
        {
          "content": "Visual Studio Express.",
          "pos": [
            262,
            284
          ]
        }
      ]
    },
    {
      "content": "Create a service namespace",
      "pos": [
        4327,
        4353
      ]
    },
    {
      "content": "To begin using Service Bus features in Azure, you must first create a service namespace.",
      "pos": [
        4355,
        4443
      ]
    },
    {
      "content": "A namespace provides a scoping container for addressing Service Bus resources within your application.",
      "pos": [
        4444,
        4546
      ]
    },
    {
      "pos": [
        4548,
        4743
      ],
      "content": "You can manage namespaces and Service Bus messaging entities using either the <bpt id=\"p1\">[</bpt>Azure portal<ept id=\"p1\">][]</ept> or the Visual Studio Server Explorer, but you can only create new namespaces from within the portal."
    },
    {
      "content": "To create a namespace using the portal:",
      "pos": [
        4749,
        4788
      ]
    },
    {
      "pos": [
        4794,
        4826
      ],
      "content": "Sign in to the <bpt id=\"p1\">[</bpt>Azure portal<ept id=\"p1\">][]</ept>."
    },
    {
      "pos": [
        4832,
        4907
      ],
      "content": "In the left navigation pane of the Azure portal, click\n**Service Bus**.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "In the left navigation pane of the Azure portal, click",
          "pos": [
            0,
            54
          ]
        },
        {
          "content": "<bpt id=\"p1\">**</bpt>Service Bus<ept id=\"p1\">**</ept>.",
          "pos": [
            55,
            71
          ]
        }
      ]
    },
    {
      "pos": [
        4913,
        4969
      ],
      "content": "In the lower pane of the Azure portal, click <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        4987,
        5131
      ],
      "content": "In the **Add a new namespace** dialog box, enter a namespace name.\nThe system immediately checks to see if the name is available.\n![][6]",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "In the <bpt id=\"p1\">**</bpt>Add a new namespace<ept id=\"p1\">**</ept> dialog box, enter a namespace name.",
          "pos": [
            0,
            66
          ]
        },
        {
          "content": "The system immediately checks to see if the name is available.",
          "pos": [
            67,
            129
          ]
        }
      ]
    },
    {
      "pos": [
        5137,
        5364
      ],
      "content": "After making sure the namespace name is available, choose the\ncountry or region in which your namespace should be hosted (make\nsure you use the same country/region in which you are deploying your\ncompute resources).",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "After making sure the namespace name is available, choose the",
          "pos": [
            0,
            61
          ]
        },
        {
          "content": "country or region in which your namespace should be hosted (make",
          "pos": [
            62,
            126
          ]
        },
        {
          "content": "sure you use the same country/region in which you are deploying your",
          "pos": [
            127,
            195
          ]
        },
        {
          "content": "compute resources).",
          "pos": [
            196,
            215
          ]
        }
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> Pick the <bpt id=\"p1\">*</bpt>same region<ept id=\"p1\">*</ept> that you intend to choose for",
      "pos": [
        5372,
        5442
      ]
    },
    {
      "content": "deploying your application.",
      "pos": [
        5447,
        5474
      ]
    },
    {
      "content": "This will give you the best performance.",
      "pos": [
        5475,
        5515
      ]
    },
    {
      "content": "Leave the other fields in the dialog box with their default values (<bpt id=\"p1\">**</bpt>Messaging<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Standard<ept id=\"p2\">**</ept> tier), then click the check mark.",
      "pos": [
        5521,
        5653
      ]
    },
    {
      "content": "The system now creates your namespace and enables it.",
      "pos": [
        5654,
        5707
      ]
    },
    {
      "content": "You might have to wait several minutes as the system provisions resources for your account.",
      "pos": [
        5708,
        5799
      ]
    },
    {
      "content": "The namespace you created will appear in the Azure portal, though it may take a moment to activate.",
      "pos": [
        5814,
        5913
      ]
    },
    {
      "content": "Wait until the status is <bpt id=\"p1\">**</bpt>Active<ept id=\"p1\">**</ept> before moving on.",
      "pos": [
        5914,
        5967
      ]
    },
    {
      "content": "Obtain the default management credentials for the namespace",
      "pos": [
        5972,
        6031
      ]
    },
    {
      "content": "In order to perform management operations on the new namespace, such as creating messaging entities, you must obtain credentials for the namespace.",
      "pos": [
        6033,
        6180
      ]
    },
    {
      "content": "In the main window, click the name of your service namespace.",
      "pos": [
        6186,
        6247
      ]
    },
    {
      "pos": [
        6266,
        6299
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Connection Information<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        6318,
        6431
      ],
      "content": "In the <bpt id=\"p1\">**</bpt>Access connection information<ept id=\"p1\">**</ept> pane, find the connection string that contains the SAS key and key name."
    },
    {
      "content": "Make a note of these credentials, or copy them to the clipboard.",
      "pos": [
        6450,
        6514
      ]
    },
    {
      "content": "Create an on-premises server",
      "pos": [
        6519,
        6547
      ]
    },
    {
      "content": "First, you will build a (mock) on-premises product catalog system.",
      "pos": [
        6549,
        6615
      ]
    },
    {
      "content": "It",
      "pos": [
        6616,
        6618
      ]
    },
    {
      "content": "will be fairly simple; you can see this as representing an actual",
      "pos": [
        6619,
        6684
      ]
    },
    {
      "content": "on-premises product catalog system with a complete service surface that",
      "pos": [
        6685,
        6756
      ]
    },
    {
      "content": "we're trying to integrate.",
      "pos": [
        6757,
        6783
      ]
    },
    {
      "content": "This project starts as a Visual Studio console application.",
      "pos": [
        6785,
        6844
      ]
    },
    {
      "content": "The",
      "pos": [
        6845,
        6848
      ]
    },
    {
      "content": "project uses the Service Bus NuGet package to include the service bus",
      "pos": [
        6849,
        6918
      ]
    },
    {
      "content": "libraries and configuration settings.",
      "pos": [
        6919,
        6956
      ]
    },
    {
      "content": "The NuGet Visual Studio extension",
      "pos": [
        6957,
        6990
      ]
    },
    {
      "content": "makes it easy to install and update libraries and tools in Visual Studio",
      "pos": [
        6991,
        7063
      ]
    },
    {
      "content": "and Visual Studio Express.",
      "pos": [
        7064,
        7090
      ]
    },
    {
      "content": "The Service Bus NuGet package is the easiest",
      "pos": [
        7091,
        7135
      ]
    },
    {
      "content": "way to get the Service Bus API and to configure your application with",
      "pos": [
        7136,
        7205
      ]
    },
    {
      "content": "all of the Service Bus dependencies.",
      "pos": [
        7206,
        7242
      ]
    },
    {
      "content": "For details about using NuGet and",
      "pos": [
        7243,
        7276
      ]
    },
    {
      "content": "the Service Bus package, see <bpt id=\"p1\">[</bpt>Using the NuGet Service Bus Package<ept id=\"p1\">][]</ept>.",
      "pos": [
        7277,
        7346
      ]
    },
    {
      "content": "Create the project",
      "pos": [
        7352,
        7370
      ]
    },
    {
      "pos": [
        7376,
        7674
      ],
      "content": "Using administrator privileges, start either Microsoft Visual\nStudio 2013 or Microsoft Visual Studio Express. To\nstart Visual Studio with administrator privileges, right-click\n**Microsoft Visual Studio 2013 (or Microsoft Visual Studio Express)** and then click **Run as administrator**.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Using administrator privileges, start either Microsoft Visual",
          "pos": [
            0,
            61
          ]
        },
        {
          "content": "Studio 2013 or Microsoft Visual Studio Express. To",
          "pos": [
            62,
            112
          ],
          "nodes": [
            {
              "content": "Studio 2013 or Microsoft Visual Studio Express.",
              "pos": [
                0,
                47
              ]
            },
            {
              "content": "To",
              "pos": [
                48,
                50
              ]
            }
          ]
        },
        {
          "content": "start Visual Studio with administrator privileges, right-click",
          "pos": [
            113,
            175
          ]
        },
        {
          "content": "<bpt id=\"p1\">**</bpt>Microsoft Visual Studio 2013 (or Microsoft Visual Studio Express)<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>Run as administrator<ept id=\"p2\">**</ept>.",
          "pos": [
            176,
            286
          ]
        }
      ]
    },
    {
      "pos": [
        7680,
        7766
      ],
      "content": "In Visual Studio, on the **File** menu, click **New**, and then\nclick **Project**.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "In Visual Studio, on the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, and then",
          "pos": [
            0,
            63
          ]
        },
        {
          "content": "click <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept>.",
          "pos": [
            64,
            82
          ]
        }
      ]
    },
    {
      "pos": [
        7785,
        7929
      ],
      "content": "From **Installed Templates**, under **Visual C#**, click **Console\nApplication**. In the **Name** box, type the name\n**ProductsServer**:",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "From **Installed Templates**, under **Visual C#**, click **Console\nApplication**. In the **Name** box, type the name",
          "pos": [
            0,
            116
          ],
          "nodes": [
            {
              "content": "From <bpt id=\"p1\">**</bpt>Installed Templates<ept id=\"p1\">**</ept>, under <bpt id=\"p2\">**</bpt>Visual C#<ept id=\"p2\">**</ept>, click <bpt id=\"p3\">**</bpt>Console\nApplication<ept id=\"p3\">**</ept>.",
              "pos": [
                0,
                81
              ]
            },
            {
              "content": "In the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box, type the name",
              "pos": [
                82,
                116
              ]
            }
          ]
        },
        {
          "content": "<bpt id=\"p1\">**</bpt>ProductsServer<ept id=\"p1\">**</ept>:",
          "pos": [
            117,
            136
          ]
        }
      ]
    },
    {
      "pos": [
        7948,
        8002
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to create the <bpt id=\"p2\">**</bpt>ProductsServer<ept id=\"p2\">**</ept> project."
    },
    {
      "pos": [
        8008,
        8096
      ],
      "content": "In Solution Explorer, right-click **ProductsServer**, and then\nclick **Properties**.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "In Solution Explorer, right-click <bpt id=\"p1\">**</bpt>ProductsServer<ept id=\"p1\">**</ept>, and then",
          "pos": [
            0,
            62
          ]
        },
        {
          "content": "click <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept>.",
          "pos": [
            63,
            84
          ]
        }
      ]
    },
    {
      "pos": [
        8102,
        8346
      ],
      "content": "Click the **Application** tab on the left, then ensure that **.NET\nFramework 4** or **.NET Framework 4.5** appears in the **Target framework** list. If not, select it from the list and then click **Yes** when prompted to reload the project.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab on the left, then ensure that <bpt id=\"p2\">**</bpt>.NET\nFramework 4<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>.NET Framework 4.5<ept id=\"p3\">**</ept> appears in the <bpt id=\"p4\">**</bpt>Target framework<ept id=\"p4\">**</ept> list.",
          "pos": [
            0,
            148
          ]
        },
        {
          "content": "If not, select it from the list and then click <bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept> when prompted to reload the project.",
          "pos": [
            149,
            240
          ]
        }
      ]
    },
    {
      "content": "If you have already installed the NuGet package manager for Visual Studio, skip to the next step.",
      "pos": [
        8365,
        8462
      ]
    },
    {
      "content": "Otherwise, visit <bpt id=\"p1\">[</bpt>NuGet<ept id=\"p1\">][]</ept> and click <bpt id=\"p2\">[</bpt>Install NuGet<ept id=\"p2\">](http://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c)</ept>.",
      "pos": [
        8463,
        8600
      ]
    },
    {
      "content": "Follow the prompts to install the NuGet package manager, then re-start Visual Studio.",
      "pos": [
        8601,
        8686
      ]
    },
    {
      "pos": [
        8692,
        8783
      ],
      "content": "In Solution Explorer, right-click **References**, then click\n**Manage NuGet Packages**.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "In Solution Explorer, right-click <bpt id=\"p1\">**</bpt>References<ept id=\"p1\">**</ept>, then click",
          "pos": [
            0,
            60
          ]
        },
        {
          "content": "<bpt id=\"p1\">**</bpt>Manage NuGet Packages<ept id=\"p1\">**</ept>.",
          "pos": [
            61,
            87
          ]
        }
      ]
    },
    {
      "pos": [
        8789,
        8854
      ],
      "content": "In the left column of the <bpt id=\"p1\">**</bpt>NuGet<ept id=\"p1\">**</ept> dialog box, click <bpt id=\"p2\">**</bpt>Online<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        8860,
        9075
      ],
      "content": "In the right-hand column, click the **Search** box, type \"**Service Bus**\" and then select the **Microsoft\nAzure Service Bus** item. Click **Install** to complete the\ninstallation, then close the dialog box.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "In the right-hand column, click the **Search** box, type \"**Service Bus**\" and then select the **Microsoft\nAzure Service Bus** item. Click **Install** to complete the",
          "pos": [
            0,
            166
          ],
          "nodes": [
            {
              "content": "In the right-hand column, click the <bpt id=\"p1\">**</bpt>Search<ept id=\"p1\">**</ept> box, type \"<bpt id=\"p2\">**</bpt>Service Bus<ept id=\"p2\">**</ept>\" and then select the <bpt id=\"p3\">**</bpt>Microsoft\nAzure Service Bus<ept id=\"p3\">**</ept> item.",
              "pos": [
                0,
                132
              ]
            },
            {
              "content": "Click <bpt id=\"p1\">**</bpt>Install<ept id=\"p1\">**</ept> to complete the",
              "pos": [
                133,
                166
              ]
            }
          ]
        },
        {
          "content": "installation, then close the dialog box.",
          "pos": [
            167,
            207
          ]
        }
      ]
    },
    {
      "content": "Note that the required client assemblies are now referenced.",
      "pos": [
        9094,
        9154
      ]
    },
    {
      "pos": [
        9160,
        9320
      ],
      "content": "Add a new class for your product contract. In Solution Explorer,\nright-click the **ProductsServer** project and click **Add**, and then click\n**Class**.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Add a new class for your product contract. In Solution Explorer,",
          "pos": [
            0,
            64
          ],
          "nodes": [
            {
              "content": "Add a new class for your product contract.",
              "pos": [
                0,
                42
              ]
            },
            {
              "content": "In Solution Explorer,",
              "pos": [
                43,
                64
              ]
            }
          ]
        },
        {
          "content": "right-click the <bpt id=\"p1\">**</bpt>ProductsServer<ept id=\"p1\">**</ept> project and click <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>, and then click",
          "pos": [
            65,
            141
          ]
        },
        {
          "content": "<bpt id=\"p1\">**</bpt>Class<ept id=\"p1\">**</ept>.",
          "pos": [
            142,
            152
          ]
        }
      ]
    },
    {
      "pos": [
        9339,
        9422
      ],
      "content": "In the **Name** box, type the name **ProductsContract.cs**. Then\nclick **Add**.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "In the **Name** box, type the name **ProductsContract.cs**. Then",
          "pos": [
            0,
            64
          ],
          "nodes": [
            {
              "content": "In the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box, type the name <bpt id=\"p2\">**</bpt>ProductsContract.cs<ept id=\"p2\">**</ept>.",
              "pos": [
                0,
                59
              ]
            },
            {
              "content": "Then",
              "pos": [
                60,
                64
              ]
            }
          ]
        },
        {
          "content": "click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.",
          "pos": [
            65,
            79
          ]
        }
      ]
    },
    {
      "pos": [
        9428,
        9561
      ],
      "content": "In **ProductsContract.cs**, replace the namespace definition with\nthe following code, which defines the contract for the service.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "In <bpt id=\"p1\">**</bpt>ProductsContract.cs<ept id=\"p1\">**</ept>, replace the namespace definition with",
          "pos": [
            0,
            65
          ]
        },
        {
          "content": "the following code, which defines the contract for the service.",
          "pos": [
            66,
            129
          ]
        }
      ]
    },
    {
      "pos": [
        10509,
        10637
      ],
      "content": "In Program.cs, replace the namespace definition with the following\ncode, which adds the profile service and the host for it.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "In Program.cs, replace the namespace definition with the following",
          "pos": [
            0,
            66
          ]
        },
        {
          "content": "code, which adds the profile service and the host for it.",
          "pos": [
            67,
            124
          ]
        }
      ]
    },
    {
      "pos": [
        12468,
        12830
      ],
      "content": "In Solution Explorer, double-click the **App.config** file to\nopen it in the Visual Studio editor. Replace the contents of\n**&lt;system.ServiceModel&gt;** with the following XML code. Be sure to\nreplace *yourServiceNamespace* with the name of your service\nnamespace, and *yourKey* with the SAS key you retrieved earlier\nfrom the Azure portal:",
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "In Solution Explorer, double-click the <bpt id=\"p1\">**</bpt>App.config<ept id=\"p1\">**</ept> file to",
          "pos": [
            0,
            61
          ]
        },
        {
          "content": "open it in the Visual Studio editor. Replace the contents of",
          "pos": [
            62,
            122
          ],
          "nodes": [
            {
              "content": "open it in the Visual Studio editor.",
              "pos": [
                0,
                36
              ]
            },
            {
              "content": "Replace the contents of",
              "pos": [
                37,
                60
              ]
            }
          ]
        },
        {
          "content": "**&lt;system.ServiceModel&gt;** with the following XML code. Be sure to",
          "pos": [
            123,
            194
          ],
          "nodes": [
            {
              "content": "<bpt id=\"p1\">**</bpt>&amp;lt;system.ServiceModel&amp;gt;<ept id=\"p1\">**</ept> with the following XML code.",
              "pos": [
                0,
                60
              ]
            },
            {
              "content": "Be sure to",
              "pos": [
                61,
                71
              ]
            }
          ]
        },
        {
          "content": "replace <bpt id=\"p1\">*</bpt>yourServiceNamespace<ept id=\"p1\">*</ept> with the name of your service",
          "pos": [
            195,
            255
          ]
        },
        {
          "content": "namespace, and <bpt id=\"p1\">*</bpt>yourKey<ept id=\"p1\">*</ept> with the SAS key you retrieved earlier",
          "pos": [
            256,
            319
          ]
        },
        {
          "content": "from the Azure portal:",
          "pos": [
            320,
            342
          ]
        }
      ]
    },
    {
      "pos": [
        14318,
        14448
      ],
      "content": "Press F6 or from the <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Build Solution<ept id=\"p2\">**</ept> to build the application to verify the accuracy of your work so far."
    },
    {
      "content": "Create an ASP.NET MVC application",
      "pos": [
        14453,
        14486
      ]
    },
    {
      "content": "In this section you will build a simple ASP.NET application that displays data retrieved from your product service.",
      "pos": [
        14488,
        14603
      ]
    },
    {
      "content": "Create the project",
      "pos": [
        14609,
        14627
      ]
    },
    {
      "pos": [
        14633,
        15038
      ],
      "content": "Ensure that Visual Studio is running with administrator privileges. If not, to\nstart Visual Studio with administrator privileges, right-click\n**Microsoft Visual Studio 2013 (or Microsoft Visual Studio Express)** and then click **Run as administrator**. The Microsoft Azure compute emulator, discussed later in this article, requires that\nVisual Studio be started with administrator privileges.",
      "leadings": [
        "",
        "    ",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Ensure that Visual Studio is running with administrator privileges. If not, to",
          "pos": [
            0,
            78
          ],
          "nodes": [
            {
              "content": "Ensure that Visual Studio is running with administrator privileges.",
              "pos": [
                0,
                67
              ]
            },
            {
              "content": "If not, to",
              "pos": [
                68,
                78
              ]
            }
          ]
        },
        {
          "content": "start Visual Studio with administrator privileges, right-click",
          "pos": [
            79,
            141
          ]
        },
        {
          "content": "**Microsoft Visual Studio 2013 (or Microsoft Visual Studio Express)** and then click **Run as administrator**. The Microsoft Azure compute emulator, discussed later in this article, requires that",
          "pos": [
            142,
            337
          ],
          "nodes": [
            {
              "content": "<bpt id=\"p1\">**</bpt>Microsoft Visual Studio 2013 (or Microsoft Visual Studio Express)<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>Run as administrator<ept id=\"p2\">**</ept>.",
              "pos": [
                0,
                110
              ]
            },
            {
              "content": "The Microsoft Azure compute emulator, discussed later in this article, requires that",
              "pos": [
                111,
                195
              ]
            }
          ]
        },
        {
          "content": "Visual Studio be started with administrator privileges.",
          "pos": [
            338,
            393
          ]
        }
      ]
    },
    {
      "pos": [
        15044,
        15130
      ],
      "content": "In Visual Studio, on the **File** menu, click **New**, and then\nclick **Project**.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "In Visual Studio, on the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, and then",
          "pos": [
            0,
            63
          ]
        },
        {
          "content": "click <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept>.",
          "pos": [
            64,
            82
          ]
        }
      ]
    },
    {
      "pos": [
        15136,
        15281
      ],
      "content": "From **Installed Templates**, under **Visual C#**, click **ASP.NET Web Application**. Name the project **ProductsPortal**. Then\nclick **OK**.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "From **Installed Templates**, under **Visual C#**, click **ASP.NET Web Application**. Name the project **ProductsPortal**. Then",
          "pos": [
            0,
            127
          ],
          "nodes": [
            {
              "content": "From <bpt id=\"p1\">**</bpt>Installed Templates<ept id=\"p1\">**</ept>, under <bpt id=\"p2\">**</bpt>Visual C#<ept id=\"p2\">**</ept>, click <bpt id=\"p3\">**</bpt>ASP.NET Web Application<ept id=\"p3\">**</ept>.",
              "pos": [
                0,
                85
              ]
            },
            {
              "content": "Name the project <bpt id=\"p1\">**</bpt>ProductsPortal<ept id=\"p1\">**</ept>.",
              "pos": [
                86,
                122
              ]
            },
            {
              "content": "Then",
              "pos": [
                123,
                127
              ]
            }
          ]
        },
        {
          "content": "click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.",
          "pos": [
            128,
            141
          ]
        }
      ]
    },
    {
      "pos": [
        15300,
        15378
      ],
      "content": "From the **Select a template** list, click **MVC**,\nand then click **OK**.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "From the <bpt id=\"p1\">**</bpt>Select a template<ept id=\"p1\">**</ept> list, click <bpt id=\"p2\">**</bpt>MVC<ept id=\"p2\">**</ept>,",
          "pos": [
            0,
            51
          ]
        },
        {
          "content": "and then click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.",
          "pos": [
            52,
            74
          ]
        }
      ]
    },
    {
      "pos": [
        15397,
        15566
      ],
      "content": "In Solution Explorer, right click **Models** and then click **Add**,\nthen click **Class**. In the **Name** box, type the name\n**Product.cs**. Then click **Add**.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "In Solution Explorer, right click <bpt id=\"p1\">**</bpt>Models<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>,",
          "pos": [
            0,
            68
          ]
        },
        {
          "content": "then click **Class**. In the **Name** box, type the name",
          "pos": [
            69,
            125
          ],
          "nodes": [
            {
              "content": "then click <bpt id=\"p1\">**</bpt>Class<ept id=\"p1\">**</ept>.",
              "pos": [
                0,
                21
              ]
            },
            {
              "content": "In the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box, type the name",
              "pos": [
                22,
                56
              ]
            }
          ]
        },
        {
          "content": "**Product.cs**. Then click **Add**.",
          "pos": [
            126,
            161
          ],
          "nodes": [
            {
              "content": "<bpt id=\"p1\">**</bpt>Product.cs<ept id=\"p1\">**</ept>.",
              "pos": [
                0,
                15
              ]
            },
            {
              "content": "Then click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.",
              "pos": [
                16,
                35
              ]
            }
          ]
        }
      ]
    },
    {
      "content": "Modify the web application",
      "pos": [
        15585,
        15611
      ]
    },
    {
      "pos": [
        15617,
        15728
      ],
      "content": "In the Product.cs file in Visual Studio, replace the existing\nnamespace definition with the following code.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "In the Product.cs file in Visual Studio, replace the existing",
          "pos": [
            0,
            61
          ]
        },
        {
          "content": "namespace definition with the following code.",
          "pos": [
            62,
            107
          ]
        }
      ]
    },
    {
      "pos": [
        16060,
        16178
      ],
      "content": "In the HomeController.cs file in Visual Studio, replace the existing\nnamespace definition with the following code.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "In the HomeController.cs file in Visual Studio, replace the existing",
          "pos": [
            0,
            68
          ]
        },
        {
          "content": "namespace definition with the following code.",
          "pos": [
            69,
            114
          ]
        }
      ]
    },
    {
      "content": "In Solution Explorer, expand the Views\\Shared folder.",
      "pos": [
        16786,
        16839
      ]
    },
    {
      "pos": [
        16858,
        16929
      ],
      "content": "Double-click <bpt id=\"p1\">**</bpt>_Layout.cshtml<ept id=\"p1\">**</ept> to open it in the Visual Studio editor."
    },
    {
      "pos": [
        16935,
        17014
      ],
      "content": "Change all occurrences of <bpt id=\"p1\">**</bpt>My ASP.NET Application<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>LITWARE's Products<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Remove the <bpt id=\"p1\">**</bpt>Home<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>About<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>Contact<ept id=\"p3\">**</ept> links.",
      "pos": [
        17019,
        17073
      ]
    },
    {
      "content": "In the following example, delete the highlighted code.",
      "pos": [
        17074,
        17128
      ]
    },
    {
      "content": "In Solution Explorer, expand the Views\\Home folder:",
      "pos": [
        17147,
        17198
      ]
    },
    {
      "pos": [
        17217,
        17355
      ],
      "content": "Double-click **Index.cshtml** to open it in the Visual Studio editor.\nReplace the entire contents of the file with the following code.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Double-click <bpt id=\"p1\">**</bpt>Index.cshtml<ept id=\"p1\">**</ept> to open it in the Visual Studio editor.",
          "pos": [
            0,
            69
          ]
        },
        {
          "content": "Replace the entire contents of the file with the following code.",
          "pos": [
            70,
            134
          ]
        }
      ]
    },
    {
      "pos": [
        18116,
        18226
      ],
      "content": "To verify the accuracy of your work so far, you can press **F6** or\n**Ctrl+Shift+B** to build the project.",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "To verify the accuracy of your work so far, you can press <bpt id=\"p1\">**</bpt>F6<ept id=\"p1\">**</ept> or",
          "pos": [
            0,
            67
          ]
        },
        {
          "content": "<bpt id=\"p1\">**</bpt>Ctrl+Shift+B<ept id=\"p1\">**</ept> to build the project.",
          "pos": [
            68,
            106
          ]
        }
      ]
    },
    {
      "content": "Run your application locally",
      "pos": [
        18233,
        18261
      ]
    },
    {
      "content": "Run the application to verify that it works.",
      "pos": [
        18263,
        18307
      ]
    },
    {
      "pos": [
        18313,
        18463
      ],
      "content": "Ensure that **ProductsPortal** is the active project. Right-click\nthe project name in Solution Explorer and select **Set As\nStartup Project**.",
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "nodes": [
        {
          "content": "Ensure that **ProductsPortal** is the active project. Right-click",
          "pos": [
            0,
            65
          ],
          "nodes": [
            {
              "content": "Ensure that <bpt id=\"p1\">**</bpt>ProductsPortal<ept id=\"p1\">**</ept> is the active project.",
              "pos": [
                0,
                53
              ]
            },
            {
              "content": "Right-click",
              "pos": [
                54,
                65
              ]
            }
          ]
        },
        {
          "content": "the project name in Solution Explorer and select <bpt id=\"p1\">**</bpt>Set As\nStartup Project<ept id=\"p1\">**</ept>.",
          "pos": [
            66,
            142
          ]
        }
      ]
    },
    {
      "pos": [
        18468,
        18499
      ],
      "content": "In <bpt id=\"p1\">**</bpt>Visual Studio<ept id=\"p1\">**</ept>, press F5."
    },
    {
      "content": "Your application should appear running in a browser.",
      "pos": [
        18504,
        18556
      ]
    },
    {
      "content": "Make your application ready to deploy to Azure",
      "pos": [
        18574,
        18620
      ]
    },
    {
      "content": "You can deploy your application to an Azure cloud service or to an Azure website.",
      "pos": [
        18622,
        18703
      ]
    },
    {
      "content": "To learn more about the difference between websites and cloud services, see <bpt id=\"p1\">[</bpt>Azure Execution Models<ept id=\"p1\">][executionmodels]</ept>.",
      "pos": [
        18704,
        18822
      ]
    },
    {
      "content": "To learn how to deploy the application to an Azure website, see <bpt id=\"p1\">[</bpt>Deploying an ASP.NET Web Application to an Azure Website<ept id=\"p1\">](http://azure.microsoft.com/develop/net/tutorials/get-started/)</ept>.",
      "pos": [
        18823,
        19009
      ]
    },
    {
      "content": "This section contains detailed steps for deploying the application to an Azure cloud service.",
      "pos": [
        19010,
        19103
      ]
    },
    {
      "content": "To deploy your application to a cloud service, you'll add a cloud service project deployment project to the solution.",
      "pos": [
        19105,
        19222
      ]
    },
    {
      "content": "The deployment project contains configuration information that is needed to properly run your application in the cloud.",
      "pos": [
        19223,
        19342
      ]
    },
    {
      "pos": [
        19348,
        19549
      ],
      "content": "To make your application deployable to the cloud, right-click the <bpt id=\"p1\">**</bpt>ProductsPortal<ept id=\"p1\">**</ept> project in Solution Explorer and click <bpt id=\"p2\">**</bpt>Convert<ept id=\"p2\">**</ept>, then click <bpt id=\"p3\">**</bpt>Convert to Microsoft Azure Cloud Service Project<ept id=\"p3\">**</ept>."
    },
    {
      "content": "To test your application, press F5.",
      "pos": [
        19568,
        19603
      ]
    },
    {
      "content": "This will start the Azure compute emulator.",
      "pos": [
        19609,
        19652
      ]
    },
    {
      "content": "The compute emulator uses the local computer to emulate your application running in Azure.",
      "pos": [
        19653,
        19743
      ]
    },
    {
      "content": "You can confirm the emulator has started by looking at the system tray.",
      "pos": [
        19744,
        19815
      ]
    },
    {
      "content": "A browser will still display your application running locally, and it will look and function the same way it did when you ran it earlier as a regular ASP.NET MVC 4 application.",
      "pos": [
        19837,
        20013
      ]
    },
    {
      "content": "Put the pieces together",
      "pos": [
        20018,
        20041
      ]
    },
    {
      "content": "The next step is to hook up the on-premises products server with the ASP.NET MVC application.",
      "pos": [
        20043,
        20136
      ]
    },
    {
      "pos": [
        20142,
        20290
      ],
      "content": "If it is not already open, in Visual Studio re-open the <bpt id=\"p1\">**</bpt>ProductsPortal<ept id=\"p1\">**</ept> project you created in the \"Creating an ASP.NET MVC Application\" section."
    },
    {
      "content": "Similar to the step in the \"Create an On-Premises Server\" section, add the NuGet package to the project References.",
      "pos": [
        20296,
        20411
      ]
    },
    {
      "content": "In Solution Explorer, right-click <bpt id=\"p1\">**</bpt>References<ept id=\"p1\">**</ept>, then click <bpt id=\"p2\">**</bpt>Manage NuGet Packages<ept id=\"p2\">**</ept>.",
      "pos": [
        20412,
        20499
      ]
    },
    {
      "content": "Search for \"Service Bus\" and select the <bpt id=\"p1\">**</bpt>Microsoft Azure Service Bus<ept id=\"p1\">**</ept> item.",
      "pos": [
        20505,
        20582
      ]
    },
    {
      "content": "Then complete the installation and close this dialog box.",
      "pos": [
        20583,
        20640
      ]
    },
    {
      "pos": [
        20646,
        20755
      ],
      "content": "In Solution Explorer, right-click the <bpt id=\"p1\">**</bpt>ProductsPortal<ept id=\"p1\">**</ept> project, then click <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>, then <bpt id=\"p3\">**</bpt>Existing Item<ept id=\"p3\">**</ept>."
    },
    {
      "content": "Navigate to the <bpt id=\"p1\">**</bpt>ProductsContract.cs<ept id=\"p1\">**</ept> file from the <bpt id=\"p2\">**</bpt>ProductsServer<ept id=\"p2\">**</ept> console project.",
      "pos": [
        20761,
        20850
      ]
    },
    {
      "content": "Click to highlight   ProductsContract.cs.",
      "pos": [
        20851,
        20892
      ]
    },
    {
      "content": "Click the down arrow next to <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>, then click <bpt id=\"p2\">**</bpt>Add as Link<ept id=\"p2\">**</ept>.",
      "pos": [
        20893,
        20958
      ]
    },
    {
      "content": "Now open the <bpt id=\"p1\">**</bpt>HomeController.cs<ept id=\"p1\">**</ept> file in the Visual Studio  editor and replace the namespace definition with the following code.",
      "pos": [
        20977,
        21107
      ]
    },
    {
      "content": "Be sure to replace <bpt id=\"p1\">*</bpt>yourServiceNamespace<ept id=\"p1\">*</ept> with the name of your service namespace, and <bpt id=\"p2\">*</bpt>yourKey<ept id=\"p2\">*</ept> with your SAS key.",
      "pos": [
        21108,
        21223
      ]
    },
    {
      "content": "This will enable the client to call the on-premises service, returning the result of the call.",
      "pos": [
        21224,
        21318
      ]
    },
    {
      "pos": [
        23109,
        23222
      ],
      "content": "In Solution Explorer, right-click the <bpt id=\"p1\">**</bpt>ProductsPortal<ept id=\"p1\">**</ept>solution, click <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>, then click <bpt id=\"p3\">**</bpt>Existing Project<ept id=\"p3\">**</ept>."
    },
    {
      "pos": [
        23228,
        23344
      ],
      "content": "Navigate to the <bpt id=\"p1\">**</bpt>ProductsServer<ept id=\"p1\">**</ept> project, then double-click the <bpt id=\"p2\">**</bpt>ProductsServer.csproj<ept id=\"p2\">**</ept> solution file to add it."
    },
    {
      "pos": [
        23350,
        23441
      ],
      "content": "In Solution Explorer, right-click the <bpt id=\"p1\">**</bpt>ProductsPortal<ept id=\"p1\">**</ept> solution and click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept>."
    },
    {
      "content": "On the left side, click <bpt id=\"p1\">**</bpt>Startup Project<ept id=\"p1\">**</ept>.",
      "pos": [
        23447,
        23491
      ]
    },
    {
      "content": "On the right side, click <bpt id=\"p1\">**</bpt>Multiple startup projects<ept id=\"p1\">**</ept>.",
      "pos": [
        23492,
        23547
      ]
    },
    {
      "content": "Ensure that <bpt id=\"p1\">**</bpt>ProductsServer<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>ProductsPortal.Azure<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>ProductsPortal<ept id=\"p3\">**</ept> appear, in that order, with <bpt id=\"p4\">**</bpt>Start<ept id=\"p4\">**</ept> set as the action for <bpt id=\"p5\">**</bpt>ProductsServer<ept id=\"p5\">**</ept> and <bpt id=\"p6\">**</bpt>ProductsPortal.Azure<ept id=\"p6\">**</ept>, and <bpt id=\"p7\">**</bpt>None<ept id=\"p7\">**</ept> set as the action for <bpt id=\"p8\">**</bpt>ProductsPortal<ept id=\"p8\">**</ept>.",
      "pos": [
        23548,
        23792
      ]
    },
    {
      "pos": [
        23813,
        23900
      ],
      "content": "Still in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> dialog box, click <bpt id=\"p2\">**</bpt>ProjectDependencies<ept id=\"p2\">**</ept> on the left side."
    },
    {
      "content": "In the <bpt id=\"p1\">**</bpt>Projects<ept id=\"p1\">**</ept> list, click <bpt id=\"p2\">**</bpt>ProductsServer<ept id=\"p2\">**</ept>.",
      "pos": [
        23906,
        23957
      ]
    },
    {
      "content": "Ensure that <bpt id=\"p1\">**</bpt>ProductsPortal<ept id=\"p1\">**</ept> is not selected, and <bpt id=\"p2\">**</bpt>ProductsPortal.Azure<ept id=\"p2\">**</ept> is selected.",
      "pos": [
        23958,
        24047
      ]
    },
    {
      "content": "Then click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>:",
      "pos": [
        24048,
        24066
      ]
    },
    {
      "content": "Run the application",
      "pos": [
        24084,
        24103
      ]
    },
    {
      "pos": [
        24109,
        24169
      ],
      "content": "From the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu in Visual Studio, click <bpt id=\"p2\">**</bpt>Save All<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Press F5 to build and run the application.",
      "pos": [
        24175,
        24217
      ]
    },
    {
      "content": "The on-premises server (the <bpt id=\"p1\">**</bpt>ProductsServer<ept id=\"p1\">**</ept> console application) should start first, then the <bpt id=\"p2\">**</bpt>ProductsWeb<ept id=\"p2\">**</ept> application should start in a browser window, as shown in the following screen shot.",
      "pos": [
        24218,
        24415
      ]
    },
    {
      "content": "This time, you will see that the product inventory lists data retrieved from the product service on-premises system.",
      "pos": [
        24416,
        24532
      ]
    },
    {
      "content": "Deploy your application to Azure",
      "pos": [
        24549,
        24581
      ]
    },
    {
      "pos": [
        24587,
        24697
      ],
      "content": "Right-click the <bpt id=\"p1\">**</bpt>ProductsPortal<ept id=\"p1\">**</ept> project in Solution Explorer and then click <bpt id=\"p2\">**</bpt>Publish to Microsoft Azure<ept id=\"p2\">**</ept>."
    },
    {
      "content": "You might have to sign in to see all your subscriptions.",
      "pos": [
        24703,
        24759
      ]
    },
    {
      "pos": [
        24765,
        24809
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Sign in to see more subscriptions<ept id=\"p1\">**</ept>:"
    },
    {
      "content": "Sign in using your Microsoft Account.",
      "pos": [
        24828,
        24865
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept>.",
      "pos": [
        24871,
        24886
      ]
    },
    {
      "content": "If your subscription doesn't already contain any hosted services, you will be asked to create one.",
      "pos": [
        24887,
        24985
      ]
    },
    {
      "content": "The hosted service acts as a container for your application within your Azure subscription.",
      "pos": [
        24986,
        25077
      ]
    },
    {
      "content": "Enter a name that identifies your application and choose the region for which the application should be optimized.",
      "pos": [
        25078,
        25192
      ]
    },
    {
      "content": "(You can expect faster loading times for users accessing it from this region.)",
      "pos": [
        25193,
        25271
      ]
    },
    {
      "content": "Select the hosted service to which you would like to publish your application.",
      "pos": [
        25277,
        25355
      ]
    },
    {
      "content": "Keep the defaults as shown below for the remaining settings.",
      "pos": [
        25356,
        25416
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept>.",
      "pos": [
        25417,
        25432
      ]
    },
    {
      "pos": [
        25451,
        25519
      ],
      "content": "On the last page, click <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> to start the deployment process."
    },
    {
      "content": "This will take approximately 5-7 minutes.",
      "pos": [
        25533,
        25574
      ]
    },
    {
      "content": "Since this is the first time you are publishing, Azure provisions a virtual machine (VM), performs security hardening, creates a Web role on the VM to host your application, deploys your code to that Web role, and finally configures the load balancer and networking so your application is available to the public.",
      "pos": [
        25575,
        25888
      ]
    },
    {
      "pos": [
        25894,
        26086
      ],
      "content": "While publishing is in progress you will be able to monitor the activity in the <bpt id=\"p1\">**</bpt>Azure Activity Log<ept id=\"p1\">**</ept> window, which is typically docked to the bottom of Visual Studio or Visual Web Developer."
    },
    {
      "pos": [
        26105,
        26222
      ],
      "content": "When deployment is complete, you can view your website by clicking the <bpt id=\"p1\">**</bpt>Website URL<ept id=\"p1\">**</ept> link in the monitoring window."
    },
    {
      "content": "Your website depends on your on-premises server, so you must run the <bpt id=\"p1\">**</bpt>ProductsServer<ept id=\"p1\">**</ept> application locally for the website to function properly.",
      "pos": [
        26241,
        26386
      ]
    },
    {
      "content": "As you perform requests on the cloud website, you will see requests coming into your on-premises console application, as indicated by the \"GetProducts called\" output displayed in the following screen shot.",
      "pos": [
        26387,
        26592
      ]
    },
    {
      "pos": [
        26607,
        26725
      ],
      "content": "To learn more about the difference between websites and cloud services, see <bpt id=\"p1\">[</bpt>Azure Execution Models<ept id=\"p1\">][executionmodels]</ept>."
    },
    {
      "content": "Stop and delete your application",
      "pos": [
        26730,
        26762
      ]
    },
    {
      "content": "After deploying your application, you may want to disable it so you",
      "pos": [
        26764,
        26831
      ]
    },
    {
      "content": "can build and deploy other applications within the free 750",
      "pos": [
        26832,
        26891
      ]
    },
    {
      "content": "hours/month (31 days/month) of server time.",
      "pos": [
        26892,
        26935
      ]
    },
    {
      "content": "Azure bills web role instances per hour of server time",
      "pos": [
        26937,
        26991
      ]
    },
    {
      "content": "consumed.",
      "pos": [
        26992,
        27001
      ]
    },
    {
      "content": "Server time is consumed once your application is deployed,",
      "pos": [
        27002,
        27060
      ]
    },
    {
      "content": "even if the instances are not running and are in the stopped state.",
      "pos": [
        27061,
        27128
      ]
    },
    {
      "content": "A free account includes 750 hours/month (31 days/month) of dedicated",
      "pos": [
        27129,
        27197
      ]
    },
    {
      "content": "virtual machine server time for hosting these web role instances.",
      "pos": [
        27198,
        27263
      ]
    },
    {
      "content": "The following steps show you how to stop and delete your",
      "pos": [
        27265,
        27321
      ]
    },
    {
      "content": "application.",
      "pos": [
        27322,
        27334
      ]
    },
    {
      "pos": [
        27340,
        27433
      ],
      "content": "Sign in to the <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure portal]</ept>, click <bpt id=\"p2\">**</bpt>Cloud Services<ept id=\"p2\">**</ept>, then click the name of your service."
    },
    {
      "content": "Click the <bpt id=\"p1\">**</bpt>Dashboard<ept id=\"p1\">**</ept> tab, and then click <bpt id=\"p2\">**</bpt>Stop<ept id=\"p2\">**</ept> to temporarily suspend your application.",
      "pos": [
        27439,
        27532
      ]
    },
    {
      "content": "You will be able to start it again by clicking <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept>.",
      "pos": [
        27533,
        27590
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Delete<ept id=\"p1\">**</ept> to completely remove your application from Azure with no ability to restore it.",
      "pos": [
        27591,
        27687
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        27705,
        27715
      ]
    },
    {
      "content": "To learn more about Service Bus, see the following resources:",
      "pos": [
        27719,
        27780
      ]
    },
    {
      "content": "Azure Service Bus",
      "pos": [
        27787,
        27804
      ]
    },
    {
      "content": "Service Bus How To's",
      "pos": [
        27819,
        27839
      ]
    },
    {
      "content": "How to Use Service Bus Queues",
      "pos": [
        27855,
        27884
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Hybrid on-premises/cloud application (.NET) | Microsoft Azure\"\n    description=\"Learn how to create a .NET on-premises/cloud hybrid application using the Azure Service Bus relay.\"\n    services=\"service-bus\"\n    documentationCenter=\".net\"\n    authors=\"sethmanheim\"\n    manager=\"timlt\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"service-bus\"\n    ms.workload=\"tbd\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"dotnet\"\n    ms.topic=\"get-started-article\"\n    ms.date=\"06/02/2015\"\n    ms.author=\"sethm\"/>\n\n# .NET on-premises/cloud hybrid application using Azure Service Bus relay\n\n## Introduction\n\nDeveloping hybrid cloud applications with Microsoft Azure is easy using\nVisual Studio 2013 and the free Azure SDK for .NET. This article\nassumes you have no prior experience using Azure. In less than\n30 minutes, you will have an application that uses multiple Azure resources up and running in the cloud.\n\nYou will learn:\n\n-   How to create or adapt an existing web service for consumption by a\n    web solution.\n-   How to use the Azure Service Bus relay to share data between\n    an Azure application and a web service hosted elsewhere.\n\n[AZURE.INCLUDE [create-account-note](../../includes/create-account-note.md)]\n\n## How the Service Bus relay helps with hybrid solutions\n\nBusiness solutions are typically composed of a combination of custom\ncode written to tackle new and unique business requirements and existing\nfunctionality provided by solutions and systems that are already in\nplace.\n\nSolution architects are starting to use the cloud for easier handling of\nscale requirements and lower operational costs. In doing so, they find\nthat existing service assets they'd like to leverage as building blocks\nfor their solutions are inside the corporate firewall and out of easy\nreach for access by the cloud solution. Many internal services are not\nbuilt or hosted in a way that they can be easily exposed at the\ncorporate network edge.\n\nThe Service Bus relay is designed for the use-case of taking existing\nWindows Communication Foundation (WCF) web services and making those\nservices securely accessible to solutions that reside outside the\ncorporate perimeter without requiring intrusive changes to the corporate\nnetwork infrastructure. Such Service Bus relay services are still hosted\ninside their existing environment, but they delegate listening for\nincoming sessions and requests to the cloud-hosted Service Bus. Service Bus also protects those services from unauthorized access by using [Shared Access Signature](https://msdn.microsoft.com/library/dn170478.aspx) (SAS) authentication.\n\n## Solution scenario\n\nIn this tutorial, you will create an ASP.NET MVC website that enables you to see a list of products on the product inventory page.\n\n![][0]\n\nThe tutorial assumes that you have product information in an existing\non-premises system, and uses the Service Bus relay to reach into that\nsystem. This is simulated by a web service that runs in a simple\nconsole application and is backed by an in-memory set of products. You\nwill be able to run this console application on your own computer and\ndeploy the web role into Azure. By doing so, you will see how\nthe web role running in the Azure datacenter will indeed call\ninto your computer, even though your computer will almost certainly\nreside behind at least one firewall and a network address translation\n(NAT) layer.\n\nThe following is a screen shot of the start page of the completed web application.\n\n![][1]\n\n## Set up the development environment\n\nBefore you can begin developing your Azure application, get the tools and set up your development environment.\n\n1.  Install the Azure SDK for .NET at [Get Tools and SDK][].\n\n2.  Click **Install the SDK** for the version of Visual Studio you are using. The steps in this tutorial use Visual Studio 2013.\n\n    ![][42]\n\n4.  When prompted to run or save the installer, click **Run**.\n\n    ![][2]\n\n5.  In the **Web Platform Installer**, click **Install** and proceed with the installation.\n\n    ![][3]\n\n6.  Once the installation is complete, you will have everything\n    necessary to start to develop the app. The SDK includes tools that let you\n    easily develop Azure applications in Visual Studio. If you\n    do not have Visual Studio installed, the SDK also installs the free\n    Visual Studio Express.\n\n## Create a service namespace\n\nTo begin using Service Bus features in Azure, you must first create a service namespace. A namespace provides a scoping container for addressing Service Bus resources within your application.\n\nYou can manage namespaces and Service Bus messaging entities using either the [Azure portal][] or the Visual Studio Server Explorer, but you can only create new namespaces from within the portal.\n\n### To create a namespace using the portal:\n\n1.  Sign in to the [Azure portal][].\n\n2.  In the left navigation pane of the Azure portal, click\n    **Service Bus**.\n\n3.  In the lower pane of the Azure portal, click **Create**.\n\n    ![][5]\n\n4.  In the **Add a new namespace** dialog box, enter a namespace name.\n    The system immediately checks to see if the name is available.\n    ![][6]\n\n5.  After making sure the namespace name is available, choose the\n    country or region in which your namespace should be hosted (make\n    sure you use the same country/region in which you are deploying your\n    compute resources).\n\n    > [AZURE.IMPORTANT] Pick the *same region* that you intend to choose for\n    deploying your application. This will give you the best performance.\n\n6.  Leave the other fields in the dialog box with their default values (**Messaging** and **Standard** tier), then click the check mark. The system now creates your namespace and enables it. You might have to wait several minutes as the system provisions resources for your account.\n\n    ![][38]\n\nThe namespace you created will appear in the Azure portal, though it may take a moment to activate. Wait until the status is **Active** before moving on.\n\n## Obtain the default management credentials for the namespace\n\nIn order to perform management operations on the new namespace, such as creating messaging entities, you must obtain credentials for the namespace.\n\n1.  In the main window, click the name of your service namespace.\n\n    ![][39]\n\n2.  Click **Connection Information**.\n\n    ![][40]\n\n3.  In the **Access connection information** pane, find the connection string that contains the SAS key and key name.\n\n    ![][45]\n\n4.  Make a note of these credentials, or copy them to the clipboard.\n\n## Create an on-premises server\n\nFirst, you will build a (mock) on-premises product catalog system. It\nwill be fairly simple; you can see this as representing an actual\non-premises product catalog system with a complete service surface that\nwe're trying to integrate.\n\nThis project starts as a Visual Studio console application. The\nproject uses the Service Bus NuGet package to include the service bus\nlibraries and configuration settings. The NuGet Visual Studio extension\nmakes it easy to install and update libraries and tools in Visual Studio\nand Visual Studio Express. The Service Bus NuGet package is the easiest\nway to get the Service Bus API and to configure your application with\nall of the Service Bus dependencies. For details about using NuGet and\nthe Service Bus package, see [Using the NuGet Service Bus Package][].\n\n### Create the project\n\n1.  Using administrator privileges, start either Microsoft Visual\n    Studio 2013 or Microsoft Visual Studio Express. To\n    start Visual Studio with administrator privileges, right-click\n    **Microsoft Visual Studio 2013 (or Microsoft Visual Studio Express)** and then click **Run as administrator**.\n\n2.  In Visual Studio, on the **File** menu, click **New**, and then\n    click **Project**.\n\n    ![][10]\n\n3.  From **Installed Templates**, under **Visual C#**, click **Console\n    Application**. In the **Name** box, type the name\n    **ProductsServer**:\n\n    ![][11]\n\n4.  Click **OK** to create the **ProductsServer** project.\n\n5.  In Solution Explorer, right-click **ProductsServer**, and then\n    click **Properties**.\n\n6.  Click the **Application** tab on the left, then ensure that **.NET\n    Framework 4** or **.NET Framework 4.5** appears in the **Target framework** list. If not, select it from the list and then click **Yes** when prompted to reload the project.\n\n    ![][12]\n\n7.  If you have already installed the NuGet package manager for Visual Studio, skip to the next step. Otherwise, visit [NuGet][] and click [Install NuGet](http://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c). Follow the prompts to install the NuGet package manager, then re-start Visual Studio.\n\n7.  In Solution Explorer, right-click **References**, then click\n    **Manage NuGet Packages**.\n\n8.  In the left column of the **NuGet** dialog box, click **Online**.\n\n9.  In the right-hand column, click the **Search** box, type \"**Service Bus**\" and then select the **Microsoft\n    Azure Service Bus** item. Click **Install** to complete the\n    installation, then close the dialog box.\n\n    ![][13]\n\n    Note that the required client assemblies are now referenced.\n\n9.  Add a new class for your product contract. In Solution Explorer,\n    right-click the **ProductsServer** project and click **Add**, and then click\n    **Class**.\n\n    ![][14]\n\n10. In the **Name** box, type the name **ProductsContract.cs**. Then\n    click **Add**.\n\n11. In **ProductsContract.cs**, replace the namespace definition with\n    the following code, which defines the contract for the service.\n\n        namespace ProductsServer\n        {\n            using System.Collections.Generic;\n            using System.Runtime.Serialization;\n            using System.ServiceModel;\n\n            // Define the data contract for the service\n            [DataContract]\n            // Declare the serializable properties.\n            public class ProductData\n            {\n                [DataMember]\n                public string Id { get; set; }\n                [DataMember]\n                public string Name { get; set; }\n                [DataMember]\n                public string Quantity { get; set; }\n            }\n\n            // Define the service contract.\n            [ServiceContract]\n            interface IProducts\n            {\n                [OperationContract]\n                IList<ProductData> GetProducts();\n\n            }\n\n            interface IProductsChannel : IProducts, IClientChannel\n            {\n            }\n        }\n\n12. In Program.cs, replace the namespace definition with the following\n    code, which adds the profile service and the host for it.\n\n        namespace ProductsServer\n        {\n            using System;\n            using System.Linq;\n            using System.Collections.Generic;\n            using System.ServiceModel;\n\n            // Implement the IProducts interface.\n            class ProductsService : IProducts\n            {\n\n                // Populate array of products for display on website.\n                ProductData[] products =\n                    new []\n                        {\n                            new ProductData{ Id = \"1\", Name = \"Rock\",\n                                             Quantity = \"1\"},\n                            new ProductData{ Id = \"2\", Name = \"Paper\",\n                                             Quantity = \"3\"},\n                            new ProductData{ Id = \"3\", Name = \"Scissors\",\n                                             Quantity = \"5\"},\n                            new ProductData{ Id = \"4\", Name = \"Well\",\n                                             Quantity = \"2500\"},\n                        };\n\n                // Display a message in the service console application\n                // when the list of products is retrieved.\n                public IList<ProductData> GetProducts()\n                {\n                    Console.WriteLine(\"GetProducts called.\");\n                    return products;\n                }\n\n            }\n\n            class Program\n            {\n                // Define the Main() function in the service application.\n                static void Main(string[] args)\n                {\n                    var sh = new ServiceHost(typeof(ProductsService));\n                    sh.Open();\n\n                    Console.WriteLine(\"Press ENTER to close\");\n                    Console.ReadLine();\n\n                    sh.Close();\n                }\n            }\n        }\n\n13. In Solution Explorer, double-click the **App.config** file to\n    open it in the Visual Studio editor. Replace the contents of\n    **&lt;system.ServiceModel&gt;** with the following XML code. Be sure to\n    replace *yourServiceNamespace* with the name of your service\n    namespace, and *yourKey* with the SAS key you retrieved earlier\n    from the Azure portal:\n\n        <system.serviceModel>\n          <extensions>\n             <behaviorExtensions>\n                <add name=\"transportClientEndpointBehavior\" type=\"Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/>\n              </behaviorExtensions>\n              <bindingExtensions>\n                 <add name=\"netTcpRelayBinding\" type=\"Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/>\n              </bindingExtensions>\n          </extensions>\n          <services>\n             <service name=\"ProductsServer.ProductsService\">\n               <endpoint address=\"sb://yourServiceNamespace.servicebus.windows.net/products\" binding=\"netTcpRelayBinding\" contract=\"ProductsServer.IProducts\"\n        behaviorConfiguration=\"products\"/>\n             </service>\n          </services>\n          <behaviors>\n             <endpointBehaviors>\n               <behavior name=\"products\">\n                 <transportClientEndpointBehavior>\n                    <tokenProvider>\n                       <sharedAccessSignature keyName=\"RootManageSharedAccessKey\" key=\"yourKey\" />\n                    </tokenProvider>\n                 </transportClientEndpointBehavior>\n               </behavior>\n             </endpointBehaviors>\n          </behaviors>\n        </system.serviceModel>\n\n14. Press F6 or from the **Build** menu, click **Build Solution** to build the application to verify the accuracy of your work so far.\n\n## Create an ASP.NET MVC application\n\nIn this section you will build a simple ASP.NET application that displays data retrieved from your product service.\n\n### Create the project\n\n1.  Ensure that Visual Studio is running with administrator privileges. If not, to\n    start Visual Studio with administrator privileges, right-click\n    **Microsoft Visual Studio 2013 (or Microsoft Visual Studio Express)** and then click **Run as administrator**. The Microsoft Azure compute emulator, discussed later in this article, requires that\n    Visual Studio be started with administrator privileges.\n\n2.  In Visual Studio, on the **File** menu, click **New**, and then\n    click **Project**.\n\n3.  From **Installed Templates**, under **Visual C#**, click **ASP.NET Web Application**. Name the project **ProductsPortal**. Then\n    click **OK**.\n\n    ![][15]\n\n4.  From the **Select a template** list, click **MVC**,\n    and then click **OK**.\n\n    ![][16]\n\n5.  In Solution Explorer, right click **Models** and then click **Add**,\n    then click **Class**. In the **Name** box, type the name\n    **Product.cs**. Then click **Add**.\n\n    ![][17]\n\n### Modify the web application\n\n1.  In the Product.cs file in Visual Studio, replace the existing\n    namespace definition with the following code.\n\n        // Declare properties for the products inventory.\n        namespace ProductsWeb.Models\n        {\n            public class Product\n            {\n                public string Id { get; set; }\n                public string Name { get; set; }\n                public string Quantity { get; set; }\n            }\n        }\n\n2.  In the HomeController.cs file in Visual Studio, replace the existing\n    namespace definition with the following code.\n\n        namespace ProductsWeb.Controllers\n        {\n            using System.Collections.Generic;\n            using System.Web.Mvc;\n            using Models;\n\n            public class HomeController : Controller\n            {\n                // Return a view of the products inventory.\n                public ActionResult Index(string Identifier, string ProductName)\n                {\n                    var products = new List<Product>\n                        {new Product {Id = Identifier, Name = ProductName}};\n                    return View(products);\n                }\n\n            }\n        }\n\n3.  In Solution Explorer, expand the Views\\Shared folder.\n\n    ![][18]\n\n4.  Double-click **_Layout.cshtml** to open it in the Visual Studio editor.\n\n5.  Change all occurrences of **My ASP.NET Application** to **LITWARE's Products**.\n\n6. Remove the **Home**, **About**, and **Contact** links. In the following example, delete the highlighted code.\n\n    ![][41]\n\n7.  In Solution Explorer, expand the Views\\Home folder:\n\n    ![][20]\n\n8.  Double-click **Index.cshtml** to open it in the Visual Studio editor.\n    Replace the entire contents of the file with the following code.\n\n        @model IEnumerable<ProductsWeb.Models.Product>\n\n        @{\n            ViewBag.Title = \"Index\";\n        }\n\n        <h2>Prod Inventory</h2>\n\n        <table>\n            <tr>\n                <th>\n                    @Html.DisplayNameFor(model => model.Name)\n                </th>\n                <th></th>\n                <th>\n                    @Html.DisplayNameFor(model => model.Quantity)\n                </th>\n            </tr>\n\n        @foreach (var item in Model) {\n            <tr>\n                <td>\n                    @Html.DisplayFor(modelItem => item.Name)\n                </td>\n                <td>\n                    @Html.DisplayFor(modelItem => item.Quantity)\n                </td>\n            </tr>\n        }\n\n        </table>\n\n9.  To verify the accuracy of your work so far, you can press **F6** or\n    **Ctrl+Shift+B** to build the project.\n\n\n### Run your application locally\n\nRun the application to verify that it works.\n\n1.  Ensure that **ProductsPortal** is the active project. Right-click\n    the project name in Solution Explorer and select **Set As\n    Startup Project**.\n2.  In **Visual Studio**, press F5.\n3.  Your application should appear running in a browser.\n\n    ![][21]\n\n## Make your application ready to deploy to Azure\n\nYou can deploy your application to an Azure cloud service or to an Azure website. To learn more about the difference between websites and cloud services, see [Azure Execution Models][executionmodels]. To learn how to deploy the application to an Azure website, see [Deploying an ASP.NET Web Application to an Azure Website](http://azure.microsoft.com/develop/net/tutorials/get-started/). This section contains detailed steps for deploying the application to an Azure cloud service.\n\nTo deploy your application to a cloud service, you'll add a cloud service project deployment project to the solution. The deployment project contains configuration information that is needed to properly run your application in the cloud.\n\n1.  To make your application deployable to the cloud, right-click the **ProductsPortal** project in Solution Explorer and click **Convert**, then click **Convert to Microsoft Azure Cloud Service Project**.\n\n    ![][22]\n\n2.  To test your application, press F5.\n\n3.  This will start the Azure compute emulator. The compute emulator uses the local computer to emulate your application running in Azure. You can confirm the emulator has started by looking at the system tray.\n\n       ![][23]\n\n4.  A browser will still display your application running locally, and it will look and function the same way it did when you ran it earlier as a regular ASP.NET MVC 4 application.\n\n## Put the pieces together\n\nThe next step is to hook up the on-premises products server with the ASP.NET MVC application.\n\n1.  If it is not already open, in Visual Studio re-open the **ProductsPortal** project you created in the \"Creating an ASP.NET MVC Application\" section.\n\n2.  Similar to the step in the \"Create an On-Premises Server\" section, add the NuGet package to the project References. In Solution Explorer, right-click **References**, then click **Manage NuGet Packages**.\n\n3.  Search for \"Service Bus\" and select the **Microsoft Azure Service Bus** item. Then complete the installation and close this dialog box.\n\n4.  In Solution Explorer, right-click the **ProductsPortal** project, then click **Add**, then **Existing Item**.\n\n5.  Navigate to the **ProductsContract.cs** file from the **ProductsServer** console project. Click to highlight   ProductsContract.cs. Click the down arrow next to **Add**, then click **Add as Link**.\n\n    ![][24]\n\n6.  Now open the **HomeController.cs** file in the Visual Studio  editor and replace the namespace definition with the following code. Be sure to replace *yourServiceNamespace* with the name of your service namespace, and *yourKey* with your SAS key. This will enable the client to call the on-premises service, returning the result of the call.\n\n            namespace ProductsWeb.Controllers\n            {\n                using System.Linq;\n                using System.ServiceModel;\n                using System.Web.Mvc;\n                using Microsoft.ServiceBus;\n                using Models;\n                using ProductsServer;\n\n                public class HomeController : Controller\n                {\n                    // Declare the channel factory.\n                    static ChannelFactory<IProductsChannel> channelFactory;\n\n                    static HomeController()\n                    {\n                        // Create shared secret token credentials for authentication.\n                        channelFactory = new ChannelFactory<IProductsChannel>(new NetTcpRelayBinding(),\n                            \"sb://yourServiceNamespace.servicebus.windows.net/products\");\n                        channelFactory.Endpoint.Behaviors.Add(new TransportClientEndpointBehavior {\n                            TokenProvider = TokenProvider.CreateSharedAccessSignatureTokenProvider(\n                                \"RootManageSharedAccessKey\", \"yourKey\") });\n                    }\n\n                    public ActionResult Index()\n                    {\n                        using (IProductsChannel channel = channelFactory.CreateChannel())\n                        {\n                            // Return a view of the products inventory.\n                            return this.View(from prod in channel.GetProducts()\n                                             select\n                                                 new Product { Id = prod.Id, Name = prod.Name,\n                                                     Quantity = prod.Quantity });\n                        }\n                    }\n                }\n            }\n7.  In Solution Explorer, right-click the **ProductsPortal**solution, click **Add**, then click **Existing Project**.\n\n8.  Navigate to the **ProductsServer** project, then double-click the **ProductsServer.csproj** solution file to add it.\n\n9.  In Solution Explorer, right-click the **ProductsPortal** solution and click **Properties**.\n\n10. On the left side, click **Startup Project**. On the right side, click **Multiple startup projects**. Ensure that **ProductsServer**, **ProductsPortal.Azure**, and **ProductsPortal** appear, in that order, with **Start** set as the action for **ProductsServer** and **ProductsPortal.Azure**, and **None** set as the action for **ProductsPortal**.\n\n      ![][25]\n\n11. Still in the **Properties** dialog box, click **ProjectDependencies** on the left side.\n\n12. In the **Projects** list, click **ProductsServer**. Ensure that **ProductsPortal** is not selected, and **ProductsPortal.Azure** is selected. Then click **OK**:\n\n    ![][26]\n\n## Run the application\n\n1.  From the **File** menu in Visual Studio, click **Save All**.\n\n2.  Press F5 to build and run the application. The on-premises server (the **ProductsServer** console application) should start first, then the **ProductsWeb** application should start in a browser window, as shown in the following screen shot. This time, you will see that the product inventory lists data retrieved from the product service on-premises system.\n\n    ![][1]\n\n## Deploy your application to Azure\n\n1.  Right-click the **ProductsPortal** project in Solution Explorer and then click **Publish to Microsoft Azure**.\n\n2.  You might have to sign in to see all your subscriptions.\n\n    Click **Sign in to see more subscriptions**:\n\n    ![][27]\n\n3.  Sign in using your Microsoft Account.\n\n8.  Click **Next**. If your subscription doesn't already contain any hosted services, you will be asked to create one. The hosted service acts as a container for your application within your Azure subscription. Enter a name that identifies your application and choose the region for which the application should be optimized. (You can expect faster loading times for users accessing it from this region.)\n\n9.  Select the hosted service to which you would like to publish your application. Keep the defaults as shown below for the remaining settings. Click **Next**.\n\n    ![][33]\n\n10. On the last page, click **Publish** to start the deployment process.\n\n    ![][34]\nThis will take approximately 5-7 minutes. Since this is the first time you are publishing, Azure provisions a virtual machine (VM), performs security hardening, creates a Web role on the VM to host your application, deploys your code to that Web role, and finally configures the load balancer and networking so your application is available to the public.\n\n11. While publishing is in progress you will be able to monitor the activity in the **Azure Activity Log** window, which is typically docked to the bottom of Visual Studio or Visual Web Developer.\n\n    ![][35]\n\n12. When deployment is complete, you can view your website by clicking the **Website URL** link in the monitoring window.\n\n    ![][36]\n\n    Your website depends on your on-premises server, so you must run the **ProductsServer** application locally for the website to function properly. As you perform requests on the cloud website, you will see requests coming into your on-premises console application, as indicated by the \"GetProducts called\" output displayed in the following screen shot.\n\n    ![][37]\n\nTo learn more about the difference between websites and cloud services, see [Azure Execution Models][executionmodels].\n\n## Stop and delete your application\n\nAfter deploying your application, you may want to disable it so you\ncan build and deploy other applications within the free 750\nhours/month (31 days/month) of server time.\n\nAzure bills web role instances per hour of server time\nconsumed. Server time is consumed once your application is deployed,\neven if the instances are not running and are in the stopped state.\nA free account includes 750 hours/month (31 days/month) of dedicated\nvirtual machine server time for hosting these web role instances.\n\nThe following steps show you how to stop and delete your\napplication.\n\n1.  Sign in to the [Azure portal], click **Cloud Services**, then click the name of your service.\n\n2.  Click the **Dashboard** tab, and then click **Stop** to temporarily suspend your application. You will be able to start it again by clicking **Start**. Click **Delete** to completely remove your application from Azure with no ability to restore it.\n\n    ![][43]\n\n## Next steps  \n\nTo learn more about Service Bus, see the following resources:  \n\n* [Azure Service Bus][sbmsdn]  \n* [Service Bus How To's][sbwacom]  \n* [How to Use Service Bus Queues][sbwacomqhowto]  \n\n\n  [0]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hybrid.png\n  [1]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/App2.png\n  [Get Tools and SDK]: http://go.microsoft.com/fwlink/?LinkId=271920\n  [NuGet]: http://nuget.org\n  [2]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-3.png\n  [3]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-4-2-WebPI.png\n\n\n  [Azure portal]: http://manage.windowsazure.com\n  [5]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/sb-queues-03.png\n  [6]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/sb-queues-04.png\n\n\n\n  [Using the NuGet Service Bus Package]: https://msdn.microsoft.com/library/azure/dn741354.aspx\n  [10]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-web-1.png\n  [11]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-con-1.png\n  [12]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-con-3.png\n  [13]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-multi-tier-13.png\n  [14]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-con-4.png\n  [15]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-web-2.png\n  [16]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-web-4.png\n  [17]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-web-7.jpg\n  [18]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-web-10.jpg\n\n  [20]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-web-11.png\n  [21]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/App1.png\n  [22]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-hybrid-21.png\n  [23]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-hybrid-22.png\n  [24]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-web-12.png\n  [25]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-web-13.png\n  [26]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-web-14.png\n  [27]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-hybrid-33.png\n\n\n  [30]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-hybrid-36.png\n  [31]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-hybrid-37.png\n  [32]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-hybrid-38.png\n  [33]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-hybrid-39.png\n  [34]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-hybrid-40.png\n  [35]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-hybrid-41.png\n  [36]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/App2.png\n  [37]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-service1.png\n  [38]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-multi-tier-27.png\n  [39]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/sb-queues-09.png\n  [40]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/sb-queues-06.png\n  [41]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-multi-tier-40.png\n  [42]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-41.png\n  [43]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/getting-started-hybrid-43.png\n  [45]: ./media/service-bus-dotnet-hybrid-app-using-service-bus-relay/hy-web-45.png\n\n  [sbmsdn]: http://msdn.microsoft.com/library/azure/ee732537.aspx  \n  [sbwacom]: /documentation/services/service-bus/  \n  [sbwacomqhowto]: service-bus-dotnet-how-to-use-queues.md\n  [executionmodels]: ../cloud-services/fundamentals-application-models.md\n"
}