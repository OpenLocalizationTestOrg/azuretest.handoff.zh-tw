<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating pipelines</source>
          <target state="new">Creating pipelines</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Understand Azure Data Factory pipelines and learn how to create them to move and transform data to produce information that can be used to gain insights</source>
          <target state="new">Understand Azure Data Factory pipelines and learn how to create them to move and transform data to produce information that can be used to gain insights</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Understanding Pipelines &amp; Activities</source>
          <target state="new">Understanding Pipelines &amp; Activities</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This article will help you understand pipelines and activities in Azure Data Factory and how to leverage them to construct end-to-end data-driven workflows for your scenario or business.</source>
          <target state="new">This article will help you understand pipelines and activities in Azure Data Factory and how to leverage them to construct end-to-end data-driven workflows for your scenario or business.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article assumes you have gone through the <bpt id="p1">[</bpt>Overview<ept id="p1">](data-factory-introduction.md)</ept> and <bpt id="p2">[</bpt>Creating Datasets<ept id="p2">](data-factory-create-datasets.md)</ept> articles prior to this.</source>
          <target state="new">This article assumes you have gone through the <bpt id="p1">[</bpt>Overview<ept id="p1">](data-factory-introduction.md)</ept> and <bpt id="p2">[</bpt>Creating Datasets<ept id="p2">](data-factory-create-datasets.md)</ept> articles prior to this.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>What is a pipeline?</source>
          <target state="new">What is a pipeline?</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Pipeline is a logical grouping of Activities<ept id="p1">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Pipeline is a logical grouping of Activities<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>They are used to group activities into a unit that performs a task.</source>
          <target state="new">They are used to group activities into a unit that performs a task.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To understand pipelines better, you need to understand an activity first.</source>
          <target state="new">To understand pipelines better, you need to understand an activity first.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>What is an activity?</source>
          <target state="new">What is an activity?</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Activities define the actions to perform on your data.</source>
          <target state="new">Activities define the actions to perform on your data.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each activity takes zero or more <bpt id="p1">[</bpt>datasets<ept id="p1">](data-factory-create-datasets.md)</ept> as inputs and produces one or more datasets as output.</source>
          <target state="new">Each activity takes zero or more <bpt id="p1">[</bpt>datasets<ept id="p1">](data-factory-create-datasets.md)</ept> as inputs and produces one or more datasets as output.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An activity is a unit of orchestration in Azure Data Factory.</source>
          <target state="new">An activity is a unit of orchestration in Azure Data Factory.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, you may use a Copy activity to orchestrate copying data from one dataset to another.</source>
          <target state="new">For example, you may use a Copy activity to orchestrate copying data from one dataset to another.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Similarly you may use a Hive activity which will run a Hive query on an Azure HDInsight cluster to transform or analyze your data.</source>
          <target state="new">Similarly you may use a Hive activity which will run a Hive query on an Azure HDInsight cluster to transform or analyze your data.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Azure Data Factory provides a wide range of <bpt id="p1">[</bpt>data transformation, analysis<ept id="p1">](data-factory-data-transformation-activities.md)</ept>, and <bpt id="p2">[</bpt>data movement activities<ept id="p2">](data-factory-data-movement-activities.md)</ept>.</source>
          <target state="new">Azure Data Factory provides a wide range of <bpt id="p1">[</bpt>data transformation, analysis<ept id="p1">](data-factory-data-transformation-activities.md)</ept>, and <bpt id="p2">[</bpt>data movement activities<ept id="p2">](data-factory-data-movement-activities.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You may also choose to create a custom .NET activity to run your own code.</source>
          <target state="new">You may also choose to create a custom .NET activity to run your own code.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Consider the following 2 datasets:</source>
          <target state="new">Consider the following 2 datasets:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Azure SQL Dataset</source>
          <target state="new">Azure SQL Dataset</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Table ‘MyTable’ contains a column ‘timestampcolumn’ which helps in specifying the datetime of when the data was inserted into the database.</source>
          <target state="new">Table ‘MyTable’ contains a column ‘timestampcolumn’ which helps in specifying the datetime of when the data was inserted into the database.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Azure Blob Dataset</source>
          <target state="new">Azure Blob Dataset</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Data is copied to a new blob every hour with the path for the blob reflecting the specific date-time with hour granularity.</source>
          <target state="new">Data is copied to a new blob every hour with the path for the blob reflecting the specific date-time with hour granularity.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The Copy activity in the pipeline below copies data from Azure SQL to Azure Blob Storage.</source>
          <target state="new">The Copy activity in the pipeline below copies data from Azure SQL to Azure Blob Storage.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It takes Azure SQL table as the input dataset with hourly frequency and writes the data to Azure Blob storage represented by the ‘AzureBlobOutput’ dataset.</source>
          <target state="new">It takes Azure SQL table as the input dataset with hourly frequency and writes the data to Azure Blob storage represented by the ‘AzureBlobOutput’ dataset.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The output dataset also has an hourly frequency.</source>
          <target state="new">The output dataset also has an hourly frequency.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Refer to the Scheduling and Execution section to understand how the data is copied over the unit of time.</source>
          <target state="new">Refer to the Scheduling and Execution section to understand how the data is copied over the unit of time.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This pipeline have an active period of 3 hours from “2015-01-01T08:00:00” to “2015-01-01T11:00:00”.</source>
          <target state="new">This pipeline have an active period of 3 hours from “2015-01-01T08:00:00” to “2015-01-01T11:00:00”.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Pipeline:</source>
          <target state="new">Pipeline:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Now that we have a brief understanding on what an activity is, let’s re-visit the pipeline.</source>
          <target state="new">Now that we have a brief understanding on what an activity is, let’s re-visit the pipeline.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Pipeline is a logical grouping of Activities.</source>
          <target state="new">Pipeline is a logical grouping of Activities.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>They are used to group activities into a unit that performs a task.</source>
          <target state="new">They are used to group activities into a unit that performs a task.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A pipeline is also the unit of deployment and management for activities.</source>
          <target state="new">A pipeline is also the unit of deployment and management for activities.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, you may wish to put logically related activities together as one pipeline such that they can be in active or paused state together.</source>
          <target state="new">For example, you may wish to put logically related activities together as one pipeline such that they can be in active or paused state together.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An output dataset from an activity in a pipeline can be the input dataset to another activity in the same/different pipeline by defining dependencies among activities.</source>
          <target state="new">An output dataset from an activity in a pipeline can be the input dataset to another activity in the same/different pipeline by defining dependencies among activities.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>scheduling and execution<ept id="p1">](#scheduling-and-execution)</ept> section covers this in detail.</source>
          <target state="new">The <bpt id="p1">[</bpt>scheduling and execution<ept id="p1">](#scheduling-and-execution)</ept> section covers this in detail.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Typical steps when creating a pipeline in Azure Data Factory are:</source>
          <target state="new">Typical steps when creating a pipeline in Azure Data Factory are:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Create a data factory (if not created).</source>
          <target state="new">Create a data factory (if not created).</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Create a linked service for each data store or compute.</source>
          <target state="new">Create a linked service for each data store or compute.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Create input and output dataset(s).</source>
          <target state="new">Create input and output dataset(s).</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Create a pipeline with activities which operate on the datasets defined above.</source>
          <target state="new">Create a pipeline with activities which operate on the datasets defined above.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Data Factory entities</source>
          <target state="new">Data Factory entities</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Let us take a closer look on how a pipeline is defined.</source>
          <target state="new">Let us take a closer look on how a pipeline is defined.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Anatomy of a Pipeline</source>
          <target state="new">Anatomy of a Pipeline</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The generic structure for a pipeline looks as follows:</source>
          <target state="new">The generic structure for a pipeline looks as follows:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>activities<ept id="p1">**</ept> section can have one or more activities defined within it.</source>
          <target state="new">The <bpt id="p1">**</bpt>activities<ept id="p1">**</ept> section can have one or more activities defined within it.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each activity has the following top level structure:</source>
          <target state="new">Each activity has the following top level structure:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Following table describe the properties within the activity and pipeline JSON definitions:</source>
          <target state="new">Following table describe the properties within the activity and pipeline JSON definitions:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Tag</source>
          <target state="new">Tag</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="new">name</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Name of the activity or the pipeline.</source>
          <target state="new">Name of the activity or the pipeline.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specify a name that represents the action that the activity or pipeline is configured to do</source>
          <target state="new">Specify a name that represents the action that the activity or pipeline is configured to do</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Maximum number of characters: 260</source>
          <target state="new">Maximum number of characters: 260</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Must start with a letter  number, or a  underscore (_)</source>
          <target state="new">Must start with a letter  number, or a  underscore (_)</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Following characters are not allowed: “.”, “+”, “?”, “/”, “&lt;”,”&gt;”,”*”,”%”,”&amp;”,”:”,”\\”</source>
          <target state="new">Following characters are not allowed: “.”, “+”, “?”, “/”, “&lt;”,”&gt;”,”*”,”%”,”&amp;”,”:”,”\\”</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>description</source>
          <target state="new">description</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Text describing what the activity or pipeline is used for</source>
          <target state="new">Text describing what the activity or pipeline is used for</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="new">type</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies the type of the activity.</source>
          <target state="new">Specifies the type of the activity.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Data Movement Activities<ept id="p1">](data-factory-data-movement-activities.md)</ept> and <bpt id="p2">[</bpt>Data Transformation Activities<ept id="p2">](data-factory-data-transformation-activities.md)</ept> articles for different types of activities.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Data Movement Activities<ept id="p1">](data-factory-data-movement-activities.md)</ept> and <bpt id="p2">[</bpt>Data Transformation Activities<ept id="p2">](data-factory-data-transformation-activities.md)</ept> articles for different types of activities.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>inputs</source>
          <target state="new">inputs</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Input tables used by the activity</source>
          <target state="new">Input tables used by the activity</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>// one input table</source>
          <target state="new">// one input table</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>"inputs":  [ { "name": "inputtable1"  } ],</source>
          <target state="new">"inputs":  [ { "name": "inputtable1"  } ],</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>// two input tables</source>
          <target state="new">// two input tables</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>"inputs":  [ { "name": "inputtable1"  }, { "name": "inputtable2"  } ],</source>
          <target state="new">"inputs":  [ { "name": "inputtable1"  }, { "name": "inputtable2"  } ],</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>outputs</source>
          <target state="new">outputs</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Output tables used by the activity.</source>
          <target state="new">Output tables used by the activity.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>// one output table</source>
          <target state="new">// one output table</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>"outputs":  [ { "name": “outputtable1” } ],</source>
          <target state="new">"outputs":  [ { "name": “outputtable1” } ],</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>//two output tables</source>
          <target state="new">//two output tables</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>"outputs":  [ { "name": “outputtable1” }, { "name": “outputtable2” }  ],</source>
          <target state="new">"outputs":  [ { "name": “outputtable1” }, { "name": “outputtable2” }  ],</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>linkedServiceName</source>
          <target state="new">linkedServiceName</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Name of the linked service used by the activity.</source>
          <target state="new">Name of the linked service used by the activity.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An activity may require that you specify the linked service that links to the required compute environment.</source>
          <target state="new">An activity may require that you specify the linked service that links to the required compute environment.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Yes for HDInsight Activity and Azure Machine Learning Batch Scoring Activity</source>
          <target state="new">Yes for HDInsight Activity and Azure Machine Learning Batch Scoring Activity</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>No for all others</source>
          <target state="new">No for all others</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>typeProperties</source>
          <target state="new">typeProperties</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Properties in the typeProperties section depend on type of the activity.</source>
          <target state="new">Properties in the typeProperties section depend on type of the activity.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Refer to the article on each individual activity to learn more on this</source>
          <target state="new">Refer to the article on each individual activity to learn more on this</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>policy</source>
          <target state="new">policy</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Policies which affect the run-time behavior of the activity.</source>
          <target state="new">Policies which affect the run-time behavior of the activity.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If it is not specified, default policies will be used.</source>
          <target state="new">If it is not specified, default policies will be used.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Scroll below for details</source>
          <target state="new">Scroll below for details</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>start</source>
          <target state="new">start</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Start date-time for the pipeline.</source>
          <target state="new">Start date-time for the pipeline.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Must be in <bpt id="p1">[</bpt>ISO format<ept id="p1">](http://en.wikipedia.org/wiki/ISO_8601)</ept>.</source>
          <target state="new">Must be in <bpt id="p1">[</bpt>ISO format<ept id="p1">](http://en.wikipedia.org/wiki/ISO_8601)</ept>.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For example: 2014-10-14T16:32:41Z.</source>
          <target state="new">For example: 2014-10-14T16:32:41Z.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The start and end properties together specify active period for the pipeline.</source>
          <target state="new">The start and end properties together specify active period for the pipeline.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Output slices are only produced with in this active period.</source>
          <target state="new">Output slices are only produced with in this active period.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Active period for a pipeline can also be set using the Set-AzureDataFactoryPipelineActivePeriod cmdlet</source>
          <target state="new">Active period for a pipeline can also be set using the Set-AzureDataFactoryPipelineActivePeriod cmdlet</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>End</source>
          <target state="new">End</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>End date-time for the pipeline.</source>
          <target state="new">End date-time for the pipeline.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If specified must be in ISO format.</source>
          <target state="new">If specified must be in ISO format.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example: 2014-10-14T17:32:41Z</source>
          <target state="new">For example: 2014-10-14T17:32:41Z</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If not specified, it is calculated as "start + 48 hours".</source>
          <target state="new">If not specified, it is calculated as "start + 48 hours".</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To run the pipeline indefinitely, specify 9999-09-09 as the value for the end property.</source>
          <target state="new">To run the pipeline indefinitely, specify 9999-09-09 as the value for the end property.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>isPaused</source>
          <target state="new">isPaused</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If set to true the pipeline will not get executed.</source>
          <target state="new">If set to true the pipeline will not get executed.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Default value = false.</source>
          <target state="new">Default value = false.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You can use this property to enable or disable.</source>
          <target state="new">You can use this property to enable or disable.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>scheduler</source>
          <target state="new">scheduler</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>“scheduler” property is used to define desired scheduling for the activity.</source>
          <target state="new">“scheduler” property is used to define desired scheduling for the activity.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Its sub-properties are the same as those under <bpt id="p1">[</bpt>availability property in a dataset<ept id="p1">](data-factory-create-datasets.md#Availability)</ept>.</source>
          <target state="new">Its sub-properties are the same as those under <bpt id="p1">[</bpt>availability property in a dataset<ept id="p1">](data-factory-create-datasets.md#Availability)</ept>.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Activity types</source>
          <target state="new">Activity types</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Azure Data Factory provides a wide range of <bpt id="p1">[</bpt>Data movement<ept id="p1">](data-factory-data-movement-activities.md)</ept> and <bpt id="p2">[</bpt>Data transformation<ept id="p2">](data-factory-data-transformation-activities.md)</ept> activities.</source>
          <target state="new">Azure Data Factory provides a wide range of <bpt id="p1">[</bpt>Data movement<ept id="p1">](data-factory-data-movement-activities.md)</ept> and <bpt id="p2">[</bpt>Data transformation<ept id="p2">](data-factory-data-transformation-activities.md)</ept> activities.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="new">Policies</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Policies affect the run-time behavior of an activity, specifically when the slice of a table is processed.</source>
          <target state="new">Policies affect the run-time behavior of an activity, specifically when the slice of a table is processed.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The following table provides the details.</source>
          <target state="new">The following table provides the details.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new">Property</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Permitted values</source>
          <target state="new">Permitted values</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Default Value</source>
          <target state="new">Default Value</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>concurrency</source>
          <target state="new">concurrency</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="new">Integer</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Max value: 10</source>
          <target state="new">Max value: 10</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Number of concurrent executions of the activity.</source>
          <target state="new">Number of concurrent executions of the activity.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>It determines the number of parallel activity executions that can happen on different slices.</source>
          <target state="new">It determines the number of parallel activity executions that can happen on different slices.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For example, if an activity needs to go through a large set of available data, having a larger concurrency speeds up the data processing.</source>
          <target state="new">For example, if an activity needs to go through a large set of available data, having a larger concurrency speeds up the data processing.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>executionPriorityOrder</source>
          <target state="new">executionPriorityOrder</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>NewestFirst</source>
          <target state="new">NewestFirst</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>OldestFirst</source>
          <target state="new">OldestFirst</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>OldestFirst</source>
          <target state="new">OldestFirst</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Determines the ordering of data slices that are being processed.</source>
          <target state="new">Determines the ordering of data slices that are being processed.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For example, if you have 2 slices (one happening at 4pm, and another one at 5pm), and both are pending execution.</source>
          <target state="new">For example, if you have 2 slices (one happening at 4pm, and another one at 5pm), and both are pending execution.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If you set the executionPriorityOrder to be NewestFirst, the slice at 5pm will be processed first.</source>
          <target state="new">If you set the executionPriorityOrder to be NewestFirst, the slice at 5pm will be processed first.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Similarly if you set the executionPriorityORder to be OldestFIrst, then the slice at 4pm will be processed.</source>
          <target state="new">Similarly if you set the executionPriorityORder to be OldestFIrst, then the slice at 4pm will be processed.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>retry</source>
          <target state="new">retry</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="new">Integer</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Max value can be 10</source>
          <target state="new">Max value can be 10</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="new">3</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Number of retries before the data processing for the slice is marked as Failure.</source>
          <target state="new">Number of retries before the data processing for the slice is marked as Failure.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Activity execution for a data slice is retried up to the specified retry count.</source>
          <target state="new">Activity execution for a data slice is retried up to the specified retry count.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The retry is done as soon as possible after the failure.</source>
          <target state="new">The retry is done as soon as possible after the failure.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>timeout</source>
          <target state="new">timeout</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>TimeSpan</source>
          <target state="new">TimeSpan</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>00:00:00</source>
          <target state="new">00:00:00</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Timeout for the activity.</source>
          <target state="new">Timeout for the activity.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Example: 00:10:00 (implies timeout 10 mins)</source>
          <target state="new">Example: 00:10:00 (implies timeout 10 mins)</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If a value is not specified or is 0, the timeout is infinite.</source>
          <target state="new">If a value is not specified or is 0, the timeout is infinite.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If the data processing time on a slice exceeds the timeout value, it is canceled, and the system attempts to retry the processing.</source>
          <target state="new">If the data processing time on a slice exceeds the timeout value, it is canceled, and the system attempts to retry the processing.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The number of retries depends on the retry property.</source>
          <target state="new">The number of retries depends on the retry property.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>When timeout occurs, the status will be TimedOut.</source>
          <target state="new">When timeout occurs, the status will be TimedOut.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>delay</source>
          <target state="new">delay</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>TimeSpan</source>
          <target state="new">TimeSpan</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>00:00:00</source>
          <target state="new">00:00:00</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Specify the delay before data processing of the slice starts.</source>
          <target state="new">Specify the delay before data processing of the slice starts.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The execution of activity for a data slice is started after the Delay is past the expected execution time.</source>
          <target state="new">The execution of activity for a data slice is started after the Delay is past the expected execution time.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Example: 00:10:00 (implies delay of 10 mins)</source>
          <target state="new">Example: 00:10:00 (implies delay of 10 mins)</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>longRetry</source>
          <target state="new">longRetry</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="new">Integer</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Max value: 10</source>
          <target state="new">Max value: 10</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The number of long retry attempts before the slice execution is failed.</source>
          <target state="new">The number of long retry attempts before the slice execution is failed.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>longRetry attempts are spaced by longRetryInterval.</source>
          <target state="new">longRetry attempts are spaced by longRetryInterval.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>So if you need to specify a time between retry attempts, use longRetry.</source>
          <target state="new">So if you need to specify a time between retry attempts, use longRetry.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If both Retry and longRetry are specified, each longRetry attempt will include Retry attempts and the max number of attempts will be Retry * longRetry.</source>
          <target state="new">If both Retry and longRetry are specified, each longRetry attempt will include Retry attempts and the max number of attempts will be Retry * longRetry.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For example, if we have the following in the activity policy:</source>
          <target state="new">For example, if we have the following in the activity policy:</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Retry: 3</source>
          <target state="new">Retry: 3</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>longRetry: 2</source>
          <target state="new">longRetry: 2</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>longRetryInterval: 01:00:00</source>
          <target state="new">longRetryInterval: 01:00:00</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Assume there is only one slice to execute (status is PendingExecution) and the activity execution fails every time.</source>
          <target state="new">Assume there is only one slice to execute (status is PendingExecution) and the activity execution fails every time.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Initially there would be 3 consecutive execution attempts.</source>
          <target state="new">Initially there would be 3 consecutive execution attempts.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>After each attempt the slice status would be Retry.</source>
          <target state="new">After each attempt the slice status would be Retry.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>After first 3 attempts are over the slice status would be LongRetry.</source>
          <target state="new">After first 3 attempts are over the slice status would be LongRetry.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>After an hour (i.e. longRetryInteval’s value), there would be another set of 3 consecutive execution attempts.</source>
          <target state="new">After an hour (i.e. longRetryInteval’s value), there would be another set of 3 consecutive execution attempts.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>After that, the slice status would be Failed and no more retries would be attempted.</source>
          <target state="new">After that, the slice status would be Failed and no more retries would be attempted.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Hence overall 6 attempts were made.</source>
          <target state="new">Hence overall 6 attempts were made.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Note: If any execution succeeds, the slice status would be Ready and no more retries will be attempted.</source>
          <target state="new">Note: If any execution succeeds, the slice status would be Ready and no more retries will be attempted.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>longRetry may be used in situations where dependent data arrives at non-deterministic times or the overall environment is quite flaky under which data processing occurs.</source>
          <target state="new">longRetry may be used in situations where dependent data arrives at non-deterministic times or the overall environment is quite flaky under which data processing occurs.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>In such cases doing retries one after another may not help and doing so after an interval of time results in the desired output.</source>
          <target state="new">In such cases doing retries one after another may not help and doing so after an interval of time results in the desired output.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Word of caution: do not set high values for longRetry or longRetryInterval.</source>
          <target state="new">Word of caution: do not set high values for longRetry or longRetryInterval.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Typically higher values imply other systemic issues which are being brushed off under this</source>
          <target state="new">Typically higher values imply other systemic issues which are being brushed off under this</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>longRetryInterval</source>
          <target state="new">longRetryInterval</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>TimeSpan</source>
          <target state="new">TimeSpan</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>00:00:00</source>
          <target state="new">00:00:00</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The delay between long retry attempts</source>
          <target state="new">The delay between long retry attempts</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Authoring and managing a pipeline</source>
          <target state="new">Authoring and managing a pipeline</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Azure Data Factory provides various mechanisms to author and deploy pipelines (which in turn contain one or more activities in it).</source>
          <target state="new">Azure Data Factory provides various mechanisms to author and deploy pipelines (which in turn contain one or more activities in it).</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Using Azure Preview Portal</source>
          <target state="new">Using Azure Preview Portal</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Log into <bpt id="p1">[</bpt>Azure Preview Portal<ept id="p1">](https://portal.azure.com/)</ept>.</source>
          <target state="new">Log into <bpt id="p1">[</bpt>Azure Preview Portal<ept id="p1">](https://portal.azure.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Navigate to your Azure Data Factory instance in which you wish to create a pipeline</source>
          <target state="new">Navigate to your Azure Data Factory instance in which you wish to create a pipeline</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Click  <bpt id="p1">**</bpt>Author and Deploy<ept id="p1">**</ept> tile in the <bpt id="p2">**</bpt>Summary<ept id="p2">**</ept> lens.</source>
          <target state="new">Click  <bpt id="p1">**</bpt>Author and Deploy<ept id="p1">**</ept> tile in the <bpt id="p2">**</bpt>Summary<ept id="p2">**</ept> lens.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Author and deploy tile</source>
          <target state="new">Author and deploy tile</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>New pipeline<ept id="p1">**</ept> on the command bar.</source>
          <target state="new">Click <bpt id="p1">**</bpt>New pipeline<ept id="p1">**</ept> on the command bar.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>New pipeline button</source>
          <target state="new">New pipeline button</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>You should see the editor window with pipeline JSON template.</source>
          <target state="new">You should see the editor window with pipeline JSON template.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Pipeline editor</source>
          <target state="new">Pipeline editor</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>After you have finished authoring the pipeline, then click on <bpt id="p1">**</bpt>Deploy<ept id="p1">**</ept> on the command bar to deploy the pipeline.</source>
          <target state="new">After you have finished authoring the pipeline, then click on <bpt id="p1">**</bpt>Deploy<ept id="p1">**</ept> on the command bar to deploy the pipeline.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> during deployment, the Azure Data Factory service performs a few validation checks to help rectify a few common issues.</source>
          <target state="new"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> during deployment, the Azure Data Factory service performs a few validation checks to help rectify a few common issues.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>In case there is an error, the corresponding information will show up.</source>
          <target state="new">In case there is an error, the corresponding information will show up.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Take corrective actions and then re-deploy the authored pipeline.</source>
          <target state="new">Take corrective actions and then re-deploy the authored pipeline.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>You can use the editor to update and delete a pipeline.</source>
          <target state="new">You can use the editor to update and delete a pipeline.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Using Visual Studio plugin</source>
          <target state="new">Using Visual Studio plugin</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>You can use Visual Studio to author and deploy pipelines to Azure Data Factory.</source>
          <target state="new">You can use Visual Studio to author and deploy pipelines to Azure Data Factory.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>To learn more, refer to <bpt id="p1">[</bpt>Tutorial: Copy data from Azure Storage to Azure SQL (Visual Studio)<ept id="p1">](data-factory-get-started-using-vs.md)</ept>.</source>
          <target state="new">To learn more, refer to <bpt id="p1">[</bpt>Tutorial: Copy data from Azure Storage to Azure SQL (Visual Studio)<ept id="p1">](data-factory-get-started-using-vs.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Using Azure PowerShell</source>
          <target state="new">Using Azure PowerShell</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>You can use the Azure PowerShell to create pipelines in Azure Data Factory.</source>
          <target state="new">You can use the Azure PowerShell to create pipelines in Azure Data Factory.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Say, you have defined the pipeline JSON in a file at c:\DPWikisample.json.</source>
          <target state="new">Say, you have defined the pipeline JSON in a file at c:\DPWikisample.json.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>You can upload it to your Azure Data Factory instance as shown in the following example.</source>
          <target state="new">You can upload it to your Azure Data Factory instance as shown in the following example.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>To learn more about this cmdlet, see <bpt id="p1">[</bpt>New-AzureDataFactoryPipeline cmdlet<ept id="p1">](https://msdn.microsoft.com/library/dn820227.aspx)</ept>.</source>
          <target state="new">To learn more about this cmdlet, see <bpt id="p1">[</bpt>New-AzureDataFactoryPipeline cmdlet<ept id="p1">](https://msdn.microsoft.com/library/dn820227.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Using REST API</source>
          <target state="new">Using REST API</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>You can create and deploy pipeline using REST APIs too.</source>
          <target state="new">You can create and deploy pipeline using REST APIs too.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>This mechanism can be leveraged to create pipelines programmatically.</source>
          <target state="new">This mechanism can be leveraged to create pipelines programmatically.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>To learn more on this, see <bpt id="p1">[</bpt>Create or Update a Pipeline<ept id="p1">](https://msdn.microsoft.com/library/azure/dn906741.aspx)</ept>.</source>
          <target state="new">To learn more on this, see <bpt id="p1">[</bpt>Create or Update a Pipeline<ept id="p1">](https://msdn.microsoft.com/library/azure/dn906741.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Using .NET SDK</source>
          <target state="new">Using .NET SDK</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>You can create and deploy pipeline via .NET SDK too.</source>
          <target state="new">You can create and deploy pipeline via .NET SDK too.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This mechanism can be leveraged to create pipelines programmatically.</source>
          <target state="new">This mechanism can be leveraged to create pipelines programmatically.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>To learn more on this refer to <bpt id="p1">[</bpt>Create, manage, and monitor data factories programmatically<ept id="p1">](data-factory-create-data-factories-programmatically.md)</ept>.</source>
          <target state="new">To learn more on this refer to <bpt id="p1">[</bpt>Create, manage, and monitor data factories programmatically<ept id="p1">](data-factory-create-data-factories-programmatically.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Scheduling and Execution</source>
          <target state="new">Scheduling and Execution</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>So far you have understood what pipelines and activities are.</source>
          <target state="new">So far you have understood what pipelines and activities are.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>You have also taken a look at how are they defined and a high level view of the activities in Azure Data Factory.</source>
          <target state="new">You have also taken a look at how are they defined and a high level view of the activities in Azure Data Factory.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Now let us take a look at how they get executed.</source>
          <target state="new">Now let us take a look at how they get executed.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A pipeline is active only between its start time and end time.</source>
          <target state="new">A pipeline is active only between its start time and end time.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>It is not executed before the start time or after the end time.</source>
          <target state="new">It is not executed before the start time or after the end time.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>If the pipeline is paused, it will not get executed irrespective of its start and end time.</source>
          <target state="new">If the pipeline is paused, it will not get executed irrespective of its start and end time.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>For a pipeline to run, it should not be paused.</source>
          <target state="new">For a pipeline to run, it should not be paused.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>In fact, it is not the pipeline that gets executed.</source>
          <target state="new">In fact, it is not the pipeline that gets executed.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>It is the activities in the pipeline which get executed.</source>
          <target state="new">It is the activities in the pipeline which get executed.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>However they do so in the overall context of the pipeline.</source>
          <target state="new">However they do so in the overall context of the pipeline.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Scheduling and Execution<ept id="p1">](data-factory-scheduling-and-execution.md)</ept> to understand how scheduling and execution works in Azure Data Factory.</source>
          <target state="new">See <bpt id="p1">[</bpt>Scheduling and Execution<ept id="p1">](data-factory-scheduling-and-execution.md)</ept> to understand how scheduling and execution works in Azure Data Factory.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Manage &amp; Monitor</source>
          <target state="new">Manage &amp; Monitor</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Once a pipeline is deployed, you can manage and monitor your pipelines, slices and runs.</source>
          <target state="new">Once a pipeline is deployed, you can manage and monitor your pipelines, slices and runs.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Read more about it here: <bpt id="p1">[</bpt>Monitor and Manage Pipelines<ept id="p1">](data-factory-monitor-manage-pipelines.md)</ept>.</source>
          <target state="new">Read more about it here: <bpt id="p1">[</bpt>Monitor and Manage Pipelines<ept id="p1">](data-factory-monitor-manage-pipelines.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Understand <bpt id="p1">[</bpt>scheduling and execution in Azure Data Factory<ept id="p1">](data-factory-scheduling-and-execution.md)</ept>.</source>
          <target state="new">Understand <bpt id="p1">[</bpt>scheduling and execution in Azure Data Factory<ept id="p1">](data-factory-scheduling-and-execution.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Read about the <bpt id="p1">[</bpt>data movement<ept id="p1">](data-factory-data-movement-activities.md)</ept> and <bpt id="p2">[</bpt>data transformation capabilities<ept id="p2">](data-factory-data-transformation-activities.md)</ept> in Azure Data Factory</source>
          <target state="new">Read about the <bpt id="p1">[</bpt>data movement<ept id="p1">](data-factory-data-movement-activities.md)</ept> and <bpt id="p2">[</bpt>data transformation capabilities<ept id="p2">](data-factory-data-transformation-activities.md)</ept> in Azure Data Factory</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Understand <bpt id="p1">[</bpt>management and monitoring in Azure Data Factory<ept id="p1">](data-factory-monitor-manage-pipelines.md)</ept>.</source>
          <target state="new">Understand <bpt id="p1">[</bpt>management and monitoring in Azure Data Factory<ept id="p1">](data-factory-monitor-manage-pipelines.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Build and deploy your fist pipeline<ept id="p1">](data-factory-build-your-first-pipeline.md)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Build and deploy your fist pipeline<ept id="p1">](data-factory-build-your-first-pipeline.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Send Feedback</source>
          <target state="new">Send Feedback</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>We would really appreciate your feedback on this article.</source>
          <target state="new">We would really appreciate your feedback on this article.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Please take a few minutes to submit your feedback via <bpt id="p1">[</bpt>email<ept id="p1">](mailto:adfdocfeedback@microsoft.com?subject=data-factory-create-pipelines.md)</ept>.</source>
          <target state="new">Please take a few minutes to submit your feedback via <bpt id="p1">[</bpt>email<ept id="p1">](mailto:adfdocfeedback@microsoft.com?subject=data-factory-create-pipelines.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c64ba5c2871546eac2f20a7d5cc005ec5a17a63</xliffext:olfilehash>
  </header>
</xliff>