<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Our token cache should work in a simple case but, what happens when the token expires or is revoked?</source>
          <target state="new">Our token cache should work in a simple case but, what happens when the token expires or is revoked?</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The token could expire when the app is not running.</source>
          <target state="new">The token could expire when the app is not running.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This would mean the token cache is invalid.</source>
          <target state="new">This would mean the token cache is invalid.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The token could also expire while the app is actually running during a call the app makes directly or a call made by the Mobile Services library.</source>
          <target state="new">The token could also expire while the app is actually running during a call the app makes directly or a call made by the Mobile Services library.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The result will be an HTTP status code 401 "Unauthorized".</source>
          <target state="new">The result will be an HTTP status code 401 "Unauthorized".</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>We need to be able to detect an expired token, and refresh it.</source>
          <target state="new">We need to be able to detect an expired token, and refresh it.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To do this we use a <bpt id="p1">[</bpt>ServiceFilter<ept id="p1">](http://dl.windowsazure.com/androiddocs/com/microsoft/windowsazure/mobileservices/ServiceFilter.html)</ept> from the <bpt id="p2">[</bpt>Android client library<ept id="p2">](http://dl.windowsazure.com/androiddocs/)</ept>.</source>
          <target state="new">To do this we use a <bpt id="p1">[</bpt>ServiceFilter<ept id="p1">](http://dl.windowsazure.com/androiddocs/com/microsoft/windowsazure/mobileservices/ServiceFilter.html)</ept> from the <bpt id="p2">[</bpt>Android client library<ept id="p2">](http://dl.windowsazure.com/androiddocs/)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this section you will define a ServiceFilter that will detect a HTTP status code 401 response and trigger a refresh of the token and the token cache.</source>
          <target state="new">In this section you will define a ServiceFilter that will detect a HTTP status code 401 response and trigger a refresh of the token and the token cache.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Additionally, this ServiceFilter will block other outbound requests during authentication so that those requests can use the refreshed token.</source>
          <target state="new">Additionally, this ServiceFilter will block other outbound requests during authentication so that those requests can use the refreshed token.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In Eclipse, open the ToDoActivity.java file and add the following import statements:</source>
          <target state="new">In Eclipse, open the ToDoActivity.java file and add the following import statements:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add the following members to the <ph id="ph1">`ToDoActivity`</ph> class.</source>
          <target state="new">Add the following members to the <ph id="ph1">`ToDoActivity`</ph> class.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These will be used to help synchronize the authentication of the user.</source>
          <target state="new">These will be used to help synchronize the authentication of the user.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>We only want to authenticate once.</source>
          <target state="new">We only want to authenticate once.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Any calls during an authentication should wait and use the new token from the authentication in progress.</source>
          <target state="new">Any calls during an authentication should wait and use the new token from the authentication in progress.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the ToDoActivity.java file, add the following method to the ToDoActivity class that will be used to block outbound calls on other threads while authentication is in progress.</source>
          <target state="new">In the ToDoActivity.java file, add the following method to the ToDoActivity class that will be used to block outbound calls on other threads while authentication is in progress.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the ToDoActivity.java file, add the following method to the ToDoActivity class.</source>
          <target state="new">In the ToDoActivity.java file, add the following method to the ToDoActivity class.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This method will actually trigger the wait and then update the token on outbound requests when authentication is complete.</source>
          <target state="new">This method will actually trigger the wait and then update the token on outbound requests when authentication is complete.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the ToDoActivity.java file, update the <ph id="ph1">`authenticate`</ph> method of the ToDoActivity class so that it accepts a boolean parameter to allow forcing the refresh of the token and token cache.</source>
          <target state="new">In the ToDoActivity.java file, update the <ph id="ph1">`authenticate`</ph> method of the ToDoActivity class so that it accepts a boolean parameter to allow forcing the refresh of the token and token cache.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>We also need to notify any blocked threads when authentication is completed so they can pick up the new token.</source>
          <target state="new">We also need to notify any blocked threads when authentication is completed so they can pick up the new token.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In the ToDoActivity.java file, add this code for a new <ph id="ph1">`RefreshTokenCacheFilter`</ph> class inside the ToDoActivity class:</source>
          <target state="new">In the ToDoActivity.java file, add this code for a new <ph id="ph1">`RefreshTokenCacheFilter`</ph> class inside the ToDoActivity class:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This service filter will check each response for HTTP status code 401 "Unauthorized".</source>
          <target state="new">This service filter will check each response for HTTP status code 401 "Unauthorized".</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If a 401 is encountered, a new login request to obtain a new token will be setup on the UI thread.</source>
          <target state="new">If a 401 is encountered, a new login request to obtain a new token will be setup on the UI thread.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Other calls will be blocked until the login is completed, or until 5 attempts have failed.</source>
          <target state="new">Other calls will be blocked until the login is completed, or until 5 attempts have failed.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the new token is obtained, the request that triggered the 401 will be retried with the new token and any blocked calls will be retried with the new token.</source>
          <target state="new">If the new token is obtained, the request that triggered the 401 will be retried with the new token and any blocked calls will be retried with the new token.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the ToDoActivity.java file, add this code for a new <ph id="ph1">`ProgressFilter`</ph> class inside the ToDoActivity class:</source>
          <target state="new">In the ToDoActivity.java file, add this code for a new <ph id="ph1">`ProgressFilter`</ph> class inside the ToDoActivity class:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This filter will show the progress bar on the beginning of the request and will hide it when the response arrived.</source>
          <target state="new">This filter will show the progress bar on the beginning of the request and will hide it when the response arrived.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the ToDoActivity.java file, update the <ph id="ph1">`onCreate`</ph> method as follows:</source>
          <target state="new">In the ToDoActivity.java file, update the <ph id="ph1">`onCreate`</ph> method as follows:</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7f47a0f7a940250ed10c8fbed010626185b1bf0</xliffext:olfilehash>
  </header>
</xliff>