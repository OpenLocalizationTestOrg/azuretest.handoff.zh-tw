<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Move data to and from SQL Server | Azure Data Factory</source>
          <target state="new">Move data to and from SQL Server | Azure Data Factory</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn about how to move data to/from SQL Server database that is on-premises or in an Azure VM using Azure Data Factory.</source>
          <target state="new">Learn about how to move data to/from SQL Server database that is on-premises or in an Azure VM using Azure Data Factory.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Move data to and from SQL Server on-premises or on IaaS (Azure VM) using Azure Data Factory</source>
          <target state="new">Move data to and from SQL Server on-premises or on IaaS (Azure VM) using Azure Data Factory</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This article outlines how you can use the Copy Activity in an Azure data factory to move data to SQL Server from another data store and move data from another data store to SQL Server.</source>
          <target state="new">This article outlines how you can use the Copy Activity in an Azure data factory to move data to SQL Server from another data store and move data from another data store to SQL Server.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article builds on the <bpt id="p1">[</bpt>data movement activities<ept id="p1">](data-factory-data-movement-activities.md)</ept> article which presents a general overview of data movement with copy activity and supported data store combinations.</source>
          <target state="new">This article builds on the <bpt id="p1">[</bpt>data movement activities<ept id="p1">](data-factory-data-movement-activities.md)</ept> article which presents a general overview of data movement with copy activity and supported data store combinations.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Enabling connectivity</source>
          <target state="new">Enabling connectivity</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The concepts and steps needed for connecting with SQL Server hosted on-premises or in Azure IaaS (Infrastructure-as-a-Service) VMs are the same.</source>
          <target state="new">The concepts and steps needed for connecting with SQL Server hosted on-premises or in Azure IaaS (Infrastructure-as-a-Service) VMs are the same.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In both cases, you need to leverage Data Management Gateway for connectivity.</source>
          <target state="new">In both cases, you need to leverage Data Management Gateway for connectivity.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>moving data between on-premises locations and cloud<ept id="p1">](data-factory-move-data-between-onprem-and-cloud.md)</ept> article to learn about Data Management Gateway and step-by-step instructions on setting up the gateway.</source>
          <target state="new">See <bpt id="p1">[</bpt>moving data between on-premises locations and cloud<ept id="p1">](data-factory-move-data-between-onprem-and-cloud.md)</ept> article to learn about Data Management Gateway and step-by-step instructions on setting up the gateway.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Setting up a gateway instance is a pre-requisite for connecting with SQL Server.</source>
          <target state="new">Setting up a gateway instance is a pre-requisite for connecting with SQL Server.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>While you can install the gateway on the same on-premises machine or cloud VM instance as the SQL Server for better performance it is recommended to install them on separate machines or cloud VM to avoid resource contention.</source>
          <target state="new">While you can install the gateway on the same on-premises machine or cloud VM instance as the SQL Server for better performance it is recommended to install them on separate machines or cloud VM to avoid resource contention.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Sample: Copy data from SQL Server to Azure Blob</source>
          <target state="new">Sample: Copy data from SQL Server to Azure Blob</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The sample below shows:</source>
          <target state="new">The sample below shows:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A linked service of type <bpt id="p1">[</bpt>OnPremisesSqlServer<ept id="p1">](data-factory-sqlserver-connector.md#sql-server-linked-service-properties)</ept>.</source>
          <target state="new">A linked service of type <bpt id="p1">[</bpt>OnPremisesSqlServer<ept id="p1">](data-factory-sqlserver-connector.md#sql-server-linked-service-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A linked service of type <bpt id="p1">[</bpt>AzureStorage<ept id="p1">](data-factory-azure-blob-connector.md#azure-storage-linked-service-properties)</ept>.</source>
          <target state="new">A linked service of type <bpt id="p1">[</bpt>AzureStorage<ept id="p1">](data-factory-azure-blob-connector.md#azure-storage-linked-service-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An input <bpt id="p1">[</bpt>dataset<ept id="p1">](data-factory-create-datasets.md)</ept> of type <bpt id="p2">[</bpt>SqlServerTable<ept id="p2">](data-factory-sqlserver-connector.md#sql-server-dataset-type-properties)</ept>.</source>
          <target state="new">An input <bpt id="p1">[</bpt>dataset<ept id="p1">](data-factory-create-datasets.md)</ept> of type <bpt id="p2">[</bpt>SqlServerTable<ept id="p2">](data-factory-sqlserver-connector.md#sql-server-dataset-type-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An output <bpt id="p1">[</bpt>dataset<ept id="p1">](data-factory-create-datasets.md)</ept> of type <bpt id="p2">[</bpt>AzureBlob<ept id="p2">](data-factory-azure-blob-connector.md#azure-blob-dataset-type-properties)</ept>.</source>
          <target state="new">An output <bpt id="p1">[</bpt>dataset<ept id="p1">](data-factory-create-datasets.md)</ept> of type <bpt id="p2">[</bpt>AzureBlob<ept id="p2">](data-factory-azure-blob-connector.md#azure-blob-dataset-type-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>pipeline<ept id="p1">](data-factory-create-pipelines.md)</ept> with Copy activity that uses <bpt id="p2">[</bpt>SqlSource<ept id="p2">](data-factory-sqlserver-connector.md#sql-server-copy-activity-type-properties)</ept> and <bpt id="p3">[</bpt>BlobSink<ept id="p3">](data-factory-azure-blob-connector.md#azure-blob-copy-activity-type-properties)</ept>.</source>
          <target state="new">The <bpt id="p1">[</bpt>pipeline<ept id="p1">](data-factory-create-pipelines.md)</ept> with Copy activity that uses <bpt id="p2">[</bpt>SqlSource<ept id="p2">](data-factory-sqlserver-connector.md#sql-server-copy-activity-type-properties)</ept> and <bpt id="p3">[</bpt>BlobSink<ept id="p3">](data-factory-azure-blob-connector.md#azure-blob-copy-activity-type-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The sample copies data belonging to a time series from a table in SQL Server database to a blob every hour.</source>
          <target state="new">The sample copies data belonging to a time series from a table in SQL Server database to a blob every hour.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The JSON properties used in these samples are described in sections following the samples.</source>
          <target state="new">The JSON properties used in these samples are described in sections following the samples.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>As a first step, please setup the data management gateway as per the instructions in the <bpt id="p1">[</bpt>moving data between on-premises locations and cloud<ept id="p1">](data-factory-move-data-between-onprem-and-cloud.md)</ept> article.</source>
          <target state="new">As a first step, please setup the data management gateway as per the instructions in the <bpt id="p1">[</bpt>moving data between on-premises locations and cloud<ept id="p1">](data-factory-move-data-between-onprem-and-cloud.md)</ept> article.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>SQL Server linked service</source>
          <target state="new">SQL Server linked service</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Azure Blob storage linked service</source>
          <target state="new">Azure Blob storage linked service</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>SQL Server input dataset</source>
          <target state="new">SQL Server input dataset</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The sample assumes you have created a table “MyTable” in SQL Server and it contains a column called “timestampcolumn” for time series data.</source>
          <target state="new">The sample assumes you have created a table “MyTable” in SQL Server and it contains a column called “timestampcolumn” for time series data.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Setting “external”: ”true” and specifying externalData policy information the Azure Data Factory service that this is a table that is external to the data factory and not produced by an activity in the data factory.</source>
          <target state="new">Setting “external”: ”true” and specifying externalData policy information the Azure Data Factory service that this is a table that is external to the data factory and not produced by an activity in the data factory.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Azure Blob output dataset</source>
          <target state="new">Azure Blob output dataset</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Data is written to a new blob every hour (frequency: hour, interval: 1).</source>
          <target state="new">Data is written to a new blob every hour (frequency: hour, interval: 1).</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The folder path for the blob is dynamically evaluated based on the start time of the slice that is being processed.</source>
          <target state="new">The folder path for the blob is dynamically evaluated based on the start time of the slice that is being processed.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The folder path uses year, month, day, and hours parts of the start time.</source>
          <target state="new">The folder path uses year, month, day, and hours parts of the start time.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Pipeline with Copy activity</source>
          <target state="new">Pipeline with Copy activity</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The pipeline contains a Copy Activity that is configured to use the above input and output datasets and is scheduled to run every hour.</source>
          <target state="new">The pipeline contains a Copy Activity that is configured to use the above input and output datasets and is scheduled to run every hour.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the pipeline JSON definition, the <bpt id="p1">**</bpt>source<ept id="p1">**</ept> type is set to <bpt id="p2">**</bpt>SqlSource<ept id="p2">**</ept> and <bpt id="p3">**</bpt>sink<ept id="p3">**</ept> type is set to <bpt id="p4">**</bpt>BlobSink<ept id="p4">**</ept>.</source>
          <target state="new">In the pipeline JSON definition, the <bpt id="p1">**</bpt>source<ept id="p1">**</ept> type is set to <bpt id="p2">**</bpt>SqlSource<ept id="p2">**</ept> and <bpt id="p3">**</bpt>sink<ept id="p3">**</ept> type is set to <bpt id="p4">**</bpt>BlobSink<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The SQL query specified for the <bpt id="p1">**</bpt>SqlReaderQuery<ept id="p1">**</ept> property selects the data in the past hour to copy.</source>
          <target state="new">The SQL query specified for the <bpt id="p1">**</bpt>SqlReaderQuery<ept id="p1">**</ept> property selects the data in the past hour to copy.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Sample: Copy data from Azure Blob to SQL Server</source>
          <target state="new">Sample: Copy data from Azure Blob to SQL Server</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The sample below shows:</source>
          <target state="new">The sample below shows:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The linked service of type <bpt id="p1">[</bpt>OnPremisesSqlServer<ept id="p1">](data-factory-sqlserver-connector.md#sql-server-linked-service-properties)</ept>.</source>
          <target state="new">The linked service of type <bpt id="p1">[</bpt>OnPremisesSqlServer<ept id="p1">](data-factory-sqlserver-connector.md#sql-server-linked-service-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The linked service of type <bpt id="p1">[</bpt>AzureStorage<ept id="p1">](data-factory-azure-blob-connector.md#azure-storage-linked-service-properties)</ept>.</source>
          <target state="new">The linked service of type <bpt id="p1">[</bpt>AzureStorage<ept id="p1">](data-factory-azure-blob-connector.md#azure-storage-linked-service-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An input <bpt id="p1">[</bpt>dataset<ept id="p1">](data-factory-create-datasets.md)</ept> of type <bpt id="p2">[</bpt>AzureBlob<ept id="p2">](data-factory-azure-blob-connector.md#azure-blob-dataset-type-properties)</ept>.</source>
          <target state="new">An input <bpt id="p1">[</bpt>dataset<ept id="p1">](data-factory-create-datasets.md)</ept> of type <bpt id="p2">[</bpt>AzureBlob<ept id="p2">](data-factory-azure-blob-connector.md#azure-blob-dataset-type-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An output <bpt id="p1">[</bpt>dataset<ept id="p1">](data-factory-create-datasets.md)</ept> of type <bpt id="p2">[</bpt>SqlServerTable<ept id="p2">](data-factory-sqlserver-connector.md#sql-server-dataset-type-properties)</ept>.</source>
          <target state="new">An output <bpt id="p1">[</bpt>dataset<ept id="p1">](data-factory-create-datasets.md)</ept> of type <bpt id="p2">[</bpt>SqlServerTable<ept id="p2">](data-factory-sqlserver-connector.md#sql-server-dataset-type-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>pipeline<ept id="p1">](data-factory-create-pipelines.md)</ept> with Copy activity that uses <bpt id="p2">[</bpt>BlobSource<ept id="p2">](data-factory-azure-blob-connector.md#azure-blob-copy-activity-type-properties)</ept> and <bpt id="p3">[</bpt>SqlSink<ept id="p3">](data-factory-sqlserver-connector.md#sql-server-copy-activity-type-properties)</ept>.</source>
          <target state="new">The <bpt id="p1">[</bpt>pipeline<ept id="p1">](data-factory-create-pipelines.md)</ept> with Copy activity that uses <bpt id="p2">[</bpt>BlobSource<ept id="p2">](data-factory-azure-blob-connector.md#azure-blob-copy-activity-type-properties)</ept> and <bpt id="p3">[</bpt>SqlSink<ept id="p3">](data-factory-sqlserver-connector.md#sql-server-copy-activity-type-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The sample copies data belonging to a time series from Azure blob to a table in SQL Server database every hour.</source>
          <target state="new">The sample copies data belonging to a time series from Azure blob to a table in SQL Server database every hour.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The JSON properties used in these samples are described in sections following the samples.</source>
          <target state="new">The JSON properties used in these samples are described in sections following the samples.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>SQL Server linked service</source>
          <target state="new">SQL Server linked service</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Azure Blob storage linked service</source>
          <target state="new">Azure Blob storage linked service</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Azure Blob input dataset</source>
          <target state="new">Azure Blob input dataset</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Data is picked up from a new blob every hour (frequency: hour, interval: 1).</source>
          <target state="new">Data is picked up from a new blob every hour (frequency: hour, interval: 1).</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The folder path and file name for the blob are dynamically evaluated based on the start time of the slice that is being processed.</source>
          <target state="new">The folder path and file name for the blob are dynamically evaluated based on the start time of the slice that is being processed.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The folder path uses year, month, and day part of the start time and file name uses the hour part of the start time.</source>
          <target state="new">The folder path uses year, month, and day part of the start time and file name uses the hour part of the start time.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>“external”: “true” setting informs the Data Factory service that this table is external to the data factory and not produced by an activity in the data factory.</source>
          <target state="new">“external”: “true” setting informs the Data Factory service that this table is external to the data factory and not produced by an activity in the data factory.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>SQL Server output dataset</source>
          <target state="new">SQL Server output dataset</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The sample copies data to a table named “MyTable” in SQL Server.</source>
          <target state="new">The sample copies data to a table named “MyTable” in SQL Server.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You should create the table in SQL Server with the same number of columns as you expect the Blob CSV file to contain.</source>
          <target state="new">You should create the table in SQL Server with the same number of columns as you expect the Blob CSV file to contain.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>New rows are added to the table every hour.</source>
          <target state="new">New rows are added to the table every hour.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Pipeline with Copy activity</source>
          <target state="new">Pipeline with Copy activity</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The pipeline contains a Copy Activity that is configured to use the above input and output datasets and is scheduled to run every hour.</source>
          <target state="new">The pipeline contains a Copy Activity that is configured to use the above input and output datasets and is scheduled to run every hour.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the pipeline JSON definition, the <bpt id="p1">**</bpt>source<ept id="p1">**</ept> type is set to <bpt id="p2">**</bpt>BlobSource<ept id="p2">**</ept> and <bpt id="p3">**</bpt>sink<ept id="p3">**</ept> type is set to <bpt id="p4">**</bpt>SqlSink<ept id="p4">**</ept>.</source>
          <target state="new">In the pipeline JSON definition, the <bpt id="p1">**</bpt>source<ept id="p1">**</ept> type is set to <bpt id="p2">**</bpt>BlobSource<ept id="p2">**</ept> and <bpt id="p3">**</bpt>sink<ept id="p3">**</ept> type is set to <bpt id="p4">**</bpt>SqlSink<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>SQL Server Linked Service properties</source>
          <target state="new">SQL Server Linked Service properties</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following table provides description for JSON elements specific to SQL Server linked service.</source>
          <target state="new">The following table provides description for JSON elements specific to SQL Server linked service.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new">Property</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="new">type</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The type property should be set to: <bpt id="p1">**</bpt>OnPremisesSqlServer<ept id="p1">**</ept>.</source>
          <target state="new">The type property should be set to: <bpt id="p1">**</bpt>OnPremisesSqlServer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>connectionString</source>
          <target state="new">connectionString</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Specify connectionString information needed to connect to the on-premises SQL Server database using either SQL authentication or Windows authentication.</source>
          <target state="new">Specify connectionString information needed to connect to the on-premises SQL Server database using either SQL authentication or Windows authentication.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>gatewayName</source>
          <target state="new">gatewayName</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Name of the gateway that the Data Factory service should use to connect to the on-premises SQL Server database.</source>
          <target state="new">Name of the gateway that the Data Factory service should use to connect to the on-premises SQL Server database.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>username</source>
          <target state="new">username</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Specify user name if you are using Windows Authentication.</source>
          <target state="new">Specify user name if you are using Windows Authentication.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>password</source>
          <target state="new">password</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Specify password for the user account you specified for the username.</source>
          <target state="new">Specify password for the user account you specified for the username.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can encrypt credentials using the <bpt id="p1">**</bpt>New-AzureDataFactoryEncryptValue<ept id="p1">**</ept> cmdlet and use them in the connection string as shown in the following example (<bpt id="p2">**</bpt>EncryptedCredential<ept id="p2">**</ept> property):</source>
          <target state="new">You can encrypt credentials using the <bpt id="p1">**</bpt>New-AzureDataFactoryEncryptValue<ept id="p1">**</ept> cmdlet and use them in the connection string as shown in the following example (<bpt id="p2">**</bpt>EncryptedCredential<ept id="p2">**</ept> property):</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Samples</source>
          <target state="new">Samples</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>JSON for using SQL Authentication</source>
          <target state="new">JSON for using SQL Authentication</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>JSON for using Windows Authentication</source>
          <target state="new">JSON for using Windows Authentication</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If username and password are specified, gateway will use them to impersonate the specified user account to connect to the on-premises SQL Server database.</source>
          <target state="new">If username and password are specified, gateway will use them to impersonate the specified user account to connect to the on-premises SQL Server database.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Otherwise, gateway will connect to the SQL Server directly with the security context of Gateway (its startup account).</source>
          <target state="new">Otherwise, gateway will connect to the SQL Server directly with the security context of Gateway (its startup account).</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Setting Credentials and Security<ept id="p1">](data-factory-move-data-between-onprem-and-cloud.md#setting-credentials-and-security)</ept> for details about setting credentials for an SQL Server data source.</source>
          <target state="new">See <bpt id="p1">[</bpt>Setting Credentials and Security<ept id="p1">](data-factory-move-data-between-onprem-and-cloud.md#setting-credentials-and-security)</ept> for details about setting credentials for an SQL Server data source.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>SQL Server Dataset type properties</source>
          <target state="new">SQL Server Dataset type properties</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For a full list of sections &amp; properties available for defining datasets, see the <bpt id="p1">[</bpt>Creating datasets<ept id="p1">](data-factory-create-datasets.md)</ept> article.</source>
          <target state="new">For a full list of sections &amp; properties available for defining datasets, see the <bpt id="p1">[</bpt>Creating datasets<ept id="p1">](data-factory-create-datasets.md)</ept> article.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Sections like structure, availability, and policy of a dataset JSON are similar for all dataset types (SQL Server, Azure blob, Azure table, etc...).</source>
          <target state="new">Sections like structure, availability, and policy of a dataset JSON are similar for all dataset types (SQL Server, Azure blob, Azure table, etc...).</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The typeProperties section is different for each type of dataset and provides information about the location of the data in the data store.</source>
          <target state="new">The typeProperties section is different for each type of dataset and provides information about the location of the data in the data store.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>typeProperties<ept id="p1">**</ept> section for the dataset of type <bpt id="p2">**</bpt>SqlServerTable<ept id="p2">**</ept> has the following properties.</source>
          <target state="new">The <bpt id="p1">**</bpt>typeProperties<ept id="p1">**</ept> section for the dataset of type <bpt id="p2">**</bpt>SqlServerTable<ept id="p2">**</ept> has the following properties.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new">Property</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>tableName</source>
          <target state="new">tableName</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Name of the table in the SQL Server Database instance that linked service refers to.</source>
          <target state="new">Name of the table in the SQL Server Database instance that linked service refers to.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new">Yes</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>SQL Server Copy Activity type properties</source>
          <target state="new">SQL Server Copy Activity type properties</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For a full list of sections &amp; properties available for defining activities, see the <bpt id="p1">[</bpt>Creating Pipelines<ept id="p1">](data-factory-create-pipelines.md)</ept> article.</source>
          <target state="new">For a full list of sections &amp; properties available for defining activities, see the <bpt id="p1">[</bpt>Creating Pipelines<ept id="p1">](data-factory-create-pipelines.md)</ept> article.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Properties like name, description, input and output tables, various policies etc are available for all types of activities.</source>
          <target state="new">Properties like name, description, input and output tables, various policies etc are available for all types of activities.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Properties available in the typeProperties section of the activity on the other hand vary with each activity type and in case of Copy activity they vary depending on the types of sources and sinks.</source>
          <target state="new">Properties available in the typeProperties section of the activity on the other hand vary with each activity type and in case of Copy activity they vary depending on the types of sources and sinks.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>In case of Copy activity when source is of type <bpt id="p1">**</bpt>SqlSource<ept id="p1">**</ept> the following properties are available in <bpt id="p2">**</bpt>typeProperties<ept id="p2">**</ept> section:</source>
          <target state="new">In case of Copy activity when source is of type <bpt id="p1">**</bpt>SqlSource<ept id="p1">**</ept> the following properties are available in <bpt id="p2">**</bpt>typeProperties<ept id="p2">**</ept> section:</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new">Property</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Allowed values</source>
          <target state="new">Allowed values</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>sqlReaderQuery</source>
          <target state="new">sqlReaderQuery</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Use the custom query to read data.</source>
          <target state="new">Use the custom query to read data.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>SQL query string.For example: select * from MyTable.</source>
          <target state="new">SQL query string.For example: select * from MyTable.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>If not specified, the SQL statement that is executed: select from MyTable.</source>
          <target state="new">If not specified, the SQL statement that is executed: select from MyTable.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SqlSink<ept id="p1">**</ept> supports the following properties:</source>
          <target state="new"><bpt id="p1">**</bpt>SqlSink<ept id="p1">**</ept> supports the following properties:</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new">Property</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Allowed values</source>
          <target state="new">Allowed values</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>sqlWriterStoredProcedureName</source>
          <target state="new">sqlWriterStoredProcedureName</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>User specified stored procedure name to upsert (update/insert) data into the target table.</source>
          <target state="new">User specified stored procedure name to upsert (update/insert) data into the target table.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Name of the stored procedure.</source>
          <target state="new">Name of the stored procedure.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>sqlWriterTableType</source>
          <target state="new">sqlWriterTableType</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>User specified table type name to be used in the above stored procedure.</source>
          <target state="new">User specified table type name to be used in the above stored procedure.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Copy activity makes the data being moved available in a temp table with this table type.</source>
          <target state="new">Copy activity makes the data being moved available in a temp table with this table type.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Stored procedure code can then merge the data being copied with existing data.</source>
          <target state="new">Stored procedure code can then merge the data being copied with existing data.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A table type name.</source>
          <target state="new">A table type name.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>writeBatchSize</source>
          <target state="new">writeBatchSize</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Inserts data into the SQL table when the buffer size reaches writeBatchSize</source>
          <target state="new">Inserts data into the SQL table when the buffer size reaches writeBatchSize</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Integer.</source>
          <target state="new">Integer.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>(unit = Row Count)</source>
          <target state="new">(unit = Row Count)</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>No (Default = 10000)</source>
          <target state="new">No (Default = 10000)</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>writeBatchTimeout</source>
          <target state="new">writeBatchTimeout</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Wait time for the batch insert operation to complete before it times out.</source>
          <target state="new">Wait time for the batch insert operation to complete before it times out.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>(Unit = timespan) Example: “00:30:00” (30 minutes).</source>
          <target state="new">(Unit = timespan) Example: “00:30:00” (30 minutes).</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>sqlWriterCleanupScript</source>
          <target state="new">sqlWriterCleanupScript</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>User specified query for Copy Activity to execute to make sure  that data of a specific slice will be cleaned up.</source>
          <target state="new">User specified query for Copy Activity to execute to make sure  that data of a specific slice will be cleaned up.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A query statement.</source>
          <target state="new">A query statement.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>sliceIdentifierColumnName</source>
          <target state="new">sliceIdentifierColumnName</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>User specified column name for Copy Activity to fill with auto generated slice identifier, which will be used to clean up data of a specific slice when rerun.</source>
          <target state="new">User specified column name for Copy Activity to fill with auto generated slice identifier, which will be used to clean up data of a specific slice when rerun.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Column name of a column with data type of binary(32).</source>
          <target state="new">Column name of a column with data type of binary(32).</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Type Mapping for SQL server &amp; Azure SQL</source>
          <target state="new">Type Mapping for SQL server &amp; Azure SQL</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>As mentioned in the <bpt id="p1">[</bpt>data movement activities<ept id="p1">](data-factory-data-movement-activities.md)</ept> article, the  Copy activity performs automatic type conversions from automatic type conversions from source types to sink types with the following 2 step approach:</source>
          <target state="new">As mentioned in the <bpt id="p1">[</bpt>data movement activities<ept id="p1">](data-factory-data-movement-activities.md)</ept> article, the  Copy activity performs automatic type conversions from automatic type conversions from source types to sink types with the following 2 step approach:</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Convert from native source types to .NET type</source>
          <target state="new">Convert from native source types to .NET type</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Convert from .NET type to native sink type</source>
          <target state="new">Convert from .NET type to native sink type</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>When moving data to &amp; from Azure SQL, SQL server, Sybase the following mappings will be used from SQL type to .NET type and vice versa.</source>
          <target state="new">When moving data to &amp; from Azure SQL, SQL server, Sybase the following mappings will be used from SQL type to .NET type and vice versa.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The mapping is same as the SQL Server Data Type Mapping for ADO.NET.</source>
          <target state="new">The mapping is same as the SQL Server Data Type Mapping for ADO.NET.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>SQL Server Database Engine type</source>
          <target state="new">SQL Server Database Engine type</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>.NET Framework type</source>
          <target state="new">.NET Framework type</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>bigint</source>
          <target state="new">bigint</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Int64</source>
          <target state="new">Int64</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>binary</source>
          <target state="new">binary</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Byte[]</source>
          <target state="new">Byte[]</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>bit</source>
          <target state="new">bit</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>char</source>
          <target state="new">char</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>String, Char[]</source>
          <target state="new">String, Char[]</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>date</source>
          <target state="new">date</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>DateTime</source>
          <target state="new">DateTime</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Datetime</source>
          <target state="new">Datetime</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>DateTime</source>
          <target state="new">DateTime</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>datetime2</source>
          <target state="new">datetime2</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>DateTime</source>
          <target state="new">DateTime</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Datetimeoffset</source>
          <target state="new">Datetimeoffset</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>DateTimeOffset</source>
          <target state="new">DateTimeOffset</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Decimal</source>
          <target state="new">Decimal</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Decimal</source>
          <target state="new">Decimal</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>FILESTREAM attribute (varbinary(max))</source>
          <target state="new">FILESTREAM attribute (varbinary(max))</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Byte[]</source>
          <target state="new">Byte[]</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="new">Float</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new">Double</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>image</source>
          <target state="new">image</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Byte[]</source>
          <target state="new">Byte[]</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="new">int</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>money</source>
          <target state="new">money</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Decimal</source>
          <target state="new">Decimal</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>nchar</source>
          <target state="new">nchar</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>String, Char[]</source>
          <target state="new">String, Char[]</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>ntext</source>
          <target state="new">ntext</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>String, Char[]</source>
          <target state="new">String, Char[]</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>numeric</source>
          <target state="new">numeric</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Decimal</source>
          <target state="new">Decimal</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>nvarchar</source>
          <target state="new">nvarchar</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>String, Char[]</source>
          <target state="new">String, Char[]</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>real</source>
          <target state="new">real</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Single</source>
          <target state="new">Single</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>rowversion</source>
          <target state="new">rowversion</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Byte[]</source>
          <target state="new">Byte[]</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>smalldatetime</source>
          <target state="new">smalldatetime</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>DateTime</source>
          <target state="new">DateTime</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>smallint</source>
          <target state="new">smallint</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Int16</source>
          <target state="new">Int16</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>smallmoney</source>
          <target state="new">smallmoney</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Decimal</source>
          <target state="new">Decimal</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>sql_variant</source>
          <target state="new">sql_variant</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Object *</source>
          <target state="new">Object *</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>text</source>
          <target state="new">text</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>String, Char[]</source>
          <target state="new">String, Char[]</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>time</source>
          <target state="new">time</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>TimeSpan</source>
          <target state="new">TimeSpan</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>timestamp</source>
          <target state="new">timestamp</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Byte[]</source>
          <target state="new">Byte[]</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>tinyint</source>
          <target state="new">tinyint</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="new">Byte</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>uniqueidentifier</source>
          <target state="new">uniqueidentifier</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Guid</source>
          <target state="new">Guid</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>varbinary</source>
          <target state="new">varbinary</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Byte[]</source>
          <target state="new">Byte[]</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>varchar</source>
          <target state="new">varchar</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>String, Char[]</source>
          <target state="new">String, Char[]</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>xml</source>
          <target state="new">xml</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Xml</source>
          <target state="new">Xml</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1cc89669d9543fd491a783c0ea0419c94bb2779</xliffext:olfilehash>
  </header>
</xliff>