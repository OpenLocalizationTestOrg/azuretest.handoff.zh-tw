<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open the project that you modified when you completed the tutorial <bpt id="p1">**</bpt>Get started with data<ept id="p1">**</ept>.</source>
          <target state="new">In Visual Studio, open the project that you modified when you completed the tutorial <bpt id="p1">**</bpt>Get started with data<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Press the <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> key to run the app, then type text in <bpt id="p2">**</bpt>Insert a TodoItem<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Save<ept id="p3">**</ept>.</source>
          <target state="new">Press the <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> key to run the app, then type text in <bpt id="p2">**</bpt>Insert a TodoItem<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Save<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Repeat the previous step at least three times, so that you have more than three items stored in the TodoItem table.</source>
          <target state="new">Repeat the previous step at least three times, so that you have more than three items stored in the TodoItem table.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In the MainPage.xaml.cs file, replace the <bpt id="p1">**</bpt>RefreshTodoItems<ept id="p1">**</ept> method with the following code:</source>
          <target state="new">In the MainPage.xaml.cs file, replace the <bpt id="p1">**</bpt>RefreshTodoItems<ept id="p1">**</ept> method with the following code:</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This query, when executed during data binding, returns the top three items that are not marked as completed.</source>
          <target state="new">This query, when executed during data binding, returns the top three items that are not marked as completed.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Press the <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> key to run the app.</source>
          <target state="new">Press the <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> key to run the app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Notice that only the first three results from the TodoItem table are displayed.</source>
          <target state="new">Notice that only the first three results from the TodoItem table are displayed.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>(Optional) View the URI of the request sent to the mobile service by using message inspection software, such as browser developer tools or [Fiddler].</source>
          <target state="new">(Optional) View the URI of the request sent to the mobile service by using message inspection software, such as browser developer tools or [Fiddler].</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Notice that the <ph id="ph1">`Take(3)`</ph> method was translated into the query option <ph id="ph2">`$top=3`</ph> in the query URI.</source>
          <target state="new">Notice that the <ph id="ph1">`Take(3)`</ph> method was translated into the query option <ph id="ph2">`$top=3`</ph> in the query URI.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Update the <bpt id="p1">**</bpt>RefreshTodoItems<ept id="p1">**</ept> method once more with the following code:</source>
          <target state="new">Update the <bpt id="p1">**</bpt>RefreshTodoItems<ept id="p1">**</ept> method once more with the following code:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This query skips the first three results and returns the next three after that.</source>
          <target state="new">This query skips the first three results and returns the next three after that.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This is effectively the second "page" of data, where the page size is three items.</source>
          <target state="new">This is effectively the second "page" of data, where the page size is three items.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>This tutorial uses a simplified scenario by passing hard-coded paging values to the <ph id="ph2">&lt;strong&gt;</ph>Take<ph id="ph3">&lt;/strong&gt;</ph> and <ph id="ph4">&lt;strong&gt;</ph>Skip<ph id="ph5">&lt;/strong&gt;</ph> methods.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>This tutorial uses a simplified scenario by passing hard-coded paging values to the <ph id="ph2">&lt;strong&gt;</ph>Take<ph id="ph3">&lt;/strong&gt;</ph> and <ph id="ph4">&lt;strong&gt;</ph>Skip<ph id="ph5">&lt;/strong&gt;</ph> methods.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In a real-world app, you can use queries similar to the above with a pager control or comparable UI to let users navigate to previous and next pages.</source>
          <target state="new">In a real-world app, you can use queries similar to the above with a pager control or comparable UI to let users navigate to previous and next pages.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can also call the  <ph id="ph1">&lt;strong&gt;</ph>IncludeTotalCount<ph id="ph2">&lt;/strong&gt;</ph> method to get the total count of items available on the server, along with the paged data.</source>
          <target state="new">You can also call the  <ph id="ph1">&lt;strong&gt;</ph>IncludeTotalCount<ph id="ph2">&lt;/strong&gt;</ph> method to get the total count of items available on the server, along with the paged data.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(Optional) Again view the URI of the request sent to the mobile service.</source>
          <target state="new">(Optional) Again view the URI of the request sent to the mobile service.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Notice that the <ph id="ph1">`Skip(3)`</ph> method was translated into the query option <ph id="ph2">`$skip=3`</ph> in the query URI.</source>
          <target state="new">Notice that the <ph id="ph1">`Skip(3)`</ph> method was translated into the query option <ph id="ph2">`$skip=3`</ph> in the query URI.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e4f005ba86c7e8ad17b60da1e714528531d0fcc</xliffext:olfilehash>
  </header>
</xliff>