<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create alerts on Azure Data Factory events</source>
          <target state="new">Create alerts on Azure Data Factory events</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how you can create alerts on events raised by the Azure for data factory operations.</source>
          <target state="new">Learn how you can create alerts on events raised by the Azure for data factory operations.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Creating alerts on Azure events</source>
          <target state="new">Creating alerts on Azure events</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure events provide useful insights into what is happening in your Azure resources.</source>
          <target state="new">Azure events provide useful insights into what is happening in your Azure resources.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Azure logs user events when an Azure resource (e.g. data factory) is created, updated or deleted.</source>
          <target state="new">Azure logs user events when an Azure resource (e.g. data factory) is created, updated or deleted.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When using the Azure Data Factory, events are generated when:</source>
          <target state="new">When using the Azure Data Factory, events are generated when:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Azure Data Factory is created/updated/deleted.</source>
          <target state="new">Azure Data Factory is created/updated/deleted.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Data processing (called as Runs) has started/completed.</source>
          <target state="new">Data processing (called as Runs) has started/completed.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When an on-demand HDInsight cluster is created and removed.</source>
          <target state="new">When an on-demand HDInsight cluster is created and removed.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can create alerts on these user events and configure them to send email notifications to the administrator and co-administrators of the subscription.</source>
          <target state="new">You can create alerts on these user events and configure them to send email notifications to the administrator and co-administrators of the subscription.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In addition, you can specify additional email addresses of users who need to receive email notifications when the conditions are met.</source>
          <target state="new">In addition, you can specify additional email addresses of users who need to receive email notifications when the conditions are met.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Specifying an alert definition</source>
          <target state="new">Specifying an alert definition</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To specify an alert definition, you create a JSON file describing the operations that you want to be alerted on.</source>
          <target state="new">To specify an alert definition, you create a JSON file describing the operations that you want to be alerted on.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the example below, the alert will send an email notification for the <bpt id="p1">**</bpt>RunFinished<ept id="p1">**</ept> operation.</source>
          <target state="new">In the example below, the alert will send an email notification for the <bpt id="p1">**</bpt>RunFinished<ept id="p1">**</ept> operation.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To be specific, an email notification is sent when a run in the data factory has completed and the run has failed (Status = FailedExecution).</source>
          <target state="new">To be specific, an email notification is sent when a run in the data factory has completed and the run has failed (Status = FailedExecution).</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>From the above JSON definition, <bpt id="p1">**</bpt>subStatus<ept id="p1">**</ept> can be removed if you don’t want to be alerted on a specific failure.</source>
          <target state="new">From the above JSON definition, <bpt id="p1">**</bpt>subStatus<ept id="p1">**</ept> can be removed if you don’t want to be alerted on a specific failure.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Available Operations and Statuses<ept id="p1">](#AvailableOperationsStatuses)</ept> for the list of operations and statuses (and sub-statuses).</source>
          <target state="new">See <bpt id="p1">[</bpt>Available Operations and Statuses<ept id="p1">](#AvailableOperationsStatuses)</ept> for the list of operations and statuses (and sub-statuses).</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Deploying the Alert</source>
          <target state="new">Deploying the Alert</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To deploy the alert, use the Azure PowerShell cmdlet: <bpt id="p1">**</bpt>New-AzureResourceGroupDeployment<ept id="p1">**</ept>, as shown in the following example:</source>
          <target state="new">To deploy the alert, use the Azure PowerShell cmdlet: <bpt id="p1">**</bpt>New-AzureResourceGroupDeployment<ept id="p1">**</ept>, as shown in the following example:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The StorageAccountName specifies the storage account for storing the deployed alert JSON file.</source>
          <target state="new">The StorageAccountName specifies the storage account for storing the deployed alert JSON file.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Once the resource group deployment has completed successfully, you will see the following messages:</source>
          <target state="new">Once the resource group deployment has completed successfully, you will see the following messages:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Retrieving the list of Azure Resource Group Deployments</source>
          <target state="new">Retrieving the list of Azure Resource Group Deployments</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To retrieve the list of deployed Azure Resource Group deployments, use the cmdlet: <bpt id="p1">**</bpt>Get-AzureResourceGroupDeployment<ept id="p1">**</ept>, as shown in the following example:</source>
          <target state="new">To retrieve the list of deployed Azure Resource Group deployments, use the cmdlet: <bpt id="p1">**</bpt>Get-AzureResourceGroupDeployment<ept id="p1">**</ept>, as shown in the following example:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="AvailableOperationsStatuses"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Available Operation Names and Status Values</source>
          <target state="new"><ph id="ph1">&lt;a name="AvailableOperationsStatuses"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Available Operation Names and Status Values</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Operation Name</source>
          <target state="new">Operation Name</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="new">Status</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Sub Status</source>
          <target state="new">Sub Status</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>RunStarted</source>
          <target state="new">RunStarted</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Started</source>
          <target state="new">Started</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Starting</source>
          <target state="new">Starting</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>RunFinished</source>
          <target state="new">RunFinished</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Failed/Succeeded</source>
          <target state="new">Failed/Succeeded</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>FailedResourceAllocation</source>
          <target state="new">FailedResourceAllocation</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Succeeded</source>
          <target state="new">Succeeded</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>FailedExecution</source>
          <target state="new">FailedExecution</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>TimedOut</source>
          <target state="new">TimedOut</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Canceled</source>
          <target state="new">Canceled</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>FailedValidation</source>
          <target state="new">FailedValidation</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Abandoned</source>
          <target state="new">Abandoned</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>SliceOnTime</source>
          <target state="new">SliceOnTime</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In Progress</source>
          <target state="new">In Progress</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Ontime</source>
          <target state="new">Ontime</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>SliceDelayed</source>
          <target state="new">SliceDelayed</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In Progress</source>
          <target state="new">In Progress</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Late</source>
          <target state="new">Late</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>OnDemandClusterCreateStarted</source>
          <target state="new">OnDemandClusterCreateStarted</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Started</source>
          <target state="new">Started</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>OnDemandClusterCreateSuccessful</source>
          <target state="new">OnDemandClusterCreateSuccessful</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Succeeded</source>
          <target state="new">Succeeded</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>OnDemandClusterDeleted</source>
          <target state="new">OnDemandClusterDeleted</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Succeeded</source>
          <target state="new">Succeeded</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Troubleshooting User Events</source>
          <target state="new">Troubleshooting User Events</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Run the following command to see the generated events:</source>
          <target state="new">Run the following command to see the generated events:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2f594fafc9a98099af440b1116da79a04979a24</xliffext:olfilehash>
  </header>
</xliff>