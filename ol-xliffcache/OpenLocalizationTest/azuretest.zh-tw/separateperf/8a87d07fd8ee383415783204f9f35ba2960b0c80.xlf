<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Configure Content Key Authorization Policy using Portal</source>
          <target state="new">Configure Content Key Authorization Policy using Portal</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to configure an authorization policy for a content key.</source>
          <target state="new">Learn how to configure an authorization policy for a content key.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Configure Content Key Authorization Policy</source>
          <target state="new">Configure Content Key Authorization Policy</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Microsoft Azure Media Services enables you to deliver your content encrypted with Advanced Encryption Standard (AES) (using 128-bit encryption keys) and PlayReady DRM.</source>
          <target state="new">Microsoft Azure Media Services enables you to deliver your content encrypted with Advanced Encryption Standard (AES) (using 128-bit encryption keys) and PlayReady DRM.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Media Services also provides a <bpt id="p1">**</bpt>Key\License Delivery Service<ept id="p1">**</ept> from which clients can obtain a key or license to play the encrypted content.</source>
          <target state="new">Media Services also provides a <bpt id="p1">**</bpt>Key\License Delivery Service<ept id="p1">**</ept> from which clients can obtain a key or license to play the encrypted content.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic shows how to use the <bpt id="p1">**</bpt>Azure Management Portal<ept id="p1">**</ept> to configure the content key authorization policy.</source>
          <target state="new">This topic shows how to use the <bpt id="p1">**</bpt>Azure Management Portal<ept id="p1">**</ept> to configure the content key authorization policy.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The key can later be used to dynamically encrypt your content.</source>
          <target state="new">The key can later be used to dynamically encrypt your content.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Note that currently you can encrypt the following streaming formats: HLS, MPEG DASH, and Smooth Streaming.</source>
          <target state="new">Note that currently you can encrypt the following streaming formats: HLS, MPEG DASH, and Smooth Streaming.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You cannot encrypt HDS streaming format, or progressive downloads.</source>
          <target state="new">You cannot encrypt HDS streaming format, or progressive downloads.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When a player requests a stream that is set to be dynamically encrypted, Media Services uses the configured key to dynamically encrypt your content using AES or PlayReady encryption.</source>
          <target state="new">When a player requests a stream that is set to be dynamically encrypted, Media Services uses the configured key to dynamically encrypt your content using AES or PlayReady encryption.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To decrypt the stream, the player will request the key from the key delivery service.</source>
          <target state="new">To decrypt the stream, the player will request the key from the key delivery service.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To decide whether or not the user is authorized to get the key, the service evaluates the authorization policies that you specified for the key.</source>
          <target state="new">To decide whether or not the user is authorized to get the key, the service evaluates the authorization policies that you specified for the key.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you plan to have multiple content keys or want to specify a <bpt id="p1">**</bpt>Key\License Delivery Service<ept id="p1">**</ept> URL other than the Media Services key delivery service, use Media Services .NET SDK or REST APIs.</source>
          <target state="new">If you plan to have multiple content keys or want to specify a <bpt id="p1">**</bpt>Key\License Delivery Service<ept id="p1">**</ept> URL other than the Media Services key delivery service, use Media Services .NET SDK or REST APIs.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Configure Content Key Authorization Policy using Media Services .NET SDK</source>
          <target state="new">Configure Content Key Authorization Policy using Media Services .NET SDK</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Configure Content Key Authorization Policy using Media Services REST API</source>
          <target state="new">Configure Content Key Authorization Policy using Media Services REST API</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Some considerations apply:</source>
          <target state="new">Some considerations apply:</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To be able to use dynamic packaging and dynamic encryption, you must make sure to have at least one streaming reserved unit.</source>
          <target state="new">To be able to use dynamic packaging and dynamic encryption, you must make sure to have at least one streaming reserved unit.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to Scale a Media Service<ept id="p1">](media-services-manage-origins.md#scale_streaming_endpoints)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>How to Scale a Media Service<ept id="p1">](media-services-manage-origins.md#scale_streaming_endpoints)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Your asset must contain a set of adaptive bitrate MP4s or adaptive bitrate Smooth Streaming files.</source>
          <target state="new">Your asset must contain a set of adaptive bitrate MP4s or adaptive bitrate Smooth Streaming files.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Encode an asset<ept id="p1">](media-services-encode-asset.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Encode an asset<ept id="p1">](media-services-encode-asset.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Key Delivery service caches ContentKeyAuthorizationPolicy and its related objects (policy options and restrictions) for 15 minutes.</source>
          <target state="new">The Key Delivery service caches ContentKeyAuthorizationPolicy and its related objects (policy options and restrictions) for 15 minutes.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you create a ContentKeyAuthorizationPolicy and specify to use a “Token” restriction, then test it, and then update the policy to “Open” restriction, it will take roughly 15 minutes before the policy switches to the “Open” version of the policy.</source>
          <target state="new">If you create a ContentKeyAuthorizationPolicy and specify to use a “Token” restriction, then test it, and then update the policy to “Open” restriction, it will take roughly 15 minutes before the policy switches to the “Open” version of the policy.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>How to: configure the key authorization policy</source>
          <target state="new">How to: configure the key authorization policy</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To configure the key authorization policy, select the <bpt id="p1">**</bpt>CONTENT PROTECTION<ept id="p1">**</ept> page.</source>
          <target state="new">To configure the key authorization policy, select the <bpt id="p1">**</bpt>CONTENT PROTECTION<ept id="p1">**</ept> page.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Media Services supports multiple ways of authenticating users who make key requests.</source>
          <target state="new">Media Services supports multiple ways of authenticating users who make key requests.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The content key authorization policy can have <bpt id="p1">**</bpt>open<ept id="p1">**</ept>, <bpt id="p2">**</bpt>token<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>IP<ept id="p3">**</ept> authorization restrictions (<bpt id="p4">**</bpt>IP<ept id="p4">**</ept> can be configured with REST or .NET SDK).</source>
          <target state="new">The content key authorization policy can have <bpt id="p1">**</bpt>open<ept id="p1">**</ept>, <bpt id="p2">**</bpt>token<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>IP<ept id="p3">**</ept> authorization restrictions (<bpt id="p4">**</bpt>IP<ept id="p4">**</ept> can be configured with REST or .NET SDK).</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Open restriction</source>
          <target state="new">Open restriction</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>open<ept id="p1">**</ept> restriction means the system will deliver the key to anyone who makes a key request.</source>
          <target state="new">The <bpt id="p1">**</bpt>open<ept id="p1">**</ept> restriction means the system will deliver the key to anyone who makes a key request.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This restriction might be useful for testing purposes.</source>
          <target state="new">This restriction might be useful for testing purposes.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>OpenPolicy</source>
          <target state="new">OpenPolicy</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Token restriction</source>
          <target state="new">Token restriction</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To choose the token restricted policy, press the <bpt id="p1">**</bpt>TOKEN<ept id="p1">**</ept> button.</source>
          <target state="new">To choose the token restricted policy, press the <bpt id="p1">**</bpt>TOKEN<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>token<ept id="p1">**</ept> restricted policy must be accompanied by a token issued by a <bpt id="p2">**</bpt>Secure Token Service<ept id="p2">**</ept> (STS).</source>
          <target state="new">The <bpt id="p1">**</bpt>token<ept id="p1">**</ept> restricted policy must be accompanied by a token issued by a <bpt id="p2">**</bpt>Secure Token Service<ept id="p2">**</ept> (STS).</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Media Services supports tokens in the <bpt id="p1">**</bpt>Simple Web Tokens<ept id="p1">**</ept> (<bpt id="p2">[</bpt>SWT<ept id="p2">](https://msdn.microsoft.com/library/gg185950.aspx#BKMK_2)</ept>) format and <bpt id="p3">**</bpt>JSON Web Token<ept id="p3">**</ept> (JWT) format.</source>
          <target state="new">Media Services supports tokens in the <bpt id="p1">**</bpt>Simple Web Tokens<ept id="p1">**</ept> (<bpt id="p2">[</bpt>SWT<ept id="p2">](https://msdn.microsoft.com/library/gg185950.aspx#BKMK_2)</ept>) format and <bpt id="p3">**</bpt>JSON Web Token<ept id="p3">**</ept> (JWT) format.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For information, see <bpt id="p1">[</bpt>JWT token authentication<ept id="p1">](http://www.gtrifonov.com/2015/01/03/jwt-token-authentication-in-azure-media-services-and-dynamic-encryption/)</ept>.</source>
          <target state="new">For information, see <bpt id="p1">[</bpt>JWT token authentication<ept id="p1">](http://www.gtrifonov.com/2015/01/03/jwt-token-authentication-in-azure-media-services-and-dynamic-encryption/)</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Media Services does not provide <bpt id="p1">**</bpt>Secure Token Services<ept id="p1">**</ept>.</source>
          <target state="new">Media Services does not provide <bpt id="p1">**</bpt>Secure Token Services<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can create a custom STS or leverage Microsoft Azure ACS to issue tokens.</source>
          <target state="new">You can create a custom STS or leverage Microsoft Azure ACS to issue tokens.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The STS must be configured to create a token signed with the specified key and issue claims that you specified in the token restriction configuration.</source>
          <target state="new">The STS must be configured to create a token signed with the specified key and issue claims that you specified in the token restriction configuration.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The Media Services key delivery service will return the encryption key to the client if the token is valid and the claims in the token match those configured for the content key.</source>
          <target state="new">The Media Services key delivery service will return the encryption key to the client if the token is valid and the claims in the token match those configured for the content key.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Use Azure ACS to issue tokens<ept id="p1">](http://mingfeiy.com/acs-with-key-services)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Use Azure ACS to issue tokens<ept id="p1">](http://mingfeiy.com/acs-with-key-services)</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When configuring the <bpt id="p1">**</bpt>TOKEN<ept id="p1">**</ept> restricted policy, you must set values for <bpt id="p2">**</bpt>verification key<ept id="p2">**</ept>, <bpt id="p3">**</bpt>issuer<ept id="p3">**</ept> and <bpt id="p4">**</bpt>audience<ept id="p4">**</ept>.</source>
          <target state="new">When configuring the <bpt id="p1">**</bpt>TOKEN<ept id="p1">**</ept> restricted policy, you must set values for <bpt id="p2">**</bpt>verification key<ept id="p2">**</ept>, <bpt id="p3">**</bpt>issuer<ept id="p3">**</ept> and <bpt id="p4">**</bpt>audience<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The primary verification key contains the key that the token was signed with, issuer is the secure token service that issues the token.</source>
          <target state="new">The primary verification key contains the key that the token was signed with, issuer is the secure token service that issues the token.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The audience (sometimes called scope) describes the intent of the token or the resource the token authorizes access to.</source>
          <target state="new">The audience (sometimes called scope) describes the intent of the token or the resource the token authorizes access to.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The Media Services key delivery service validates that these values in the token match the values in the template.</source>
          <target state="new">The Media Services key delivery service validates that these values in the token match the values in the template.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>PlayReady</source>
          <target state="new">PlayReady</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When protecting your content with <bpt id="p1">**</bpt>PlayReady<ept id="p1">**</ept>, one of the things you need to specify in your authorization policy is an XML string that defines the PlayReady license template.</source>
          <target state="new">When protecting your content with <bpt id="p1">**</bpt>PlayReady<ept id="p1">**</ept>, one of the things you need to specify in your authorization policy is an XML string that defines the PlayReady license template.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>By default, the following policy is set:</source>
          <target state="new">By default, the following policy is set:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can click the <bpt id="p1">**</bpt>import policy xml<ept id="p1">**</ept> button and provide a different XML which conforms to the  XML Schema defined <bpt id="p2">[</bpt>here<ept id="p2">](https://msdn.microsoft.com/library/azure/dn783459.aspx)</ept>.</source>
          <target state="new">You can click the <bpt id="p1">**</bpt>import policy xml<ept id="p1">**</ept> button and provide a different XML which conforms to the  XML Schema defined <bpt id="p2">[</bpt>here<ept id="p2">](https://msdn.microsoft.com/library/azure/dn783459.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Now that you have configured content key's authorization policy, go to the <bpt id="p1">[</bpt>How to: Use the Azure Management Portal to enable encryption<ept id="p1">](../media-services-manage-content#encrypt/)</ept> topic.</source>
          <target state="new">Now that you have configured content key's authorization policy, go to the <bpt id="p1">[</bpt>How to: Use the Azure Management Portal to enable encryption<ept id="p1">](../media-services-manage-content#encrypt/)</ept> topic.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a87d07fd8ee383415783204f9f35ba2960b0c80</xliffext:olfilehash>
  </header>
</xliff>