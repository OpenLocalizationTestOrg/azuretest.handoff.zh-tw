{
  "nodes": [
    {
      "content": "Connect to and query your SQL Database with C",
      "pos": [
        27,
        72
      ]
    },
    {
      "content": "Code sample for a C# client using ADO.NET to connect to and interact with the AdventureWorks database on the Azure SQL Database cloud service.",
      "pos": [
        92,
        234
      ]
    },
    {
      "content": "Connect to and query your SQL Database with C&amp;#x23;",
      "pos": [
        561,
        612
      ]
    },
    {
      "content": "This topic provides a C# code sample that shows you how to connect to an existing AdventureWorks SQL Database by using ADO.NET.",
      "pos": [
        615,
        742
      ]
    },
    {
      "content": "The sample compiles to a console application that queries the database and displays the result set.",
      "pos": [
        743,
        842
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        848,
        861
      ]
    },
    {
      "content": "An existing AdventureWorks database on Azure SQL Database.",
      "pos": [
        866,
        924
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Create one in minutes<ept id=\"p1\">](sql-database-get-started.md)</ept>.",
      "pos": [
        925,
        978
      ]
    },
    {
      "content": "Visual Studio with the .NET Framework",
      "pos": [
        982,
        1019
      ]
    },
    {
      "content": "Step 1: Console application",
      "pos": [
        1093,
        1120
      ]
    },
    {
      "content": "Create a C# console application using Visual Studio.",
      "pos": [
        1126,
        1178
      ]
    },
    {
      "content": "Connect and query",
      "pos": [
        1183,
        1200
      ]
    },
    {
      "content": "Step 2: SQL code sample",
      "pos": [
        1276,
        1299
      ]
    },
    {
      "content": "Copy and paste the code sample below into your console application.",
      "pos": [
        1305,
        1372
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.WARNING]</ph> The code sample is designed to be as short as possible to make it easy to understand.",
      "pos": [
        1377,
        1478
      ]
    },
    {
      "content": "The sample is not meant to be used in production.",
      "pos": [
        1479,
        1528
      ]
    },
    {
      "content": "This code is not meant for production.",
      "pos": [
        1531,
        1569
      ]
    },
    {
      "content": "If you would like to implement production ready code, the following are considered industry best practices:",
      "pos": [
        1570,
        1677
      ]
    },
    {
      "content": "Exception handling.",
      "pos": [
        1682,
        1701
      ]
    },
    {
      "content": "Retry logic for transient errors.",
      "pos": [
        1704,
        1737
      ]
    },
    {
      "content": "Safe storage of passwords in a configuration file.",
      "pos": [
        1740,
        1790
      ]
    },
    {
      "content": "Source code for C# sample",
      "pos": [
        1798,
        1823
      ]
    },
    {
      "pos": [
        1826,
        1879
      ],
      "content": "Paste this source code into your <bpt id=\"p1\">**</bpt>Program.cs<ept id=\"p1\">**</ept> file."
    },
    {
      "content": "Step 3: Find the connection string for your database",
      "pos": [
        3636,
        3688
      ]
    },
    {
      "pos": [
        3694,
        3752
      ],
      "content": "Open the <bpt id=\"p1\">[</bpt>Azure preview portal<ept id=\"p1\">](http://portal.azure.com/)</ept>."
    },
    {
      "pos": [
        3756,
        3881
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Browse<ept id=\"p1\">**</ept> &gt; <bpt id=\"p2\">**</bpt>SQL Databases<ept id=\"p2\">**</ept> &gt; <bpt id=\"p3\">**</bpt>“Adventure Works” Database<ept id=\"p3\">**</ept>&gt; <bpt id=\"p4\">**</bpt>Properties<ept id=\"p4\">**</ept> &gt; <bpt id=\"p5\">**</bpt>Show Database Connection Strings<ept id=\"p5\">**</ept>."
    },
    {
      "content": "Portal",
      "pos": [
        3886,
        3892
      ]
    },
    {
      "content": "On the database connection strings blade, you can find the appropriate connection strings for ADO.NET, ODBC, PHP, and JDBC.",
      "pos": [
        3959,
        4082
      ]
    },
    {
      "content": "Step 4: Substitute real connection information",
      "pos": [
        4088,
        4134
      ]
    },
    {
      "pos": [
        4139,
        4334
      ],
      "content": "In the source code you pasted, replace the <bpt id=\"p1\">*</bpt>[Your_Connection_String]<ept id=\"p1\">*</ept> placeholder with the connection string, and be sure to replace <bpt id=\"p2\">*</bpt>your_password_here<ept id=\"p2\">*</ept> in that string with your actual password."
    },
    {
      "content": "Step 5: Run the application",
      "pos": [
        4340,
        4367
      ]
    },
    {
      "pos": [
        4373,
        4445
      ],
      "content": "To build and run your application, click <bpt id=\"p1\">**</bpt>DEBUG<ept id=\"p1\">**</ept> &gt; <bpt id=\"p2\">**</bpt>Start Debugging<ept id=\"p2\">**</ept>"
    },
    {
      "content": "The program prints the query results to the console window.",
      "pos": [
        4449,
        4508
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Connect to and query your SQL Database with C#\"\n    description=\"Code sample for a C# client using ADO.NET to connect to and interact with the AdventureWorks database on the Azure SQL Database cloud service.\"\n    services=\"sql-database\"\n    documentationCenter=\"\"\n    authors=\"ckarst\"\n    manager=\"jeffreyg\"\n    editor=\"\"/>\n\n\n<tags\n    ms.service=\"sql-database\"\n    ms.workload=\"data-management\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"dotnet\"\n    ms.topic=\"get-started-article\" \n    ms.date=\"07/17/2015\"\n    ms.author=\"cakarst\"/>\n\n\n# Connect to and query your SQL Database with C&#x23;\n\n\nThis topic provides a C# code sample that shows you how to connect to an existing AdventureWorks SQL Database by using ADO.NET. The sample compiles to a console application that queries the database and displays the result set.\n\n\n## Prerequisites\n\n\n- An existing AdventureWorks database on Azure SQL Database. [Create one in minutes](sql-database-get-started.md).\n- [Visual Studio with the .NET Framework](https://www.visualstudio.com/en-us/visual-studio-homepage-vs.aspx)\n\n\n## Step 1: Console application\n\n\n1. Create a C# console application using Visual Studio.\n\n\n![Connect and query](./media/sql-database-connect-query/ConnectandQuery_VisualStudio.png)\n\n\n## Step 2: SQL code sample\n\n\n1. Copy and paste the code sample below into your console application.\n\n\n> [AZURE.WARNING] The code sample is designed to be as short as possible to make it easy to understand. The sample is not meant to be used in production.\n\n\nThis code is not meant for production. If you would like to implement production ready code, the following are considered industry best practices:\n\n\n- Exception handling.\n- Retry logic for transient errors.\n- Safe storage of passwords in a configuration file.\n\n\n\n### Source code for C# sample\n\n\nPaste this source code into your **Program.cs** file.\n\n\n    using System;  // C#\n    using System.Collections.Generic;\n    using System.Linq;\n    using System.Text;\n    using System.Threading.Tasks;\n    using System.Data.SqlClient;\n\n    namespace ConnectandQuery_Example\n    {\n        class Program\n        {\n            static void Main()\n            {\n                string SQLConnectionString = \"[Your_Connection_String]\";\n                // Create a SqlConnection from the provided connection string.\n                using (SqlConnection connection = new SqlConnection(SQLConnectionString))\n                {\n                    // Begin to formulate the command.\n                    SqlCommand command = new SqlCommand();\n                    command.Connection = connection;\n\n                    // Specify the query to be executed.\n                    command.CommandType = System.Data.CommandType.Text;\n                        command.CommandText =\n                        @\"SELECT TOP 10\n                        CustomerID, NameStyle, Title, FirstName, LastName\n                        FROM SalesLT.Customer\";\n\n                    // Open connection to database.\n                    connection.Open();\n\n                    // Read data from the query.\n                    SqlDataReader reader = command.ExecuteReader();\n                    while (reader.Read())\n                    {\n                        // Formatting will depend on the contents of the query.\n                        Console.WriteLine(\"Value: {0}, {1}, {2}, {3}, {4}\",\n                            reader[0], reader[1], reader[2], reader[3], reader[4]);\n                    }\n                }\n                Console.WriteLine(\"Press any key to continue...\");\n                Console.ReadKey();\n            }\n        }\n    }\n\n\n## Step 3: Find the connection string for your database\n\n\n1. Open the [Azure preview portal](http://portal.azure.com/).\n2. Click **Browse** > **SQL Databases** > **“Adventure Works” Database**> **Properties** > **Show Database Connection Strings**.\n\n\n![Portal](./media/sql-database-connect-query/ConnectandQuery_portal.png)\n\n\nOn the database connection strings blade, you can find the appropriate connection strings for ADO.NET, ODBC, PHP, and JDBC.\n\n\n## Step 4: Substitute real connection information\n\n\n- In the source code you pasted, replace the *[Your_Connection_String]* placeholder with the connection string, and be sure to replace *your_password_here* in that string with your actual password.\n\n\n## Step 5: Run the application\n\n\n1. To build and run your application, click **DEBUG** > **Start Debugging**\n2. The program prints the query results to the console window.\n "
}