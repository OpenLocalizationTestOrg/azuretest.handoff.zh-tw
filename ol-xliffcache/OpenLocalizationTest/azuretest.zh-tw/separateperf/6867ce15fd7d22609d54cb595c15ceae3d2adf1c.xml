{
  "nodes": [
    {
      "content": "How to use the SendGrid email service (Node.js) | Microsoft Azure",
      "pos": [
        28,
        93
      ]
    },
    {
      "content": "Learn how send email with the SendGrid email service on Azure.",
      "pos": [
        113,
        175
      ]
    },
    {
      "content": "Code samples written using the Node.js API.",
      "pos": [
        176,
        219
      ]
    },
    {
      "content": "How to Send Email Using SendGrid from Node.js",
      "pos": [
        518,
        563
      ]
    },
    {
      "content": "This guide demonstrates how to perform common programming tasks with the",
      "pos": [
        565,
        637
      ]
    },
    {
      "content": "SendGrid email service on Azure.",
      "pos": [
        638,
        670
      ]
    },
    {
      "content": "The samples are written using",
      "pos": [
        671,
        700
      ]
    },
    {
      "content": "the Node.js API.",
      "pos": [
        701,
        717
      ]
    },
    {
      "content": "The scenarios covered include <bpt id=\"p1\">**</bpt>constructing email<ept id=\"p1\">**</ept>,",
      "pos": [
        718,
        771
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>sending email<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>adding attachments<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>using filters<ept id=\"p3\">**</ept>, and",
      "pos": [
        772,
        837
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>updating properties<ept id=\"p1\">**</ept>.",
      "pos": [
        838,
        862
      ]
    },
    {
      "content": "For more information on SendGrid and sending",
      "pos": [
        863,
        907
      ]
    },
    {
      "content": "email, see the <bpt id=\"p1\">[</bpt>Next Steps<ept id=\"p1\">](#next-steps)</ept> section.",
      "pos": [
        908,
        957
      ]
    },
    {
      "content": "What is the SendGrid Email Service?",
      "pos": [
        962,
        997
      ]
    },
    {
      "content": "SendGrid is a [cloud-based email service] that provides reliable",
      "pos": [
        999,
        1063
      ]
    },
    {
      "content": "[transactional email delivery], scalability, and real-time analytics along with flexible APIs",
      "pos": [
        1064,
        1157
      ]
    },
    {
      "content": "that make custom integration easy.",
      "pos": [
        1158,
        1192
      ]
    },
    {
      "content": "Common SendGrid usage scenarios",
      "pos": [
        1193,
        1224
      ]
    },
    {
      "content": "include:",
      "pos": [
        1225,
        1233
      ]
    },
    {
      "content": "Automatically sending receipts to customers",
      "pos": [
        1239,
        1282
      ]
    },
    {
      "pos": [
        1287,
        1381
      ],
      "content": "Administering distribution lists for sending customers monthly\ne-fliers and special offers",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Administering distribution lists for sending customers monthly",
          "pos": [
            0,
            62
          ]
        },
        {
          "content": "e-fliers and special offers",
          "pos": [
            63,
            90
          ]
        }
      ]
    },
    {
      "pos": [
        1386,
        1478
      ],
      "content": "Collecting real-time metrics for things like blocked e-mail, and\ncustomer responsiveness",
      "leadings": [
        "",
        "    "
      ],
      "nodes": [
        {
          "content": "Collecting real-time metrics for things like blocked e-mail, and",
          "pos": [
            0,
            64
          ]
        },
        {
          "content": "customer responsiveness",
          "pos": [
            65,
            88
          ]
        }
      ]
    },
    {
      "content": "Generating reports to help identify trends",
      "pos": [
        1483,
        1525
      ]
    },
    {
      "content": "Forwarding customer inquiries",
      "pos": [
        1530,
        1559
      ]
    },
    {
      "content": "Email notifications from your application",
      "pos": [
        1564,
        1605
      ]
    },
    {
      "pos": [
        1607,
        1678
      ],
      "content": "For more information, see <bpt id=\"p1\">[</bpt>https://sendgrid.com<ept id=\"p1\">](https://sendgrid.com)</ept>."
    },
    {
      "content": "Create a SendGrid Account",
      "pos": [
        1683,
        1708
      ]
    },
    {
      "content": "Reference the SendGrid Node.js Module",
      "pos": [
        1782,
        1819
      ]
    },
    {
      "content": "The SendGrid module for Node.js can be installed through the node",
      "pos": [
        1821,
        1886
      ]
    },
    {
      "content": "package manager (npm) by using the following command:",
      "pos": [
        1887,
        1940
      ]
    },
    {
      "content": "After installation, you can require the module in your application by",
      "pos": [
        1968,
        2037
      ]
    },
    {
      "content": "using the following code:",
      "pos": [
        2038,
        2063
      ]
    },
    {
      "content": "The SendGrid module exports the <bpt id=\"p1\">**</bpt>SendGrid<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Email<ept id=\"p2\">**</ept> functions.",
      "pos": [
        2144,
        2213
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>SendGrid<ept id=\"p1\">**</ept> is responsible for sending email through Web API,",
      "pos": [
        2214,
        2276
      ]
    },
    {
      "content": "while <bpt id=\"p1\">**</bpt>Email<ept id=\"p1\">**</ept> encapsulates an email message.",
      "pos": [
        2278,
        2324
      ]
    },
    {
      "content": "How to: Create an Email",
      "pos": [
        2329,
        2352
      ]
    },
    {
      "content": "Creating an email message using the SendGrid module involves first",
      "pos": [
        2354,
        2420
      ]
    },
    {
      "content": "creating an email message using the Email function, and then sending it",
      "pos": [
        2421,
        2492
      ]
    },
    {
      "content": "using the SendGrid function.",
      "pos": [
        2493,
        2521
      ]
    },
    {
      "content": "The following is an example of creating a",
      "pos": [
        2522,
        2563
      ]
    },
    {
      "content": "new message using the Email function:",
      "pos": [
        2564,
        2601
      ]
    },
    {
      "content": "You can also specify an HTML message for clients that support it by",
      "pos": [
        2793,
        2860
      ]
    },
    {
      "content": "setting the html property.",
      "pos": [
        2861,
        2887
      ]
    },
    {
      "content": "For example:",
      "pos": [
        2888,
        2900
      ]
    },
    {
      "content": "Setting both the text and html properties provides graceful fallback to",
      "pos": [
        2956,
        3027
      ]
    },
    {
      "content": "text content for clients that cannot support HTML messages.",
      "pos": [
        3028,
        3087
      ]
    },
    {
      "content": "For more information on all properties supported by the Email function,",
      "pos": [
        3089,
        3160
      ]
    },
    {
      "content": "see [sendgrid-nodejs][].",
      "pos": [
        3161,
        3185
      ]
    },
    {
      "content": "How to: Send an Email",
      "pos": [
        3190,
        3211
      ]
    },
    {
      "content": "After creating an email message using the Email function, you can send",
      "pos": [
        3213,
        3283
      ]
    },
    {
      "content": "it using the Web API provided by SendGrid.",
      "pos": [
        3284,
        3326
      ]
    },
    {
      "content": "Web API",
      "pos": [
        3333,
        3340
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> While the above examples show passing in an email object and",
      "pos": [
        3473,
        3546
      ]
    },
    {
      "content": "callback function, you can also directly invoke the send",
      "pos": [
        3547,
        3603
      ]
    },
    {
      "content": "function by directly specifying email properties.",
      "pos": [
        3604,
        3653
      ]
    },
    {
      "content": "For example:",
      "pos": [
        3654,
        3666
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"How to use the SendGrid email service (Node.js) | Microsoft Azure\" \n    description=\"Learn how send email with the SendGrid email service on Azure. Code samples written using the Node.js API.\" \n    services=\"\" \n    documentationCenter=\"nodejs\" \n    authors=\"erikre\" \n    manager=\"wpickett\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"multiple\" \n    ms.workload=\"na\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"nodejs\" \n    ms.topic=\"article\" \n    ms.date=\"08/31/2015\" \n    ms.author=\"erikre\"/>\n# How to Send Email Using SendGrid from Node.js\n\nThis guide demonstrates how to perform common programming tasks with the\nSendGrid email service on Azure. The samples are written using\nthe Node.js API. The scenarios covered include **constructing email**,\n**sending email**, **adding attachments**, **using filters**, and\n**updating properties**. For more information on SendGrid and sending\nemail, see the [Next Steps](#next-steps) section.\n\n## What is the SendGrid Email Service?\n\nSendGrid is a [cloud-based email service] that provides reliable\n[transactional email delivery], scalability, and real-time analytics along with flexible APIs\nthat make custom integration easy. Common SendGrid usage scenarios\ninclude:\n\n-   Automatically sending receipts to customers\n-   Administering distribution lists for sending customers monthly\n    e-fliers and special offers\n-   Collecting real-time metrics for things like blocked e-mail, and\n    customer responsiveness\n-   Generating reports to help identify trends\n-   Forwarding customer inquiries\n-   Email notifications from your application\n\nFor more information, see [https://sendgrid.com](https://sendgrid.com).\n\n## Create a SendGrid Account\n\n[AZURE.INCLUDE [sendgrid-sign-up](../includes/sendgrid-sign-up.md)]\n\n## Reference the SendGrid Node.js Module\n\nThe SendGrid module for Node.js can be installed through the node\npackage manager (npm) by using the following command:\n\n    npm install sendgrid\n\nAfter installation, you can require the module in your application by\nusing the following code:\n\n    var sendgrid = require('sendgrid')(sendgrid_username, sendgrid_password);\n\nThe SendGrid module exports the **SendGrid** and **Email** functions.\n**SendGrid** is responsible for sending email through Web API, \nwhile **Email** encapsulates an email message.\n\n## How to: Create an Email\n\nCreating an email message using the SendGrid module involves first\ncreating an email message using the Email function, and then sending it\nusing the SendGrid function. The following is an example of creating a\nnew message using the Email function:\n\n    var email = new sendgrid.Email({\n        to: 'john@contoso.com',\n        from: 'anna@contoso.com',\n        subject: 'test mail',\n        text: 'This is a sample email message.'\n    });\n\nYou can also specify an HTML message for clients that support it by\nsetting the html property. For example:\n\n    html: This is a sample <b>HTML<b> email message.\n\nSetting both the text and html properties provides graceful fallback to\ntext content for clients that cannot support HTML messages.\n\nFor more information on all properties supported by the Email function,\nsee [sendgrid-nodejs][].\n\n## How to: Send an Email\n\nAfter creating an email message using the Email function, you can send\nit using the Web API provided by SendGrid. \n\n### Web API\n\n    sendgrid.send(email, function(err, json){\n        if(err) { return console.error(err); }\n        console.log(json);\n    });\n\n> [AZURE.NOTE] While the above examples show passing in an email object and\ncallback function, you can also directly invoke the send\nfunction by directly specifying email properties. For example:  \n>\n>`````\nsendgrid.send({\n    to: 'john@contoso.com',\n    from: 'anna@contoso.com',\n    subject: 'test mail',\n    text: 'This is a sample email message.'\n});\n`````\n\n## How to: Add an Attachment\n\nAttachments can be added to a message by specifying the file name(s) and\npath(s) in the **files** property. The following example demonstrates\nsending an attachment:\n\n    sendgrid.send({\n        to: 'john@contoso.com',\n        from: 'anna@contoso.com',\n        subject: 'test mail',\n        text: 'This is a sample email message.',\n        files: [\n            {\n                filename:     '',           // required only if file.content is used.\n                contentType:  '',           // optional\n                cid:          '',           // optional, used to specify cid for inline content\n                path:         '',           //\n                url:          '',           // == One of these three options is required\n                content:      ('' | Buffer) //\n            }\n        ],\n    });\n\n> [AZURE.NOTE] When using the **files** property, the file must be accessible\nthrough [fs.readFile](http://nodejs.org/docs/v0.6.7/api/fs.html#fs.readFile). If the file you wish to attach is hosted in Azure Storage, such as in a Blob container, you must first copy the file to local storage or to an Azure drive before it can be sent as an attachment using the **files** property.\n\n## How to: Use Filters to Enable Footers and Tracking\n\nSendGrid provides additional email functionality through the use of\nfilters. These are settings that can be added to an email message to\nenable specific functionality such as enabling click tracking, Google\nanalytics, subscription tracking, and so on. For a full list of filters,\nsee [Filter Settings][].\n\nFilters can be applied to a message by using the **filters** property.\nEach filter is specified by a hash containing filter-specific settings.\nThe following examples demonstrate the footer and click tracking filters:\n\n### Footer\n\n    var email = new sendgrid.Email({\n        to: 'john@contoso.com',\n        from: 'anna@contoso.com',\n        subject: 'test mail',\n        text: 'This is a sample email message.'\n    });\n    \n    email.setFilters({\n        'footer': {\n            'settings': {\n                'enable': 1,\n                'text/plain': 'This is a text footer.'\n            }\n        }\n    });\n\n    sendgrid.send(email);\n\n### Click Tracking\n\n    var email = new sendgrid.Email({\n        to: 'john@contoso.com',\n        from: 'anna@contoso.com',\n        subject: 'test mail',\n        text: 'This is a sample email message.'\n    });\n    \n    email.setFilters({\n        'clicktrack': {\n            'settings': {\n                'enable': 1\n            }\n        }\n    });\n    \n    sendgrid.send(email);\n\n## How to: Update Email Properties\n\nSome email properties can be overwritten using **set*Property*** or\nappended using **add*Property***. For example, you can add additional\nrecipients by using\n\n    email.addTo('jeff@contoso.com');\n\nor set a filter by using\n\n    email.addFilter('footer', 'enable', 1);\n    email.addFilter('footer', 'text/html', '<strong>boo</strong>');\n\nFor more information, see [sendgrid-nodejs][].\n\n## How to: Use Additional SendGrid Services\n\nSendGrid offers web-based APIs that you can use to leverage additional\nSendGrid functionality from your Azure application. For full\ndetails, see the [SendGrid API documentation][].\n\n## Next Steps\n\nNow that you've learned the basics of the SendGrid Email service, follow\nthese links to learn more.\n\n-   SendGrid Node.js module repository: [sendgrid-nodejs][]\n-   SendGrid API documentation:\n    <https://sendgrid.com/docs>\n-   SendGrid special offer for Azure customers:\n    [http://sendgrid.com/azure.html](https://sendgrid.com/windowsazure.html)\n  [special offer]: https://sendgrid.com/windowsazure.html\n  [sendgrid-nodejs]: https://github.com/sendgrid/sendgrid-nodejs\n  [Filter Settings]: https://sendgrid.com/docs/API_Reference/SMTP_API/apps.html\n  [SendGrid API documentation]: https://sendgrid.com/docs\n  [cloud-based email service]: https://sendgrid.com/email-solutions\n  [transactional email delivery]: https://sendgrid.com/transactional-email\n\ntest\n"
}