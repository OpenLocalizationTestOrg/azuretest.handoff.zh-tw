{
  "nodes": [
    {
      "content": "Overview of the Service Fabric Reliable Actors 'ReliableDictionaryActorStateProvider' Configuration",
      "pos": [
        26,
        125
      ]
    },
    {
      "content": "Learn about configuring Service Fabric Stateful actors of type 'ReliableDictionaryActorStateProvider'",
      "pos": [
        143,
        244
      ]
    },
    {
      "content": "Configuring Reliable Actors - ReliableDictionaryActorStateProvider",
      "pos": [
        539,
        605
      ]
    },
    {
      "content": "ReliableDictionaryActorStateProvider's default configuration can be modified by changing the \"settings.xml\" file generated in the Visual Studio package root under the \"Config\" folder for the specified actor in question.",
      "pos": [
        606,
        825
      ]
    },
    {
      "content": "Service-Fabric runtime looks for pre-defined section names in the \"settings.xml\" file and consumes the configuration values while creating the underlying runtime components.",
      "pos": [
        827,
        1000
      ]
    },
    {
      "pos": [
        1004,
        1167
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Do <bpt id=\"p1\">**</bpt>NOT<ept id=\"p1\">**</ept> delete/modify the section names of the following configurations in the \"settings.xml\" file that is generated in the Visual Studio Solution."
    },
    {
      "content": "Replicator Security Configuration",
      "pos": [
        1172,
        1205
      ]
    },
    {
      "content": "Replicator Security Configurations are used to secure the communication channel that is used during replication.",
      "pos": [
        1206,
        1318
      ]
    },
    {
      "content": "This means services will not be able to see each other's replication traffic, ensuring the data that is made highly available is also secure.",
      "pos": [
        1319,
        1460
      ]
    },
    {
      "content": "By default, an empty security configuration section does not enable replication security.",
      "pos": [
        1461,
        1550
      ]
    },
    {
      "content": "Section Name",
      "pos": [
        1555,
        1567
      ]
    },
    {
      "content": "&amp;lt;ActorName&amp;gt;ServiceReplicatorSecurityConfig",
      "pos": [
        1568,
        1616
      ]
    },
    {
      "content": "Configuration Names",
      "pos": [
        1621,
        1640
      ]
    },
    {
      "pos": [
        1641,
        1730
      ],
      "content": "Refer to <bpt id=\"p1\">[</bpt>Replication Security<ept id=\"p1\">](../service-fabric/service-fabric-replication-security.md)</ept>"
    },
    {
      "content": "Replicator Configuration",
      "pos": [
        1735,
        1759
      ]
    },
    {
      "content": "Replicator Configurations are used to configure the replicator that is responsible for making the Actor State Provider state highly reliable by replicating and persisting the state locally.",
      "pos": [
        1760,
        1949
      ]
    },
    {
      "content": "The default configuration is generated by the Visual Studio template and should suffice.",
      "pos": [
        1950,
        2038
      ]
    },
    {
      "content": "This section talks about additional configurations that are available to tune the replicator.",
      "pos": [
        2039,
        2132
      ]
    },
    {
      "content": "Section Name",
      "pos": [
        2137,
        2149
      ]
    },
    {
      "content": "&amp;lt;ActorName&amp;gt;ServiceReplicatorConfig",
      "pos": [
        2150,
        2190
      ]
    },
    {
      "content": "Configuration Names",
      "pos": [
        2195,
        2214
      ]
    },
    {
      "content": "Name",
      "pos": [
        2217,
        2221
      ]
    },
    {
      "content": "Unit",
      "pos": [
        2222,
        2226
      ]
    },
    {
      "content": "Default Value",
      "pos": [
        2227,
        2240
      ]
    },
    {
      "content": "Remarks",
      "pos": [
        2241,
        2248
      ]
    },
    {
      "content": "BatchAcknowledgementInterval",
      "pos": [
        2285,
        2313
      ]
    },
    {
      "content": "Seconds",
      "pos": [
        2314,
        2321
      ]
    },
    {
      "content": "0.05",
      "pos": [
        2322,
        2326
      ]
    },
    {
      "content": "Time period for which the replicator at the secondary waits after receiving an operation before sending back an acknowledgement to the primary.",
      "pos": [
        2327,
        2470
      ]
    },
    {
      "content": "Any other acknowledgements to be sent for operations processed within this interval are sent as one response.",
      "pos": [
        2471,
        2580
      ]
    },
    {
      "content": "ReplicatorEndpoint",
      "pos": [
        2584,
        2602
      ]
    },
    {
      "content": "N/A",
      "pos": [
        2603,
        2606
      ]
    },
    {
      "content": "N/A - RequiredParameter",
      "pos": [
        2607,
        2630
      ]
    },
    {
      "content": "IP address and port that the primary/secondary replicator will use to communicate with other replicators in the replica set.",
      "pos": [
        2631,
        2755
      ]
    },
    {
      "content": "This should reference a TCP Resource Endpoint in the service manifest.",
      "pos": [
        2756,
        2826
      ]
    },
    {
      "content": "Refer to <bpt id=\"p1\">[</bpt>Service Manifest Resources<ept id=\"p1\">](service-fabric-service-manifest-resources.md)</ept> to read more about defining endpoint resources in service manifest.",
      "pos": [
        2827,
        2978
      ]
    },
    {
      "content": "RetryInterval",
      "pos": [
        2982,
        2995
      ]
    },
    {
      "content": "Seconds",
      "pos": [
        2996,
        3003
      ]
    },
    {
      "content": "5",
      "pos": [
        3004,
        3005
      ]
    },
    {
      "content": "Time period after which the replicator re-transmits a message if it does not receive an acknowledgement for an operation.",
      "pos": [
        3006,
        3127
      ]
    },
    {
      "content": "MaxReplicationMessageSize",
      "pos": [
        3130,
        3155
      ]
    },
    {
      "content": "Bytes",
      "pos": [
        3156,
        3161
      ]
    },
    {
      "content": "50MB",
      "pos": [
        3162,
        3166
      ]
    },
    {
      "content": "Maximum size of replication data that can be transmitted in a single message.",
      "pos": [
        3167,
        3244
      ]
    },
    {
      "content": "MaxPrimaryReplicationQueueSize",
      "pos": [
        3247,
        3277
      ]
    },
    {
      "content": "Number of operations",
      "pos": [
        3278,
        3298
      ]
    },
    {
      "content": "1024",
      "pos": [
        3299,
        3303
      ]
    },
    {
      "content": "Maximum number of operations in the primary queue.",
      "pos": [
        3304,
        3354
      ]
    },
    {
      "content": "An Operation is freed up after the primary replicator receives an acknowledgement from all the secondary replicators.This value must be greater than 64 and a power of 2.",
      "pos": [
        3355,
        3524
      ]
    },
    {
      "content": "MaxSecondaryReplicationQueueSize",
      "pos": [
        3527,
        3559
      ]
    },
    {
      "content": "Number of operations",
      "pos": [
        3560,
        3580
      ]
    },
    {
      "content": "2048",
      "pos": [
        3581,
        3585
      ]
    },
    {
      "content": "Maximum number of operations in the secondary queue.",
      "pos": [
        3586,
        3638
      ]
    },
    {
      "content": "An Operation is freed up after making its state highly available through persistence.",
      "pos": [
        3639,
        3724
      ]
    },
    {
      "content": "This value must be greater than 64 and a power of 2.",
      "pos": [
        3725,
        3777
      ]
    },
    {
      "content": "MaxStreamSizeInMB",
      "pos": [
        3780,
        3797
      ]
    },
    {
      "content": "MB",
      "pos": [
        3798,
        3800
      ]
    },
    {
      "content": "1024",
      "pos": [
        3801,
        3805
      ]
    },
    {
      "content": "Amount of log file space that is reserved.",
      "pos": [
        3806,
        3848
      ]
    },
    {
      "content": "The size in bytes must be larger than 16 times the MaxRecordSize in bytes.",
      "pos": [
        3849,
        3923
      ]
    },
    {
      "content": "MaxRecordSizeInKB",
      "pos": [
        3926,
        3943
      ]
    },
    {
      "content": "KB",
      "pos": [
        3944,
        3946
      ]
    },
    {
      "content": "1024",
      "pos": [
        3947,
        3951
      ]
    },
    {
      "content": "Largest record size which the replicator may write in the log.",
      "pos": [
        3952,
        4014
      ]
    },
    {
      "content": "This value must be a multiple of 4 and greater than 16.",
      "pos": [
        4015,
        4070
      ]
    },
    {
      "content": "OptimizeForLocalSSD",
      "pos": [
        4073,
        4092
      ]
    },
    {
      "content": "boolean",
      "pos": [
        4093,
        4100
      ]
    },
    {
      "content": "false",
      "pos": [
        4101,
        4106
      ]
    },
    {
      "content": "When true the log is configured so state information is written directly to the replica's dedicated log file.",
      "pos": [
        4107,
        4216
      ]
    },
    {
      "content": "This provides best performance when log files are on solid state disk media or when the VM disk IO rate is highly throttled.",
      "pos": [
        4217,
        4341
      ]
    },
    {
      "content": "When false the state information is staged in the shared log file first and then destaged to the dedicated log file.",
      "pos": [
        4342,
        4458
      ]
    },
    {
      "content": "OptimizeLogForLowerDiskUsage",
      "pos": [
        4461,
        4489
      ]
    },
    {
      "content": "boolean",
      "pos": [
        4490,
        4497
      ]
    },
    {
      "content": "false",
      "pos": [
        4498,
        4503
      ]
    },
    {
      "content": "When true the log is configured to so that the replica's dedicated log file is created using an NTFS sparse file.",
      "pos": [
        4504,
        4617
      ]
    },
    {
      "content": "This lowers the actual disk space usage for the file.",
      "pos": [
        4618,
        4671
      ]
    },
    {
      "content": "When false the file is created with fixed allocations which provide the best write performance.",
      "pos": [
        4672,
        4767
      ]
    },
    {
      "content": "SharedLogId",
      "pos": [
        4770,
        4781
      ]
    },
    {
      "content": "guid",
      "pos": [
        4782,
        4786
      ]
    },
    {
      "content": "\"\"",
      "pos": [
        4787,
        4789
      ]
    },
    {
      "content": "Specifies a unique guid to use for identifying the shared log file used with this replica.",
      "pos": [
        4790,
        4880
      ]
    },
    {
      "content": "Typically services should not use this setting however if SharedLogId is specified then SharedLogPath must also be specified.",
      "pos": [
        4881,
        5006
      ]
    },
    {
      "content": "SharedLogPath",
      "pos": [
        5009,
        5022
      ]
    },
    {
      "content": "Fully qualified pathname",
      "pos": [
        5023,
        5047
      ]
    },
    {
      "content": "\"\"",
      "pos": [
        5048,
        5050
      ]
    },
    {
      "content": "Specifies the fully qualified path where the shared log file for this replica will be created.",
      "pos": [
        5051,
        5145
      ]
    },
    {
      "content": "Typically services should not use this setting however if SharedLogPath is specified then SharedLogId must also be specified.",
      "pos": [
        5146,
        5271
      ]
    },
    {
      "content": "Sample Configuration File",
      "pos": [
        5278,
        5303
      ]
    },
    {
      "content": "Remarks",
      "pos": [
        6370,
        6377
      ]
    },
    {
      "content": "BatchAcknowledgementInterval controls replication latency.",
      "pos": [
        6378,
        6436
      ]
    },
    {
      "content": "A value of '0' results in the lowest possible latency, at the cost of throughput (as more acknowledgement messages must be sent and processed, each containing fewer acknowledgements).",
      "pos": [
        6437,
        6620
      ]
    },
    {
      "content": "The larger the value for BatchAcknowledgementInterval, the higher the overall replication throughput, at the cost of higher operation latency.",
      "pos": [
        6621,
        6763
      ]
    },
    {
      "content": "This directly translates to the latency of transaction commits.",
      "pos": [
        6764,
        6827
      ]
    },
    {
      "content": "The value for MaxStreamSizeInMB determines the amount of disk space that the replicator can use to store state information in the replica's dedicated log file.",
      "pos": [
        6829,
        6988
      ]
    },
    {
      "content": "Since the stored information state is used",
      "pos": [
        6989,
        7031
      ]
    },
    {
      "content": "to allow another replica to match the state of a primary replica, it is generally better to have a larger log file as this will reduce the amount of time it takes for the other replica to match the state",
      "pos": [
        7032,
        7235
      ]
    },
    {
      "content": "of the primary.",
      "pos": [
        7236,
        7251
      ]
    },
    {
      "content": "However larger log files may use more disk space and thus reduce the number of replicas that can be hosted on a particular node.",
      "pos": [
        7252,
        7380
      ]
    },
    {
      "content": "The OptimizeForLowerDiskUsage setting allows log file space to be \"over-provisioned\" so that active replicas can store more state information in their log files while inactive replicas would use less disk",
      "pos": [
        7384,
        7588
      ]
    },
    {
      "content": "space.",
      "pos": [
        7589,
        7595
      ]
    },
    {
      "content": "Although this allows more replicas to be hosted on a node than would otherwise happen because of a lack of disk space, by setting OptimizeForLowerDiskUsage to false the state information is written to",
      "pos": [
        7596,
        7796
      ]
    },
    {
      "content": "the log files more quickly.",
      "pos": [
        7797,
        7824
      ]
    },
    {
      "content": "The OptimizeForLocalSSD setting is used to disable writing state information to the shared log file first before destaging to the dedicated log file.",
      "pos": [
        7826,
        7975
      ]
    },
    {
      "content": "It should typically be set when the local disk storage",
      "pos": [
        7976,
        8030
      ]
    },
    {
      "content": "for the dedicated log file is solid state media as minimizing disk head movement is not an issue.",
      "pos": [
        8031,
        8128
      ]
    },
    {
      "content": "It may also be used when the VM is performing a lot of local disk IO and local disk IO rates are",
      "pos": [
        8129,
        8225
      ]
    },
    {
      "content": "significantly throttled by the VM host.",
      "pos": [
        8226,
        8265
      ]
    },
    {
      "content": "The MaxRecordSizeInKB defines the maximum size of a record that can be written by the replicator into the log file.",
      "pos": [
        8267,
        8382
      ]
    },
    {
      "content": "In most all cases the default 1024KB record size is optimal however if the service is",
      "pos": [
        8383,
        8468
      ]
    },
    {
      "content": "causing larger data items to be part of the state information then this value might need to be increased.",
      "pos": [
        8469,
        8574
      ]
    },
    {
      "content": "There is little benefit in making the MaxRecordSizeInKB smaller than 1024 as smaller records",
      "pos": [
        8575,
        8667
      ]
    },
    {
      "content": "only use the space needed for the smaller record.",
      "pos": [
        8668,
        8717
      ]
    },
    {
      "content": "It is expected that it would need to be changed in only rare cases.",
      "pos": [
        8718,
        8785
      ]
    },
    {
      "content": "The SharedLogId and SharedLogPath settings are always used together and allow a service to use a separate shared log from the default shared log for the node.",
      "pos": [
        8787,
        8945
      ]
    },
    {
      "content": "For best efficiency, as many services as",
      "pos": [
        8946,
        8986
      ]
    },
    {
      "content": "possible should specify the same shared log.",
      "pos": [
        8987,
        9031
      ]
    },
    {
      "content": "Shared log files should be placed on disks that are used solely for the shared log file so that head movement contention is reduced.",
      "pos": [
        9032,
        9164
      ]
    },
    {
      "content": "It is expected that it would need to be changed in only rare cases.",
      "pos": [
        9165,
        9232
      ]
    }
  ],
  "content": "<properties\n   pageTitle=\"Overview of the Service Fabric Reliable Actors 'ReliableDictionaryActorStateProvider' Configuration\"\n   description=\"Learn about configuring Service Fabric Stateful actors of type 'ReliableDictionaryActorStateProvider'\"\n   services=\"Service-Fabric\"\n   documentationCenter=\".net\"\n   authors=\"sumukhs\"\n   manager=\"anuragg\"\n   editor=\"\"/>\n\n<tags\n   ms.service=\"Service-Fabric\"\n   ms.devlang=\"dotnet\"\n   ms.topic=\"article\"\n   ms.tgt_pltfrm=\"NA\"\n   ms.workload=\"NA\"\n   ms.date=\"08/26/2015\"\n   ms.author=\"sumukhs\"/>\n\n# Configuring Reliable Actors - ReliableDictionaryActorStateProvider\nReliableDictionaryActorStateProvider's default configuration can be modified by changing the \"settings.xml\" file generated in the Visual Studio package root under the \"Config\" folder for the specified actor in question.\n\nService-Fabric runtime looks for pre-defined section names in the \"settings.xml\" file and consumes the configuration values while creating the underlying runtime components.\n\n> [AZURE.NOTE] Do **NOT** delete/modify the section names of the following configurations in the \"settings.xml\" file that is generated in the Visual Studio Solution.\n\n## Replicator Security Configuration\nReplicator Security Configurations are used to secure the communication channel that is used during replication. This means services will not be able to see each other's replication traffic, ensuring the data that is made highly available is also secure.\nBy default, an empty security configuration section does not enable replication security.\n### Section Name\n&lt;ActorName&gt;ServiceReplicatorSecurityConfig\n### Configuration Names\nRefer to [Replication Security](../service-fabric/service-fabric-replication-security.md)\n\n## Replicator Configuration\nReplicator Configurations are used to configure the replicator that is responsible for making the Actor State Provider state highly reliable by replicating and persisting the state locally.\nThe default configuration is generated by the Visual Studio template and should suffice. This section talks about additional configurations that are available to tune the replicator.\n### Section Name\n&lt;ActorName&gt;ServiceReplicatorConfig\n### Configuration Names\n\n|Name|Unit|Default Value|Remarks|\n|----|----|-------------|-------|\n|BatchAcknowledgementInterval|Seconds|0.05|Time period for which the replicator at the secondary waits after receiving an operation before sending back an acknowledgement to the primary. Any other acknowledgements to be sent for operations processed within this interval are sent as one response.||\n|ReplicatorEndpoint|N/A|N/A - RequiredParameter|IP address and port that the primary/secondary replicator will use to communicate with other replicators in the replica set. This should reference a TCP Resource Endpoint in the service manifest. Refer to [Service Manifest Resources](service-fabric-service-manifest-resources.md) to read more about defining endpoint resources in service manifest. |\n|RetryInterval|Seconds|5|Time period after which the replicator re-transmits a message if it does not receive an acknowledgement for an operation.|\n|MaxReplicationMessageSize|Bytes|50MB|Maximum size of replication data that can be transmitted in a single message.|\n|MaxPrimaryReplicationQueueSize|Number of operations|1024|Maximum number of operations in the primary queue. An Operation is freed up after the primary replicator receives an acknowledgement from all the secondary replicators.This value must be greater than 64 and a power of 2.|\n|MaxSecondaryReplicationQueueSize|Number of operations|2048|Maximum number of operations in the secondary queue. An Operation is freed up after making its state highly available through persistence. This value must be greater than 64 and a power of 2.|\n|MaxStreamSizeInMB|MB|1024|Amount of log file space that is reserved. The size in bytes must be larger than 16 times the MaxRecordSize in bytes.|\n|MaxRecordSizeInKB|KB|1024|Largest record size which the replicator may write in the log. This value must be a multiple of 4 and greater than 16.|\n|OptimizeForLocalSSD|boolean|false|When true the log is configured so state information is written directly to the replica's dedicated log file. This provides best performance when log files are on solid state disk media or when the VM disk IO rate is highly throttled. When false the state information is staged in the shared log file first and then destaged to the dedicated log file.|\n|OptimizeLogForLowerDiskUsage|boolean|false|When true the log is configured to so that the replica's dedicated log file is created using an NTFS sparse file. This lowers the actual disk space usage for the file. When false the file is created with fixed allocations which provide the best write performance.|\n|SharedLogId|guid|\"\"|Specifies a unique guid to use for identifying the shared log file used with this replica. Typically services should not use this setting however if SharedLogId is specified then SharedLogPath must also be specified.|\n|SharedLogPath|Fully qualified pathname|\"\"|Specifies the fully qualified path where the shared log file for this replica will be created. Typically services should not use this setting however if SharedLogPath is specified then SharedLogId must also be specified.|\n\n\n## Sample Configuration File\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Settings xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/2011/01/fabric\">\n   <Section Name=\"MyActorServiceReplicatorConfig\">\n      <Parameter Name=\"ReplicatorEndpoint\" Value=\"MyActorServiceReplicatorEndpoint\" />\n      <Parameter Name=\"BatchAcknowledgementInterval\" Value=\"0.05\"/>\n      <Parameter Name=\"MaxStreamSizeInMB\" Value=\"512\" />\n   </Section>\n   <Section Name=\"MyActorServiceReplicatorSecurityConfig\">\n      <Parameter Name=\"CredentialType\" Value=\"X509\" />\n      <Parameter Name=\"FindType\" Value=\"FindByThumbprint\" />\n      <Parameter Name=\"FindValue\" Value=\"9d c9 06 b1 69 dc 4f af fd 16 97 ac 78 1e 80 67 90 74 9d 2f\" />\n      <Parameter Name=\"StoreLocation\" Value=\"LocalMachine\" />\n      <Parameter Name=\"StoreName\" Value=\"My\" />\n      <Parameter Name=\"ProtectionLevel\" Value=\"EncryptAndSign\" />\n      <Parameter Name=\"AllowedCommonNames\" Value=\"My-Test-SAN1-Alice,My-Test-SAN1-Bob\" />\n   </Section>\n</Settings>\n```\n\n## Remarks\nBatchAcknowledgementInterval controls replication latency. A value of '0' results in the lowest possible latency, at the cost of throughput (as more acknowledgement messages must be sent and processed, each containing fewer acknowledgements).\nThe larger the value for BatchAcknowledgementInterval, the higher the overall replication throughput, at the cost of higher operation latency. This directly translates to the latency of transaction commits.\n\nThe value for MaxStreamSizeInMB determines the amount of disk space that the replicator can use to store state information in the replica's dedicated log file. Since the stored information state is used\nto allow another replica to match the state of a primary replica, it is generally better to have a larger log file as this will reduce the amount of time it takes for the other replica to match the state\nof the primary. However larger log files may use more disk space and thus reduce the number of replicas that can be hosted on a particular node.  \n\nThe OptimizeForLowerDiskUsage setting allows log file space to be \"over-provisioned\" so that active replicas can store more state information in their log files while inactive replicas would use less disk\nspace. Although this allows more replicas to be hosted on a node than would otherwise happen because of a lack of disk space, by setting OptimizeForLowerDiskUsage to false the state information is written to\nthe log files more quickly.\n\nThe OptimizeForLocalSSD setting is used to disable writing state information to the shared log file first before destaging to the dedicated log file. It should typically be set when the local disk storage\nfor the dedicated log file is solid state media as minimizing disk head movement is not an issue. It may also be used when the VM is performing a lot of local disk IO and local disk IO rates are\nsignificantly throttled by the VM host.\n\nThe MaxRecordSizeInKB defines the maximum size of a record that can be written by the replicator into the log file. In most all cases the default 1024KB record size is optimal however if the service is\ncausing larger data items to be part of the state information then this value might need to be increased. There is little benefit in making the MaxRecordSizeInKB smaller than 1024 as smaller records\nonly use the space needed for the smaller record. It is expected that it would need to be changed in only rare cases.\n\nThe SharedLogId and SharedLogPath settings are always used together and allow a service to use a separate shared log from the default shared log for the node. For best efficiency, as many services as\npossible should specify the same shared log. Shared log files should be placed on disks that are used solely for the shared log file so that head movement contention is reduced. It is expected that it would need to be changed in only rare cases.\n \n"
}