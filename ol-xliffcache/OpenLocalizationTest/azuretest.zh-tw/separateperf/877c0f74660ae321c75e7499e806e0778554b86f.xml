{
  "nodes": [
    {
      "content": "Configuring Application Insights SDK with ApplicationInsights.config or .xml",
      "pos": [
        28,
        104
      ]
    },
    {
      "content": "Enable or disable data collection modules, and add performance counters and other parameters",
      "pos": [
        124,
        216
      ]
    },
    {
      "content": "Configuring the Application Insights SDK with ApplicationInsights.config or .xml",
      "pos": [
        565,
        645
      ]
    },
    {
      "content": "The Application Insights .NET SDK consists of a number of NuGet packages.",
      "pos": [
        647,
        720
      ]
    },
    {
      "content": "The",
      "pos": [
        721,
        724
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>core package<ept id=\"p1\">](http://www.nuget.org/packages/Microsoft.ApplicationInsights)</ept> provides the API for sending telemetry to",
      "pos": [
        726,
        843
      ]
    },
    {
      "content": "the Application Insights.",
      "pos": [
        845,
        870
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Additional packages<ept id=\"p1\">](http://www.nuget.org/packages?q=Microsoft.ApplicationInsights)</ept> provide",
      "pos": [
        871,
        963
      ]
    },
    {
      "content": "telemetry <bpt id=\"p1\">_</bpt>modules<ept id=\"p1\">_</ept> and <bpt id=\"p2\">_</bpt>initializers<ept id=\"p2\">_</ept> for automatically tracking telemetry from your application and its context.",
      "pos": [
        965,
        1079
      ]
    },
    {
      "content": "By",
      "pos": [
        1080,
        1082
      ]
    },
    {
      "content": "adjusting the configuration file, you can enable or disable telemetry modules and initializers, and set parameters for",
      "pos": [
        1084,
        1202
      ]
    },
    {
      "content": "some of them.",
      "pos": [
        1204,
        1217
      ]
    },
    {
      "content": "The configuration file is named <ph id=\"ph1\">`ApplicationInsights.config`</ph> or <ph id=\"ph2\">`ApplicationInsights.xml`</ph>, depending on the type of your",
      "pos": [
        1219,
        1339
      ]
    },
    {
      "content": "application.",
      "pos": [
        1340,
        1352
      ]
    },
    {
      "content": "It is automatically added to your project when you [install some versions of the SDK][start].",
      "pos": [
        1353,
        1446
      ]
    },
    {
      "content": "It is also added to a web app",
      "pos": [
        1447,
        1476
      ]
    },
    {
      "content": "by [Status Monitor on an IIS server][redfield], or when you select the Appplication Insights",
      "pos": [
        1478,
        1570
      ]
    },
    {
      "content": "[extension for an Azure website or VM][azure].",
      "pos": [
        1572,
        1618
      ]
    },
    {
      "content": "There isn't an equivalent file to control the [SDK in a web page][client].",
      "pos": [
        1620,
        1694
      ]
    },
    {
      "content": "There's a node in the configuration file for each module.",
      "pos": [
        1696,
        1753
      ]
    },
    {
      "content": "To disable a module, delete the node or comment it out.",
      "pos": [
        1754,
        1809
      ]
    },
    {
      "pos": [
        1814,
        1920
      ],
      "content": "<bpt id=\"p1\">[</bpt>Microsoft.ApplicationInsights<ept id=\"p1\">](http://www.nuget.org/packages/Microsoft.ApplicationInsights)</ept> NuGet package"
    },
    {
      "content": "The <ph id=\"ph1\">`Microsoft.ApplicationInsights`</ph> NuGet package provides the following telemetry modules in the",
      "pos": [
        1922,
        2019
      ]
    },
    {
      "content": "<ph id=\"ph1\">`ApplicationInsights.config`</ph>.",
      "pos": [
        2021,
        2050
      ]
    },
    {
      "content": "The <ph id=\"ph1\">`DiagnosticsTelemetryModule`</ph> reports errors in the Application Insights instrumenation code itself.",
      "pos": [
        2363,
        2466
      ]
    },
    {
      "content": "For example,",
      "pos": [
        2467,
        2479
      ]
    },
    {
      "content": "if the code cannot access performance counters or if an <ph id=\"ph1\">`ITelemetryInitializer`</ph> throws an exception.",
      "pos": [
        2481,
        2581
      ]
    },
    {
      "content": "Trace telemetry",
      "pos": [
        2582,
        2597
      ]
    },
    {
      "content": "tracked by this module appears in the [Diagnostic Search][diagnostic].",
      "pos": [
        2599,
        2669
      ]
    },
    {
      "pos": [
        2674,
        2820
      ],
      "content": "<bpt id=\"p1\">[</bpt>Microsoft.ApplicationInsights.DependencyCollector<ept id=\"p1\">](http://www.nuget.org/packages/Microsoft.ApplicationInsights.DependencyCollector)</ept> NuGet package"
    },
    {
      "content": "The <ph id=\"ph1\">`Microsoft.ApplicationInsights.DependencyCollector`</ph> NuGet package provides the following telemetry modules in",
      "pos": [
        2822,
        2935
      ]
    },
    {
      "content": "<ph id=\"ph1\">`ApplicationInsights.config`</ph>.",
      "pos": [
        2937,
        2966
      ]
    },
    {
      "content": "The <ph id=\"ph1\">`DependencyTrackingTelemetryModule`</ph> tracks telemetry about calls to external dependencies made by your application,",
      "pos": [
        3317,
        3436
      ]
    },
    {
      "content": "such as HTTP requests and SQL queries.",
      "pos": [
        3438,
        3476
      ]
    },
    {
      "content": "To allow this module to work in an IIS server, you need to [install Status Monitor][redfield].",
      "pos": [
        3477,
        3571
      ]
    },
    {
      "content": "To use it in Azure web apps or VMs, [select the Application Insights extension][azure].",
      "pos": [
        3572,
        3659
      ]
    },
    {
      "pos": [
        3661,
        3806
      ],
      "content": "You can also write your own dependency tracking code using the <bpt id=\"p1\">[</bpt>TrackDependency API<ept id=\"p1\">](app-insights-api-custom-events-metrics.md#track-dependency)</ept>."
    },
    {
      "pos": [
        3811,
        3925
      ],
      "content": "<bpt id=\"p1\">[</bpt>Microsoft.ApplicationInsights.Web<ept id=\"p1\">](http://www.nuget.org/packages/Microsoft.ApplicationInsights.Web)</ept> NuGet package"
    },
    {
      "content": "The <ph id=\"ph1\">`Microsoft.ApplicationInsights.Web`</ph> NuGet package provides the following telemetry initializers and modules in the",
      "pos": [
        3927,
        4045
      ]
    },
    {
      "content": "<ph id=\"ph1\">`ApplicationInsights.config`</ph>.",
      "pos": [
        4046,
        4075
      ]
    },
    {
      "content": "Initializers",
      "pos": [
        6413,
        6425
      ]
    },
    {
      "content": "<ph id=\"ph1\">`SyntheticTelemetryInitializer`</ph> updates the <ph id=\"ph2\">`User`</ph>, <ph id=\"ph3\">`Session`</ph> and <ph id=\"ph4\">`Operation`</ph> contexts properties of all telemetry",
      "pos": [
        6431,
        6545
      ]
    },
    {
      "content": "items tracked when handling a request from a synthetic source, such as an availability test.",
      "pos": [
        6547,
        6639
      ]
    },
    {
      "content": "The Application Insights",
      "pos": [
        6640,
        6664
      ]
    },
    {
      "content": "portal does not display synthetic telemetry by default.",
      "pos": [
        6666,
        6721
      ]
    },
    {
      "content": "<ph id=\"ph1\">`ClientIpHeaderTelemetryInitializer`</ph> updates <ph id=\"ph2\">`Ip`</ph> property of the <ph id=\"ph3\">`Location`</ph> context of all telemetry items based on the",
      "pos": [
        6724,
        6844
      ]
    },
    {
      "content": "<ph id=\"ph1\">`X-Forwarded-For`</ph> HTTP header of the request.",
      "pos": [
        6846,
        6891
      ]
    },
    {
      "content": "<ph id=\"ph1\">`UserAgentTelemetryInitializer`</ph> updates the <ph id=\"ph2\">`UserAgent`</ph> property of the <ph id=\"ph3\">`User`</ph> context of all telemetry items based",
      "pos": [
        6894,
        7009
      ]
    },
    {
      "content": "on the <ph id=\"ph1\">`User-Agent`</ph> HTTP header of the request.",
      "pos": [
        7011,
        7058
      ]
    },
    {
      "content": "<ph id=\"ph1\">`OperationNameTelemetryInitializer`</ph> updates the <ph id=\"ph2\">`Name`</ph> property of the <ph id=\"ph3\">`RequestTelemetry`</ph> and the <ph id=\"ph4\">`Name`</ph> property of",
      "pos": [
        7061,
        7177
      ]
    },
    {
      "content": "the <ph id=\"ph1\">`Operation`</ph> context of all telemetry items based on the HTTP method, as well as names of ASP.NET MVC controller and",
      "pos": [
        7179,
        7298
      ]
    },
    {
      "content": "action invoked to process the request.",
      "pos": [
        7300,
        7338
      ]
    },
    {
      "pos": [
        7341,
        7533
      ],
      "content": "<ph id=\"ph1\">`OperationNameTelemetryInitializer`</ph> updates the 'Operation.Id<ph id=\"ph2\">` context property of all telemetry items tracked while \nhandling a request with the automatically generated `</ph>RequestTelemetry.Id`."
    },
    {
      "content": "<ph id=\"ph1\">`UserTelemetryInitializer`</ph> updates the <ph id=\"ph2\">`Id`</ph> and <ph id=\"ph3\">`AcquisitionDate`</ph> properties of <ph id=\"ph4\">`User`</ph> context for all telemetry items",
      "pos": [
        7536,
        7654
      ]
    },
    {
      "content": "with values extracted from the <ph id=\"ph1\">`ai_user`</ph> cookie generated by the Application Insights JavaScript instrumentation code",
      "pos": [
        7655,
        7772
      ]
    },
    {
      "content": "running in the user's browser.",
      "pos": [
        7774,
        7804
      ]
    },
    {
      "content": "<ph id=\"ph1\">`SessionTelemetryInitializer`</ph> updates the <ph id=\"ph2\">`Id`</ph> property of the <ph id=\"ph3\">`Session`</ph> context for all telemetry items with value",
      "pos": [
        7807,
        7922
      ]
    },
    {
      "content": "extracted from the <ph id=\"ph1\">`ai_session`</ph> cookie generated by the ApplicationInsights JavaScript instrumentation code running in the",
      "pos": [
        7923,
        8045
      ]
    },
    {
      "content": "user's browser.",
      "pos": [
        8046,
        8061
      ]
    },
    {
      "content": "<ph id=\"ph1\">`AzureRoleEnvironmentTelemetryInitializer`</ph> updates the <ph id=\"ph2\">`RoleName`</ph> and <ph id=\"ph3\">`RoleInstance`</ph> properties of the <ph id=\"ph4\">`Device`</ph> context",
      "pos": [
        8065,
        8184
      ]
    },
    {
      "content": "for all telemetry items with information extracted from the Azure runtime environment.",
      "pos": [
        8185,
        8271
      ]
    },
    {
      "content": "<ph id=\"ph1\">`DomainNameRoleInstanceTelemetryInitializer`</ph> updates the <ph id=\"ph2\">`RoleInstance`</ph> property of the <ph id=\"ph3\">`Device`</ph> context for all",
      "pos": [
        8274,
        8386
      ]
    },
    {
      "content": "telemetry items with the domain name of the computer where the web application is running.",
      "pos": [
        8387,
        8477
      ]
    },
    {
      "content": "<ph id=\"ph1\">`BuildInfoConfigComponentVersionTelemetryInitializer`</ph> updates the <ph id=\"ph2\">`Version`</ph> property of the <ph id=\"ph3\">`Component`</ph> context for",
      "pos": [
        8480,
        8595
      ]
    },
    {
      "content": "all telemetry items with the value extracted from the <ph id=\"ph1\">`BuildInfo.config`</ph> file produced by TFS build.",
      "pos": [
        8597,
        8697
      ]
    },
    {
      "pos": [
        8700,
        8810
      ],
      "content": "<ph id=\"ph1\">`DeviceTelemetryInitializer`</ph> updates the following properties of the <ph id=\"ph2\">`Device`</ph> context for all telemetry items."
    },
    {
      "pos": [
        8814,
        8835
      ],
      "content": "<ph id=\"ph1\">`Type`</ph> is set to \"PC\""
    },
    {
      "pos": [
        8839,
        8923
      ],
      "content": "<ph id=\"ph1\">`Id`</ph> is set to the domain name of the computer where the web application is running."
    },
    {
      "pos": [
        8927,
        9028
      ],
      "content": "<ph id=\"ph1\">`OemName`</ph> is set to the value extracted from the <ph id=\"ph2\">`Win32_ComputerSystem.Manufacturer`</ph> field using WMI."
    },
    {
      "pos": [
        9032,
        9124
      ],
      "content": "<ph id=\"ph1\">`Model`</ph> is set to the value extracted from the <ph id=\"ph2\">`Win32_ComputerSystem.Model`</ph> field using WMI."
    },
    {
      "pos": [
        9128,
        9200
      ],
      "content": "<ph id=\"ph1\">`NetworkType`</ph> is set to the value extracted from the <ph id=\"ph2\">`NetworkInterface`</ph>."
    },
    {
      "pos": [
        9204,
        9258
      ],
      "content": "<ph id=\"ph1\">`Language`</ph> is set to the name of the <ph id=\"ph2\">`CurrentCulture`</ph>."
    },
    {
      "content": "Modules",
      "pos": [
        9262,
        9269
      ]
    },
    {
      "pos": [
        9275,
        9381
      ],
      "content": "<ph id=\"ph1\">`RequestTrackingTelemetryModule`</ph> tracks requests received by your web app and measures the response times."
    },
    {
      "content": "<ph id=\"ph1\">`ExceptionTrackingTelemetryModule`</ph> tracks unhandled exceptions in your web app.",
      "pos": [
        9384,
        9463
      ]
    },
    {
      "content": "See [Failures and exceptions][exceptions].",
      "pos": [
        9464,
        9506
      ]
    },
    {
      "content": "<ph id=\"ph1\">`DeveloperModeWithDebuggerAttachedTelemetryModule`</ph> forces the Application Insights <ph id=\"ph2\">`TelemetryChannel`</ph> to send data",
      "pos": [
        9509,
        9623
      ]
    },
    {
      "content": "immediately, one telemetry item at a time, when a debugger is attached to the application process.",
      "pos": [
        9624,
        9722
      ]
    },
    {
      "content": "This reduces the",
      "pos": [
        9723,
        9739
      ]
    },
    {
      "content": "amount of time between the moment when your application tracks telemetry and when it appears on the Application Insights",
      "pos": [
        9741,
        9861
      ]
    },
    {
      "content": "portal at the cost of significant CPU and network bandwidth overhead.",
      "pos": [
        9862,
        9931
      ]
    },
    {
      "pos": [
        9936,
        10084
      ],
      "content": "<bpt id=\"p1\">[</bpt>Microsoft.ApplicationInsights.PerfCounterCollector<ept id=\"p1\">](http://www.nuget.org/packages/Microsoft.ApplicationInsights.PerfCounterCollector)</ept> NuGet package"
    },
    {
      "pos": [
        10086,
        10241
      ],
      "content": "The <ph id=\"ph1\">`Microsoft.ApplicationInsights.PerfCounterCollector`</ph> NuGet package adds the following telemetry modules to the <ph id=\"ph2\">`ApplicationInsights.config`</ph> by default."
    },
    {
      "content": "PerformanceCollectorModule",
      "pos": [
        10592,
        10618
      ]
    },
    {
      "content": "<ph id=\"ph1\">`PerformanceCollectorModule`</ph> tracks a number of Windows performance counters.",
      "pos": [
        10620,
        10697
      ]
    },
    {
      "content": "You can see these",
      "pos": [
        10698,
        10715
      ]
    },
    {
      "content": "counters when you click a chart in Metric Explorer to open its details blade.",
      "pos": [
        10717,
        10794
      ]
    },
    {
      "content": "You can monitor additional performance counters - both standard Windows counters and any others that you have added.",
      "pos": [
        10796,
        10912
      ]
    },
    {
      "content": "Use the following syntax to collect additional performance counters:",
      "pos": [
        10920,
        10988
      ]
    },
    {
      "pos": [
        11395,
        11503
      ],
      "content": "<ph id=\"ph1\">`PerformanceCounter`</ph> must be either <ph id=\"ph2\">`\\CategoryName(InstanceName)\\CounterName`</ph> or <ph id=\"ph3\">`\\CategoryName\\CounterName`</ph>"
    },
    {
      "pos": [
        11511,
        11614
      ],
      "content": "If you provide a <ph id=\"ph1\">`ReportAs`</ph> attribute, this will be used as the name displayed in Application Insights."
    },
    {
      "content": "For reporting to Application Insights, counter names must include only: letters, round brackets, forward slashes, hyphens, underscores, spaces and dots.",
      "pos": [
        11616,
        11768
      ]
    },
    {
      "content": "You must use ReportAs if the counter you want to monitor contains any invalid characters such as '#' or digits.",
      "pos": [
        11770,
        11881
      ]
    },
    {
      "pos": [
        11889,
        11948
      ],
      "content": "The following placeholders are supported as <ph id=\"ph1\">`InstanceName`</ph>:"
    },
    {
      "content": "Channel parameters (Java)",
      "pos": [
        12230,
        12255
      ]
    },
    {
      "content": "These parameters affect how the Java SDK should store and flush the telemetry data that it collects.",
      "pos": [
        12257,
        12357
      ]
    },
    {
      "content": "MaxTelemetryBufferCapacity",
      "pos": [
        12364,
        12390
      ]
    },
    {
      "content": "The number of telemetry items that can be stored in the SDK's in-memory storage.",
      "pos": [
        12392,
        12472
      ]
    },
    {
      "content": "When this number is reached, the telemetry buffer is flushed - that is, the telemetry items are sent to the Application Insights server.",
      "pos": [
        12473,
        12609
      ]
    },
    {
      "content": "Min: 1",
      "pos": [
        12615,
        12621
      ]
    },
    {
      "content": "Max: 1000",
      "pos": [
        12626,
        12635
      ]
    },
    {
      "content": "Default: 500",
      "pos": [
        12640,
        12652
      ]
    },
    {
      "content": "FlushIntervalInSeconds",
      "pos": [
        12839,
        12861
      ]
    },
    {
      "content": "Determines how often the data that is stored in the in-memory storage should be flushed (sent to Application Insights).",
      "pos": [
        12864,
        12983
      ]
    },
    {
      "content": "Min: 1",
      "pos": [
        12989,
        12995
      ]
    },
    {
      "content": "Max: 300",
      "pos": [
        13000,
        13008
      ]
    },
    {
      "content": "Default: 5",
      "pos": [
        13013,
        13023
      ]
    },
    {
      "content": "MaxTransmissionStorageCapacityInMB",
      "pos": [
        13207,
        13241
      ]
    },
    {
      "content": "Determines the maximum size in MB that is allotted to the persistent storage on the local disk.",
      "pos": [
        13243,
        13338
      ]
    },
    {
      "content": "This storage is used for persisting telemetry items that failed to be transmitted to the Application Insights endpoint.",
      "pos": [
        13339,
        13458
      ]
    },
    {
      "content": "When the storage size has been met, new telemetry items will be discarded.",
      "pos": [
        13459,
        13533
      ]
    },
    {
      "content": "Min: 1",
      "pos": [
        13539,
        13545
      ]
    },
    {
      "content": "Max: 100",
      "pos": [
        13550,
        13558
      ]
    },
    {
      "content": "Default: 10",
      "pos": [
        13563,
        13574
      ]
    },
    {
      "content": "Custom Initializers",
      "pos": [
        13777,
        13796
      ]
    },
    {
      "content": "If the standard initializers aren't suitable for your application, you can create your own.",
      "pos": [
        13799,
        13890
      ]
    },
    {
      "content": "Use Context Initializers to set values that will be used to initialize every telemetry client.",
      "pos": [
        13892,
        13986
      ]
    },
    {
      "content": "For example, if you have published more than one version of your app, you could make sure you can separate the data by filtering on a custom property:",
      "pos": [
        13987,
        14137
      ]
    },
    {
      "content": "Use Telemetry Initializers to add processing to each event.",
      "pos": [
        14342,
        14401
      ]
    },
    {
      "content": "For example, the web SDK flags as failed any request with a response code &gt;= 400.",
      "pos": [
        14402,
        14483
      ]
    },
    {
      "content": "You could override that behavior:",
      "pos": [
        14484,
        14517
      ]
    },
    {
      "content": "To install your initializers, add lines in ApplicationInsights.config:",
      "pos": [
        15138,
        15208
      ]
    },
    {
      "content": "Alternatively you can write code to install the initializer at an early point in execution of your application.",
      "pos": [
        15342,
        15453
      ]
    },
    {
      "content": "For example:",
      "pos": [
        15454,
        15466
      ]
    },
    {
      "content": "InstrumentationKey",
      "pos": [
        15703,
        15721
      ]
    },
    {
      "content": "This determines the Application Insights resource in which your data appears.",
      "pos": [
        15723,
        15800
      ]
    },
    {
      "content": "Typically you create a separate resource, with a separate key, for each of your applications.",
      "pos": [
        15801,
        15894
      ]
    },
    {
      "content": "If you want to set the key dynamically - for example if you want to send results from your application to different resources - you can omit the key from the configuration file, and set it in code instead.",
      "pos": [
        15896,
        16101
      ]
    },
    {
      "content": "To set the key for all instances of TelemetryClient, including standard telemetry modules, set the key in TelemetryConfiguration.Active.",
      "pos": [
        16103,
        16239
      ]
    },
    {
      "content": "Do this in an initialization method, such as global.aspx.cs in an ASP.NET service:",
      "pos": [
        16240,
        16322
      ]
    },
    {
      "content": "If you just want to send a specific set of events to a different resource, you can set the key for a specific TelemetryClient:",
      "pos": [
        16585,
        16711
      ]
    },
    {
      "content": "[Learn more about the API][api].",
      "pos": [
        16860,
        16892
      ]
    },
    {
      "content": "To get a new key, [create a new resource in the Application Insights portal][new].",
      "pos": [
        16894,
        16976
      ]
    },
    {
      "content": "test",
      "pos": [
        17422,
        17426
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Configuring Application Insights SDK with ApplicationInsights.config or .xml\" \n    description=\"Enable or disable data collection modules, and add performance counters and other parameters\" \n    services=\"application-insights\"\n    documentationCenter=\"\" \n    authors=\"OlegAnaniev-MSFT\"\n    editor=\"alancameronwills\" \n    manager=\"meravd\"/>\n \n<tags \n    ms.service=\"application-insights\" \n    ms.workload=\"tbd\" \n    ms.tgt_pltfrm=\"ibiza\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"06/29/2015\" \n    ms.author=\"awills\"/>\n\n# Configuring the Application Insights SDK with ApplicationInsights.config or .xml\n\nThe Application Insights .NET SDK consists of a number of NuGet packages. The \n[core package](http://www.nuget.org/packages/Microsoft.ApplicationInsights) provides the API for sending telemetry to \nthe Application Insights. [Additional packages](http://www.nuget.org/packages?q=Microsoft.ApplicationInsights) provide \ntelemetry _modules_ and _initializers_ for automatically tracking telemetry from your application and its context. By \nadjusting the configuration file, you can enable or disable telemetry modules and initializers, and set parameters for \nsome of them.\n\nThe configuration file is named `ApplicationInsights.config` or `ApplicationInsights.xml`, depending on the type of your\napplication. It is automatically added to your project when you [install some versions of the SDK][start]. It is also added to a web app \nby [Status Monitor on an IIS server][redfield], or when you select the Appplication Insights \n[extension for an Azure website or VM][azure].\n\nThere isn't an equivalent file to control the [SDK in a web page][client].\n\nThere's a node in the configuration file for each module. To disable a module, delete the node or comment it out.\n\n## [Microsoft.ApplicationInsights](http://www.nuget.org/packages/Microsoft.ApplicationInsights) NuGet package\n\nThe `Microsoft.ApplicationInsights` NuGet package provides the following telemetry modules in the \n`ApplicationInsights.config`.\n\n```\n<ApplicationInsights xmlns=\"http://schemas.microsoft.com/ApplicationInsights/2013/Settings\">\n  <TelemetryModules>\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule, Microsoft.ApplicationInsights\" />\n  </TelemetryModules>\n</ApplicationInsights>\n```\nThe `DiagnosticsTelemetryModule` reports errors in the Application Insights instrumenation code itself. For example, \nif the code cannot access performance counters or if an `ITelemetryInitializer` throws an exception. Trace telemetry \ntracked by this module appears in the [Diagnostic Search][diagnostic].\n\n## [Microsoft.ApplicationInsights.DependencyCollector](http://www.nuget.org/packages/Microsoft.ApplicationInsights.DependencyCollector) NuGet package\n\nThe `Microsoft.ApplicationInsights.DependencyCollector` NuGet package provides the following telemetry modules in \n`ApplicationInsights.config`.\n\n```\n<ApplicationInsights xmlns=\"http://schemas.microsoft.com/ApplicationInsights/2013/Settings\">\n  <TelemetryModules>\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.DependencyCollector.DependencyTrackingTelemetryModule, Microsoft.ApplicationInsights.Extensibility.DependencyCollector\" />\n  </TelemetryModules>\n</ApplicationInsights>\n```\nThe `DependencyTrackingTelemetryModule` tracks telemetry about calls to external dependencies made by your application, \nsuch as HTTP requests and SQL queries. To allow this module to work in an IIS server, you need to [install Status Monitor][redfield]. To use it in Azure web apps or VMs, [select the Application Insights extension][azure].\n\nYou can also write your own dependency tracking code using the [TrackDependency API](app-insights-api-custom-events-metrics.md#track-dependency).\n\n## [Microsoft.ApplicationInsights.Web](http://www.nuget.org/packages/Microsoft.ApplicationInsights.Web) NuGet package\n\nThe `Microsoft.ApplicationInsights.Web` NuGet package provides the following telemetry initializers and modules in the\n`ApplicationInsights.config`.\n\n```\n<ApplicationInsights xmlns=\"http://schemas.microsoft.com/ApplicationInsights/2013/Settings\">\n  <TelemetryInitializers>\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.SyntheticTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.ClientIpHeaderTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.UserAgentTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.OperationNameTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.OperationIdTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.UserTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.SessionTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.AzureRoleEnvironmentTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.DomainNameRoleInstanceTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.BuildInfoConfigComponentVersionTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.DeviceTelemetryInitializer, Microsoft.ApplicationInsights.Extensibility.Web\"/>\n  </TelemetryInitializers>\n  <TelemetryModules>\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.RequestTrackingTelemetryModule, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.ExceptionTrackingTelemetryModule, Microsoft.ApplicationInsights.Extensibility.Web\" />\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.Web.DeveloperModeWithDebuggerAttachedTelemetryModule, Microsoft.ApplicationInsights.Extensibility.Web\" />\n  </TelemetryModules>\n</ApplicationInsights>\n```\n\n**Initializers**\n\n* `SyntheticTelemetryInitializer` updates the `User`, `Session` and `Operation` contexts properties of all telemetry \nitems tracked when handling a request from a synthetic source, such as an availability test. The Application Insights \nportal does not display synthetic telemetry by default.\n* `ClientIpHeaderTelemetryInitializer` updates `Ip` property of the `Location` context of all telemetry items based on the \n`X-Forwarded-For` HTTP header of the request.\n* `UserAgentTelemetryInitializer` updates the `UserAgent` property of the `User` context of all telemetry items based \non the `User-Agent` HTTP header of the request.\n* `OperationNameTelemetryInitializer` updates the `Name` property of the `RequestTelemetry` and the `Name` property of \nthe `Operation` context of all telemetry items based on the HTTP method, as well as names of ASP.NET MVC controller and \naction invoked to process the request.\n* `OperationNameTelemetryInitializer` updates the 'Operation.Id` context property of all telemetry items tracked while \nhandling a request with the automatically generated `RequestTelemetry.Id`.\n* `UserTelemetryInitializer` updates the `Id` and `AcquisitionDate` properties of `User` context for all telemetry items\nwith values extracted from the `ai_user` cookie generated by the Application Insights JavaScript instrumentation code \nrunning in the user's browser.\n* `SessionTelemetryInitializer` updates the `Id` property of the `Session` context for all telemetry items with value\nextracted from the `ai_session` cookie generated by the ApplicationInsights JavaScript instrumentation code running in the\nuser's browser. \n* `AzureRoleEnvironmentTelemetryInitializer` updates the `RoleName` and `RoleInstance` properties of the `Device` context\nfor all telemetry items with information extracted from the Azure runtime environment.\n* `DomainNameRoleInstanceTelemetryInitializer` updates the `RoleInstance` property of the `Device` context for all\ntelemetry items with the domain name of the computer where the web application is running.\n* `BuildInfoConfigComponentVersionTelemetryInitializer` updates the `Version` property of the `Component` context for \nall telemetry items with the value extracted from the `BuildInfo.config` file produced by TFS build.\n* `DeviceTelemetryInitializer` updates the following properties of the `Device` context for all telemetry items.\n - `Type` is set to \"PC\"\n - `Id` is set to the domain name of the computer where the web application is running.\n - `OemName` is set to the value extracted from the `Win32_ComputerSystem.Manufacturer` field using WMI.\n - `Model` is set to the value extracted from the `Win32_ComputerSystem.Model` field using WMI.\n - `NetworkType` is set to the value extracted from the `NetworkInterface`.\n - `Language` is set to the name of the `CurrentCulture`.\n\n**Modules**\n\n* `RequestTrackingTelemetryModule` tracks requests received by your web app and measures the response times.\n* `ExceptionTrackingTelemetryModule` tracks unhandled exceptions in your web app. See [Failures and exceptions][exceptions].\n* `DeveloperModeWithDebuggerAttachedTelemetryModule` forces the Application Insights `TelemetryChannel` to send data\nimmediately, one telemetry item at a time, when a debugger is attached to the application process. This reduces the \namount of time between the moment when your application tracks telemetry and when it appears on the Application Insights\nportal at the cost of significant CPU and network bandwidth overhead.\n\n## [Microsoft.ApplicationInsights.PerfCounterCollector](http://www.nuget.org/packages/Microsoft.ApplicationInsights.PerfCounterCollector) NuGet package\n\nThe `Microsoft.ApplicationInsights.PerfCounterCollector` NuGet package adds the following telemetry modules to the `ApplicationInsights.config` by default.\n\n```\n<ApplicationInsights xmlns=\"http://schemas.microsoft.com/ApplicationInsights/2013/Settings\">\n  <TelemetryModules>\n    <Add Type=\"Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.PerformanceCollectorModule, Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector\" />\n  </TelemetryModules>\n</ApplicationInsights>\n```\n\n### PerformanceCollectorModule\n\n`PerformanceCollectorModule` tracks a number of Windows performance counters. You can see these \ncounters when you click a chart in Metric Explorer to open its details blade.\n\nYou can monitor additional performance counters - both standard Windows counters and any others that you have added.\n      \nUse the following syntax to collect additional performance counters:\n\n```\n<Add Type=\"Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.PerformanceCollectorModule, Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector\">\n  <Counters>\n    <Add PerformanceCounter=\"\\MyCategory\\MyCounter\" />\n    <Add PerformanceCounter=\"\\Process(??APP_WIN32_PROC??)\\Handle Count\" ReportAs=\"Process handle count\" />\n    <!-- ... -->\n  </Counters>\n</Add>\n```      \n      \n`PerformanceCounter` must be either `\\CategoryName(InstanceName)\\CounterName` or `\\CategoryName\\CounterName`\n      \nIf you provide a `ReportAs` attribute, this will be used as the name displayed in Application Insights.\n\nFor reporting to Application Insights, counter names must include only: letters, round brackets, forward slashes, hyphens, underscores, spaces and dots.\n\nYou must use ReportAs if the counter you want to monitor contains any invalid characters such as '#' or digits.\n      \nThe following placeholders are supported as `InstanceName`:\n\n    ?APP_WIN32_PROC?? - instance name of the application process  for Win32 counters.\n    ??APP_W3SVC_PROC?? - instance name of the application IIS worker process for IIS/ASP.NET counters.\n    ??APP_CLR_PROC?? - instance name of the application CLR process for .NET counters.\n\n## Channel parameters (Java)\n\nThese parameters affect how the Java SDK should store and flush the telemetry data that it collects.\n\n#### MaxTelemetryBufferCapacity\n\nThe number of telemetry items that can be stored in the SDK's in-memory storage. When this number is reached, the telemetry buffer is flushed - that is, the telemetry items are sent to the Application Insights server.\n\n-   Min: 1\n-   Max: 1000\n-   Default: 500\n\n```\n\n  <ApplicationInsights>\n      ...\n      <Channel>\n       <MaxTelemetryBufferCapacity>100</MaxTelemetryBufferCapacity>\n      </Channel>\n      ...\n  </ApplicationInsights>\n```\n\n#### FlushIntervalInSeconds \n\nDetermines how often the data that is stored in the in-memory storage should be flushed (sent to Application Insights).\n\n-   Min: 1\n-   Max: 300\n-   Default: 5\n\n```\n\n    <ApplicationInsights>\n      ...\n      <Channel>\n        <FlushIntervalInSeconds>100</FlushIntervalInSeconds>\n      </Channel>\n      ...\n    </ApplicationInsights>\n```\n\n#### MaxTransmissionStorageCapacityInMB\n\nDetermines the maximum size in MB that is allotted to the persistent storage on the local disk. This storage is used for persisting telemetry items that failed to be transmitted to the Application Insights endpoint. When the storage size has been met, new telemetry items will be discarded.\n\n-   Min: 1\n-   Max: 100\n-   Default: 10\n\n```\n\n   <ApplicationInsights>\n      ...\n      <Channel>\n        <MaxTransmissionStorageCapacityInMB>50</MaxTransmissionStorageCapacityInMB>\n      </Channel>\n      ...\n   </ApplicationInsights>\n```\n\n## Custom Initializers\n\n\nIf the standard initializers aren't suitable for your application, you can create your own.\n\nUse Context Initializers to set values that will be used to initialize every telemetry client. For example, if you have published more than one version of your app, you could make sure you can separate the data by filtering on a custom property:\n\n    plublic class MyContextInitializer: IContextInitializer\n    {\n        public void Initialize(TelemetryContext context)\n        {\n          context.Properties[\"AppVersion\"] = \"v2.1\";\n        }\n    }\n\nUse Telemetry Initializers to add processing to each event. For example, the web SDK flags as failed any request with a response code >= 400. You could override that behavior:  \n\n    public class MyTelemetryInitializer : ITelemetryInitializer\n    {\n        public void Initialize(ITelemetry telemetry)\n        {\n            var requestTelemetry = telemetry as RequestTelemetry;\n            if (requestTelemetry == null) return;\n            int code;\n            bool parsed = Int32.TryParse(requestTelemetry.ResponseCode, out code);\n            if (!parsed) return;\n            if (code >= 400 && code < 500)\n            {\n                requestTelemetry.Success = true;\n                requestTelemetry.Context.Properties[\"Overridden400s\"] = \"true\";\n            }            \n        }\n    }\n \nTo install your initializers, add lines in ApplicationInsights.config:\n\n    <TelemetryInitializers> <!-- or ContextInitializers -->\n    <Add Type=\"MyNamespace.MyTelemetryInitializer, MyAssemblyName\" />\n\n\nAlternatively you can write code to install the initializer at an early point in execution of your application. For example: \n\n\n    // In the app initializer such as Global.asax.cs:\n\n    protected void Application_Start()\n    {\n      TelemetryConfiguration.Active.TelemetryInitializers.Add(\n                new MyTelemetryInitializer());\n            ...\n\n\n\n\n## InstrumentationKey\n\nThis determines the Application Insights resource in which your data appears. Typically you create a separate resource, with a separate key, for each of your applications.\n\nIf you want to set the key dynamically - for example if you want to send results from your application to different resources - you can omit the key from the configuration file, and set it in code instead.\n\nTo set the key for all instances of TelemetryClient, including standard telemetry modules, set the key in TelemetryConfiguration.Active. Do this in an initialization method, such as global.aspx.cs in an ASP.NET service:\n\n```C#\n\n    protected void Application_Start()\n    {\n      Microsoft.ApplicationInsights.Extensibility.\n        TelemetryConfiguration.Active.InstrumentationKey = \n          // - for example -\n          WebConfigurationManager.Settings[\"ikey\"];\n      //...\n```\n\nIf you just want to send a specific set of events to a different resource, you can set the key for a specific TelemetryClient:\n\n```C#\n\n    var tc = new TelemetryClient();\n    tc.Context.InstrumentationKey = \"----- my key ----\";\n    tc.TrackEvent(\"myEvent\");\n    // ...\n\n```\n\n[Learn more about the API][api].\n\nTo get a new key, [create a new resource in the Application Insights portal][new].\n\n<!--Link references-->\n\n[api]: app-insights-api-custom-events-metrics.md\n[azure]: ../insights-perf-analytics.md\n[client]: app-insights-javascript.md\n[diagnostic]: app-insights-diagnostic-search.md\n[exceptions]: app-insights-web-failures-exceptions.md\n[netlogs]: app-insights-asp-net-trace-logs.md\n[new]: app-insights-create-new-resource.md\n[redfield]: app-insights-monitor-performance-live-website-now.md\n[start]: app-insights-get-started.md\n\n\ntest\n"
}