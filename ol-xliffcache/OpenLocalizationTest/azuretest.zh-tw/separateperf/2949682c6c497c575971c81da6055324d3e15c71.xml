{
  "nodes": [
    {
      "content": "IPython Notebook | Microsoft Azure",
      "pos": [
        27,
        61
      ]
    },
    {
      "content": "A tutorial that shows how to deploy the IPython Notebook on Azure, using Linux or Windows virtual machines (VMs).",
      "pos": [
        80,
        193
      ]
    },
    {
      "content": "IPython Notebook on Azure",
      "pos": [
        537,
        562
      ]
    },
    {
      "content": "The <bpt id=\"p1\">[</bpt>IPython project<ept id=\"p1\">](http://ipython.org)</ept> provides a collection of tools for scientific computing that include powerful interactive shells, high-performance and easy to use parallel libraries and a web-based environment called the IPython Notebook.",
      "pos": [
        564,
        812
      ]
    },
    {
      "content": "The Notebook provides a working environment for interactive computing that combines code execution with the creation of a live computational document.",
      "pos": [
        813,
        963
      ]
    },
    {
      "content": "These notebook files can contain arbitrary text, mathematical formulas, input code, results, graphics, videos and any other kind of media that a modern web browser is capable of displaying.",
      "pos": [
        964,
        1153
      ]
    },
    {
      "content": "Whether you're absolutely new to Python and want to learn it in a fun, interactive environment or do some serious parallel/technical computing, the IPython Notebook is a great choice.",
      "pos": [
        1155,
        1338
      ]
    },
    {
      "content": "As an illustration of its capabilities, the",
      "pos": [
        1339,
        1382
      ]
    },
    {
      "content": "following screenshot shows the IPython Notebook being used, in combination with the SciPy and Matplotlib packages, to analyze the structure of a sound recording.",
      "pos": [
        1383,
        1544
      ]
    },
    {
      "content": "Screenshot",
      "pos": [
        1548,
        1558
      ]
    },
    {
      "content": "This article will show you how to deploy the IPython Notebook on Microsoft",
      "pos": [
        1637,
        1711
      ]
    },
    {
      "content": "Azure, using Linux or Windows virtual machines (VMs).",
      "pos": [
        1712,
        1765
      ]
    },
    {
      "content": "By using the IPython",
      "pos": [
        1767,
        1787
      ]
    },
    {
      "content": "Notebook on Azure, you can easily provide a web-accessible interface to",
      "pos": [
        1788,
        1859
      ]
    },
    {
      "content": "scalable computational resources with all the power of Python and its many",
      "pos": [
        1860,
        1934
      ]
    },
    {
      "content": "libraries.",
      "pos": [
        1935,
        1945
      ]
    },
    {
      "content": "Since all installation is done in the cloud, users can access these",
      "pos": [
        1947,
        2014
      ]
    },
    {
      "content": "resources without the need for any local configuration beyond a modern web",
      "pos": [
        2015,
        2089
      ]
    },
    {
      "content": "browser.",
      "pos": [
        2090,
        2098
      ]
    },
    {
      "content": "Create and configure a VM on Azure",
      "pos": [
        2197,
        2231
      ]
    },
    {
      "content": "The first step is to create a virtual machine (VM)  running on Azure.",
      "pos": [
        2233,
        2302
      ]
    },
    {
      "content": "This VM is a complete operating system in the cloud and will be used to",
      "pos": [
        2303,
        2374
      ]
    },
    {
      "content": "run the IPython Notebook.",
      "pos": [
        2375,
        2400
      ]
    },
    {
      "content": "Azure is capable of running both Linux and Windows",
      "pos": [
        2401,
        2451
      ]
    },
    {
      "content": "virtual machines, and we will cover the setup of IPython on both types of virtual machines.",
      "pos": [
        2452,
        2543
      ]
    },
    {
      "content": "Linux VM",
      "pos": [
        2549,
        2557
      ]
    },
    {
      "content": "Follow the instructions given <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">][portal-vm-linux]</ept> to create a virtual machine of the <bpt id=\"p2\">*</bpt>OpenSUSE<ept id=\"p2\">*</ept> or <bpt id=\"p3\">*</bpt>Ubuntu<ept id=\"p3\">*</ept> distribution.",
      "pos": [
        2559,
        2684
      ]
    },
    {
      "content": "This tutorial uses OpenSUSE 13.2 and Ubuntu Server 14.04 LTS.",
      "pos": [
        2685,
        2746
      ]
    },
    {
      "content": "We'll assume the default user name <bpt id=\"p1\">*</bpt>azureuser<ept id=\"p1\">*</ept>.",
      "pos": [
        2747,
        2794
      ]
    },
    {
      "content": "Windows VM",
      "pos": [
        2800,
        2810
      ]
    },
    {
      "content": "Follow the instructions given <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">][portal-vm-windows]</ept> to create a virtual machine of the <bpt id=\"p2\">*</bpt>Windows Server 2012 R2 Datacenter<ept id=\"p2\">*</ept> distribution.",
      "pos": [
        2812,
        2952
      ]
    },
    {
      "content": "In this tutorial, we'll assume that the user name is <bpt id=\"p1\">*</bpt>azureuser<ept id=\"p1\">*</ept>.",
      "pos": [
        2953,
        3018
      ]
    },
    {
      "content": "Create an endpoint for the IPython Notebook",
      "pos": [
        3023,
        3066
      ]
    },
    {
      "content": "This step applies to both the Linux and Windows VM.",
      "pos": [
        3068,
        3119
      ]
    },
    {
      "content": "Later on we will configure",
      "pos": [
        3120,
        3146
      ]
    },
    {
      "content": "IPython to run its notebook server on port 9999.",
      "pos": [
        3147,
        3195
      ]
    },
    {
      "content": "To make this port publicly",
      "pos": [
        3196,
        3222
      ]
    },
    {
      "content": "available, we must create an endpoint in the Azure Management Portal.",
      "pos": [
        3223,
        3292
      ]
    },
    {
      "content": "This",
      "pos": [
        3293,
        3297
      ]
    },
    {
      "content": "endpoint opens up a port in the Azure firewall and maps the public port (HTTPS,",
      "pos": [
        3298,
        3377
      ]
    },
    {
      "content": "to the private port on the VM (9999).",
      "pos": [
        3383,
        3420
      ]
    },
    {
      "content": "To create an endpoint, go to the VM dashboard, click <bpt id=\"p1\">**</bpt>Endpoints<ept id=\"p1\">**</ept>, then click <bpt id=\"p2\">**</bpt>Add\nEndpoint<ept id=\"p2\">**</ept> and create a new endpoint (called <ph id=\"ph1\">`ipython_nb`</ph> in this example).",
      "pos": [
        3422,
        3582
      ]
    },
    {
      "content": "Pick",
      "pos": [
        3583,
        3587
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>TCP<ept id=\"p1\">**</ept> for the protocol, <bpt id=\"p2\">**</bpt>443<ept id=\"p2\">**</ept> for the public port and <bpt id=\"p3\">**</bpt>9999<ept id=\"p3\">**</ept> for the private port.",
      "pos": [
        3588,
        3676
      ]
    },
    {
      "content": "Screenshot",
      "pos": [
        3680,
        3690
      ]
    },
    {
      "pos": [
        3767,
        3851
      ],
      "content": "After this step, the <bpt id=\"p1\">**</bpt>Endpoints<ept id=\"p1\">**</ept> Dashboard tab will look like the next screenshot."
    },
    {
      "content": "Screenshot",
      "pos": [
        3855,
        3865
      ]
    },
    {
      "content": "Install required software on the VM",
      "pos": [
        3945,
        3980
      ]
    },
    {
      "content": "To run the IPython Notebook on our VM, we must first install IPython and",
      "pos": [
        3982,
        4054
      ]
    },
    {
      "content": "its dependencies.",
      "pos": [
        4055,
        4072
      ]
    },
    {
      "content": "Linux (OpenSUSE)",
      "pos": [
        4078,
        4094
      ]
    },
    {
      "content": "To install IPython and its dependencies, SSH into the Linux VM, complete",
      "pos": [
        4096,
        4168
      ]
    },
    {
      "content": "the following steps.",
      "pos": [
        4169,
        4189
      ]
    },
    {
      "pos": [
        4191,
        4321
      ],
      "content": "Install <bpt id=\"p1\">[</bpt>NumPy<ept id=\"p1\">]</ept><bpt id=\"p2\">[</bpt>NumPy<ept id=\"p2\">]</ept>, <bpt id=\"p3\">[</bpt>Matplotlib<ept id=\"p3\">]</ept><bpt id=\"p4\">[</bpt>Matplotlib<ept id=\"p4\">]</ept>, <bpt id=\"p5\">[</bpt>Tornado<ept id=\"p5\">]</ept><bpt id=\"p6\">[</bpt>Tornado<ept id=\"p6\">]</ept> and other IPython's dependencies with the following commands."
    },
    {
      "content": "Linux (Ubuntu)",
      "pos": [
        4479,
        4493
      ]
    },
    {
      "content": "To install IPython and its dependencies, SSH into the Linux VM and carry out",
      "pos": [
        4495,
        4571
      ]
    },
    {
      "content": "the following steps.",
      "pos": [
        4572,
        4592
      ]
    },
    {
      "content": "First, retrieve new lists of packages with the following command.",
      "pos": [
        4594,
        4659
      ]
    },
    {
      "pos": [
        4686,
        4816
      ],
      "content": "Install <bpt id=\"p1\">[</bpt>NumPy<ept id=\"p1\">]</ept><bpt id=\"p2\">[</bpt>NumPy<ept id=\"p2\">]</ept>, <bpt id=\"p3\">[</bpt>Matplotlib<ept id=\"p3\">]</ept><bpt id=\"p4\">[</bpt>Matplotlib<ept id=\"p4\">]</ept>, <bpt id=\"p5\">[</bpt>Tornado<ept id=\"p5\">]</ept><bpt id=\"p6\">[</bpt>Tornado<ept id=\"p6\">]</ept> and other IPython's dependencies with the following commands."
    },
    {
      "content": "Windows",
      "pos": [
        4981,
        4988
      ]
    },
    {
      "content": "To install IPython and its dependencies on the Windows VM, use Remote Desktop to connect to the VM.",
      "pos": [
        4990,
        5089
      ]
    },
    {
      "content": "Then carry out the following steps,",
      "pos": [
        5090,
        5125
      ]
    },
    {
      "content": "using the Windows PowerShell to run all command-line actions.",
      "pos": [
        5126,
        5187
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>: To download anything using Internet Explorer, you'll need to change some security settings.",
      "pos": [
        5189,
        5290
      ]
    },
    {
      "content": "From <bpt id=\"p1\">**</bpt>Server Manager<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Local Server<ept id=\"p2\">**</ept>, then on <bpt id=\"p3\">**</bpt>IE Enhanced Security Configuration<ept id=\"p3\">**</ept>, turn it off for administrators.",
      "pos": [
        5292,
        5420
      ]
    },
    {
      "content": "You can enable it again after you install IPython.",
      "pos": [
        5422,
        5472
      ]
    },
    {
      "content": "Download and install the latest 32-bit version of <bpt id=\"p1\">[</bpt>Python 2.7<ept id=\"p1\">][]</ept>.",
      "pos": [
        5478,
        5543
      ]
    },
    {
      "content": "You will need to add <ph id=\"ph1\">`C:\\Python27`</ph> and <ph id=\"ph2\">`C:\\Python27\\Scripts`</ph> to your <ph id=\"ph3\">`PATH`</ph> environment variable.",
      "pos": [
        5545,
        5642
      ]
    },
    {
      "pos": [
        5648,
        5755
      ],
      "content": "Install <bpt id=\"p1\">[</bpt>Tornado<ept id=\"p1\">]</ept><bpt id=\"p2\">[</bpt>Tornado<ept id=\"p2\">]</ept> and <bpt id=\"p3\">[</bpt>PyZMQ<ept id=\"p3\">]</ept><bpt id=\"p4\">[</bpt>PyZMQ<ept id=\"p4\">]</ept> and other IPython's dependencies with the following commands."
    },
    {
      "content": "Download and install <bpt id=\"p1\">[</bpt>NumPy<ept id=\"p1\">]</ept><bpt id=\"p2\">[</bpt>NumPy<ept id=\"p2\">]</ept> using the <ph id=\"ph1\">`.exe`</ph> binary installer available on their website.",
      "pos": [
        5939,
        6036
      ]
    },
    {
      "content": "As of this writing, the latest version is numpy-1.9.1-win32-superpack-python2.7.exe.",
      "pos": [
        6038,
        6122
      ]
    },
    {
      "pos": [
        6128,
        6188
      ],
      "content": "Install <bpt id=\"p1\">[</bpt>Matplotlib<ept id=\"p1\">]</ept><bpt id=\"p2\">[</bpt>Matplotlib<ept id=\"p2\">]</ept> with the following command."
    },
    {
      "pos": [
        6233,
        6266
      ],
      "content": "Download and install <bpt id=\"p1\">[</bpt>OpenSSL<ept id=\"p1\">][]</ept>."
    },
    {
      "content": "You'll find the required Visual C++ 2008 Redistributable on the same download page.",
      "pos": [
        6274,
        6357
      ]
    },
    {
      "pos": [
        6365,
        6445
      ],
      "content": "You will need to add <ph id=\"ph1\">`C:\\OpenSSL-Win32\\bin`</ph> to your <ph id=\"ph2\">`PATH`</ph> environment variable."
    },
    {
      "pos": [
        6453,
        6584
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> When installing OpenSSL, use version 1.0.1g or later as these include a fix for the Heartbleed security vulnerability."
    },
    {
      "content": "Install IPython using the following command.",
      "pos": [
        6590,
        6634
      ]
    },
    {
      "content": "Open a port in Windows Firewall.",
      "pos": [
        6674,
        6706
      ]
    },
    {
      "content": "On Windows Server 2012, the firewall will block incoming connections by default.",
      "pos": [
        6708,
        6788
      ]
    },
    {
      "content": "To open port 9999, follow these steps:",
      "pos": [
        6790,
        6828
      ]
    },
    {
      "pos": [
        6836,
        6908
      ],
      "content": "Start <bpt id=\"p1\">**</bpt>Windows Firewall with Advanced Security<ept id=\"p1\">**</ept> from the Start screen."
    },
    {
      "pos": [
        6916,
        6958
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Inbound Rules<ept id=\"p1\">**</ept> in the left panel."
    },
    {
      "pos": [
        6966,
        7006
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>New Rule<ept id=\"p1\">**</ept> in the Actions panel."
    },
    {
      "pos": [
        7014,
        7062
      ],
      "content": "In the New Inbound Rule Wizard, select <bpt id=\"p1\">**</bpt>Port<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        7070,
        7152
      ],
      "content": "In the next screen, select <bpt id=\"p1\">**</bpt>TCP<ept id=\"p1\">**</ept> and enter <bpt id=\"p2\">**</bpt>9999<ept id=\"p2\">**</ept> in <bpt id=\"p3\">**</bpt>Specific local ports<ept id=\"p3\">**</ept>."
    },
    {
      "pos": [
        7160,
        7224
      ],
      "content": "Accept defaults, give the rule a name and then click <bpt id=\"p1\">**</bpt>Finish<ept id=\"p1\">**</ept>."
    },
    {
      "content": "Configure the IPython Notebook",
      "pos": [
        7230,
        7260
      ]
    },
    {
      "content": "Next, we configure the IPython Notebook.",
      "pos": [
        7262,
        7302
      ]
    },
    {
      "content": "The first step is to create a custom",
      "pos": [
        7303,
        7339
      ]
    },
    {
      "content": "IPython configuration profile to encapsulate the configuration information with the following command.",
      "pos": [
        7340,
        7442
      ]
    },
    {
      "content": "Next we <ph id=\"ph1\">`cd`</ph> to the profile directory to create our SSL certificate and edit",
      "pos": [
        7481,
        7557
      ]
    },
    {
      "content": "the profiles configuration file.",
      "pos": [
        7558,
        7590
      ]
    },
    {
      "content": "On Linux use the following command.",
      "pos": [
        7592,
        7627
      ]
    },
    {
      "content": "On Windows use the following command.",
      "pos": [
        7666,
        7703
      ]
    },
    {
      "content": "Use the following command to create the SSL certificate(Linux and Windows).",
      "pos": [
        7756,
        7831
      ]
    },
    {
      "content": "Note that since we are creating a self-signed SSL certificate, when connecting",
      "pos": [
        7925,
        8003
      ]
    },
    {
      "content": "to the notebook your browser will give you a security warning.",
      "pos": [
        8004,
        8066
      ]
    },
    {
      "content": "For long-term",
      "pos": [
        8068,
        8081
      ]
    },
    {
      "content": "production use, you will want to use a properly signed certificate associated",
      "pos": [
        8082,
        8159
      ]
    },
    {
      "content": "with your organization.",
      "pos": [
        8160,
        8183
      ]
    },
    {
      "content": "Since certificate management is beyond the scope of",
      "pos": [
        8185,
        8236
      ]
    },
    {
      "content": "this demo, we will stick to a self-signed certificate for now.",
      "pos": [
        8237,
        8299
      ]
    },
    {
      "content": "In addition to using a certificate, you must also provide a password to protect",
      "pos": [
        8301,
        8380
      ]
    },
    {
      "content": "your notebook from unauthorized use.",
      "pos": [
        8381,
        8417
      ]
    },
    {
      "content": "For security reasons IPython uses",
      "pos": [
        8419,
        8452
      ]
    },
    {
      "content": "encrypted passwords in its configuration file, so you'll need to encrypt your",
      "pos": [
        8453,
        8530
      ]
    },
    {
      "content": "password first.",
      "pos": [
        8531,
        8546
      ]
    },
    {
      "content": "IPython provides a utility to do so; at a command prompt run the following command.",
      "pos": [
        8548,
        8631
      ]
    },
    {
      "content": "This will prompt you for a password and confirmation, and will then print the",
      "pos": [
        8692,
        8769
      ]
    },
    {
      "content": "password as follows.",
      "pos": [
        8770,
        8790
      ]
    },
    {
      "content": "Next, we will edit the profile's configuration file, which is the",
      "pos": [
        8909,
        8974
      ]
    },
    {
      "content": "<ph id=\"ph1\">`ipython_notebook_config.py`</ph> file in the profile directory you are in.",
      "pos": [
        8975,
        9045
      ]
    },
    {
      "content": "Note that this file may not exist -- just create it.",
      "pos": [
        9047,
        9099
      ]
    },
    {
      "content": "This",
      "pos": [
        9101,
        9105
      ]
    },
    {
      "content": "file has a number of fields and by default all are commented out.",
      "pos": [
        9106,
        9171
      ]
    },
    {
      "content": "You can open",
      "pos": [
        9173,
        9185
      ]
    },
    {
      "content": "this file with any text editor of your liking, and you should ensure that it",
      "pos": [
        9186,
        9262
      ]
    },
    {
      "content": "has at least the following content.",
      "pos": [
        9263,
        9298
      ]
    },
    {
      "content": "Run the IPython Notebook",
      "pos": [
        10068,
        10092
      ]
    },
    {
      "content": "At this point we are ready to start the IPython Notebook.",
      "pos": [
        10094,
        10151
      ]
    },
    {
      "content": "To do this,",
      "pos": [
        10152,
        10163
      ]
    },
    {
      "content": "navigate to the directory you want to store notebooks in and start",
      "pos": [
        10164,
        10230
      ]
    },
    {
      "content": "the IPython Notebook server with the following command.",
      "pos": [
        10231,
        10286
      ]
    },
    {
      "content": "You should now be able to access your IPython Notebook at the address",
      "pos": [
        10329,
        10398
      ]
    },
    {
      "content": "<ph id=\"ph1\">`https://[Your Chosen Name Here].cloudapp.net`</ph>.",
      "pos": [
        10399,
        10446
      ]
    },
    {
      "content": "When you first access your notebook, the login page asks for your password.",
      "pos": [
        10448,
        10523
      ]
    },
    {
      "content": "Screenshot",
      "pos": [
        10527,
        10537
      ]
    },
    {
      "content": "And once you log in, you will see the \"IPython Notebook Dashboard\", which is",
      "pos": [
        10611,
        10687
      ]
    },
    {
      "content": "the control center for all notebook operations.",
      "pos": [
        10688,
        10735
      ]
    },
    {
      "content": "From this page you can create",
      "pos": [
        10737,
        10766
      ]
    },
    {
      "content": "new notebooks and open existing ones.",
      "pos": [
        10767,
        10804
      ]
    },
    {
      "content": "Screenshot",
      "pos": [
        10808,
        10818
      ]
    },
    {
      "pos": [
        10892,
        10974
      ],
      "content": "If you click the <bpt id=\"p1\">**</bpt>New Notebook<ept id=\"p1\">**</ept> button, you will see the following opening page."
    },
    {
      "content": "Screenshot",
      "pos": [
        10978,
        10988
      ]
    },
    {
      "content": "The area marked with an <ph id=\"ph1\">`In []:`</ph> prompt is the input area, and here you can",
      "pos": [
        11062,
        11137
      ]
    },
    {
      "content": "type any valid Python code and it will execute when you hit <ph id=\"ph1\">`Shift-Enter`</ph> or",
      "pos": [
        11138,
        11214
      ]
    },
    {
      "content": "click on the \"Play\" icon (the right-pointing triangle in the toolbar).",
      "pos": [
        11215,
        11285
      ]
    },
    {
      "content": "Since we have configured the notebook to start with NumPy and Matplotlib support",
      "pos": [
        11287,
        11367
      ]
    },
    {
      "content": "automatically, you can even produce figures as shown in the next screenshot.",
      "pos": [
        11368,
        11444
      ]
    },
    {
      "content": "Screenshot",
      "pos": [
        11448,
        11458
      ]
    },
    {
      "content": "A powerful paradigm: live computational documents with rich media",
      "pos": [
        11535,
        11600
      ]
    },
    {
      "content": "The notebook itself should feel very natural to anyone who has used Python and",
      "pos": [
        11602,
        11680
      ]
    },
    {
      "content": "a word processor, because it is in some ways a mix of both: you can execute",
      "pos": [
        11681,
        11756
      ]
    },
    {
      "content": "blocks of Python code, but you can also keep notes and other text by changing",
      "pos": [
        11757,
        11834
      ]
    },
    {
      "content": "the style of a cell from \"Code\" to \"Markdown\" using the drop-down menu in the",
      "pos": [
        11835,
        11912
      ]
    },
    {
      "content": "toolbar.",
      "pos": [
        11913,
        11921
      ]
    },
    {
      "content": "Screenshot",
      "pos": [
        11925,
        11935
      ]
    },
    {
      "content": "But this is much more than a word processor, as the IPython notebook allows the",
      "pos": [
        12010,
        12089
      ]
    },
    {
      "content": "mixing of computation and rich media (text, graphics, video and virtually",
      "pos": [
        12090,
        12163
      ]
    },
    {
      "content": "anything a modern web browser can display).",
      "pos": [
        12164,
        12207
      ]
    },
    {
      "content": "For example, you can mix",
      "pos": [
        12208,
        12232
      ]
    },
    {
      "content": "explanatory videos with computation for educational purposes.",
      "pos": [
        12233,
        12294
      ]
    },
    {
      "content": "Screenshot",
      "pos": [
        12298,
        12308
      ]
    },
    {
      "content": "or, as shown in the next screenshot, embed external websites that remain live and usable, inside of a notebook",
      "pos": [
        12382,
        12492
      ]
    },
    {
      "content": "file.",
      "pos": [
        12493,
        12498
      ]
    },
    {
      "content": "Screenshot",
      "pos": [
        12502,
        12512
      ]
    },
    {
      "content": "And with the power of Python's many excellent libraries for scientific and",
      "pos": [
        12586,
        12660
      ]
    },
    {
      "content": "technical computing, in the following screenshot, a simple calculation can be performed with the same ease",
      "pos": [
        12661,
        12767
      ]
    },
    {
      "content": "as a complex network analysis, all in one environment.",
      "pos": [
        12768,
        12822
      ]
    },
    {
      "content": "Screenshot",
      "pos": [
        12826,
        12836
      ]
    },
    {
      "content": "This paradigm of mixing the power of the modern web with live computation",
      "pos": [
        12910,
        12983
      ]
    },
    {
      "content": "offers many possibilities, and is ideally suited for the cloud; the Notebook",
      "pos": [
        12984,
        13060
      ]
    },
    {
      "content": "can be used:",
      "pos": [
        13061,
        13073
      ]
    },
    {
      "content": "As a computational scratchpad to record exploratory work on a problem.",
      "pos": [
        13077,
        13147
      ]
    },
    {
      "pos": [
        13151,
        13258
      ],
      "content": "To share results with colleagues, either in 'live' computational form or in\nhardcopy formats (HTML, PDF).",
      "leadings": [
        "",
        "  "
      ],
      "nodes": [
        {
          "content": "To share results with colleagues, either in 'live' computational form or in",
          "pos": [
            0,
            75
          ]
        },
        {
          "content": "hardcopy formats (HTML, PDF).",
          "pos": [
            76,
            105
          ]
        }
      ]
    },
    {
      "pos": [
        13262,
        13443
      ],
      "content": "To distribute and present live teaching materials that involve computation,\nso students can immediately experiment with the real code, modify it and\nre-execute it interactively.",
      "leadings": [
        "",
        "  ",
        "  "
      ],
      "nodes": [
        {
          "content": "To distribute and present live teaching materials that involve computation,",
          "pos": [
            0,
            75
          ]
        },
        {
          "content": "so students can immediately experiment with the real code, modify it and",
          "pos": [
            76,
            148
          ]
        },
        {
          "content": "re-execute it interactively.",
          "pos": [
            149,
            177
          ]
        }
      ]
    },
    {
      "pos": [
        13447,
        13595
      ],
      "content": "To provide \"executable papers\" that present the results of research in a way\nthat can be immediately reproduced, validated and extended by others.",
      "leadings": [
        "",
        "  "
      ],
      "nodes": [
        {
          "content": "To provide \"executable papers\" that present the results of research in a way",
          "pos": [
            0,
            76
          ]
        },
        {
          "content": "that can be immediately reproduced, validated and extended by others.",
          "pos": [
            77,
            146
          ]
        }
      ]
    },
    {
      "pos": [
        13599,
        13736
      ],
      "content": "As a platform for collaborative computing: multiple users can log in to the\nsame notebook server to share a live computational session.",
      "leadings": [
        "",
        "  "
      ],
      "nodes": [
        {
          "content": "As a platform for collaborative computing: multiple users can log in to the",
          "pos": [
            0,
            75
          ]
        },
        {
          "content": "same notebook server to share a live computational session.",
          "pos": [
            76,
            135
          ]
        }
      ]
    },
    {
      "content": "If you go to the IPython source code <bpt id=\"p1\">[</bpt>repository<ept id=\"p1\">][]</ept>, you will find an entire",
      "pos": [
        13740,
        13816
      ]
    },
    {
      "content": "directory with notebook examples which you can download and then experiment with on your own Azure IPython VM.",
      "pos": [
        13817,
        13927
      ]
    },
    {
      "content": "Simply download the <ph id=\"ph1\">`.ipynb`</ph> files from the site and upload them onto the dashboard of your notebook Azure VM (or download them directly into the VM).",
      "pos": [
        13929,
        14079
      ]
    },
    {
      "content": "Conclusion",
      "pos": [
        14084,
        14094
      ]
    },
    {
      "content": "The IPython Notebook provides a powerful interface for accessing interactively",
      "pos": [
        14096,
        14174
      ]
    },
    {
      "content": "the power of the Python ecosystem on Azure.",
      "pos": [
        14175,
        14218
      ]
    },
    {
      "content": "It covers a wide range of",
      "pos": [
        14220,
        14245
      ]
    },
    {
      "content": "usage cases including simple exploration and learning Python, data analysis and",
      "pos": [
        14246,
        14325
      ]
    },
    {
      "content": "visualization, simulation and parallel computing.",
      "pos": [
        14326,
        14375
      ]
    },
    {
      "content": "The resulting Notebook",
      "pos": [
        14376,
        14398
      ]
    },
    {
      "content": "documents contain a complete record of the computations that are performed and",
      "pos": [
        14399,
        14477
      ]
    },
    {
      "content": "can be shared with other IPython users.",
      "pos": [
        14478,
        14517
      ]
    },
    {
      "content": "The IPython Notebook can be used as a",
      "pos": [
        14519,
        14556
      ]
    },
    {
      "content": "local application, but it is ideally suited for cloud deployments on Azure",
      "pos": [
        14557,
        14631
      ]
    },
    {
      "content": "The core features of IPython are also available inside Visual Studio via the",
      "pos": [
        14633,
        14709
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Python Tools for Visual Studio<ept id=\"p1\">][]</ept> (PTVS).",
      "pos": [
        14710,
        14752
      ]
    },
    {
      "content": "PTVS is a free and open-source plug-in",
      "pos": [
        14753,
        14791
      ]
    },
    {
      "content": "from Microsoft that turns Visual Studio into an advanced Python development",
      "pos": [
        14792,
        14867
      ]
    },
    {
      "content": "environment that includes an advanced editor with IntelliSense, debugging,",
      "pos": [
        14868,
        14942
      ]
    },
    {
      "content": "profiling and parallel computing integration.",
      "pos": [
        14943,
        14988
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"IPython Notebook | Microsoft Azure\"\n    description=\"A tutorial that shows how to deploy the IPython Notebook on Azure, using Linux or Windows virtual machines (VMs).\"\n    services=\"virtual-machines\"\n    documentationCenter=\"python\"\n    authors=\"huguesv\"\n    manager=\"wpickett\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"virtual-machines\"\n    ms.workload=\"infrastructure-services\"\n    ms.tgt_pltfrm=\"vm-multiple\"\n    ms.devlang=\"python\"\n    ms.topic=\"article\"\n    ms.date=\"05/20/2015\"\n    ms.author=\"huvalo\"/>\n\n\n# IPython Notebook on Azure\n\nThe [IPython project](http://ipython.org) provides a collection of tools for scientific computing that include powerful interactive shells, high-performance and easy to use parallel libraries and a web-based environment called the IPython Notebook. The Notebook provides a working environment for interactive computing that combines code execution with the creation of a live computational document. These notebook files can contain arbitrary text, mathematical formulas, input code, results, graphics, videos and any other kind of media that a modern web browser is capable of displaying.\n\nWhether you're absolutely new to Python and want to learn it in a fun, interactive environment or do some serious parallel/technical computing, the IPython Notebook is a great choice. As an illustration of its capabilities, the\nfollowing screenshot shows the IPython Notebook being used, in combination with the SciPy and Matplotlib packages, to analyze the structure of a sound recording.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-notebook-spectral.png)\n\nThis article will show you how to deploy the IPython Notebook on Microsoft\nAzure, using Linux or Windows virtual machines (VMs).  By using the IPython\nNotebook on Azure, you can easily provide a web-accessible interface to\nscalable computational resources with all the power of Python and its many\nlibraries.  Since all installation is done in the cloud, users can access these\nresources without the need for any local configuration beyond a modern web\nbrowser.\n\n[AZURE.INCLUDE [create-account-and-vms-note](../../includes/create-account-and-vms-note.md)]\n\n## Create and configure a VM on Azure\n\nThe first step is to create a virtual machine (VM)  running on Azure.\nThis VM is a complete operating system in the cloud and will be used to\nrun the IPython Notebook. Azure is capable of running both Linux and Windows\nvirtual machines, and we will cover the setup of IPython on both types of virtual machines.\n\n### Linux VM\n\nFollow the instructions given [here][portal-vm-linux] to create a virtual machine of the *OpenSUSE* or *Ubuntu* distribution. This tutorial uses OpenSUSE 13.2 and Ubuntu Server 14.04 LTS. We'll assume the default user name *azureuser*.\n\n### Windows VM\n\nFollow the instructions given [here][portal-vm-windows] to create a virtual machine of the *Windows Server 2012 R2 Datacenter* distribution. In this tutorial, we'll assume that the user name is *azureuser*.\n\n## Create an endpoint for the IPython Notebook\n\nThis step applies to both the Linux and Windows VM. Later on we will configure\nIPython to run its notebook server on port 9999. To make this port publicly\navailable, we must create an endpoint in the Azure Management Portal. This\nendpoint opens up a port in the Azure firewall and maps the public port (HTTPS,\n443) to the private port on the VM (9999).\n\nTo create an endpoint, go to the VM dashboard, click **Endpoints**, then click **Add\nEndpoint** and create a new endpoint (called `ipython_nb` in this example). Pick\n**TCP** for the protocol, **443** for the public port and **9999** for the private port.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-azure-linux-005.png)\n\nAfter this step, the **Endpoints** Dashboard tab will look like the next screenshot.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-azure-linux-006.png)\n\n## Install required software on the VM\n\nTo run the IPython Notebook on our VM, we must first install IPython and\nits dependencies.\n\n### Linux (OpenSUSE)\n\nTo install IPython and its dependencies, SSH into the Linux VM, complete\nthe following steps.\n\nInstall [NumPy][NumPy], [Matplotlib][Matplotlib], [Tornado][Tornado] and other IPython's dependencies with the following commands.\n\n    sudo zypper install python-matplotlib\n    sudo zypper install python-tornado\n    sudo zypper install python-jinja2\n    sudo zypper install ipython\n\n### Linux (Ubuntu)\n\nTo install IPython and its dependencies, SSH into the Linux VM and carry out\nthe following steps.\n\nFirst, retrieve new lists of packages with the following command.\n\n    sudo apt-get update\n\nInstall [NumPy][NumPy], [Matplotlib][Matplotlib], [Tornado][Tornado] and other IPython's dependencies with the following commands.\n\n    sudo apt-get install python-matplotlib\n    sudo apt-get install python-tornado\n    sudo apt-get install ipython\n    sudo apt-get install ipython-notebook\n\n### Windows\n\nTo install IPython and its dependencies on the Windows VM, use Remote Desktop to connect to the VM. Then carry out the following steps,\nusing the Windows PowerShell to run all command-line actions.\n\n**Note**: To download anything using Internet Explorer, you'll need to change some security settings.  From **Server Manager**, click **Local Server**, then on **IE Enhanced Security Configuration**, turn it off for administrators.  You can enable it again after you install IPython.\n\n1.  Download and install the latest 32-bit version of [Python 2.7][].  You will need to add `C:\\Python27` and `C:\\Python27\\Scripts` to your `PATH` environment variable.\n\n1.  Install [Tornado][Tornado] and [PyZMQ][PyZMQ] and other IPython's dependencies with the following commands.\n\n        easy_install tornado\n        easy_install pyzmq\n        easy_install jinja2\n        easy_install six\n        easy_install python-dateutil\n        easy_install pyparsing\n\n1.  Download and install [NumPy][NumPy] using the `.exe` binary installer available on their website.  As of this writing, the latest version is numpy-1.9.1-win32-superpack-python2.7.exe.\n\n1.  Install [Matplotlib][Matplotlib] with the following command.\n\n        pip install matplotlib==1.4.2\n\n1.  Download and install [OpenSSL][].\n\n    * You'll find the required Visual C++ 2008 Redistributable on the same download page.\n\n    * You will need to add `C:\\OpenSSL-Win32\\bin` to your `PATH` environment variable.\n\n    > [AZURE.NOTE] When installing OpenSSL, use version 1.0.1g or later as these include a fix for the Heartbleed security vulnerability.\n\n1.  Install IPython using the following command.\n\n        pip install ipython==2.4\n\n1.  Open a port in Windows Firewall.  On Windows Server 2012, the firewall will block incoming connections by default.  To open port 9999, follow these steps:\n\n    - Start **Windows Firewall with Advanced Security** from the Start screen.\n\n    - Click **Inbound Rules** in the left panel.\n\n    - Click **New Rule** in the Actions panel.\n\n    - In the New Inbound Rule Wizard, select **Port**.\n\n    - In the next screen, select **TCP** and enter **9999** in **Specific local ports**.\n\n    - Accept defaults, give the rule a name and then click **Finish**.\n\n### Configure the IPython Notebook\n\nNext, we configure the IPython Notebook. The first step is to create a custom\nIPython configuration profile to encapsulate the configuration information with the following command.\n\n    ipython profile create nbserver\n\nNext we `cd` to the profile directory to create our SSL certificate and edit\nthe profiles configuration file.\n\nOn Linux use the following command.\n\n    cd ~/.ipython/profile_nbserver/\n\nOn Windows use the following command.\n\n    cd \\users\\azureuser\\.ipython\\profile_nbserver\n\nUse the following command to create the SSL certificate(Linux and Windows).\n\n    openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem\n\nNote that since we are creating a self-signed SSL certificate, when connecting\nto the notebook your browser will give you a security warning.  For long-term\nproduction use, you will want to use a properly signed certificate associated\nwith your organization.  Since certificate management is beyond the scope of\nthis demo, we will stick to a self-signed certificate for now.\n\nIn addition to using a certificate, you must also provide a password to protect\nyour notebook from unauthorized use.  For security reasons IPython uses\nencrypted passwords in its configuration file, so you'll need to encrypt your\npassword first.  IPython provides a utility to do so; at a command prompt run the following command.\n\n    python -c \"import IPython;print IPython.lib.passwd()\"\n\nThis will prompt you for a password and confirmation, and will then print the\npassword as follows.\n\n    Enter password:\n    Verify password:\n    sha1:b86e933199ad:a02e9592e59723da722.. (elided the rest for security)\n\nNext, we will edit the profile's configuration file, which is the\n`ipython_notebook_config.py` file in the profile directory you are in.  Note that this file may not exist -- just create it.  This\nfile has a number of fields and by default all are commented out.  You can open\nthis file with any text editor of your liking, and you should ensure that it\nhas at least the following content.\n\n    c = get_config()\n\n    # This starts plotting support always with matplotlib\n    c.IPKernelApp.pylab = 'inline'\n\n    # You must give the path to the certificate file.\n\n    # If using a Linux VM:\n    c.NotebookApp.certfile = u'/home/azureuser/.ipython/profile_nbserver/mycert.pem'\n\n    # And if using a Windows VM:\n    c.NotebookApp.certfile = r'C:\\Users\\azureuser\\.ipython\\profile_nbserver\\mycert.pem'\n\n    # Create your own password as indicated above\n    c.NotebookApp.password = u'sha1:b86e933199ad:a02e9592e5 etc... '\n\n    # Network and browser details. We use a fixed port (9999) so it matches\n    # our Azure setup, where we've allowed traffic on that port\n\n    c.NotebookApp.ip = '*'\n    c.NotebookApp.port = 9999\n    c.NotebookApp.open_browser = False\n\n### Run the IPython Notebook\n\nAt this point we are ready to start the IPython Notebook. To do this,\nnavigate to the directory you want to store notebooks in and start\nthe IPython Notebook server with the following command.\n\n    ipython notebook --profile=nbserver\n\nYou should now be able to access your IPython Notebook at the address\n`https://[Your Chosen Name Here].cloudapp.net`.\n\nWhen you first access your notebook, the login page asks for your password.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-notebook-001.png)\n\nAnd once you log in, you will see the \"IPython Notebook Dashboard\", which is\nthe control center for all notebook operations.  From this page you can create\nnew notebooks and open existing ones.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-notebook-002.png)\n\nIf you click the **New Notebook** button, you will see the following opening page.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-notebook-003.png)\n\nThe area marked with an `In []:` prompt is the input area, and here you can\ntype any valid Python code and it will execute when you hit `Shift-Enter` or\nclick on the \"Play\" icon (the right-pointing triangle in the toolbar).\n\nSince we have configured the notebook to start with NumPy and Matplotlib support\nautomatically, you can even produce figures as shown in the next screenshot.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-notebook-004.png)\n\n## A powerful paradigm: live computational documents with rich media\n\nThe notebook itself should feel very natural to anyone who has used Python and\na word processor, because it is in some ways a mix of both: you can execute\nblocks of Python code, but you can also keep notes and other text by changing\nthe style of a cell from \"Code\" to \"Markdown\" using the drop-down menu in the\ntoolbar.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-notebook-005.png)\n\n\nBut this is much more than a word processor, as the IPython notebook allows the\nmixing of computation and rich media (text, graphics, video and virtually\nanything a modern web browser can display). For example, you can mix\nexplanatory videos with computation for educational purposes.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-notebook-006.png)\n\nor, as shown in the next screenshot, embed external websites that remain live and usable, inside of a notebook\nfile.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-notebook-007.png)\n\nAnd with the power of Python's many excellent libraries for scientific and\ntechnical computing, in the following screenshot, a simple calculation can be performed with the same ease\nas a complex network analysis, all in one environment.\n\n![Screenshot](./media/virtual-machines-python-ipython-notebook/ipy-notebook-008.png)\n\nThis paradigm of mixing the power of the modern web with live computation\noffers many possibilities, and is ideally suited for the cloud; the Notebook\ncan be used:\n\n* As a computational scratchpad to record exploratory work on a problem.\n\n* To share results with colleagues, either in 'live' computational form or in\n  hardcopy formats (HTML, PDF).\n\n* To distribute and present live teaching materials that involve computation,\n  so students can immediately experiment with the real code, modify it and\n  re-execute it interactively.\n\n* To provide \"executable papers\" that present the results of research in a way\n  that can be immediately reproduced, validated and extended by others.\n\n* As a platform for collaborative computing: multiple users can log in to the\n  same notebook server to share a live computational session.\n\n\n\nIf you go to the IPython source code [repository][], you will find an entire\ndirectory with notebook examples which you can download and then experiment with on your own Azure IPython VM.  Simply download the `.ipynb` files from the site and upload them onto the dashboard of your notebook Azure VM (or download them directly into the VM).\n\n## Conclusion\n\nThe IPython Notebook provides a powerful interface for accessing interactively\nthe power of the Python ecosystem on Azure.  It covers a wide range of\nusage cases including simple exploration and learning Python, data analysis and\nvisualization, simulation and parallel computing. The resulting Notebook\ndocuments contain a complete record of the computations that are performed and\ncan be shared with other IPython users.  The IPython Notebook can be used as a\nlocal application, but it is ideally suited for cloud deployments on Azure\n\nThe core features of IPython are also available inside Visual Studio via the\n[Python Tools for Visual Studio][] (PTVS). PTVS is a free and open-source plug-in\nfrom Microsoft that turns Visual Studio into an advanced Python development\nenvironment that includes an advanced editor with IntelliSense, debugging,\nprofiling and parallel computing integration.\n\n\n\n\n[Tornado]:      http://www.tornadoweb.org/          \"Tornado\"\n[PyZMQ]:        https://github.com/zeromq/pyzmq     \"PyZMQ\"\n[NumPy]:        http://www.numpy.org/               \"NumPy\"\n[Matplotlib]:   http://matplotlib.sourceforge.net/  \"Matplotlib\"\n[portal-vm-windows]: /manage/windows/tutorials/virtual-machine-from-gallery/\n[portal-vm-linux]: /manage/linux/tutorials/virtual-machine-from-gallery/\n[repository]: https://github.com/ipython/ipython\n[python Tools for visual studio]: http://aka.ms/ptvs\n[Python 2.7]: http://www.python.org/download\n[OpenSSL]: http://slproweb.com/products/Win32OpenSSL.html\n"
}