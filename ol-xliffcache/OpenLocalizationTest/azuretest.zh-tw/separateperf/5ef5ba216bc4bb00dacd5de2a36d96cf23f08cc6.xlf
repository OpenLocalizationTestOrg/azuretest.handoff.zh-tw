<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create and use a SAS with the Blob Service | Microsoft Azure</source>
          <target state="new">Create and use a SAS with the Blob Service | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Explore generating and using shared access signatures with the Blob service</source>
          <target state="new">Explore generating and using shared access signatures with the Blob service</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Shared Access Signatures, Part 2: Create and Use a SAS with the Blob Service</source>
          <target state="new">Shared Access Signatures, Part 2: Create and Use a SAS with the Blob Service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Part 1<ept id="p1">](storage-dotnet-shared-access-signature-part-1.md)</ept> of this tutorial explored shared access signatures (SAS) and explained best practices for using them.</source>
          <target state="new"><bpt id="p1">[</bpt>Part 1<ept id="p1">](storage-dotnet-shared-access-signature-part-1.md)</ept> of this tutorial explored shared access signatures (SAS) and explained best practices for using them.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Part 2 shows you how to generate and then use shared access signatures with the Azure Blob service.</source>
          <target state="new">Part 2 shows you how to generate and then use shared access signatures with the Azure Blob service.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The examples are written in C# and use the Azure Storage Client Library for .NET.</source>
          <target state="new">The examples are written in C# and use the Azure Storage Client Library for .NET.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The scenarios covered include these aspects of working with shared access signatures:</source>
          <target state="new">The scenarios covered include these aspects of working with shared access signatures:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Generating a shared access signature on a container</source>
          <target state="new">Generating a shared access signature on a container</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Generating a shared access signature on a blob</source>
          <target state="new">Generating a shared access signature on a blob</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating a stored access policy to manage signatures on a container's resources</source>
          <target state="new">Creating a stored access policy to manage signatures on a container's resources</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Testing the shared access signatures from a client application</source>
          <target state="new">Testing the shared access signatures from a client application</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>About this Tutorial</source>
          <target state="new">About this Tutorial</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this tutorial, we'll focus on creating shared access signatures for containers and blobs by creating two console applications.</source>
          <target state="new">In this tutorial, we'll focus on creating shared access signatures for containers and blobs by creating two console applications.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The first console application generates shared access signatures on a container and on a blob.</source>
          <target state="new">The first console application generates shared access signatures on a container and on a blob.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This application has knowledge of the storage account keys.</source>
          <target state="new">This application has knowledge of the storage account keys.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The second console application, which will act as a client application, accesses container and blob resources using the shared access signatures created with the first application.</source>
          <target state="new">The second console application, which will act as a client application, accesses container and blob resources using the shared access signatures created with the first application.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This application uses the shared access signatures only to authenticate its access to the container and blob resources - it does not have knowledge of the account keys.</source>
          <target state="new">This application uses the shared access signatures only to authenticate its access to the container and blob resources - it does not have knowledge of the account keys.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Part 1: Create a Console Application to Generate Shared Access Signatures</source>
          <target state="new">Part 1: Create a Console Application to Generate Shared Access Signatures</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>First, ensure that you have the Azure Storage Client Library for .NET installed.</source>
          <target state="new">First, ensure that you have the Azure Storage Client Library for .NET installed.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can install the <bpt id="p1">[</bpt>NuGet package<ept id="p1">]</ept><bpt id="p2">(http://nuget.org/packages/WindowsAzure.Storage/ "</bpt>NuGet package<ept id="p2">")</ept> containing the most up-to-date assemblies for the client library; this is the recommended method for ensuring that you have the most recent fixes.</source>
          <target state="new">You can install the <bpt id="p1">[</bpt>NuGet package<ept id="p1">]</ept><bpt id="p2">(http://nuget.org/packages/WindowsAzure.Storage/ "</bpt>NuGet package<ept id="p2">")</ept> containing the most up-to-date assemblies for the client library; this is the recommended method for ensuring that you have the most recent fixes.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can also download the client library as part of the most recent version of the <bpt id="p1">[</bpt>Azure SDK for .NET<ept id="p1">](http://azure.microsoft.com/downloads/)</ept>.</source>
          <target state="new">You can also download the client library as part of the most recent version of the <bpt id="p1">[</bpt>Azure SDK for .NET<ept id="p1">](http://azure.microsoft.com/downloads/)</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In Visual Studio, create a new Windows console application and name it <bpt id="p1">**</bpt>GenerateSharedAccessSignatures<ept id="p1">**</ept>.</source>
          <target state="new">In Visual Studio, create a new Windows console application and name it <bpt id="p1">**</bpt>GenerateSharedAccessSignatures<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Add references to  <bpt id="p1">**</bpt>Microsoft.WindowsAzure.Configuration.dll<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Microsoft.WindowsAzure.Storage.dll<ept id="p2">**</ept>, using either of the following approaches:</source>
          <target state="new">Add references to  <bpt id="p1">**</bpt>Microsoft.WindowsAzure.Configuration.dll<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Microsoft.WindowsAzure.Storage.dll<ept id="p2">**</ept>, using either of the following approaches:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you want to install the NuGet package, first install the <bpt id="p1">[</bpt>NuGet Package Manager Extension for Visual Studio<ept id="p1">](http://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c)</ept>.</source>
          <target state="new">If you want to install the NuGet package, first install the <bpt id="p1">[</bpt>NuGet Package Manager Extension for Visual Studio<ept id="p1">](http://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c)</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In Visual Studio, select <bpt id="p1">**</bpt>Project | Manage NuGet Packages<ept id="p1">**</ept>, search online for <bpt id="p2">**</bpt>Azure Storage<ept id="p2">**</ept>, and follow the instructions to install.</source>
          <target state="new">In Visual Studio, select <bpt id="p1">**</bpt>Project | Manage NuGet Packages<ept id="p1">**</ept>, search online for <bpt id="p2">**</bpt>Azure Storage<ept id="p2">**</ept>, and follow the instructions to install.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Alternatively, locate the assemblies in your installation of the Azure SDK and add references to them.</source>
          <target state="new">Alternatively, locate the assemblies in your installation of the Azure SDK and add references to them.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>At the top of the Program.cs file, add the following <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statements:</source>
          <target state="new">At the top of the Program.cs file, add the following <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statements:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Edit the app.config file so that it contains a configuration setting with a connection string that points to your storage account.</source>
          <target state="new">Edit the app.config file so that it contains a configuration setting with a connection string that points to your storage account.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Your app.config file should look similar to this one:</source>
          <target state="new">Your app.config file should look similar to this one:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Generate a Shared Access Signature URI for a Container</source>
          <target state="new">Generate a Shared Access Signature URI for a Container</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To begin with, we'll add a method to generate a shared access signature on a new container.</source>
          <target state="new">To begin with, we'll add a method to generate a shared access signature on a new container.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In this case the signature is not associated with a stored access policy, so it carries on the URI the information indicating its expiry time and the permissions that it grants.</source>
          <target state="new">In this case the signature is not associated with a stored access policy, so it carries on the URI the information indicating its expiry time and the permissions that it grants.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>First, add code to the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method to authenticate access to your storage account and create a new container:</source>
          <target state="new">First, add code to the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method to authenticate access to your storage account and create a new container:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Next, add a new method that generates the shared access signature for the container and returns the signature URI:</source>
          <target state="new">Next, add a new method that generates the shared access signature for the container and returns the signature URI:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Add the following lines at the bottom of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, before the call to <bpt id="p2">**</bpt>Console.ReadLine()<ept id="p2">**</ept>, to call <bpt id="p3">**</bpt>GetContainerSasUri()<ept id="p3">**</ept> and write the signature URI to the console window:</source>
          <target state="new">Add the following lines at the bottom of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, before the call to <bpt id="p2">**</bpt>Console.ReadLine()<ept id="p2">**</ept>, to call <bpt id="p3">**</bpt>GetContainerSasUri()<ept id="p3">**</ept> and write the signature URI to the console window:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Compile and run to output the shared access signature URI for the new container.</source>
          <target state="new">Compile and run to output the shared access signature URI for the new container.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The URI will be similar to the following URI:</source>
          <target state="new">The URI will be similar to the following URI:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Once you have run the code, the shared access signature that you created on the container will be valid for the next twenty-four hours.</source>
          <target state="new">Once you have run the code, the shared access signature that you created on the container will be valid for the next twenty-four hours.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The signature grants a client permission to list blobs in the container and to write a new blob to the container.</source>
          <target state="new">The signature grants a client permission to list blobs in the container and to write a new blob to the container.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Generate a Shared Access Signature URI for a Blob</source>
          <target state="new">Generate a Shared Access Signature URI for a Blob</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Next, we'll write similar code to create a new blob within the container and generate a shared access signature for it.</source>
          <target state="new">Next, we'll write similar code to create a new blob within the container and generate a shared access signature for it.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This shared access signature is not associated with a stored access policy, so it includes the start time, expiry time, and permission information on the URI.</source>
          <target state="new">This shared access signature is not associated with a stored access policy, so it includes the start time, expiry time, and permission information on the URI.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Add a new method that creates a new blob and write some text to it, then generates a shared access signature and returns the signature URI:</source>
          <target state="new">Add a new method that creates a new blob and write some text to it, then generates a shared access signature and returns the signature URI:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>At the bottom of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, add the following lines to call <bpt id="p2">**</bpt>GetBlobSasUri()<ept id="p2">**</ept>, before the call to <bpt id="p3">**</bpt>Console.ReadLine()<ept id="p3">**</ept>, and write the shared access signature URI to the console window:</source>
          <target state="new">At the bottom of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, add the following lines to call <bpt id="p2">**</bpt>GetBlobSasUri()<ept id="p2">**</ept>, before the call to <bpt id="p3">**</bpt>Console.ReadLine()<ept id="p3">**</ept>, and write the shared access signature URI to the console window:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Compile and run to output the shared access signature URI for the new blob.</source>
          <target state="new">Compile and run to output the shared access signature URI for the new blob.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The URI will be similar to the following URI:</source>
          <target state="new">The URI will be similar to the following URI:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Create a Stored Access Policy on the Container</source>
          <target state="new">Create a Stored Access Policy on the Container</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Now let's create a stored access policy on the container, which will define the constraints for any shared access signatures that are associated with it.</source>
          <target state="new">Now let's create a stored access policy on the container, which will define the constraints for any shared access signatures that are associated with it.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In the previous examples, we specified the start time (implicitly or explicitly), the expiry time, and the permissions on the shared access signature URI itself.</source>
          <target state="new">In the previous examples, we specified the start time (implicitly or explicitly), the expiry time, and the permissions on the shared access signature URI itself.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In the following examples, we will specify these on the stored access policy and not on the shared access signature.</source>
          <target state="new">In the following examples, we will specify these on the stored access policy and not on the shared access signature.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Doing so enables us to change these constraints without reissuing the shared access signature.</source>
          <target state="new">Doing so enables us to change these constraints without reissuing the shared access signature.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It's possible to have one or more of the constraints on the shared access signature and the remainder on the stored access policy.</source>
          <target state="new">It's possible to have one or more of the constraints on the shared access signature and the remainder on the stored access policy.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>However, you can only specify the start time, expiry time, and permissions in one place or the other; for example, you can't specify permissions on the shared access signature and also specify them on the stored access policy.</source>
          <target state="new">However, you can only specify the start time, expiry time, and permissions in one place or the other; for example, you can't specify permissions on the shared access signature and also specify them on the stored access policy.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Note that when you add an access policy to a container, you must get the container's existing permissions, add the new access policy, and then set the container's permissions.</source>
          <target state="new">Note that when you add an access policy to a container, you must get the container's existing permissions, add the new access policy, and then set the container's permissions.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Add a new method that creates a new stored access policy on a container and returns the name of the policy:</source>
          <target state="new">Add a new method that creates a new stored access policy on a container and returns the name of the policy:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>At the bottom of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, before the call to <bpt id="p2">**</bpt>Console.ReadLine()<ept id="p2">**</ept>, add the following lines to first clear any existing access policies and then call the <bpt id="p3">**</bpt>CreateSharedAccessPolicy()<ept id="p3">**</ept> method:</source>
          <target state="new">At the bottom of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, before the call to <bpt id="p2">**</bpt>Console.ReadLine()<ept id="p2">**</ept>, add the following lines to first clear any existing access policies and then call the <bpt id="p3">**</bpt>CreateSharedAccessPolicy()<ept id="p3">**</ept> method:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Note that when you clear the access policies on a container, you must first get the container's existing permissions, then clear the permissions, then set the permissions again.</source>
          <target state="new">Note that when you clear the access policies on a container, you must first get the container's existing permissions, then clear the permissions, then set the permissions again.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Generate a Shared Access Signature URI on the Container That Uses an Access Policy</source>
          <target state="new">Generate a Shared Access Signature URI on the Container That Uses an Access Policy</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Next, we'll create another shared access signature on the container that we created earlier, but this time we'll associate the signature with the access policy that we created in the previous example.</source>
          <target state="new">Next, we'll create another shared access signature on the container that we created earlier, but this time we'll associate the signature with the access policy that we created in the previous example.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Add a new method to generate another shared access signature on the container:</source>
          <target state="new">Add a new method to generate another shared access signature on the container:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>At the bottom of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, before the call to <bpt id="p2">**</bpt>Console.ReadLine()<ept id="p2">**</ept>, add the following lines to call the <bpt id="p3">**</bpt>GetContainerSasUriWithPolicy<ept id="p3">**</ept> method:</source>
          <target state="new">At the bottom of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, before the call to <bpt id="p2">**</bpt>Console.ReadLine()<ept id="p2">**</ept>, add the following lines to call the <bpt id="p3">**</bpt>GetContainerSasUriWithPolicy<ept id="p3">**</ept> method:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Generate a Shared Access Signature URI on the Blob That Uses an Access Policy</source>
          <target state="new">Generate a Shared Access Signature URI on the Blob That Uses an Access Policy</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Finally, we'll add a similar method to create another blob and generate a shared access signature that's associated with an access policy.</source>
          <target state="new">Finally, we'll add a similar method to create another blob and generate a shared access signature that's associated with an access policy.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Add a new method to create a blob and generate a shared access signature:</source>
          <target state="new">Add a new method to create a blob and generate a shared access signature:</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>At the bottom of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, before the call to <bpt id="p2">**</bpt>Console.ReadLine()<ept id="p2">**</ept>, add the following lines to call the <bpt id="p3">**</bpt>GetBlobSasUriWithPolicy<ept id="p3">**</ept> method:</source>
          <target state="new">At the bottom of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, before the call to <bpt id="p2">**</bpt>Console.ReadLine()<ept id="p2">**</ept>, add the following lines to call the <bpt id="p3">**</bpt>GetBlobSasUriWithPolicy<ept id="p3">**</ept> method:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method should now look like this in its entirety.</source>
          <target state="new">The <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method should now look like this in its entirety.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Run it to write the shared access signature URIs to the console window, then copy and paste them into a text file for use in the second part of this tutorial.</source>
          <target state="new">Run it to write the shared access signature URIs to the console window, then copy and paste them into a text file for use in the second part of this tutorial.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When you run the GenerateSharedAccessSignatures console application, you'll see output similar to the following in the console window.</source>
          <target state="new">When you run the GenerateSharedAccessSignatures console application, you'll see output similar to the following in the console window.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>These are the shared access signatures that you'll use in Part 2 of the tutorial.</source>
          <target state="new">These are the shared access signatures that you'll use in Part 2 of the tutorial.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>sas-console-output-1</source>
          <target state="new">sas-console-output-1</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Part 2: Create a Console Application to Test the Shared Access Signatures</source>
          <target state="new">Part 2: Create a Console Application to Test the Shared Access Signatures</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To test the shared access signatures created in the previous examples, we'll create a second console application that uses the signatures to perform operations on the container and on a blob.</source>
          <target state="new">To test the shared access signatures created in the previous examples, we'll create a second console application that uses the signatures to perform operations on the container and on a blob.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If more than 24 hours have passed since you completed the first part of the tutorial, the signatures you generated will no longer be valid.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If more than 24 hours have passed since you completed the first part of the tutorial, the signatures you generated will no longer be valid.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In this case, you should run the code in the first console application to generate fresh shared access signatures for use in the second part of the tutorial.</source>
          <target state="new">In this case, you should run the code in the first console application to generate fresh shared access signatures for use in the second part of the tutorial.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In Visual Studio, create a new Windows console application and name it <bpt id="p1">**</bpt>ConsumeSharedAccessSignatures<ept id="p1">**</ept>.</source>
          <target state="new">In Visual Studio, create a new Windows console application and name it <bpt id="p1">**</bpt>ConsumeSharedAccessSignatures<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Add references to <bpt id="p1">**</bpt>Microsoft.WindowsAzure.Configuration.dll<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Microsoft.WindowsAzure.Storage.dll<ept id="p2">**</ept>, as you did previously.</source>
          <target state="new">Add references to <bpt id="p1">**</bpt>Microsoft.WindowsAzure.Configuration.dll<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Microsoft.WindowsAzure.Storage.dll<ept id="p2">**</ept>, as you did previously.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>At the top of the Program.cs file, add the following <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statements:</source>
          <target state="new">At the top of the Program.cs file, add the following <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statements:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In the body of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, add the following constants, and update their values to the shared access signatures that you generated in part 1 of the tutorial.</source>
          <target state="new">In the body of the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method, add the following constants, and update their values to the shared access signatures that you generated in part 1 of the tutorial.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Add a Method to Try Container Operations Using a Shared Access Signature</source>
          <target state="new">Add a Method to Try Container Operations Using a Shared Access Signature</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Next, we'll add a method that tests some representative container operations using a shared access signature on the container.</source>
          <target state="new">Next, we'll add a method that tests some representative container operations using a shared access signature on the container.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Note that the shared access signature is used to return a reference to the container, authenticating access to the container based on the signature alone.</source>
          <target state="new">Note that the shared access signature is used to return a reference to the container, authenticating access to the container based on the signature alone.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Add the following method to Program.cs:</source>
          <target state="new">Add the following method to Program.cs:</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Update the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method to call <bpt id="p2">**</bpt>UseContainerSAS()<ept id="p2">**</ept> with both of the shared access signatures that you created on the container:</source>
          <target state="new">Update the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method to call <bpt id="p2">**</bpt>UseContainerSAS()<ept id="p2">**</ept> with both of the shared access signatures that you created on the container:</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Add a Method to Try Blob Operations Using a Shared Access Signature</source>
          <target state="new">Add a Method to Try Blob Operations Using a Shared Access Signature</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Finally, we'll add a method that tests some representative blob operations using a shared access signature on the blob.</source>
          <target state="new">Finally, we'll add a method that tests some representative blob operations using a shared access signature on the blob.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In this case we use the constructor <bpt id="p1">**</bpt>CloudBlockBlob(String)<ept id="p1">**</ept>, passing in the shared access signature, to return a reference to the blob.</source>
          <target state="new">In this case we use the constructor <bpt id="p1">**</bpt>CloudBlockBlob(String)<ept id="p1">**</ept>, passing in the shared access signature, to return a reference to the blob.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>No other authentication is required; it's based on the signature alone.</source>
          <target state="new">No other authentication is required; it's based on the signature alone.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Add the following method to Program.cs:</source>
          <target state="new">Add the following method to Program.cs:</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Update the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method to call <bpt id="p2">**</bpt>UseBlobSAS()<ept id="p2">**</ept> with both of the shared access signatures that you created on the blob:</source>
          <target state="new">Update the <bpt id="p1">**</bpt>Main()<ept id="p1">**</ept> method to call <bpt id="p2">**</bpt>UseBlobSAS()<ept id="p2">**</ept> with both of the shared access signatures that you created on the blob:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Run the console application and observe the output to see which operations are permitted for which signatures.</source>
          <target state="new">Run the console application and observe the output to see which operations are permitted for which signatures.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The output in the console window will look similar to the following:</source>
          <target state="new">The output in the console window will look similar to the following:</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>sas-console-output-2</source>
          <target state="new">sas-console-output-2</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Shared Access Signatures, Part 1: Understanding the SAS Model</source>
          <target state="new">Shared Access Signatures, Part 1: Understanding the SAS Model</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Manage Access to Azure Storage Resources</source>
          <target state="new">Manage Access to Azure Storage Resources</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Delegating Access with a Shared Access Signature (REST API)</source>
          <target state="new">Delegating Access with a Shared Access Signature (REST API)</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Introducing Table and Queue SAS</source>
          <target state="new">Introducing Table and Queue SAS</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ef5ba216bc4bb00dacd5de2a36d96cf23f08cc6</xliffext:olfilehash>
  </header>
</xliff>