<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reliable Actors Notes on Actor type serialization</source>
          <target state="new">Reliable Actors Notes on Actor type serialization</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Discusses basic requirements for defining serializable classes that can be used to define Service Fabric Reliable Actor state and interfaces</source>
          <target state="new">Discusses basic requirements for defining serializable classes that can be used to define Service Fabric Reliable Actor state and interfaces</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Notes on Service Fabric Reliable Actors type serialization</source>
          <target state="new">Notes on Service Fabric Reliable Actors type serialization</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>There are few important aspects that needs to be kept in mind while defining the Actor's interface(s) and State: types need to be Data Contract serializable.</source>
          <target state="new">There are few important aspects that needs to be kept in mind while defining the Actor's interface(s) and State: types need to be Data Contract serializable.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>More information about Data Contracts can be found on <bpt id="p1">[</bpt>MSDN<ept id="p1">](https://msdn.microsoft.com/library/ms731923.aspx)</ept>.</source>
          <target state="new">More information about Data Contracts can be found on <bpt id="p1">[</bpt>MSDN<ept id="p1">](https://msdn.microsoft.com/library/ms731923.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Types used in Actor Interface(s)</source>
          <target state="new">Types used in Actor Interface(s)</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The arguments of all the methods and the result type of the task returned by each method defined in the <bpt id="p1">[</bpt>actor interface<ept id="p1">](service-fabric-reliable-actors-introduction.md#actors)</ept> need to be data contract serializable.</source>
          <target state="new">The arguments of all the methods and the result type of the task returned by each method defined in the <bpt id="p1">[</bpt>actor interface<ept id="p1">](service-fabric-reliable-actors-introduction.md#actors)</ept> need to be data contract serializable.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This also applies to the arguments of methods defined in <bpt id="p1">[</bpt>actor event interfaces<ept id="p1">](service-fabric-reliable-actors-events.md#actor-events)</ept>.</source>
          <target state="new">This also applies to the arguments of methods defined in <bpt id="p1">[</bpt>actor event interfaces<ept id="p1">](service-fabric-reliable-actors-events.md#actor-events)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>(Actor event interface methods always return void).</source>
          <target state="new">(Actor event interface methods always return void).</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For instance, if the <ph id="ph1">`IVoiceMail`</ph> interface defines a method as:</source>
          <target state="new">For instance, if the <ph id="ph1">`IVoiceMail`</ph> interface defines a method as:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`List&lt;T&gt;`</ph> is a standard .NET type that is already Data Contract serializable.</source>
          <target state="new"><ph id="ph1">`List&lt;T&gt;`</ph> is a standard .NET type that is already Data Contract serializable.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Voicemail`</ph> type needs to be Data Contract serializable.</source>
          <target state="new">The <ph id="ph1">`Voicemail`</ph> type needs to be Data Contract serializable.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Actor State class</source>
          <target state="new">Actor State class</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The actor state needs to be data contract serializable.</source>
          <target state="new">The actor state needs to be data contract serializable.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For instance if we have an Actor class definition that looks like:</source>
          <target state="new">For instance if we have an Actor class definition that looks like:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The state class is going to be defined with the class and its members annotated with the DataContract and DataMember attributes respectively.</source>
          <target state="new">The state class is going to be defined with the class and its members annotated with the DataContract and DataMember attributes respectively.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f76cb4f6b5ec1c25dd6f7570ab78e15fbf7324a</xliffext:olfilehash>
  </header>
</xliff>