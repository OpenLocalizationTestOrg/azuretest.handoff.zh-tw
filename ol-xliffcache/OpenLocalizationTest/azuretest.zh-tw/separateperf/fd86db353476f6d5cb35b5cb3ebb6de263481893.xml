{
  "nodes": [
    {
      "content": "Deploy and Manage Azure Virtual Machines using Resource Manager Templates and the Azure CLI for Mac, Linux, and Windows",
      "pos": [
        28,
        147
      ]
    },
    {
      "content": "Easily deploy the most common set of configurations for Azure virtual machines and manage them using Resource Manager Templates and the Azure CLI.",
      "pos": [
        167,
        313
      ]
    },
    {
      "content": "Deploy and Manage Virtual Machines using Azure Resource Manager Templates and the Azure CLI",
      "pos": [
        650,
        741
      ]
    },
    {
      "content": "This article shows you how to use Azure Resource Manager templates and Azure CLI to do the following common tasks for deploying and managing Azure Virtual Machines.",
      "pos": [
        743,
        907
      ]
    },
    {
      "content": "For more templates you can use, see <bpt id=\"p1\">[</bpt>Azure Quickstart Templates<ept id=\"p1\">](http://azure.microsoft.com/documentation/templates/)</ept> and <bpt id=\"p2\">[</bpt>App Frameworks<ept id=\"p2\">](virtual-machines-app-frameworks.md)</ept>.",
      "pos": [
        908,
        1083
      ]
    },
    {
      "content": "Quick-create a Virtual Machine in Azure",
      "pos": [
        1088,
        1127
      ]
    },
    {
      "content": "Deploy a Virtual Machine in Azure from a template",
      "pos": [
        1161,
        1210
      ]
    },
    {
      "content": "Create a Virtual Machine from a custom image",
      "pos": [
        1254,
        1298
      ]
    },
    {
      "content": "Deploy a VM with virtual network and load balancer",
      "pos": [
        1331,
        1381
      ]
    },
    {
      "content": "Remove a resource group",
      "pos": [
        1476,
        1499
      ]
    },
    {
      "content": "Show the log for a resource group deployment",
      "pos": [
        1530,
        1574
      ]
    },
    {
      "content": "Display information about a Virtual Machine",
      "pos": [
        1626,
        1669
      ]
    },
    {
      "content": "Connect to a Linux-based Virtual Machine",
      "pos": [
        1720,
        1760
      ]
    },
    {
      "content": "Stop a Virtual Machine",
      "pos": [
        1807,
        1829
      ]
    },
    {
      "content": "Start a Virtual Machine",
      "pos": [
        1859,
        1882
      ]
    },
    {
      "content": "Attach a data disk",
      "pos": [
        1913,
        1931
      ]
    },
    {
      "content": "Getting Ready",
      "pos": [
        1958,
        1971
      ]
    },
    {
      "content": "Before you can use the Azure CLI with Azure resource groups you will need to have the right Azure CLI version and a work or school ID (also called an organizational ID).",
      "pos": [
        1973,
        2142
      ]
    },
    {
      "content": "Update your Azure CLI version to 0.9.0 or later",
      "pos": [
        2148,
        2195
      ]
    },
    {
      "pos": [
        2197,
        2284
      ],
      "content": "Type <ph id=\"ph1\">`azure --version`</ph> to see whether you have already installed version 0.9.0 or later"
    },
    {
      "pos": [
        2334,
        2551
      ],
      "content": "If your version is not 0.9.0 or later, you'll need to either <bpt id=\"p1\">[</bpt>install the Azure CLI<ept id=\"p1\">](../xplat-cli-install.md)</ept> or update using either one of the native installers or through <bpt id=\"p2\">**</bpt>npm<ept id=\"p2\">**</ept> by typing <ph id=\"ph1\">`npm update -g azure-cli`</ph>."
    },
    {
      "content": "You can also run Azure CLI as a Docker container using the following <bpt id=\"p1\">[</bpt>Docker image<ept id=\"p1\">](https://registry.hub.docker.com/u/microsoft/azure-cli/)</ept>.",
      "pos": [
        2553,
        2693
      ]
    },
    {
      "content": "From a Docker host, run the following command:",
      "pos": [
        2694,
        2740
      ]
    },
    {
      "content": "Set your Azure account and subscription",
      "pos": [
        2786,
        2825
      ]
    },
    {
      "content": "If you don't already have an Azure subscription but you do have an MSDN subscription, you can activate your <bpt id=\"p1\">[</bpt>MSDN subscriber benefits<ept id=\"p1\">](http://azure.microsoft.com/pricing/member-offers/msdn-benefits-details/)</ept>.",
      "pos": [
        2827,
        3035
      ]
    },
    {
      "content": "Or you can sign up for a <bpt id=\"p1\">[</bpt>free trial<ept id=\"p1\">](http://azure.microsoft.com/pricing/free-trial/)</ept>.",
      "pos": [
        3036,
        3122
      ]
    },
    {
      "pos": [
        3124,
        3332
      ],
      "content": "You you will need to have a work or school account to use Azure resource management templates, if you have one you can type <ph id=\"ph1\">`azure login`</ph>, enter your username and password, and you should successfully log in."
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you don't have one, you'll see an error message indicating that you need a different type of account.",
      "pos": [
        3337,
        3454
      ]
    },
    {
      "content": "To create one from your current Azure account, see <bpt id=\"p1\">[</bpt>Creating a Work or School identity in Azure Active Directory<ept id=\"p1\">](resource-group-create-work-id-from-personal.md)</ept>.",
      "pos": [
        3455,
        3617
      ]
    },
    {
      "content": "Your account may have more than one subscription.",
      "pos": [
        3619,
        3668
      ]
    },
    {
      "content": "You can list your subscriptions by typing <ph id=\"ph1\">`azure account list`</ph>, which might look something like this:",
      "pos": [
        3669,
        3770
      ]
    },
    {
      "content": "You can set the current Azure subscription by typing",
      "pos": [
        4630,
        4682
      ]
    },
    {
      "content": "with the subscription name or the ID that has the resources you want to manage.",
      "pos": [
        4738,
        4817
      ]
    },
    {
      "content": "Switch to the Azure CLI resource group mode",
      "pos": [
        4823,
        4866
      ]
    },
    {
      "content": "By default, the Azure CLI starts in the service management mode (<bpt id=\"p1\">**</bpt>asm<ept id=\"p1\">**</ept> mode).",
      "pos": [
        4868,
        4947
      ]
    },
    {
      "content": "Type",
      "pos": [
        4948,
        4952
      ]
    },
    {
      "content": "to switch to resource group mode.",
      "pos": [
        4982,
        5015
      ]
    },
    {
      "pos": [
        5020,
        5118
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> You can switch back to the default set of commands by typing <ph id=\"ph2\">`azure config mode asm`</ph>."
    },
    {
      "content": "Understanding Azure Resource Templates and Resource Groups",
      "pos": [
        5123,
        5181
      ]
    },
    {
      "content": "Most applications are built out of a combination of different resource types (such as one or more VMs and Storage accounts, a SQL database, a Virtual Network, or a content delivery network, or <bpt id=\"p1\">*</bpt>CDN<ept id=\"p1\">*</ept>).",
      "pos": [
        5183,
        5383
      ]
    },
    {
      "content": "The default Azure service management API and the Azure classic portal represented these items using a service-by-service approach, which requires you to deploy and manage the individual services individually (or find other tools that do so), and not as a single logical unit of deployment.",
      "pos": [
        5384,
        5673
      ]
    },
    {
      "content": "<bpt id=\"p1\">*</bpt>Azure Resource Manager Templates<ept id=\"p1\">*</ept> make it possible for you to deploy and manage these different resources as one logical deployment unit in a declarative fashion.",
      "pos": [
        5675,
        5838
      ]
    },
    {
      "content": "Instead of imperatively telling Azure what to deploy one command after another, you describe your entire deployment in a JSON file -- all of the resources and associated configuration and deployment parameters -- and tell Azure to deploy those resources as one group.",
      "pos": [
        5839,
        6106
      ]
    },
    {
      "content": "You can then manage the overall lifecycle of the group's resources by using Azure CLI resource management commands to:",
      "pos": [
        6109,
        6227
      ]
    },
    {
      "content": "Stop, start, or delete all of the resources within the group at once.",
      "pos": [
        6231,
        6300
      ]
    },
    {
      "content": "Apply Role-Based Access Control (RBAC) rules to lock down security permissions on them.",
      "pos": [
        6304,
        6391
      ]
    },
    {
      "content": "Audit operations.",
      "pos": [
        6395,
        6412
      ]
    },
    {
      "content": "Tag resources with additional meta-data for better tracking.",
      "pos": [
        6416,
        6476
      ]
    },
    {
      "content": "You can learn lots more about Azure resource groups and what they can do for you <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](../resource-group-overview.md)</ept>.",
      "pos": [
        6479,
        6598
      ]
    },
    {
      "content": "If you're interested in authoring templates, see <bpt id=\"p1\">[</bpt>Authoring Azure Resource Manager Templates<ept id=\"p1\">](../resource-group-authoring-templates.md)</ept>.",
      "pos": [
        6599,
        6735
      ]
    },
    {
      "pos": [
        6741,
        6812
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"quick-create-a-vm-in-azure\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Quick-create a VM in Azure"
    },
    {
      "content": "Sometimes you know what image you need, and you need a VM from that image right now and you don't care too much about the infrastructure -- maybe you have to test something on a clean VM.",
      "pos": [
        6814,
        7001
      ]
    },
    {
      "content": "That's when you want to use the <ph id=\"ph1\">`azure vm quick-create`</ph> command, and pass the arguments necessary to create a VM and its infrastructure.",
      "pos": [
        7002,
        7138
      ]
    },
    {
      "content": "First, create your resource group.",
      "pos": [
        7140,
        7174
      ]
    },
    {
      "content": "Second, you'll need an image.",
      "pos": [
        7804,
        7833
      ]
    },
    {
      "content": "To find an image with the Azure CLI, see <bpt id=\"p1\">[</bpt>Navigating and Selecting Azure Virtual Machine images with PowerShell and the Azure CLI<ept id=\"p1\">](resource-groups-vm-searching.md)</ept>.",
      "pos": [
        7834,
        7998
      ]
    },
    {
      "content": "But for this quickstart, here's a short list of popular images.",
      "pos": [
        7999,
        8062
      ]
    },
    {
      "content": "We'll use CoreOS's Stable image for this quick-create.",
      "pos": [
        8063,
        8117
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> For the ComputeImageVersion, you can also simply supply 'latest' as the parameter in both the template langauge and in the Azure CLI.",
      "pos": [
        8121,
        8267
      ]
    },
    {
      "content": "This will allow you to always use the latest and patched version of the image without having to modidfy your scripts or templates.",
      "pos": [
        8268,
        8398
      ]
    },
    {
      "content": "This is shown below.",
      "pos": [
        8399,
        8419
      ]
    },
    {
      "content": "PublisherName",
      "pos": [
        8424,
        8437
      ]
    },
    {
      "content": "Offer",
      "pos": [
        8463,
        8468
      ]
    },
    {
      "content": "Sku",
      "pos": [
        8503,
        8506
      ]
    },
    {
      "content": "Version",
      "pos": [
        8533,
        8540
      ]
    },
    {
      "content": "OpenLogic",
      "pos": [
        8684,
        8693
      ]
    },
    {
      "content": "CentOS",
      "pos": [
        8719,
        8725
      ]
    },
    {
      "content": "7",
      "pos": [
        8764,
        8765
      ]
    },
    {
      "content": "7.0.201503",
      "pos": [
        8799,
        8809
      ]
    },
    {
      "content": "OpenLogic",
      "pos": [
        8823,
        8832
      ]
    },
    {
      "content": "CentOS",
      "pos": [
        8858,
        8864
      ]
    },
    {
      "content": "7.1",
      "pos": [
        8903,
        8906
      ]
    },
    {
      "content": "7.1.201504",
      "pos": [
        8938,
        8948
      ]
    },
    {
      "content": "CoreOS",
      "pos": [
        8962,
        8968
      ]
    },
    {
      "content": "CoreOS",
      "pos": [
        8997,
        9003
      ]
    },
    {
      "content": "Beta",
      "pos": [
        9042,
        9046
      ]
    },
    {
      "content": "647.0.0",
      "pos": [
        9077,
        9084
      ]
    },
    {
      "content": "CoreOS",
      "pos": [
        9101,
        9107
      ]
    },
    {
      "content": "CoreOS",
      "pos": [
        9136,
        9142
      ]
    },
    {
      "content": "Stable",
      "pos": [
        9181,
        9187
      ]
    },
    {
      "content": "633.1.0",
      "pos": [
        9216,
        9223
      ]
    },
    {
      "content": "MicrosoftDynamicsNAV",
      "pos": [
        9240,
        9260
      ]
    },
    {
      "content": "DynamicsNAV",
      "pos": [
        9275,
        9286
      ]
    },
    {
      "content": "2015",
      "pos": [
        9320,
        9324
      ]
    },
    {
      "content": "8.0.40459",
      "pos": [
        9355,
        9364
      ]
    },
    {
      "content": "MicrosoftSharePoint",
      "pos": [
        9379,
        9398
      ]
    },
    {
      "content": "MicrosoftSharePointServer",
      "pos": [
        9414,
        9439
      ]
    },
    {
      "content": "2013",
      "pos": [
        9459,
        9463
      ]
    },
    {
      "content": "1.0.0",
      "pos": [
        9494,
        9499
      ]
    },
    {
      "content": "msopentech",
      "pos": [
        9518,
        9528
      ]
    },
    {
      "content": "Oracle-Database-12c-Weblogic-Server-12c",
      "pos": [
        9553,
        9592
      ]
    },
    {
      "content": "Standard",
      "pos": [
        9598,
        9606
      ]
    },
    {
      "content": "1.0.0",
      "pos": [
        9633,
        9638
      ]
    },
    {
      "content": "msopentech",
      "pos": [
        9657,
        9667
      ]
    },
    {
      "content": "Oracle-Database-12c-Weblogic-Server-12c",
      "pos": [
        9692,
        9731
      ]
    },
    {
      "content": "Enterprise",
      "pos": [
        9737,
        9747
      ]
    },
    {
      "content": "1.0.0",
      "pos": [
        9772,
        9777
      ]
    },
    {
      "content": "MicrosoftSQLServer",
      "pos": [
        9796,
        9814
      ]
    },
    {
      "content": "SQL2014-WS2012R2",
      "pos": [
        9831,
        9847
      ]
    },
    {
      "content": "Enterprise-Optimized-for-DW",
      "pos": [
        9876,
        9903
      ]
    },
    {
      "content": "12.0.2430",
      "pos": [
        9911,
        9920
      ]
    },
    {
      "content": "MicrosoftSQLServer",
      "pos": [
        9935,
        9953
      ]
    },
    {
      "content": "SQL2014-WS2012R2",
      "pos": [
        9970,
        9986
      ]
    },
    {
      "content": "Enterprise-Optimized-for-OLTP",
      "pos": [
        10015,
        10044
      ]
    },
    {
      "content": "12.0.2430",
      "pos": [
        10050,
        10059
      ]
    },
    {
      "content": "Canonical",
      "pos": [
        10074,
        10083
      ]
    },
    {
      "content": "UbuntuServer",
      "pos": [
        10109,
        10121
      ]
    },
    {
      "content": "12.04.5-LTS",
      "pos": [
        10154,
        10165
      ]
    },
    {
      "content": "12.04.201504230",
      "pos": [
        10189,
        10204
      ]
    },
    {
      "content": "Canonical",
      "pos": [
        10213,
        10222
      ]
    },
    {
      "content": "UbuntuServer",
      "pos": [
        10248,
        10260
      ]
    },
    {
      "content": "14.04.2-LTS",
      "pos": [
        10293,
        10304
      ]
    },
    {
      "content": "14.04.201503090",
      "pos": [
        10328,
        10343
      ]
    },
    {
      "content": "MicrosoftWindowsServer",
      "pos": [
        10352,
        10374
      ]
    },
    {
      "content": "WindowsServer",
      "pos": [
        10387,
        10400
      ]
    },
    {
      "content": "2012-Datacenter",
      "pos": [
        10432,
        10447
      ]
    },
    {
      "content": "3.0.201503",
      "pos": [
        10467,
        10477
      ]
    },
    {
      "content": "MicrosoftWindowsServer",
      "pos": [
        10491,
        10513
      ]
    },
    {
      "content": "WindowsServer",
      "pos": [
        10526,
        10539
      ]
    },
    {
      "content": "2012-R2-Datacenter",
      "pos": [
        10571,
        10589
      ]
    },
    {
      "content": "4.0.201503",
      "pos": [
        10606,
        10616
      ]
    },
    {
      "content": "MicrosoftWindowsServer",
      "pos": [
        10630,
        10652
      ]
    },
    {
      "content": "WindowsServer",
      "pos": [
        10665,
        10678
      ]
    },
    {
      "content": "Windows-Server-Technical-Preview",
      "pos": [
        10710,
        10742
      ]
    },
    {
      "content": "5.0.201504",
      "pos": [
        10745,
        10755
      ]
    },
    {
      "content": "MicrosoftWindowsServerEssentials",
      "pos": [
        10769,
        10801
      ]
    },
    {
      "content": "WindowsServerEssentials",
      "pos": [
        10804,
        10827
      ]
    },
    {
      "content": "WindowsServerEssentials",
      "pos": [
        10849,
        10872
      ]
    },
    {
      "content": "1.0.141204",
      "pos": [
        10884,
        10894
      ]
    },
    {
      "content": "MicrosoftWindowsServerHPCPack",
      "pos": [
        10908,
        10937
      ]
    },
    {
      "content": "WindowsServerHPCPack",
      "pos": [
        10943,
        10963
      ]
    },
    {
      "content": "2012R2",
      "pos": [
        10988,
        10994
      ]
    },
    {
      "content": "4.3.4665",
      "pos": [
        11023,
        11031
      ]
    },
    {
      "content": "Just create your VM by entering the <ph id=\"ph1\">`azure vm quick-create command`</ph> and being ready for the prompts.",
      "pos": [
        11046,
        11146
      ]
    },
    {
      "content": "It should look something like this.",
      "pos": [
        11147,
        11182
      ]
    },
    {
      "content": "And away you go with your new VM.",
      "pos": [
        16303,
        16336
      ]
    },
    {
      "pos": [
        16341,
        16432
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"deploy-a-vm-in-azure-from-a-template\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Deploy a VM in Azure from a template"
    },
    {
      "content": "Use the instructions in these sections to deploy a new Azure VM using a template with the Azure CLI.",
      "pos": [
        16434,
        16534
      ]
    },
    {
      "content": "This template creates a single virtual machine in a new virtual network with a single subnet, and unlike <ph id=\"ph1\">`azure vm quick-create`</ph>, enables you to describe what you want precisely and repeat it without errors.",
      "pos": [
        16535,
        16742
      ]
    },
    {
      "content": "Here's what this template creates:",
      "pos": [
        16743,
        16777
      ]
    },
    {
      "content": "Step 1: Examine the JSON file for the template parameters",
      "pos": [
        16855,
        16912
      ]
    },
    {
      "content": "Here are the contents of the JSON file for the template.",
      "pos": [
        16914,
        16970
      ]
    },
    {
      "content": "(The template is also located in GitHub <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-simple-linux-vm/azuredeploy.json)</ept>.)",
      "pos": [
        16971,
        17131
      ]
    },
    {
      "content": "Templates are flexible, so the designer may have chosen to give you lots of parameters, or she may have chosen to offer only a few by creating a template that is more fixed.",
      "pos": [
        17133,
        17306
      ]
    },
    {
      "content": "In order to collect the information you need to pass the template as parameters, open the template file (this topic has a template inline, below) and examine the <bpt id=\"p1\">**</bpt>parameters<ept id=\"p1\">**</ept> values.",
      "pos": [
        17307,
        17491
      ]
    },
    {
      "content": "In this case, the template below will ask for:",
      "pos": [
        17493,
        17539
      ]
    },
    {
      "content": "a unique storage account name",
      "pos": [
        17543,
        17572
      ]
    },
    {
      "content": "an admin username for the VM",
      "pos": [
        17575,
        17603
      ]
    },
    {
      "content": "a password",
      "pos": [
        17606,
        17616
      ]
    },
    {
      "content": "a domain name for the outside world to use",
      "pos": [
        17619,
        17661
      ]
    },
    {
      "content": "and will accept a Ubuntu Server version number -- but only one of a list.",
      "pos": [
        17664,
        17737
      ]
    },
    {
      "content": "Once you decide on these values, you're ready to create a group for and deploy this template into your Azure subscription.",
      "pos": [
        17740,
        17862
      ]
    },
    {
      "content": "Step 2: Create the virtual machine with the template",
      "pos": [
        24068,
        24120
      ]
    },
    {
      "content": "Once you have your parameter values ready, you must create a resource group for your template deployment and then deploy the template.",
      "pos": [
        24122,
        24256
      ]
    },
    {
      "content": "To create the resource group, type <ph id=\"ph1\">`azure group create &lt;group name&gt; &lt;location&gt;`</ph> with the name of the group you want and the data center location into which you want to deploy.",
      "pos": [
        24258,
        24433
      ]
    },
    {
      "content": "This happens quickly:",
      "pos": [
        24434,
        24455
      ]
    },
    {
      "pos": [
        25096,
        25172
      ],
      "content": "Now to create the deployment, call <ph id=\"ph1\">`azure group deployment create`</ph> and pass:"
    },
    {
      "content": "the template file (in the case that you saved the above JSON template to a local file)",
      "pos": [
        25176,
        25262
      ]
    },
    {
      "content": "a template uri (in the case that you want to point at the file in Github or some other web address)",
      "pos": [
        25266,
        25365
      ]
    },
    {
      "content": "the resource group into which you want to deploy",
      "pos": [
        25368,
        25416
      ]
    },
    {
      "content": "and an optional deployment name.",
      "pos": [
        25419,
        25451
      ]
    },
    {
      "content": "You will be prompted to supply the values of parameters in the <bpt id=\"p1\">**</bpt>\"parameters\"<ept id=\"p1\">**</ept> section of the JSON file.",
      "pos": [
        25454,
        25559
      ]
    },
    {
      "content": "When you have specified all the parameter values, your deployment will begin.",
      "pos": [
        25560,
        25637
      ]
    },
    {
      "content": "Here is an example:",
      "pos": [
        25640,
        25659
      ]
    },
    {
      "content": "You will receive the following type of information:",
      "pos": [
        26100,
        26151
      ]
    },
    {
      "pos": [
        27654,
        27721
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"create-a-custom-vm-image\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Create a custom VM image"
    },
    {
      "content": "You've seen the basic usage of templates above, so now we can use similar instructions to create a custom VM from a specific .vhd file in Azure with a template using the Azure CLI.",
      "pos": [
        27723,
        27903
      ]
    },
    {
      "content": "The difference here is that this template creates a single virtual machine from a specified virtual hard disk (VHD).",
      "pos": [
        27904,
        28020
      ]
    },
    {
      "content": "Step 1: Examine the JSON file for the template",
      "pos": [
        28027,
        28073
      ]
    },
    {
      "pos": [
        28075,
        28336
      ],
      "content": "Here are the contents of the JSON file for the template that this section uses as an example, but you can always find the template itself <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](https://raw.githubusercontent.com/azurermtemplates/azurermtemplates/master/101-vm-from-user-image/azuredeploy.json)</ept>."
    },
    {
      "content": "Again, you will need to find the values you want to enter for the parameters that do not have default values.",
      "pos": [
        28338,
        28447
      ]
    },
    {
      "content": "When you run the <ph id=\"ph1\">`azure group deployment create`</ph> command, the Azure CLI will prompt you to enter those values.",
      "pos": [
        28448,
        28558
      ]
    },
    {
      "content": "Step 2: Obtain the VHD",
      "pos": [
        35463,
        35485
      ]
    },
    {
      "content": "Obviously, you'll need a .vhd for this.",
      "pos": [
        35487,
        35526
      ]
    },
    {
      "content": "You can either use one you already have in Azure, or you can upload one.",
      "pos": [
        35527,
        35599
      ]
    },
    {
      "pos": [
        35602,
        35747
      ],
      "content": "For a Windows-based virtual machine, see <bpt id=\"p1\">[</bpt>Create and upload a Windows Server VHD to Azure<ept id=\"p1\">](virtual-machines-create-upload-vhd-windows-server.md)</ept>."
    },
    {
      "pos": [
        35749,
        35874
      ],
      "content": "For a Linux-based virtual machine, see <bpt id=\"p1\">[</bpt>Create and upload a Linux VHD in Azure<ept id=\"p1\">](virtual-machines-linux-create-upload-vhd.md)</ept>."
    },
    {
      "content": "Step 3: Create the virtual machine with the template",
      "pos": [
        35880,
        35932
      ]
    },
    {
      "content": "Now you're ready to create a new virtual machine based on the .vhd.",
      "pos": [
        35934,
        36001
      ]
    },
    {
      "content": "Create a group to deploy into, using <ph id=\"ph1\">`azure group create &lt;location&gt;`</ph>:",
      "pos": [
        36002,
        36071
      ]
    },
    {
      "content": "Then create the deployment, using the <ph id=\"ph1\">`--template-uri`</ph> option to call in the template directly (or you can use the <ph id=\"ph2\">`--template-file`</ph> option to use a file that you have saved locally).",
      "pos": [
        36745,
        36928
      ]
    },
    {
      "content": "Note that because the template has defaults specified, you are only prompted for a few things.",
      "pos": [
        36929,
        37023
      ]
    },
    {
      "content": "If you deploy the template in different places, you may find some naming collisions occur with the default values (particularly the DNS name you create).",
      "pos": [
        37024,
        37177
      ]
    },
    {
      "content": "Output looks something like the following:",
      "pos": [
        37648,
        37690
      ]
    },
    {
      "pos": [
        40285,
        40478
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"deploy-a-multi-vm-application-that-uses-a-virtual-network-and-an-external-load-balancer\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Deploy a multi-VM application that uses a virtual network and an external load balancer"
    },
    {
      "content": "This template allows you to create 2 Virtual Machines under a Load balancer and configure a load balancing rule on Port 80.",
      "pos": [
        40480,
        40603
      ]
    },
    {
      "content": "This template also deploys a Storage Account, Virtual Network, Public IP address, Availability Set and Network Interfaces.",
      "pos": [
        40604,
        40726
      ]
    },
    {
      "content": "Follow these steps to deploy a multi-VM application that uses a virtual network and a load balancer using a Resource Manager template in the Github template repository using Azure PowerShell commands.",
      "pos": [
        40806,
        41006
      ]
    },
    {
      "content": "Step 1: Examine the JSON file for the template.",
      "pos": [
        41012,
        41059
      ]
    },
    {
      "content": "Here are the contents of the JSON file for the template.",
      "pos": [
        41061,
        41117
      ]
    },
    {
      "content": "If you want the most recent version, it's located <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-2-vms-loadbalancer-lbrules/azuredeploy.json)</ept>.",
      "pos": [
        41118,
        41298
      ]
    },
    {
      "content": "This topic uses the <ph id=\"ph1\">`--template-uri`</ph> switch to call in the template, but you can also use the <ph id=\"ph2\">`--template-file`</ph> switch to pass a local version.",
      "pos": [
        41299,
        41442
      ]
    },
    {
      "content": "Step 2: Create the deployment with the template.",
      "pos": [
        55611,
        55659
      ]
    },
    {
      "pos": [
        55661,
        55974
      ],
      "content": "Create a resource group for the template using <ph id=\"ph1\">`azure group create &lt;location&gt;`</ph>, and then create a deployment into that resource group using <ph id=\"ph2\">`azure group deployment create`</ph> and passing the resource group, a deployment name, and answering the prompts for parameters in the template that did not have default values."
    },
    {
      "content": "Now use the <ph id=\"ph1\">`azure group deployment create`</ph> command and the <ph id=\"ph2\">`--template-uri`</ph> option to deploy the template.",
      "pos": [
        56584,
        56691
      ]
    },
    {
      "content": "Be ready with your parameter values when it prompts you, as below.",
      "pos": [
        56692,
        56758
      ]
    },
    {
      "content": "Note that this template deploys a Windows Server image; however, it could easily be replaced by any Linux image, too.",
      "pos": [
        59514,
        59631
      ]
    },
    {
      "content": "Want to create a Docker Cluster across multiple regions?",
      "pos": [
        59632,
        59688
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>You can do it<ept id=\"p1\">](http://azure.microsoft.com/documentation/templates/201-discover-private-ip-dynamically/)</ept>.",
      "pos": [
        59689,
        59794
      ]
    },
    {
      "pos": [
        59800,
        59865
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"remove-a-resource-group\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Remove a resource group"
    },
    {
      "pos": [
        59867,
        59999
      ],
      "content": "Remember that you can redeploy to a resource group, but if you done with one, you delete it using <ph id=\"ph1\">`azure group delete &lt;group name&gt;`</ph>."
    },
    {
      "pos": [
        60274,
        60381
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"show-the-log-for-a-resource-group-deployment\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Show the log for a resource group deployment"
    },
    {
      "content": "This one is quite common while creating or using templates.",
      "pos": [
        60383,
        60442
      ]
    },
    {
      "content": "The call to display the deployment logs for a group is <ph id=\"ph1\">`azure group log show &lt;groupname&gt;`</ph>, which displays quite a bit of information useful to understand why something happened -- or didn't.",
      "pos": [
        60443,
        60633
      ]
    },
    {
      "content": "(For more information on troubleshooting your deployments, as well as other information about issues, see <bpt id=\"p1\">[</bpt>Troubleshooting Resource Group Deployments in Azure<ept id=\"p1\">](resource-group-deploy-debug.md)</ept>.)",
      "pos": [
        60634,
        60827
      ]
    },
    {
      "content": "To target specific failures, for example, you might use tools like <bpt id=\"p1\">**</bpt>jq<ept id=\"p1\">**</ept> to query things a bit more precisely, such as which individual failures you need to correct.",
      "pos": [
        60829,
        60995
      ]
    },
    {
      "content": "The following example uses <bpt id=\"p1\">**</bpt>jq<ept id=\"p1\">**</ept> to parse a deployment log for the <bpt id=\"p2\">**</bpt>lbgroup<ept id=\"p2\">**</ept>, looking for failures",
      "pos": [
        60996,
        61097
      ]
    },
    {
      "content": "You can discover very quickly what went wrong, fix, and retry.",
      "pos": [
        61205,
        61267
      ]
    },
    {
      "content": "In the following case, the template had been creating two VMs at the same time, which created a lock on the .vhd.",
      "pos": [
        61268,
        61381
      ]
    },
    {
      "content": "(After modifying the template, the deployment succeeded quickly.)",
      "pos": [
        61382,
        61447
      ]
    },
    {
      "pos": [
        61889,
        61994
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"display-information-about-a-virtual-machine\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Display information about a virtual machine"
    },
    {
      "content": "You can see information about specific VMs in your resource group using the <ph id=\"ph1\">`azure vm show &lt;groupname&gt; &lt;vmname&gt; command`</ph>.",
      "pos": [
        61996,
        62117
      ]
    },
    {
      "content": "You might need to list the VMs in a group, first, if you have more than one, using <ph id=\"ph1\">`azure vm list &lt;groupname&gt;`</ph>.",
      "pos": [
        62118,
        62229
      ]
    },
    {
      "content": "and then, looking up myVM1:",
      "pos": [
        62625,
        62652
      ]
    },
    {
      "pos": [
        65248,
        65526
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you want to programmatically store and manipulate the output of your console commands, you may want to use a JSON parsing tool such as <bpt id=\"p1\">**</bpt><bpt id=\"p2\">[</bpt>jq<ept id=\"p2\">](https://github.com/stedolan/jq)</ept><ept id=\"p1\">**</ept>, <bpt id=\"p3\">**</bpt><bpt id=\"p4\">[</bpt>jsawk<ept id=\"p4\">](https://github.com/micha/jsawk)</ept><ept id=\"p3\">**</ept>, or language libraries good for the task."
    },
    {
      "pos": [
        65532,
        65629
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"log-on-to-a-linux-based-virtual-machine\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Log on to a Linux-based virtual machine"
    },
    {
      "content": "Typically Linux machines are connected to through SSH.",
      "pos": [
        65631,
        65685
      ]
    },
    {
      "content": "For more information, see <bpt id=\"p1\">[</bpt>How to Use SSH with Linux on Azure<ept id=\"p1\">](virtual-machines-linux-use-ssh-key.md)</ept>.",
      "pos": [
        65686,
        65788
      ]
    },
    {
      "pos": [
        65793,
        65843
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"stop-a-virtual-machine\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Stop a VM"
    },
    {
      "content": "Run this command:",
      "pos": [
        65845,
        65862
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> Use this parameter to keep the virtual IP (VIP) of the vnet in case it's the last VM in that vnet.",
      "pos": [
        65920,
        66036
      ]
    },
    {
      "content": "If you use the <ph id=\"ph1\">`StayProvisioned`</ph> parameter, you'll still be billed for the VM.",
      "pos": [
        66046,
        66124
      ]
    },
    {
      "pos": [
        66129,
        66181
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"start-a-virtual-machine\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Start a VM"
    },
    {
      "content": "Run this command:",
      "pos": [
        66183,
        66200
      ]
    },
    {
      "pos": [
        66261,
        66316
      ],
      "content": "<ph id=\"ph1\">&lt;a id=\"attach-a-data-disk\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>TASK: Attach a Data Disk"
    },
    {
      "content": "You'll also need to decide whether to attach a new disk or one that contains data.",
      "pos": [
        66318,
        66400
      ]
    },
    {
      "content": "For a new disk, the command creates the .vhd file and attaches it in the same command.",
      "pos": [
        66401,
        66487
      ]
    },
    {
      "content": "To attach a new disk, run this command:",
      "pos": [
        66489,
        66528
      ]
    },
    {
      "content": "To attach an existing data disk, run this command:",
      "pos": [
        66602,
        66652
      ]
    },
    {
      "content": "Then you'll need to mount the disk, as you normally would in Linux (or in Windows).",
      "pos": [
        66721,
        66804
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        66811,
        66821
      ]
    },
    {
      "content": "For far more examples of Azure CLI usage with the <bpt id=\"p1\">**</bpt>arm<ept id=\"p1\">**</ept> mode, see <bpt id=\"p2\">[</bpt>Using the Microsoft Azure CLI for Mac, Linux, and Windows with Azure Resource Management<ept id=\"p2\">](xplat-cli-azure-resource-manager.md)</ept>.",
      "pos": [
        66823,
        67019
      ]
    },
    {
      "content": "To learn more about Azure resources and their concepts, see <bpt id=\"p1\">[</bpt>Azure Resource Manager Overview<ept id=\"p1\">](../resource-group-overview.md)</ept>.",
      "pos": [
        67020,
        67145
      ]
    },
    {
      "pos": [
        67147,
        67322
      ],
      "content": "For more templates you can use, see <bpt id=\"p1\">[</bpt>Azure Quickstart Templates<ept id=\"p1\">](http://azure.microsoft.com/documentation/templates/)</ept> and <bpt id=\"p2\">[</bpt>App Frameworks<ept id=\"p2\">](virtual-machines-app-frameworks.md)</ept>."
    }
  ],
  "content": "<properties \n    pageTitle=\"Deploy and Manage Azure Virtual Machines using Resource Manager Templates and the Azure CLI for Mac, Linux, and Windows\" \n    description=\"Easily deploy the most common set of configurations for Azure virtual machines and manage them using Resource Manager Templates and the Azure CLI.\" \n    services=\"virtual-machines\" \n    documentationCenter=\"\" \n    authors=\"squillace\" \n    manager=\"timlt\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"virtual-machines\" \n    ms.workload=\"infrastructure-services\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"09/01/2015\" \n    ms.author=\"rasquill\"/>\n\n# Deploy and Manage Virtual Machines using Azure Resource Manager Templates and the Azure CLI\n\nThis article shows you how to use Azure Resource Manager templates and Azure CLI to do the following common tasks for deploying and managing Azure Virtual Machines. For more templates you can use, see [Azure Quickstart Templates](http://azure.microsoft.com/documentation/templates/) and [App Frameworks](virtual-machines-app-frameworks.md).\n\n- [Quick-create a Virtual Machine in Azure](#quick-create-a-vm-in-azure)\n- [Deploy a Virtual Machine in Azure from a template](#deploy-a-vm-in-azure-from-a-template)\n- [Create a Virtual Machine from a custom image](#create-a-custom-vm-image) \n- [Deploy a VM with virtual network and load balancer](#deploy-a-multi-vm-application-that-uses-a-virtual-network-and-an-external-load-balancer)\n- [Remove a resource group](#remove-a-resource-group)\n- [Show the log for a resource group deployment](#show-the-log-for-a-resource-group-deployment)\n- [Display information about a Virtual Machine](#display-information-about-a-virtual-machine)\n- [Connect to a Linux-based Virtual Machine](#log-on-to-a-linux-based-virtual-machine)\n- [Stop a Virtual Machine](#stop-a-virtual-machine)\n- [Start a Virtual Machine](#start-a-virtual-machine)\n- [Attach a data disk](#attach-a-data-disk)\n\n## Getting Ready\n\nBefore you can use the Azure CLI with Azure resource groups you will need to have the right Azure CLI version and a work or school ID (also called an organizational ID).\n\n### Update your Azure CLI version to 0.9.0 or later\n\nType `azure --version` to see whether you have already installed version 0.9.0 or later \n\n    azure --version\n    0.9.0 (node: 0.10.25)\n\nIf your version is not 0.9.0 or later, you'll need to either [install the Azure CLI](../xplat-cli-install.md) or update using either one of the native installers or through **npm** by typing `npm update -g azure-cli`.\n\nYou can also run Azure CLI as a Docker container using the following [Docker image](https://registry.hub.docker.com/u/microsoft/azure-cli/). From a Docker host, run the following command:\n\n    docker run -it microsoft/azure-cli\n\n### Set your Azure account and subscription\n\nIf you don't already have an Azure subscription but you do have an MSDN subscription, you can activate your [MSDN subscriber benefits](http://azure.microsoft.com/pricing/member-offers/msdn-benefits-details/). Or you can sign up for a [free trial](http://azure.microsoft.com/pricing/free-trial/).\n\nYou you will need to have a work or school account to use Azure resource management templates, if you have one you can type `azure login`, enter your username and password, and you should successfully log in. \n\n> [AZURE.NOTE] If you don't have one, you'll see an error message indicating that you need a different type of account. To create one from your current Azure account, see [Creating a Work or School identity in Azure Active Directory](resource-group-create-work-id-from-personal.md).\n\nYour account may have more than one subscription. You can list your subscriptions by typing `azure account list`, which might look something like this:\n\n    azure account list\n    info:    Executing command account list\n    data:    Name                              Id                                    Tenandt Id                            Current\n    data:    --------------------------------  ------------------------------------  ------------------------------------  -------\n    data:    Contoso Admin                     xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  true   \n    data:    Fabrikam dev                      xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  false  \n    data:    Fabrikam test                     xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  false  \n    data:    Contoso production                xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  false  \n    \nYou can set the current Azure subscription by typing\n\n    azure account set <subscription name or ID> true\n\nwith the subscription name or the ID that has the resources you want to manage.\n\n### Switch to the Azure CLI resource group mode\n\nBy default, the Azure CLI starts in the service management mode (**asm** mode). Type \n\n    azure config mode arm\n\nto switch to resource group mode. \n\n> [AZURE.NOTE] You can switch back to the default set of commands by typing `azure config mode asm`.\n\n## Understanding Azure Resource Templates and Resource Groups\n\nMost applications are built out of a combination of different resource types (such as one or more VMs and Storage accounts, a SQL database, a Virtual Network, or a content delivery network, or *CDN*). The default Azure service management API and the Azure classic portal represented these items using a service-by-service approach, which requires you to deploy and manage the individual services individually (or find other tools that do so), and not as a single logical unit of deployment.\n\n*Azure Resource Manager Templates* make it possible for you to deploy and manage these different resources as one logical deployment unit in a declarative fashion. Instead of imperatively telling Azure what to deploy one command after another, you describe your entire deployment in a JSON file -- all of the resources and associated configuration and deployment parameters -- and tell Azure to deploy those resources as one group. \n\nYou can then manage the overall lifecycle of the group's resources by using Azure CLI resource management commands to:\n\n- Stop, start, or delete all of the resources within the group at once. \n- Apply Role-Based Access Control (RBAC) rules to lock down security permissions on them. \n- Audit operations. \n- Tag resources with additional meta-data for better tracking. \n\nYou can learn lots more about Azure resource groups and what they can do for you [here](../resource-group-overview.md). If you're interested in authoring templates, see [Authoring Azure Resource Manager Templates](../resource-group-authoring-templates.md). \n\n## <a id=\"quick-create-a-vm-in-azure\"></a>TASK: Quick-create a VM in Azure\n\nSometimes you know what image you need, and you need a VM from that image right now and you don't care too much about the infrastructure -- maybe you have to test something on a clean VM. That's when you want to use the `azure vm quick-create` command, and pass the arguments necessary to create a VM and its infrastructure.\n\nFirst, create your resource group. \n\n    azure group create coreos-quick westus\n    info:    Executing command group create\n    + Getting resource group coreos-quick                                          \n    + Creating resource group coreos-quick                                         \n    info:    Created resource group coreos-quick\n    data:    Id:                  /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/coreos-quick\n    data:    Name:                coreos-quick\n    data:    Location:            westus\n    data:    Provisioning State:  Succeeded\n    data:    Tags: \n    data:    \n    info:    group create command OK\n    \n\nSecond, you'll need an image. To find an image with the Azure CLI, see [Navigating and Selecting Azure Virtual Machine images with PowerShell and the Azure CLI](resource-groups-vm-searching.md). But for this quickstart, here's a short list of popular images. We'll use CoreOS's Stable image for this quick-create.\n\n> [AZURE.NOTE] For the ComputeImageVersion, you can also simply supply 'latest' as the parameter in both the template langauge and in the Azure CLI. This will allow you to always use the latest and patched version of the image without having to modidfy your scripts or templates. This is shown below. \n\n| PublisherName                        | Offer                                 | Sku                         | Version |\n|:---------------------------------|:-------------------------------------------|:---------------------------------|:--------------------|\n| OpenLogic                        | CentOS                                     | 7                                | 7.0.201503          |\n| OpenLogic                        | CentOS                                     | 7.1                              | 7.1.201504          |\n| CoreOS                           | CoreOS                                     | Beta                             | 647.0.0             |\n| CoreOS                           | CoreOS                                     | Stable                           | 633.1.0             |\n| MicrosoftDynamicsNAV             | DynamicsNAV                                | 2015                             | 8.0.40459           |\n| MicrosoftSharePoint              | MicrosoftSharePointServer                  | 2013                             | 1.0.0               |\n| msopentech                       | Oracle-Database-12c-Weblogic-Server-12c    | Standard                         | 1.0.0               |\n| msopentech                       | Oracle-Database-12c-Weblogic-Server-12c    | Enterprise                       | 1.0.0               |\n| MicrosoftSQLServer               | SQL2014-WS2012R2                           | Enterprise-Optimized-for-DW      | 12.0.2430           |\n| MicrosoftSQLServer               | SQL2014-WS2012R2                           | Enterprise-Optimized-for-OLTP    | 12.0.2430           |\n| Canonical                        | UbuntuServer                               | 12.04.5-LTS                      | 12.04.201504230     |\n| Canonical                        | UbuntuServer                               | 14.04.2-LTS                      | 14.04.201503090     |\n| MicrosoftWindowsServer           | WindowsServer                              | 2012-Datacenter                  | 3.0.201503          |\n| MicrosoftWindowsServer           | WindowsServer                              | 2012-R2-Datacenter               | 4.0.201503          |\n| MicrosoftWindowsServer           | WindowsServer                              | Windows-Server-Technical-Preview | 5.0.201504          |\n| MicrosoftWindowsServerEssentials | WindowsServerEssentials                    | WindowsServerEssentials          | 1.0.141204          |\n| MicrosoftWindowsServerHPCPack    | WindowsServerHPCPack                       | 2012R2                           | 4.3.4665            |\n\nJust create your VM by entering the `azure vm quick-create command` and being ready for the prompts. It should look something like this.\n\n    azure vm quick-create \n    info:    Executing command vm quick-create\n    Resource group name: coreos-quick\n    Virtual machine name: coreos\n    Location name: westus\n    Operating system Type [Windows, Linux]: linux\n    ImageURN (format: \"publisherName:offer:skus:version\"): coreos:coreos:stable:latest\n    User name: ops\n    Password: *********\n    Confirm password: *********\n    + Looking up the VM \"coreos\"                                                   \n    info:    Using the VM Size \"Standard_A1\"\n    info:    The [OS, Data] Disk or image configuration requires storage account\n    + Retrieving storage accounts                                                  \n    info:    Could not find any storage accounts in the region \"westus\", trying to create new one\n    + Creating storage account \"cli9fd3fce49e9a9b3d14302\" in \"westus\"              \n    + Looking up the storage account cli9fd3fce49e9a9b3d14302                      \n    + Looking up the NIC \"coreo-westu-1430261891570-nic\"                           \n    info:    An nic with given name \"coreo-westu-1430261891570-nic\" not found, creating a new one\n    + Looking up the virtual network \"coreo-westu-1430261891570-vnet\"              \n    info:    Preparing to create new virtual network and subnet\n    / Creating a new virtual network \"coreo-westu-1430261891570-vnet\" [address prefix: \"10.0.0.0/16\"] with subnet \"coreo-westu-1430261891570-sne+\" [address prefix: \"10.0.1.0/24\"]\n    + Looking up the virtual network \"coreo-westu-1430261891570-vnet\"              \n    + Looking up the subnet \"coreo-westu-1430261891570-snet\" under the virtual network \"coreo-westu-1430261891570-vnet\"\n    info:    Found public ip parameters, trying to setup PublicIP profile\n    + Looking up the public ip \"coreo-westu-1430261891570-pip\"                     \n    info:    PublicIP with given name \"coreo-westu-1430261891570-pip\" not found, creating a new one\n    + Creating public ip \"coreo-westu-1430261891570-pip\"                           \n    + Looking up the public ip \"coreo-westu-1430261891570-pip\"                     \n    + Creating NIC \"coreo-westu-1430261891570-nic\"                                 \n    + Looking up the NIC \"coreo-westu-1430261891570-nic\"                           \n    + Creating VM \"coreos\"                                                         \n    + Looking up the VM \"coreos\"                                                   \n    + Looking up the NIC \"coreo-westu-1430261891570-nic\"                           \n    + Looking up the public ip \"coreo-westu-1430261891570-pip\"                     \n    data:    Id                              :/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/coreos-quick/providers/Microsoft.Compute/virtualMachines/coreos\n    data:    ProvisioningState               :Succeeded\n    data:    Name                            :coreos\n    data:    Location                        :westus\n    data:    FQDN                            :coreo-westu-1430261891570-pip.westus.cloudapp.azure.com\n    data:    Type                            :Microsoft.Compute/virtualMachines\n    data:    \n    data:    Hardware Profile:\n    data:      Size                          :Standard_A1\n    data:    \n    data:    Storage Profile:\n    data:      Image reference:\n    data:        Publisher                   :coreos\n    data:        Offer                       :coreos\n    data:        Sku                         :stable\n    data:        Version                     :633.1.0\n    data:    \n    data:      OS Disk:\n    data:        OSType                      :Linux\n    data:        Name                        :cli9fd3fce49e9a9b3d-os-1430261892283\n    data:        Caching                     :ReadWrite\n    data:        CreateOption                :FromImage\n    data:        Vhd:\n    data:          Uri                       :https://cli9fd3fce49e9a9b3d14302.blob.core.windows.net/vhds/cli9fd3fce49e9a9b3d-os-1430261892283.vhd\n    data:    \n    data:    OS Profile:\n    data:      Computer Name                 :coreos\n    data:      User Name                     :ops\n    data:      Linux Configuration:\n    data:        Disable Password Auth       :false\n    data:    \n    data:    Network Profile:\n    data:      Network Interfaces:\n    data:        Network Interface #1:\n    data:          Id                        :/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/coreos-quick/providers/Microsoft.Network/networkInterfaces/coreo-westu-1430261891570-nic\n    data:          Primary                   :true\n    data:          MAC Address               :00-0D-3A-30-72-E3\n    data:          Provisioning State        :Succeeded\n    data:          Name                      :coreo-westu-1430261891570-nic\n    data:          Location                  :westus\n    data:            Private IP alloc-method :Dynamic\n    data:            Private IP address      :10.0.1.4\n    data:            Public IP address       :104.40.24.124\n    data:            FQDN                    :coreo-westu-1430261891570-pip.westus.cloudapp.azure.com\n    info:    vm quick-create command OK\n    \nAnd away you go with your new VM.\n\n## <a id=\"deploy-a-vm-in-azure-from-a-template\"></a>TASK: Deploy a VM in Azure from a template\n\nUse the instructions in these sections to deploy a new Azure VM using a template with the Azure CLI. This template creates a single virtual machine in a new virtual network with a single subnet, and unlike `azure vm quick-create`, enables you to describe what you want precisely and repeat it without errors. Here's what this template creates:\n\n![](./media/virtual-machines-deploy-rmtemplates-azure-cli/new-vm.png)\n \n### Step 1: Examine the JSON file for the template parameters\n\nHere are the contents of the JSON file for the template. (The template is also located in GitHub [here](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-simple-linux-vm/azuredeploy.json).)\n\nTemplates are flexible, so the designer may have chosen to give you lots of parameters, or she may have chosen to offer only a few by creating a template that is more fixed. In order to collect the information you need to pass the template as parameters, open the template file (this topic has a template inline, below) and examine the **parameters** values.\n\nIn this case, the template below will ask for:\n\n- a unique storage account name\n- an admin username for the VM\n- a password\n- a domain name for the outside world to use\n- and will accept a Ubuntu Server version number -- but only one of a list. \n\nOnce you decide on these values, you're ready to create a group for and deploy this template into your Azure subscription.\n\n    {\n    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"parameters\": {\n        \"newStorageAccountName\": {\n        \"type\": \"string\",\n        \"metadata\": {\n            \"description\": \"Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed.\"\n        }\n        },\n        \"adminUsername\": {\n        \"type\": \"string\",\n        \"metadata\": {\n            \"description\": \"User name for the Virtual Machine.\"\n        }\n        },\n        \"adminPassword\": {\n        \"type\": \"securestring\",\n        \"metadata\": {\n            \"description\": \"Password for the Virtual Machine.\"\n        }\n        },\n        \"dnsNameForPublicIP\": {\n        \"type\": \"string\",\n        \"metadata\": {\n            \"description\": \"Unique DNS Name for the Public IP used to access the Virtual Machine.\"\n        }\n        },\n        \"ubuntuOSVersion\": {\n        \"type\": \"string\",\n        \"defaultValue\": \"14.04.2-LTS\",\n        \"allowedValues\": [\n            \"12.04.5-LTS\",\n            \"14.04.2-LTS\",\n            \"15.04\"\n        ],\n        \"metadata\": {\n            \"description\": \"The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.04.\"\n        }\n        }\n    },\n    \"variables\": {\n        \"location\": \"West US\",\n        \"imagePublisher\": \"Canonical\",\n        \"imageOffer\": \"UbuntuServer\",\n        \"OSDiskName\": \"osdiskforlinuxsimple\",\n        \"nicName\": \"myVMNic\",\n        \"addressPrefix\": \"10.0.0.0/16\",\n        \"subnetName\": \"Subnet\",\n        \"subnetPrefix\": \"10.0.0.0/24\",\n        \"storageAccountType\": \"Standard_LRS\",\n        \"publicIPAddressName\": \"myPublicIP\",\n        \"publicIPAddressType\": \"Dynamic\",\n        \"vmStorageAccountContainerName\": \"vhds\",\n        \"vmName\": \"MyUbuntuVM\",\n        \"vmSize\": \"Standard_D1\",\n        \"virtualNetworkName\": \"MyVNET\",\n        \"vnetID\": \"[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]\",\n        \"subnetRef\": \"[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]\"\n    },\n    \"resources\": [\n        {\n        \"type\": \"Microsoft.Storage/storageAccounts\",\n        \"name\": \"[parameters('newStorageAccountName')]\",\n        \"apiVersion\": \"2015-05-01-preview\",\n        \"location\": \"[variables('location')]\",\n        \"properties\": {\n            \"accountType\": \"[variables('storageAccountType')]\"\n        }\n        },\n        {\n        \"apiVersion\": \"2015-05-01-preview\",\n        \"type\": \"Microsoft.Network/publicIPAddresses\",\n        \"name\": \"[variables('publicIPAddressName')]\",\n        \"location\": \"[variables('location')]\",\n        \"properties\": {\n            \"publicIPAllocationMethod\": \"[variables('publicIPAddressType')]\",\n            \"dnsSettings\": {\n            \"domainNameLabel\": \"[parameters('dnsNameForPublicIP')]\"\n            }\n        }\n        },\n        {\n        \"apiVersion\": \"2015-05-01-preview\",\n        \"type\": \"Microsoft.Network/virtualNetworks\",\n        \"name\": \"[variables('virtualNetworkName')]\",\n        \"location\": \"[variables('location')]\",\n        \"properties\": {\n            \"addressSpace\": {\n            \"addressPrefixes\": [\n                \"[variables('addressPrefix')]\"\n            ]\n            },\n            \"subnets\": [\n            {\n                \"name\": \"[variables('subnetName')]\",\n                \"properties\": {\n                \"addressPrefix\": \"[variables('subnetPrefix')]\"\n                }\n            }\n            ]\n        }\n        },\n        {\n        \"apiVersion\": \"2015-05-01-preview\",\n        \"type\": \"Microsoft.Network/networkInterfaces\",\n        \"name\": \"[variables('nicName')]\",\n        \"location\": \"[variables('location')]\",\n        \"dependsOn\": [\n            \"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]\",\n            \"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]\"\n        ],\n        \"properties\": {\n            \"ipConfigurations\": [\n            {\n                \"name\": \"ipconfig1\",\n                \"properties\": {\n                \"privateIPAllocationMethod\": \"Dynamic\",\n                \"publicIPAddress\": {\n                    \"id\": \"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]\"\n                },\n                \"subnet\": {\n                    \"id\": \"[variables('subnetRef')]\"\n                }\n                }\n            }\n            ]\n        }\n        },\n        {\n        \"apiVersion\": \"2015-05-01-preview\",\n        \"type\": \"Microsoft.Compute/virtualMachines\",\n        \"name\": \"[variables('vmName')]\",\n        \"location\": \"[variables('location')]\",\n        \"dependsOn\": [\n            \"[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]\",\n            \"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]\"\n        ],\n        \"properties\": {\n            \"hardwareProfile\": {\n            \"vmSize\": \"[variables('vmSize')]\"\n            },\n            \"osProfile\": {\n            \"computername\": \"[variables('vmName')]\",\n            \"adminUsername\": \"[parameters('adminUsername')]\",\n            \"adminPassword\": \"[parameters('adminPassword')]\"\n            },\n            \"storageProfile\": {\n            \"imageReference\": {\n                \"publisher\": \"[variables('imagePublisher')]\",\n                \"offer\": \"[variables('imageOffer')]\",\n                \"sku\": \"[parameters('ubuntuOSVersion')]\",\n                \"version\": \"latest\"\n            },\n            \"osDisk\": {\n                \"name\": \"osdisk\",\n                \"vhd\": {\n                \"uri\": \"[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]\"\n                },\n                \"caching\": \"ReadWrite\",\n                \"createOption\": \"FromImage\"\n            }\n            },\n            \"networkProfile\": {\n            \"networkInterfaces\": [\n                {\n                \"id\": \"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]\"\n                }\n            ]\n            }\n        }\n        }\n    ]\n    }\n\n  \n### Step 2: Create the virtual machine with the template\n\nOnce you have your parameter values ready, you must create a resource group for your template deployment and then deploy the template.\n\nTo create the resource group, type `azure group create <group name> <location>` with the name of the group you want and the data center location into which you want to deploy. This happens quickly:\n\n    azure group create myResourceGroup westus\n    info:    Executing command group create\n    + Getting resource group myResourceGroup                                       \n    + Creating resource group myResourceGroup                                      \n    info:    Created resource group myResourceGroup\n    data:    Id:                  /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n    data:    Name:                myResourceGroup\n    data:    Location:            westus\n    data:    Provisioning State:  Succeeded\n    data:    Tags: \n    data:    \n    info:    group create command OK\n    \n\nNow to create the deployment, call `azure group deployment create` and pass:\n\n- the template file (in the case that you saved the above JSON template to a local file) \n- a template uri (in the case that you want to point at the file in Github or some other web address)\n- the resource group into which you want to deploy\n- and an optional deployment name. \n\nYou will be prompted to supply the values of parameters in the **\"parameters\"** section of the JSON file. When you have specified all the parameter values, your deployment will begin. \n\nHere is an example:\n\n    azure group deployment create --template-uri https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-simple-linux-vm/azuredeploy.json myResourceGroup firstDeployment\n    info:    Executing command group deployment create\n    info:    Supply values for the following parameters\n    newStorageAccountName: storageaccount\n    adminUsername: ops\n    adminPassword: password\n    dnsNameForPublicIP: newdomainname\n    \nYou will receive the following type of information:\n\n    + Initializing template configurations and parameters                          \n    + Creating a deployment                                                        \n    info:    Created template deployment \"firstDeployment\"\n    + Registering providers                                                        \n    info:    Registering provider microsoft.storage\n    info:    Registering provider microsoft.network\n    info:    Registering provider microsoft.compute\n    + Waiting for deployment to complete                                           \n    data:    DeploymentName     : firstDeployment\n    data:    ResourceGroupName  : myResourceGroup\n    data:    ProvisioningState  : Succeeded\n    data:    Timestamp          : 2015-04-28T07:53:55.1828878Z\n    data:    Mode               : Incremental\n    data:    TemplateLink       : https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-simple-linux-vm/azuredeploy.json\n    data:    ContentVersion     : 1.0.0.0\n    data:    Name                   Type          Value        \n    data:    ---------------------  ------------  -------------\n    data:    newStorageAccountName  String        storageaccount\n    data:    adminUsername          String        ops          \n    data:    adminPassword          SecureString  undefined    \n    data:    dnsNameForPublicIP     String        newdomainname   \n    data:    ubuntuOSVersion        String        14.10        \n    info:    group deployment create command OK\n    \n\n\n## <a id=\"create-a-custom-vm-image\"></a>TASK: Create a custom VM image\n\nYou've seen the basic usage of templates above, so now we can use similar instructions to create a custom VM from a specific .vhd file in Azure with a template using the Azure CLI. The difference here is that this template creates a single virtual machine from a specified virtual hard disk (VHD). \n\n### Step 1: Examine the JSON file for the template\n\nHere are the contents of the JSON file for the template that this section uses as an example, but you can always find the template itself [here](https://raw.githubusercontent.com/azurermtemplates/azurermtemplates/master/101-vm-from-user-image/azuredeploy.json).\n\nAgain, you will need to find the values you want to enter for the parameters that do not have default values. When you run the `azure group deployment create` command, the Azure CLI will prompt you to enter those values.\n\n    {\n        \"$schema\": \"http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json\",\n        \"contentVersion\": \"1.0.0.0\",\n        \"parameters\" : {\n            \"userImageStorageAccountName\": {\n                \"type\": \"string\",\n                \"defaultValue\" : \"userImageStorageAccountName\"\n            },\n            \"userImageStorageContainerName\" : {\n                \"type\" : \"string\",\n                \"defaultValue\" : \"userImageStorageContainerName\"\n            },\n            \"userImageVhdName\" : {\n                \"type\" : \"string\",\n                \"defaultValue\" : \"userImageVhdName\"\n            },\n            \"dnsNameForPublicIP\" : {\n                \"type\" : \"string\",\n                \"defaultValue\": \"uniqueDnsNameForPublicIP\"\n            },\n            \"adminUserName\": {\n                \"type\": \"string\"\n            },\n            \"adminPassword\": {\n                \"type\": \"securestring\"\n            },\n            \"osType\" : {\n                \"type\" : \"string\",\n                \"allowedValues\" : [\n                    \"windows\",\n                    \"linux\"\n                ]\n            },\n            \"subscriptionId\":{\n                \"type\" : \"string\"\n            },\n            \"location\": {\n                \"type\": \"String\",\n                \"defaultValue\" : \"West US\"\n            },\n            \"vmSize\": {\n                \"type\": \"string\",\n                \"defaultValue\": \"Standard_A2\"\n            },\n            \"publicIPAddressName\": {\n                \"type\": \"string\",\n                \"defaultValue\" : \"myPublicIP\"\n            },\n            \"vmName\": {\n                \"type\": \"string\",\n                \"defaultValue\" : \"myVM\"\n            },\n            \"virtualNetworkName\":{\n                \"type\" : \"string\",\n                \"defaultValue\" : \"myVNET\"\n            },\n            \"nicName\":{\n                \"type\" : \"string\",\n                \"defaultValue\":\"myNIC\"\n            }\n        },\n        \"variables\": {\n            \"addressPrefix\":\"10.0.0.0/16\",\n            \"subnet1Name\": \"Subnet-1\",\n            \"subnet2Name\": \"Subnet-2\",\n            \"subnet1Prefix\" : \"10.0.0.0/24\",\n            \"subnet2Prefix\" : \"10.0.1.0/24\",\n            \"publicIPAddressType\" : \"Dynamic\",\n            \"vnetID\":\"[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]\",\n            \"subnet1Ref\" : \"[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]\",\n            \"userImageName\" : \"[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/',parameters('userImageStorageContainerName'),'/',parameters('userImageVhdName'))]\",\n            \"osDiskVhdName\" : \"[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/',parameters('userImageStorageContainerName'),'/',parameters('vmName'),'osDisk.vhd')]\"\n        },\n        \"resources\": [\n        {\n            \"apiVersion\": \"2014-12-01-preview\",\n            \"type\": \"Microsoft.Network/publicIPAddresses\",\n            \"name\": \"[parameters('publicIPAddressName')]\",\n            \"location\": \"[parameters('location')]\",\n            \"properties\": {\n                \"publicIPAllocationMethod\": \"[variables('publicIPAddressType')]\",\n                \"dnsSettings\": {\n                    \"domainNameLabel\": \"[parameters('dnsNameForPublicIP')]\"\n                }\n            }\n        },\n        {\n          \"apiVersion\": \"2014-12-01-preview\",\n          \"type\": \"Microsoft.Network/virtualNetworks\",\n          \"name\": \"[parameters('virtualNetworkName')]\",\n          \"location\": \"[parameters('location')]\",\n          \"properties\": {\n            \"addressSpace\": {\n              \"addressPrefixes\": [\n                \"[variables('addressPrefix')]\"\n              ]\n            },\n            \"subnets\": [\n              {\n                \"name\": \"[variables('subnet1Name')]\",\n                \"properties\" : {\n                    \"addressPrefix\": \"[variables('subnet1Prefix')]\"\n                }\n              },\n              {\n                \"name\": \"[variables('subnet2Name')]\",\n                \"properties\" : {\n                    \"addressPrefix\": \"[variables('subnet2Prefix')]\"\n                }\n              }\n            ]\n          }\n        },\n        {\n            \"apiVersion\": \"2014-12-01-preview\",\n            \"type\": \"Microsoft.Network/networkInterfaces\",\n            \"name\": \"[parameters('nicName')]\",\n            \"location\": \"[parameters('location')]\",\n            \"dependsOn\": [\n                \"[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]\",\n                \"[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]\"\n            ],\n            \"properties\": {\n                \"ipConfigurations\": [\n                {\n                    \"name\": \"ipconfig1\",\n                    \"properties\": {\n                        \"privateIPAllocationMethod\": \"Dynamic\",\n                        \"publicIPAddress\": {\n                            \"id\": \"[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]\"\n                        },\n                        \"subnet\": {\n                            \"id\": \"[variables('subnet1Ref')]\"\n                        }\n                    }\n                }\n                ]\n            }\n        },\n        {\n            \"apiVersion\": \"2014-12-01-preview\",\n            \"type\": \"Microsoft.Compute/virtualMachines\",\n            \"name\": \"[parameters('vmName')]\",\n            \"location\": \"[parameters('location')]\",\n            \"dependsOn\": [\n                \"[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]\"\n            ],\n            \"properties\": {\n                \"hardwareProfile\": {\n                    \"vmSize\": \"[parameters('vmSize')]\"\n                },\n                \"osProfile\": {\n                    \"computername\": \"[parameters('vmName')]\",\n                    \"adminUsername\": \"[parameters('adminUsername')]\",\n                    \"adminPassword\": \"[parameters('adminPassword')]\"\n                },\n                \"storageProfile\": {\n                    \"osDisk\" : {\n                        \"name\" : \"[concat(parameters('vmName'),'-osDisk')]\",\n                        \"osType\" : \"[parameters('osType')]\",\n                        \"caching\" : \"ReadWrite\",\n                        \"image\" : {\n                            \"uri\" : \"[variables('userImageName')]\"\n                        },\n                        \"vhd\" : {\n                            \"uri\" : \"[variables('osDiskVhdName')]\"\n                        }\n                    }\n                },\n                \"networkProfile\": {\n                    \"networkInterfaces\" : [\n                    {\n                        \"id\": \"[resourceId('Microsoft.Network/networkInterfaces',parameters('nicName'))]\"\n                    }\n                    ]\n                }\n            }\n        }\n        ]\n    }\n\n### Step 2: Obtain the VHD\n\nObviously, you'll need a .vhd for this. You can either use one you already have in Azure, or you can upload one. \n\nFor a Windows-based virtual machine, see [Create and upload a Windows Server VHD to Azure](virtual-machines-create-upload-vhd-windows-server.md).\n\nFor a Linux-based virtual machine, see [Create and upload a Linux VHD in Azure](virtual-machines-linux-create-upload-vhd.md).\n\n### Step 3: Create the virtual machine with the template\n\nNow you're ready to create a new virtual machine based on the .vhd. Create a group to deploy into, using `azure group create <location>`:\n\n    azure group create myResourceGroupUser eastus\n    info:    Executing command group create\n    + Getting resource group myResourceGroupUser                                            \n    + Creating resource group myResourceGroupUser                                           \n    info:    Created resource group myResourceGroupUser\n    data:    Id:                  /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroupUser\n    data:    Name:                myResourceGroupUser\n    data:    Location:            eastus\n    data:    Provisioning State:  Succeeded\n    data:    Tags: \n    data:    \n    info:    group create command OK\n    \nThen create the deployment, using the `--template-uri` option to call in the template directly (or you can use the `--template-file` option to use a file that you have saved locally). Note that because the template has defaults specified, you are only prompted for a few things. If you deploy the template in different places, you may find some naming collisions occur with the default values (particularly the DNS name you create).\n\n    azure group deployment create \\\n    > --template-uri https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-vm-from-user-image/azuredeploy.json \\\n    > myResourceGroup \\\n    > customVhdDeployment\n    info:    Executing command group deployment create\n    info:    Supply values for the following parameters\n    adminUserName: ops\n    adminPassword: password\n    osType: linux\n    subscriptionId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        \nOutput looks something like the following:\n\n    + Initializing template configurations and parameters                          \n    + Creating a deployment                                                        \n    info:    Created template deployment \"customVhdDeployment\"\n    + Registering providers                                                        \n    info:    Registering provider microsoft.network\n    info:    Registering provider microsoft.compute\n    + Waiting for deployment to complete                                           \n    error:   Deployment provisioning state was not successful\n    data:    DeploymentName     : customVhdDeployment\n    data:    ResourceGroupName  : myResourceGroupUser\n    data:    ProvisioningState  : Succeeded\n    data:    Timestamp          : 2015-04-28T14:55:48.0963829Z\n    data:    Mode               : Incremental\n    data:    TemplateLink       : https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-vm-from-user-image/azuredeploy.json\n    data:    ContentVersion     : 1.0.0.0\n    data:    Name                           Type          Value                               \n    data:    -----------------------------  ------------  ------------------------------------\n    data:    userImageStorageAccountName    String        userImageStorageAccountName         \n    data:    userImageStorageContainerName  String        userImageStorageContainerName       \n    data:    userImageVhdName               String        userImageVhdName                    \n    data:    dnsNameForPublicIP             String        uniqueDnsNameForPublicIP            \n    data:    adminUserName                  String        ops                                 \n    data:    adminPassword                  SecureString  undefined                           \n    data:    osType                         String        linux                               \n    data:    subscriptionId                 String        xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n    data:    location                       String        West US                             \n    data:    vmSize                         String        Standard_A2                         \n    data:    publicIPAddressName            String        myPublicIP                          \n    data:    vmName                         String        myVM                                \n    data:    virtualNetworkName             String        myVNET                              \n    data:    nicName                        String        myNIC                               \n    info:    group deployment create command OK\n    \n\n## <a id=\"deploy-a-multi-vm-application-that-uses-a-virtual-network-and-an-external-load-balancer\"></a>TASK: Deploy a multi-VM application that uses a virtual network and an external load balancer\n\nThis template allows you to create 2 Virtual Machines under a Load balancer and configure a load balancing rule on Port 80. This template also deploys a Storage Account, Virtual Network, Public IP address, Availability Set and Network Interfaces.\n\n![](./media/virtual-machines-deploy-rmtemplates-azure-cli/multivmextlb.png)\n \nFollow these steps to deploy a multi-VM application that uses a virtual network and a load balancer using a Resource Manager template in the Github template repository using Azure PowerShell commands.\n\n### Step 1: Examine the JSON file for the template.\n\nHere are the contents of the JSON file for the template. If you want the most recent version, it's located [here](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-2-vms-loadbalancer-lbrules/azuredeploy.json). This topic uses the `--template-uri` switch to call in the template, but you can also use the `--template-file` switch to pass a local version.\n\n\n    {\n        \"$schema\": \"http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json\",\n        \"contentVersion\": \"1.0.0.0\",\n        \"parameters\": {\n            \"location\": {\n                \"type\": \"string\",\n                \"metadata\": {\n                  \"description\": \"Location of resources\"\n                }\n            },\n            \"storageAccountName\": {\n                \"type\": \"string\",\n                \"metadata\": {\n                  \"description\": \"Name of storage account\"\n                }\n            },\n            \"adminUsername\": {\n                \"type\": \"string\",\n                \"metadata\": {\n                  \"description\": \"Admin username\"\n                }\n            },\n            \"adminPassword\": {\n                \"type\": \"securestring\",\n                \"metadata\": {\n                  \"description\": \"Admin password\"\n                }\n            },\n            \"dnsNameforLBIP\": {\n                \"type\": \"string\",\n                \"metadata\": {\n                  \"description\": \"DNS for Load Balancer IP\"\n                }\n            },\n            \"backendPort\": {\n                \"type\": \"int\",\n                \"defaultValue\": 3389,\n                \"metadata\": {\n                  \"description\": \"Backend port\"\n                }\n            },\n            \"vmNamePrefix\": {\n                \"type\": \"string\",\n                \"defaultValue\": \"myVM\",\n                \"metadata\": {\n                  \"description\": \"Prefix to use for VM names\"\n                }\n            },\n            \"vmSourceImageName\": {\n                \"type\": \"string\",\n                \"defaultValue\": \"a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-201412.01-en.us-127GB.vhd\"\n            },\n            \"lbName\": {\n                \"type\": \"string\",\n                \"defaultValue\": \"myLB\",\n                \"metadata\": {\n                  \"description\": \"Load Balancer name\"\n                }\n            },\n            \"nicNamePrefix\": {\n                \"type\": \"string\",\n                \"defaultValue\": \"nic\",\n                \"metadata\": {\n                  \"description\": \"Network Interface name prefix\"\n                }\n            },\n            \"publicIPAddressName\": {\n                \"type\": \"string\",\n                \"defaultValue\": \"myPublicIP\",\n                \"metadata\": {\n                  \"description\": \"Public IP Name\"\n                }\n            },\n            \"vnetName\": {\n                \"type\": \"string\",\n                \"defaultValue\": \"myVNET\",\n                \"metadata\": {\n                  \"description\": \"VNET name\"\n                }\n            },\n            \"vmSize\": {\n                \"type\": \"string\",\n                \"defaultValue\": \"Standard_A1\",\n                \"metadata\": {\n                  \"description\": \"Size of the VM\"\n                }\n            }\n        },\n        \"variables\": {\n            \"storageAccountType\": \"Standard_LRS\",\n            \"vmStorageAccountContainerName\": \"vhds\",\n            \"availabilitySetName\": \"myAvSet\",\n            \"addressPrefix\": \"10.0.0.0/16\",\n            \"subnetName\": \"Subnet-1\",\n            \"subnetPrefix\": \"10.0.0.0/24\",\n            \"publicIPAddressType\": \"Dynamic\",\n            \"vnetID\": \"[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]\",\n            \"subnetRef\": \"[concat(variables('vnetID'),'/subnets/',variables ('subnetName'))]\",\n            \"publicIPAddressID\": \"[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]\",\n            \"lbID\": \"[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]\",\n            \"numberOfInstances\": 2,\n            \"nicId1\": \"[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'), 0))]\",\n            \"nicId2\": \"[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'), 1))]\",\n            \"frontEndIPConfigID\": \"[concat(variables('lbID'),'/frontendIPConfigurations/LBFE')]\",\n            \"backEndIPConfigID1\": \"[concat(variables('nicId1'),'/ipConfigurations/ipconfig1')]\",\n            \"backEndIPConfigID2\": \"[concat(variables('nicId2'),'/ipConfigurations/ipconfig1')]\",\n            \"sourceImageName\": \"[concat('/', subscription().subscriptionId,'/services/images/',parameters('vmSourceImageName'))]\",\n            \"lbPoolID\": \"[concat(variables('lbID'),'/backendAddressPools/LBBE')]\",\n            \"lbProbeID\": \"[concat(variables('lbID'),'/probes/tcpProbe')]\"\n        },\n        \"resources\": [\n            {\n                \"type\": \"Microsoft.Storage/storageAccounts\",\n                \"name\": \"[parameters('storageAccountName')]\",\n                \"apiVersion\": \"2015-05-01-preview\",\n                \"location\": \"[parameters('location')]\",\n                \"properties\": {\n                    \"accountType\": \"[variables('storageAccountType')]\"\n                }\n            },\n            {\n                \"type\": \"Microsoft.Compute/availabilitySets\",\n                \"name\": \"[variables('availabilitySetName')]\",\n                \"apiVersion\": \"2015-05-01-preview\",\n                \"location\": \"[parameters('location')]\",\n                \"properties\": { }\n            },\n            {\n                \"apiVersion\": \"2015-05-01-preview\",\n                \"type\": \"Microsoft.Network/publicIPAddresses\",\n                \"name\": \"[parameters('publicIPAddressName')]\",\n                \"location\": \"[parameters('location')]\",\n                \"properties\": {\n                    \"publicIPAllocationMethod\": \"[variables('publicIPAddressType')]\",\n                    \"dnsSettings\": {\n                        \"domainNameLabel\": \"[parameters('dnsNameforLBIP')]\"\n                    }\n                }\n            },\n            {\n                \"apiVersion\": \"2015-05-01-preview\",\n                \"type\": \"Microsoft.Network/virtualNetworks\",\n                \"name\": \"[parameters('vnetName')]\",\n                \"location\": \"[parameters('location')]\",\n                \"properties\": {\n                    \"addressSpace\": {\n                        \"addressPrefixes\": [\n                            \"[variables('addressPrefix')]\"\n                        ]\n                    },\n                    \"subnets\": [\n                        {\n                            \"name\": \"[variables('subnetName')]\",\n                            \"properties\": {\n                                \"addressPrefix\": \"[variables('subnetPrefix')]\"\n                            }\n                        }\n                    ]\n                }\n            },\n            {\n                \"apiVersion\": \"2015-05-01-preview\",\n                \"type\": \"Microsoft.Network/networkInterfaces\",\n                \"name\": \"[concat(parameters('nicNamePrefix'), copyindex())]\",\n                \"location\": \"[parameters('location')]\",\n                \"copy\": {\n                    \"name\": \"nicLoop\",\n                    \"count\": \"[variables('numberOfInstances')]\"\n                },\n                \"dependsOn\": [\n                    \"[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]\"\n                ],\n                \"properties\": {\n                    \"ipConfigurations\": [\n                        {\n                            \"name\": \"ipconfig1\",\n                            \"properties\": {\n                                \"privateIPAllocationMethod\": \"Dynamic\",\n                                \"subnet\": {\n                                    \"id\": \"[variables('subnetRef')]\"\n                                }\n                            },\n                            \"loadBalancerBackendAddressPools\": [\n                                {\n                                    \"id\": \"[concat('Microsoft.Network/loadBalancers/',parameters('lbName'),'/backendAddressPools/LBBE')]\"\n                                }\n                            ],\n                            \"loadBalancerInboundNatRules\": [\n                                {\n                                    \"id\": \"[concat('Microsoft.Network/loadBalancers/',parameters('lbName'),'/inboundNatRule/RDP-VM', copyindex())]\"\n                                }\n                            ]\n    \n    \n                        }\n                    ]\n    \n                }\n            },\n            {\n                \"apiVersion\": \"2015-05-01-preview\",\n                \"name\": \"[parameters('lbName')]\",\n                \"type\": \"Microsoft.Network/loadBalancers\",\n                \"location\": \"[parameters('location')]\",\n                \"dependsOn\": [\n                    \"nicLoop\",\n                    \"[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]\"\n                ],\n                \"properties\": {\n                    \"frontendIPConfigurations\": [\n                        {\n                            \"name\": \"LBFE\",\n                            \"properties\": {\n                                \"publicIPAddress\": {\n                                    \"id\": \"[variables('publicIPAddressID')]\"\n                                }\n                            }\n                        }\n                    ],\n                    \"backendAddressPools\": [\n                        {\n                            \"name\": \"LBBE\"\n    \n                        }\n                    ],\n                    \"inboundNatRules\": [\n                        {\n                            \"name\": \"RDP-VM1\",\n                            \"properties\": {\n                                \"frontendIPConfiguration\":\n                                    {\n                                        \"id\": \"[variables('frontEndIPConfigID')]\"\n                                    },\n                                \"protocol\": \"tcp\",\n                                \"frontendPort\": 50001,\n                                \"backendPort\": 3389,\n                                \"enableFloatingIP\": false\n                            }\n                        },\n                        {\n                            \"name\": \"RDP-VM2\",\n                            \"properties\": {\n                                \"frontendIPConfiguration\":\n                                    {\n                                        \"id\": \"[variables('frontEndIPConfigID')]\"\n                                    },\n                                \"protocol\": \"tcp\",\n                                \"frontendPort\": 50002,\n                                \"backendPort\": 3389,\n                                \"enableFloatingIP\": false\n                            }\n                        }\n                    ],\n                    \"loadBalancingRules\": [\n                        {\n                            \"name\": \"LBRule\",\n                            \"properties\": {\n                                \"frontendIPConfiguration\": {\n                                    \"id\": \"[variables('frontEndIPConfigID')]\"\n                                },\n                                \"backendAddressPool\": {\n                                    \"id\": \"[variables('lbPoolID')]\"\n                                },\n                                \"protocol\": \"tcp\",\n                                \"frontendPort\": 80,\n                                \"backendPort\": 80,\n                                \"enableFloatingIP\": false,\n                                \"idleTimeoutInMinutes\": 5,\n                                \"probe\": {\n                                    \"id\": \"[variables('lbProbeID')]\"\n                                }\n                            }\n                        }\n                    ],\n                    \"probes\": [\n                        {\n                            \"name\": \"tcpProbe\",\n                            \"properties\": {\n                                \"protocol\": \"tcp\",\n                                \"port\": 80,\n                                \"intervalInSeconds\": \"5\",\n                                \"numberOfProbes\": \"2\"\n                            }\n                        }\n                    ]\n                }\n            },\n            {\n                \"apiVersion\": \"2015-05-01-preview\",\n                \"type\": \"Microsoft.Compute/virtualMachines\",\n                \"name\": \"[concat(parameters('vmNamePrefix'), copyindex())]\",\n                \"copy\": {\n                    \"name\": \"virtualMachineLoop\",\n                    \"count\": \"[variables('numberOfInstances')]\"\n                },\n                \"location\": \"[parameters('location')]\",\n                \"dependsOn\": [\n                    \"[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]\",\n                    \"[concat('Microsoft.Network/networkInterfaces/', parameters('nicNamePrefix'), copyindex())]\",\n                    \"[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]\"\n                ],\n                \"properties\": {\n                    \"availabilitySet\": {\n                        \"id\": \"[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]\"\n                    },\n                    \"hardwareProfile\": {\n                        \"vmSize\": \"[parameters('vmSize')]\"\n                    },\n                    \"osProfile\": {\n                        \"computername\": \"[concat(parameters('vmNamePrefix'), copyIndex())]\",\n                        \"adminUsername\": \"[parameters('adminUsername')]\",\n                        \"adminPassword\": \"[parameters('adminPassword')]\"\n                    },\n                    \"storageProfile\": {\n                        \"sourceImage\": {\n                            \"id\": \"[variables('sourceImageName')]\"\n                        },\n                        \"destinationVhdsContainer\": \"[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/')]\"\n                    },\n                    \"networkProfile\": {\n                        \"networkInterfaces\": [\n                            {\n                                \"id\": \"[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'),copyindex()))]\"\n                            }\n                        ]\n                    }\n                }\n            }\n        ]\n    }\n\n### Step 2: Create the deployment with the template.\n\nCreate a resource group for the template using `azure group create <location>`, and then create a deployment into that resource group using `azure group deployment create` and passing the resource group, a deployment name, and answering the prompts for parameters in the template that did not have default values.\n\n\n    azure group create lbgroup westus\n    info:    Executing command group create\n    + Getting resource group lbgroup                                               \n    + Creating resource group lbgroup                                              \n    info:    Created resource group lbgroup\n    data:    Id:                  /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/lbgroup\n    data:    Name:                lbgroup\n    data:    Location:            westus\n    data:    Provisioning State:  Succeeded\n    data:    Tags: \n    data:    \n    info:    group create command OK\n    \n\nNow use the `azure group deployment create` command and the `--template-uri` option to deploy the template. Be ready with your parameter values when it prompts you, as below. \n\n    azure group deployment create \\\n    > --template-uri https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-2-vms-loadbalancer-lbrules/azuredeploy.json \\\n    > lbgroup \\\n    > newdeployment\n    info:    Executing command group deployment create\n    info:    Supply values for the following parameters\n    location: westus\n    newStorageAccountName: storagename\n    adminUsername: ops\n    adminPassword: password\n    dnsNameforLBIP: lbdomainname\n    + Initializing template configurations and parameters                          \n    + Creating a deployment                                                        \n    info:    Created template deployment \"newdeployment\"\n    + Registering providers                                                        \n    info:    Registering provider microsoft.storage\n    info:    Registering provider microsoft.compute\n    info:    Registering provider microsoft.network\n    + Waiting for deployment to complete                                           \n    data:    DeploymentName     : newdeployment\n    data:    ResourceGroupName  : lbgroup\n    data:    ProvisioningState  : Succeeded\n    data:    Timestamp          : 2015-04-28T20:58:40.1678876Z\n    data:    Mode               : Incremental\n    data:    TemplateLink       : https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-2-vms-loadbalancer-lbrules/azuredeploy.json\n    data:    ContentVersion     : 1.0.0.0\n    data:    Name                   Type          Value                 \n    data:    ---------------------  ------------  ----------------------\n    data:    location               String        westus                \n    data:    newStorageAccountName  String        storagename         \n    data:    adminUsername          String        ops                   \n    data:    adminPassword          SecureString  undefined             \n    data:    dnsNameforLBIP         String        lbdomainname         \n    data:    backendPort            Int           3389                  \n    data:    vmNamePrefix           String        myVM                  \n    data:    imagePublisher         String        MicrosoftWindowsServer\n    data:    imageOffer             String        WindowsServer         \n    data:    imageSKU               String        2012-R2-Datacenter    \n    data:    lbName                 String        myLB                  \n    data:    nicNamePrefix          String        nic                   \n    data:    publicIPAddressName    String        myPublicIP            \n    data:    vnetName               String        myVNET                \n    data:    vmSize                 String        Standard_A1           \n    info:    group deployment create command OK\n    \nNote that this template deploys a Windows Server image; however, it could easily be replaced by any Linux image, too. Want to create a Docker Cluster across multiple regions? [You can do it](http://azure.microsoft.com/documentation/templates/201-discover-private-ip-dynamically/). \n\n## <a id=\"remove-a-resource-group\"></a>TASK: Remove a resource group\n\nRemember that you can redeploy to a resource group, but if you done with one, you delete it using `azure group delete <group name>`. \n\n    azure group delete myResourceGroup\n    info:    Executing command group delete\n    Delete resource group myResourceGroup? [y/n] y\n    + Deleting resource group myResourceGroup                                               \n    info:    group delete command OK\n    \n## <a id=\"show-the-log-for-a-resource-group-deployment\"></a>TASK: Show the log for a resource group deployment\n\nThis one is quite common while creating or using templates. The call to display the deployment logs for a group is `azure group log show <groupname>`, which displays quite a bit of information useful to understand why something happened -- or didn't. (For more information on troubleshooting your deployments, as well as other information about issues, see [Troubleshooting Resource Group Deployments in Azure](resource-group-deploy-debug.md).)\n\nTo target specific failures, for example, you might use tools like **jq** to query things a bit more precisely, such as which individual failures you need to correct. The following example uses **jq** to parse a deployment log for the **lbgroup**, looking for failures\n\n    azure group log show lbgroup -l --json | jq '.[] | select(.status.value == \"Failed\") | .properties' \n\nYou can discover very quickly what went wrong, fix, and retry. In the following case, the template had been creating two VMs at the same time, which created a lock on the .vhd. (After modifying the template, the deployment succeeded quickly.)\n\n    {\n      \"statusCode\": \"Conflict\",\n      \"statusMessage\": \"{\\\"status\\\":\\\"Failed\\\",\\\"error\\\":{\\\"code\\\":\\\"ResourceDeploymentFailure\\\",\\\"message\\\":\\\"The resource operation completed with terminal provisioning state 'Failed'.\\\",\\\"details\\\":[{\\\"code\\\":\\\"AcquireDiskLeaseFailed\\\",\\\"message\\\":\\\"Failed to acquire lease while creating disk 'osdisk' using blob with URI http://storage.blob.core.windows.net/vhds/osdisk.vhd.\\\"}]}}\"\n    }\n    \n\n## <a id=\"display-information-about-a-virtual-machine\"></a>TASK: Display information about a virtual machine\n\nYou can see information about specific VMs in your resource group using the `azure vm show <groupname> <vmname> command`. You might need to list the VMs in a group, first, if you have more than one, using `azure vm list <groupname>`.\n\n    azure vm list zoo\n    info:    Executing command vm list\n    + Getting virtual machines                                                     \n    data:    Name   ProvisioningState  Location  Size       \n    data:    -----  -----------------  --------  -----------\n    data:    myVM0  Succeeded          westus    Standard_A1\n    data:    myVM1  Failed             westus    Standard_A1\n    \nand then, looking up myVM1:\n\n    azure vm show zoo myVM1\n    info:    Executing command vm show\n    + Looking up the VM \"myVM1\"                                                    \n    + Looking up the NIC \"nic1\"                                                    \n    data:    Id                              :/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/zoo/providers/Microsoft.Compute/virtualMachines/myVM1\n    data:    ProvisioningState               :Failed\n    data:    Name                            :myVM1\n    data:    Location                        :westus\n    data:    Type                            :Microsoft.Compute/virtualMachines\n    data:    \n    data:    Hardware Profile:\n    data:      Size                          :Standard_A1\n    data:    \n    data:    Storage Profile:\n    data:      Image reference:\n    data:        Publisher                   :MicrosoftWindowsServer\n    data:        Offer                       :WindowsServer\n    data:        Sku                         :2012-R2-Datacenter\n    data:        Version                     :latest\n    data:    \n    data:      OS Disk:\n    data:        OSType                      :Windows\n    data:        Name                        :osdisk\n    data:        Caching                     :ReadWrite\n    data:        CreateOption                :FromImage\n    data:        Vhd:\n    data:          Uri                       :http://zoostorageralph.blob.core.windows.net/vhds/osdisk.vhd\n    data:    \n    data:    OS Profile:\n    data:      Computer Name                 :myVM1\n    data:      User Name                     :ops\n    data:      Windows Configuration:\n    data:        Provision VM Agent          :true\n    data:        Enable automatic updates    :true\n    data:    \n    data:    Network Profile:\n    data:      Network Interfaces:\n    data:        Network Interface #1:\n    data:          Id                        :/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/zoo/providers/Microsoft.Network/networkInterfaces/nic1\n    data:          Primary                   :false\n    data:          Provisioning State        :Succeeded\n    data:          Name                      :nic1\n    data:          Location                  :westus\n    data:            Private IP alloc-method :Dynamic\n    data:            Private IP address      :10.0.0.5\n    data:    \n    data:    AvailabilitySet:\n    data:      Id                            :/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/zoo/providers/Microsoft.Compute/availabilitySets/MYAVSET\n    info:    vm show command OK\n    \n\n> [AZURE.NOTE] If you want to programmatically store and manipulate the output of your console commands, you may want to use a JSON parsing tool such as **[jq](https://github.com/stedolan/jq)**, **[jsawk](https://github.com/micha/jsawk)**, or language libraries good for the task. \n\n## <a id=\"log-on-to-a-linux-based-virtual-machine\"></a>TASK: Log on to a Linux-based virtual machine\n\nTypically Linux machines are connected to through SSH. For more information, see [How to Use SSH with Linux on Azure](virtual-machines-linux-use-ssh-key.md).\n\n## <a id=\"stop-a-virtual-machine\"></a>TASK: Stop a VM\n\nRun this command:\n\n    azure vm stop <group name> <virtual machine name>\n\n>[AZURE.IMPORTANT] Use this parameter to keep the virtual IP (VIP) of the vnet in case it's the last VM in that vnet. <br><br> If you use the `StayProvisioned` parameter, you'll still be billed for the VM.\n\n## <a id=\"start-a-virtual-machine\"></a>TASK: Start a VM\n\nRun this command:\n\n    azure vm start <group name> <virtual machine name>\n\n## <a id=\"attach-a-data-disk\"></a>TASK: Attach a Data Disk\n\nYou'll also need to decide whether to attach a new disk or one that contains data. For a new disk, the command creates the .vhd file and attaches it in the same command.\n\nTo attach a new disk, run this command:\n\n     azure vm disk attach-new <resource-group> <vm-name> <size-in-gb> \n\nTo attach an existing data disk, run this command:\n\n    azure vm disk attach <resource-group> <vm-name> [vhd-url]\n    \nThen you'll need to mount the disk, as you normally would in Linux (or in Windows). \n\n\n## Next steps\n\nFor far more examples of Azure CLI usage with the **arm** mode, see [Using the Microsoft Azure CLI for Mac, Linux, and Windows with Azure Resource Management](xplat-cli-azure-resource-manager.md). To learn more about Azure resources and their concepts, see [Azure Resource Manager Overview](../resource-group-overview.md).\n\nFor more templates you can use, see [Azure Quickstart Templates](http://azure.microsoft.com/documentation/templates/) and [App Frameworks](virtual-machines-app-frameworks.md).\n\n\n\n\n\n\n\n\n \n"
}