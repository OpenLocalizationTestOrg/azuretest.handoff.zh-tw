<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Consume an API app in Azure App Service from a .NET client</source>
          <target state="new">Consume an API app in Azure App Service from a .NET client</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to consume an API app from a .NET client using the App Service SDK.</source>
          <target state="new">Learn how to consume an API app from a .NET client using the App Service SDK.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Consume an API app in Azure App Service from a .NET client</source>
          <target state="new">Consume an API app in Azure App Service from a .NET client</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This tutorial shows how to use the App Service SDK to write code that calls an <bpt id="p1">[</bpt>API app<ept id="p1">](app-service-api-apps-why-best-platform.md)</ept> that has been configured for <bpt id="p2">**</bpt>Public (anonymous)<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Public (authenticated)<ept id="p3">**</ept> access level.</source>
          <target state="new">This tutorial shows how to use the App Service SDK to write code that calls an <bpt id="p1">[</bpt>API app<ept id="p1">](app-service-api-apps-why-best-platform.md)</ept> that has been configured for <bpt id="p2">**</bpt>Public (anonymous)<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Public (authenticated)<ept id="p3">**</ept> access level.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The article covers the following example scenarios:</source>
          <target state="new">The article covers the following example scenarios:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Call a <bpt id="p1">**</bpt>Public (anonymous)<ept id="p1">**</ept> API app from a console application</source>
          <target state="new">Call a <bpt id="p1">**</bpt>Public (anonymous)<ept id="p1">**</ept> API app from a console application</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Call a <bpt id="p1">**</bpt>Public (authenticated)<ept id="p1">**</ept> API app from a Windows Desktop application</source>
          <target state="new">Call a <bpt id="p1">**</bpt>Public (authenticated)<ept id="p1">**</ept> API app from a Windows Desktop application</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each of these tutorial sections is independent -- you can follow the instructions for the second scenario without having completed the steps for the first one.</source>
          <target state="new">Each of these tutorial sections is independent -- you can follow the instructions for the second scenario without having completed the steps for the first one.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information about how to call an <bpt id="p1">**</bpt>Internal<ept id="p1">**</ept> API app, see <bpt id="p2">[</bpt>Consume an internal API app from a .NET client<ept id="p2">](app-service-api-dotnet-consume-internal.md)</ept>.</source>
          <target state="new">For information about how to call an <bpt id="p1">**</bpt>Internal<ept id="p1">**</ept> API app, see <bpt id="p2">[</bpt>Consume an internal API app from a .NET client<ept id="p2">](app-service-api-dotnet-consume-internal.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>the tutorial assumes that you are familiar with how to create projects and add code to them in Visual Studio, and how to <bpt id="p1">[</bpt>manage API apps in the Azure preview portal<ept id="p1">](app-service-api-apps-manage-in-portal.md)</ept>.</source>
          <target state="new">the tutorial assumes that you are familiar with how to create projects and add code to them in Visual Studio, and how to <bpt id="p1">[</bpt>manage API apps in the Azure preview portal<ept id="p1">](app-service-api-apps-manage-in-portal.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The project and code samples in this article are based on the API app project that you create, deploy, and protect in these articles:</source>
          <target state="new">The project and code samples in this article are based on the API app project that you create, deploy, and protect in these articles:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create an API app</source>
          <target state="new">Create an API app</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Deploy an API app</source>
          <target state="new">Deploy an API app</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Protect an API app</source>
          <target state="new">Protect an API app</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This tutorial requires version 2.6 or later of the Azure SDK for .NET.</source>
          <target state="new">This tutorial requires version 2.6 or later of the Azure SDK for .NET.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Unauthenticated call from a console application</source>
          <target state="new">Unauthenticated call from a console application</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this section you create a console application project and add code to it that calls an API app that doesn't require authentication.</source>
          <target state="new">In this section you create a console application project and add code to it that calls an API app that doesn't require authentication.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Set up the API app and create the project</source>
          <target state="new">Set up the API app and create the project</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you haven't already done so, follow the <bpt id="p1">[</bpt>Deploy an API app<ept id="p1">](app-service-dotnet-deploy-api-app.md)</ept> to deploy the ContactsList sample project to an API app in your Azure subscription.</source>
          <target state="new">If you haven't already done so, follow the <bpt id="p1">[</bpt>Deploy an API app<ept id="p1">](app-service-dotnet-deploy-api-app.md)</ept> to deploy the ContactsList sample project to an API app in your Azure subscription.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>That tutorial directs you to set the access level in the Visual Studio publish dialog to <bpt id="p1">**</bpt>Available to anyone<ept id="p1">**</ept>, which is the same as <bpt id="p2">**</bpt>Public (anonymous)<ept id="p2">**</ept> in the portal.</source>
          <target state="new">That tutorial directs you to set the access level in the Visual Studio publish dialog to <bpt id="p1">**</bpt>Available to anyone<ept id="p1">**</ept>, which is the same as <bpt id="p2">**</bpt>Public (anonymous)<ept id="p2">**</ept> in the portal.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, if you did the <bpt id="p1">[</bpt>Protect an API app<ept id="p1">](../app-service-dotnet-add-authentication.md)</ept> tutorial after that, the access level has been set to <bpt id="p2">**</bpt>Public (authenticated)<ept id="p2">**</ept>, and in that case you need to change it as directed in the following step.</source>
          <target state="new">However, if you did the <bpt id="p1">[</bpt>Protect an API app<ept id="p1">](../app-service-dotnet-add-authentication.md)</ept> tutorial after that, the access level has been set to <bpt id="p2">**</bpt>Public (authenticated)<ept id="p2">**</ept>, and in that case you need to change it as directed in the following step.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](https://portal.azure.com/)</ept>, in the <bpt id="p2">**</bpt>API app<ept id="p2">**</ept> blade for the API app that you want to call, go to <bpt id="p3">**</bpt>Settings &gt; Application Settings<ept id="p3">**</ept> and set <bpt id="p4">**</bpt>Access level<ept id="p4">**</ept> to <bpt id="p5">**</bpt>Public (anonymous)<ept id="p5">**</ept>.</source>
          <target state="new">In the <bpt id="p1">[</bpt>Azure preview portal<ept id="p1">](https://portal.azure.com/)</ept>, in the <bpt id="p2">**</bpt>API app<ept id="p2">**</ept> blade for the API app that you want to call, go to <bpt id="p3">**</bpt>Settings &gt; Application Settings<ept id="p3">**</ept> and set <bpt id="p4">**</bpt>Access level<ept id="p4">**</ept> to <bpt id="p5">**</bpt>Public (anonymous)<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In Visual Studio, create a console application project.</source>
          <target state="new">In Visual Studio, create a console application project.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="addclient"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Add App Service SDK generated client code</source>
          <target state="new"><ph id="ph1">&lt;a id="addclient"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Add App Service SDK generated client code</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Add code to call the API app</source>
          <target state="new">Add code to call the API app</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To call the API app, all you have to do is create a client object and call methods on it, as in this example:</source>
          <target state="new">To call the API app, all you have to do is create a client object and call methods on it, as in this example:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">*</bpt>Program.cs<ept id="p1">*</ept>, and add the following code inside the <ph id="ph1">`Main`</ph> method.</source>
          <target state="new">Open <bpt id="p1">*</bpt>Program.cs<ept id="p1">*</ept>, and add the following code inside the <ph id="ph1">`Main`</ph> method.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Press CTRL+F5 to run the application.</source>
          <target state="new">Press CTRL+F5 to run the application.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Generation Complete</source>
          <target state="new">Generation Complete</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Authenticated call from a Windows desktop application</source>
          <target state="new">Authenticated call from a Windows desktop application</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In this section you create a Windows desktop application project and add code to it that calls an API app that requires authentication.</source>
          <target state="new">In this section you create a Windows desktop application project and add code to it that calls an API app that requires authentication.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Set up the API app and create the project</source>
          <target state="new">Set up the API app and create the project</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Follow the <bpt id="p1">[</bpt>Protect an API app<ept id="p1">](../app-service-dotnet-add-authentication.md)</ept> tutorial to set up an API app with <bpt id="p2">**</bpt>Public (authenticated)<ept id="p2">**</ept> access level.</source>
          <target state="new">Follow the <bpt id="p1">[</bpt>Protect an API app<ept id="p1">](../app-service-dotnet-add-authentication.md)</ept> tutorial to set up an API app with <bpt id="p2">**</bpt>Public (authenticated)<ept id="p2">**</ept> access level.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In Visual Studio, create a Windows Forms desktop project.</source>
          <target state="new">In Visual Studio, create a Windows Forms desktop project.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the form designer, add the following controls:</source>
          <target state="new">In the form designer, add the following controls:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A button control</source>
          <target state="new">A button control</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A text box control</source>
          <target state="new">A text box control</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A web browser control</source>
          <target state="new">A web browser control</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Set the text box control to multi-line.</source>
          <target state="new">Set the text box control to multi-line.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Your form should look like the following example.</source>
          <target state="new">Your form should look like the following example.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Add App Service SDK generated client code</source>
          <target state="new">Add App Service SDK generated client code</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the project (not the solution) and select <bpt id="p2">**</bpt>Add &gt; Azure API App Client<ept id="p2">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the project (not the solution) and select <bpt id="p2">**</bpt>Add &gt; Azure API App Client<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Azure API App Client<ept id="p1">**</ept> dialog, click <bpt id="p2">**</bpt>Download from Azure API App<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Add Azure API App Client<ept id="p1">**</ept> dialog, click <bpt id="p2">**</bpt>Download from Azure API App<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>From the drop-down list, select the API app that you want to call, and then click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">From the drop-down list, select the API app that you want to call, and then click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Add code to call the API app</source>
          <target state="new">Add code to call the API app</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the Azure preview portal, copy the URL for your API app's gateway.</source>
          <target state="new">In the Azure preview portal, copy the URL for your API app's gateway.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You'll use this value in the next step.</source>
          <target state="new">You'll use this value in the next step.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">*</bpt>Form1.cs<ept id="p1">*</ept> source code, add the following code before the <ph id="ph1">`Form1()`</ph> constructor, replacing the value for GATEWAY_URL with the value you copied in the previous step.</source>
          <target state="new">In <bpt id="p1">*</bpt>Form1.cs<ept id="p1">*</ept> source code, add the following code before the <ph id="ph1">`Form1()`</ph> constructor, replacing the value for GATEWAY_URL with the value you copied in the previous step.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Make sure you include the trailing slash (/).</source>
          <target state="new">Make sure you include the trailing slash (/).</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the form designer, double-click the button to add a click handler, and then in the handler method add code to go to the login URL for the gateway, for example:</source>
          <target state="new">In the form designer, double-click the button to add a click handler, and then in the handler method add code to go to the login URL for the gateway, for example:</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Replace "[authprovider]" with the code for the identity service provider that you configured in the gateway, for example, "aad", "twitter", "google", "microsoftaccount", or "facebook".</source>
          <target state="new">Replace "[authprovider]" with the code for the identity service provider that you configured in the gateway, for example, "aad", "twitter", "google", "microsoftaccount", or "facebook".</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`DocumentCompleted`</ph> event handler for the web browser control, and add the following code to the handler method.</source>
          <target state="new">Add a <ph id="ph1">`DocumentCompleted`</ph> event handler for the web browser control, and add the following code to the handler method.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The code you've added runs after the user logs in using the web browser control.</source>
          <target state="new">The code you've added runs after the user logs in using the web browser control.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>After a successful login, the response URL contains the user ID and password.</source>
          <target state="new">After a successful login, the response URL contains the user ID and password.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The code extracts these values from the URL, provides them to the App Service client object, and then uses that object to create an API app client object.</source>
          <target state="new">The code extracts these values from the URL, provides them to the App Service client object, and then uses that object to create an API app client object.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can then call the API by calling methods on this API app client object.</source>
          <target state="new">You can then call the API by calling methods on this API app client object.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Press CTRL+F5 to run the application.</source>
          <target state="new">Press CTRL+F5 to run the application.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Click the button, and when the browser control displays a login page, enter the credentials of a user authorized to call the API app.</source>
          <target state="new">Click the button, and when the browser control displays a login page, enter the credentials of a user authorized to call the API app.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Azure authenticates you, and the application calls the API app and displays the response.</source>
          <target state="new">Azure authenticates you, and the application calls the API app and displays the response.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="client-flow"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Server flow vs. client flow</source>
          <target state="new"><ph id="ph1">&lt;a id="client-flow"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Server flow vs. client flow</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The sample application illustrates <bpt id="p1">[</bpt>server flow<ept id="p1">](../app-service/app-service-authentication-overview.md#server-flow)</ept>, which means the gateway gets the identity provider's access token.</source>
          <target state="new">The sample application illustrates <bpt id="p1">[</bpt>server flow<ept id="p1">](../app-service/app-service-authentication-overview.md#server-flow)</ept>, which means the gateway gets the identity provider's access token.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">[</bpt>client flow<ept id="p1">](../app-service/app-service-authentication-overview.md#client-flow)</ept>, in which your client application gets the access token directly from the identity provider and sends it to the gateway, you call <ph id="ph1">`LoginAsync`</ph> rather than <ph id="ph2">`SetCurrentUser`</ph>.</source>
          <target state="new">For <bpt id="p1">[</bpt>client flow<ept id="p1">](../app-service/app-service-authentication-overview.md#client-flow)</ept>, in which your client application gets the access token directly from the identity provider and sends it to the gateway, you call <ph id="ph1">`LoginAsync`</ph> rather than <ph id="ph2">`SetCurrentUser`</ph>.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following code example assumes that you have the identity provider's access token in a string variable named <ph id="ph1">`providerAccessToken`</ph> and the identity provider indicator ("aad", "microsoftaccount", "google", "twitter", or "facebook") in a string variable named <ph id="ph2">`idProvider`</ph>:</source>
          <target state="new">The following code example assumes that you have the identity provider's access token in a string variable named <ph id="ph1">`providerAccessToken`</ph> and the identity provider indicator ("aad", "microsoftaccount", "google", "twitter", or "facebook") in a string variable named <ph id="ph2">`idProvider`</ph>:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This article has shown how to consume an API app from a .NET client, for API apps set to <bpt id="p1">**</bpt>Public (authenticated)<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Public (anonymous)<ept id="p2">**</ept> access levels.</source>
          <target state="new">This article has shown how to consume an API app from a .NET client, for API apps set to <bpt id="p1">**</bpt>Public (authenticated)<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Public (anonymous)<ept id="p2">**</ept> access levels.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For additional examples of code that calls an API app from .NET clients, download the <bpt id="p1">[</bpt>Azure Cards<ept id="p1">](https://github.com/Azure-Samples/API-Apps-DotNet-AzureCards-Sample)</ept> sample application.</source>
          <target state="new">For additional examples of code that calls an API app from .NET clients, download the <bpt id="p1">[</bpt>Azure Cards<ept id="p1">](https://github.com/Azure-Samples/API-Apps-DotNet-AzureCards-Sample)</ept> sample application.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For information about how to use authentication in API apps, see <bpt id="p1">[</bpt>Authentication for API apps and mobile apps in Azure App Service<ept id="p1">](../app-service/app-service-authentication-overview.md)</ept>.</source>
          <target state="new">For information about how to use authentication in API apps, see <bpt id="p1">[</bpt>Authentication for API apps and mobile apps in Azure App Service<ept id="p1">](../app-service/app-service-authentication-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">450010a42c70861158cf412f7c7b0aab92bfc5b7</xliffext:olfilehash>
  </header>
</xliff>