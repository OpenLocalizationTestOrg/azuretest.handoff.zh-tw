<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Some packages may not install using pip when run on Azure.</source>
          <target state="new">Some packages may not install using pip when run on Azure.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>It may simply be that the package is not available on the Python Package Index.</source>
          <target state="new">It may simply be that the package is not available on the Python Package Index.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It could be that a compiler is required (a compiler is not available on the machine running the web app in Azure App Service).</source>
          <target state="new">It could be that a compiler is required (a compiler is not available on the machine running the web app in Azure App Service).</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this section, we'll look at ways to deal with this issue.</source>
          <target state="new">In this section, we'll look at ways to deal with this issue.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Request wheels</source>
          <target state="new">Request wheels</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If the package installation requires a compiler, you should try contacting the package owner to request that wheels be made available for the package.</source>
          <target state="new">If the package installation requires a compiler, you should try contacting the package owner to request that wheels be made available for the package.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>With the recent availability of <bpt id="p1">[</bpt>Microsoft Visual C++ Compiler for Python 2.7<ept id="p1">][]</ept>, it is now easier to build packages that have native code for Python 2.7.</source>
          <target state="new">With the recent availability of <bpt id="p1">[</bpt>Microsoft Visual C++ Compiler for Python 2.7<ept id="p1">][]</ept>, it is now easier to build packages that have native code for Python 2.7.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Build wheels (requires Windows)</source>
          <target state="new">Build wheels (requires Windows)</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Note: When using this option, make sure to compile the package using a Python environment that matches the platform/architecture/version that is used on the web app in Azure App Service (Windows/32-bit/2.7 or 3.4).</source>
          <target state="new">Note: When using this option, make sure to compile the package using a Python environment that matches the platform/architecture/version that is used on the web app in Azure App Service (Windows/32-bit/2.7 or 3.4).</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the package doesn't install because it requires a compiler, you can install the compiler on your local machine and build a wheel for the package, which you will then include in your repository.</source>
          <target state="new">If the package doesn't install because it requires a compiler, you can install the compiler on your local machine and build a wheel for the package, which you will then include in your repository.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Mac/Linux Users: If you don't have access to a Windows machine, see <bpt id="p1">[</bpt>Create a Virtual Machine Running Windows<ept id="p1">][]</ept> for how to create a VM on Azure.</source>
          <target state="new">Mac/Linux Users: If you don't have access to a Windows machine, see <bpt id="p1">[</bpt>Create a Virtual Machine Running Windows<ept id="p1">][]</ept> for how to create a VM on Azure.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use it to build the wheels, add them to the repository, and discard the VM if you like.</source>
          <target state="new">You can use it to build the wheels, add them to the repository, and discard the VM if you like.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For Python 2.7, you can install <bpt id="p1">[</bpt>Microsoft Visual C++ Compiler for Python 2.7<ept id="p1">][]</ept>.</source>
          <target state="new">For Python 2.7, you can install <bpt id="p1">[</bpt>Microsoft Visual C++ Compiler for Python 2.7<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For Python 3.4, you can install <bpt id="p1">[</bpt>Microsoft Visual C++ 2010 Express<ept id="p1">][]</ept>.</source>
          <target state="new">For Python 3.4, you can install <bpt id="p1">[</bpt>Microsoft Visual C++ 2010 Express<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To build wheels, you'll need the wheel package:</source>
          <target state="new">To build wheels, you'll need the wheel package:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You'll use <ph id="ph1">`pip wheel`</ph> to compile a dependency:</source>
          <target state="new">You'll use <ph id="ph1">`pip wheel`</ph> to compile a dependency:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This creates a .whl file in the \wheelhouse folder.</source>
          <target state="new">This creates a .whl file in the \wheelhouse folder.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Add the \wheelhouse folder and wheel files to your repository.</source>
          <target state="new">Add the \wheelhouse folder and wheel files to your repository.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Edit your requirements.txt to add the <ph id="ph1">`--find-links`</ph> option at the top.</source>
          <target state="new">Edit your requirements.txt to add the <ph id="ph1">`--find-links`</ph> option at the top.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This tells pip to look for an exact match in the local folder before going to the python package index.</source>
          <target state="new">This tells pip to look for an exact match in the local folder before going to the python package index.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you want to include all your dependencies in the \wheelhouse folder and not use the python package index at all, you can force pip to ignore the package index by adding <ph id="ph1">`--no-index`</ph> to the top of your requirements.txt.</source>
          <target state="new">If you want to include all your dependencies in the \wheelhouse folder and not use the python package index at all, you can force pip to ignore the package index by adding <ph id="ph1">`--no-index`</ph> to the top of your requirements.txt.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Customize installation</source>
          <target state="new">Customize installation</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can customize the deployment script to install a package in the virtual environment using an alternate installer, such as easy\_install.</source>
          <target state="new">You can customize the deployment script to install a package in the virtual environment using an alternate installer, such as easy\_install.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See deploy.cmd for an example that is commented out.</source>
          <target state="new">See deploy.cmd for an example that is commented out.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Make sure that such packages aren't listed in requirements.txt, to prevent pip from installing them.</source>
          <target state="new">Make sure that such packages aren't listed in requirements.txt, to prevent pip from installing them.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Add this to the deployment script:</source>
          <target state="new">Add this to the deployment script:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You may also be able to use easy\_install to install from an exe installer (some are zip compatible, so easy\_install supports them).</source>
          <target state="new">You may also be able to use easy\_install to install from an exe installer (some are zip compatible, so easy\_install supports them).</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Add the installer to your repository, and invoke easy\_install by passing the path to the executable.</source>
          <target state="new">Add the installer to your repository, and invoke easy\_install by passing the path to the executable.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Add this to the deployment script:</source>
          <target state="new">Add this to the deployment script:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Include the virtual environment in the repository (requires Windows)</source>
          <target state="new">Include the virtual environment in the repository (requires Windows)</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Note: When using this option, make sure to use a virtual environment that matches the platform/architecture/version that is used on the web app in Azure App Service (Windows/32-bit/2.7 or 3.4).</source>
          <target state="new">Note: When using this option, make sure to use a virtual environment that matches the platform/architecture/version that is used on the web app in Azure App Service (Windows/32-bit/2.7 or 3.4).</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you include the virtual environment in the repository, you can prevent the deployment script from doing virtual environment management on Azure by creating an empty file:</source>
          <target state="new">If you include the virtual environment in the repository, you can prevent the deployment script from doing virtual environment management on Azure by creating an empty file:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>We recommend that you delete the existing virtual environment on the app, to prevent leftover files from when the virtual environment was managed automatically.</source>
          <target state="new">We recommend that you delete the existing virtual environment on the app, to prevent leftover files from when the virtual environment was managed automatically.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9feb180fa3ddc0c16a283c0d3a75b2e9d7506c4</xliffext:olfilehash>
  </header>
</xliff>