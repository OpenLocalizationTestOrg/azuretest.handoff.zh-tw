<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs - Diagnosis Guidelines</source>
          <target state="new">Azure Notification Hubs - Diagnosis Guidelines</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Guidelines on how to diagnose common issues with Azure Notification Hubs.</source>
          <target state="new">Guidelines on how to diagnose common issues with Azure Notification Hubs.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs - Diagnosis guidelines</source>
          <target state="new">Azure Notification Hubs - Diagnosis guidelines</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>One of the most common questions we hear from Azure Notification Hubs customers is how to figure out why they don’t see a notification sent from their application backend appear on the client device - where and why notifications were dropped and how to fix this.</source>
          <target state="new">One of the most common questions we hear from Azure Notification Hubs customers is how to figure out why they don’t see a notification sent from their application backend appear on the client device - where and why notifications were dropped and how to fix this.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this article we will go through the various reasons why notifications may get dropped or do not end up on the devices.</source>
          <target state="new">In this article we will go through the various reasons why notifications may get dropped or do not end up on the devices.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>We will also look through ways in which you can analyze and figure out the root cause.</source>
          <target state="new">We will also look through ways in which you can analyze and figure out the root cause.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>First of all, it is critical to understand how Azure Notification Hubs pushes out notifications to the devices.</source>
          <target state="new">First of all, it is critical to understand how Azure Notification Hubs pushes out notifications to the devices.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>![][0]</source>
          <target state="new">![][0]</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In a typical send notification flow, the message is sent from the <bpt id="p1">**</bpt>application backend<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Azure Notification Hub (NH)<ept id="p2">**</ept> which in turn does some processing on all the registrations taking into account the configured tags &amp; tag expressions to determine "targets" i.e. all the registrations that need to receive the push notification.</source>
          <target state="new">In a typical send notification flow, the message is sent from the <bpt id="p1">**</bpt>application backend<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Azure Notification Hub (NH)<ept id="p2">**</ept> which in turn does some processing on all the registrations taking into account the configured tags &amp; tag expressions to determine "targets" i.e. all the registrations that need to receive the push notification.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These registrations can span across any or all of our supported platforms - iOS, Google, Windows, Windows Phone, Kindle and Baidu for China Android.</source>
          <target state="new">These registrations can span across any or all of our supported platforms - iOS, Google, Windows, Windows Phone, Kindle and Baidu for China Android.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Once the targets are established, NH then pushes out notifications, split across multiple batch of registrations, to the device platform specific <bpt id="p1">**</bpt>Push Notification Service (PNS)<ept id="p1">**</ept> - e.g. APNS for Apple, GCM for Google etc. NH authenticates with the respective PNS based on the credentials you set in the Azure Portal on the Configure Notification Hub page.</source>
          <target state="new">Once the targets are established, NH then pushes out notifications, split across multiple batch of registrations, to the device platform specific <bpt id="p1">**</bpt>Push Notification Service (PNS)<ept id="p1">**</ept> - e.g. APNS for Apple, GCM for Google etc. NH authenticates with the respective PNS based on the credentials you set in the Azure Portal on the Configure Notification Hub page.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The PNS then forwards the notifications to the respective <bpt id="p1">**</bpt>client devices<ept id="p1">**</ept>.</source>
          <target state="new">The PNS then forwards the notifications to the respective <bpt id="p1">**</bpt>client devices<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is the platform recommended way to deliver push notifications and note that the final leg of notification delivery takes place between the platform PNS and the device.</source>
          <target state="new">This is the platform recommended way to deliver push notifications and note that the final leg of notification delivery takes place between the platform PNS and the device.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Therefore we have four major components - <bpt id="p1">*</bpt>client<ept id="p1">*</ept>, <bpt id="p2">*</bpt>application backend<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Azure Notification Hubs (NH)<ept id="p3">*</ept> and <bpt id="p4">*</bpt>Push Notification Services (PNS)<ept id="p4">*</ept> and any of these may cause notifications getting dropped.</source>
          <target state="new">Therefore we have four major components - <bpt id="p1">*</bpt>client<ept id="p1">*</ept>, <bpt id="p2">*</bpt>application backend<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Azure Notification Hubs (NH)<ept id="p3">*</ept> and <bpt id="p4">*</bpt>Push Notification Services (PNS)<ept id="p4">*</ept> and any of these may cause notifications getting dropped.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>More details on this architecture is available on <bpt id="p1">[</bpt><ept id="p1">Notification Hubs Overview]</ept>.</source>
          <target state="new">More details on this architecture is available on <bpt id="p1">[</bpt><ept id="p1">Notification Hubs Overview]</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Failure to deliver notifications may happen during the initial test/staging phase which may indicate a configuration issue or it may happen in production where either all or some of the notifications may be getting dropped indicating some deeper application or messaging pattern issue.</source>
          <target state="new">Failure to deliver notifications may happen during the initial test/staging phase which may indicate a configuration issue or it may happen in production where either all or some of the notifications may be getting dropped indicating some deeper application or messaging pattern issue.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the section, below we will look at various dropped notifications scenarios ranging from common to the rarer kind, some of which you may find obvious and some others not so much.</source>
          <target state="new">In the section, below we will look at various dropped notifications scenarios ranging from common to the rarer kind, some of which you may find obvious and some others not so much.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Azure Notifications Hub mis-configuration</source>
          <target state="new">Azure Notifications Hub mis-configuration</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs needs to authenticate itself in the context of the developer's application to be able to successfully send notifications to the respective PNS.</source>
          <target state="new">Azure Notification Hubs needs to authenticate itself in the context of the developer's application to be able to successfully send notifications to the respective PNS.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is made possible by the developer creating a developer account with the respective platform (Google, Apple, Windows etc) and then registering their application where they get credentials which need to be configured in the Azure portal under Notification Hubs configuration section.</source>
          <target state="new">This is made possible by the developer creating a developer account with the respective platform (Google, Apple, Windows etc) and then registering their application where they get credentials which need to be configured in the Azure portal under Notification Hubs configuration section.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If no notifications are making through, first step should be to ensure that the correct credentials are configured in the Notification Hub matching them with the application created under their platform specific developer account.</source>
          <target state="new">If no notifications are making through, first step should be to ensure that the correct credentials are configured in the Notification Hub matching them with the application created under their platform specific developer account.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You will find our <bpt id="p1">[</bpt><ept id="p1">Getting Started Tutorials]</ept> useful to go over this process in a step by step manner.</source>
          <target state="new">You will find our <bpt id="p1">[</bpt><ept id="p1">Getting Started Tutorials]</ept> useful to go over this process in a step by step manner.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Here are some common mis-configurations:</source>
          <target state="new">Here are some common mis-configurations:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="new">General</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>a) Make sure that your notification hub name (without typos) is the same:</source>
          <target state="new">a) Make sure that your notification hub name (without typos) is the same:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Where you are registering from the client,</source>
          <target state="new">Where you are registering from the client,</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Where you are sending notifications from the backend,</source>
          <target state="new">Where you are sending notifications from the backend,</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Where you have configured the PNS credentials and</source>
          <target state="new">Where you have configured the PNS credentials and</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Whose SAS credentials you have configured on the client and the backend.</source>
          <target state="new">Whose SAS credentials you have configured on the client and the backend.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>b) Make sure that you are using the correct SAS configuration strings on the client and the application backend.</source>
          <target state="new">b) Make sure that you are using the correct SAS configuration strings on the client and the application backend.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, you must be using the <bpt id="p1">**</bpt>DefaultListenSharedAccessSignature<ept id="p1">**</ept> on the client and <bpt id="p2">**</bpt>DefaultFullSharedAccessSignature<ept id="p2">**</ept> on the application backend (which gives permission to be able to send notification to the NH)</source>
          <target state="new">As a rule of thumb, you must be using the <bpt id="p1">**</bpt>DefaultListenSharedAccessSignature<ept id="p1">**</ept> on the client and <bpt id="p2">**</bpt>DefaultFullSharedAccessSignature<ept id="p2">**</ept> on the application backend (which gives permission to be able to send notification to the NH)</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Apple Push Notification Service (APNS) configuration</source>
          <target state="new">Apple Push Notification Service (APNS) configuration</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You must maintain two different hubs - one for production and another for testing purpose.</source>
          <target state="new">You must maintain two different hubs - one for production and another for testing purpose.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This means uploading the certificate you are going to use in sandbox environment to a separate hub and the certificate you are going to use in production to a separate hub.</source>
          <target state="new">This means uploading the certificate you are going to use in sandbox environment to a separate hub and the certificate you are going to use in production to a separate hub.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Do not try to upload different types of certificates to the same hub as it may cause notification failures down the line.</source>
          <target state="new">Do not try to upload different types of certificates to the same hub as it may cause notification failures down the line.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you do find yourself in a position where you have inadvertently uploaded different types of certificate to the same hub, it is recommended to delete the hub and start fresh.</source>
          <target state="new">If you do find yourself in a position where you have inadvertently uploaded different types of certificate to the same hub, it is recommended to delete the hub and start fresh.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If for some reason, you are not able to delete the hub then at the very least, you must delete all the existing registrations from the hub.</source>
          <target state="new">If for some reason, you are not able to delete the hub then at the very least, you must delete all the existing registrations from the hub.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Google Cloud Messaging (GCM) configuration</source>
          <target state="new">Google Cloud Messaging (GCM) configuration</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>a) Make sure that you are enabling "Google Cloud Messaging for Android" under your cloud project.</source>
          <target state="new">a) Make sure that you are enabling "Google Cloud Messaging for Android" under your cloud project.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>![][2]</source>
          <target state="new">![][2]</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>b) Make sure that you create a "Server Key" while obtaining the credentials which NH will use to authenticate with GCM.</source>
          <target state="new">b) Make sure that you create a "Server Key" while obtaining the credentials which NH will use to authenticate with GCM.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>![][3]</source>
          <target state="new">![][3]</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>c) Make sure that you have configured "Project ID" on the client which is an entirely numerical entity that you can obtain from the dashboard:</source>
          <target state="new">c) Make sure that you have configured "Project ID" on the client which is an entirely numerical entity that you can obtain from the dashboard:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>![][1]</source>
          <target state="new">![][1]</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Application issues</source>
          <target state="new">Application issues</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Tags/ Tag expressions</source>
          <target state="new">Tags/ Tag expressions</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you are using tags or tag expressions to segment your audience, it is always possible that when you are sending the notification, there is no target being found based on the tags/tag expressions you are specifying in your send call.</source>
          <target state="new">If you are using tags or tag expressions to segment your audience, it is always possible that when you are sending the notification, there is no target being found based on the tags/tag expressions you are specifying in your send call.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It is best to review your registrations to ensure that there are tags which match when you send notification and then verify the notification receipt only from the clients with those registrations.</source>
          <target state="new">It is best to review your registrations to ensure that there are tags which match when you send notification and then verify the notification receipt only from the clients with those registrations.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="new">E.g.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>if all your registrations with NH were done with say tag "Politics" and you are sending a notification with tag "Sports", it will not be sent to any device.</source>
          <target state="new">if all your registrations with NH were done with say tag "Politics" and you are sending a notification with tag "Sports", it will not be sent to any device.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A complex case could involve tag expressions where you only registered with "Tag A" OR "Tag B" but while sending notifications, you are targeting "Tag A &amp;&amp; Tag B".</source>
          <target state="new">A complex case could involve tag expressions where you only registered with "Tag A" OR "Tag B" but while sending notifications, you are targeting "Tag A &amp;&amp; Tag B".</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the self-diagnose tips section below, there are ways in which you can review your registrations along with the tags they have.</source>
          <target state="new">In the self-diagnose tips section below, there are ways in which you can review your registrations along with the tags they have.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Template issues</source>
          <target state="new">Template issues</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you are using templates then ensure that you are following the guidelines described at <bpt id="p1">[</bpt><ept id="p1">Template guidance]</ept>.</source>
          <target state="new">If you are using templates then ensure that you are following the guidelines described at <bpt id="p1">[</bpt><ept id="p1">Template guidance]</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Invalid registrations</source>
          <target state="new">Invalid registrations</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Assuming the Notification Hub was configured correctly and any tags/tag expressions were used correctly resulting in the find of valid targets to which the notifications need to be sent, NH fires off several processing batches in parallel - each batch sending messages to a set of registrations.</source>
          <target state="new">Assuming the Notification Hub was configured correctly and any tags/tag expressions were used correctly resulting in the find of valid targets to which the notifications need to be sent, NH fires off several processing batches in parallel - each batch sending messages to a set of registrations.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Since we do the processing in parallel, we don’t guarantee the order in which the notifications will be delivered.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Since we do the processing in parallel, we don’t guarantee the order in which the notifications will be delivered.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Now Azure Notifications Hub is optimized for an "at-most once" message delivery model.</source>
          <target state="new">Now Azure Notifications Hub is optimized for an "at-most once" message delivery model.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This means that we attempt a de-duplication so that no notifications are delivered more than once to a device.</source>
          <target state="new">This means that we attempt a de-duplication so that no notifications are delivered more than once to a device.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To ensure this we look through the registrations and make sure that only one message is sent per device identifier before actually sending the message to the PNS.</source>
          <target state="new">To ensure this we look through the registrations and make sure that only one message is sent per device identifier before actually sending the message to the PNS.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>As each batch is sent to the PNS, which in turn is accepting and validating the registrations, it is possible that the PNS detects an error with one or more of the registrations in a batch, returns an error to Azure NH and stops processing thereby dropping that batch completely.</source>
          <target state="new">As each batch is sent to the PNS, which in turn is accepting and validating the registrations, it is possible that the PNS detects an error with one or more of the registrations in a batch, returns an error to Azure NH and stops processing thereby dropping that batch completely.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This is especially true with APNS which uses a TCP stream protocol.</source>
          <target state="new">This is especially true with APNS which uses a TCP stream protocol.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Since we are optimized for at-most once delivery, it is to be noted that there is no retry for this failed batch since we do not know for sure if the PNS dropped the entire batch or partially.</source>
          <target state="new">Since we are optimized for at-most once delivery, it is to be noted that there is no retry for this failed batch since we do not know for sure if the PNS dropped the entire batch or partially.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PNS does however tell Azure NH which registration caused the failure and based on the feedback we remove that registration from our database.</source>
          <target state="new">PNS does however tell Azure NH which registration caused the failure and based on the feedback we remove that registration from our database.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This implies that it is possible that one registration batch or a subset of it may not receive a notification however since we cleaned up the bad registration, the next time a send is attempted, there is a higher chance of successful send.</source>
          <target state="new">This implies that it is possible that one registration batch or a subset of it may not receive a notification however since we cleaned up the bad registration, the next time a send is attempted, there is a higher chance of successful send.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As the scale of number of target devices grow (some of our customers send notification to millions of devices), dropping an odd batch here and there doesn’t make much difference in the overall percentage of devices receiving notifications however if you are sending a few notifications and there are some PNS errors then you may see either all or most notifications not getting received.</source>
          <target state="new">As the scale of number of target devices grow (some of our customers send notification to millions of devices), dropping an odd batch here and there doesn’t make much difference in the overall percentage of devices receiving notifications however if you are sending a few notifications and there are some PNS errors then you may see either all or most notifications not getting received.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If you are seeing this behavior repeatedly then you must identify any bad registrations and delete them.</source>
          <target state="new">If you are seeing this behavior repeatedly then you must identify any bad registrations and delete them.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You must definitely delete any hand-formed registrations as they are the most common cause of dropped notifications.</source>
          <target state="new">You must definitely delete any hand-formed registrations as they are the most common cause of dropped notifications.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If this is a test environment, you may also directly delete all the registrations as the apps when opened on the devices will retry and re-register with the Notification Hubs ensuring that all registrations there forth created will be valid ones.</source>
          <target state="new">If this is a test environment, you may also directly delete all the registrations as the apps when opened on the devices will retry and re-register with the Notification Hubs ensuring that all registrations there forth created will be valid ones.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>PNS issues</source>
          <target state="new">PNS issues</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Once the notification message has been received by the respective PNS then it is its responsibility to deliver the notification to the device.</source>
          <target state="new">Once the notification message has been received by the respective PNS then it is its responsibility to deliver the notification to the device.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Azure Notification Hubs is out of the picture here and has no control on when or if the notification is going to be delivered to the device.</source>
          <target state="new">Azure Notification Hubs is out of the picture here and has no control on when or if the notification is going to be delivered to the device.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Since the platform notification services are pretty robust, notifications do tend to reach the devices in a few seconds from the PNS.</source>
          <target state="new">Since the platform notification services are pretty robust, notifications do tend to reach the devices in a few seconds from the PNS.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the PNS however is throttling then Azure Notification Hubs does apply an exponential back off strategy and if the PNS remains unreachable for 30 min then we have a policy in place to expire and drop those messages permanently.</source>
          <target state="new">If the PNS however is throttling then Azure Notification Hubs does apply an exponential back off strategy and if the PNS remains unreachable for 30 min then we have a policy in place to expire and drop those messages permanently.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If a PNS attempts to deliver a notification but the device is offline, the notification is stored by the PNS for a limited period of time, and delivered to the device when it becomes available.</source>
          <target state="new">If a PNS attempts to deliver a notification but the device is offline, the notification is stored by the PNS for a limited period of time, and delivered to the device when it becomes available.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Only one recent notification for a particular app is stored.</source>
          <target state="new">Only one recent notification for a particular app is stored.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If multiple notifications are sent while the device is offline, each new notification causes the prior notification to be discarded.</source>
          <target state="new">If multiple notifications are sent while the device is offline, each new notification causes the prior notification to be discarded.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This behavior of keeping only the newest notification is referred to as coalescing notifications in APNS and collapsing in GCM (which uses a collapsing key).</source>
          <target state="new">This behavior of keeping only the newest notification is referred to as coalescing notifications in APNS and collapsing in GCM (which uses a collapsing key).</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If the device remains offline for a long time, any notifications that were being stored for it are discarded.</source>
          <target state="new">If the device remains offline for a long time, any notifications that were being stored for it are discarded.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Source - <bpt id="p1">[</bpt><ept id="p1">APNS guidance]</ept> &amp; <bpt id="p2">[</bpt><ept id="p2">GCM guidance]</ept></source>
          <target state="new">Source - <bpt id="p1">[</bpt><ept id="p1">APNS guidance]</ept> &amp; <bpt id="p2">[</bpt><ept id="p2">GCM guidance]</ept></target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>With Azure Notification Hubs - you can pass a coalescing key via an HTTP header using the generic <ph id="ph1">`SendNotification`</ph> API (e.g. for .NET SDK – <ph id="ph2">`SendNotificationAsync`</ph>) which also takes HTTP headers which are passes as is to the respective PNS.</source>
          <target state="new">With Azure Notification Hubs - you can pass a coalescing key via an HTTP header using the generic <ph id="ph1">`SendNotification`</ph> API (e.g. for .NET SDK – <ph id="ph2">`SendNotificationAsync`</ph>) which also takes HTTP headers which are passes as is to the respective PNS.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Self-diagnose tips</source>
          <target state="new">Self-diagnose tips</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Here we will examine the various avenues to diagnose and root cause any Notification Hub issues:</source>
          <target state="new">Here we will examine the various avenues to diagnose and root cause any Notification Hub issues:</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Verify credentials</source>
          <target state="new">Verify credentials</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>PNS developer portal</source>
          <target state="new">PNS developer portal</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Verify them at the respective PNS developer portal (APNS, GCM, WNS etc) using our <bpt id="p1">[</bpt><ept id="p1">Getting Started Tutorials]</ept>.</source>
          <target state="new">Verify them at the respective PNS developer portal (APNS, GCM, WNS etc) using our <bpt id="p1">[</bpt><ept id="p1">Getting Started Tutorials]</ept>.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Azure Management portal</source>
          <target state="new">Azure Management portal</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Go to the Configure tab to review and match the credentials with those obtained from the PNS developer portal.</source>
          <target state="new">Go to the Configure tab to review and match the credentials with those obtained from the PNS developer portal.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>![][4]</source>
          <target state="new">![][4]</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Verify registrations</source>
          <target state="new">Verify registrations</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Visual Studio</source>
          <target state="new">Visual Studio</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If you use Visual Studio for development then you can connect to Microsoft Azure and view and manage a bunch of Azure services including Notifications Hub from "Server Explorer".</source>
          <target state="new">If you use Visual Studio for development then you can connect to Microsoft Azure and view and manage a bunch of Azure services including Notifications Hub from "Server Explorer".</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This is primarily useful for your dev/test environment.</source>
          <target state="new">This is primarily useful for your dev/test environment.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>![][9]</source>
          <target state="new">![][9]</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>You can view and manage all the registrations in your hub which are nicely categorized for platform, native or template registration, any tags, PNS identifier, registration id and the expiration date.</source>
          <target state="new">You can view and manage all the registrations in your hub which are nicely categorized for platform, native or template registration, any tags, PNS identifier, registration id and the expiration date.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can also edit a registration on the fly - which is useful say if you want to edit any tags.</source>
          <target state="new">You can also edit a registration on the fly - which is useful say if you want to edit any tags.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>![][8]</source>
          <target state="new">![][8]</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Visual Studio functionality to edit registrations should only be used during dev/test with limited number of registrations.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Visual Studio functionality to edit registrations should only be used during dev/test with limited number of registrations.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If there arises a need to fix your registrations in bulk, consider using the Export/Import registration functionality described here - <bpt id="p1">[</bpt><ept id="p1">Export/Import Registrations]</ept> (Only available in Standard Tier)</source>
          <target state="new">If there arises a need to fix your registrations in bulk, consider using the Export/Import registration functionality described here - <bpt id="p1">[</bpt><ept id="p1">Export/Import Registrations]</ept> (Only available in Standard Tier)</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Service Bus explorer</source>
          <target state="new">Service Bus explorer</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Many customers use ServiceBus explorer described here - <bpt id="p1">[</bpt><ept id="p1">ServiceBus Explorer]</ept> for viewing and managing their notification hub.</source>
          <target state="new">Many customers use ServiceBus explorer described here - <bpt id="p1">[</bpt><ept id="p1">ServiceBus Explorer]</ept> for viewing and managing their notification hub.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>It is an open source project available from code.microsoft.com - <bpt id="p1">[</bpt><ept id="p1">ServiceBus Explorer code]</ept></source>
          <target state="new">It is an open source project available from code.microsoft.com - <bpt id="p1">[</bpt><ept id="p1">ServiceBus Explorer code]</ept></target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Verify message notifications</source>
          <target state="new">Verify message notifications</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Azure Portal</source>
          <target state="new">Azure Portal</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can go to the "Debug" tab to send test notifications to your clients without needing any service backend up and running.</source>
          <target state="new">You can go to the "Debug" tab to send test notifications to your clients without needing any service backend up and running.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>![][7]</source>
          <target state="new">![][7]</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Visual Studio</source>
          <target state="new">Visual Studio</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can also send test notifications from the comforts of Visual Studio:</source>
          <target state="new">You can also send test notifications from the comforts of Visual Studio:</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>![][10]</source>
          <target state="new">![][10]</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You can read more on the Visual Studio Notification Hub Azure explorer functionality here -</source>
          <target state="new">You can read more on the Visual Studio Notification Hub Azure explorer functionality here -</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>VS Server Explorer Overview</source>
          <target state="new">VS Server Explorer Overview</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>VS Server Explorer Blog post - 1</source>
          <target state="new">VS Server Explorer Blog post - 1</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>VS Server Explorer Blog post - 2</source>
          <target state="new">VS Server Explorer Blog post - 2</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Debug failed notifications/ Review notification outcome</source>
          <target state="new">Debug failed notifications/ Review notification outcome</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>EnableTestSend property</source>
          <target state="new">EnableTestSend property</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When you send a notification via Notification Hubs, initially it just gets queued up for NH to do processing to figure out all its targets and then eventually NH sends it to the PNS.</source>
          <target state="new">When you send a notification via Notification Hubs, initially it just gets queued up for NH to do processing to figure out all its targets and then eventually NH sends it to the PNS.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This means that when you are using REST API or any of the client SDK, the successful return of your send call only means that the message has been successfully queued up with Notification Hub.</source>
          <target state="new">This means that when you are using REST API or any of the client SDK, the successful return of your send call only means that the message has been successfully queued up with Notification Hub.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>It doesn’t give an insight into what happened when NH eventually got to send the message to PNS.</source>
          <target state="new">It doesn’t give an insight into what happened when NH eventually got to send the message to PNS.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If your notification is not arriving at the client device, there is a possibility that when NH tried to deliver the message to PNS, there was an error e.g. the payload size exceeded the maximum allowed by the PNS or the credentials configured in NH are invalid etc.</source>
          <target state="new">If your notification is not arriving at the client device, there is a possibility that when NH tried to deliver the message to PNS, there was an error e.g. the payload size exceeded the maximum allowed by the PNS or the credentials configured in NH are invalid etc.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>To get an insight into the PNS errors, we have introduced a property called <bpt id="p1">[</bpt><ept id="p1">EnableTestSend feature]</ept>.</source>
          <target state="new">To get an insight into the PNS errors, we have introduced a property called <bpt id="p1">[</bpt><ept id="p1">EnableTestSend feature]</ept>.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This property is automatically enabled when you send test messages from the portal or Visual Studio client and therefore allows you to see detailed debugging information.</source>
          <target state="new">This property is automatically enabled when you send test messages from the portal or Visual Studio client and therefore allows you to see detailed debugging information.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>You can use this via APIs taking the example of the .NET SDK where it is available now and will be added to all client SDKs eventually.</source>
          <target state="new">You can use this via APIs taking the example of the .NET SDK where it is available now and will be added to all client SDKs eventually.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To use this with the REST call, simply append a querystring parameter called "test" at the end of your send call e.g.</source>
          <target state="new">To use this with the REST call, simply append a querystring parameter called "test" at the end of your send call e.g.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Example (.NET SDK)</source>
          <target state="new">Example (.NET SDK)</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Suppose you are using .NET SDK to send a native toast notification:</source>
          <target state="new">Suppose you are using .NET SDK to send a native toast notification:</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`result.State`</ph> will simply state <ph id="ph2">`Enqueued`</ph> at the end of the execution without any insight into what happened to your push.</source>
          <target state="new"><ph id="ph1">`result.State`</ph> will simply state <ph id="ph2">`Enqueued`</ph> at the end of the execution without any insight into what happened to your push.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Now you can use the <ph id="ph1">`EnableTestSend`</ph> boolean property while initializing the <ph id="ph2">`NotificationHubClient`</ph> and can get detailed status about the PNS errors encountered while sending the notification.</source>
          <target state="new">Now you can use the <ph id="ph1">`EnableTestSend`</ph> boolean property while initializing the <ph id="ph2">`NotificationHubClient`</ph> and can get detailed status about the PNS errors encountered while sending the notification.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The send call here will take additional time to return because it is only returning after NH has delivered the notification to PNS to determine the outcome.</source>
          <target state="new">The send call here will take additional time to return because it is only returning after NH has delivered the notification to PNS to determine the outcome.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Sample Output</source>
          <target state="new">Sample Output</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This message indicates either invalid credentials are configured in the notification hub or an issue with the registrations on the hub and the recommended course would be to delete this registration and let the client recreate it before sending the message.</source>
          <target state="new">This message indicates either invalid credentials are configured in the notification hub or an issue with the registrations on the hub and the recommended course would be to delete this registration and let the client recreate it before sending the message.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Note that the use of this property is heavily throttled and so you must only use this in dev/test environment with limited set of registrations.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Note that the use of this property is heavily throttled and so you must only use this in dev/test environment with limited set of registrations.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>We only send debug notifications to 10 devices.</source>
          <target state="new">We only send debug notifications to 10 devices.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>We also have a limit of processing debug sends to be 10 per minute.</source>
          <target state="new">We also have a limit of processing debug sends to be 10 per minute.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Review telemetry</source>
          <target state="new">Review telemetry</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Use Azure Portal</source>
          <target state="new">Use Azure Portal</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Azure portal enables you to get a quick overview of all the activity on your Notification Hub.</source>
          <target state="new">Azure portal enables you to get a quick overview of all the activity on your Notification Hub.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>a) From the "dashboard" tab you can view an aggregated view of the registrations, notifications as well as errors per platform.</source>
          <target state="new">a) From the "dashboard" tab you can view an aggregated view of the registrations, notifications as well as errors per platform.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>![][5]</source>
          <target state="new">![][5]</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>b) You can also add many other platform specific metrics from the "Monitor" tab to take a deeper look particularly at any PNS specific errors returned when NH tries to send the notification to the PNS.</source>
          <target state="new">b) You can also add many other platform specific metrics from the "Monitor" tab to take a deeper look particularly at any PNS specific errors returned when NH tries to send the notification to the PNS.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>![][6]</source>
          <target state="new">![][6]</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>c) You should start with reviewing the <bpt id="p1">**</bpt>Incoming Messages<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Registration Operations<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Successful Notifications<ept id="p3">**</ept> and then go to per platform tab to review the PNS specific errors.</source>
          <target state="new">c) You should start with reviewing the <bpt id="p1">**</bpt>Incoming Messages<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Registration Operations<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Successful Notifications<ept id="p3">**</ept> and then go to per platform tab to review the PNS specific errors.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>d) If you have the notification hub misconfigured with the authentication settings then you will see PNS Authentication Error.</source>
          <target state="new">d) If you have the notification hub misconfigured with the authentication settings then you will see PNS Authentication Error.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This is a good indication to check the PNS credentials.</source>
          <target state="new">This is a good indication to check the PNS credentials.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Programmatic access</source>
          <target state="new">Programmatic access</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>More details here -</source>
          <target state="new">More details here -</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Programmatic Telemetry Access</source>
          <target state="new">Programmatic Telemetry Access</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Telemetry Access via APIs sample</source>
          <target state="new">Telemetry Access via APIs sample</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Several telemetry related features like <bpt id="p1">**</bpt>Export/Import Registrations<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Telemetry Access via APIs<ept id="p2">**</ept> etc are only available in Standard tier.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Several telemetry related features like <bpt id="p1">**</bpt>Export/Import Registrations<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Telemetry Access via APIs<ept id="p2">**</ept> etc are only available in Standard tier.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If you attempt to use these features if you are in Free or Basic tier then you will get exception message to this effect while using the SDK and an HTTP 403 (Forbidden) when using them directly from the REST APIs.</source>
          <target state="new">If you attempt to use these features if you are in Free or Basic tier then you will get exception message to this effect while using the SDK and an HTTP 403 (Forbidden) when using them directly from the REST APIs.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Make sure that you have moved up to Standard tier via Azure Management portal.</source>
          <target state="new">Make sure that you have moved up to Standard tier via Azure Management portal.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93fccd5d8d5752853d01c6c72fde813ea75ed1a6</xliffext:olfilehash>
  </header>
</xliff>