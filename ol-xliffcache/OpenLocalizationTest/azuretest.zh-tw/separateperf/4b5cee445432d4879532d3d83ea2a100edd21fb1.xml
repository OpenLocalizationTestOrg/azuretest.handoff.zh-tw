{
  "nodes": [
    {
      "content": "Understanding Azure resource templates and resource groups",
      "pos": [
        3,
        61
      ]
    },
    {
      "content": "Most applications that are deployed and run in Microsoft Azure are built out of a combination of different cloud resource types (e.g. one or more VMs and Storage accounts, a SQL database, a virtual network, a CDN, etc).",
      "pos": [
        63,
        282
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Azure Resource Manager templates<ept id=\"p1\">](../resource-group-authoring-templates.md)</ept> make it possible for you to deploy and manage these different resources together by using a JSON description of the resources and associated configuration and deployment parameters.",
      "pos": [
        284,
        542
      ]
    },
    {
      "content": "Once you have defined a JSON based resource template, you can execute it and have the resources defined within it be deployed in Azure using a PowerShell command.",
      "pos": [
        544,
        706
      ]
    },
    {
      "content": "You can run this PowerShell command either standalone within the PowerShell command shell, or you can integrate it within a PowerShell script that contains additional automation logic.",
      "pos": [
        708,
        892
      ]
    },
    {
      "content": "The resources you create using Azure Resource Manager templates will be deployed to either a new or existing Azure resource group.",
      "pos": [
        894,
        1024
      ]
    },
    {
      "content": "An Azure resource group allows you to manage multiple deployed resources together as a logical group.",
      "pos": [
        1026,
        1127
      ]
    },
    {
      "content": "Typically, a group will contain resources related to a specific application.",
      "pos": [
        1128,
        1204
      ]
    },
    {
      "content": "Azure resource groups provide a way to manage the overall lifecycle of the group/application and provide management APIs that allow you to stop/start/delete all of the resources within the group at once, apply Role Based Access Control (RBAC) rules to lock down security permissions on them, audit operations, as well as tag resources with additional meta-data for better tracking.",
      "pos": [
        1206,
        1587
      ]
    },
    {
      "content": "To learn more about Azure Resource Groups, see the <bpt id=\"p1\">[</bpt>Azure Resource Manager Overview<ept id=\"p1\">](https://azure.microsoft.com/documentation/articles/resource-group-overview/)</ept>.",
      "pos": [
        1588,
        1750
      ]
    },
    {
      "content": "The following automation examples demonstrate how to use Azure Resource Manager Templates and deploy Resource Groups using PowerShell or CLI.",
      "pos": [
        1753,
        1894
      ]
    }
  ],
  "content": "## Understanding Azure resource templates and resource groups\n\nMost applications that are deployed and run in Microsoft Azure are built out of a combination of different cloud resource types (e.g. one or more VMs and Storage accounts, a SQL database, a virtual network, a CDN, etc).  [Azure Resource Manager templates](../resource-group-authoring-templates.md) make it possible for you to deploy and manage these different resources together by using a JSON description of the resources and associated configuration and deployment parameters.\n\nOnce you have defined a JSON based resource template, you can execute it and have the resources defined within it be deployed in Azure using a PowerShell command.  You can run this PowerShell command either standalone within the PowerShell command shell, or you can integrate it within a PowerShell script that contains additional automation logic.\n\nThe resources you create using Azure Resource Manager templates will be deployed to either a new or existing Azure resource group.  An Azure resource group allows you to manage multiple deployed resources together as a logical group. Typically, a group will contain resources related to a specific application.  Azure resource groups provide a way to manage the overall lifecycle of the group/application and provide management APIs that allow you to stop/start/delete all of the resources within the group at once, apply Role Based Access Control (RBAC) rules to lock down security permissions on them, audit operations, as well as tag resources with additional meta-data for better tracking. To learn more about Azure Resource Groups, see the [Azure Resource Manager Overview](https://azure.microsoft.com/documentation/articles/resource-group-overview/). \n\nThe following automation examples demonstrate how to use Azure Resource Manager Templates and deploy Resource Groups using PowerShell or CLI.\n"
}