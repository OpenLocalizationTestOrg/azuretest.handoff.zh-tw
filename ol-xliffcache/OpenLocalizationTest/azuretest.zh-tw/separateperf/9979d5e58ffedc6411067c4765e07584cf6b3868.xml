{
  "nodes": [
    {
      "content": "Correlate events over time with Storm and HBase on HDInsight",
      "pos": [
        24,
        84
      ]
    },
    {
      "content": "Learn how to correlate events that arrive at different times by using Storm and HBase on HDInsight.",
      "pos": [
        100,
        199
      ]
    },
    {
      "content": "Correlate events over time with Storm and HBase on HDInsight",
      "pos": [
        497,
        557
      ]
    },
    {
      "content": "By using a persistent data store with Apache Storm, you can correlate data entries that arrive at different times.",
      "pos": [
        559,
        673
      ]
    },
    {
      "content": "For example, linking login and logout events for a user session to calculate how long the session lasted.",
      "pos": [
        674,
        779
      ]
    },
    {
      "content": "In this document, you will learn how to create a basic C# Storm topology that tracks login and logout events for user sessions, and calculates the duration of the session.",
      "pos": [
        781,
        952
      ]
    },
    {
      "content": "The topology uses HBase as a persistent data store.",
      "pos": [
        953,
        1004
      ]
    },
    {
      "content": "HBase also allows you to perform batch queries on the historical data to produce additional insights, such as how many user sessions were started or ended during a specific time period.",
      "pos": [
        1005,
        1190
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        1195,
        1208
      ]
    },
    {
      "pos": [
        1214,
        1406
      ],
      "content": "HDInsight tools for Visual Studio: See <bpt id=\"p1\">[</bpt>Get started using the HDInsight tools for Visual Studio<ept id=\"p1\">](../HDInsight/hdinsight-hadoop-visual-studio-tools-get-started.md)</ept> for installation information."
    },
    {
      "content": "Apache Storm on HDInsight cluster",
      "pos": [
        1412,
        1445
      ]
    },
    {
      "content": "Apache HBase on HDInsight cluster",
      "pos": [
        1451,
        1484
      ]
    },
    {
      "content": "Architecture",
      "pos": [
        1489,
        1501
      ]
    },
    {
      "content": "Diagram of the data flow through the topology",
      "pos": [
        1505,
        1550
      ]
    },
    {
      "content": "Correlating events requires a common identifier for the event source.",
      "pos": [
        1623,
        1692
      ]
    },
    {
      "content": "For example, a user ID, session ID, or other piece of data that is a) unique and b) included in all data sent to Storm.",
      "pos": [
        1693,
        1812
      ]
    },
    {
      "content": "This example uses a GUID value to represent a session ID.",
      "pos": [
        1813,
        1870
      ]
    },
    {
      "content": "This example consists of two HDInsight clusters:",
      "pos": [
        1872,
        1920
      ]
    },
    {
      "content": "HBase: persistent data store for historical data",
      "pos": [
        1926,
        1974
      ]
    },
    {
      "content": "Storm: used to ingest incoming data",
      "pos": [
        1980,
        2015
      ]
    },
    {
      "content": "The data is randomly generated by the Storm topology, and consists of the following items:",
      "pos": [
        2017,
        2107
      ]
    },
    {
      "content": "Session ID: a GUID that uniquely identifies each session",
      "pos": [
        2113,
        2169
      ]
    },
    {
      "content": "Event: a START or END event.",
      "pos": [
        2175,
        2203
      ]
    },
    {
      "content": "For this example, START always occurs before END",
      "pos": [
        2204,
        2252
      ]
    },
    {
      "content": "Time: the time of the event.",
      "pos": [
        2258,
        2286
      ]
    },
    {
      "content": "This data is processed and stored in HBase.",
      "pos": [
        2288,
        2331
      ]
    },
    {
      "content": "Storm topology",
      "pos": [
        2337,
        2351
      ]
    },
    {
      "content": "When a session starts, a <bpt id=\"p1\">**</bpt>START<ept id=\"p1\">**</ept> event is received by the topology and logged to HBase.",
      "pos": [
        2353,
        2442
      ]
    },
    {
      "content": "When an <bpt id=\"p1\">**</bpt>END<ept id=\"p1\">**</ept> event is received, the topology retrieves the <bpt id=\"p2\">**</bpt>START<ept id=\"p2\">**</ept> event and calculates the time between the two events.",
      "pos": [
        2443,
        2568
      ]
    },
    {
      "content": "This <bpt id=\"p1\">**</bpt>Duration<ept id=\"p1\">**</ept> value is then stored in HBase along with the <bpt id=\"p2\">**</bpt>END<ept id=\"p2\">**</ept> event information.",
      "pos": [
        2569,
        2658
      ]
    },
    {
      "pos": [
        2662,
        2808
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> While this topology demonstrates the basic pattern, a production solution would need to take design for the following scenarios:"
    },
    {
      "content": "Events arriving out of order",
      "pos": [
        2815,
        2843
      ]
    },
    {
      "content": "Duplicate events",
      "pos": [
        2848,
        2864
      ]
    },
    {
      "content": "Dropped events",
      "pos": [
        2869,
        2883
      ]
    },
    {
      "content": "The sample topology is composed of the following components:",
      "pos": [
        2885,
        2945
      ]
    },
    {
      "content": "Session.cs: simulates a user session by creating a random session ID, start time, and how long the session will last",
      "pos": [
        2951,
        3067
      ]
    },
    {
      "content": "Spout.cs: creates 100 sessions, emits a START event, waits the random timeout for each session and then emits an END event.",
      "pos": [
        3073,
        3196
      ]
    },
    {
      "content": "Then recycles ended sessions to generate new ones.",
      "pos": [
        3197,
        3247
      ]
    },
    {
      "content": "HBaseLookupBolt.cs: uses the session ID to look up session information from HBase.",
      "pos": [
        3253,
        3335
      ]
    },
    {
      "content": "When an END event is processed, it finds the corresponding START event and calculates the duration of the session.",
      "pos": [
        3336,
        3450
      ]
    },
    {
      "content": "HBaseBolt.cs: Stores information into HBase.",
      "pos": [
        3456,
        3500
      ]
    },
    {
      "content": "TypeHelper.cs: Helps with type conversion when reading from/writing to HBase.",
      "pos": [
        3506,
        3583
      ]
    },
    {
      "content": "HBase schema",
      "pos": [
        3589,
        3601
      ]
    },
    {
      "content": "In HBase, the data is stored in a table with the following schema/settings:",
      "pos": [
        3603,
        3678
      ]
    },
    {
      "content": "Row key: the session ID is used as the key for rows in this table",
      "pos": [
        3684,
        3749
      ]
    },
    {
      "content": "Column family: the family name is 'cf'.",
      "pos": [
        3755,
        3794
      ]
    },
    {
      "content": "Columns stored in this family are:",
      "pos": [
        3795,
        3829
      ]
    },
    {
      "content": "event: START or END",
      "pos": [
        3839,
        3858
      ]
    },
    {
      "content": "time: the time in milliseconds that the event occured",
      "pos": [
        3868,
        3921
      ]
    },
    {
      "content": "duration: the length between START and END event",
      "pos": [
        3931,
        3979
      ]
    },
    {
      "content": "VERSIONS: the 'cf' family is set to retain 5 versions of each row",
      "pos": [
        3985,
        4050
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> Versions are a log of previous values stored for a specific row key.",
      "pos": [
        4058,
        4139
      ]
    },
    {
      "content": "By default, HBase only returns the value for the most recent version of a row.",
      "pos": [
        4140,
        4218
      ]
    },
    {
      "content": "In this case, the same row is used for all events (START, END.) each version of a row is identified by the timestamp value.",
      "pos": [
        4219,
        4342
      ]
    },
    {
      "content": "This provides a historical view of events logged for a specific ID.",
      "pos": [
        4343,
        4410
      ]
    },
    {
      "content": "Download the project",
      "pos": [
        4415,
        4435
      ]
    },
    {
      "pos": [
        4437,
        4577
      ],
      "content": "The sample project can be downloaded from <bpt id=\"p1\">[</bpt>hdinsight-storm-eventcorrelation<ept id=\"p1\">](https://github.com/Blackmist/hdinsight-storm-eventcorrelation)</ept>."
    },
    {
      "content": "This download contains the following C# projects:",
      "pos": [
        4579,
        4628
      ]
    },
    {
      "content": "CorrelationTopology: C# Storm topology that randomly emits start and end events for user sessions.",
      "pos": [
        4634,
        4732
      ]
    },
    {
      "content": "Each session lasts between 1 and 5 minutes.",
      "pos": [
        4733,
        4776
      ]
    },
    {
      "content": "SessionInfo: C# console application that creates the HBase table, and provides example queries to return information about stored session data.",
      "pos": [
        4782,
        4925
      ]
    },
    {
      "content": "Create the table",
      "pos": [
        4930,
        4946
      ]
    },
    {
      "pos": [
        4951,
        5001
      ],
      "content": "Open the <bpt id=\"p1\">**</bpt>SessionInfo<ept id=\"p1\">**</ept> project in Visual Studio."
    },
    {
      "pos": [
        5006,
        5098
      ],
      "content": "In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click the <bpt id=\"p2\">**</bpt>SessionInfo<ept id=\"p2\">**</ept> project and select <bpt id=\"p3\">**</bpt>Properties<ept id=\"p3\">**</ept>."
    },
    {
      "content": "Screenshot of menu with properties selected",
      "pos": [
        5106,
        5149
      ]
    },
    {
      "pos": [
        5222,
        5273
      ],
      "content": "Select <bpt id=\"p1\">**</bpt>Settings<ept id=\"p1\">**</ept>, then set the following values:"
    },
    {
      "content": "HBaseClusterURL: the URL to your HBase cluster.",
      "pos": [
        5283,
        5330
      ]
    },
    {
      "content": "For example, https://myhbasecluster.azurehdinsight.net",
      "pos": [
        5331,
        5385
      ]
    },
    {
      "content": "HBaseClusterUserName: the admin/HTTP user account for your cluster",
      "pos": [
        5395,
        5461
      ]
    },
    {
      "content": "HBaseClusterPassword: the password for the admin/HTTP user account",
      "pos": [
        5471,
        5537
      ]
    },
    {
      "content": "HBaseTableName: the name of the table to use with this example",
      "pos": [
        5547,
        5609
      ]
    },
    {
      "content": "HBaseTableColumnFamily: The column family name",
      "pos": [
        5619,
        5665
      ]
    },
    {
      "content": "Image of settings dialog",
      "pos": [
        5673,
        5697
      ]
    },
    {
      "content": "Run the solution.",
      "pos": [
        5762,
        5779
      ]
    },
    {
      "content": "When prompted, select the 'c' key to create the table on your HBase cluster.",
      "pos": [
        5780,
        5856
      ]
    },
    {
      "content": "Build and deploy the Storm topology",
      "pos": [
        5861,
        5896
      ]
    },
    {
      "pos": [
        5902,
        5961
      ],
      "content": "Open the <bpt id=\"p1\">**</bpt>CorrelationTopology<ept id=\"p1\">**</ept> solution in Visual Studio."
    },
    {
      "pos": [
        5967,
        6063
      ],
      "content": "In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right click the <bpt id=\"p2\">**</bpt>CorrelationTopology<ept id=\"p2\">**</ept> project and select properties."
    },
    {
      "content": "In the properties window, select <bpt id=\"p1\">**</bpt>Settings<ept id=\"p1\">**</ept> and provide the following information.",
      "pos": [
        6069,
        6153
      ]
    },
    {
      "content": "The first 5 should be the same values used by the <bpt id=\"p1\">**</bpt>SessionInfo<ept id=\"p1\">**</ept> project:",
      "pos": [
        6154,
        6228
      ]
    },
    {
      "content": "HBaseClusterURL: the URL to your HBase cluster.",
      "pos": [
        6238,
        6285
      ]
    },
    {
      "content": "For example, https://myhbasecluster.azurehdinsight.net",
      "pos": [
        6286,
        6340
      ]
    },
    {
      "content": "HBaseClusterUserName: the admin/HTTP user account for your cluster",
      "pos": [
        6350,
        6416
      ]
    },
    {
      "content": "HBaseClusterPassword: the password for the admin/HTTP user account",
      "pos": [
        6426,
        6492
      ]
    },
    {
      "content": "HBaseTableName: the name of the table to use with this example.",
      "pos": [
        6502,
        6565
      ]
    },
    {
      "content": "This should contain the same table name as that used in the SessionInfo project",
      "pos": [
        6566,
        6645
      ]
    },
    {
      "content": "HBaseTableColumnFamily: The column family name.",
      "pos": [
        6655,
        6702
      ]
    },
    {
      "content": "This should contain the same column family name as that used in the SessionInfo project",
      "pos": [
        6703,
        6790
      ]
    },
    {
      "pos": [
        6798,
        6928
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> Do not change the HBaseTableColumnNames, as the defaults are the names used by <bpt id=\"p1\">**</bpt>SessionInfo<ept id=\"p1\">**</ept> to retrieve data."
    },
    {
      "content": "Save the properties, then build the project.",
      "pos": [
        6934,
        6978
      ]
    },
    {
      "content": "In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right click the project and select <bpt id=\"p2\">**</bpt>Submit to Storm on HDInsight<ept id=\"p2\">**</ept>.",
      "pos": [
        6984,
        7078
      ]
    },
    {
      "content": "If prompted, enter the credentials for your Azure subscription.",
      "pos": [
        7079,
        7142
      ]
    },
    {
      "content": "Image of the submit to storm menu item",
      "pos": [
        7150,
        7188
      ]
    },
    {
      "pos": [
        7259,
        7347
      ],
      "content": "In the <bpt id=\"p1\">**</bpt>Submit Topology<ept id=\"p1\">**</ept> dialog, select the Storm cluster that will run this topology."
    },
    {
      "pos": [
        7355,
        7480
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The first time you submit a topology, it may take a few seconds to retrieve the name of your HDInsight clusters."
    },
    {
      "content": "Once the topology has been uploaded and submitted to the cluster, the <bpt id=\"p1\">**</bpt>Storm Topology View<ept id=\"p1\">**</ept> will open and display the running topology.",
      "pos": [
        7486,
        7623
      ]
    },
    {
      "content": "Select the <bpt id=\"p1\">**</bpt>CorrelationTopology<ept id=\"p1\">**</ept> and use the refresh button at the top right of the page to refresh the topology information.",
      "pos": [
        7624,
        7751
      ]
    },
    {
      "content": "Image of the topology view",
      "pos": [
        7759,
        7785
      ]
    },
    {
      "pos": [
        7855,
        7948
      ],
      "content": "When the topology begins generating data, the value in the <bpt id=\"p1\">**</bpt>Emitted<ept id=\"p1\">**</ept> column will increment."
    },
    {
      "pos": [
        7956,
        8064
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If the <bpt id=\"p1\">**</bpt>Storm Topology View<ept id=\"p1\">**</ept> does not open automatically, use the following steps to open it:"
    },
    {
      "pos": [
        8080,
        8154
      ],
      "content": "In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, expand <bpt id=\"p2\">**</bpt>Azure<ept id=\"p2\">**</ept>, and then expand <bpt id=\"p3\">**</bpt>HDInsight<ept id=\"p3\">**</ept>."
    },
    {
      "pos": [
        8170,
        8274
      ],
      "content": "Right click the Storm cluster that the topology is running on, and then select <bpt id=\"p1\">**</bpt>View Storm Topologies<ept id=\"p1\">**</ept>"
    },
    {
      "content": "Query the data",
      "pos": [
        8279,
        8293
      ]
    },
    {
      "content": "Once data has been emitted, use the following steps to query the data.",
      "pos": [
        8295,
        8365
      ]
    },
    {
      "content": "Return to the <bpt id=\"p1\">**</bpt>SessionInfo<ept id=\"p1\">**</ept> project.",
      "pos": [
        8370,
        8408
      ]
    },
    {
      "content": "If not running, start a new instance of it.",
      "pos": [
        8409,
        8452
      ]
    },
    {
      "content": "When prompted, select <bpt id=\"p1\">**</bpt>s<ept id=\"p1\">**</ept> to search for START event.",
      "pos": [
        8457,
        8511
      ]
    },
    {
      "content": "You will be prompted to enter a start and end time to define a time range - only events between these two times will be returned.",
      "pos": [
        8512,
        8641
      ]
    },
    {
      "content": "Use the following format when entering the start and end times: HH:MM and 'am' or 'pm'.",
      "pos": [
        8647,
        8734
      ]
    },
    {
      "content": "For example, 11:20pm.",
      "pos": [
        8735,
        8756
      ]
    },
    {
      "content": "Since the topology has just started, use a start time from before it was deployed, and an end time of now.",
      "pos": [
        8762,
        8868
      ]
    },
    {
      "content": "This should capture most of the START events that were generated when it started.",
      "pos": [
        8869,
        8950
      ]
    },
    {
      "content": "When the query runs, you should see a list of entries similar to the following:",
      "pos": [
        8951,
        9030
      ]
    },
    {
      "content": "Searching for END events works the same as START events.",
      "pos": [
        9144,
        9200
      ]
    },
    {
      "content": "However, END events are generated randomly between 1 and 5 minutes after the START event.",
      "pos": [
        9201,
        9290
      ]
    },
    {
      "content": "So you may have to try a few time ranges in order to find the END events.",
      "pos": [
        9291,
        9364
      ]
    },
    {
      "content": "END events will also contain the duration of the session - the difference between the START event time and END event time.",
      "pos": [
        9365,
        9487
      ]
    },
    {
      "content": "Here is an example of data for END events:",
      "pos": [
        9488,
        9530
      ]
    },
    {
      "pos": [
        9635,
        9744
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> While the time values you enter are in local time, the time returned from the query will be UTC."
    },
    {
      "content": "Stop the topology",
      "pos": [
        9748,
        9765
      ]
    },
    {
      "content": "When you are ready to stop the topology, return to the <bpt id=\"p1\">**</bpt>CorrelationTopology<ept id=\"p1\">**</ept> project in Visual Studio.",
      "pos": [
        9767,
        9871
      ]
    },
    {
      "content": "In the <bpt id=\"p1\">**</bpt>Storm Topology View<ept id=\"p1\">**</ept>, select the topology and then use the <bpt id=\"p2\">**</bpt>Kill<ept id=\"p2\">**</ept> button at the top of the topology view.",
      "pos": [
        9872,
        9989
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        9993,
        10003
      ]
    },
    {
      "pos": [
        10005,
        10115
      ],
      "content": "For more Storm examples, see <bpt id=\"p1\">[</bpt>Example topologies for Storm on HDInsight<ept id=\"p1\">](hdinsight-storm-example-topology.md)</ept>."
    },
    {
      "content": "test",
      "pos": [
        10118,
        10122
      ]
    }
  ],
  "content": "<properties\n pageTitle=\"Correlate events over time with Storm and HBase on HDInsight\"\n description=\"Learn how to correlate events that arrive at different times by using Storm and HBase on HDInsight.\"\n services=\"hdinsight\"\n documentationCenter=\"\"\n authors=\"Blackmist\"\n manager=\"paulettm\"\n editor=\"cgronlun\"\n    tags=\"azure-portal\"/>\n\n<tags\n ms.service=\"hdinsight\"\n ms.devlang=\"dotnet\"\n ms.topic=\"article\"\n ms.tgt_pltfrm=\"na\"\n ms.workload=\"big-data\"\n ms.date=\"09/02/2015\"\n ms.author=\"larryfr\"/>\n\n# Correlate events over time with Storm and HBase on HDInsight\n\nBy using a persistent data store with Apache Storm, you can correlate data entries that arrive at different times. For example, linking login and logout events for a user session to calculate how long the session lasted.\n\nIn this document, you will learn how to create a basic C# Storm topology that tracks login and logout events for user sessions, and calculates the duration of the session. The topology uses HBase as a persistent data store. HBase also allows you to perform batch queries on the historical data to produce additional insights, such as how many user sessions were started or ended during a specific time period.\n\n## Prerequisites\n\n-   HDInsight tools for Visual Studio: See [Get started using the HDInsight tools for Visual Studio](../HDInsight/hdinsight-hadoop-visual-studio-tools-get-started.md) for installation information.\n\n-   Apache Storm on HDInsight cluster\n\n-   Apache HBase on HDInsight cluster\n\n## Architecture\n\n![Diagram of the data flow through the topology](./media/hdinsight-storm-correlation-topology/correlationtopology.png)\n\nCorrelating events requires a common identifier for the event source. For example, a user ID, session ID, or other piece of data that is a) unique and b) included in all data sent to Storm. This example uses a GUID value to represent a session ID.\n\nThis example consists of two HDInsight clusters:\n\n-   HBase: persistent data store for historical data\n\n-   Storm: used to ingest incoming data\n\nThe data is randomly generated by the Storm topology, and consists of the following items:\n\n-   Session ID: a GUID that uniquely identifies each session\n\n-   Event: a START or END event. For this example, START always occurs before END\n\n-   Time: the time of the event.\n\nThis data is processed and stored in HBase.\n\n### Storm topology\n\nWhen a session starts, a **START** event is received by the topology and logged to HBase. When an **END** event is received, the topology retrieves the **START** event and calculates the time between the two events. This **Duration** value is then stored in HBase along with the **END** event information.\n\n> [AZURE.IMPORTANT] While this topology demonstrates the basic pattern, a production solution would need to take design for the following scenarios:\n>\n> - Events arriving out of order\n> - Duplicate events\n> - Dropped events\n\nThe sample topology is composed of the following components:\n\n-   Session.cs: simulates a user session by creating a random session ID, start time, and how long the session will last\n\n-   Spout.cs: creates 100 sessions, emits a START event, waits the random timeout for each session and then emits an END event. Then recycles ended sessions to generate new ones.\n\n-   HBaseLookupBolt.cs: uses the session ID to look up session information from HBase. When an END event is processed, it finds the corresponding START event and calculates the duration of the session.\n\n-   HBaseBolt.cs: Stores information into HBase.\n\n-   TypeHelper.cs: Helps with type conversion when reading from/writing to HBase.\n\n### HBase schema\n\nIn HBase, the data is stored in a table with the following schema/settings:\n\n-   Row key: the session ID is used as the key for rows in this table\n\n-   Column family: the family name is 'cf'. Columns stored in this family are:\n\n    -   event: START or END\n\n    -   time: the time in milliseconds that the event occured\n\n    -   duration: the length between START and END event\n\n-   VERSIONS: the 'cf' family is set to retain 5 versions of each row\n\n    > [AZURE.NOTE] Versions are a log of previous values stored for a specific row key. By default, HBase only returns the value for the most recent version of a row. In this case, the same row is used for all events (START, END.) each version of a row is identified by the timestamp value. This provides a historical view of events logged for a specific ID.\n\n## Download the project\n\nThe sample project can be downloaded from [hdinsight-storm-eventcorrelation](https://github.com/Blackmist/hdinsight-storm-eventcorrelation).\n\nThis download contains the following C# projects:\n\n-   CorrelationTopology: C# Storm topology that randomly emits start and end events for user sessions. Each session lasts between 1 and 5 minutes.\n\n-   SessionInfo: C# console application that creates the HBase table, and provides example queries to return information about stored session data.\n\n## Create the table\n\n1. Open the **SessionInfo** project in Visual Studio.\n\n2. In **Solution Explorer**, right-click the **SessionInfo** project and select **Properties**.\n\n    ![Screenshot of menu with properties selected](./media/hdinsight-storm-correlation-topology/selectproperties.png)\n\n3. Select **Settings**, then set the following values:\n\n    -   HBaseClusterURL: the URL to your HBase cluster. For example, https://myhbasecluster.azurehdinsight.net\n\n    -   HBaseClusterUserName: the admin/HTTP user account for your cluster\n\n    -   HBaseClusterPassword: the password for the admin/HTTP user account\n\n    -   HBaseTableName: the name of the table to use with this example\n\n    -   HBaseTableColumnFamily: The column family name\n\n    ![Image of settings dialog](./media/hdinsight-storm-correlation-topology/settings.png)\n\n5. Run the solution. When prompted, select the 'c' key to create the table on your HBase cluster.\n\n## Build and deploy the Storm topology\n\n1.  Open the **CorrelationTopology** solution in Visual Studio.\n\n2.  In **Solution Explorer**, right click the **CorrelationTopology** project and select properties.\n\n3.  In the properties window, select **Settings** and provide the following information. The first 5 should be the same values used by the **SessionInfo** project:\n\n    -   HBaseClusterURL: the URL to your HBase cluster. For example, https://myhbasecluster.azurehdinsight.net\n\n    -   HBaseClusterUserName: the admin/HTTP user account for your cluster\n\n    -   HBaseClusterPassword: the password for the admin/HTTP user account\n\n    -   HBaseTableName: the name of the table to use with this example. This should contain the same table name as that used in the SessionInfo project\n\n    -   HBaseTableColumnFamily: The column family name. This should contain the same column family name as that used in the SessionInfo project\n\n    > [AZURE.IMPORTANT] Do not change the HBaseTableColumnNames, as the defaults are the names used by **SessionInfo** to retrieve data.\n\n4.  Save the properties, then build the project.\n\n5.  In **Solution Explorer**, right click the project and select **Submit to Storm on HDInsight**. If prompted, enter the credentials for your Azure subscription.\n\n    ![Image of the submit to storm menu item](./media/hdinsight-storm-correlation-topology/submittostorm.png)\n\n6.  In the **Submit Topology** dialog, select the Storm cluster that will run this topology.\n\n    > [AZURE.NOTE] The first time you submit a topology, it may take a few seconds to retrieve the name of your HDInsight clusters.\n\n7.  Once the topology has been uploaded and submitted to the cluster, the **Storm Topology View** will open and display the running topology. Select the **CorrelationTopology** and use the refresh button at the top right of the page to refresh the topology information.\n\n    ![Image of the topology view](./media/hdinsight-storm-correlation-topology/topologyview.png)\n\n    When the topology begins generating data, the value in the **Emitted** column will increment.\n\n    > [AZURE.NOTE] If the **Storm Topology View** does not open automatically, use the following steps to open it:\n    >\n    > 1. In **Solution Explorer**, expand **Azure**, and then expand **HDInsight**.\n    >\n    > 2. Right click the Storm cluster that the topology is running on, and then select **View Storm Topologies**\n\n## Query the data\n\nOnce data has been emitted, use the following steps to query the data.\n\n1. Return to the **SessionInfo** project. If not running, start a new instance of it.\n\n2. When prompted, select **s** to search for START event. You will be prompted to enter a start and end time to define a time range - only events between these two times will be returned.\n\n    Use the following format when entering the start and end times: HH:MM and 'am' or 'pm'. For example, 11:20pm.\n\n    Since the topology has just started, use a start time from before it was deployed, and an end time of now. This should capture most of the START events that were generated when it started. When the query runs, you should see a list of entries similar to the following:\n\n        Session e6992b3e-79be-4991-afcf-5cb47dd1c81c started at 6/5/2015 6:10:15 PM. Timestamp = 1433527820737\n\nSearching for END events works the same as START events. However, END events are generated randomly between 1 and 5 minutes after the START event. So you may have to try a few time ranges in order to find the END events. END events will also contain the duration of the session - the difference between the START event time and END event time. Here is an example of data for END events:\n\n    Session fc9fa8e6-6892-4073-93b3-a587040d892e lasted 2 minutes, and ended at 6/5/2015 6:12:15 PM\n\n> [AZURE.NOTE] While the time values you enter are in local time, the time returned from the query will be UTC.\n\n##Stop the topology\n\nWhen you are ready to stop the topology, return to the **CorrelationTopology** project in Visual Studio. In the **Storm Topology View**, select the topology and then use the **Kill** button at the top of the topology view.\n\n##Next steps\n\nFor more Storm examples, see [Example topologies for Storm on HDInsight](hdinsight-storm-example-topology.md).\n \ntest\n"
}