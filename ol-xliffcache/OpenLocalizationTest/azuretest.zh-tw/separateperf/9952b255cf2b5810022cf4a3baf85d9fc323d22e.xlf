<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Send cross-platform notifications to a specific user in iOS</source>
          <target state="new">Send cross-platform notifications to a specific user in iOS</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to send push notifications to all devices of a specific user.</source>
          <target state="new">Learn how to send push notifications to all devices of a specific user.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Send cross-platform notifications to a specific user</source>
          <target state="new">Send cross-platform notifications to a specific user</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic shows you how to send notifications to all registered devices of a specific user from your mobile backend.</source>
          <target state="new">This topic shows you how to send notifications to all registered devices of a specific user from your mobile backend.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It introduced the concept of [templates], which gives client applications the freedom of specifying payload formats and variable placeholders at registration.</source>
          <target state="new">It introduced the concept of [templates], which gives client applications the freedom of specifying payload formats and variable placeholders at registration.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Send then hits every platform with these placeholders, enabling cross-platform notifications.</source>
          <target state="new">Send then hits every platform with these placeholders, enabling cross-platform notifications.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> To get push working with cross-platform clients, you will need to complete this tutorial for each platform you would like to enable.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> To get push working with cross-platform clients, you will need to complete this tutorial for each platform you would like to enable.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You will only need to do the <bpt id="p1">[</bpt>mobile backend update<ept id="p1">](#backend)</ept> once for clients that share the same mobile backend.</source>
          <target state="new">You will only need to do the <bpt id="p1">[</bpt>mobile backend update<ept id="p1">](#backend)</ept> once for clients that share the same mobile backend.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Before you start this tutorial, you must have already completed these App Service tutorials for each client platform you want working:</source>
          <target state="new">Before you start this tutorial, you must have already completed these App Service tutorials for each client platform you want working:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>[Get started with authentication]</source>
          <target state="new">[Get started with authentication]</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Adds a login requirement to the TodoList sample app.</source>
          <target state="new">Adds a login requirement to the TodoList sample app.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>[Get started with push notifications]</source>
          <target state="new">[Get started with push notifications]</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Configures the TodoList sample app for push notifications.</source>
          <target state="new">Configures the TodoList sample app for push notifications.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update your client to register for templates to handle cross-platform pushes</source>
          <target state="new"><ph id="ph1">&lt;a name="client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update your client to register for templates to handle cross-platform pushes</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Move the APNs registration snippets in <bpt id="p1">**</bpt>QSAppDelegate.m<ept id="p1">**</ept>'s <bpt id="p2">**</bpt>application:didFinishLaunchingWithOptions<ept id="p2">**</ept> to the call to <bpt id="p3">**</bpt>loginWithProvider<ept id="p3">**</ept> in <bpt id="p4">**</bpt>QSTodoListViewController.m<ept id="p4">**</ept> so it happens after authentication completes:</source>
          <target state="new">Move the APNs registration snippets in <bpt id="p1">**</bpt>QSAppDelegate.m<ept id="p1">**</ept>'s <bpt id="p2">**</bpt>application:didFinishLaunchingWithOptions<ept id="p2">**</ept> to the call to <bpt id="p3">**</bpt>loginWithProvider<ept id="p3">**</ept> in <bpt id="p4">**</bpt>QSTodoListViewController.m<ept id="p4">**</ept> so it happens after authentication completes:</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Replace your <bpt id="p1">**</bpt>registerDeviceToken<ept id="p1">**</ept> call in <bpt id="p2">**</bpt>application:didRegisterForRemoteNotificationsWithDeviceToken<ept id="p2">**</ept> with the following to work with templates:</source>
          <target state="new">Replace your <bpt id="p1">**</bpt>registerDeviceToken<ept id="p1">**</ept> call in <bpt id="p2">**</bpt>application:didRegisterForRemoteNotificationsWithDeviceToken<ept id="p2">**</ept> with the following to work with templates:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="backend"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update your service backend to send notifications to a specific user</source>
          <target state="new"><ph id="ph1">&lt;a name="backend"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Update your service backend to send notifications to a specific user</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In Visual Studio, update the <ph id="ph1">`PostTodoItem`</ph> method definition with the following code:</source>
          <target state="new">In Visual Studio, update the <ph id="ph1">`PostTodoItem`</ph> method definition with the following code:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="test"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Test the app</source>
          <target state="new"><ph id="ph1">&lt;a name="test"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Test the app</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Re-publish your mobile backend project and run any of the client apps you have set up.</source>
          <target state="new">Re-publish your mobile backend project and run any of the client apps you have set up.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>On item insertion, the backend will send notifications to all client apps where the user is logged in.</source>
          <target state="new">On item insertion, the backend will send notifications to all client apps where the user is logged in.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9952b255cf2b5810022cf4a3baf85d9fc323d22e</xliffext:olfilehash>
  </header>
</xliff>