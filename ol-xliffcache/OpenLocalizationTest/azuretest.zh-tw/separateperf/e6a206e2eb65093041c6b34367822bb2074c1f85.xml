{
  "nodes": [
    {
      "content": "Get started with Azure Notification Hubs | Microsoft Azure",
      "pos": [
        27,
        85
      ]
    },
    {
      "content": "In this tutorial, you learn how to use Azure Notification Hubs to push notifications to a Windows Store or Windows Phone 8.1 (non-Silverlight) application.",
      "pos": [
        104,
        259
      ]
    },
    {
      "content": "Getting started with Notification Hubs",
      "pos": [
        601,
        639
      ]
    },
    {
      "content": "Overview",
      "pos": [
        759,
        767
      ]
    },
    {
      "content": "This tutorial shows you how to use Azure Notification Hubs to send push notifications to a Windows Store or Windows Phone 8.1 (non-Silverlight) application.",
      "pos": [
        769,
        925
      ]
    },
    {
      "content": "If you are targeting Windows Phone 8.1 Silverlight, please refer to the <bpt id=\"p1\">[</bpt>Windows Phone<ept id=\"p1\">](notification-hubs-windows-phone-get-started.md)</ept> version.",
      "pos": [
        926,
        1070
      ]
    },
    {
      "content": "In this tutorial, you create a blank Windows Store app that receives push notifications by using the Windows Push Notification Service (WNS).",
      "pos": [
        1071,
        1212
      ]
    },
    {
      "content": "When you're finished, you'll be able to use your notification hub to broadcast push notifications to all the devices running your app.",
      "pos": [
        1213,
        1347
      ]
    },
    {
      "content": "This tutorial demonstrates a simple broadcast scenario in using Notification Hubs.",
      "pos": [
        1349,
        1431
      ]
    },
    {
      "content": "Be sure to follow along with the next tutorial to learn how to use Notification Hubs to address specific users and groups of devices.",
      "pos": [
        1432,
        1565
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        1570,
        1583
      ]
    },
    {
      "content": "This tutorial requires the following:",
      "pos": [
        1585,
        1622
      ]
    },
    {
      "content": "Microsoft Visual Studio Express 2013 for Windows with Update 2",
      "pos": [
        1626,
        1688
      ]
    },
    {
      "content": "This version of Visual Studio is required to create a universal app project.",
      "pos": [
        1693,
        1769
      ]
    },
    {
      "content": "If you just want to create a Windows Store app, you need Visual Studio 2012 Express for Windows 8.",
      "pos": [
        1770,
        1868
      ]
    },
    {
      "content": "An active Windows Store account",
      "pos": [
        1872,
        1903
      ]
    },
    {
      "content": "An active Azure account",
      "pos": [
        1907,
        1930
      ]
    },
    {
      "content": "If you don't have an account, you can create a free trial account in just a couple of minutes.",
      "pos": [
        1936,
        2030
      ]
    },
    {
      "content": "For details, see <bpt id=\"p1\">[</bpt>Azure Free Trial<ept id=\"p1\">](http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A0E0E5C02&amp;amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fdocumentation%2Farticles%2Fnotification-hubs-windows-store-dotnet-get-started%2F)</ept>.",
      "pos": [
        2031,
        2272
      ]
    },
    {
      "content": "Completing this tutorial is a prerequisite for all other Notification Hubs tutorials for Windows Store apps.",
      "pos": [
        2274,
        2382
      ]
    },
    {
      "content": "Register your app for the Windows Store",
      "pos": [
        2386,
        2425
      ]
    },
    {
      "content": "To send push notifications to Windows Store apps, you must associate your app to the Windows Store.",
      "pos": [
        2427,
        2526
      ]
    },
    {
      "content": "You must then configure your notification hub to integrate with WNS.",
      "pos": [
        2527,
        2595
      ]
    },
    {
      "pos": [
        2600,
        2832
      ],
      "content": "If you have not already registered your app, navigate to the <ph id=\"ph1\">&lt;a href=\"http://go.microsoft.com/fwlink/p/?LinkID=266582\" target=\"_blank\"&gt;</ph>Windows Dev Center<ph id=\"ph2\">&lt;/a&gt;</ph>, sign in with your Microsoft account, and then click <bpt id=\"p1\">**</bpt>Create a new app<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        2838,
        2894
      ],
      "content": "Type a name for your app and click <bpt id=\"p1\">**</bpt>Reserve app name<ept id=\"p1\">**</ept>."
    },
    {
      "content": "This creates a new Windows Store registration for your app.",
      "pos": [
        3005,
        3064
      ]
    },
    {
      "pos": [
        3069,
        3165
      ],
      "content": "In Visual Studio, create a new Visual C# Store Apps project by using the <bpt id=\"p1\">**</bpt>Blank App<ept id=\"p1\">**</ept> template."
    },
    {
      "content": "![][2]",
      "pos": [
        3171,
        3177
      ]
    },
    {
      "pos": [
        3182,
        3315
      ],
      "content": "In Solution Explorer, right-click the Windows Store app project, click <bpt id=\"p1\">**</bpt>Store<ept id=\"p1\">**</ept>, and then click <bpt id=\"p2\">**</bpt>Associate App with the Store...<ept id=\"p2\">**</ept>."
    },
    {
      "content": "![][3]",
      "pos": [
        3321,
        3327
      ]
    },
    {
      "pos": [
        3333,
        3398
      ],
      "content": "The <bpt id=\"p1\">**</bpt>Associate Your App with the Windows Store<ept id=\"p1\">**</ept> wizard appears."
    },
    {
      "pos": [
        3403,
        3481
      ],
      "content": "In the wizard, click <bpt id=\"p1\">**</bpt>Sign in<ept id=\"p1\">**</ept> and then sign in with your Microsoft account."
    },
    {
      "pos": [
        3486,
        3576
      ],
      "content": "Click the app that you registered in step 2, click <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept>, and then click <bpt id=\"p2\">**</bpt>Associate<ept id=\"p2\">**</ept>."
    },
    {
      "content": "![][4]",
      "pos": [
        3582,
        3588
      ]
    },
    {
      "content": "This adds the required Windows Store registration information to the application manifest.",
      "pos": [
        3594,
        3684
      ]
    },
    {
      "content": "(Optional) Repeat steps 4â€“6 for the Windows Phone Store app project.",
      "pos": [
        3689,
        3757
      ]
    },
    {
      "pos": [
        3764,
        3993
      ],
      "content": "Back on the Windows Dev Center page for your new app, click <bpt id=\"p1\">**</bpt>Services<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Push notifications<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>Live Services site<ept id=\"p3\">**</ept> under <bpt id=\"p4\">**</bpt>Windows Push Notification Services (WNS) and Microsoft Azure Mobile Services<ept id=\"p4\">**</ept>."
    },
    {
      "pos": [
        4112,
        4230
      ],
      "content": "On the <bpt id=\"p1\">**</bpt>App Settings<ept id=\"p1\">**</ept> tab, make a note of the values of <bpt id=\"p2\">**</bpt>Client secret<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>Package security identifier (SID)<ept id=\"p3\">**</ept>."
    },
    {
      "content": "![][6]",
      "pos": [
        4236,
        4242
      ]
    },
    {
      "content": "The client secret and package SID are important security credentials.",
      "pos": [
        4270,
        4339
      ]
    },
    {
      "content": "Do not share these values with anyone or distribute them with your app.",
      "pos": [
        4340,
        4411
      ]
    },
    {
      "content": "Configure your notification hub",
      "pos": [
        4415,
        4446
      ]
    },
    {
      "pos": [
        4451,
        4533
      ],
      "content": "Sign in to the <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure portal]</ept>, and then click <bpt id=\"p2\">**</bpt>NEW<ept id=\"p2\">**</ept> at the bottom of the screen."
    },
    {
      "pos": [
        4538,
        4645
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>App Services<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Service Bus<ept id=\"p2\">**</ept>, click <bpt id=\"p3\">**</bpt>Notification Hub<ept id=\"p3\">**</ept>, and then click <bpt id=\"p4\">**</bpt>Quick Create<ept id=\"p4\">**</ept>."
    },
    {
      "content": "![][7]",
      "pos": [
        4651,
        4657
      ]
    },
    {
      "pos": [
        4662,
        4778
      ],
      "content": "Type a name for your notification hub, select your desired region, and then click <bpt id=\"p1\">**</bpt>Create a New Notification Hub<ept id=\"p1\">**</ept>."
    },
    {
      "content": "![][8]",
      "pos": [
        4784,
        4790
      ]
    },
    {
      "pos": [
        4795,
        4927
      ],
      "content": "Click the namespace that you just created (usually <bpt id=\"p1\">**</bpt><bpt id=\"p2\">*</bpt>notification hub name<ept id=\"p2\">*</ept>-ns<ept id=\"p1\">**</ept>), and then click the <bpt id=\"p3\">**</bpt>Configure<ept id=\"p3\">**</ept> tab at the top."
    },
    {
      "content": "![][9]",
      "pos": [
        4933,
        4939
      ]
    },
    {
      "pos": [
        4944,
        5051
      ],
      "content": "Select the <bpt id=\"p1\">**</bpt>Notification Hubs<ept id=\"p1\">**</ept> tab at the top, and then click the notification hub that you just created."
    },
    {
      "content": "![][10]",
      "pos": [
        5057,
        5064
      ]
    },
    {
      "pos": [
        5069,
        5241
      ],
      "content": "Select the <bpt id=\"p1\">**</bpt>Configure<ept id=\"p1\">**</ept> tab at the top, enter the <bpt id=\"p2\">**</bpt>Client secret<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>Package SID<ept id=\"p3\">**</ept> values that you obtained from WNS in the previous section, and then click <bpt id=\"p4\">**</bpt>Save<ept id=\"p4\">**</ept>."
    },
    {
      "content": "![][11]",
      "pos": [
        5247,
        5254
      ]
    },
    {
      "content": "Select the <bpt id=\"p1\">**</bpt>Dashboard<ept id=\"p1\">**</ept> tab at the top, and then click the <bpt id=\"p2\">**</bpt>Connection Information<ept id=\"p2\">**</ept> button at the bottom of the page.",
      "pos": [
        5259,
        5379
      ]
    },
    {
      "content": "Take note of the two connection strings.",
      "pos": [
        5380,
        5420
      ]
    },
    {
      "content": "![][12]",
      "pos": [
        5426,
        5433
      ]
    },
    {
      "content": "Your notification hub is now configured to work with WNS, and you have the connection strings to register your app and send notifications.",
      "pos": [
        5435,
        5573
      ]
    },
    {
      "content": "Connect your app to the notification hub",
      "pos": [
        5577,
        5617
      ]
    },
    {
      "pos": [
        5622,
        5707
      ],
      "content": "In Visual Studio, right-click the solution, and then click <bpt id=\"p1\">**</bpt>Manage NuGet Packages<ept id=\"p1\">**</ept>."
    },
    {
      "pos": [
        5713,
        5768
      ],
      "content": "This displays the <bpt id=\"p1\">**</bpt>Manage NuGet Packages<ept id=\"p1\">**</ept> dialog box."
    },
    {
      "pos": [
        5773,
        5905
      ],
      "content": "Search for <ph id=\"ph1\">`WindowsAzure.Messaging.Managed`</ph> and click <bpt id=\"p1\">**</bpt>Install<ept id=\"p1\">**</ept>, select all projects in the solution, and accept the terms of use."
    },
    {
      "content": "![][20]",
      "pos": [
        5911,
        5918
      ]
    },
    {
      "pos": [
        5924,
        6160
      ],
      "content": "This downloads, installs, and adds a reference in all projects to the Azure Messaging library for Windows by using the <ph id=\"ph1\">&lt;a href=\"http://nuget.org/packages/WindowsAzure.Messaging.Managed/\"&gt;</ph>WindowsAzure.Messaging.Managed NuGet package<ph id=\"ph2\">&lt;/a&gt;</ph>."
    },
    {
      "content": "Open the App.xaml.cs project file and add the following <ph id=\"ph1\">`using`</ph> statements.",
      "pos": [
        6165,
        6240
      ]
    },
    {
      "content": "In a universal project, this file is located in the <ph id=\"ph1\">`&lt;project_name&gt;.Shared`</ph> folder.",
      "pos": [
        6241,
        6324
      ]
    },
    {
      "pos": [
        6465,
        6570
      ],
      "content": "Also in App.xaml.cs, add the following <bpt id=\"p1\">**</bpt>InitNotificationsAsync<ept id=\"p1\">**</ept> method definition to the <bpt id=\"p2\">**</bpt>App<ept id=\"p2\">**</ept> class:"
    },
    {
      "content": "This code retrieves the channel URI for the app from WNS, and then registers that channel URI with your notification hub.",
      "pos": [
        7285,
        7406
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>Make sure to replace the \"hub name\" placeholder with the name of the notification hub that appears in the portal on the <bpt id=\"p1\">**</bpt>Notification Hubs<ept id=\"p1\">**</ept> tab (for example, <bpt id=\"p2\">**</bpt>mynotificationhub2<ept id=\"p2\">**</ept> in the previous example).",
      "pos": [
        7413,
        7633
      ]
    },
    {
      "content": "Also replace the connection string placeholder with the <bpt id=\"p1\">**</bpt>DefaultListenSharedAccessSignature<ept id=\"p1\">**</ept> connection string that you obtained in the previous section.",
      "pos": [
        7634,
        7789
      ]
    },
    {
      "pos": [
        7794,
        7925
      ],
      "content": "At the top of the <bpt id=\"p1\">**</bpt>OnLaunched<ept id=\"p1\">**</ept> event handler in App.xaml.cs, add the following call to the new <bpt id=\"p2\">**</bpt>InitNotificationsAsync<ept id=\"p2\">**</ept> method:"
    },
    {
      "content": "This guarantees that the channel URI is registered in your notification hub each time the application is launched.",
      "pos": [
        7966,
        8080
      ]
    },
    {
      "pos": [
        8085,
        8235
      ],
      "content": "In Solution Explorer, double-click <bpt id=\"p1\">**</bpt>Package.appxmanifest<ept id=\"p1\">**</ept> of the Windows Store app, and then in <bpt id=\"p2\">**</bpt>Notifications<ept id=\"p2\">**</ept>, set <bpt id=\"p3\">**</bpt>Toast capable<ept id=\"p3\">**</ept> to <bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>:"
    },
    {
      "content": "![][18]",
      "pos": [
        8241,
        8248
      ]
    },
    {
      "pos": [
        8254,
        8297
      ],
      "content": "From the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Save All<ept id=\"p2\">**</ept>."
    },
    {
      "content": "(Optional) Repeat the previous step in the Windows Phone Store app project.",
      "pos": [
        8302,
        8377
      ]
    },
    {
      "content": "Press the <bpt id=\"p1\">**</bpt>F5<ept id=\"p1\">**</ept> key to run the app.",
      "pos": [
        8382,
        8418
      ]
    },
    {
      "content": "A pop-up dialog that contains the registration key is displayed.",
      "pos": [
        8419,
        8483
      ]
    },
    {
      "content": "![][19]",
      "pos": [
        8489,
        8496
      ]
    },
    {
      "content": "(Optional) Repeat the previous step to run the other project.",
      "pos": [
        8501,
        8562
      ]
    },
    {
      "content": "Your app is now ready to receive toast notifications.",
      "pos": [
        8564,
        8617
      ]
    },
    {
      "content": "Send the notification from your backend",
      "pos": [
        8621,
        8660
      ]
    },
    {
      "content": "You can send notifications by using Notification Hubs from any backend via the <ph id=\"ph1\">&lt;a href=\"http://msdn.microsoft.com/library/windowsazure/dn223264.aspx\"&gt;</ph>REST interface<ph id=\"ph2\">&lt;/a&gt;</ph>.",
      "pos": [
        8662,
        8831
      ]
    },
    {
      "content": "In this tutorial, you send notifications by using a .NET console application.",
      "pos": [
        8832,
        8909
      ]
    },
    {
      "content": "For an example of how to send notifications from an Azure Mobile Services backend that's integrated with Notification Hubs, see \"Get started with push notifications in Mobile Services\" (<bpt id=\"p1\">[</bpt>.NET backend<ept id=\"p1\">](../mobile-services-javascript-backend-windows-store-dotnet-get-started-push.md)</ept> | <bpt id=\"p2\">[</bpt>JavaScript backend<ept id=\"p2\">](../mobile-services-javascript-backend-windows-store-dotnet-get-started-push.md)</ept>).",
      "pos": [
        8910,
        9295
      ]
    },
    {
      "content": "For an example of how to send notifications by using the REST APIs, see \"How to use Notification Hubs from Java/PHP\" (<bpt id=\"p1\">[</bpt>Java<ept id=\"p1\">](notification-hubs-java-backend-how-to.md)</ept> | <bpt id=\"p2\">[</bpt>PHP<ept id=\"p2\">](notification-hubs-php-backend-how-to.md)</ept>).",
      "pos": [
        9297,
        9514
      ]
    },
    {
      "pos": [
        9519,
        9678
      ],
      "content": "Right-click the solution, select <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>New Project...<ept id=\"p2\">**</ept>, and then under <bpt id=\"p3\">**</bpt>Visual C#<ept id=\"p3\">**</ept>, click <bpt id=\"p4\">**</bpt>Windows<ept id=\"p4\">**</ept> and <bpt id=\"p5\">**</bpt>Console Application<ept id=\"p5\">**</ept>, and click <bpt id=\"p6\">**</bpt>OK<ept id=\"p6\">**</ept>."
    },
    {
      "content": "![][13]",
      "pos": [
        9684,
        9691
      ]
    },
    {
      "content": "This adds a new Visual C# console application to the solution.",
      "pos": [
        9697,
        9759
      ]
    },
    {
      "content": "You can also do this in a separate solution.",
      "pos": [
        9760,
        9804
      ]
    },
    {
      "pos": [
        9809,
        9920
      ],
      "content": "In Visual Studio, click <bpt id=\"p1\">**</bpt>Tools<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>NuGet Package Manager<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>Package Manager Console<ept id=\"p3\">**</ept>."
    },
    {
      "content": "This displays the Package Manager Console in Visual Studio.",
      "pos": [
        9926,
        9985
      ]
    },
    {
      "pos": [
        9990,
        10160
      ],
      "content": "In the Package Manager Console window, set the <bpt id=\"p1\">**</bpt>Default project<ept id=\"p1\">**</ept> to your new console application project, and then in the console window, execute the following command:"
    },
    {
      "pos": [
        10224,
        10417
      ],
      "content": "This adds a reference to the Azure Notification Hubs SDK using the <ph id=\"ph1\">&lt;a href=\"http://www.nuget.org/packages/Microsoft.Azure.NotificationHubs/\"&gt;</ph>Microsoft.Azure.Notification Hubs NuGet package<ph id=\"ph2\">&lt;/a&gt;</ph>."
    },
    {
      "pos": [
        10422,
        10487
      ],
      "content": "Open the Program.cs file and add the following <ph id=\"ph1\">`using`</ph> statement:"
    },
    {
      "pos": [
        10541,
        10592
      ],
      "content": "In the <bpt id=\"p1\">**</bpt>Program<ept id=\"p1\">**</ept> class, add the following method:"
    },
    {
      "content": "Make sure to replace the \"hub name\" placeholder with the name of the notification hub that appears in the portal on the <bpt id=\"p1\">**</bpt>Notification Hubs<ept id=\"p1\">**</ept> tab.",
      "pos": [
        11058,
        11204
      ]
    },
    {
      "content": "Also, replace the connection string placeholder with the connection string called <bpt id=\"p1\">**</bpt>DefaultFullSharedAccessSignature<ept id=\"p1\">**</ept> that you obtained in the section \"Configure your notification hub.\"",
      "pos": [
        11205,
        11391
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph>Make sure that you use the connection string that has <bpt id=\"p1\">**</bpt>Full<ept id=\"p1\">**</ept> access, not <bpt id=\"p2\">**</bpt>Listen<ept id=\"p2\">**</ept> access.",
      "pos": [
        11398,
        11503
      ]
    },
    {
      "content": "The listen-access string does not have permissions to send notifications.",
      "pos": [
        11504,
        11577
      ]
    },
    {
      "pos": [
        11582,
        11629
      ],
      "content": "Add the following lines in the <bpt id=\"p1\">**</bpt>Main<ept id=\"p1\">**</ept> method:"
    },
    {
      "content": "Right-click the console application project in Visual Studio, and click <bpt id=\"p1\">**</bpt>Set as StartUp Project<ept id=\"p1\">**</ept> to set it as the startup project.",
      "pos": [
        11698,
        11830
      ]
    },
    {
      "content": "Then press the <bpt id=\"p1\">**</bpt>F5<ept id=\"p1\">**</ept> key to run the application.",
      "pos": [
        11831,
        11880
      ]
    },
    {
      "content": "![][14]",
      "pos": [
        11886,
        11893
      ]
    },
    {
      "content": "You will receive a toast notification on all registered devices.",
      "pos": [
        11899,
        11963
      ]
    },
    {
      "content": "Clicking or tapping the toast banner loads the app.",
      "pos": [
        11964,
        12015
      ]
    },
    {
      "pos": [
        12017,
        12133
      ],
      "content": "You can find all the supported payloads in the <bpt id=\"p1\">[</bpt><ept id=\"p1\">toast catalog]</ept>, <bpt id=\"p2\">[</bpt><ept id=\"p2\">tile catalog]</ept>, and <bpt id=\"p3\">[</bpt><ept id=\"p3\">badge overview]</ept> topics on MSDN."
    },
    {
      "content": "Next steps",
      "pos": [
        12137,
        12147
      ]
    },
    {
      "content": "In this simple example, you sent broadcast notifications to all your Windows devices.",
      "pos": [
        12149,
        12234
      ]
    },
    {
      "content": "In order to target specific users, refer to the tutorial <bpt id=\"p1\">[</bpt><ept id=\"p1\">Use Notification Hubs to push notifications to users]</ept>.",
      "pos": [
        12235,
        12347
      ]
    },
    {
      "content": "If you want to segment your users by interest groups, see <bpt id=\"p1\">[</bpt><ept id=\"p1\">Use Notification Hubs to send breaking news]</ept>.",
      "pos": [
        12348,
        12452
      ]
    },
    {
      "content": "To learn more about how to use Notification Hubs, see <bpt id=\"p1\">[</bpt><ept id=\"p1\">Notification Hubs Guidance]</ept>.",
      "pos": [
        12453,
        12536
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Get started with Azure Notification Hubs | Microsoft Azure\"\n    description=\"In this tutorial, you learn how to use Azure Notification Hubs to push notifications to a Windows Store or Windows Phone 8.1 (non-Silverlight) application.\"\n    services=\"notification-hubs\"\n    documentationCenter=\"windows\"\n    authors=\"wesmc7777\"\n    manager=\"dwrede\"\n    editor=\"dwrede\"/>\n\n<tags\n    ms.service=\"notification-hubs\"\n    ms.workload=\"mobile\"\n    ms.tgt_pltfrm=\"mobile-windows\"\n    ms.devlang=\"dotnet\"\n    ms.topic=\"hero-article\"\n    ms.date=\"08/24/2015\"\n    ms.author=\"wesmc\"/>\n\n# Getting started with Notification Hubs\n\n[AZURE.INCLUDE [notification-hubs-selector-get-started](../../includes/notification-hubs-selector-get-started.md)]\n\n##Overview\n\nThis tutorial shows you how to use Azure Notification Hubs to send push notifications to a Windows Store or Windows Phone 8.1 (non-Silverlight) application. If you are targeting Windows Phone 8.1 Silverlight, please refer to the [Windows Phone](notification-hubs-windows-phone-get-started.md) version.\nIn this tutorial, you create a blank Windows Store app that receives push notifications by using the Windows Push Notification Service (WNS). When you're finished, you'll be able to use your notification hub to broadcast push notifications to all the devices running your app.\n\nThis tutorial demonstrates a simple broadcast scenario in using Notification Hubs. Be sure to follow along with the next tutorial to learn how to use Notification Hubs to address specific users and groups of devices.\n\n\n##Prerequisites\n\nThis tutorial requires the following:\n\n+ Microsoft Visual Studio Express 2013 for Windows with Update 2<br/>This version of Visual Studio is required to create a universal app project. If you just want to create a Windows Store app, you need Visual Studio 2012 Express for Windows 8.\n\n+ An active Windows Store account\n\n+ An active Azure account <br/>If you don't have an account, you can create a free trial account in just a couple of minutes. For details, see [Azure Free Trial](http://azure.microsoft.com/pricing/free-trial/?WT.mc_id=A0E0E5C02&amp;returnurl=http%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fdocumentation%2Farticles%2Fnotification-hubs-windows-store-dotnet-get-started%2F).\n\nCompleting this tutorial is a prerequisite for all other Notification Hubs tutorials for Windows Store apps.\n\n##Register your app for the Windows Store\n\nTo send push notifications to Windows Store apps, you must associate your app to the Windows Store. You must then configure your notification hub to integrate with WNS.\n\n1. If you have not already registered your app, navigate to the <a href=\"http://go.microsoft.com/fwlink/p/?LinkID=266582\" target=\"_blank\">Windows Dev Center</a>, sign in with your Microsoft account, and then click **Create a new app**.\n\n\n2. Type a name for your app and click **Reserve app name**.\n\n    ![](./media/notification-hubs-windows-store-dotnet-get-started/notification-hubs-win8-app-name.png)\n\n    This creates a new Windows Store registration for your app.\n\n3. In Visual Studio, create a new Visual C# Store Apps project by using the **Blank App** template.\n\n    ![][2]\n\n4. In Solution Explorer, right-click the Windows Store app project, click **Store**, and then click **Associate App with the Store...**.\n\n    ![][3]\n\n    The **Associate Your App with the Windows Store** wizard appears.\n\n5. In the wizard, click **Sign in** and then sign in with your Microsoft account.\n\n6. Click the app that you registered in step 2, click **Next**, and then click **Associate**.\n\n    ![][4]\n\n    This adds the required Windows Store registration information to the application manifest.\n\n7. (Optional) Repeat steps 4â€“6 for the Windows Phone Store app project.  \n\n8. Back on the Windows Dev Center page for your new app, click **Services**, click **Push notifications**, and then click **Live Services site** under **Windows Push Notification Services (WNS) and Microsoft Azure Mobile Services**.\n\n    ![](./media/notification-hubs-windows-store-dotnet-get-started/notification-hubs-win8-app-live-services.png)\n\n9. On the **App Settings** tab, make a note of the values of **Client secret** and **Package security identifier (SID)**.\n\n    ![][6]\n\n    > [AZURE.WARNING]\n    The client secret and package SID are important security credentials. Do not share these values with anyone or distribute them with your app.\n\n##Configure your notification hub\n\n1. Sign in to the [Azure portal], and then click **NEW** at the bottom of the screen.\n\n2. Click **App Services**, click **Service Bus**, click **Notification Hub**, and then click **Quick Create**.\n\n    ![][7]\n\n3. Type a name for your notification hub, select your desired region, and then click **Create a New Notification Hub**.\n\n    ![][8]\n\n4. Click the namespace that you just created (usually ***notification hub name*-ns**), and then click the **Configure** tab at the top.\n\n    ![][9]\n\n5. Select the **Notification Hubs** tab at the top, and then click the notification hub that you just created.\n\n    ![][10]\n\n6. Select the **Configure** tab at the top, enter the **Client secret** and **Package SID** values that you obtained from WNS in the previous section, and then click **Save**.\n\n    ![][11]\n\n7. Select the **Dashboard** tab at the top, and then click the **Connection Information** button at the bottom of the page. Take note of the two connection strings.\n\n    ![][12]\n\nYour notification hub is now configured to work with WNS, and you have the connection strings to register your app and send notifications.\n\n##Connect your app to the notification hub\n\n1. In Visual Studio, right-click the solution, and then click **Manage NuGet Packages**.\n\n    This displays the **Manage NuGet Packages** dialog box.\n\n2. Search for `WindowsAzure.Messaging.Managed` and click **Install**, select all projects in the solution, and accept the terms of use.\n\n    ![][20]\n\n    This downloads, installs, and adds a reference in all projects to the Azure Messaging library for Windows by using the <a href=\"http://nuget.org/packages/WindowsAzure.Messaging.Managed/\">WindowsAzure.Messaging.Managed NuGet package</a>.\n\n3. Open the App.xaml.cs project file and add the following `using` statements. In a universal project, this file is located in the `<project_name>.Shared` folder.\n\n        using Windows.Networking.PushNotifications;\n        using Microsoft.WindowsAzure.Messaging;\n        using Windows.UI.Popups;\n\n\n\n4. Also in App.xaml.cs, add the following **InitNotificationsAsync** method definition to the **App** class:\n\n        private async void InitNotificationsAsync()\n        {\n            var channel = await PushNotificationChannelManager.CreatePushNotificationChannelForApplicationAsync();\n\n            var hub = new NotificationHub(\"<hub name>\", \"<connection string with listen access>\");\n            var result = await hub.RegisterNativeAsync(channel.Uri);\n\n            // Displays the registration ID so you know it was successful\n            if (result.RegistrationId != null)\n            {\n                var dialog = new MessageDialog(\"Registration successful: \" + result.RegistrationId);\n                dialog.Commands.Add(new UICommand(\"OK\"));\n                await dialog.ShowAsync();\n            }\n\n        }\n\n    This code retrieves the channel URI for the app from WNS, and then registers that channel URI with your notification hub.\n\n    >[AZURE.NOTE]Make sure to replace the \"hub name\" placeholder with the name of the notification hub that appears in the portal on the **Notification Hubs** tab (for example, **mynotificationhub2** in the previous example). Also replace the connection string placeholder with the **DefaultListenSharedAccessSignature** connection string that you obtained in the previous section.\n\n5. At the top of the **OnLaunched** event handler in App.xaml.cs, add the following call to the new **InitNotificationsAsync** method:\n\n        InitNotificationsAsync();\n\n    This guarantees that the channel URI is registered in your notification hub each time the application is launched.\n\n6. In Solution Explorer, double-click **Package.appxmanifest** of the Windows Store app, and then in **Notifications**, set **Toast capable** to **Yes**:\n\n    ![][18]\n\n    From the **File** menu, click **Save All**.\n\n7. (Optional) Repeat the previous step in the Windows Phone Store app project.\n\n8. Press the **F5** key to run the app. A pop-up dialog that contains the registration key is displayed.\n\n    ![][19]\n\n9. (Optional) Repeat the previous step to run the other project.\n\nYour app is now ready to receive toast notifications.\n\n##Send the notification from your backend\n\nYou can send notifications by using Notification Hubs from any backend via the <a href=\"http://msdn.microsoft.com/library/windowsazure/dn223264.aspx\">REST interface</a>. In this tutorial, you send notifications by using a .NET console application. For an example of how to send notifications from an Azure Mobile Services backend that's integrated with Notification Hubs, see \"Get started with push notifications in Mobile Services\" ([.NET backend](../mobile-services-javascript-backend-windows-store-dotnet-get-started-push.md) | [JavaScript backend](../mobile-services-javascript-backend-windows-store-dotnet-get-started-push.md)).  For an example of how to send notifications by using the REST APIs, see \"How to use Notification Hubs from Java/PHP\" ([Java](notification-hubs-java-backend-how-to.md) | [PHP](notification-hubs-php-backend-how-to.md)).\n\n1. Right-click the solution, select **Add** and **New Project...**, and then under **Visual C#**, click **Windows** and **Console Application**, and click **OK**.\n\n    ![][13]\n\n    This adds a new Visual C# console application to the solution. You can also do this in a separate solution.\n\n4. In Visual Studio, click **Tools**, click **NuGet Package Manager**, and then click **Package Manager Console**.\n\n    This displays the Package Manager Console in Visual Studio.\n\n6. In the Package Manager Console window, set the **Default project** to your new console application project, and then in the console window, execute the following command:\n\n        Install-Package Microsoft.Azure.NotificationHubs\n\n    This adds a reference to the Azure Notification Hubs SDK using the <a href=\"http://www.nuget.org/packages/Microsoft.Azure.NotificationHubs/\">Microsoft.Azure.Notification Hubs NuGet package</a>.\n\n5. Open the Program.cs file and add the following `using` statement:\n\n        using Microsoft.Azure.NotificationHubs;\n\n6. In the **Program** class, add the following method:\n\n        private static async void SendNotificationAsync()\n        {\n            NotificationHubClient hub = NotificationHubClient\n                .CreateClientFromConnectionString(\"<connection string with full access>\", \"<hub name>\");\n            var toast = @\"<toast><visual><binding template=\"\"ToastText01\"\"><text id=\"\"1\"\">Hello from a .NET App!</text></binding></visual></toast>\";\n            await hub.SendWindowsNativeNotificationAsync(toast);\n        }\n\n    Make sure to replace the \"hub name\" placeholder with the name of the notification hub that appears in the portal on the **Notification Hubs** tab. Also, replace the connection string placeholder with the connection string called **DefaultFullSharedAccessSignature** that you obtained in the section \"Configure your notification hub.\"\n\n    >[AZURE.NOTE]Make sure that you use the connection string that has **Full** access, not **Listen** access. The listen-access string does not have permissions to send notifications.\n\n7. Add the following lines in the **Main** method:\n\n         SendNotificationAsync();\n         Console.ReadLine();\n\n8. Right-click the console application project in Visual Studio, and click **Set as StartUp Project** to set it as the startup project. Then press the **F5** key to run the application.\n\n    ![][14]\n\n    You will receive a toast notification on all registered devices. Clicking or tapping the toast banner loads the app.\n\nYou can find all the supported payloads in the [toast catalog], [tile catalog], and [badge overview] topics on MSDN.\n\n##Next steps\n\nIn this simple example, you sent broadcast notifications to all your Windows devices. In order to target specific users, refer to the tutorial [Use Notification Hubs to push notifications to users]. If you want to segment your users by interest groups, see [Use Notification Hubs to send breaking news]. To learn more about how to use Notification Hubs, see [Notification Hubs Guidance].\n\n\n\n<!-- Images. -->\n[2]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-create-windows-universal-app.png\n[3]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-associate-win8-app.png\n[4]: ./media/notification-hubs-windows-store-dotnet-get-started/mobile-services-select-app-name.png\n[6]: ./media/notification-hubs-windows-store-dotnet-get-started/mobile-services-win8-app-push-auth.png\n[7]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-create-from-portal.png\n[8]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-create-from-portal2.png\n[9]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-select-from-portal.png\n[10]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-select-from-portal2.png\n[11]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-configure-wns.png\n[12]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-connection-strings.png\n[13]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-create-console-app.png\n[14]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-windows-toast.png\n[15]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-scheduler1.png\n[16]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-scheduler2.png\n[18]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-win8-app-toast.png\n[19]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-windows-reg.png\n[20]: ./media/notification-hubs-windows-store-dotnet-get-started/notification-hub-windows-universal-app-install-package.png\n\n<!-- URLs. -->\n[Azure portal]: https://manage.windowsazure.com/\n[Notification Hubs Guidance]: http://msdn.microsoft.com/library/jj927170.aspx\n\n[Use Notification Hubs to push notifications to users]: notification-hubs-aspnet-backend-windows-dotnet-notify-users.md\n[Use Notification Hubs to send breaking news]: notification-hubs-windows-store-dotnet-send-breaking-news.md\n\n[toast catalog]: http://msdn.microsoft.com/library/windows/apps/hh761494.aspx\n[tile catalog]: http://msdn.microsoft.com/library/windows/apps/hh761491.aspx\n[badge overview]: http://msdn.microsoft.com/library/windows/apps/hh779719.aspx\n"
}