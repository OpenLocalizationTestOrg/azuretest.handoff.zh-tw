{
  "nodes": [
    {
      "content": "Create a Queue",
      "pos": [
        5,
        19
      ]
    },
    {
      "content": "A <bpt id=\"p1\">**</bpt>CloudQueueClient<ept id=\"p1\">**</ept> object lets you get reference objects for queues.",
      "pos": [
        20,
        92
      ]
    },
    {
      "content": "The following code creates a <bpt id=\"p1\">**</bpt>CloudQueueClient<ept id=\"p1\">**</ept> object.",
      "pos": [
        93,
        150
      ]
    },
    {
      "content": "All code in this topic uses a storage connection string stored in the Azure application's service configuration.",
      "pos": [
        151,
        263
      ]
    },
    {
      "content": "There are also other ways to create a <bpt id=\"p1\">**</bpt>CloudStorageAccount<ept id=\"p1\">**</ept> object.",
      "pos": [
        264,
        333
      ]
    },
    {
      "content": "See the <bpt id=\"p1\">[</bpt>CloudStorageAccount<ept id=\"p1\">](http://msdn.microsoft.com/library/azure/microsoft.windowsazure.cloudstorageaccount_methods.aspx \"CloudStorageAccount\")</ept> documentation for details.",
      "pos": [
        334,
        509
      ]
    },
    {
      "content": "Use the <bpt id=\"p1\">**</bpt>queueClient<ept id=\"p1\">**</ept> object to get a reference to the queue you want to use.",
      "pos": [
        620,
        699
      ]
    },
    {
      "content": "The code tries to reference a queue named “myqueue.”",
      "pos": [
        700,
        752
      ]
    },
    {
      "content": "If it can’t find a queue with that name, it creates one.",
      "pos": [
        753,
        809
      ]
    },
    {
      "pos": [
        1017,
        1094
      ],
      "content": "<bpt id=\"p1\">**</bpt>NOTE:<ept id=\"p1\">**</ept> Use this code block in front of the code in the following sections."
    },
    {
      "content": "Insert a Message into a Queue",
      "pos": [
        1101,
        1130
      ]
    },
    {
      "content": "To insert a message into an existing queue, first create a new <bpt id=\"p1\">**</bpt>CloudQueueMessage<ept id=\"p1\">**</ept> object.",
      "pos": [
        1131,
        1223
      ]
    },
    {
      "content": "Next, call the AddMessage() method.",
      "pos": [
        1224,
        1259
      ]
    },
    {
      "content": "A <bpt id=\"p1\">**</bpt>CloudQueueMessage<ept id=\"p1\">**</ept> object can be created from either a string (in UTF-8 format) or a byte array.",
      "pos": [
        1260,
        1361
      ]
    },
    {
      "content": "Here is code which creates a queue (if it doesn't exist) and inserts the message 'Hello, World'.",
      "pos": [
        1362,
        1458
      ]
    },
    {
      "content": "Peek at the Next Message",
      "pos": [
        1617,
        1641
      ]
    },
    {
      "content": "You can peek at the message in the front of a queue without removing it from the queue by calling the PeekMessage() method.",
      "pos": [
        1642,
        1765
      ]
    },
    {
      "content": "Remove the Next Message",
      "pos": [
        1954,
        1977
      ]
    },
    {
      "content": "Your code can remove (de-queue) a message from a queue in two steps.",
      "pos": [
        1978,
        2046
      ]
    },
    {
      "content": "Call GetMessage() to get the next message in a queue.",
      "pos": [
        2053,
        2106
      ]
    },
    {
      "content": "A message returned from GetMessage() becomes invisible to any other code reading messages from this queue.",
      "pos": [
        2107,
        2213
      ]
    },
    {
      "content": "By default, this message stays invisible for 30 seconds.",
      "pos": [
        2214,
        2270
      ]
    },
    {
      "content": "To finish removing the message from the queue, call DeleteMessage().",
      "pos": [
        2276,
        2344
      ]
    },
    {
      "content": "This two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again.",
      "pos": [
        2347,
        2550
      ]
    },
    {
      "content": "The following code calls DeleteMessage() right after the message has been processed.",
      "pos": [
        2551,
        2635
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Learn more about Azure Storage<ept id=\"p1\">](http://azure.microsoft.com/documentation/services/storage/)</ept>",
      "pos": [
        2866,
        2958
      ]
    },
    {
      "content": "See also <bpt id=\"p1\">[</bpt>Browsing Storage Resources in Server Explorer<ept id=\"p1\">](http://msdn.microsoft.com/library/azure/ff683677.aspx)</ept>.",
      "pos": [
        2959,
        3071
      ]
    }
  ],
  "content": "#####Create a Queue\nA **CloudQueueClient** object lets you get reference objects for queues. The following code creates a **CloudQueueClient** object. All code in this topic uses a storage connection string stored in the Azure application's service configuration. There are also other ways to create a **CloudStorageAccount** object. See the [CloudStorageAccount](http://msdn.microsoft.com/library/azure/microsoft.windowsazure.cloudstorageaccount_methods.aspx \"CloudStorageAccount\") documentation for details.\n\n    // Create the queue client.\n    CloudQueueClient queueClient = storageAccount.CreateCloudQueueClient();\n\nUse the **queueClient** object to get a reference to the queue you want to use. The code tries to reference a queue named “myqueue.” If it can’t find a queue with that name, it creates one.\n\n    // Get a reference to a queue named “myqueue”.\n    CloudQueue queue = queueClient.GetQueueReference(\"myqueue\");\n\n    // If the queue isn’t already there, then create it.\n    queue.CreateIfNotExists();\n\n**NOTE:** Use this code block in front of the code in the following sections.\n\n#####Insert a Message into a Queue\nTo insert a message into an existing queue, first create a new **CloudQueueMessage** object. Next, call the AddMessage() method. A **CloudQueueMessage** object can be created from either a string (in UTF-8 format) or a byte array. Here is code which creates a queue (if it doesn't exist) and inserts the message 'Hello, World'.\n\n    // Create a message and add it to the queue.\n    CloudQueueMessage message = new CloudQueueMessage(\"Hello, World\");\n    queue.AddMessage(message);\n\n#####Peek at the Next Message\nYou can peek at the message in the front of a queue without removing it from the queue by calling the PeekMessage() method.\n\n    // Peek at the next message in the queue.\n    CloudQueueMessage peekedMessage = queue.PeekMessage();\n\n    // Display the message.\n    Console.WriteLine(peekedMessage.AsString);\n\n#####Remove the Next Message\nYour code can remove (de-queue) a message from a queue in two steps. \n\n\n1. Call GetMessage() to get the next message in a queue. A message returned from GetMessage() becomes invisible to any other code reading messages from this queue. By default, this message stays invisible for 30 seconds. \n2.  To finish removing the message from the queue, call DeleteMessage(). \n\nThis two-step process of removing a message assures that if your code fails to process a message due to hardware or software failure, another instance of your code can get the same message and try again. The following code calls DeleteMessage() right after the message has been processed.\n\n    // Get the next message in the queue.\n    CloudQueueMessage retrievedMessage = queue.GetMessage();\n\n    // Process the message in less than 30 seconds, and then delete the message.\n    queue.DeleteMessage(retrievedMessage);\n\n[Learn more about Azure Storage](http://azure.microsoft.com/documentation/services/storage/)\nSee also [Browsing Storage Resources in Server Explorer](http://msdn.microsoft.com/library/azure/ff683677.aspx)."
}