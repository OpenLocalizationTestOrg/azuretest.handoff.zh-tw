{
  "nodes": [
    {
      "content": "Creating and managing elastic database jobs",
      "pos": [
        27,
        70
      ]
    },
    {
      "content": "Walk through creation and management of an elastic database job.",
      "pos": [
        89,
        153
      ]
    },
    {
      "content": "Create and manage a SQL Database elastic jobs with Portal (preview)",
      "pos": [
        466,
        533
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        537,
        553
      ]
    },
    {
      "content": "Azure portal",
      "pos": [
        557,
        569
      ]
    },
    {
      "content": "PowerShell",
      "pos": [
        622,
        632
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Elastic Database jobs<ept id=\"p1\">**</ept> enables easily and reliable management of a group of databases, by simplifying the execution of administrative operations such as schema changes, credentials management, reference data updates, performance data collection or tenant (customer) telemetry collection.",
      "pos": [
        677,
        967
      ]
    },
    {
      "content": "Elastic Database jobs is currently available through the Azure portal and PowerShell cmdlets.",
      "pos": [
        968,
        1061
      ]
    },
    {
      "content": "However, the Azure portal surfaces reduced functionality limited to execution across all databases in an <bpt id=\"p1\">[</bpt>Elastic Database pool (preview)<ept id=\"p1\">](sql-database-elastic-pool.md)</ept>.",
      "pos": [
        1062,
        1231
      ]
    },
    {
      "content": "To access additional features and execution of scripts across a group of databases including a custom-defined collection or a shard set (created using <bpt id=\"p1\">[</bpt>Elastic Database client library<ept id=\"p1\">](sql-database-elastic-scale-introduction.md)</ept>), see <bpt id=\"p2\">[</bpt>Creating and managing jobs using PowerShell<ept id=\"p2\">](sql-database-elastic-jobs-powershell.md)</ept>.",
      "pos": [
        1232,
        1554
      ]
    },
    {
      "content": "For more information about jobs, see <bpt id=\"p1\">[</bpt>Elastic Database jobs overview<ept id=\"p1\">](sql-database-elastic-jobs-overview.md)</ept>.",
      "pos": [
        1555,
        1664
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        1670,
        1683
      ]
    },
    {
      "content": "An Azure subscription.",
      "pos": [
        1687,
        1709
      ]
    },
    {
      "content": "For a free trial, see <bpt id=\"p1\">[</bpt>Free one-month trial<ept id=\"p1\">](http://azure.microsoft.com/pricing/free-trial/)</ept>.",
      "pos": [
        1710,
        1803
      ]
    },
    {
      "content": "An elastic database pool.",
      "pos": [
        1806,
        1831
      ]
    },
    {
      "content": "See <bpt id=\"p1\">[</bpt>About Elastic database pools<ept id=\"p1\">](sql-database-elastic-pool.md)</ept>",
      "pos": [
        1832,
        1896
      ]
    },
    {
      "content": "Installation of elastic database job service components.",
      "pos": [
        1899,
        1955
      ]
    },
    {
      "content": "See <bpt id=\"p1\">[</bpt>Installing the elastic database job service<ept id=\"p1\">](sql-database-elastic-jobs-service-installation.md)</ept>.",
      "pos": [
        1956,
        2057
      ]
    },
    {
      "content": "Creating jobs",
      "pos": [
        2062,
        2075
      ]
    },
    {
      "pos": [
        2080,
        2197
      ],
      "content": "Using the <bpt id=\"p1\">[</bpt>Azure portal<ept id=\"p1\">](https://portal.azure.com)</ept>, from an existing elastic database job pool, click <bpt id=\"p2\">**</bpt>Create job<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Type in the username and password of the database administrator (created at installation of Jobs) for the jobs control database (metadata storage for jobs).",
      "pos": [
        2201,
        2357
      ]
    },
    {
      "content": "![Name the job, type or paste in code, and click Run][1]",
      "pos": [
        2363,
        2419
      ]
    },
    {
      "pos": [
        2423,
        2476
      ],
      "content": "In the <bpt id=\"p1\">**</bpt>Create Job<ept id=\"p1\">**</ept> blade, type a name for the job."
    },
    {
      "content": "Type the user name and password to connect to the target databases with sufficient permissions for script execution to succeed.",
      "pos": [
        2480,
        2607
      ]
    },
    {
      "content": "Paste or type in the T-SQL script.",
      "pos": [
        2611,
        2645
      ]
    },
    {
      "pos": [
        2649,
        2687
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>Run<ept id=\"p2\">**</ept>."
    },
    {
      "content": "![Create jobs and run][5]",
      "pos": [
        2693,
        2718
      ]
    },
    {
      "content": "Run idempotent jobs",
      "pos": [
        2723,
        2742
      ]
    },
    {
      "content": "When you run a script against a set of databases, you must be sure that the script is idempotent.",
      "pos": [
        2744,
        2841
      ]
    },
    {
      "content": "That is, the script must be able to run multiple times, even if it has failed before in an incomplete state.",
      "pos": [
        2842,
        2950
      ]
    },
    {
      "content": "For example, when a script fails, the job will be automatically retried until it succeeds (within limits, as the retry logic will eventually cease the retrying).",
      "pos": [
        2951,
        3112
      ]
    },
    {
      "content": "The way to do this is to use the an \"IF EXISTS\" clause and delete any found instance before creating a new object.",
      "pos": [
        3113,
        3227
      ]
    },
    {
      "content": "An example is shown here:",
      "pos": [
        3228,
        3253
      ]
    },
    {
      "content": "Alternatively, use an \"IF NOT EXISTS\" clause before creating a new instance:",
      "pos": [
        3519,
        3595
      ]
    },
    {
      "content": "This script then updates the table created previously.",
      "pos": [
        3883,
        3937
      ]
    },
    {
      "content": "Checking job status",
      "pos": [
        4343,
        4362
      ]
    },
    {
      "content": "After a job has begun, you can check on its progress.",
      "pos": [
        4364,
        4417
      ]
    },
    {
      "pos": [
        4422,
        4481
      ],
      "content": "From the elastic database pool page, click <bpt id=\"p1\">**</bpt>Manage jobs<ept id=\"p1\">**</ept>."
    },
    {
      "content": "![Click \"Manage jobs\"][2]",
      "pos": [
        4487,
        4512
      ]
    },
    {
      "content": "Click on the name (a) of a job.",
      "pos": [
        4517,
        4548
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>STATUS<ept id=\"p1\">**</ept> can be \"Completed\" or \"Failed.\"",
      "pos": [
        4549,
        4595
      ]
    },
    {
      "content": "The job's details appear (b) with its date and time of creation and running.",
      "pos": [
        4596,
        4672
      ]
    },
    {
      "content": "The list (c) below the that shows the progress of the script against each database in the pool, giving its date and time details.",
      "pos": [
        4673,
        4802
      ]
    },
    {
      "content": "![Checking a finished job][3]",
      "pos": [
        4808,
        4837
      ]
    },
    {
      "content": "Checking failed jobs",
      "pos": [
        4843,
        4863
      ]
    },
    {
      "content": "If a job fails, a log of its execution can found.",
      "pos": [
        4865,
        4914
      ]
    },
    {
      "content": "Click the name of the failed job to see its details.",
      "pos": [
        4915,
        4967
      ]
    },
    {
      "content": "![Check a failed job][4]",
      "pos": [
        4969,
        4993
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Creating and managing elastic database jobs\"\n    description=\"Walk through creation and management of an elastic database job.\"\n    services=\"sql-database\"\n    documentationCenter=\"\"\n    manager=\"jhubbard\"\n    authors=\"sidneyh\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"sql-database\"\n    ms.workload=\"sql-database\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"na\"\n    ms.topic=\"article\"\n    ms.date=\"07/21/2015\"\n    ms.author=\"ddove; sidneyh\"/>\n\n# Create and manage a SQL Database elastic jobs with Portal (preview)\n\n> [AZURE.SELECTOR]\n- [Azure portal](sql-database-elastic-jobs-create-and-manage.md)\n- [PowerShell](sql-database-elastic-jobs-powershell.md)\n\n\n**Elastic Database jobs** enables easily and reliable management of a group of databases, by simplifying the execution of administrative operations such as schema changes, credentials management, reference data updates, performance data collection or tenant (customer) telemetry collection. Elastic Database jobs is currently available through the Azure portal and PowerShell cmdlets. However, the Azure portal surfaces reduced functionality limited to execution across all databases in an [Elastic Database pool (preview)](sql-database-elastic-pool.md). To access additional features and execution of scripts across a group of databases including a custom-defined collection or a shard set (created using [Elastic Database client library](sql-database-elastic-scale-introduction.md)), see [Creating and managing jobs using PowerShell](sql-database-elastic-jobs-powershell.md). For more information about jobs, see [Elastic Database jobs overview](sql-database-elastic-jobs-overview.md). \n\n## Prerequisites\n\n* An Azure subscription. For a free trial, see [Free one-month trial](http://azure.microsoft.com/pricing/free-trial/).\n* An elastic database pool. See [About Elastic database pools](sql-database-elastic-pool.md)\n* Installation of elastic database job service components. See [Installing the elastic database job service](sql-database-elastic-jobs-service-installation.md).\n\n## Creating jobs\n\n1. Using the [Azure portal](https://portal.azure.com), from an existing elastic database job pool, click **Create job**.\n2. Type in the username and password of the database administrator (created at installation of Jobs) for the jobs control database (metadata storage for jobs).\n\n    ![Name the job, type or paste in code, and click Run][1]\n2. In the **Create Job** blade, type a name for the job.\n3. Type the user name and password to connect to the target databases with sufficient permissions for script execution to succeed.\n4. Paste or type in the T-SQL script.\n5. Click **Save** and then click **Run**.\n\n    ![Create jobs and run][5]\n\n## Run idempotent jobs\n\nWhen you run a script against a set of databases, you must be sure that the script is idempotent. That is, the script must be able to run multiple times, even if it has failed before in an incomplete state. For example, when a script fails, the job will be automatically retried until it succeeds (within limits, as the retry logic will eventually cease the retrying). The way to do this is to use the an \"IF EXISTS\" clause and delete any found instance before creating a new object. An example is shown here:\n\n    IF EXISTS (SELECT name FROM sys.indexes\n            WHERE name = N'IX_ProductVendor_VendorID')\n    DROP INDEX IX_ProductVendor_VendorID ON Purchasing.ProductVendor;\n    GO\n    CREATE INDEX IX_ProductVendor_VendorID\n    ON Purchasing.ProductVendor (VendorID);\n\nAlternatively, use an \"IF NOT EXISTS\" clause before creating a new instance:\n\n    IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'TestTable')\n    BEGIN\n     CREATE TABLE TestTable(\n      TestTableId INT PRIMARY KEY IDENTITY,\n      InsertionTime DATETIME2\n     );\n    END\n    GO\n\n    INSERT INTO TestTable(InsertionTime) VALUES (sysutcdatetime());\n    GO\n\nThis script then updates the table created previously.\n\n    IF NOT EXISTS (SELECT columns.name FROM sys.columns INNER JOIN sys.tables on columns.object_id = tables.object_id WHERE tables.name = 'TestTable' AND columns.name = 'AdditionalInformation')\n    BEGIN\n\n    ALTER TABLE TestTable\n\n    ADD AdditionalInformation NVARCHAR(400);\n    END\n    GO\n\n    INSERT INTO TestTable(InsertionTime, AdditionalInformation) VALUES (sysutcdatetime(), 'test');\n    GO\n\n\n## Checking job status\n\nAfter a job has begun, you can check on its progress.\n\n1. From the elastic database pool page, click **Manage jobs**.\n\n    ![Click \"Manage jobs\"][2]\n\n2. Click on the name (a) of a job. The **STATUS** can be \"Completed\" or \"Failed.\" The job's details appear (b) with its date and time of creation and running. The list (c) below the that shows the progress of the script against each database in the pool, giving its date and time details.\n\n    ![Checking a finished job][3]\n\n\n## Checking failed jobs\n\nIf a job fails, a log of its execution can found. Click the name of the failed job to see its details.\n\n![Check a failed job][4]\n\n\n[AZURE.INCLUDE [elastic-scale-include](../../includes/elastic-scale-include.md)]\n\n<!--Image references-->\n[1]: ./media/sql-database-elastic-jobs-create-and-manage/screen-1.png\n[2]: ./media/sql-database-elastic-jobs-create-and-manage/click-manage-jobs.png\n[3]: ./media/sql-database-elastic-jobs-create-and-manage/running-jobs.png\n[4]: ./media/sql-database-elastic-jobs-create-and-manage/failed.png\n[5]: ./media/sql-database-elastic-jobs-create-and-manage/screen-2.png\n\n "
}