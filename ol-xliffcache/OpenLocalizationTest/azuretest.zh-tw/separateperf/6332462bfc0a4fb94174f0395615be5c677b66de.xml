{
  "nodes": [
    {
      "content": "How to use Queue storage from Python | Microsoft Azure",
      "pos": [
        28,
        82
      ]
    },
    {
      "content": "Learn how to use the Azure Queue service from Python to create and delete queues, and insert, get, and delete messages.",
      "pos": [
        102,
        221
      ]
    },
    {
      "content": "How to use Queue storage from Python",
      "pos": [
        541,
        577
      ]
    },
    {
      "content": "Overview",
      "pos": [
        682,
        690
      ]
    },
    {
      "content": "This guide shows you how to perform common scenarios using the Azure Queue storage service.",
      "pos": [
        692,
        783
      ]
    },
    {
      "content": "The samples are written in Python and use the <bpt id=\"p1\">[</bpt>Python Azure Storage package<ept id=\"p1\">][]</ept>.",
      "pos": [
        784,
        863
      ]
    },
    {
      "content": "The scenarios covered include <bpt id=\"p1\">**</bpt>inserting<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>peeking<ept id=\"p2\">**</ept>,",
      "pos": [
        864,
        921
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>getting<ept id=\"p1\">**</ept>, and <bpt id=\"p2\">**</bpt>deleting<ept id=\"p2\">**</ept> queue messages, as well as <bpt id=\"p3\">**</bpt>creating and\ndeleting queues<ept id=\"p3\">**</ept>.",
      "pos": [
        922,
        1012
      ]
    },
    {
      "content": "For more information on queues, refer to the [Next Steps][] section.",
      "pos": [
        1013,
        1081
      ]
    },
    {
      "pos": [
        1286,
        1434
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you need to install Python or the <bpt id=\"p1\">[</bpt>Python Azure package<ept id=\"p1\">][]</ept>, please see the <bpt id=\"p2\">[</bpt>Python Installation Guide<ept id=\"p2\">](../python-how-to-install.md)</ept>."
    },
    {
      "content": "How To: Create a Queue",
      "pos": [
        1439,
        1461
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>QueueService<ept id=\"p1\">**</ept> object lets you work with queues.",
      "pos": [
        1463,
        1517
      ]
    },
    {
      "content": "The following code creates a <bpt id=\"p1\">**</bpt>QueueService<ept id=\"p1\">**</ept> object.",
      "pos": [
        1518,
        1571
      ]
    },
    {
      "content": "Add the following near the top of any Python file in which you wish to programmatically access Azure Storage:",
      "pos": [
        1572,
        1681
      ]
    },
    {
      "content": "The following code creates a <bpt id=\"p1\">**</bpt>QueueService<ept id=\"p1\">**</ept> object using the storage account name and account key.",
      "pos": [
        1733,
        1833
      ]
    },
    {
      "content": "Replace 'myaccount' and 'mykey' with the real account and key.",
      "pos": [
        1834,
        1896
      ]
    },
    {
      "content": "How To: Insert a Message into a Queue",
      "pos": [
        2028,
        2065
      ]
    },
    {
      "content": "To insert a message into a queue, use the <bpt id=\"p1\">**</bpt>put\\_message<ept id=\"p1\">**</ept> method to",
      "pos": [
        2067,
        2135
      ]
    },
    {
      "content": "create a new message and add it to the queue.",
      "pos": [
        2136,
        2181
      ]
    },
    {
      "content": "How To: Peek at the Next Message",
      "pos": [
        2246,
        2278
      ]
    },
    {
      "content": "You can peek at the message in the front of a queue without removing it",
      "pos": [
        2280,
        2351
      ]
    },
    {
      "content": "from the queue by calling the <bpt id=\"p1\">**</bpt>peek\\_messages<ept id=\"p1\">**</ept> method.",
      "pos": [
        2352,
        2408
      ]
    },
    {
      "content": "By default,",
      "pos": [
        2409,
        2420
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>peek\\_messages<ept id=\"p1\">**</ept> peeks at a single message.",
      "pos": [
        2421,
        2466
      ]
    },
    {
      "content": "How To: Dequeue the Next Message",
      "pos": [
        2594,
        2626
      ]
    },
    {
      "content": "Your code removes a message from a queue in two steps.",
      "pos": [
        2628,
        2682
      ]
    },
    {
      "content": "When you call",
      "pos": [
        2683,
        2696
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>get\\_messages<ept id=\"p1\">**</ept>, you get the next message in a queue by default.",
      "pos": [
        2697,
        2763
      ]
    },
    {
      "content": "A",
      "pos": [
        2764,
        2765
      ]
    },
    {
      "content": "message returned from <bpt id=\"p1\">**</bpt>get\\_messages<ept id=\"p1\">**</ept> becomes invisible to any other",
      "pos": [
        2766,
        2836
      ]
    },
    {
      "content": "code reading messages from this queue.",
      "pos": [
        2837,
        2875
      ]
    },
    {
      "content": "By default, this message stays",
      "pos": [
        2876,
        2906
      ]
    },
    {
      "content": "invisible for 30 seconds.",
      "pos": [
        2907,
        2932
      ]
    },
    {
      "content": "To finish removing the message from the queue,",
      "pos": [
        2933,
        2979
      ]
    },
    {
      "content": "you must also call <bpt id=\"p1\">**</bpt>delete\\_message<ept id=\"p1\">**</ept>.",
      "pos": [
        2980,
        3019
      ]
    },
    {
      "content": "This two-step process of removing",
      "pos": [
        3020,
        3053
      ]
    },
    {
      "content": "a message assures that when your code fails to process a message due to",
      "pos": [
        3054,
        3125
      ]
    },
    {
      "content": "hardware or software failure, another instance of your code can get the",
      "pos": [
        3126,
        3197
      ]
    },
    {
      "content": "same message and try again.",
      "pos": [
        3198,
        3225
      ]
    },
    {
      "content": "Your code calls <bpt id=\"p1\">**</bpt>delete\\_message<ept id=\"p1\">**</ept> right",
      "pos": [
        3226,
        3267
      ]
    },
    {
      "content": "after the message has been processed.",
      "pos": [
        3268,
        3305
      ]
    },
    {
      "content": "How To: Change the Contents of a Queued Message",
      "pos": [
        3523,
        3570
      ]
    },
    {
      "content": "You can change the contents of a message in-place in the queue.",
      "pos": [
        3572,
        3635
      ]
    },
    {
      "content": "If the",
      "pos": [
        3636,
        3642
      ]
    },
    {
      "content": "message represents a work task, you could use this feature to update the",
      "pos": [
        3643,
        3715
      ]
    },
    {
      "content": "status of the work task.",
      "pos": [
        3716,
        3740
      ]
    },
    {
      "content": "The code below uses the <bpt id=\"p1\">**</bpt>update\\_message<ept id=\"p1\">**</ept>",
      "pos": [
        3741,
        3784
      ]
    },
    {
      "content": "method to update a message.",
      "pos": [
        3785,
        3812
      ]
    },
    {
      "content": "How To: Additional Options for Dequeuing Messages",
      "pos": [
        4017,
        4066
      ]
    },
    {
      "content": "There are two ways you can customize message retrieval from a queue.",
      "pos": [
        4068,
        4136
      ]
    },
    {
      "content": "First, you can get a batch of messages (up to 32).",
      "pos": [
        4137,
        4187
      ]
    },
    {
      "content": "Second, you can set a",
      "pos": [
        4188,
        4209
      ]
    },
    {
      "content": "longer or shorter invisibility timeout, allowing your code more or less",
      "pos": [
        4210,
        4281
      ]
    },
    {
      "content": "time to fully process each message.",
      "pos": [
        4282,
        4317
      ]
    },
    {
      "content": "The following code example uses the",
      "pos": [
        4318,
        4353
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>get\\_messages<ept id=\"p1\">**</ept> method to get 16 messages in one call.",
      "pos": [
        4354,
        4410
      ]
    },
    {
      "content": "Then it processes",
      "pos": [
        4411,
        4428
      ]
    },
    {
      "content": "each message using a for loop.",
      "pos": [
        4429,
        4459
      ]
    },
    {
      "content": "It also sets the invisibility timeout to",
      "pos": [
        4460,
        4500
      ]
    },
    {
      "content": "five minutes for each message.",
      "pos": [
        4501,
        4531
      ]
    },
    {
      "content": "How To: Get the Queue Length",
      "pos": [
        4790,
        4818
      ]
    },
    {
      "content": "You can get an estimate of the number of messages in a queue.",
      "pos": [
        4820,
        4881
      ]
    },
    {
      "content": "The",
      "pos": [
        4882,
        4885
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>get\\_queue\\_metadata<ept id=\"p1\">**</ept> method asks the queue service to return metadata",
      "pos": [
        4886,
        4959
      ]
    },
    {
      "content": "about the queue, and the <bpt id=\"p1\">**</bpt>x-ms-approximate-messages-count<ept id=\"p1\">**</ept> should be used as the index into the returned dictionary to find the count.",
      "pos": [
        4960,
        5096
      ]
    },
    {
      "content": "The result is only approximate because messages can be added or removed after the",
      "pos": [
        5097,
        5178
      ]
    },
    {
      "content": "queue service responds to your request.",
      "pos": [
        5179,
        5218
      ]
    },
    {
      "content": "How To: Delete a Queue",
      "pos": [
        5353,
        5375
      ]
    },
    {
      "content": "To delete a queue and all the messages contained in it, call the",
      "pos": [
        5377,
        5441
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>delete\\_queue<ept id=\"p1\">**</ept> method.",
      "pos": [
        5442,
        5467
      ]
    },
    {
      "content": "Next Steps",
      "pos": [
        5517,
        5527
      ]
    },
    {
      "content": "Now that you have learned the basics of queue storage, follow these links",
      "pos": [
        5529,
        5602
      ]
    },
    {
      "content": "to learn about more complex storage tasks.",
      "pos": [
        5603,
        5645
      ]
    },
    {
      "pos": [
        5651,
        5714
      ],
      "content": "See the MSDN Reference: <bpt id=\"p1\">[</bpt>Storing and Accessing Data in Azure<ept id=\"p1\">][]</ept>"
    },
    {
      "pos": [
        5719,
        5756
      ],
      "content": "Visit the <bpt id=\"p1\">[</bpt>Azure Storage Team Blog<ept id=\"p1\">][]</ept>"
    }
  ],
  "content": "<properties \n    pageTitle=\"How to use Queue storage from Python | Microsoft Azure\" \n    description=\"Learn how to use the Azure Queue service from Python to create and delete queues, and insert, get, and delete messages.\" \n    services=\"storage\" \n    documentationCenter=\"python\" \n    authors=\"emgerner-msft\" \n    manager=\"wpickett\" \n    editor=\"\"/>\n\n<tags \n    ms.service=\"storage\" \n    ms.workload=\"storage\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"python\" \n    ms.topic=\"article\" \n    ms.date=\"08/25/2015\" \n    ms.author=\"emgerner\"/>\n\n# How to use Queue storage from Python\n\n[AZURE.INCLUDE [storage-selector-queue-include](../../includes/storage-selector-queue-include.md)]\n\n## Overview\n\nThis guide shows you how to perform common scenarios using the Azure Queue storage service. The samples are written in Python and use the [Python Azure Storage package][]. The scenarios covered include **inserting**, **peeking**,\n**getting**, and **deleting** queue messages, as well as **creating and\ndeleting queues**. For more information on queues, refer to the [Next Steps][] section.\n\n[AZURE.INCLUDE [storage-queue-concepts-include](../../includes/storage-queue-concepts-include.md)]\n\n[AZURE.INCLUDE [storage-create-account-include](../../includes/storage-create-account-include.md)]\n\n\n> [AZURE.NOTE] If you need to install Python or the [Python Azure package][], please see the [Python Installation Guide](../python-how-to-install.md).\n\n## How To: Create a Queue\n\nThe **QueueService** object lets you work with queues. The following code creates a **QueueService** object. Add the following near the top of any Python file in which you wish to programmatically access Azure Storage:\n\n    from azure.storage.queue import QueueService\n\nThe following code creates a **QueueService** object using the storage account name and account key. Replace 'myaccount' and 'mykey' with the real account and key.\n\n    queue_service = QueueService(account_name='myaccount', account_key='mykey')\n\n    queue_service.create_queue('taskqueue')\n\n\n## How To: Insert a Message into a Queue\n\nTo insert a message into a queue, use the **put\\_message** method to\ncreate a new message and add it to the queue.\n\n    queue_service.put_message('taskqueue', 'Hello World')\n\n\n## How To: Peek at the Next Message\n\nYou can peek at the message in the front of a queue without removing it\nfrom the queue by calling the **peek\\_messages** method. By default,\n**peek\\_messages** peeks at a single message.\n\n    messages = queue_service.peek_messages('taskqueue')\n    for message in messages:\n        print(message.message_text)\n\n\n## How To: Dequeue the Next Message\n\nYour code removes a message from a queue in two steps. When you call\n**get\\_messages**, you get the next message in a queue by default. A\nmessage returned from **get\\_messages** becomes invisible to any other\ncode reading messages from this queue. By default, this message stays\ninvisible for 30 seconds. To finish removing the message from the queue,\nyou must also call **delete\\_message**. This two-step process of removing\na message assures that when your code fails to process a message due to\nhardware or software failure, another instance of your code can get the\nsame message and try again. Your code calls **delete\\_message** right\nafter the message has been processed.\n\n    messages = queue_service.get_messages('taskqueue')\n    for message in messages:\n        print(message.message_text)\n        queue_service.delete_message('taskqueue', message.message_id, message.pop_receipt)\n\n\n## How To: Change the Contents of a Queued Message\n\nYou can change the contents of a message in-place in the queue. If the\nmessage represents a work task, you could use this feature to update the\nstatus of the work task. The code below uses the **update\\_message**\nmethod to update a message.\n\n    messages = queue_service.get_messages('taskqueue')\n    for message in messages:\n        queue_service.update_message('taskqueue', message.message_id, 'Hello World Again', message.pop_receipt, 0)\n\n## How To: Additional Options for Dequeuing Messages\n\nThere are two ways you can customize message retrieval from a queue.\nFirst, you can get a batch of messages (up to 32). Second, you can set a\nlonger or shorter invisibility timeout, allowing your code more or less\ntime to fully process each message. The following code example uses the\n**get\\_messages** method to get 16 messages in one call. Then it processes\neach message using a for loop. It also sets the invisibility timeout to\nfive minutes for each message.\n\n    messages = queue_service.get_messages('taskqueue', numofmessages=16, visibilitytimeout=5*60)\n    for message in messages:\n        print(message.message_text)\n        queue_service.delete_message('taskqueue', message.message_id, message.pop_receipt)\n\n## How To: Get the Queue Length\n\nYou can get an estimate of the number of messages in a queue. The\n**get\\_queue\\_metadata** method asks the queue service to return metadata\nabout the queue, and the **x-ms-approximate-messages-count** should be used as the index into the returned dictionary to find the count.\nThe result is only approximate because messages can be added or removed after the\nqueue service responds to your request.\n\n    queue_metadata = queue_service.get_queue_metadata('taskqueue')\n    count = queue_metadata['x-ms-approximate-messages-count']\n\n## How To: Delete a Queue\n\nTo delete a queue and all the messages contained in it, call the\n**delete\\_queue** method.\n\n    queue_service.delete_queue('taskqueue')\n\n## Next Steps\n\nNow that you have learned the basics of queue storage, follow these links\nto learn about more complex storage tasks.\n\n-   See the MSDN Reference: [Storing and Accessing Data in Azure][]\n-   Visit the [Azure Storage Team Blog][]\n\n[Storing and Accessing Data in Azure]: http://msdn.microsoft.com/library/azure/gg433040.aspx\n[Azure Storage Team Blog]: http://blogs.msdn.com/b/windowsazurestorage/\n[Python Azure package]: https://pypi.python.org/pypi/azure\n[Python Azure Storage package]: https://pypi.python.org/pypi/azure-storage \n \n"
}