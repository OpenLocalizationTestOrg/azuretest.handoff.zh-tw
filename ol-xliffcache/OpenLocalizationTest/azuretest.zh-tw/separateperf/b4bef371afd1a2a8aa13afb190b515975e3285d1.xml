{
  "nodes": [
    {
      "content": "My first graphical runbook in Azure Automation",
      "pos": [
        27,
        73
      ]
    },
    {
      "content": "Tutorial that walks you through the creation, testing, and publishing of a simple graphical runbook.",
      "pos": [
        92,
        192
      ]
    },
    {
      "content": "Several concepts are covered such as authenticating to Azure resources, input parameters, and conditional links.",
      "pos": [
        194,
        306
      ]
    },
    {
      "content": "My first graphical runbook",
      "pos": [
        609,
        635
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        639,
        655
      ]
    },
    {
      "content": "Graphical",
      "pos": [
        659,
        668
      ]
    },
    {
      "content": "Textual",
      "pos": [
        712,
        719
      ]
    },
    {
      "content": "This tutorial walks you through the creation of a <bpt id=\"p1\">[</bpt>graphical runbook<ept id=\"p1\">](automation-graphical-authoring-intro.md)</ept> in Azure Automation.",
      "pos": [
        759,
        890
      ]
    },
    {
      "content": "We'll start with a simple runbook that we'll test and publish while we explain how to track the status of the runbook job.",
      "pos": [
        892,
        1014
      ]
    },
    {
      "content": "Then we'll modify the runbook to actually manage Azure resources, in this case starting an Azure virtual machine.",
      "pos": [
        1016,
        1129
      ]
    },
    {
      "content": "We'll then make the runbook more robust by adding runbook parameters and a conditional link.",
      "pos": [
        1131,
        1223
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        1230,
        1243
      ]
    },
    {
      "content": "To complete this tutorial, you will need the following.",
      "pos": [
        1245,
        1300
      ]
    },
    {
      "content": "Azure subscription.",
      "pos": [
        1304,
        1323
      ]
    },
    {
      "content": "If you don't have one yet, you can <bpt id=\"p1\">[</bpt>activate your MSDN subscriber benefits<ept id=\"p1\">](http://azure.microsoft.com/pricing/member-offers/msdn-benefits-details/)</ept> or <ph id=\"ph1\">&lt;a href=\"/pricing/free-trial/\" target=\"_blank\"&gt;</ph><bpt id=\"p2\">[</bpt>sign up for a free trial<ept id=\"p2\">](http://azure.microsoft.com/pricing/free-trial/)</ept>.",
      "pos": [
        1324,
        1598
      ]
    },
    {
      "pos": [
        1601,
        1669
      ],
      "content": "<bpt id=\"p1\">[</bpt>Automation account<ept id=\"p1\">](automation-configuring.md)</ept> to hold the runbook."
    },
    {
      "content": "An Azure virtual machine.",
      "pos": [
        1672,
        1697
      ]
    },
    {
      "content": "We will stop and start this machine so it should not be production.",
      "pos": [
        1699,
        1766
      ]
    },
    {
      "content": "<bpt id=\"p1\">[</bpt>Azure Active Directory user and Automation Credential asset<ept id=\"p1\">](automation-configuring.md)</ept> to authenticate to Azure resources.",
      "pos": [
        1769,
        1893
      ]
    },
    {
      "content": "This user must have permission to start and stop the virtual machine.",
      "pos": [
        1895,
        1964
      ]
    },
    {
      "content": "Step 1 - Create new runbook",
      "pos": [
        1969,
        1996
      ]
    },
    {
      "pos": [
        1998,
        2075
      ],
      "content": "We'll start by creating a simple runbook that outputs the text <bpt id=\"p1\">*</bpt>Hello World<ept id=\"p1\">*</ept>."
    },
    {
      "content": "In the Azure Preview Portal, open your Automation account.",
      "pos": [
        2080,
        2138
      ]
    },
    {
      "content": "The Automation account page gives you a quick view of the resources in this account.",
      "pos": [
        2141,
        2225
      ]
    },
    {
      "content": "You should already have some Assets.",
      "pos": [
        2227,
        2263
      ]
    },
    {
      "content": "Most of those are the modules that are automatically included in a new Automation account.",
      "pos": [
        2265,
        2355
      ]
    },
    {
      "content": "You should also have the Credential asset that's mentioned in the <bpt id=\"p1\">[</bpt>prerequisites<ept id=\"p1\">](#prerequisites)</ept>.",
      "pos": [
        2357,
        2455
      ]
    },
    {
      "content": "Click on the <bpt id=\"p1\">**</bpt>Runbooks<ept id=\"p1\">**</ept> tile to open the list of runbooks.",
      "pos": [
        2459,
        2519
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Runbooks control<ph id=\"ph2\">](media/automation-first-runbook-graphical/runbooks-control.png)</ph>",
      "pos": [
        2524,
        2606
      ]
    },
    {
      "pos": [
        2610,
        2709
      ],
      "content": "Create a new runbook by clicking on the <bpt id=\"p1\">**</bpt>Add a runbook<ept id=\"p1\">**</ept> button and then <bpt id=\"p2\">**</bpt>Create a new runbook<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        2713,
        2766
      ],
      "content": "Give the runbook the name <bpt id=\"p1\">*</bpt>MyFirstRunbook-Graphical<ept id=\"p1\">*</ept>."
    },
    {
      "content": "In this case, we're going to create a <bpt id=\"p1\">[</bpt>graphical runbook<ept id=\"p1\">](automation-graphical-authoring-intro.md)</ept> so select <bpt id=\"p2\">**</bpt>Graphical<ept id=\"p2\">**</ept> for <bpt id=\"p3\">**</bpt>Runbook type<ept id=\"p3\">**</ept>.",
      "pos": [
        2770,
        2914
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>New runbook<ph id=\"ph2\">](media/automation-first-runbook-graphical/new-runbook.png)</ph>",
      "pos": [
        2919,
        2991
      ]
    },
    {
      "pos": [
        2995,
        3064
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept> to create the runbook and open the graphical editor."
    },
    {
      "content": "Step 2 - Add activities to the runbook",
      "pos": [
        3069,
        3107
      ]
    },
    {
      "content": "The Library control on the left side of the editor allows you to select activities add to your runbook.",
      "pos": [
        3109,
        3212
      ]
    },
    {
      "content": "We're going to add a <bpt id=\"p1\">**</bpt>Write-Output<ept id=\"p1\">**</ept> cmdlet to output our text from the runbook.",
      "pos": [
        3214,
        3295
      ]
    },
    {
      "content": "In the Library control, expand the <bpt id=\"p1\">**</bpt>Cmdlets<ept id=\"p1\">**</ept> node and then <bpt id=\"p2\">**</bpt>Microsoft.PowerShell.Utility<ept id=\"p2\">**</ept>.",
      "pos": [
        3302,
        3396
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Microsoft.PowerShell.Utility<ph id=\"ph2\">](media/automation-first-runbook-graphical/cmdlets-powershell-utility.png)</ph>",
      "pos": [
        3401,
        3505
      ]
    },
    {
      "content": "Scroll down to the bottom of the list.",
      "pos": [
        3511,
        3549
      ]
    },
    {
      "content": "Right click <bpt id=\"p1\">**</bpt>Write-Output<ept id=\"p1\">**</ept> and click <bpt id=\"p2\">**</bpt>Add to canvas<ept id=\"p2\">**</ept>.",
      "pos": [
        3551,
        3608
      ]
    },
    {
      "content": "Click on the  <bpt id=\"p1\">**</bpt>Write-Output<ept id=\"p1\">**</ept> activity on the canvas.",
      "pos": [
        3614,
        3668
      ]
    },
    {
      "content": "This opens the Configuration control which allows you to configure the activity.",
      "pos": [
        3670,
        3750
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Label<ept id=\"p1\">**</ept> defaults to the name of the cmdlet, but we can change it to something more friendly.",
      "pos": [
        3756,
        3854
      ]
    },
    {
      "content": "Change it to <bpt id=\"p1\">*</bpt>Write Hello World to output<ept id=\"p1\">*</ept>.",
      "pos": [
        3855,
        3898
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Parameters<ept id=\"p1\">**</ept> to provide values for the cmdlet's parameters.",
      "pos": [
        3904,
        3971
      ]
    },
    {
      "content": "Some cmdlets have multiple parameter sets, and you need to select which you will use.",
      "pos": [
        3974,
        4059
      ]
    },
    {
      "content": "In this case, <bpt id=\"p1\">**</bpt>Write-Output<ept id=\"p1\">**</ept> has only one parameter set, so you don't need to select one.",
      "pos": [
        4061,
        4152
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Write-Output properties<ph id=\"ph2\">](media/automation-first-runbook-graphical/write-output-properties.png)</ph>",
      "pos": [
        4158,
        4254
      ]
    },
    {
      "content": "Select the <bpt id=\"p1\">**</bpt>InputObject<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        4260,
        4297
      ]
    },
    {
      "content": "This is the parameter where we will specify the text to send to the output stream.",
      "pos": [
        4299,
        4381
      ]
    },
    {
      "content": "In the <bpt id=\"p1\">**</bpt>Data source<ept id=\"p1\">**</ept> dropdown, select <bpt id=\"p2\">**</bpt>PowerShell expression<ept id=\"p2\">**</ept>.",
      "pos": [
        4387,
        4453
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Data source<ept id=\"p1\">**</ept> dropdown provides different sources that you use to populate a parameter value.",
      "pos": [
        4454,
        4553
      ]
    },
    {
      "content": "You can use output from such sources such as another activity, an Automation asset, or a PowerShell expression.",
      "pos": [
        4555,
        4666
      ]
    },
    {
      "content": "In this case, we just want to output the text <bpt id=\"p1\">*</bpt>Hello World<ept id=\"p1\">*</ept>.",
      "pos": [
        4668,
        4728
      ]
    },
    {
      "content": "We can use a PowerShell expression and specify a string.",
      "pos": [
        4730,
        4786
      ]
    },
    {
      "content": "In the <bpt id=\"p1\">**</bpt>Expression<ept id=\"p1\">**</ept> box, type <bpt id=\"p2\">*</bpt>\"Hello World\"<ept id=\"p2\">*</ept> and then click <bpt id=\"p3\">**</bpt>OK<ept id=\"p3\">**</ept> twice to return to the canvas.",
      "pos": [
        4793,
        4893
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>PowerShell Expression<ph id=\"ph2\">](media/automation-first-runbook-graphical/expression-hello-world.png)</ph>",
      "pos": [
        4898,
        4991
      ]
    },
    {
      "content": "Save the runbook by clicking <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept>.",
      "pos": [
        4998,
        5036
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Save runbook<ph id=\"ph2\">](media/automation-first-runbook-graphical/runbook-edit-toolbar-save.png)</ph>",
      "pos": [
        5041,
        5128
      ]
    },
    {
      "content": "Step 3 - Test the runbook",
      "pos": [
        5133,
        5158
      ]
    },
    {
      "content": "Before we publish the runbook to make it available in production, we want to test it to make sure that it works properly.",
      "pos": [
        5160,
        5281
      ]
    },
    {
      "content": "When you test a runbook, you run its <bpt id=\"p1\">**</bpt>Draft<ept id=\"p1\">**</ept> version and view its output interactively.",
      "pos": [
        5283,
        5372
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Test pane<ept id=\"p1\">**</ept> to open the Test pane.",
      "pos": [
        5380,
        5422
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Test pane<ph id=\"ph2\">](media/automation-first-runbook-graphical/runbook-edit-toolbar-test-pane.png)</ph>",
      "pos": [
        5427,
        5516
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> to start the test.",
      "pos": [
        5520,
        5554
      ]
    },
    {
      "content": "This should be the only enabled option.",
      "pos": [
        5556,
        5595
      ]
    },
    {
      "content": "A <bpt id=\"p1\">[</bpt>runbook job<ept id=\"p1\">](automation-runbook-execution)</ept> is created and its status displayed in the pane.",
      "pos": [
        5599,
        5693
      ]
    },
    {
      "content": "The job status will start as <bpt id=\"p1\">*</bpt>Queued<ept id=\"p1\">*</ept> indicating that it is waiting for a runbook worker in the cloud to come available.",
      "pos": [
        5696,
        5816
      ]
    },
    {
      "content": "It will then move to <bpt id=\"p1\">*</bpt>Starting<ept id=\"p1\">*</ept>  when a worker claims the job, and then <bpt id=\"p2\">*</bpt>Running<ept id=\"p2\">*</ept> when the runbook actually starts running.",
      "pos": [
        5818,
        5941
      ]
    },
    {
      "content": "When the runbook job completes, its output is displayed.",
      "pos": [
        5947,
        6003
      ]
    },
    {
      "content": "In our case, we should see <bpt id=\"p1\">*</bpt>Hello World<ept id=\"p1\">*</ept>.",
      "pos": [
        6005,
        6046
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Hello World<ph id=\"ph2\">](media/automation-first-runbook-graphical/test-output-hello-world.png)</ph>",
      "pos": [
        6051,
        6135
      ]
    },
    {
      "content": "Close the Test pane to return to the canvas.",
      "pos": [
        6139,
        6183
      ]
    },
    {
      "content": "Step 4 - Publish and start the runbook",
      "pos": [
        6189,
        6227
      ]
    },
    {
      "content": "The runbook that we just created is still in Draft mode.",
      "pos": [
        6229,
        6285
      ]
    },
    {
      "content": "We need to publish it before we can run it in production.",
      "pos": [
        6286,
        6343
      ]
    },
    {
      "content": "When you publish a runbook, you overwrite the existing Published version with the Draft version.",
      "pos": [
        6345,
        6441
      ]
    },
    {
      "content": "In our case, we don't have a Published version yet because we just created the runbook.",
      "pos": [
        6443,
        6530
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> to publish the runbook and then <bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept> when prompted.",
      "pos": [
        6536,
        6608
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Publish<ph id=\"ph2\">](media/automation-first-runbook-graphical/runbook-edit-toolbar-publish.png)</ph>",
      "pos": [
        6613,
        6698
      ]
    },
    {
      "pos": [
        6702,
        6825
      ],
      "content": "If you scroll left to view the runbook in the <bpt id=\"p1\">**</bpt>Runbooks<ept id=\"p1\">**</ept> pane now, it will show an <bpt id=\"p2\">**</bpt>Authoring Status<ept id=\"p2\">**</ept> of <bpt id=\"p3\">**</bpt>Published<ept id=\"p3\">**</ept>."
    },
    {
      "content": "Scroll back to the right to view the pane for <bpt id=\"p1\">**</bpt>MyFirstRunbook<ept id=\"p1\">**</ept>.",
      "pos": [
        6829,
        6894
      ]
    },
    {
      "content": "The options across the top allow us to start the runbook, schedule it to start at some time in the future, or create a <bpt id=\"p1\">[</bpt>webhook<ept id=\"p1\">](automation-webhooks.md)</ept> so it can be started through an HTTP call.",
      "pos": [
        6897,
        7092
      ]
    },
    {
      "content": "We just want to start the runbook so click <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> and then <bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept> when prompted.",
      "pos": [
        7097,
        7181
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Start runbook<ph id=\"ph2\">](media/automation-first-runbook-graphical/runbook-toolbar-start.png)</ph>",
      "pos": [
        7186,
        7270
      ]
    },
    {
      "content": "A job pane is opened for the runbook job that we just created.",
      "pos": [
        7274,
        7336
      ]
    },
    {
      "content": "We can close this pane, but in this case we'll leave it open so we can watch the job's progress.",
      "pos": [
        7338,
        7434
      ]
    },
    {
      "content": "The job status is shown in <bpt id=\"p1\">**</bpt>Job Summary<ept id=\"p1\">**</ept> and matches the statuses that we saw when we tested the runbook.",
      "pos": [
        7439,
        7546
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Job Summary<ph id=\"ph2\">](media/automation-first-runbook-graphical/job-pane-summary.png)</ph>",
      "pos": [
        7551,
        7628
      ]
    },
    {
      "content": "Once the runbook status shows <bpt id=\"p1\">*</bpt>Completed<ept id=\"p1\">*</ept>, click <bpt id=\"p2\">**</bpt>Output<ept id=\"p2\">**</ept>.",
      "pos": [
        7633,
        7693
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>Output<ept id=\"p1\">**</ept> pane is opened, and we can see our <bpt id=\"p2\">*</bpt>Hello World<ept id=\"p2\">*</ept>.",
      "pos": [
        7695,
        7759
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Job Summary<ph id=\"ph2\">](media/automation-first-runbook-graphical/job-pane-output.png)</ph>",
      "pos": [
        7764,
        7840
      ]
    },
    {
      "content": "Close the Output pane.",
      "pos": [
        7847,
        7869
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Streams<ept id=\"p1\">**</ept> to open the Streams pane for the runbook job.",
      "pos": [
        7874,
        7937
      ]
    },
    {
      "content": "We should only see <bpt id=\"p1\">*</bpt>Hello World<ept id=\"p1\">*</ept> in the output stream, but this can show other streams for a runbook job such as Verbose and Error if the runbook writes to them.",
      "pos": [
        7939,
        8100
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Job Summary<ph id=\"ph2\">](media/automation-first-runbook-graphical/job-pane-streams.png)</ph>",
      "pos": [
        8105,
        8182
      ]
    },
    {
      "content": "Close the Streams pane and the Job pane to return to the MyFirstRunbook pane.",
      "pos": [
        8187,
        8264
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Jobs<ept id=\"p1\">**</ept> to open the Jobs pane for this runbook.",
      "pos": [
        8269,
        8323
      ]
    },
    {
      "content": "This lists all of the jobs created by this runbook.",
      "pos": [
        8325,
        8376
      ]
    },
    {
      "content": "We should only see one job listed since we only ran the job once.",
      "pos": [
        8378,
        8443
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Jobs<ph id=\"ph2\">](media/automation-first-runbook-graphical/runbook-control-jobs.png)</ph>",
      "pos": [
        8448,
        8522
      ]
    },
    {
      "content": "You can click on this job to open the same Job pane that we viewed when we started the runbook.",
      "pos": [
        8527,
        8622
      ]
    },
    {
      "content": "This allows you to go back in time and view the details of any job that was created for a particular runbook.",
      "pos": [
        8624,
        8733
      ]
    },
    {
      "content": "Step 5 - Add authentication to manage Azure resources",
      "pos": [
        8738,
        8791
      ]
    },
    {
      "content": "We've tested and published our runbook, but so far it doesn't do anything useful.",
      "pos": [
        8793,
        8874
      ]
    },
    {
      "content": "We want to have it manage Azure resources.",
      "pos": [
        8876,
        8918
      ]
    },
    {
      "content": "It won't be able to do that though unless we have it authenticate using the credentials that are referred to in the <bpt id=\"p1\">[</bpt>prerequisites<ept id=\"p1\">](#prerequisites)</ept>.",
      "pos": [
        8920,
        9068
      ]
    },
    {
      "content": "We do that with the <bpt id=\"p1\">**</bpt>Set-AzureAccount<ept id=\"p1\">**</ept> cmdlet.",
      "pos": [
        9070,
        9118
      ]
    },
    {
      "content": "Open the graphical editor by clicking <bpt id=\"p1\">**</bpt>Edit<ept id=\"p1\">**</ept> on the MyFirstRunbook pane.",
      "pos": [
        9124,
        9198
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Edit runbook<ph id=\"ph2\">](media/automation-first-runbook-graphical/runbook-toolbar-edit.png)</ph>",
      "pos": [
        9203,
        9285
      ]
    },
    {
      "pos": [
        9291,
        9390
      ],
      "content": "We don't need the <bpt id=\"p1\">**</bpt>Write Hello World to output<ept id=\"p1\">**</ept> anymore, so right click it and select <bpt id=\"p2\">**</bpt>Delete<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        9395,
        9457
      ],
      "content": "In the Library control, expand <bpt id=\"p1\">**</bpt>Cmdlets<ept id=\"p1\">**</ept> and then <bpt id=\"p2\">**</bpt>Azure<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Add <bpt id=\"p1\">**</bpt>Add-AzureAccount<ept id=\"p1\">**</ept> to the canvas.",
      "pos": [
        9463,
        9502
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Add-AzureAccount<ph id=\"ph2\">](media/automation-first-runbook-graphical/add-azureaccount.png)</ph>",
      "pos": [
        9507,
        9589
      ]
    },
    {
      "pos": [
        9596,
        9680
      ],
      "content": "Select <bpt id=\"p1\">**</bpt>Add-AzureAccount<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>Parameters<ept id=\"p2\">**</ept> in the Configuration pane."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Add-AzureAccount<ept id=\"p1\">**</ept> has multiple parameter sets, so we need to select one before we can provide parameter values.",
      "pos": [
        9686,
        9800
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Parameter Set<ept id=\"p1\">**</ept> and then select  the <bpt id=\"p2\">**</bpt>User<ept id=\"p2\">**</ept> parameter set.",
      "pos": [
        9802,
        9870
      ]
    },
    {
      "content": "Once you select the parameter set, the parameters are displayed in the Activity Parameter Configuration pane.",
      "pos": [
        9876,
        9985
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Credential<ept id=\"p1\">**</ept>.",
      "pos": [
        9987,
        10008
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Add Azure account parameters<ph id=\"ph2\">](media/automation-first-runbook-graphical/add-azureaccount-parameters.png)</ph>",
      "pos": [
        10013,
        10118
      ]
    },
    {
      "pos": [
        10124,
        10251
      ],
      "content": "We want this cmdlet to use a credential asset in our Automation account so select <bpt id=\"p1\">**</bpt>Credential asset<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>Data source<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Select the credential asset that has access to start and stop a virtual machine in your Azure environment.",
      "pos": [
        10257,
        10363
      ]
    },
    {
      "content": "Add Azure account data source",
      "pos": [
        10370,
        10399
      ]
    },
    {
      "pos": [
        10475,
        10518
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> twice to return to the canvas."
    },
    {
      "content": "Step 6 - Add activity to start a virtual machine",
      "pos": [
        10524,
        10572
      ]
    },
    {
      "content": "We'll now add a <bpt id=\"p1\">**</bpt>Start-AzureVM<ept id=\"p1\">**</ept> activity to start a virtual machine.",
      "pos": [
        10574,
        10644
      ]
    },
    {
      "content": "You can pick any virtual machine in your Azure subscription, and for now we'll be hardcoding that name into the cmdlet.",
      "pos": [
        10646,
        10765
      ]
    },
    {
      "pos": [
        10772,
        10810
      ],
      "content": "Expand <bpt id=\"p1\">**</bpt>Cmdlets<ept id=\"p1\">**</ept> and then <bpt id=\"p2\">**</bpt>Azure<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        10814,
        10909
      ],
      "content": "Add <bpt id=\"p1\">**</bpt>Start-AzureVM<ept id=\"p1\">**</ept> to the canvas and then click and drag it underneath <bpt id=\"p2\">**</bpt>Add-AzureAccount<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Hover over <bpt id=\"p1\">**</bpt>Add-AzureAccount<ept id=\"p1\">**</ept> until a circle appears on the bottom of the shape.",
      "pos": [
        10915,
        10997
      ]
    },
    {
      "content": "Click the circle and drag the arrow to <bpt id=\"p1\">**</bpt>Start-AzureVM<ept id=\"p1\">**</ept>.",
      "pos": [
        10999,
        11056
      ]
    },
    {
      "content": "The arrow that you just created is a <bpt id=\"p1\">*</bpt>link<ept id=\"p1\">*</ept>.",
      "pos": [
        11059,
        11103
      ]
    },
    {
      "content": "The runbook will start with <bpt id=\"p1\">**</bpt>Add-AzureAccount<ept id=\"p1\">**</ept> and then run <bpt id=\"p2\">**</bpt>Start-AzureVM<ept id=\"p2\">**</ept>.",
      "pos": [
        11105,
        11185
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Start-AzureVM<ph id=\"ph2\">](media/automation-first-runbook-graphical/start-azurevm.png)</ph>",
      "pos": [
        11190,
        11266
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>Start-AzureVM<ept id=\"p1\">**</ept>.",
      "pos": [
        11270,
        11295
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Parameters<ept id=\"p1\">**</ept> and then <bpt id=\"p2\">**</bpt>Parameter Set<ept id=\"p2\">**</ept> to view the sets for <bpt id=\"p3\">**</bpt>Start-AzureVM<ept id=\"p3\">**</ept>.",
      "pos": [
        11297,
        11384
      ]
    },
    {
      "content": "Select  the <bpt id=\"p1\">**</bpt>ByName<ept id=\"p1\">**</ept> parameter set.",
      "pos": [
        11386,
        11423
      ]
    },
    {
      "content": "Note that <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>ServiceName<ept id=\"p2\">**</ept> have exclamation points next them.",
      "pos": [
        11425,
        11498
      ]
    },
    {
      "content": "This indicates that they are required parameters.",
      "pos": [
        11500,
        11549
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>.",
      "pos": [
        11553,
        11569
      ]
    },
    {
      "content": "Use <bpt id=\"p1\">**</bpt>Constant value<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>Data source<ept id=\"p2\">**</ept> and type in the name of the virtual machine to start.",
      "pos": [
        11571,
        11671
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.",
      "pos": [
        11673,
        11686
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>ServiceName<ept id=\"p1\">**</ept>.",
      "pos": [
        11690,
        11713
      ]
    },
    {
      "content": "Use <bpt id=\"p1\">**</bpt>Constant value<ept id=\"p1\">**</ept> for the <bpt id=\"p2\">**</bpt>Data source<ept id=\"p2\">**</ept> and type in the name of the virtual machine to start.",
      "pos": [
        11715,
        11815
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.",
      "pos": [
        11817,
        11830
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Start-AzureVM Parameters<ph id=\"ph2\">](media/automation-first-runbook-graphical/start-azurevm-params.png)</ph>",
      "pos": [
        11835,
        11929
      ]
    },
    {
      "content": "Click Test pane so that we can test the runbook.",
      "pos": [
        11933,
        11981
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> to start the test.",
      "pos": [
        11986,
        12020
      ]
    },
    {
      "content": "Once it completes, check that the virtual machine was started.",
      "pos": [
        12022,
        12084
      ]
    },
    {
      "content": "Step 7 - Add an input parameter to the runbook",
      "pos": [
        12090,
        12136
      ]
    },
    {
      "content": "Our runbook currently starts the virtual machine that we specified in the <bpt id=\"p1\">**</bpt>Start-AzureVM<ept id=\"p1\">**</ept> cmdlet, but our runbook would be more useful if we could specify the virtual machine when the runbook is started.",
      "pos": [
        12138,
        12343
      ]
    },
    {
      "content": "We will now add an input parameter to the runbook to provide that functionality.",
      "pos": [
        12345,
        12425
      ]
    },
    {
      "pos": [
        12430,
        12508
      ],
      "content": "Open the graphical editor by clicking <bpt id=\"p1\">**</bpt>Edit<ept id=\"p1\">**</ept> on the <bpt id=\"p2\">**</bpt>MyFirstRunbook<ept id=\"p2\">**</ept> pane."
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Input and output<ept id=\"p1\">**</ept> and then <bpt id=\"p2\">**</bpt>Add input<ept id=\"p2\">**</ept> to open the Runbook Input Parameter pane.",
      "pos": [
        12512,
        12603
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Runbook Input and Output<ph id=\"ph2\">](media/automation-first-runbook-graphical/runbook-edit-toolbar-inputoutput.png)</ph>",
      "pos": [
        12608,
        12714
      ]
    },
    {
      "content": "Specify <bpt id=\"p1\">*</bpt>VMName<ept id=\"p1\">*</ept> for the <bpt id=\"p2\">**</bpt>Name<ept id=\"p2\">**</ept>.",
      "pos": [
        12718,
        12752
      ]
    },
    {
      "content": "Keep <bpt id=\"p1\">*</bpt>string<ept id=\"p1\">*</ept> for the <bpt id=\"p2\">**</bpt>Type<ept id=\"p2\">**</ept>, but change <bpt id=\"p3\">**</bpt>Mandatory<ept id=\"p3\">**</ept> to <bpt id=\"p4\">*</bpt>Yes<ept id=\"p4\">*</ept>.",
      "pos": [
        12754,
        12820
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.",
      "pos": [
        12822,
        12835
      ]
    },
    {
      "content": "Create a second mandatory input parameter called <bpt id=\"p1\">*</bpt>VMServiceName<ept id=\"p1\">*</ept> and then click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept> to close the <bpt id=\"p3\">**</bpt>Input and Output<ept id=\"p3\">**</ept> pane.",
      "pos": [
        12839,
        12965
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Runbook Input Parameters<ph id=\"ph2\">](media/automation-first-runbook-graphical/input-parameters.png)</ph>",
      "pos": [
        12970,
        13060
      ]
    },
    {
      "pos": [
        13065,
        13133
      ],
      "content": "Select the <bpt id=\"p1\">**</bpt>Start-AzureVM<ept id=\"p1\">**</ept> activity and then click <bpt id=\"p2\">**</bpt>Parameters<ept id=\"p2\">**</ept>."
    },
    {
      "content": "Change the <bpt id=\"p1\">**</bpt>Data source<ept id=\"p1\">**</ept> for <bpt id=\"p2\">**</bpt>Name<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>Runbook input<ept id=\"p3\">**</ept> and then select <bpt id=\"p4\">**</bpt>VMName<ept id=\"p4\">**</ept>.",
      "pos": [
        13137,
        13225
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Start-AzureVM Name Parameter<ph id=\"ph2\">](media/automation-first-runbook-graphical/vmname-property.png)</ph>",
      "pos": [
        13230,
        13323
      ]
    },
    {
      "content": "Change the <bpt id=\"p1\">**</bpt>Data source<ept id=\"p1\">**</ept> for <bpt id=\"p2\">**</bpt>ServiceName<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>Runbook input<ept id=\"p3\">**</ept> and then select <bpt id=\"p4\">**</bpt>VMServiceName<ept id=\"p4\">**</ept>.",
      "pos": [
        13328,
        13430
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Start-AzureVM Parameters<ph id=\"ph2\">](media/automation-first-runbook-graphical/start-azurevm-params-inputs.png)</ph>",
      "pos": [
        13435,
        13536
      ]
    },
    {
      "content": "Save the runbook and open the Test pane.",
      "pos": [
        13541,
        13581
      ]
    },
    {
      "content": "Note that you can now provide values for the two input variables that will be used in the test.",
      "pos": [
        13583,
        13678
      ]
    },
    {
      "content": "Close the Test pane.",
      "pos": [
        13685,
        13705
      ]
    },
    {
      "pos": [
        13711,
        13771
      ],
      "content": "Click <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> to publish the new version of the runbook."
    },
    {
      "content": "Stop the virtual machine that you started in the previous step.",
      "pos": [
        13777,
        13840
      ]
    },
    {
      "content": "Click <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> to start the runbook.",
      "pos": [
        13846,
        13883
      ]
    },
    {
      "content": "Type in the <bpt id=\"p1\">**</bpt>VMName<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>VMServiceName<ept id=\"p2\">**</ept> for the virtual machine that you're going to start.",
      "pos": [
        13885,
        13981
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Start Runbook<ph id=\"ph2\">](media/automation-first-runbook-graphical/start-runbook-input-params.png)</ph>",
      "pos": [
        13986,
        14075
      ]
    },
    {
      "content": "When the runbook completes, check that the virtual machine was started.",
      "pos": [
        14082,
        14153
      ]
    },
    {
      "content": "Step 8 - Create a conditional link",
      "pos": [
        14158,
        14192
      ]
    },
    {
      "content": "We will now modify the runbook so that it will only attempt to start the runbook if it is not already started.",
      "pos": [
        14194,
        14304
      ]
    },
    {
      "content": "We'll do this by adding a <bpt id=\"p1\">**</bpt>Get-AzureVM<ept id=\"p1\">**</ept> cmdlet to the runbook that will include the current state of the virtual machine.",
      "pos": [
        14306,
        14429
      ]
    },
    {
      "content": "We'll then add a conditional link that will only run <bpt id=\"p1\">**</bpt>Start-AzureVM<ept id=\"p1\">**</ept> if the current running state is stopped.",
      "pos": [
        14431,
        14542
      ]
    },
    {
      "content": "If the runbook isn't stopped, then output a message.",
      "pos": [
        14544,
        14596
      ]
    },
    {
      "pos": [
        14601,
        14649
      ],
      "content": "Open <bpt id=\"p1\">**</bpt>MyFirstRunbook<ept id=\"p1\">**</ept> in the graphical editor."
    },
    {
      "pos": [
        14653,
        14773
      ],
      "content": "Remove the link between <bpt id=\"p1\">**</bpt>Add-AzureAccount<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Start-AzureVM<ept id=\"p2\">**</ept> by clicking on it and then pressing the <bpt id=\"p3\">*</bpt>Delete<ept id=\"p3\">*</ept> key."
    },
    {
      "pos": [
        14777,
        14839
      ],
      "content": "In the Library control, expand <bpt id=\"p1\">**</bpt>Cmdlets<ept id=\"p1\">**</ept> and then <bpt id=\"p2\">**</bpt>Azure<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        14843,
        14877
      ],
      "content": "Add <bpt id=\"p1\">**</bpt>Get-AzureVM<ept id=\"p1\">**</ept> to the canvas."
    },
    {
      "content": "Create a link from <bpt id=\"p1\">**</bpt>Add-AzureAccount<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>Get-AzureVM<ept id=\"p2\">**</ept>.",
      "pos": [
        14881,
        14940
      ]
    },
    {
      "content": "Create another link from <bpt id=\"p1\">**</bpt>Get-AzureVM<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>Start-AzureVM<ept id=\"p2\">**</ept>.",
      "pos": [
        14942,
        15004
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Runbook with Get-AzureVM<ph id=\"ph2\">](media/automation-first-runbook-graphical/get-azurevm.png)</ph>",
      "pos": [
        15009,
        15094
      ]
    },
    {
      "content": "Select <bpt id=\"p1\">**</bpt>Get-AzureVM<ept id=\"p1\">**</ept> and click <bpt id=\"p2\">**</bpt>Parameters<ept id=\"p2\">**</ept>.",
      "pos": [
        15102,
        15150
      ]
    },
    {
      "content": "Select the parameter set <bpt id=\"p1\">*</bpt>GetVMByServiceAndVMName<ept id=\"p1\">*</ept>.",
      "pos": [
        15152,
        15203
      ]
    },
    {
      "pos": [
        15208,
        15294
      ],
      "content": "For <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>, set the <bpt id=\"p2\">**</bpt>Date source<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>Runbook input<ept id=\"p3\">**</ept> and then select <bpt id=\"p4\">**</bpt>VMName<ept id=\"p4\">**</ept>."
    },
    {
      "pos": [
        15302,
        15402
      ],
      "content": "For <bpt id=\"p1\">**</bpt>ServiceName<ept id=\"p1\">**</ept>, set the <bpt id=\"p2\">**</bpt>Date source<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>Runbook input<ept id=\"p3\">**</ept> and then select <bpt id=\"p4\">**</bpt>VMServiceName<ept id=\"p4\">**</ept>."
    },
    {
      "pos": [
        15409,
        15471
      ],
      "content": "Select the link between <bpt id=\"p1\">**</bpt>Get-AzureVM<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Start-AzureVM<ept id=\"p2\">**</ept>."
    },
    {
      "content": "In the Configuration pane, change <bpt id=\"p1\">**</bpt>Apply condition<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>True<ept id=\"p2\">**</ept>.",
      "pos": [
        15476,
        15542
      ]
    },
    {
      "content": "Note that the link turns to a dashed line indicating that the target activity will only be run if the condition resolves to true.",
      "pos": [
        15544,
        15673
      ]
    },
    {
      "content": "For the <bpt id=\"p1\">**</bpt>Condition expression<ept id=\"p1\">**</ept>, type <bpt id=\"p2\">*</bpt>$ActivityOutput['Get-AzureVM'].PowerState -eq \"Stopped\"<ept id=\"p2\">*</ept>.",
      "pos": [
        15679,
        15776
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Start-AzureVM<ept id=\"p1\">**</ept> will now only run if the virtual machine is stopped.",
      "pos": [
        15778,
        15848
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Link condition<ph id=\"ph2\">](media/automation-first-runbook-graphical/link-condition.png)</ph>",
      "pos": [
        15853,
        15931
      ]
    },
    {
      "pos": [
        15938,
        16023
      ],
      "content": "In the Library control, expand <bpt id=\"p1\">**</bpt>Cmdlets<ept id=\"p1\">**</ept> and then <bpt id=\"p2\">**</bpt>Microsoft.PowerShell.Utility<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        16029,
        16064
      ],
      "content": "Add <bpt id=\"p1\">**</bpt>Write-Output<ept id=\"p1\">**</ept> to the canvas."
    },
    {
      "pos": [
        16070,
        16125
      ],
      "content": "Create a link from <bpt id=\"p1\">**</bpt>Get-AzureVM<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>Write-Output<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        16131,
        16190
      ],
      "content": "Select the link and change <bpt id=\"p1\">**</bpt>Apply condition<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>True<ept id=\"p2\">**</ept>."
    },
    {
      "content": "For the <bpt id=\"p1\">**</bpt>Condition expression<ept id=\"p1\">**</ept>, type <bpt id=\"p2\">*</bpt>$ActivityOutput['Get-AzureVM'].PowerState -ne \"Stopped\"<ept id=\"p2\">*</ept>.",
      "pos": [
        16196,
        16293
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Write-Output<ept id=\"p1\">**</ept> will now only run if the virtual machine is not stopped.",
      "pos": [
        16295,
        16368
      ]
    },
    {
      "content": "<ph id=\"ph1\">![</ph>Runbook with Write-Output<ph id=\"ph2\">](media/automation-first-runbook-graphical/write-output-link.png)</ph>",
      "pos": [
        16373,
        16465
      ]
    },
    {
      "pos": [
        16472,
        16521
      ],
      "content": "Select <bpt id=\"p1\">**</bpt>Write-Output<ept id=\"p1\">**</ept> and click <bpt id=\"p2\">**</bpt>Parameters<ept id=\"p2\">**</ept>."
    },
    {
      "pos": [
        16527,
        16661
      ],
      "content": "For <bpt id=\"p1\">**</bpt>InputObject<ept id=\"p1\">**</ept>, change <bpt id=\"p2\">**</bpt>Data source<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>PowerShell expression<ept id=\"p3\">**</ept> and type in the expression <bpt id=\"p4\">*</bpt>\"$VMName.Name already started.\"<ept id=\"p4\">*</ept>."
    },
    {
      "content": "Save the runbook and open the Test pane.",
      "pos": [
        16667,
        16707
      ]
    },
    {
      "content": "Start the runbook with the virtual machine stopped, and it should start.",
      "pos": [
        16713,
        16785
      ]
    },
    {
      "content": "Start the runbook with the virtual machine started, and you should get output that it is already started.",
      "pos": [
        16791,
        16896
      ]
    },
    {
      "content": "Related articles",
      "pos": [
        16903,
        16919
      ]
    },
    {
      "content": "Graphical authoring in Azure Automation",
      "pos": [
        16924,
        16963
      ]
    },
    {
      "content": "My first textual runbook",
      "pos": [
        17009,
        17033
      ]
    },
    {
      "content": "test",
      "pos": [
        17075,
        17079
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"My first graphical runbook in Azure Automation\"\n    description=\"Tutorial that walks you through the creation, testing, and publishing of a simple graphical runbook.  Several concepts are covered such as authenticating to Azure resources, input parameters, and conditional links.\"\n    services=\"automation\"\n    documentationCenter=\"\"\n    authors=\"bwren\"\n    manager=\"stevenka\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"automation\"\n    ms.workload=\"tbd\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"na\"\n    ms.topic=\"get-started-article\" \n    ms.date=\"08/13/2015\"\n    ms.author=\"bwren\"/>\n\n\n# My first graphical runbook\n\n> [AZURE.SELECTOR]\n- [Graphical](automation-first-runbook-graphical.md)\n- [Textual](automation-first-runbook-textual.md)\n\nThis tutorial walks you through the creation of a [graphical runbook](automation-graphical-authoring-intro.md) in Azure Automation.  We'll start with a simple runbook that we'll test and publish while we explain how to track the status of the runbook job.  Then we'll modify the runbook to actually manage Azure resources, in this case starting an Azure virtual machine.  We'll then make the runbook more robust by adding runbook parameters and a conditional link.  \n\n## Prerequisites\n\nTo complete this tutorial, you will need the following.\n\n- Azure subscription. If you don't have one yet, you can [activate your MSDN subscriber benefits](http://azure.microsoft.com/pricing/member-offers/msdn-benefits-details/) or <a href=\"/pricing/free-trial/\" target=\"_blank\">[sign up for a free trial](http://azure.microsoft.com/pricing/free-trial/).\n- [Automation account](automation-configuring.md) to hold the runbook.\n- An Azure virtual machine.  We will stop and start this machine so it should not be production.\n- [Azure Active Directory user and Automation Credential asset](automation-configuring.md) to authenticate to Azure resources.  This user must have permission to start and stop the virtual machine.\n\n## Step 1 - Create new runbook\n\nWe'll start by creating a simple runbook that outputs the text *Hello World*.\n\n1. In the Azure Preview Portal, open your Automation account.  \nThe Automation account page gives you a quick view of the resources in this account.  You should already have some Assets.  Most of those are the modules that are automatically included in a new Automation account.  You should also have the Credential asset that's mentioned in the [prerequisites](#prerequisites).\n2. Click on the **Runbooks** tile to open the list of runbooks.<br>\n![Runbooks control](media/automation-first-runbook-graphical/runbooks-control.png)\n2. Create a new runbook by clicking on the **Add a runbook** button and then **Create a new runbook**.\n3. Give the runbook the name *MyFirstRunbook-Graphical*.\n4. In this case, we're going to create a [graphical runbook](automation-graphical-authoring-intro.md) so select **Graphical** for **Runbook type**.<br>\n![New runbook](media/automation-first-runbook-graphical/new-runbook.png)\n5. Click **Create** to create the runbook and open the graphical editor.\n\n## Step 2 - Add activities to the runbook\n\nThe Library control on the left side of the editor allows you to select activities add to your runbook.  We're going to add a **Write-Output** cmdlet to output our text from the runbook.\n\n1.   In the Library control, expand the **Cmdlets** node and then **Microsoft.PowerShell.Utility**.<br>\n![Microsoft.PowerShell.Utility](media/automation-first-runbook-graphical/cmdlets-powershell-utility.png)\n2.   Scroll down to the bottom of the list.  Right click **Write-Output** and click **Add to canvas**.\n4.   Click on the  **Write-Output** activity on the canvas.  This opens the Configuration control which allows you to configure the activity.\n5.   The **Label** defaults to the name of the cmdlet, but we can change it to something more friendly. Change it to *Write Hello World to output*.\n6.   Click **Parameters** to provide values for the cmdlet's parameters.  \nSome cmdlets have multiple parameter sets, and you need to select which you will use.  In this case, **Write-Output** has only one parameter set, so you don't need to select one. <br>\n![Write-Output properties](media/automation-first-runbook-graphical/write-output-properties.png)\n7.   Select the **InputObject** parameter.  This is the parameter where we will specify the text to send to the output stream.\n9.   In the **Data source** dropdown, select **PowerShell expression**.\nThe **Data source** dropdown provides different sources that you use to populate a parameter value.  You can use output from such sources such as another activity, an Automation asset, or a PowerShell expression.  In this case, we just want to output the text *Hello World*.  We can use a PowerShell expression and specify a string.\n10.   In the **Expression** box, type *\"Hello World\"* and then click **OK** twice to return to the canvas.<br>\n![PowerShell Expression](media/automation-first-runbook-graphical/expression-hello-world.png)\n11.   Save the runbook by clicking **Save**.<br>\n![Save runbook](media/automation-first-runbook-graphical/runbook-edit-toolbar-save.png)\n\n## Step 3 - Test the runbook\n\nBefore we publish the runbook to make it available in production, we want to test it to make sure that it works properly.  When you test a runbook, you run its **Draft** version and view its output interactively.  \n \n2. Click **Test pane** to open the Test pane.<br>\n![Test pane](media/automation-first-runbook-graphical/runbook-edit-toolbar-test-pane.png)\n2. Click **Start** to start the test.  This should be the only enabled option.\n3. A [runbook job](automation-runbook-execution) is created and its status displayed in the pane.  \nThe job status will start as *Queued* indicating that it is waiting for a runbook worker in the cloud to come available.  It will then move to *Starting*  when a worker claims the job, and then *Running* when the runbook actually starts running.  \n4. When the runbook job completes, its output is displayed.  In our case, we should see *Hello World*.<br>\n![Hello World](media/automation-first-runbook-graphical/test-output-hello-world.png)\n5. Close the Test pane to return to the canvas.\n\n\n## Step 4 - Publish and start the runbook\n\nThe runbook that we just created is still in Draft mode. We need to publish it before we can run it in production.  When you publish a runbook, you overwrite the existing Published version with the Draft version.  In our case, we don't have a Published version yet because we just created the runbook. \n\n1. Click **Publish** to publish the runbook and then **Yes** when prompted.<br>\n![Publish](media/automation-first-runbook-graphical/runbook-edit-toolbar-publish.png)\n2. If you scroll left to view the runbook in the **Runbooks** pane now, it will show an **Authoring Status** of **Published**.\n3. Scroll back to the right to view the pane for **MyFirstRunbook**.  \nThe options across the top allow us to start the runbook, schedule it to start at some time in the future, or create a [webhook](automation-webhooks.md) so it can be started through an HTTP call. \n4. We just want to start the runbook so click **Start** and then **Yes** when prompted.<br>\n![Start runbook](media/automation-first-runbook-graphical/runbook-toolbar-start.png)\n5. A job pane is opened for the runbook job that we just created.  We can close this pane, but in this case we'll leave it open so we can watch the job's progress.\n6.  The job status is shown in **Job Summary** and matches the statuses that we saw when we tested the runbook.<br>\n![Job Summary](media/automation-first-runbook-graphical/job-pane-summary.png)\n7.  Once the runbook status shows *Completed*, click **Output**.  The **Output** pane is opened, and we can see our *Hello World*.<br>\n![Job Summary](media/automation-first-runbook-graphical/job-pane-output.png)  \n8.  Close the Output pane.\n9.  Click **Streams** to open the Streams pane for the runbook job.  We should only see *Hello World* in the output stream, but this can show other streams for a runbook job such as Verbose and Error if the runbook writes to them.<br>\n![Job Summary](media/automation-first-runbook-graphical/job-pane-streams.png) \n9. Close the Streams pane and the Job pane to return to the MyFirstRunbook pane.\n9.  Click **Jobs** to open the Jobs pane for this runbook.  This lists all of the jobs created by this runbook.  We should only see one job listed since we only ran the job once.<br>\n![Jobs](media/automation-first-runbook-graphical/runbook-control-jobs.png) \n9. You can click on this job to open the same Job pane that we viewed when we started the runbook.  This allows you to go back in time and view the details of any job that was created for a particular runbook.\n\n## Step 5 - Add authentication to manage Azure resources\n\nWe've tested and published our runbook, but so far it doesn't do anything useful.  We want to have it manage Azure resources.  It won't be able to do that though unless we have it authenticate using the credentials that are referred to in the [prerequisites](#prerequisites).  We do that with the **Set-AzureAccount** cmdlet.\n\n1.  Open the graphical editor by clicking **Edit** on the MyFirstRunbook pane.<br>\n![Edit runbook](media/automation-first-runbook-graphical/runbook-toolbar-edit.png) \n2.  We don't need the **Write Hello World to output** anymore, so right click it and select **Delete**.\n8.  In the Library control, expand **Cmdlets** and then **Azure**. \n9.  Add **Add-AzureAccount** to the canvas.<br>\n![Add-AzureAccount](media/automation-first-runbook-graphical/add-azureaccount.png) \n12.  Select **Add-AzureAccount** and then click **Parameters** in the Configuration pane.\n13.  **Add-AzureAccount** has multiple parameter sets, so we need to select one before we can provide parameter values.  Click **Parameter Set** and then select  the **User** parameter set.\n14.  Once you select the parameter set, the parameters are displayed in the Activity Parameter Configuration pane.  Click **Credential**.<br>\n![Add Azure account parameters](media/automation-first-runbook-graphical/add-azureaccount-parameters.png)\n15.  We want this cmdlet to use a credential asset in our Automation account so select **Credential asset** for the **Data source**.\n16.  Select the credential asset that has access to start and stop a virtual machine in your Azure environment.<br>\n![Add Azure account data source](media/automation-first-runbook-graphical/credential-data-source.png)\n17.  Click **OK** twice to return to the canvas.\n\n\n## Step 6 - Add activity to start a virtual machine\n\nWe'll now add a **Start-AzureVM** activity to start a virtual machine.  You can pick any virtual machine in your Azure subscription, and for now we'll be hardcoding that name into the cmdlet.  \n\n1. Expand **Cmdlets** and then **Azure**.\n2. Add **Start-AzureVM** to the canvas and then click and drag it underneath **Add-AzureAccount**.\n11.  Hover over **Add-AzureAccount** until a circle appears on the bottom of the shape.  Click the circle and drag the arrow to **Start-AzureVM**.  \nThe arrow that you just created is a *link*.  The runbook will start with **Add-AzureAccount** and then run **Start-AzureVM**.<br>\n![Start-AzureVM](media/automation-first-runbook-graphical/start-azurevm.png)\n5. Select **Start-AzureVM**.  Click **Parameters** and then **Parameter Set** to view the sets for **Start-AzureVM**.  Select  the **ByName** parameter set. \nNote that **Name** and **ServiceName** have exclamation points next them.  This indicates that they are required parameters.\n7. Select **Name**.  Use **Constant value** for the **Data source** and type in the name of the virtual machine to start.  Click **OK**.\n8. Select **ServiceName**.  Use **Constant value** for the **Data source** and type in the name of the virtual machine to start.  Click **OK**.<br>\n![Start-AzureVM Parameters](media/automation-first-runbook-graphical/start-azurevm-params.png)\n9. Click Test pane so that we can test the runbook.\n10. Click **Start** to start the test.  Once it completes, check that the virtual machine was started.\n\n\n## Step 7 - Add an input parameter to the runbook\n\nOur runbook currently starts the virtual machine that we specified in the **Start-AzureVM** cmdlet, but our runbook would be more useful if we could specify the virtual machine when the runbook is started.  We will now add an input parameter to the runbook to provide that functionality.\n\n1. Open the graphical editor by clicking **Edit** on the **MyFirstRunbook** pane.\n2. Click **Input and output** and then **Add input** to open the Runbook Input Parameter pane.<br>\n![Runbook Input and Output](media/automation-first-runbook-graphical/runbook-edit-toolbar-inputoutput.png)\n4. Specify *VMName* for the **Name**.  Keep *string* for the **Type**, but change **Mandatory** to *Yes*.  Click **OK**.\n5. Create a second mandatory input parameter called *VMServiceName* and then click **OK** to close the **Input and Output** pane.<br>\n![Runbook Input Parameters](media/automation-first-runbook-graphical/input-parameters.png) \n6. Select the **Start-AzureVM** activity and then click **Parameters**.\n7. Change the **Data source** for **Name** to **Runbook input** and then select **VMName**.<br>\n![Start-AzureVM Name Parameter](media/automation-first-runbook-graphical/vmname-property.png) \n8. Change the **Data source** for **ServiceName** to **Runbook input** and then select **VMServiceName**.<br>\n![Start-AzureVM Parameters](media/automation-first-runbook-graphical/start-azurevm-params-inputs.png) \n9. Save the runbook and open the Test pane.  Note that you can now provide values for the two input variables that will be used in the test. \n11.  Close the Test pane.\n12.  Click **Publish** to publish the new version of the runbook.\n13.  Stop the virtual machine that you started in the previous step.\n13.  Click **Start** to start the runbook.  Type in the **VMName** and **VMServiceName** for the virtual machine that you're going to start.<br>\n![Start Runbook](media/automation-first-runbook-graphical/start-runbook-input-params.png) \n14.  When the runbook completes, check that the virtual machine was started.\n\n## Step 8 - Create a conditional link\n\nWe will now modify the runbook so that it will only attempt to start the runbook if it is not already started.  We'll do this by adding a **Get-AzureVM** cmdlet to the runbook that will include the current state of the virtual machine.  We'll then add a conditional link that will only run **Start-AzureVM** if the current running state is stopped.  If the runbook isn't stopped, then output a message.\n\n1. Open **MyFirstRunbook** in the graphical editor.\n2. Remove the link between **Add-AzureAccount** and **Start-AzureVM** by clicking on it and then pressing the *Delete* key.\n3. In the Library control, expand **Cmdlets** and then **Azure**.\n4. Add **Get-AzureVM** to the canvas.\n5. Create a link from **Add-AzureAccount** to **Get-AzureVM**.  Create another link from **Get-AzureVM** to **Start-AzureVM**.<br>\n![Runbook with Get-AzureVM](media/automation-first-runbook-graphical/get-azurevm.png)   \n6.  Select **Get-AzureVM** and click **Parameters**.  Select the parameter set *GetVMByServiceAndVMName*.\n7.  For **Name**, set the **Date source** to **Runbook input** and then select **VMName**.   \n7.  For **ServiceName**, set the **Date source** to **Runbook input** and then select **VMServiceName**.  \n8.  Select the link between **Get-AzureVM** and **Start-AzureVM**.\n9.  In the Configuration pane, change **Apply condition** to **True**.  Note that the link turns to a dashed line indicating that the target activity will only be run if the condition resolves to true.\n10.  For the **Condition expression**, type *$ActivityOutput['Get-AzureVM'].PowerState -eq \"Stopped\"*.  **Start-AzureVM** will now only run if the virtual machine is stopped.<br>\n![Link condition](media/automation-first-runbook-graphical/link-condition.png) \n11.  In the Library control, expand **Cmdlets** and then **Microsoft.PowerShell.Utility**.\n12.  Add **Write-Output** to the canvas.\n13.  Create a link from **Get-AzureVM** to **Write-Output**.\n14.  Select the link and change **Apply condition** to **True**.\n14.  For the **Condition expression**, type *$ActivityOutput['Get-AzureVM'].PowerState -ne \"Stopped\"*.  **Write-Output** will now only run if the virtual machine is not stopped.<br>\n![Runbook with Write-Output](media/automation-first-runbook-graphical/write-output-link.png) \n15.  Select **Write-Output** and click **Parameters**.\n16.  For **InputObject**, change **Data source** to **PowerShell expression** and type in the expression *\"$VMName.Name already started.\"*.\n17.  Save the runbook and open the Test pane.\n18.  Start the runbook with the virtual machine stopped, and it should start.\n19.  Start the runbook with the virtual machine started, and you should get output that it is already started.\n \n\n## Related articles\n\n- [Graphical authoring in Azure Automation](automation-graphical-authoring-intro.md)\n- [My first textual runbook](automation-first-runbook-textual.md)\n\n \ntest\n"
}