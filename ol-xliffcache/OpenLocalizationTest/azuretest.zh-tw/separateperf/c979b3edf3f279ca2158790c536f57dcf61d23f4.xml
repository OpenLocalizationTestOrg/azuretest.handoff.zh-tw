{
  "nodes": [
    {
      "content": "Windows Phone Silverlight Engagement SDK Integration",
      "pos": [
        28,
        80
      ]
    },
    {
      "content": "How to Integrate Azure Mobile Engagement with Windows Phone Silverlight Apps",
      "pos": [
        100,
        176
      ]
    },
    {
      "content": "Windows Phone Silverlight Engagement SDK Integration",
      "pos": [
        544,
        596
      ]
    },
    {
      "content": "[AZURE.SELECTOR]",
      "pos": [
        600,
        616
      ]
    },
    {
      "content": "Windows Universal",
      "pos": [
        621,
        638
      ]
    },
    {
      "content": "Windows Phone Silverlight",
      "pos": [
        701,
        726
      ]
    },
    {
      "content": "iOS",
      "pos": [
        789,
        792
      ]
    },
    {
      "content": "Android",
      "pos": [
        845,
        852
      ]
    },
    {
      "content": "This procedure describes the simplest way to activate Azure Mobile Engagement's Analytics and Monitoring functions in your Windows Phone Silverlight application.",
      "pos": [
        907,
        1068
      ]
    },
    {
      "content": "The following steps are enough to activate the report of logs needed to compute all statistics regarding Users, Sessions, Activities, Crashes and Technicals.",
      "pos": [
        1070,
        1227
      ]
    },
    {
      "content": "The report of logs needed to compute other statistics like Events, Errors and Jobs must be done manually using the Engagement API (see <bpt id=\"p1\">[</bpt>How to use the advanced Mobile Engagement tagging API in your Windows Phone Silverlight app<ept id=\"p1\">](mobile-engagement-windows-phone-use-engagement-api.md)</ept> below) since these statistics are application dependent.",
      "pos": [
        1228,
        1568
      ]
    },
    {
      "content": "Supported versions",
      "pos": [
        1572,
        1590
      ]
    },
    {
      "content": "The Mobile Engagement SDK for Windows Silverlight can only be integrated into applications targeting :",
      "pos": [
        1592,
        1694
      ]
    },
    {
      "content": "Windows Phone 8.0",
      "pos": [
        1700,
        1717
      ]
    },
    {
      "content": "Windows Phone 8.1 Silverlight",
      "pos": [
        1722,
        1751
      ]
    },
    {
      "pos": [
        1755,
        1942
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> If you are targeting Windows Phone 8.1 (non-Silverlight) then refer to the <bpt id=\"p1\">[</bpt>Windows Universal integration procedure<ept id=\"p1\">](mobile-engagement-windows-store-integrate-engagement.md)</ept>."
    },
    {
      "content": "Install the Mobile Engagement Silverlight SDK",
      "pos": [
        1946,
        1991
      ]
    },
    {
      "content": "The Mobile Engagement SDK for Windows Silverlight is available as a Nuget package called <bpt id=\"p1\">*</bpt>MicrosoftAzure.MobileEngagement<ept id=\"p1\">*</ept>.",
      "pos": [
        1993,
        2116
      ]
    },
    {
      "content": "You can install it from the Visual Studio Nuget Package Manager.",
      "pos": [
        2117,
        2181
      ]
    },
    {
      "content": "Add the capabilities",
      "pos": [
        2186,
        2206
      ]
    },
    {
      "content": "The Engagement SDK needs some capabilities of the Windows Phone Silverlight SDK in order to work properly.",
      "pos": [
        2208,
        2314
      ]
    },
    {
      "pos": [
        2316,
        2436
      ],
      "content": "Open your <ph id=\"ph1\">`WMAppManifest.xml`</ph> file and be sure that the following capabilities are declared in the <ph id=\"ph2\">`Capabilities`</ph> panel:"
    },
    {
      "content": "Initialize the Engagement SDK",
      "pos": [
        2494,
        2523
      ]
    },
    {
      "content": "Engagement configuration",
      "pos": [
        2529,
        2553
      ]
    },
    {
      "pos": [
        2555,
        2667
      ],
      "content": "The Engagement configuration is centralized in the <ph id=\"ph1\">`Resources\\EngagementConfiguration.xml`</ph> file of your project."
    },
    {
      "content": "Edit this file to specify :",
      "pos": [
        2669,
        2696
      ]
    },
    {
      "pos": [
        2702,
        2797
      ],
      "content": "Your application connection string between tags <ph id=\"ph1\">`&lt;connectionString&gt;`</ph> and <ph id=\"ph2\">`&lt;\\connectionString&gt;`</ph>."
    },
    {
      "content": "If you want to specify it at runtime instead, you can call the following method before the Engagement agent initialization:",
      "pos": [
        2799,
        2922
      ]
    },
    {
      "content": "The connection string for your application is displayed on the Azure Management Portal.",
      "pos": [
        3291,
        3378
      ]
    },
    {
      "content": "Engagement initialization",
      "pos": [
        3384,
        3409
      ]
    },
    {
      "content": "When you create a new project, a <ph id=\"ph1\">`App.xaml.cs`</ph> file is generated.",
      "pos": [
        3411,
        3476
      ]
    },
    {
      "content": "This class inherits from <ph id=\"ph1\">`Application`</ph> and contains many important methods.",
      "pos": [
        3477,
        3552
      ]
    },
    {
      "content": "It will also be used to initialize the Engagement SDK.",
      "pos": [
        3553,
        3607
      ]
    },
    {
      "pos": [
        3609,
        3634
      ],
      "content": "Modify the <ph id=\"ph1\">`App.xaml.cs`</ph>:"
    },
    {
      "pos": [
        3640,
        3672
      ],
      "content": "Add to your <ph id=\"ph1\">`using`</ph> statements :"
    },
    {
      "pos": [
        3721,
        3799
      ],
      "content": "Insert <ph id=\"ph1\">`EngagementAgent.Instance.Init`</ph> in the <ph id=\"ph2\">`Application_Launching`</ph> method :"
    },
    {
      "pos": [
        3949,
        4034
      ],
      "content": "Insert <ph id=\"ph1\">`EngagementAgent.Instance.OnActivated`</ph> in the <ph id=\"ph2\">`Application_Activated`</ph> method :"
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.WARNING]</ph> We strongly discourage you to add the Engagement initialization in another place of your application.",
      "pos": [
        4191,
        4308
      ]
    },
    {
      "content": "However, be aware that the <ph id=\"ph1\">`EngagementAgent.Instance.Init`</ph> method runs on a dedicated thread, and not on the UI thread.",
      "pos": [
        4309,
        4428
      ]
    },
    {
      "content": "Basic reporting",
      "pos": [
        4432,
        4447
      ]
    },
    {
      "pos": [
        4453,
        4518
      ],
      "content": "Recommended method : overload your <ph id=\"ph1\">`PhoneApplicationPage`</ph> classes"
    },
    {
      "pos": [
        4520,
        4771
      ],
      "content": "In order to activate the report of all the logs required by Engagement to compute Users, Sessions, Activities, Crashes and Technical statistics, you can simply make all your <ph id=\"ph1\">`PhoneApplicationPage`</ph> sub-classes inherit from the <ph id=\"ph2\">`EngagementPage`</ph> classes."
    },
    {
      "content": "Here is an example of how to do this for a page of your application.",
      "pos": [
        4773,
        4841
      ]
    },
    {
      "content": "You can do the same thing for all pages of your application.",
      "pos": [
        4842,
        4902
      ]
    },
    {
      "content": "C# Source file",
      "pos": [
        4909,
        4923
      ]
    },
    {
      "pos": [
        4925,
        4959
      ],
      "content": "Modify your page <ph id=\"ph1\">`.xaml.cs`</ph> file :"
    },
    {
      "pos": [
        4965,
        4997
      ],
      "content": "Add to your <ph id=\"ph1\">`using`</ph> statements :"
    },
    {
      "pos": [
        5046,
        5100
      ],
      "content": "Replace <ph id=\"ph1\">`PhoneApplicationPage`</ph> with <ph id=\"ph2\">`EngagementPage`</ph> :"
    },
    {
      "content": "Without Engagement:",
      "pos": [
        5104,
        5123
      ]
    },
    {
      "content": "With Engagement:",
      "pos": [
        5284,
        5300
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.WARNING]</ph> If your page inherits from the <ph id=\"ph2\">`OnNavigatedTo`</ph> method, be careful to let the <ph id=\"ph3\">`base.OnNavigatedTo(e)`</ph> call.",
      "pos": [
        5507,
        5629
      ]
    },
    {
      "content": "Otherwise, the activity will not be reported.",
      "pos": [
        5630,
        5675
      ]
    },
    {
      "content": "Indeed, the <ph id=\"ph1\">`EngagementPage`</ph> is calling <ph id=\"ph2\">`StartActivity`</ph> inside the <ph id=\"ph3\">`OnNavigatedTo`</ph> method.",
      "pos": [
        5676,
        5766
      ]
    },
    {
      "content": "XAML file",
      "pos": [
        5773,
        5782
      ]
    },
    {
      "pos": [
        5784,
        5815
      ],
      "content": "Modify your page <ph id=\"ph1\">`.xaml`</ph> file :"
    },
    {
      "content": "Add to your namespaces declarations :",
      "pos": [
        5821,
        5858
      ]
    },
    {
      "pos": [
        5988,
        6059
      ],
      "content": "Replace <ph id=\"ph1\">`phone:PhoneApplicationPage`</ph> with <ph id=\"ph2\">`engagement:EngagementPage`</ph> :"
    },
    {
      "content": "Without Engagement:",
      "pos": [
        6063,
        6082
      ]
    },
    {
      "content": "With Engagement:",
      "pos": [
        6192,
        6208
      ]
    },
    {
      "content": "Override the default behavior",
      "pos": [
        6457,
        6486
      ]
    },
    {
      "content": "By default, the class name of the page is reported as the activity name, with no extra.",
      "pos": [
        6488,
        6575
      ]
    },
    {
      "content": "If the class uses the \"Page\" suffix, Engagement will also remove it.",
      "pos": [
        6576,
        6644
      ]
    },
    {
      "content": "If you want to override the default behavior for the name, simply add this to your code:",
      "pos": [
        6646,
        6734
      ]
    },
    {
      "content": "If you want to report some extra information with your activity, you can add this to your code:",
      "pos": [
        6904,
        6999
      ]
    },
    {
      "pos": [
        7184,
        7261
      ],
      "content": "These methods are called from within the <ph id=\"ph1\">`OnNavigatedTo`</ph> method of your page."
    },
    {
      "pos": [
        7267,
        7316
      ],
      "content": "Alternate method: call <ph id=\"ph1\">`StartActivity()`</ph> manually"
    },
    {
      "pos": [
        7318,
        7480
      ],
      "content": "If you cannot or do not want to overload your <ph id=\"ph1\">`PhoneApplicationPage`</ph> classes, you can instead start your activities by calling <ph id=\"ph2\">`EngagementAgent`</ph> methods directly."
    },
    {
      "pos": [
        7482,
        7583
      ],
      "content": "We recommend to call <ph id=\"ph1\">`StartActivity`</ph> inside your <ph id=\"ph2\">`OnNavigatedTo`</ph> method of your PhoneApplicationPage."
    },
    {
      "pos": [
        7772,
        7828
      ],
      "content": "<ph id=\"ph1\">[AZURE.IMPORTANT]</ph> Ensure you end your session correctly."
    },
    {
      "content": "The SDK automatically calls the <ph id=\"ph1\">`EndActivity`</ph> method when the application is closed.",
      "pos": [
        7833,
        7917
      ]
    },
    {
      "content": "Thus, it is <bpt id=\"p1\">**</bpt>HIGHLY<ept id=\"p1\">**</ept> recommended to call the <ph id=\"ph1\">`StartActivity`</ph> method whenever the activity of the user change, and to <bpt id=\"p2\">**</bpt>NEVER<ept id=\"p2\">**</ept> call the <ph id=\"ph2\">`EndActivity`</ph> method.",
      "pos": [
        7918,
        8077
      ]
    },
    {
      "content": "This method sends a message to the Engagement server that the current user has left the application and this impacts all application logs.",
      "pos": [
        8078,
        8216
      ]
    },
    {
      "content": "Advanced reporting",
      "pos": [
        8220,
        8238
      ]
    },
    {
      "content": "Optionally, you may want to report application specific events, errors and jobs, to do so, use the others methods found in the <ph id=\"ph1\">`EngagementAgent`</ph> class.",
      "pos": [
        8240,
        8391
      ]
    },
    {
      "content": "The Engagement API allows to use all of Engagement's advanced capabilities.",
      "pos": [
        8392,
        8467
      ]
    },
    {
      "pos": [
        8469,
        8648
      ],
      "content": "For further information, see <bpt id=\"p1\">[</bpt>How to use the advanced Mobile Engagement tagging API in your Windows Phone Silverlight app<ept id=\"p1\">](../mobile-engagement-windows-phone-use-engagement-api/)</ept>."
    },
    {
      "content": "Advanced configuration",
      "pos": [
        8652,
        8674
      ]
    },
    {
      "content": "Disable automatic crash reporting",
      "pos": [
        8680,
        8713
      ]
    },
    {
      "content": "You can disable the automatic crash reporting feature of Engagement.",
      "pos": [
        8715,
        8783
      ]
    },
    {
      "content": "Then, when an unhandled exception will occur, Engagement won't do anything.",
      "pos": [
        8784,
        8859
      ]
    },
    {
      "pos": [
        8863,
        9059
      ],
      "content": "<ph id=\"ph1\">[AZURE.WARNING]</ph> If you plan to disable this feature, be aware that when a unhandled crash will occur in your app, Engagement will not send the crash <bpt id=\"p1\">**</bpt>AND<ept id=\"p1\">**</ept> it will not close the session and jobs."
    },
    {
      "content": "To disable automatic crash reporting, just customize your configuration depending on the way you declared it :",
      "pos": [
        9061,
        9171
      ]
    },
    {
      "pos": [
        9178,
        9217
      ],
      "content": "From <ph id=\"ph1\">`EngagementConfiguration.xml`</ph> file"
    },
    {
      "pos": [
        9219,
        9297
      ],
      "content": "Set report crash to <ph id=\"ph1\">`false`</ph> between <ph id=\"ph2\">`&lt;reportCrash&gt;`</ph> and <ph id=\"ph3\">`&lt;/reportCrash&gt;`</ph> tags."
    },
    {
      "pos": [
        9304,
        9353
      ],
      "content": "From <ph id=\"ph1\">`EngagementConfiguration`</ph> object at run time"
    },
    {
      "content": "Set report crash to false using your EngagementConfiguration object.",
      "pos": [
        9355,
        9423
      ]
    },
    {
      "content": "Burst mode",
      "pos": [
        9779,
        9789
      ]
    },
    {
      "content": "By default, the Engagement service reports logs in real time.",
      "pos": [
        9791,
        9852
      ]
    },
    {
      "content": "If your application reports logs very frequently, it is better to buffer the logs and to report them all at once on a regular time base (this is called the “burst mode”).",
      "pos": [
        9853,
        10023
      ]
    },
    {
      "content": "To do so, call the method:",
      "pos": [
        10025,
        10051
      ]
    },
    {
      "content": "The argument is a value in <bpt id=\"p1\">**</bpt>milliseconds<ept id=\"p1\">**</ept>.",
      "pos": [
        10119,
        10163
      ]
    },
    {
      "content": "At any time, if you want to reactivate the real-time logging, just call the method without any parameter, or with the 0 value.",
      "pos": [
        10164,
        10290
      ]
    },
    {
      "content": "The burst mode slightly increase the battery life but has an impact on the Engagement Monitor: all sessions and jobs duration will be rounded to the burst threshold (thus, sessions and jobs shorter than the burst threshold may not be visible).",
      "pos": [
        10292,
        10535
      ]
    },
    {
      "content": "It is recommended to use a burst threshold no longer than 30000 (30s).",
      "pos": [
        10536,
        10606
      ]
    },
    {
      "content": "You have to be aware that saved logs are limited to 300 items.",
      "pos": [
        10607,
        10669
      ]
    },
    {
      "content": "If sending is too long you can lose some logs.",
      "pos": [
        10670,
        10716
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.WARNING]</ph> The burst threshold cannot be configured to a period lesser than one second.",
      "pos": [
        10720,
        10812
      ]
    },
    {
      "content": "If you try to do so, the SDK will show a trace with the error and will automatically reset to the default value, that is, zero seconds.",
      "pos": [
        10813,
        10948
      ]
    },
    {
      "content": "This will trigger the SDK to report the logs in real-time.",
      "pos": [
        10949,
        11007
      ]
    },
    {
      "content": "test",
      "pos": [
        11010,
        11014
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Windows Phone Silverlight Engagement SDK Integration\" \n    description=\"How to Integrate Azure Mobile Engagement with Windows Phone Silverlight Apps\"                  \n    services=\"mobile-engagement\" \n    documentationCenter=\"mobile\" \n    authors=\"piyushjo\" \n    manager=\"dwrede\" \n    editor=\"\" />\n\n<tags \n    ms.service=\"mobile-engagement\" \n    ms.workload=\"mobile\" \n    ms.tgt_pltfrm=\"mobile-windows-phone\" \n    ms.devlang=\"dotnet\" \n    ms.topic=\"article\" \n    ms.date=\"07/07/2015\" \n    ms.author=\"piyushjo\" />\n\n#Windows Phone Silverlight Engagement SDK Integration\n\n> [AZURE.SELECTOR] \n- [Windows Universal](mobile-engagement-windows-store-integrate-engagement.md) \n- [Windows Phone Silverlight](mobile-engagement-windows-phone-integrate-engagement.md) \n- [iOS](mobile-engagement-ios-integrate-engagement.md) \n- [Android](mobile-engagement-android-integrate-engagement.md) \n\nThis procedure describes the simplest way to activate Azure Mobile Engagement's Analytics and Monitoring functions in your Windows Phone Silverlight application.\n\nThe following steps are enough to activate the report of logs needed to compute all statistics regarding Users, Sessions, Activities, Crashes and Technicals. The report of logs needed to compute other statistics like Events, Errors and Jobs must be done manually using the Engagement API (see [How to use the advanced Mobile Engagement tagging API in your Windows Phone Silverlight app](mobile-engagement-windows-phone-use-engagement-api.md) below) since these statistics are application dependent.\n\n##Supported versions\n\nThe Mobile Engagement SDK for Windows Silverlight can only be integrated into applications targeting :\n\n-   Windows Phone 8.0\n-   Windows Phone 8.1 Silverlight\n\n> [AZURE.NOTE] If you are targeting Windows Phone 8.1 (non-Silverlight) then refer to the [Windows Universal integration procedure](mobile-engagement-windows-store-integrate-engagement.md).\n\n##Install the Mobile Engagement Silverlight SDK\n\nThe Mobile Engagement SDK for Windows Silverlight is available as a Nuget package called *MicrosoftAzure.MobileEngagement*. You can install it from the Visual Studio Nuget Package Manager. \n\n##Add the capabilities\n\nThe Engagement SDK needs some capabilities of the Windows Phone Silverlight SDK in order to work properly.\n\nOpen your `WMAppManifest.xml` file and be sure that the following capabilities are declared in the `Capabilities` panel:\n\n-   `ID_CAP_NETWORKING`\n-   `ID_CAP_IDENTITY_DEVICE`\n\n##Initialize the Engagement SDK\n\n### Engagement configuration\n\nThe Engagement configuration is centralized in the `Resources\\EngagementConfiguration.xml` file of your project.\n\nEdit this file to specify :\n\n-   Your application connection string between tags `<connectionString>` and `<\\connectionString>`.\n\nIf you want to specify it at runtime instead, you can call the following method before the Engagement agent initialization:\n\n    /* Engagement configuration. */\n    EngagementConfiguration engagementConfiguration = new EngagementConfiguration();\n    engagementConfiguration.Agent.ConnectionString = \"Endpoint={appCollection}.{domain};AppId={appId};SdkKey={sdkKey}\";\n\n    /* Initialize Engagement agent with above configuration. */\n    EngagementAgent.Instance.Init(engagementConfiguration);\n\nThe connection string for your application is displayed on the Azure Management Portal.\n\n### Engagement initialization\n\nWhen you create a new project, a `App.xaml.cs` file is generated. This class inherits from `Application` and contains many important methods. It will also be used to initialize the Engagement SDK.\n\nModify the `App.xaml.cs`:\n\n-   Add to your `using` statements :\n\n        using Microsoft.Azure.Engagement;\n\n-   Insert `EngagementAgent.Instance.Init` in the `Application_Launching` method :\n\n        private void Application_Launching(object sender, LaunchingEventArgs e)\n        {\n          EngagementAgent.Instance.Init();\n        }\n\n-   Insert `EngagementAgent.Instance.OnActivated` in the `Application_Activated` method :\n\n        private void Application_Activated(object sender, ActivatedEventArgs e)\n        {\n           EngagementAgent.Instance.OnActivated(e);\n        }\n\n> [AZURE.WARNING] We strongly discourage you to add the Engagement initialization in another place of your application. However, be aware that the `EngagementAgent.Instance.Init` method runs on a dedicated thread, and not on the UI thread.\n\n##Basic reporting\n\n### Recommended method : overload your `PhoneApplicationPage` classes\n\nIn order to activate the report of all the logs required by Engagement to compute Users, Sessions, Activities, Crashes and Technical statistics, you can simply make all your `PhoneApplicationPage` sub-classes inherit from the `EngagementPage` classes.\n\nHere is an example of how to do this for a page of your application. You can do the same thing for all pages of your application.\n\n#### C# Source file\n\nModify your page `.xaml.cs` file :\n\n-   Add to your `using` statements :\n\n        using Microsoft.Azure.Engagement;\n\n-   Replace `PhoneApplicationPage` with `EngagementPage` :\n\n**Without Engagement:**\n\n        namespace Example\n        {\n          public partial class ExamplePage : PhoneApplicationPage\n          {\n            [...]\n          }\n        }\n\n**With Engagement:**\n\n        using Microsoft.Azure.Engagement;\n        \n        namespace Example\n        {\n          public partial class ExamplePage : EngagementPage \n          {\n            [...]\n          }\n        }\n\n> [AZURE.WARNING] If your page inherits from the `OnNavigatedTo` method, be careful to let the `base.OnNavigatedTo(e)` call. Otherwise, the activity will not be reported. Indeed, the `EngagementPage` is calling `StartActivity` inside the `OnNavigatedTo` method.\n\n#### XAML file\n\nModify your page `.xaml` file :\n\n-   Add to your namespaces declarations :\n\n        xmlns:engagement=\"clr-namespace:Microsoft.Azure.Engagement;assembly=Microsoft.Azure.Engagement.EngagementAgent.WP\"\n\n-   Replace `phone:PhoneApplicationPage` with `engagement:EngagementPage` :\n\n**Without Engagement:**\n\n        <phone:PhoneApplicationPage>\n            <!-- layout -->\n        </phone:PhoneApplicationPage>\n\n**With Engagement:**\n\n        <engagement:EngagementPage \n            xmlns:engagement=\"clr-namespace:Microsoft.Azure.Engagement;assembly=Microsoft.Azure.Engagement.EngagementAgent.WP\">\n        \n            <!-- layout -->\n        </engagement:EngagementPage >\n\n#### Override the default behavior\n\nBy default, the class name of the page is reported as the activity name, with no extra. If the class uses the \"Page\" suffix, Engagement will also remove it.\n\nIf you want to override the default behavior for the name, simply add this to your code:\n\n        // in the .xaml.cs file\n        protected override string GetEngagementPageName()\n        {\n           /* your code */\n           return \"new name\";\n        }\n\nIf you want to report some extra information with your activity, you can add this to your code:\n\n        // in the .xaml.cs file\n        protected override Dictionary<object,object> GetEngagementPageExtra()\n        {\n           /* your code */\n           return extra;\n        }\n\nThese methods are called from within the `OnNavigatedTo` method of your page.\n\n### Alternate method: call `StartActivity()` manually\n\nIf you cannot or do not want to overload your `PhoneApplicationPage` classes, you can instead start your activities by calling `EngagementAgent` methods directly.\n\nWe recommend to call `StartActivity` inside your `OnNavigatedTo` method of your PhoneApplicationPage.\n\n        protected override void OnNavigatedTo(NavigationEventArgs e)\n        {\n           base.OnNavigatedTo(e);\n           EngagementAgent.Instance.StartActivity(\"MyPage\");\n        }\n\n> [AZURE.IMPORTANT] Ensure you end your session correctly.\n>\n> The SDK automatically calls the `EndActivity` method when the application is closed. Thus, it is **HIGHLY** recommended to call the `StartActivity` method whenever the activity of the user change, and to **NEVER** call the `EndActivity` method. This method sends a message to the Engagement server that the current user has left the application and this impacts all application logs.\n\n##Advanced reporting\n\nOptionally, you may want to report application specific events, errors and jobs, to do so, use the others methods found in the `EngagementAgent` class. The Engagement API allows to use all of Engagement's advanced capabilities.\n\nFor further information, see [How to use the advanced Mobile Engagement tagging API in your Windows Phone Silverlight app](../mobile-engagement-windows-phone-use-engagement-api/).\n\n##Advanced configuration\n\n### Disable automatic crash reporting\n\nYou can disable the automatic crash reporting feature of Engagement. Then, when an unhandled exception will occur, Engagement won't do anything.\n\n> [AZURE.WARNING] If you plan to disable this feature, be aware that when a unhandled crash will occur in your app, Engagement will not send the crash **AND** it will not close the session and jobs.\n\nTo disable automatic crash reporting, just customize your configuration depending on the way you declared it :\n\n#### From `EngagementConfiguration.xml` file\n\nSet report crash to `false` between `<reportCrash>` and `</reportCrash>` tags.\n\n#### From `EngagementConfiguration` object at run time\n\nSet report crash to false using your EngagementConfiguration object.\n\n        /* Engagement configuration. */\n\n        EngagementConfiguration engagementConfiguration = new EngagementConfiguration(); engagementConfiguration.Agent.ConnectionString = \"Endpoint={appCollection}.{domain};AppId={appId};SdkKey={sdkKey}\";\n        /\\* Disable Engagement crash reporting. \\*/ engagementConfiguration.Agent.ReportCrash = false;\n\n### Burst mode\n\nBy default, the Engagement service reports logs in real time. If your application reports logs very frequently, it is better to buffer the logs and to report them all at once on a regular time base (this is called the “burst mode”).\n\nTo do so, call the method:\n\n        EngagementAgent.Instance.SetBurstThreshold(int everyMs);\n\nThe argument is a value in **milliseconds**. At any time, if you want to reactivate the real-time logging, just call the method without any parameter, or with the 0 value.\n\nThe burst mode slightly increase the battery life but has an impact on the Engagement Monitor: all sessions and jobs duration will be rounded to the burst threshold (thus, sessions and jobs shorter than the burst threshold may not be visible). It is recommended to use a burst threshold no longer than 30000 (30s). You have to be aware that saved logs are limited to 300 items. If sending is too long you can lose some logs.\n\n> [AZURE.WARNING] The burst threshold cannot be configured to a period lesser than one second. If you try to do so, the SDK will show a trace with the error and will automatically reset to the default value, that is, zero seconds. This will trigger the SDK to report the logs in real-time.\n \ntest\n"
}