<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Process vehicle sensor data with Apache Storm on HDInsight | Microsoft Azure</source>
          <target state="new">Process vehicle sensor data with Apache Storm on HDInsight | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to process vehicle sensor data from Event Hubs using Apache Storm on HDInsight.</source>
          <target state="new">Learn how to process vehicle sensor data from Event Hubs using Apache Storm on HDInsight.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Add model data from DocumentDB, and store output to storage.</source>
          <target state="new">Add model data from DocumentDB, and store output to storage.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Process vehicle sensor data from Azure Event Hubs using Apache Storm on HDInsight</source>
          <target state="new">Process vehicle sensor data from Azure Event Hubs using Apache Storm on HDInsight</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Learn how to process vehicle sensor data from Azure Event Hubs using Apache Storm on HDInsight.</source>
          <target state="new">Learn how to process vehicle sensor data from Azure Event Hubs using Apache Storm on HDInsight.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This example reads sensor data from Azure Event Hubs, enriches the data by referencing data stored in Azure DocumentDB, and finally store the data into Azure Storage using the Hadoop File System (HDFS).</source>
          <target state="new">This example reads sensor data from Azure Event Hubs, enriches the data by referencing data stored in Azure DocumentDB, and finally store the data into Azure Storage using the Hadoop File System (HDFS).</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>HDInsight and the Internet of Things (IoT) architecture diagram</source>
          <target state="new">HDInsight and the Internet of Things (IoT) architecture diagram</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Adding sensors to vehicles allows you to predict equipment problems based on historical data trends, as well as make improvements to future versions based on usage pattern analysis.</source>
          <target state="new">Adding sensors to vehicles allows you to predict equipment problems based on historical data trends, as well as make improvements to future versions based on usage pattern analysis.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>While traditional MapReduce batch processing can be used for this analysis, you must be able to quickly and efficiently load the data from all vehicles into Hadoop before MapReduce processing can occur.</source>
          <target state="new">While traditional MapReduce batch processing can be used for this analysis, you must be able to quickly and efficiently load the data from all vehicles into Hadoop before MapReduce processing can occur.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Additionally, you may wish to do analysis for critical failure paths (engine temperature, brakes, etc.) in real time.</source>
          <target state="new">Additionally, you may wish to do analysis for critical failure paths (engine temperature, brakes, etc.) in real time.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Azure Event Hubs are built to handle the massive volume of data generated by sensors, and Apache Storm on HDInsight can be used to load and process the data before storing it into HDFS (backed by Azure Storage) for additional MapReduce processing.</source>
          <target state="new">Azure Event Hubs are built to handle the massive volume of data generated by sensors, and Apache Storm on HDInsight can be used to load and process the data before storing it into HDFS (backed by Azure Storage) for additional MapReduce processing.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="new">Solution</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Telemetry data for engine temperature, ambient temperature, and vehicle speed is recorded by sensors, then sent to Event Hubs along with the car's Vehicle Identification Number (VIN) and a time stamp.</source>
          <target state="new">Telemetry data for engine temperature, ambient temperature, and vehicle speed is recorded by sensors, then sent to Event Hubs along with the car's Vehicle Identification Number (VIN) and a time stamp.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>From there, a Storm Topology running on an Apache Storm on HDInsight cluster reads the data, processes it, and stores it into HDFS.</source>
          <target state="new">From there, a Storm Topology running on an Apache Storm on HDInsight cluster reads the data, processes it, and stores it into HDFS.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>During processing, the VIN is used to retrieve model information from Azure DocumentDB.</source>
          <target state="new">During processing, the VIN is used to retrieve model information from Azure DocumentDB.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This is added to the data stream before it is stored.</source>
          <target state="new">This is added to the data stream before it is stored.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The components used in the Storm Topology are:</source>
          <target state="new">The components used in the Storm Topology are:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EventHubSpout<ept id="p1">**</ept> - reads data from Azure Event Hubs</source>
          <target state="new"><bpt id="p1">**</bpt>EventHubSpout<ept id="p1">**</ept> - reads data from Azure Event Hubs</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TypeConversionBolt<ept id="p1">**</ept> - converts the JSON string from Event Hubs into a tuple containing the individual data values for engine temperature, ambient temperature, speed, VIN, and timestamp</source>
          <target state="new"><bpt id="p1">**</bpt>TypeConversionBolt<ept id="p1">**</ept> - converts the JSON string from Event Hubs into a tuple containing the individual data values for engine temperature, ambient temperature, speed, VIN, and timestamp</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DataReferencBolt<ept id="p1">**</ept> - looks up the vehicle model from DocumentDB using the VIN</source>
          <target state="new"><bpt id="p1">**</bpt>DataReferencBolt<ept id="p1">**</ept> - looks up the vehicle model from DocumentDB using the VIN</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WasbStoreBolt<ept id="p1">**</ept> - stores the data to HDFS (Azure Storage)</source>
          <target state="new"><bpt id="p1">**</bpt>WasbStoreBolt<ept id="p1">**</ept> - stores the data to HDFS (Azure Storage)</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following is a diagram of this solution:</source>
          <target state="new">The following is a diagram of this solution:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>storm topology</source>
          <target state="new">storm topology</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This is a simplified diagram, and each component in the solution may have multiple instances.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This is a simplified diagram, and each component in the solution may have multiple instances.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, the multiple instances of each component in the topology are distributed across the nodes in the Storm on HDInsight cluster.</source>
          <target state="new">For example, the multiple instances of each component in the topology are distributed across the nodes in the Storm on HDInsight cluster.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="new">Implementation</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A complete, automated solution for this scenario is available as part of the <ph id="ph1">&lt;a href="https://github.com/hdinsight/hdinsight-storm-examples" target="_blank"&gt;</ph>HDInsight-Storm-Examples<ph id="ph2">&lt;/a&gt;</ph> repository on GitHub.</source>
          <target state="new">A complete, automated solution for this scenario is available as part of the <ph id="ph1">&lt;a href="https://github.com/hdinsight/hdinsight-storm-examples" target="_blank"&gt;</ph>HDInsight-Storm-Examples<ph id="ph2">&lt;/a&gt;</ph> repository on GitHub.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To use this example, follow the steps in the <bpt id="p1">[</bpt>IoTExample README.MD<ept id="p1">](https://github.com/hdinsight/hdinsight-storm-examples/blob/master/IotExample/README.md)</ept>.</source>
          <target state="new">To use this example, follow the steps in the <bpt id="p1">[</bpt>IoTExample README.MD<ept id="p1">](https://github.com/hdinsight/hdinsight-storm-examples/blob/master/IotExample/README.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more example Storm topologies, see <bpt id="p1">[</bpt>Example topologies for Storm on HDInsight<ept id="p1">](hdinsight-storm-example-topology.md)</ept>.</source>
          <target state="new">For more example Storm topologies, see <bpt id="p1">[</bpt>Example topologies for Storm on HDInsight<ept id="p1">](hdinsight-storm-example-topology.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61496001c1ced5368c64dc9c899d53b3c8277e60</xliffext:olfilehash>
  </header>
</xliff>