<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Media Services Concepts</source>
          <target state="new">Azure Media Services Concepts</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This topic gives an overview of Azure Media Services Concepts</source>
          <target state="new">This topic gives an overview of Azure Media Services Concepts</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Media Services Concepts</source>
          <target state="new">Azure Media Services Concepts</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic gives an overview of the most important Media Services concepts.</source>
          <target state="new">This topic gives an overview of the most important Media Services concepts.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="assets"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Assets and Storage</source>
          <target state="new"><ph id="ph1">&lt;a id="assets"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Assets and Storage</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Assets</source>
          <target state="new">Assets</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">[</bpt>Asset<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974277.aspx)</ept> contains digital files (including video, audio, images, thumbnail collections, text tracks and closed caption files) and the metadata about these files.</source>
          <target state="new">An <bpt id="p1">[</bpt>Asset<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974277.aspx)</ept> contains digital files (including video, audio, images, thumbnail collections, text tracks and closed caption files) and the metadata about these files.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>After the digital files are uploaded into an asset, they could be used in the Media Services encoding and streaming workflows.</source>
          <target state="new">After the digital files are uploaded into an asset, they could be used in the Media Services encoding and streaming workflows.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An asset is mapped to a blob container in the Azure Storage account and the files in the asset are stored as blobs in that container.</source>
          <target state="new">An asset is mapped to a blob container in the Azure Storage account and the files in the asset are stored as blobs in that container.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When deciding what media content to upload and store in an asset, the following considerations apply:</source>
          <target state="new">When deciding what media content to upload and store in an asset, the following considerations apply:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An asset should contain only a single, unique instance of media content.</source>
          <target state="new">An asset should contain only a single, unique instance of media content.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, a single edit of a TV episode, movie, or advertisement.</source>
          <target state="new">For example, a single edit of a TV episode, movie, or advertisement.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An asset should not contain multiple renditions or edits of an audiovisual file.</source>
          <target state="new">An asset should not contain multiple renditions or edits of an audiovisual file.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>One example of an improper usage of an Asset would be attempting to store more than one TV episode, advertisement, or multiple camera angles from a single production inside an asset.</source>
          <target state="new">One example of an improper usage of an Asset would be attempting to store more than one TV episode, advertisement, or multiple camera angles from a single production inside an asset.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Storing multiple renditions or edits of an audiovisual file in an asset can result in difficulties submitting encoding jobs, streaming and securing the delivery of the asset later in the workflow.</source>
          <target state="new">Storing multiple renditions or edits of an audiovisual file in an asset can result in difficulties submitting encoding jobs, streaming and securing the delivery of the asset later in the workflow.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Asset file</source>
          <target state="new">Asset file</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">[</bpt>AssetFile<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974275.aspx)</ept> represents an actual video or audio file that is stored in a blob container.</source>
          <target state="new">An <bpt id="p1">[</bpt>AssetFile<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974275.aspx)</ept> represents an actual video or audio file that is stored in a blob container.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An asset file is always associated with an asset, and an asset may contain one or many files.</source>
          <target state="new">An asset file is always associated with an asset, and an asset may contain one or many files.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Media Services Encoder task fails if an asset file object is not associated with a digital file in a blob container.</source>
          <target state="new">The Media Services Encoder task fails if an asset file object is not associated with a digital file in a blob container.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AssetFile<ept id="p1">**</ept> instance and the actual media file are two distinct objects.</source>
          <target state="new">The <bpt id="p1">**</bpt>AssetFile<ept id="p1">**</ept> instance and the actual media file are two distinct objects.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The AssetFile instance contains metadata about the media file, while the media file contains the actual media content.</source>
          <target state="new">The AssetFile instance contains metadata about the media file, while the media file contains the actual media content.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You should not attempt to change the contents of blob containers that were generated by Media Services without using Media Service APIs.</source>
          <target state="new">You should not attempt to change the contents of blob containers that were generated by Media Services without using Media Service APIs.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Asset encryption options</source>
          <target state="new">Asset encryption options</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Depending on the type of content you want to upload, store, and deliver, Media Services provides various encryption options that you can choose from.</source>
          <target state="new">Depending on the type of content you want to upload, store, and deliver, Media Services provides various encryption options that you can choose from.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>None<ept id="p1">**</ept> No encryption is used.</source>
          <target state="new"><bpt id="p1">**</bpt>None<ept id="p1">**</ept> No encryption is used.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This is the default value.</source>
          <target state="new">This is the default value.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Note that when using this option your content is not protected in transit or at rest in storage.</source>
          <target state="new">Note that when using this option your content is not protected in transit or at rest in storage.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you plan to deliver an MP4 using progressive download, use this option to upload your content.</source>
          <target state="new">If you plan to deliver an MP4 using progressive download, use this option to upload your content.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StorageEncrypted<ept id="p1">**</ept> – Use this option to encrypt your clear content locally using AES 256 bit encryption and then upload it to Azure Storage where it is stored encrypted at rest.</source>
          <target state="new"><bpt id="p1">**</bpt>StorageEncrypted<ept id="p1">**</ept> – Use this option to encrypt your clear content locally using AES 256 bit encryption and then upload it to Azure Storage where it is stored encrypted at rest.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Assets protected with storage encryption are automatically unencrypted and placed in an encrypted file system prior to encoding, and optionally re-encrypted prior to uploading back as a new output asset.</source>
          <target state="new">Assets protected with storage encryption are automatically unencrypted and placed in an encrypted file system prior to encoding, and optionally re-encrypted prior to uploading back as a new output asset.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The primary use case for storage encryption is when you want to secure your high quality input media files with strong encryption at rest on disk.</source>
          <target state="new">The primary use case for storage encryption is when you want to secure your high quality input media files with strong encryption at rest on disk.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In order to deliver a storage encrypted asset, you must configure the asset’s delivery policy so Media Services knows how you want to deliver your content.</source>
          <target state="new">In order to deliver a storage encrypted asset, you must configure the asset’s delivery policy so Media Services knows how you want to deliver your content.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Before your asset can be streamed, the streaming server removes the storage encryption and streams your content using the specified delivery policy (for example, AES, PlayReady, or no encryption).</source>
          <target state="new">Before your asset can be streamed, the streaming server removes the storage encryption and streams your content using the specified delivery policy (for example, AES, PlayReady, or no encryption).</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CommonEncryptionProtected<ept id="p1">**</ept> - Use this option if you want to encrypt (or upload already encrypted) content with Common Encryption or PlayReady DRM (for example, Smooth Streaming protected with PlayReady DRM).</source>
          <target state="new"><bpt id="p1">**</bpt>CommonEncryptionProtected<ept id="p1">**</ept> - Use this option if you want to encrypt (or upload already encrypted) content with Common Encryption or PlayReady DRM (for example, Smooth Streaming protected with PlayReady DRM).</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EnvelopeEncryptionProtected<ept id="p1">**</ept> – Use this option if you want to protect (or upload already protected) HTTP Live Streaming (HLS) encrypted with Advanced Encryption Standard (AES).</source>
          <target state="new"><bpt id="p1">**</bpt>EnvelopeEncryptionProtected<ept id="p1">**</ept> – Use this option if you want to protect (or upload already protected) HTTP Live Streaming (HLS) encrypted with Advanced Encryption Standard (AES).</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Note that if you are uploading HLS already encrypted with AES, it must have been encrypted by Transform Manager.</source>
          <target state="new">Note that if you are uploading HLS already encrypted with AES, it must have been encrypted by Transform Manager.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Access policy</source>
          <target state="new">Access policy</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">[</bpt>AccessPolicy<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974297.aspx)</ept> defines permissions (like read, write, and list) and duration of access to an asset.</source>
          <target state="new">An <bpt id="p1">[</bpt>AccessPolicy<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974297.aspx)</ept> defines permissions (like read, write, and list) and duration of access to an asset.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You would usually pass an AccessPolicy object to a locator that would then be used to access the files contained in an asset.</source>
          <target state="new">You would usually pass an AccessPolicy object to a locator that would then be used to access the files contained in an asset.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Blob container</source>
          <target state="new">Blob container</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A blob container provides a grouping of a set of blobs.</source>
          <target state="new">A blob container provides a grouping of a set of blobs.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Blob containers are used in Media Services as boundary point for access control, and Shared Access Signature (SAS) locators on assets.</source>
          <target state="new">Blob containers are used in Media Services as boundary point for access control, and Shared Access Signature (SAS) locators on assets.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An Azure Storage account can contain an unlimited number of blob containers.</source>
          <target state="new">An Azure Storage account can contain an unlimited number of blob containers.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A container can store an unlimited number of blobs.</source>
          <target state="new">A container can store an unlimited number of blobs.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>You should not attempt to change the contents of blob containers that were generated by Media Services without using Media Service APIs.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>You should not attempt to change the contents of blob containers that were generated by Media Services without using Media Service APIs.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="locators"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Locators</source>
          <target state="new"><ph id="ph1">&lt;a id="locators"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Locators</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Locator<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974308.aspx)</ept>s provide an entry point to access the files contained in an asset.</source>
          <target state="new"><bpt id="p1">[</bpt>Locator<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974308.aspx)</ept>s provide an entry point to access the files contained in an asset.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An access policy is used to define the permissions and duration that a client has access to a given asset.</source>
          <target state="new">An access policy is used to define the permissions and duration that a client has access to a given asset.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Locators can have a many to one relationship with an access policy, such that different locators can provide different start times and connection types to different clients while all using the same permission and duration settings; however, because of a shared access policy restriction set by Azure storage services, you cannot have more than five unique locators associated with a given asset at one time.</source>
          <target state="new">Locators can have a many to one relationship with an access policy, such that different locators can provide different start times and connection types to different clients while all using the same permission and duration settings; however, because of a shared access policy restriction set by Azure storage services, you cannot have more than five unique locators associated with a given asset at one time.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Media Services supports two types of locators: OnDemandOrigin locators, used to stream media (for example, MPEG DASH, HLS, or Smooth Streaming) or progressively download media and SAS URL locators, used to upload or download media files to\from Azure storage.</source>
          <target state="new">Media Services supports two types of locators: OnDemandOrigin locators, used to stream media (for example, MPEG DASH, HLS, or Smooth Streaming) or progressively download media and SAS URL locators, used to upload or download media files to\from Azure storage.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Note, that the list permission (AccessPermissions.List) should not be used when creating an OrDemandOrigin locator.</source>
          <target state="new">Note, that the list permission (AccessPermissions.List) should not be used when creating an OrDemandOrigin locator.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Storage account</source>
          <target state="new">Storage account</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>All access to Azure Storage is done through a storage account.</source>
          <target state="new">All access to Azure Storage is done through a storage account.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A Media Service account can associate with one or more storage accounts.</source>
          <target state="new">A Media Service account can associate with one or more storage accounts.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An account can contain an unlimited number of containers, as long as their total size is under 500TB per storage account.</source>
          <target state="new">An account can contain an unlimited number of containers, as long as their total size is under 500TB per storage account.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Media Services provides SDK level tooling to allow you to manage multiple storage accounts and load balance the distribution of your assets during upload to these accounts based on metrics or random distribution.</source>
          <target state="new">Media Services provides SDK level tooling to allow you to manage multiple storage accounts and load balance the distribution of your assets during upload to these accounts based on metrics or random distribution.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information, see Working with <bpt id="p1">[</bpt>Azure Storage<ept id="p1">](https://msdn.microsoft.com/library/azure/dn767951.aspx)</ept>.</source>
          <target state="new">For more information, see Working with <bpt id="p1">[</bpt>Azure Storage<ept id="p1">](https://msdn.microsoft.com/library/azure/dn767951.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Jobs and tasks</source>
          <target state="new">Jobs and tasks</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>job<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974289.aspx)</ept> is typically used to process (for example, index or encode) one audio/video presentation.</source>
          <target state="new">A <bpt id="p1">[</bpt>job<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974289.aspx)</ept> is typically used to process (for example, index or encode) one audio/video presentation.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you are processing multiple videos, create a job for each video to be encoded.</source>
          <target state="new">If you are processing multiple videos, create a job for each video to be encoded.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A job contains metadata about the processing to be performed.</source>
          <target state="new">A job contains metadata about the processing to be performed.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Each job contains one or more <bpt id="p1">[</bpt>task<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974286.aspx)</ept>s that specify an atomic processing task, its input Assets, output Assets, a media processor and its associated settings.</source>
          <target state="new">Each job contains one or more <bpt id="p1">[</bpt>task<ept id="p1">](https://msdn.microsoft.com/library/azure/hh974286.aspx)</ept>s that specify an atomic processing task, its input Assets, output Assets, a media processor and its associated settings.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Tasks within a job can be chained together, where the output asset of one task is given as the input asset to the next task.</source>
          <target state="new">Tasks within a job can be chained together, where the output asset of one task is given as the input asset to the next task.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In this way one job can contain all of the processing necessary for a media presentation.</source>
          <target state="new">In this way one job can contain all of the processing necessary for a media presentation.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="encoding"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Encoding \ packaging</source>
          <target state="new"><ph id="ph1">&lt;a id="encoding"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Encoding \ packaging</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="new">Encoding</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In order to deliver digital video over the internet you must compress the media.</source>
          <target state="new">In order to deliver digital video over the internet you must compress the media.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Digital video files are quite large and may be too big to deliver over the internet or for your customers’ devices to display properly.</source>
          <target state="new">Digital video files are quite large and may be too big to deliver over the internet or for your customers’ devices to display properly.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>People watch videos on a variety of devices from TVs with set-top boxes, desktop PCs to tablets and smartphones.</source>
          <target state="new">People watch videos on a variety of devices from TVs with set-top boxes, desktop PCs to tablets and smartphones.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Each of these devices have different bandwidth and compression requirements.</source>
          <target state="new">Each of these devices have different bandwidth and compression requirements.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Encoding is the process of compressing video and audio using Compressor/Decompressors or codecs.</source>
          <target state="new">Encoding is the process of compressing video and audio using Compressor/Decompressors or codecs.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Transcoding is the process of taking a video that has been encoded and re-encode it into a different encoding format.</source>
          <target state="new">Transcoding is the process of taking a video that has been encoded and re-encode it into a different encoding format.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Since most cameras encode video to some degree, most encoding work done on Azure Media Services is technically transcoding.</source>
          <target state="new">Since most cameras encode video to some degree, most encoding work done on Azure Media Services is technically transcoding.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Codecs and File formats</source>
          <target state="new">Codecs and File formats</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Codecs have two components: one to compress digital media files for transmission and the other to decompress digital media files for playback.</source>
          <target state="new">Codecs have two components: one to compress digital media files for transmission and the other to decompress digital media files for playback.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>There are audio codecs that compress and decompress audio and video codecs that compress and decompress video.</source>
          <target state="new">There are audio codecs that compress and decompress audio and video codecs that compress and decompress video.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Codecs can use lossless or lossy compression.</source>
          <target state="new">Codecs can use lossless or lossy compression.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Lossless codecs preserve all of the information when compression occurs.</source>
          <target state="new">Lossless codecs preserve all of the information when compression occurs.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When the file is decompressed, the result is a file that is identical to the input media, making lossless codecs well suited to archiving and storage.</source>
          <target state="new">When the file is decompressed, the result is a file that is identical to the input media, making lossless codecs well suited to archiving and storage.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Lossy codecs lose some of the information when encoding and produce smaller files (than the original) at the cost of video quality and are well suited to streaming over the internet.</source>
          <target state="new">Lossy codecs lose some of the information when encoding and produce smaller files (than the original) at the cost of video quality and are well suited to streaming over the internet.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The two main codecs used by the Azure Media Encoder to encode are H.264 and VC-1.</source>
          <target state="new">The two main codecs used by the Azure Media Encoder to encode are H.264 and VC-1.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Other codecs may be available in our partner ecosystem of encoders.</source>
          <target state="new">Other codecs may be available in our partner ecosystem of encoders.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Media Services Encoders</source>
          <target state="new">Media Services Encoders</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For information about supported encoders, see <bpt id="p1">[</bpt>Encoders<ept id="p1">](media-services-encode-asset.md)</ept>.</source>
          <target state="new">For information about supported encoders, see <bpt id="p1">[</bpt>Encoders<ept id="p1">](media-services-encode-asset.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Live Streaming</source>
          <target state="new">Live Streaming</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>On-premises (3rd Party) Live transcoder</source>
          <target state="new">On-premises (3rd Party) Live transcoder</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An on-premises live encoder (or transcoder) converts the audio and/or video that is streamed from your camera into a multi-bitrate RTMP or Smooth Streaming format.</source>
          <target state="new">An on-premises live encoder (or transcoder) converts the audio and/or video that is streamed from your camera into a multi-bitrate RTMP or Smooth Streaming format.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The transcoder then pushes the adaptive bitrate RTMP or Smooth streams into a Media Services channel.</source>
          <target state="new">The transcoder then pushes the adaptive bitrate RTMP or Smooth streams into a Media Services channel.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Media Services then broadcasts the event live.</source>
          <target state="new">Media Services then broadcasts the event live.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Channel</source>
          <target state="new">Channel</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In Media Services, <bpt id="p1">[</bpt>Channel<ept id="p1">](https://msdn.microsoft.com/library/azure/dn783458.aspx)</ept>s are responsible for processing live streaming content.</source>
          <target state="new">In Media Services, <bpt id="p1">[</bpt>Channel<ept id="p1">](https://msdn.microsoft.com/library/azure/dn783458.aspx)</ept>s are responsible for processing live streaming content.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A Channel provides an input endpoint (ingest URL) that you then provide to a live transcoder.</source>
          <target state="new">A Channel provides an input endpoint (ingest URL) that you then provide to a live transcoder.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The channel receives live input streams from the live transcoder and makes it available for streaming through one or more StreamingEndpoints.</source>
          <target state="new">The channel receives live input streams from the live transcoder and makes it available for streaming through one or more StreamingEndpoints.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Channels also provide a preview endpoint (preview URL) that you use to preview and validate your stream before further processing and delivery.</source>
          <target state="new">Channels also provide a preview endpoint (preview URL) that you use to preview and validate your stream before further processing and delivery.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You can get the ingest URL and the preview URL when you create the channel.</source>
          <target state="new">You can get the ingest URL and the preview URL when you create the channel.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To get these URLs, the channel does not have to be in the started state.</source>
          <target state="new">To get these URLs, the channel does not have to be in the started state.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When you are ready to start pushing data from a live transcoder into the channel, the channel must be started.</source>
          <target state="new">When you are ready to start pushing data from a live transcoder into the channel, the channel must be started.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Once the live transcoder starts ingesting data, you can preview your stream.</source>
          <target state="new">Once the live transcoder starts ingesting data, you can preview your stream.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Each Media Services account can contain multiple Channels, multiple Programs, and multiple StreamingEndpoints.</source>
          <target state="new">Each Media Services account can contain multiple Channels, multiple Programs, and multiple StreamingEndpoints.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Depending on the bandwidth and security needs, StreamingEndpoint services can be dedicated to one or more channels.</source>
          <target state="new">Depending on the bandwidth and security needs, StreamingEndpoint services can be dedicated to one or more channels.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Any StreamingEndpoint can pull from any Channel.</source>
          <target state="new">Any StreamingEndpoint can pull from any Channel.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>By default you can add 5 channels to your Media Services account.</source>
          <target state="new">By default you can add 5 channels to your Media Services account.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To request a higher limit, see <bpt id="p1">[</bpt>Quotas and limitations<ept id="p1">](media-services-quotas-and-limitations.md)</ept>.</source>
          <target state="new">To request a higher limit, see <bpt id="p1">[</bpt>Quotas and limitations<ept id="p1">](media-services-quotas-and-limitations.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You are only billed when your channel is in running state.</source>
          <target state="new">You are only billed when your channel is in running state.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Program</source>
          <target state="new">Program</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>Program<ept id="p1">](https://msdn.microsoft.com/library/azure/dn783463.aspx)</ept> enables you to control the publishing and storage of segments in a live stream.</source>
          <target state="new">A <bpt id="p1">[</bpt>Program<ept id="p1">](https://msdn.microsoft.com/library/azure/dn783463.aspx)</ept> enables you to control the publishing and storage of segments in a live stream.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Channels manage Programs.</source>
          <target state="new">Channels manage Programs.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The Channel and Program relationship is very similar to traditional media where a channel has a constant stream of content and a program is scoped to some timed event on that channel.</source>
          <target state="new">The Channel and Program relationship is very similar to traditional media where a channel has a constant stream of content and a program is scoped to some timed event on that channel.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can specify the number of hours you want to retain the recorded content for the program by setting the <bpt id="p1">**</bpt>ArchiveWindowLength<ept id="p1">**</ept> property.</source>
          <target state="new">You can specify the number of hours you want to retain the recorded content for the program by setting the <bpt id="p1">**</bpt>ArchiveWindowLength<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This value can be set from a minimum of 5 minutes to a maximum of 25 hours.</source>
          <target state="new">This value can be set from a minimum of 5 minutes to a maximum of 25 hours.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>ArchiveWindowLength also dictates the maximum amount of time clients can seek back in time from the current live position.</source>
          <target state="new">ArchiveWindowLength also dictates the maximum amount of time clients can seek back in time from the current live position.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Programs can run over the specified amount of time, but content that falls behind the window length is continuously discarded.</source>
          <target state="new">Programs can run over the specified amount of time, but content that falls behind the window length is continuously discarded.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This value of this property also determines how long the client manifests can grow.</source>
          <target state="new">This value of this property also determines how long the client manifests can grow.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Each program is associated with an Asset.</source>
          <target state="new">Each program is associated with an Asset.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To publish the program you must create a locator for the associated asset.</source>
          <target state="new">To publish the program you must create a locator for the associated asset.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Having this locator will enable you to build a streaming URL that you can provide to your clients.</source>
          <target state="new">Having this locator will enable you to build a streaming URL that you can provide to your clients.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A channel supports up to three concurrently running programs so you can create multiple archives of the same incoming stream.</source>
          <target state="new">A channel supports up to three concurrently running programs so you can create multiple archives of the same incoming stream.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This allows you to publish and archive different parts of an event as needed.</source>
          <target state="new">This allows you to publish and archive different parts of an event as needed.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For example, your business requirement is to archive 6 hours of a program, but to broadcast only last 10 minutes.</source>
          <target state="new">For example, your business requirement is to archive 6 hours of a program, but to broadcast only last 10 minutes.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To accomplish this, you need to create two concurrently running programs.</source>
          <target state="new">To accomplish this, you need to create two concurrently running programs.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>One program is set to archive 6 hours of the event but the program is not published.</source>
          <target state="new">One program is set to archive 6 hours of the event but the program is not published.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The other program is set to archive for 10 minutes and this program is published.</source>
          <target state="new">The other program is set to archive for 10 minutes and this program is published.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Protecting content</source>
          <target state="new">Protecting content</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Dynamic encryption</source>
          <target state="new">Dynamic encryption</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Microsoft Azure Media Services enables you to deliver your content encrypted  dynamically with Advanced Encryption Standard (AES) (using 128-bit encryption keys) and PlayReady DRM.</source>
          <target state="new">Microsoft Azure Media Services enables you to deliver your content encrypted  dynamically with Advanced Encryption Standard (AES) (using 128-bit encryption keys) and PlayReady DRM.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Currently, you can encrypt the following streaming formats: HLS, MPEG DASH, and Smooth Streaming.</source>
          <target state="new">Currently, you can encrypt the following streaming formats: HLS, MPEG DASH, and Smooth Streaming.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You cannot encrypt HDS streaming format, or progressive downloads.</source>
          <target state="new">You cannot encrypt HDS streaming format, or progressive downloads.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If you want for Media Services to encrypt an asset, you need to associate an encryption key (CommonEncryption or EnvelopeEncryption) with your asset and also configure authorization policies for the key.</source>
          <target state="new">If you want for Media Services to encrypt an asset, you need to associate an encryption key (CommonEncryption or EnvelopeEncryption) with your asset and also configure authorization policies for the key.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>You also need to configure the asset's delivery policy.</source>
          <target state="new">You also need to configure the asset's delivery policy.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If you want to stream a storage encrypted asset, make sure to specify how you want to deliver it by configuring asset delivery policy.</source>
          <target state="new">If you want to stream a storage encrypted asset, make sure to specify how you want to deliver it by configuring asset delivery policy.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>When a stream is requested by a player, Media Services uses the specified key to dynamically encrypt your content using AES or PlayReady encryption.</source>
          <target state="new">When a stream is requested by a player, Media Services uses the specified key to dynamically encrypt your content using AES or PlayReady encryption.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>To decrypt the stream, the player will request the key from the key delivery service.</source>
          <target state="new">To decrypt the stream, the player will request the key from the key delivery service.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>To decide whether or not the user is authorized to get the key, the service evaluates the authorization policies that you specified for the key.</source>
          <target state="new">To decide whether or not the user is authorized to get the key, the service evaluates the authorization policies that you specified for the key.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>PlayReady DRM licenses and AES clear keys delivery services</source>
          <target state="new">PlayReady DRM licenses and AES clear keys delivery services</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Media Services provides a service for delivering PlayReady licenses and AES clear keys to authorized clients.</source>
          <target state="new">Media Services provides a service for delivering PlayReady licenses and AES clear keys to authorized clients.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>You can use the Azure Management Portal, REST API, or Media Services SDK for .NET to configure authorization and authentication policies for your licenses and keys.</source>
          <target state="new">You can use the Azure Management Portal, REST API, or Media Services SDK for .NET to configure authorization and authentication policies for your licenses and keys.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Note if you are using the Portal, you can configure one AES policy (which will be applied to all the AES encrypted content) and one PlayReady policy (which will be applied to all the PlayReady encrypted content).</source>
          <target state="new">Note if you are using the Portal, you can configure one AES policy (which will be applied to all the AES encrypted content) and one PlayReady policy (which will be applied to all the PlayReady encrypted content).</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Use Media Services SDK for .NET if you want more control over the configurations.</source>
          <target state="new">Use Media Services SDK for .NET if you want more control over the configurations.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>PlayReady license template</source>
          <target state="new">PlayReady license template</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Media Services provides a service for delivering PlayReady licenses.</source>
          <target state="new">Media Services provides a service for delivering PlayReady licenses.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>When the end user player (for example, Silverlight) tries to play your PlayReady protected content, a request is sent to the license delivery service to obtain a license.</source>
          <target state="new">When the end user player (for example, Silverlight) tries to play your PlayReady protected content, a request is sent to the license delivery service to obtain a license.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If the license service approves the request, it issues the license which is sent to the client and can be used to decrypt and play the specified content.</source>
          <target state="new">If the license service approves the request, it issues the license which is sent to the client and can be used to decrypt and play the specified content.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Licenses contain the rights and restrictions that you want for the PlayReady DRM runtime to enforce when a user is trying to playback protected content.</source>
          <target state="new">Licenses contain the rights and restrictions that you want for the PlayReady DRM runtime to enforce when a user is trying to playback protected content.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Media Services provides APIs that let you configure your PlayReady licenses.</source>
          <target state="new">Media Services provides APIs that let you configure your PlayReady licenses.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Media Services PlayReady License Template Overview<ept id="p1">](https://msdn.microsoft.com/library/azure/dn783459.aspx)</ept></source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Media Services PlayReady License Template Overview<ept id="p1">](https://msdn.microsoft.com/library/azure/dn783459.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Token restriction</source>
          <target state="new">Token restriction</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The content key authorization policy could have one or more authorization restrictions: open, token restriction, or IP restriction.</source>
          <target state="new">The content key authorization policy could have one or more authorization restrictions: open, token restriction, or IP restriction.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The token restricted policy must be accompanied by a token issued by a Secure Token Service (STS).</source>
          <target state="new">The token restricted policy must be accompanied by a token issued by a Secure Token Service (STS).</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Media Services supports tokens in the Simple Web Tokens (SWT) format and JSON Web Token (JWT) format.</source>
          <target state="new">Media Services supports tokens in the Simple Web Tokens (SWT) format and JSON Web Token (JWT) format.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Media Services does not provide Secure Token Services.</source>
          <target state="new">Media Services does not provide Secure Token Services.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>You can create a custom STS or leverage Microsoft Azure ACS to issue tokens.</source>
          <target state="new">You can create a custom STS or leverage Microsoft Azure ACS to issue tokens.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The STS must be configured to create a token signed with the specified key and issue claims that you specified in the token restriction configuration.</source>
          <target state="new">The STS must be configured to create a token signed with the specified key and issue claims that you specified in the token restriction configuration.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The Media Services key delivery service will return the requested key (or license) to the client if the token is valid and the claims in the token match those configured for the key (or license).</source>
          <target state="new">The Media Services key delivery service will return the requested key (or license) to the client if the token is valid and the claims in the token match those configured for the key (or license).</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>When configuring the token restricted policy, you must specify the primary verification key, issuer and audience parameters.</source>
          <target state="new">When configuring the token restricted policy, you must specify the primary verification key, issuer and audience parameters.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The primary verification key contains the key that the token was signed with, issuer is the secure token service that issues the token.</source>
          <target state="new">The primary verification key contains the key that the token was signed with, issuer is the secure token service that issues the token.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The audience (sometimes called scope) describes the intent of the token or the resource the token authorizes access to.</source>
          <target state="new">The audience (sometimes called scope) describes the intent of the token or the resource the token authorizes access to.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The Media Services key delivery service validates that these values in the token match the values in the template.</source>
          <target state="new">The Media Services key delivery service validates that these values in the token match the values in the template.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Delivering</source>
          <target state="new">Delivering</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="dynamic_packaging"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Dynamic packaging</source>
          <target state="new"><ph id="ph1">&lt;a id="dynamic_packaging"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Dynamic packaging</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>When working with Media Services it is recommended to encode your mezzanine files into an adaptive bitrate MP4 set and then convert the set to the desired format using the <bpt id="p1">[</bpt>Dynamic Packaging<ept id="p1">](media-services-dynamic-packaging-overview.md)</ept>.</source>
          <target state="new">When working with Media Services it is recommended to encode your mezzanine files into an adaptive bitrate MP4 set and then convert the set to the desired format using the <bpt id="p1">[</bpt>Dynamic Packaging<ept id="p1">](media-services-dynamic-packaging-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Streaming endpoint</source>
          <target state="new">Streaming endpoint</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A StreamingEndpoint represents a streaming service that can deliver content directly to a client player application, or to a Content Delivery Network (CDN) for further distribution (Azure Media Services now provides the Azure CDN integration.) The outbound stream from a StreamingEndpoint service can be a live stream, or a video on demand Asset in your Media Services account.</source>
          <target state="new">A StreamingEndpoint represents a streaming service that can deliver content directly to a client player application, or to a Content Delivery Network (CDN) for further distribution (Azure Media Services now provides the Azure CDN integration.) The outbound stream from a StreamingEndpoint service can be a live stream, or a video on demand Asset in your Media Services account.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In addition, you can control the capacity of the StreamingEndpoint service to handle growing bandwidth needs by adjusting scale units (also known as streaming units).</source>
          <target state="new">In addition, you can control the capacity of the StreamingEndpoint service to handle growing bandwidth needs by adjusting scale units (also known as streaming units).</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>It is recommended to allocate one or more scale units for applications in production environment.</source>
          <target state="new">It is recommended to allocate one or more scale units for applications in production environment.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Scale units provide you with both dedicated egress capacity that can be purchased in increments of 200 Mbps and additional functionality which currently includes use dynamic packaging.</source>
          <target state="new">Scale units provide you with both dedicated egress capacity that can be purchased in increments of 200 Mbps and additional functionality which currently includes use dynamic packaging.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>It is recommended to use dynamic packaging and\or dynamic encryption.</source>
          <target state="new">It is recommended to use dynamic packaging and\or dynamic encryption.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>To use these features, you must have at least one streaming unit for the endpoint from which you plan to stream.</source>
          <target state="new">To use these features, you must have at least one streaming unit for the endpoint from which you plan to stream.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>For more information, see  <bpt id="p1">[</bpt>Scaling streaming units<ept id="p1">](media-services-manage-origins.md#scale_streaming_endpoints)</ept>.</source>
          <target state="new">For more information, see  <bpt id="p1">[</bpt>Scaling streaming units<ept id="p1">](media-services-manage-origins.md#scale_streaming_endpoints)</ept>.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>By default you can have up to 2 streaming endpoints in your Media Services account.</source>
          <target state="new">By default you can have up to 2 streaming endpoints in your Media Services account.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>To request a higher limit, see <bpt id="p1">[</bpt>Quotas and limitations<ept id="p1">](media-services-quotas-and-limitations.md)</ept>.</source>
          <target state="new">To request a higher limit, see <bpt id="p1">[</bpt>Quotas and limitations<ept id="p1">](media-services-quotas-and-limitations.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>You are only billed when your StreamingEndpoint is in running state.</source>
          <target state="new">You are only billed when your StreamingEndpoint is in running state.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Asset delivery policy</source>
          <target state="new">Asset delivery policy</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>One of the steps in the Media Services content delivery workflow is configuring <bpt id="p1">[</bpt>delivery policies for assets <ept id="p1">](https://msdn.microsoft.com/library/azure/dn799055.aspx)</ept>that you want to be streamed.</source>
          <target state="new">One of the steps in the Media Services content delivery workflow is configuring <bpt id="p1">[</bpt>delivery policies for assets <ept id="p1">](https://msdn.microsoft.com/library/azure/dn799055.aspx)</ept>that you want to be streamed.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The asset delivery policy tells Media Services how you want for your asset to be delivered: into which streaming protocol should your asset be dynamically packaged (for example, MPEG DASH, HLS, Smooth Streaming, or all), whether or not you want to dynamically encrypt your asset and how (envelope or common encryption).</source>
          <target state="new">The asset delivery policy tells Media Services how you want for your asset to be delivered: into which streaming protocol should your asset be dynamically packaged (for example, MPEG DASH, HLS, Smooth Streaming, or all), whether or not you want to dynamically encrypt your asset and how (envelope or common encryption).</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If you have a storage encrypted asset, before your asset can be streamed, the streaming server removes the storage encryption and streams your content using the specified delivery policy.</source>
          <target state="new">If you have a storage encrypted asset, before your asset can be streamed, the streaming server removes the storage encryption and streams your content using the specified delivery policy.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>For example, to deliver your asset encrypted with Advanced Encryption Standard (AES) encryption key, set the policy type to DynamicEnvelopeEncryption.</source>
          <target state="new">For example, to deliver your asset encrypted with Advanced Encryption Standard (AES) encryption key, set the policy type to DynamicEnvelopeEncryption.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>To remove storage encryption and stream the asset in the clear, set the policy type to NoDynamicEncryption.</source>
          <target state="new">To remove storage encryption and stream the asset in the clear, set the policy type to NoDynamicEncryption.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Progressive download</source>
          <target state="new">Progressive download</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Progressive download allows you to start playing media before the entire file has been downloaded.</source>
          <target state="new">Progressive download allows you to start playing media before the entire file has been downloaded.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>You can only progressively download an MP4 file.</source>
          <target state="new">You can only progressively download an MP4 file.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Note that you must decrypt encrypted assets if you wish for them to be available for progressive download.</source>
          <target state="new">Note that you must decrypt encrypted assets if you wish for them to be available for progressive download.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>To provide users with progressive download URLs, you first must create an OnDemandOrigin locator.</source>
          <target state="new">To provide users with progressive download URLs, you first must create an OnDemandOrigin locator.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Creating the locator, gives you the base Path to the asset.</source>
          <target state="new">Creating the locator, gives you the base Path to the asset.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>You then need to append the name of MP4 file.</source>
          <target state="new">You then need to append the name of MP4 file.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Streaming URLs</source>
          <target state="new">Streaming URLs</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Streaming your content to clients.</source>
          <target state="new">Streaming your content to clients.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>To provide users with streaming URLs, you first must create an OnDemandOrigin locator.</source>
          <target state="new">To provide users with streaming URLs, you first must create an OnDemandOrigin locator.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Creating the locator, gives you the base Path to the asset that contains the content you want to stream.</source>
          <target state="new">Creating the locator, gives you the base Path to the asset that contains the content you want to stream.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>However, to be able to stream this content you need to modify this path further.</source>
          <target state="new">However, to be able to stream this content you need to modify this path further.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>To construct a full URL to the streaming manifest file, you must concatenate the locator’s Path value and the manifest (filename.ism) file name.</source>
          <target state="new">To construct a full URL to the streaming manifest file, you must concatenate the locator’s Path value and the manifest (filename.ism) file name.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Then, append /Manifest and an appropriate format (if needed) to the locator path.</source>
          <target state="new">Then, append /Manifest and an appropriate format (if needed) to the locator path.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>You can also stream your content over an SSL connection.</source>
          <target state="new">You can also stream your content over an SSL connection.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>To do this, make sure your streaming URLs start with HTTPS.</source>
          <target state="new">To do this, make sure your streaming URLs start with HTTPS.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Note that you can only stream over SSL if the streaming endpoint from which you deliver your content was created after September 10th, 2014.</source>
          <target state="new">Note that you can only stream over SSL if the streaming endpoint from which you deliver your content was created after September 10th, 2014.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If your streaming URLs are based on the streaming endpoints created after September 10th, the URL contains “streaming.mediaservices.windows.net” (the new format).</source>
          <target state="new">If your streaming URLs are based on the streaming endpoints created after September 10th, the URL contains “streaming.mediaservices.windows.net” (the new format).</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Streaming URLs that contain “origin.mediaservices.windows.net” (the old format) do not support SSL.</source>
          <target state="new">Streaming URLs that contain “origin.mediaservices.windows.net” (the old format) do not support SSL.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>If your URL is in the old format and you want to be able to stream over SSL, create a new streaming endpoint.</source>
          <target state="new">If your URL is in the old format and you want to be able to stream over SSL, create a new streaming endpoint.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Use URLs created based on the new streaming endpoint to stream your content over SSL.</source>
          <target state="new">Use URLs created based on the new streaming endpoint to stream your content over SSL.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The following list describes different streaming formats and gives examples:</source>
          <target state="new">The following list describes different streaming formats and gives examples:</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Smooth Streaming</source>
          <target state="new">Smooth Streaming</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>{streaming endpoint name-media services account name}.streaming.mediaservices.windows.net/{locator ID}/{filename}.ism/Manifest</source>
          <target state="new">{streaming endpoint name-media services account name}.streaming.mediaservices.windows.net/{locator ID}/{filename}.ism/Manifest</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>MPEG DASH</source>
          <target state="new">MPEG DASH</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>{streaming endpoint name-media services account name}.streaming.mediaservices.windows.net/{locator ID}/{filename}.ism/Manifest(format=mpd-time-csf)</source>
          <target state="new">{streaming endpoint name-media services account name}.streaming.mediaservices.windows.net/{locator ID}/{filename}.ism/Manifest(format=mpd-time-csf)</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Apple HTTP Live Streaming (HLS) V4</source>
          <target state="new">Apple HTTP Live Streaming (HLS) V4</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>{streaming endpoint name-media services account name}.streaming.mediaservices.windows.net/{locator ID}/{filename}.ism/Manifest(format=m3u8-aapl)</source>
          <target state="new">{streaming endpoint name-media services account name}.streaming.mediaservices.windows.net/{locator ID}/{filename}.ism/Manifest(format=m3u8-aapl)</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Apple HTTP Live Streaming (HLS) V3</source>
          <target state="new">Apple HTTP Live Streaming (HLS) V3</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>{streaming endpoint name-media services account name}.streaming.mediaservices.windows.net/{locator ID}/{filename}.ism/Manifest(format=m3u8-aapl-v3)</source>
          <target state="new">{streaming endpoint name-media services account name}.streaming.mediaservices.windows.net/{locator ID}/{filename}.ism/Manifest(format=m3u8-aapl-v3)</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>HDS (for Adobe PrimeTime/Access licensees only)</source>
          <target state="new">HDS (for Adobe PrimeTime/Access licensees only)</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>{streaming endpoint name-media services account name}.streaming.mediaservices.windows.net/{locator ID}/{filename}.ism/Manifest(format=f4m-f4f)</source>
          <target state="new">{streaming endpoint name-media services account name}.streaming.mediaservices.windows.net/{locator ID}/{filename}.ism/Manifest(format=f4m-f4f)</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="new">test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93325efe99f6a40728087f23caeefb312bcce429</xliffext:olfilehash>
  </header>
</xliff>